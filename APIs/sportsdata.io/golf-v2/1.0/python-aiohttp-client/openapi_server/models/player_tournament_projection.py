# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.player_round import PlayerRound
from openapi_server import util


class PlayerTournamentProjection(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, birdies: float=None, bogey_free_rounds: float=None, bogeys: float=None, bounce_back_count: float=None, consecutive_birdie_or_better_count: float=None, country: str=None, double_bogeys: float=None, double_eagles: float=None, draft_kings_salary: int=None, eagles: float=None, earnings: float=None, fan_duel_salary: int=None, fantasy_draft_salary: int=None, fantasy_points: float=None, fantasy_points_draft_kings: float=None, fantasy_points_fan_duel: float=None, fantasy_points_fantasy_draft: float=None, fantasy_points_yahoo: float=None, fed_ex_points: int=None, hole_in_ones: float=None, is_alternate: bool=None, is_withdrawn: bool=None, made_cut: float=None, made_cut_did_not_finish: bool=None, name: str=None, odds_to_win: float=None, odds_to_win_description: str=None, pars: float=None, player_id: int=None, player_tournament_id: int=None, rank: int=None, rounds: List[PlayerRound]=None, rounds_under_seventy: float=None, rounds_with_five_or_more_birdies_or_better: float=None, streaks_of_five_birdies_or_better: float=None, streaks_of_four_birdies_or_better: float=None, streaks_of_six_birdies_or_better: float=None, streaks_of_three_birdies_or_better: float=None, tee_time: str=None, total_score: float=None, total_strokes: float=None, total_through: int=None, tournament_id: int=None, tournament_status: str=None, triple_bogeys: float=None, win: float=None, worse_than_double_bogey: float=None, worse_than_triple_bogey: float=None):
        """PlayerTournamentProjection - a model defined in OpenAPI

        :param birdies: The birdies of this PlayerTournamentProjection.
        :param bogey_free_rounds: The bogey_free_rounds of this PlayerTournamentProjection.
        :param bogeys: The bogeys of this PlayerTournamentProjection.
        :param bounce_back_count: The bounce_back_count of this PlayerTournamentProjection.
        :param consecutive_birdie_or_better_count: The consecutive_birdie_or_better_count of this PlayerTournamentProjection.
        :param country: The country of this PlayerTournamentProjection.
        :param double_bogeys: The double_bogeys of this PlayerTournamentProjection.
        :param double_eagles: The double_eagles of this PlayerTournamentProjection.
        :param draft_kings_salary: The draft_kings_salary of this PlayerTournamentProjection.
        :param eagles: The eagles of this PlayerTournamentProjection.
        :param earnings: The earnings of this PlayerTournamentProjection.
        :param fan_duel_salary: The fan_duel_salary of this PlayerTournamentProjection.
        :param fantasy_draft_salary: The fantasy_draft_salary of this PlayerTournamentProjection.
        :param fantasy_points: The fantasy_points of this PlayerTournamentProjection.
        :param fantasy_points_draft_kings: The fantasy_points_draft_kings of this PlayerTournamentProjection.
        :param fantasy_points_fan_duel: The fantasy_points_fan_duel of this PlayerTournamentProjection.
        :param fantasy_points_fantasy_draft: The fantasy_points_fantasy_draft of this PlayerTournamentProjection.
        :param fantasy_points_yahoo: The fantasy_points_yahoo of this PlayerTournamentProjection.
        :param fed_ex_points: The fed_ex_points of this PlayerTournamentProjection.
        :param hole_in_ones: The hole_in_ones of this PlayerTournamentProjection.
        :param is_alternate: The is_alternate of this PlayerTournamentProjection.
        :param is_withdrawn: The is_withdrawn of this PlayerTournamentProjection.
        :param made_cut: The made_cut of this PlayerTournamentProjection.
        :param made_cut_did_not_finish: The made_cut_did_not_finish of this PlayerTournamentProjection.
        :param name: The name of this PlayerTournamentProjection.
        :param odds_to_win: The odds_to_win of this PlayerTournamentProjection.
        :param odds_to_win_description: The odds_to_win_description of this PlayerTournamentProjection.
        :param pars: The pars of this PlayerTournamentProjection.
        :param player_id: The player_id of this PlayerTournamentProjection.
        :param player_tournament_id: The player_tournament_id of this PlayerTournamentProjection.
        :param rank: The rank of this PlayerTournamentProjection.
        :param rounds: The rounds of this PlayerTournamentProjection.
        :param rounds_under_seventy: The rounds_under_seventy of this PlayerTournamentProjection.
        :param rounds_with_five_or_more_birdies_or_better: The rounds_with_five_or_more_birdies_or_better of this PlayerTournamentProjection.
        :param streaks_of_five_birdies_or_better: The streaks_of_five_birdies_or_better of this PlayerTournamentProjection.
        :param streaks_of_four_birdies_or_better: The streaks_of_four_birdies_or_better of this PlayerTournamentProjection.
        :param streaks_of_six_birdies_or_better: The streaks_of_six_birdies_or_better of this PlayerTournamentProjection.
        :param streaks_of_three_birdies_or_better: The streaks_of_three_birdies_or_better of this PlayerTournamentProjection.
        :param tee_time: The tee_time of this PlayerTournamentProjection.
        :param total_score: The total_score of this PlayerTournamentProjection.
        :param total_strokes: The total_strokes of this PlayerTournamentProjection.
        :param total_through: The total_through of this PlayerTournamentProjection.
        :param tournament_id: The tournament_id of this PlayerTournamentProjection.
        :param tournament_status: The tournament_status of this PlayerTournamentProjection.
        :param triple_bogeys: The triple_bogeys of this PlayerTournamentProjection.
        :param win: The win of this PlayerTournamentProjection.
        :param worse_than_double_bogey: The worse_than_double_bogey of this PlayerTournamentProjection.
        :param worse_than_triple_bogey: The worse_than_triple_bogey of this PlayerTournamentProjection.
        """
        self.openapi_types = {
            'birdies': float,
            'bogey_free_rounds': float,
            'bogeys': float,
            'bounce_back_count': float,
            'consecutive_birdie_or_better_count': float,
            'country': str,
            'double_bogeys': float,
            'double_eagles': float,
            'draft_kings_salary': int,
            'eagles': float,
            'earnings': float,
            'fan_duel_salary': int,
            'fantasy_draft_salary': int,
            'fantasy_points': float,
            'fantasy_points_draft_kings': float,
            'fantasy_points_fan_duel': float,
            'fantasy_points_fantasy_draft': float,
            'fantasy_points_yahoo': float,
            'fed_ex_points': int,
            'hole_in_ones': float,
            'is_alternate': bool,
            'is_withdrawn': bool,
            'made_cut': float,
            'made_cut_did_not_finish': bool,
            'name': str,
            'odds_to_win': float,
            'odds_to_win_description': str,
            'pars': float,
            'player_id': int,
            'player_tournament_id': int,
            'rank': int,
            'rounds': List[PlayerRound],
            'rounds_under_seventy': float,
            'rounds_with_five_or_more_birdies_or_better': float,
            'streaks_of_five_birdies_or_better': float,
            'streaks_of_four_birdies_or_better': float,
            'streaks_of_six_birdies_or_better': float,
            'streaks_of_three_birdies_or_better': float,
            'tee_time': str,
            'total_score': float,
            'total_strokes': float,
            'total_through': int,
            'tournament_id': int,
            'tournament_status': str,
            'triple_bogeys': float,
            'win': float,
            'worse_than_double_bogey': float,
            'worse_than_triple_bogey': float
        }

        self.attribute_map = {
            'birdies': 'Birdies',
            'bogey_free_rounds': 'BogeyFreeRounds',
            'bogeys': 'Bogeys',
            'bounce_back_count': 'BounceBackCount',
            'consecutive_birdie_or_better_count': 'ConsecutiveBirdieOrBetterCount',
            'country': 'Country',
            'double_bogeys': 'DoubleBogeys',
            'double_eagles': 'DoubleEagles',
            'draft_kings_salary': 'DraftKingsSalary',
            'eagles': 'Eagles',
            'earnings': 'Earnings',
            'fan_duel_salary': 'FanDuelSalary',
            'fantasy_draft_salary': 'FantasyDraftSalary',
            'fantasy_points': 'FantasyPoints',
            'fantasy_points_draft_kings': 'FantasyPointsDraftKings',
            'fantasy_points_fan_duel': 'FantasyPointsFanDuel',
            'fantasy_points_fantasy_draft': 'FantasyPointsFantasyDraft',
            'fantasy_points_yahoo': 'FantasyPointsYahoo',
            'fed_ex_points': 'FedExPoints',
            'hole_in_ones': 'HoleInOnes',
            'is_alternate': 'IsAlternate',
            'is_withdrawn': 'IsWithdrawn',
            'made_cut': 'MadeCut',
            'made_cut_did_not_finish': 'MadeCutDidNotFinish',
            'name': 'Name',
            'odds_to_win': 'OddsToWin',
            'odds_to_win_description': 'OddsToWinDescription',
            'pars': 'Pars',
            'player_id': 'PlayerID',
            'player_tournament_id': 'PlayerTournamentID',
            'rank': 'Rank',
            'rounds': 'Rounds',
            'rounds_under_seventy': 'RoundsUnderSeventy',
            'rounds_with_five_or_more_birdies_or_better': 'RoundsWithFiveOrMoreBirdiesOrBetter',
            'streaks_of_five_birdies_or_better': 'StreaksOfFiveBirdiesOrBetter',
            'streaks_of_four_birdies_or_better': 'StreaksOfFourBirdiesOrBetter',
            'streaks_of_six_birdies_or_better': 'StreaksOfSixBirdiesOrBetter',
            'streaks_of_three_birdies_or_better': 'StreaksOfThreeBirdiesOrBetter',
            'tee_time': 'TeeTime',
            'total_score': 'TotalScore',
            'total_strokes': 'TotalStrokes',
            'total_through': 'TotalThrough',
            'tournament_id': 'TournamentID',
            'tournament_status': 'TournamentStatus',
            'triple_bogeys': 'TripleBogeys',
            'win': 'Win',
            'worse_than_double_bogey': 'WorseThanDoubleBogey',
            'worse_than_triple_bogey': 'WorseThanTripleBogey'
        }

        self._birdies = birdies
        self._bogey_free_rounds = bogey_free_rounds
        self._bogeys = bogeys
        self._bounce_back_count = bounce_back_count
        self._consecutive_birdie_or_better_count = consecutive_birdie_or_better_count
        self._country = country
        self._double_bogeys = double_bogeys
        self._double_eagles = double_eagles
        self._draft_kings_salary = draft_kings_salary
        self._eagles = eagles
        self._earnings = earnings
        self._fan_duel_salary = fan_duel_salary
        self._fantasy_draft_salary = fantasy_draft_salary
        self._fantasy_points = fantasy_points
        self._fantasy_points_draft_kings = fantasy_points_draft_kings
        self._fantasy_points_fan_duel = fantasy_points_fan_duel
        self._fantasy_points_fantasy_draft = fantasy_points_fantasy_draft
        self._fantasy_points_yahoo = fantasy_points_yahoo
        self._fed_ex_points = fed_ex_points
        self._hole_in_ones = hole_in_ones
        self._is_alternate = is_alternate
        self._is_withdrawn = is_withdrawn
        self._made_cut = made_cut
        self._made_cut_did_not_finish = made_cut_did_not_finish
        self._name = name
        self._odds_to_win = odds_to_win
        self._odds_to_win_description = odds_to_win_description
        self._pars = pars
        self._player_id = player_id
        self._player_tournament_id = player_tournament_id
        self._rank = rank
        self._rounds = rounds
        self._rounds_under_seventy = rounds_under_seventy
        self._rounds_with_five_or_more_birdies_or_better = rounds_with_five_or_more_birdies_or_better
        self._streaks_of_five_birdies_or_better = streaks_of_five_birdies_or_better
        self._streaks_of_four_birdies_or_better = streaks_of_four_birdies_or_better
        self._streaks_of_six_birdies_or_better = streaks_of_six_birdies_or_better
        self._streaks_of_three_birdies_or_better = streaks_of_three_birdies_or_better
        self._tee_time = tee_time
        self._total_score = total_score
        self._total_strokes = total_strokes
        self._total_through = total_through
        self._tournament_id = tournament_id
        self._tournament_status = tournament_status
        self._triple_bogeys = triple_bogeys
        self._win = win
        self._worse_than_double_bogey = worse_than_double_bogey
        self._worse_than_triple_bogey = worse_than_triple_bogey

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PlayerTournamentProjection':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PlayerTournamentProjection of this PlayerTournamentProjection.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def birdies(self):
        """Gets the birdies of this PlayerTournamentProjection.


        :return: The birdies of this PlayerTournamentProjection.
        :rtype: float
        """
        return self._birdies

    @birdies.setter
    def birdies(self, birdies):
        """Sets the birdies of this PlayerTournamentProjection.


        :param birdies: The birdies of this PlayerTournamentProjection.
        :type birdies: float
        """

        self._birdies = birdies

    @property
    def bogey_free_rounds(self):
        """Gets the bogey_free_rounds of this PlayerTournamentProjection.


        :return: The bogey_free_rounds of this PlayerTournamentProjection.
        :rtype: float
        """
        return self._bogey_free_rounds

    @bogey_free_rounds.setter
    def bogey_free_rounds(self, bogey_free_rounds):
        """Sets the bogey_free_rounds of this PlayerTournamentProjection.


        :param bogey_free_rounds: The bogey_free_rounds of this PlayerTournamentProjection.
        :type bogey_free_rounds: float
        """

        self._bogey_free_rounds = bogey_free_rounds

    @property
    def bogeys(self):
        """Gets the bogeys of this PlayerTournamentProjection.


        :return: The bogeys of this PlayerTournamentProjection.
        :rtype: float
        """
        return self._bogeys

    @bogeys.setter
    def bogeys(self, bogeys):
        """Sets the bogeys of this PlayerTournamentProjection.


        :param bogeys: The bogeys of this PlayerTournamentProjection.
        :type bogeys: float
        """

        self._bogeys = bogeys

    @property
    def bounce_back_count(self):
        """Gets the bounce_back_count of this PlayerTournamentProjection.


        :return: The bounce_back_count of this PlayerTournamentProjection.
        :rtype: float
        """
        return self._bounce_back_count

    @bounce_back_count.setter
    def bounce_back_count(self, bounce_back_count):
        """Sets the bounce_back_count of this PlayerTournamentProjection.


        :param bounce_back_count: The bounce_back_count of this PlayerTournamentProjection.
        :type bounce_back_count: float
        """

        self._bounce_back_count = bounce_back_count

    @property
    def consecutive_birdie_or_better_count(self):
        """Gets the consecutive_birdie_or_better_count of this PlayerTournamentProjection.


        :return: The consecutive_birdie_or_better_count of this PlayerTournamentProjection.
        :rtype: float
        """
        return self._consecutive_birdie_or_better_count

    @consecutive_birdie_or_better_count.setter
    def consecutive_birdie_or_better_count(self, consecutive_birdie_or_better_count):
        """Sets the consecutive_birdie_or_better_count of this PlayerTournamentProjection.


        :param consecutive_birdie_or_better_count: The consecutive_birdie_or_better_count of this PlayerTournamentProjection.
        :type consecutive_birdie_or_better_count: float
        """

        self._consecutive_birdie_or_better_count = consecutive_birdie_or_better_count

    @property
    def country(self):
        """Gets the country of this PlayerTournamentProjection.


        :return: The country of this PlayerTournamentProjection.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this PlayerTournamentProjection.


        :param country: The country of this PlayerTournamentProjection.
        :type country: str
        """

        self._country = country

    @property
    def double_bogeys(self):
        """Gets the double_bogeys of this PlayerTournamentProjection.


        :return: The double_bogeys of this PlayerTournamentProjection.
        :rtype: float
        """
        return self._double_bogeys

    @double_bogeys.setter
    def double_bogeys(self, double_bogeys):
        """Sets the double_bogeys of this PlayerTournamentProjection.


        :param double_bogeys: The double_bogeys of this PlayerTournamentProjection.
        :type double_bogeys: float
        """

        self._double_bogeys = double_bogeys

    @property
    def double_eagles(self):
        """Gets the double_eagles of this PlayerTournamentProjection.


        :return: The double_eagles of this PlayerTournamentProjection.
        :rtype: float
        """
        return self._double_eagles

    @double_eagles.setter
    def double_eagles(self, double_eagles):
        """Sets the double_eagles of this PlayerTournamentProjection.


        :param double_eagles: The double_eagles of this PlayerTournamentProjection.
        :type double_eagles: float
        """

        self._double_eagles = double_eagles

    @property
    def draft_kings_salary(self):
        """Gets the draft_kings_salary of this PlayerTournamentProjection.


        :return: The draft_kings_salary of this PlayerTournamentProjection.
        :rtype: int
        """
        return self._draft_kings_salary

    @draft_kings_salary.setter
    def draft_kings_salary(self, draft_kings_salary):
        """Sets the draft_kings_salary of this PlayerTournamentProjection.


        :param draft_kings_salary: The draft_kings_salary of this PlayerTournamentProjection.
        :type draft_kings_salary: int
        """

        self._draft_kings_salary = draft_kings_salary

    @property
    def eagles(self):
        """Gets the eagles of this PlayerTournamentProjection.


        :return: The eagles of this PlayerTournamentProjection.
        :rtype: float
        """
        return self._eagles

    @eagles.setter
    def eagles(self, eagles):
        """Sets the eagles of this PlayerTournamentProjection.


        :param eagles: The eagles of this PlayerTournamentProjection.
        :type eagles: float
        """

        self._eagles = eagles

    @property
    def earnings(self):
        """Gets the earnings of this PlayerTournamentProjection.


        :return: The earnings of this PlayerTournamentProjection.
        :rtype: float
        """
        return self._earnings

    @earnings.setter
    def earnings(self, earnings):
        """Sets the earnings of this PlayerTournamentProjection.


        :param earnings: The earnings of this PlayerTournamentProjection.
        :type earnings: float
        """

        self._earnings = earnings

    @property
    def fan_duel_salary(self):
        """Gets the fan_duel_salary of this PlayerTournamentProjection.


        :return: The fan_duel_salary of this PlayerTournamentProjection.
        :rtype: int
        """
        return self._fan_duel_salary

    @fan_duel_salary.setter
    def fan_duel_salary(self, fan_duel_salary):
        """Sets the fan_duel_salary of this PlayerTournamentProjection.


        :param fan_duel_salary: The fan_duel_salary of this PlayerTournamentProjection.
        :type fan_duel_salary: int
        """

        self._fan_duel_salary = fan_duel_salary

    @property
    def fantasy_draft_salary(self):
        """Gets the fantasy_draft_salary of this PlayerTournamentProjection.


        :return: The fantasy_draft_salary of this PlayerTournamentProjection.
        :rtype: int
        """
        return self._fantasy_draft_salary

    @fantasy_draft_salary.setter
    def fantasy_draft_salary(self, fantasy_draft_salary):
        """Sets the fantasy_draft_salary of this PlayerTournamentProjection.


        :param fantasy_draft_salary: The fantasy_draft_salary of this PlayerTournamentProjection.
        :type fantasy_draft_salary: int
        """

        self._fantasy_draft_salary = fantasy_draft_salary

    @property
    def fantasy_points(self):
        """Gets the fantasy_points of this PlayerTournamentProjection.


        :return: The fantasy_points of this PlayerTournamentProjection.
        :rtype: float
        """
        return self._fantasy_points

    @fantasy_points.setter
    def fantasy_points(self, fantasy_points):
        """Sets the fantasy_points of this PlayerTournamentProjection.


        :param fantasy_points: The fantasy_points of this PlayerTournamentProjection.
        :type fantasy_points: float
        """

        self._fantasy_points = fantasy_points

    @property
    def fantasy_points_draft_kings(self):
        """Gets the fantasy_points_draft_kings of this PlayerTournamentProjection.


        :return: The fantasy_points_draft_kings of this PlayerTournamentProjection.
        :rtype: float
        """
        return self._fantasy_points_draft_kings

    @fantasy_points_draft_kings.setter
    def fantasy_points_draft_kings(self, fantasy_points_draft_kings):
        """Sets the fantasy_points_draft_kings of this PlayerTournamentProjection.


        :param fantasy_points_draft_kings: The fantasy_points_draft_kings of this PlayerTournamentProjection.
        :type fantasy_points_draft_kings: float
        """

        self._fantasy_points_draft_kings = fantasy_points_draft_kings

    @property
    def fantasy_points_fan_duel(self):
        """Gets the fantasy_points_fan_duel of this PlayerTournamentProjection.


        :return: The fantasy_points_fan_duel of this PlayerTournamentProjection.
        :rtype: float
        """
        return self._fantasy_points_fan_duel

    @fantasy_points_fan_duel.setter
    def fantasy_points_fan_duel(self, fantasy_points_fan_duel):
        """Sets the fantasy_points_fan_duel of this PlayerTournamentProjection.


        :param fantasy_points_fan_duel: The fantasy_points_fan_duel of this PlayerTournamentProjection.
        :type fantasy_points_fan_duel: float
        """

        self._fantasy_points_fan_duel = fantasy_points_fan_duel

    @property
    def fantasy_points_fantasy_draft(self):
        """Gets the fantasy_points_fantasy_draft of this PlayerTournamentProjection.


        :return: The fantasy_points_fantasy_draft of this PlayerTournamentProjection.
        :rtype: float
        """
        return self._fantasy_points_fantasy_draft

    @fantasy_points_fantasy_draft.setter
    def fantasy_points_fantasy_draft(self, fantasy_points_fantasy_draft):
        """Sets the fantasy_points_fantasy_draft of this PlayerTournamentProjection.


        :param fantasy_points_fantasy_draft: The fantasy_points_fantasy_draft of this PlayerTournamentProjection.
        :type fantasy_points_fantasy_draft: float
        """

        self._fantasy_points_fantasy_draft = fantasy_points_fantasy_draft

    @property
    def fantasy_points_yahoo(self):
        """Gets the fantasy_points_yahoo of this PlayerTournamentProjection.


        :return: The fantasy_points_yahoo of this PlayerTournamentProjection.
        :rtype: float
        """
        return self._fantasy_points_yahoo

    @fantasy_points_yahoo.setter
    def fantasy_points_yahoo(self, fantasy_points_yahoo):
        """Sets the fantasy_points_yahoo of this PlayerTournamentProjection.


        :param fantasy_points_yahoo: The fantasy_points_yahoo of this PlayerTournamentProjection.
        :type fantasy_points_yahoo: float
        """

        self._fantasy_points_yahoo = fantasy_points_yahoo

    @property
    def fed_ex_points(self):
        """Gets the fed_ex_points of this PlayerTournamentProjection.


        :return: The fed_ex_points of this PlayerTournamentProjection.
        :rtype: int
        """
        return self._fed_ex_points

    @fed_ex_points.setter
    def fed_ex_points(self, fed_ex_points):
        """Sets the fed_ex_points of this PlayerTournamentProjection.


        :param fed_ex_points: The fed_ex_points of this PlayerTournamentProjection.
        :type fed_ex_points: int
        """

        self._fed_ex_points = fed_ex_points

    @property
    def hole_in_ones(self):
        """Gets the hole_in_ones of this PlayerTournamentProjection.


        :return: The hole_in_ones of this PlayerTournamentProjection.
        :rtype: float
        """
        return self._hole_in_ones

    @hole_in_ones.setter
    def hole_in_ones(self, hole_in_ones):
        """Sets the hole_in_ones of this PlayerTournamentProjection.


        :param hole_in_ones: The hole_in_ones of this PlayerTournamentProjection.
        :type hole_in_ones: float
        """

        self._hole_in_ones = hole_in_ones

    @property
    def is_alternate(self):
        """Gets the is_alternate of this PlayerTournamentProjection.


        :return: The is_alternate of this PlayerTournamentProjection.
        :rtype: bool
        """
        return self._is_alternate

    @is_alternate.setter
    def is_alternate(self, is_alternate):
        """Sets the is_alternate of this PlayerTournamentProjection.


        :param is_alternate: The is_alternate of this PlayerTournamentProjection.
        :type is_alternate: bool
        """

        self._is_alternate = is_alternate

    @property
    def is_withdrawn(self):
        """Gets the is_withdrawn of this PlayerTournamentProjection.


        :return: The is_withdrawn of this PlayerTournamentProjection.
        :rtype: bool
        """
        return self._is_withdrawn

    @is_withdrawn.setter
    def is_withdrawn(self, is_withdrawn):
        """Sets the is_withdrawn of this PlayerTournamentProjection.


        :param is_withdrawn: The is_withdrawn of this PlayerTournamentProjection.
        :type is_withdrawn: bool
        """

        self._is_withdrawn = is_withdrawn

    @property
    def made_cut(self):
        """Gets the made_cut of this PlayerTournamentProjection.


        :return: The made_cut of this PlayerTournamentProjection.
        :rtype: float
        """
        return self._made_cut

    @made_cut.setter
    def made_cut(self, made_cut):
        """Sets the made_cut of this PlayerTournamentProjection.


        :param made_cut: The made_cut of this PlayerTournamentProjection.
        :type made_cut: float
        """

        self._made_cut = made_cut

    @property
    def made_cut_did_not_finish(self):
        """Gets the made_cut_did_not_finish of this PlayerTournamentProjection.


        :return: The made_cut_did_not_finish of this PlayerTournamentProjection.
        :rtype: bool
        """
        return self._made_cut_did_not_finish

    @made_cut_did_not_finish.setter
    def made_cut_did_not_finish(self, made_cut_did_not_finish):
        """Sets the made_cut_did_not_finish of this PlayerTournamentProjection.


        :param made_cut_did_not_finish: The made_cut_did_not_finish of this PlayerTournamentProjection.
        :type made_cut_did_not_finish: bool
        """

        self._made_cut_did_not_finish = made_cut_did_not_finish

    @property
    def name(self):
        """Gets the name of this PlayerTournamentProjection.


        :return: The name of this PlayerTournamentProjection.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PlayerTournamentProjection.


        :param name: The name of this PlayerTournamentProjection.
        :type name: str
        """

        self._name = name

    @property
    def odds_to_win(self):
        """Gets the odds_to_win of this PlayerTournamentProjection.


        :return: The odds_to_win of this PlayerTournamentProjection.
        :rtype: float
        """
        return self._odds_to_win

    @odds_to_win.setter
    def odds_to_win(self, odds_to_win):
        """Sets the odds_to_win of this PlayerTournamentProjection.


        :param odds_to_win: The odds_to_win of this PlayerTournamentProjection.
        :type odds_to_win: float
        """

        self._odds_to_win = odds_to_win

    @property
    def odds_to_win_description(self):
        """Gets the odds_to_win_description of this PlayerTournamentProjection.


        :return: The odds_to_win_description of this PlayerTournamentProjection.
        :rtype: str
        """
        return self._odds_to_win_description

    @odds_to_win_description.setter
    def odds_to_win_description(self, odds_to_win_description):
        """Sets the odds_to_win_description of this PlayerTournamentProjection.


        :param odds_to_win_description: The odds_to_win_description of this PlayerTournamentProjection.
        :type odds_to_win_description: str
        """

        self._odds_to_win_description = odds_to_win_description

    @property
    def pars(self):
        """Gets the pars of this PlayerTournamentProjection.


        :return: The pars of this PlayerTournamentProjection.
        :rtype: float
        """
        return self._pars

    @pars.setter
    def pars(self, pars):
        """Sets the pars of this PlayerTournamentProjection.


        :param pars: The pars of this PlayerTournamentProjection.
        :type pars: float
        """

        self._pars = pars

    @property
    def player_id(self):
        """Gets the player_id of this PlayerTournamentProjection.


        :return: The player_id of this PlayerTournamentProjection.
        :rtype: int
        """
        return self._player_id

    @player_id.setter
    def player_id(self, player_id):
        """Sets the player_id of this PlayerTournamentProjection.


        :param player_id: The player_id of this PlayerTournamentProjection.
        :type player_id: int
        """

        self._player_id = player_id

    @property
    def player_tournament_id(self):
        """Gets the player_tournament_id of this PlayerTournamentProjection.


        :return: The player_tournament_id of this PlayerTournamentProjection.
        :rtype: int
        """
        return self._player_tournament_id

    @player_tournament_id.setter
    def player_tournament_id(self, player_tournament_id):
        """Sets the player_tournament_id of this PlayerTournamentProjection.


        :param player_tournament_id: The player_tournament_id of this PlayerTournamentProjection.
        :type player_tournament_id: int
        """

        self._player_tournament_id = player_tournament_id

    @property
    def rank(self):
        """Gets the rank of this PlayerTournamentProjection.


        :return: The rank of this PlayerTournamentProjection.
        :rtype: int
        """
        return self._rank

    @rank.setter
    def rank(self, rank):
        """Sets the rank of this PlayerTournamentProjection.


        :param rank: The rank of this PlayerTournamentProjection.
        :type rank: int
        """

        self._rank = rank

    @property
    def rounds(self):
        """Gets the rounds of this PlayerTournamentProjection.


        :return: The rounds of this PlayerTournamentProjection.
        :rtype: List[PlayerRound]
        """
        return self._rounds

    @rounds.setter
    def rounds(self, rounds):
        """Sets the rounds of this PlayerTournamentProjection.


        :param rounds: The rounds of this PlayerTournamentProjection.
        :type rounds: List[PlayerRound]
        """

        self._rounds = rounds

    @property
    def rounds_under_seventy(self):
        """Gets the rounds_under_seventy of this PlayerTournamentProjection.


        :return: The rounds_under_seventy of this PlayerTournamentProjection.
        :rtype: float
        """
        return self._rounds_under_seventy

    @rounds_under_seventy.setter
    def rounds_under_seventy(self, rounds_under_seventy):
        """Sets the rounds_under_seventy of this PlayerTournamentProjection.


        :param rounds_under_seventy: The rounds_under_seventy of this PlayerTournamentProjection.
        :type rounds_under_seventy: float
        """

        self._rounds_under_seventy = rounds_under_seventy

    @property
    def rounds_with_five_or_more_birdies_or_better(self):
        """Gets the rounds_with_five_or_more_birdies_or_better of this PlayerTournamentProjection.


        :return: The rounds_with_five_or_more_birdies_or_better of this PlayerTournamentProjection.
        :rtype: float
        """
        return self._rounds_with_five_or_more_birdies_or_better

    @rounds_with_five_or_more_birdies_or_better.setter
    def rounds_with_five_or_more_birdies_or_better(self, rounds_with_five_or_more_birdies_or_better):
        """Sets the rounds_with_five_or_more_birdies_or_better of this PlayerTournamentProjection.


        :param rounds_with_five_or_more_birdies_or_better: The rounds_with_five_or_more_birdies_or_better of this PlayerTournamentProjection.
        :type rounds_with_five_or_more_birdies_or_better: float
        """

        self._rounds_with_five_or_more_birdies_or_better = rounds_with_five_or_more_birdies_or_better

    @property
    def streaks_of_five_birdies_or_better(self):
        """Gets the streaks_of_five_birdies_or_better of this PlayerTournamentProjection.


        :return: The streaks_of_five_birdies_or_better of this PlayerTournamentProjection.
        :rtype: float
        """
        return self._streaks_of_five_birdies_or_better

    @streaks_of_five_birdies_or_better.setter
    def streaks_of_five_birdies_or_better(self, streaks_of_five_birdies_or_better):
        """Sets the streaks_of_five_birdies_or_better of this PlayerTournamentProjection.


        :param streaks_of_five_birdies_or_better: The streaks_of_five_birdies_or_better of this PlayerTournamentProjection.
        :type streaks_of_five_birdies_or_better: float
        """

        self._streaks_of_five_birdies_or_better = streaks_of_five_birdies_or_better

    @property
    def streaks_of_four_birdies_or_better(self):
        """Gets the streaks_of_four_birdies_or_better of this PlayerTournamentProjection.


        :return: The streaks_of_four_birdies_or_better of this PlayerTournamentProjection.
        :rtype: float
        """
        return self._streaks_of_four_birdies_or_better

    @streaks_of_four_birdies_or_better.setter
    def streaks_of_four_birdies_or_better(self, streaks_of_four_birdies_or_better):
        """Sets the streaks_of_four_birdies_or_better of this PlayerTournamentProjection.


        :param streaks_of_four_birdies_or_better: The streaks_of_four_birdies_or_better of this PlayerTournamentProjection.
        :type streaks_of_four_birdies_or_better: float
        """

        self._streaks_of_four_birdies_or_better = streaks_of_four_birdies_or_better

    @property
    def streaks_of_six_birdies_or_better(self):
        """Gets the streaks_of_six_birdies_or_better of this PlayerTournamentProjection.


        :return: The streaks_of_six_birdies_or_better of this PlayerTournamentProjection.
        :rtype: float
        """
        return self._streaks_of_six_birdies_or_better

    @streaks_of_six_birdies_or_better.setter
    def streaks_of_six_birdies_or_better(self, streaks_of_six_birdies_or_better):
        """Sets the streaks_of_six_birdies_or_better of this PlayerTournamentProjection.


        :param streaks_of_six_birdies_or_better: The streaks_of_six_birdies_or_better of this PlayerTournamentProjection.
        :type streaks_of_six_birdies_or_better: float
        """

        self._streaks_of_six_birdies_or_better = streaks_of_six_birdies_or_better

    @property
    def streaks_of_three_birdies_or_better(self):
        """Gets the streaks_of_three_birdies_or_better of this PlayerTournamentProjection.


        :return: The streaks_of_three_birdies_or_better of this PlayerTournamentProjection.
        :rtype: float
        """
        return self._streaks_of_three_birdies_or_better

    @streaks_of_three_birdies_or_better.setter
    def streaks_of_three_birdies_or_better(self, streaks_of_three_birdies_or_better):
        """Sets the streaks_of_three_birdies_or_better of this PlayerTournamentProjection.


        :param streaks_of_three_birdies_or_better: The streaks_of_three_birdies_or_better of this PlayerTournamentProjection.
        :type streaks_of_three_birdies_or_better: float
        """

        self._streaks_of_three_birdies_or_better = streaks_of_three_birdies_or_better

    @property
    def tee_time(self):
        """Gets the tee_time of this PlayerTournamentProjection.


        :return: The tee_time of this PlayerTournamentProjection.
        :rtype: str
        """
        return self._tee_time

    @tee_time.setter
    def tee_time(self, tee_time):
        """Sets the tee_time of this PlayerTournamentProjection.


        :param tee_time: The tee_time of this PlayerTournamentProjection.
        :type tee_time: str
        """

        self._tee_time = tee_time

    @property
    def total_score(self):
        """Gets the total_score of this PlayerTournamentProjection.


        :return: The total_score of this PlayerTournamentProjection.
        :rtype: float
        """
        return self._total_score

    @total_score.setter
    def total_score(self, total_score):
        """Sets the total_score of this PlayerTournamentProjection.


        :param total_score: The total_score of this PlayerTournamentProjection.
        :type total_score: float
        """

        self._total_score = total_score

    @property
    def total_strokes(self):
        """Gets the total_strokes of this PlayerTournamentProjection.


        :return: The total_strokes of this PlayerTournamentProjection.
        :rtype: float
        """
        return self._total_strokes

    @total_strokes.setter
    def total_strokes(self, total_strokes):
        """Sets the total_strokes of this PlayerTournamentProjection.


        :param total_strokes: The total_strokes of this PlayerTournamentProjection.
        :type total_strokes: float
        """

        self._total_strokes = total_strokes

    @property
    def total_through(self):
        """Gets the total_through of this PlayerTournamentProjection.


        :return: The total_through of this PlayerTournamentProjection.
        :rtype: int
        """
        return self._total_through

    @total_through.setter
    def total_through(self, total_through):
        """Sets the total_through of this PlayerTournamentProjection.


        :param total_through: The total_through of this PlayerTournamentProjection.
        :type total_through: int
        """

        self._total_through = total_through

    @property
    def tournament_id(self):
        """Gets the tournament_id of this PlayerTournamentProjection.


        :return: The tournament_id of this PlayerTournamentProjection.
        :rtype: int
        """
        return self._tournament_id

    @tournament_id.setter
    def tournament_id(self, tournament_id):
        """Sets the tournament_id of this PlayerTournamentProjection.


        :param tournament_id: The tournament_id of this PlayerTournamentProjection.
        :type tournament_id: int
        """

        self._tournament_id = tournament_id

    @property
    def tournament_status(self):
        """Gets the tournament_status of this PlayerTournamentProjection.


        :return: The tournament_status of this PlayerTournamentProjection.
        :rtype: str
        """
        return self._tournament_status

    @tournament_status.setter
    def tournament_status(self, tournament_status):
        """Sets the tournament_status of this PlayerTournamentProjection.


        :param tournament_status: The tournament_status of this PlayerTournamentProjection.
        :type tournament_status: str
        """

        self._tournament_status = tournament_status

    @property
    def triple_bogeys(self):
        """Gets the triple_bogeys of this PlayerTournamentProjection.


        :return: The triple_bogeys of this PlayerTournamentProjection.
        :rtype: float
        """
        return self._triple_bogeys

    @triple_bogeys.setter
    def triple_bogeys(self, triple_bogeys):
        """Sets the triple_bogeys of this PlayerTournamentProjection.


        :param triple_bogeys: The triple_bogeys of this PlayerTournamentProjection.
        :type triple_bogeys: float
        """

        self._triple_bogeys = triple_bogeys

    @property
    def win(self):
        """Gets the win of this PlayerTournamentProjection.


        :return: The win of this PlayerTournamentProjection.
        :rtype: float
        """
        return self._win

    @win.setter
    def win(self, win):
        """Sets the win of this PlayerTournamentProjection.


        :param win: The win of this PlayerTournamentProjection.
        :type win: float
        """

        self._win = win

    @property
    def worse_than_double_bogey(self):
        """Gets the worse_than_double_bogey of this PlayerTournamentProjection.


        :return: The worse_than_double_bogey of this PlayerTournamentProjection.
        :rtype: float
        """
        return self._worse_than_double_bogey

    @worse_than_double_bogey.setter
    def worse_than_double_bogey(self, worse_than_double_bogey):
        """Sets the worse_than_double_bogey of this PlayerTournamentProjection.


        :param worse_than_double_bogey: The worse_than_double_bogey of this PlayerTournamentProjection.
        :type worse_than_double_bogey: float
        """

        self._worse_than_double_bogey = worse_than_double_bogey

    @property
    def worse_than_triple_bogey(self):
        """Gets the worse_than_triple_bogey of this PlayerTournamentProjection.


        :return: The worse_than_triple_bogey of this PlayerTournamentProjection.
        :rtype: float
        """
        return self._worse_than_triple_bogey

    @worse_than_triple_bogey.setter
    def worse_than_triple_bogey(self, worse_than_triple_bogey):
        """Sets the worse_than_triple_bogey of this PlayerTournamentProjection.


        :param worse_than_triple_bogey: The worse_than_triple_bogey of this PlayerTournamentProjection.
        :type worse_than_triple_bogey: float
        """

        self._worse_than_triple_bogey = worse_than_triple_bogey
