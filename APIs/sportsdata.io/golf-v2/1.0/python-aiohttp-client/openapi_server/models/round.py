# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Round(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, day: str=None, number: int=None, round_id: int=None, tournament_id: int=None):
        """Round - a model defined in OpenAPI

        :param day: The day of this Round.
        :param number: The number of this Round.
        :param round_id: The round_id of this Round.
        :param tournament_id: The tournament_id of this Round.
        """
        self.openapi_types = {
            'day': str,
            'number': int,
            'round_id': int,
            'tournament_id': int
        }

        self.attribute_map = {
            'day': 'Day',
            'number': 'Number',
            'round_id': 'RoundID',
            'tournament_id': 'TournamentID'
        }

        self._day = day
        self._number = number
        self._round_id = round_id
        self._tournament_id = tournament_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Round':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Round of this Round.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def day(self):
        """Gets the day of this Round.


        :return: The day of this Round.
        :rtype: str
        """
        return self._day

    @day.setter
    def day(self, day):
        """Sets the day of this Round.


        :param day: The day of this Round.
        :type day: str
        """

        self._day = day

    @property
    def number(self):
        """Gets the number of this Round.


        :return: The number of this Round.
        :rtype: int
        """
        return self._number

    @number.setter
    def number(self, number):
        """Sets the number of this Round.


        :param number: The number of this Round.
        :type number: int
        """

        self._number = number

    @property
    def round_id(self):
        """Gets the round_id of this Round.


        :return: The round_id of this Round.
        :rtype: int
        """
        return self._round_id

    @round_id.setter
    def round_id(self, round_id):
        """Sets the round_id of this Round.


        :param round_id: The round_id of this Round.
        :type round_id: int
        """

        self._round_id = round_id

    @property
    def tournament_id(self):
        """Gets the tournament_id of this Round.


        :return: The tournament_id of this Round.
        :rtype: int
        """
        return self._tournament_id

    @tournament_id.setter
    def tournament_id(self, tournament_id):
        """Sets the tournament_id of this Round.


        :param tournament_id: The tournament_id of this Round.
        :type tournament_id: int
        """

        self._tournament_id = tournament_id
