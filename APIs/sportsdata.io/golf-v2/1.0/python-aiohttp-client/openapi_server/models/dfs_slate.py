# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dfs_slate_player import DfsSlatePlayer
from openapi_server.models.dfs_slate_tournament import DfsSlateTournament
from openapi_server import util


class DfsSlate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dfs_slate_players: List[DfsSlatePlayer]=None, dfs_slate_tournaments: List[DfsSlateTournament]=None, is_multi_day_slate: bool=None, number_of_tournaments: int=None, operator: str=None, operator_day: str=None, operator_game_type: str=None, operator_name: str=None, operator_slate_id: int=None, operator_start_time: str=None, removed_by_operator: bool=None, slate_id: int=None, slate_roster_slots: List[str]=None):
        """DfsSlate - a model defined in OpenAPI

        :param dfs_slate_players: The dfs_slate_players of this DfsSlate.
        :param dfs_slate_tournaments: The dfs_slate_tournaments of this DfsSlate.
        :param is_multi_day_slate: The is_multi_day_slate of this DfsSlate.
        :param number_of_tournaments: The number_of_tournaments of this DfsSlate.
        :param operator: The operator of this DfsSlate.
        :param operator_day: The operator_day of this DfsSlate.
        :param operator_game_type: The operator_game_type of this DfsSlate.
        :param operator_name: The operator_name of this DfsSlate.
        :param operator_slate_id: The operator_slate_id of this DfsSlate.
        :param operator_start_time: The operator_start_time of this DfsSlate.
        :param removed_by_operator: The removed_by_operator of this DfsSlate.
        :param slate_id: The slate_id of this DfsSlate.
        :param slate_roster_slots: The slate_roster_slots of this DfsSlate.
        """
        self.openapi_types = {
            'dfs_slate_players': List[DfsSlatePlayer],
            'dfs_slate_tournaments': List[DfsSlateTournament],
            'is_multi_day_slate': bool,
            'number_of_tournaments': int,
            'operator': str,
            'operator_day': str,
            'operator_game_type': str,
            'operator_name': str,
            'operator_slate_id': int,
            'operator_start_time': str,
            'removed_by_operator': bool,
            'slate_id': int,
            'slate_roster_slots': List[str]
        }

        self.attribute_map = {
            'dfs_slate_players': 'DfsSlatePlayers',
            'dfs_slate_tournaments': 'DfsSlateTournaments',
            'is_multi_day_slate': 'IsMultiDaySlate',
            'number_of_tournaments': 'NumberOfTournaments',
            'operator': 'Operator',
            'operator_day': 'OperatorDay',
            'operator_game_type': 'OperatorGameType',
            'operator_name': 'OperatorName',
            'operator_slate_id': 'OperatorSlateID',
            'operator_start_time': 'OperatorStartTime',
            'removed_by_operator': 'RemovedByOperator',
            'slate_id': 'SlateID',
            'slate_roster_slots': 'SlateRosterSlots'
        }

        self._dfs_slate_players = dfs_slate_players
        self._dfs_slate_tournaments = dfs_slate_tournaments
        self._is_multi_day_slate = is_multi_day_slate
        self._number_of_tournaments = number_of_tournaments
        self._operator = operator
        self._operator_day = operator_day
        self._operator_game_type = operator_game_type
        self._operator_name = operator_name
        self._operator_slate_id = operator_slate_id
        self._operator_start_time = operator_start_time
        self._removed_by_operator = removed_by_operator
        self._slate_id = slate_id
        self._slate_roster_slots = slate_roster_slots

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DfsSlate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DfsSlate of this DfsSlate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dfs_slate_players(self):
        """Gets the dfs_slate_players of this DfsSlate.


        :return: The dfs_slate_players of this DfsSlate.
        :rtype: List[DfsSlatePlayer]
        """
        return self._dfs_slate_players

    @dfs_slate_players.setter
    def dfs_slate_players(self, dfs_slate_players):
        """Sets the dfs_slate_players of this DfsSlate.


        :param dfs_slate_players: The dfs_slate_players of this DfsSlate.
        :type dfs_slate_players: List[DfsSlatePlayer]
        """

        self._dfs_slate_players = dfs_slate_players

    @property
    def dfs_slate_tournaments(self):
        """Gets the dfs_slate_tournaments of this DfsSlate.


        :return: The dfs_slate_tournaments of this DfsSlate.
        :rtype: List[DfsSlateTournament]
        """
        return self._dfs_slate_tournaments

    @dfs_slate_tournaments.setter
    def dfs_slate_tournaments(self, dfs_slate_tournaments):
        """Sets the dfs_slate_tournaments of this DfsSlate.


        :param dfs_slate_tournaments: The dfs_slate_tournaments of this DfsSlate.
        :type dfs_slate_tournaments: List[DfsSlateTournament]
        """

        self._dfs_slate_tournaments = dfs_slate_tournaments

    @property
    def is_multi_day_slate(self):
        """Gets the is_multi_day_slate of this DfsSlate.


        :return: The is_multi_day_slate of this DfsSlate.
        :rtype: bool
        """
        return self._is_multi_day_slate

    @is_multi_day_slate.setter
    def is_multi_day_slate(self, is_multi_day_slate):
        """Sets the is_multi_day_slate of this DfsSlate.


        :param is_multi_day_slate: The is_multi_day_slate of this DfsSlate.
        :type is_multi_day_slate: bool
        """

        self._is_multi_day_slate = is_multi_day_slate

    @property
    def number_of_tournaments(self):
        """Gets the number_of_tournaments of this DfsSlate.


        :return: The number_of_tournaments of this DfsSlate.
        :rtype: int
        """
        return self._number_of_tournaments

    @number_of_tournaments.setter
    def number_of_tournaments(self, number_of_tournaments):
        """Sets the number_of_tournaments of this DfsSlate.


        :param number_of_tournaments: The number_of_tournaments of this DfsSlate.
        :type number_of_tournaments: int
        """

        self._number_of_tournaments = number_of_tournaments

    @property
    def operator(self):
        """Gets the operator of this DfsSlate.


        :return: The operator of this DfsSlate.
        :rtype: str
        """
        return self._operator

    @operator.setter
    def operator(self, operator):
        """Sets the operator of this DfsSlate.


        :param operator: The operator of this DfsSlate.
        :type operator: str
        """

        self._operator = operator

    @property
    def operator_day(self):
        """Gets the operator_day of this DfsSlate.


        :return: The operator_day of this DfsSlate.
        :rtype: str
        """
        return self._operator_day

    @operator_day.setter
    def operator_day(self, operator_day):
        """Sets the operator_day of this DfsSlate.


        :param operator_day: The operator_day of this DfsSlate.
        :type operator_day: str
        """

        self._operator_day = operator_day

    @property
    def operator_game_type(self):
        """Gets the operator_game_type of this DfsSlate.


        :return: The operator_game_type of this DfsSlate.
        :rtype: str
        """
        return self._operator_game_type

    @operator_game_type.setter
    def operator_game_type(self, operator_game_type):
        """Sets the operator_game_type of this DfsSlate.


        :param operator_game_type: The operator_game_type of this DfsSlate.
        :type operator_game_type: str
        """

        self._operator_game_type = operator_game_type

    @property
    def operator_name(self):
        """Gets the operator_name of this DfsSlate.


        :return: The operator_name of this DfsSlate.
        :rtype: str
        """
        return self._operator_name

    @operator_name.setter
    def operator_name(self, operator_name):
        """Sets the operator_name of this DfsSlate.


        :param operator_name: The operator_name of this DfsSlate.
        :type operator_name: str
        """

        self._operator_name = operator_name

    @property
    def operator_slate_id(self):
        """Gets the operator_slate_id of this DfsSlate.


        :return: The operator_slate_id of this DfsSlate.
        :rtype: int
        """
        return self._operator_slate_id

    @operator_slate_id.setter
    def operator_slate_id(self, operator_slate_id):
        """Sets the operator_slate_id of this DfsSlate.


        :param operator_slate_id: The operator_slate_id of this DfsSlate.
        :type operator_slate_id: int
        """

        self._operator_slate_id = operator_slate_id

    @property
    def operator_start_time(self):
        """Gets the operator_start_time of this DfsSlate.


        :return: The operator_start_time of this DfsSlate.
        :rtype: str
        """
        return self._operator_start_time

    @operator_start_time.setter
    def operator_start_time(self, operator_start_time):
        """Sets the operator_start_time of this DfsSlate.


        :param operator_start_time: The operator_start_time of this DfsSlate.
        :type operator_start_time: str
        """

        self._operator_start_time = operator_start_time

    @property
    def removed_by_operator(self):
        """Gets the removed_by_operator of this DfsSlate.


        :return: The removed_by_operator of this DfsSlate.
        :rtype: bool
        """
        return self._removed_by_operator

    @removed_by_operator.setter
    def removed_by_operator(self, removed_by_operator):
        """Sets the removed_by_operator of this DfsSlate.


        :param removed_by_operator: The removed_by_operator of this DfsSlate.
        :type removed_by_operator: bool
        """

        self._removed_by_operator = removed_by_operator

    @property
    def slate_id(self):
        """Gets the slate_id of this DfsSlate.


        :return: The slate_id of this DfsSlate.
        :rtype: int
        """
        return self._slate_id

    @slate_id.setter
    def slate_id(self, slate_id):
        """Sets the slate_id of this DfsSlate.


        :param slate_id: The slate_id of this DfsSlate.
        :type slate_id: int
        """

        self._slate_id = slate_id

    @property
    def slate_roster_slots(self):
        """Gets the slate_roster_slots of this DfsSlate.


        :return: The slate_roster_slots of this DfsSlate.
        :rtype: List[str]
        """
        return self._slate_roster_slots

    @slate_roster_slots.setter
    def slate_roster_slots(self, slate_roster_slots):
        """Sets the slate_roster_slots of this DfsSlate.


        :param slate_roster_slots: The slate_roster_slots of this DfsSlate.
        :type slate_roster_slots: List[str]
        """

        self._slate_roster_slots = slate_roster_slots
