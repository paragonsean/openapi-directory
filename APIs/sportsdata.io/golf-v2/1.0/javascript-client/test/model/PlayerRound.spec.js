/**
 * Golf v2
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GolfV2);
  }
}(this, function(expect, GolfV2) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GolfV2.PlayerRound();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PlayerRound', function() {
    it('should create an instance of PlayerRound', function() {
      // uncomment below and update the code to test PlayerRound
      //var instance = new GolfV2.PlayerRound();
      //expect(instance).to.be.a(GolfV2.PlayerRound);
    });

    it('should have the property backNineStart (base name: "BackNineStart")', function() {
      // uncomment below and update the code to test the property backNineStart
      //var instance = new GolfV2.PlayerRound();
      //expect(instance).to.be();
    });

    it('should have the property birdies (base name: "Birdies")', function() {
      // uncomment below and update the code to test the property birdies
      //var instance = new GolfV2.PlayerRound();
      //expect(instance).to.be();
    });

    it('should have the property bogeyFree (base name: "BogeyFree")', function() {
      // uncomment below and update the code to test the property bogeyFree
      //var instance = new GolfV2.PlayerRound();
      //expect(instance).to.be();
    });

    it('should have the property bogeys (base name: "Bogeys")', function() {
      // uncomment below and update the code to test the property bogeys
      //var instance = new GolfV2.PlayerRound();
      //expect(instance).to.be();
    });

    it('should have the property bounceBackCount (base name: "BounceBackCount")', function() {
      // uncomment below and update the code to test the property bounceBackCount
      //var instance = new GolfV2.PlayerRound();
      //expect(instance).to.be();
    });

    it('should have the property consecutiveBirdieOrBetterCount (base name: "ConsecutiveBirdieOrBetterCount")', function() {
      // uncomment below and update the code to test the property consecutiveBirdieOrBetterCount
      //var instance = new GolfV2.PlayerRound();
      //expect(instance).to.be();
    });

    it('should have the property day (base name: "Day")', function() {
      // uncomment below and update the code to test the property day
      //var instance = new GolfV2.PlayerRound();
      //expect(instance).to.be();
    });

    it('should have the property doubleBogeys (base name: "DoubleBogeys")', function() {
      // uncomment below and update the code to test the property doubleBogeys
      //var instance = new GolfV2.PlayerRound();
      //expect(instance).to.be();
    });

    it('should have the property doubleEagles (base name: "DoubleEagles")', function() {
      // uncomment below and update the code to test the property doubleEagles
      //var instance = new GolfV2.PlayerRound();
      //expect(instance).to.be();
    });

    it('should have the property eagles (base name: "Eagles")', function() {
      // uncomment below and update the code to test the property eagles
      //var instance = new GolfV2.PlayerRound();
      //expect(instance).to.be();
    });

    it('should have the property holeInOnes (base name: "HoleInOnes")', function() {
      // uncomment below and update the code to test the property holeInOnes
      //var instance = new GolfV2.PlayerRound();
      //expect(instance).to.be();
    });

    it('should have the property holes (base name: "Holes")', function() {
      // uncomment below and update the code to test the property holes
      //var instance = new GolfV2.PlayerRound();
      //expect(instance).to.be();
    });

    it('should have the property includesFiveOrMoreBirdiesOrBetter (base name: "IncludesFiveOrMoreBirdiesOrBetter")', function() {
      // uncomment below and update the code to test the property includesFiveOrMoreBirdiesOrBetter
      //var instance = new GolfV2.PlayerRound();
      //expect(instance).to.be();
    });

    it('should have the property includesStreakOfFiveBirdiesOrBetter (base name: "IncludesStreakOfFiveBirdiesOrBetter")', function() {
      // uncomment below and update the code to test the property includesStreakOfFiveBirdiesOrBetter
      //var instance = new GolfV2.PlayerRound();
      //expect(instance).to.be();
    });

    it('should have the property includesStreakOfFourBirdiesOrBetter (base name: "IncludesStreakOfFourBirdiesOrBetter")', function() {
      // uncomment below and update the code to test the property includesStreakOfFourBirdiesOrBetter
      //var instance = new GolfV2.PlayerRound();
      //expect(instance).to.be();
    });

    it('should have the property includesStreakOfSixBirdiesOrBetter (base name: "IncludesStreakOfSixBirdiesOrBetter")', function() {
      // uncomment below and update the code to test the property includesStreakOfSixBirdiesOrBetter
      //var instance = new GolfV2.PlayerRound();
      //expect(instance).to.be();
    });

    it('should have the property includesStreakOfThreeBirdiesOrBetter (base name: "IncludesStreakOfThreeBirdiesOrBetter")', function() {
      // uncomment below and update the code to test the property includesStreakOfThreeBirdiesOrBetter
      //var instance = new GolfV2.PlayerRound();
      //expect(instance).to.be();
    });

    it('should have the property longestBirdieOrBetterStreak (base name: "LongestBirdieOrBetterStreak")', function() {
      // uncomment below and update the code to test the property longestBirdieOrBetterStreak
      //var instance = new GolfV2.PlayerRound();
      //expect(instance).to.be();
    });

    it('should have the property number (base name: "Number")', function() {
      // uncomment below and update the code to test the property number
      //var instance = new GolfV2.PlayerRound();
      //expect(instance).to.be();
    });

    it('should have the property par (base name: "Par")', function() {
      // uncomment below and update the code to test the property par
      //var instance = new GolfV2.PlayerRound();
      //expect(instance).to.be();
    });

    it('should have the property pars (base name: "Pars")', function() {
      // uncomment below and update the code to test the property pars
      //var instance = new GolfV2.PlayerRound();
      //expect(instance).to.be();
    });

    it('should have the property playerRoundID (base name: "PlayerRoundID")', function() {
      // uncomment below and update the code to test the property playerRoundID
      //var instance = new GolfV2.PlayerRound();
      //expect(instance).to.be();
    });

    it('should have the property playerTournamentID (base name: "PlayerTournamentID")', function() {
      // uncomment below and update the code to test the property playerTournamentID
      //var instance = new GolfV2.PlayerRound();
      //expect(instance).to.be();
    });

    it('should have the property score (base name: "Score")', function() {
      // uncomment below and update the code to test the property score
      //var instance = new GolfV2.PlayerRound();
      //expect(instance).to.be();
    });

    it('should have the property teeTime (base name: "TeeTime")', function() {
      // uncomment below and update the code to test the property teeTime
      //var instance = new GolfV2.PlayerRound();
      //expect(instance).to.be();
    });

    it('should have the property tripleBogeys (base name: "TripleBogeys")', function() {
      // uncomment below and update the code to test the property tripleBogeys
      //var instance = new GolfV2.PlayerRound();
      //expect(instance).to.be();
    });

    it('should have the property worseThanDoubleBogey (base name: "WorseThanDoubleBogey")', function() {
      // uncomment below and update the code to test the property worseThanDoubleBogey
      //var instance = new GolfV2.PlayerRound();
      //expect(instance).to.be();
    });

    it('should have the property worseThanTripleBogey (base name: "WorseThanTripleBogey")', function() {
      // uncomment below and update the code to test the property worseThanTripleBogey
      //var instance = new GolfV2.PlayerRound();
      //expect(instance).to.be();
    });

  });

}));
