/**
 * Golf v2
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GolfV2);
  }
}(this, function(expect, GolfV2) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GolfV2.PlayerTournamentProjection();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PlayerTournamentProjection', function() {
    it('should create an instance of PlayerTournamentProjection', function() {
      // uncomment below and update the code to test PlayerTournamentProjection
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be.a(GolfV2.PlayerTournamentProjection);
    });

    it('should have the property birdies (base name: "Birdies")', function() {
      // uncomment below and update the code to test the property birdies
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

    it('should have the property bogeyFreeRounds (base name: "BogeyFreeRounds")', function() {
      // uncomment below and update the code to test the property bogeyFreeRounds
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

    it('should have the property bogeys (base name: "Bogeys")', function() {
      // uncomment below and update the code to test the property bogeys
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

    it('should have the property bounceBackCount (base name: "BounceBackCount")', function() {
      // uncomment below and update the code to test the property bounceBackCount
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

    it('should have the property consecutiveBirdieOrBetterCount (base name: "ConsecutiveBirdieOrBetterCount")', function() {
      // uncomment below and update the code to test the property consecutiveBirdieOrBetterCount
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

    it('should have the property country (base name: "Country")', function() {
      // uncomment below and update the code to test the property country
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

    it('should have the property doubleBogeys (base name: "DoubleBogeys")', function() {
      // uncomment below and update the code to test the property doubleBogeys
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

    it('should have the property doubleEagles (base name: "DoubleEagles")', function() {
      // uncomment below and update the code to test the property doubleEagles
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

    it('should have the property draftKingsSalary (base name: "DraftKingsSalary")', function() {
      // uncomment below and update the code to test the property draftKingsSalary
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

    it('should have the property eagles (base name: "Eagles")', function() {
      // uncomment below and update the code to test the property eagles
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

    it('should have the property earnings (base name: "Earnings")', function() {
      // uncomment below and update the code to test the property earnings
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

    it('should have the property fanDuelSalary (base name: "FanDuelSalary")', function() {
      // uncomment below and update the code to test the property fanDuelSalary
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

    it('should have the property fantasyDraftSalary (base name: "FantasyDraftSalary")', function() {
      // uncomment below and update the code to test the property fantasyDraftSalary
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

    it('should have the property fantasyPoints (base name: "FantasyPoints")', function() {
      // uncomment below and update the code to test the property fantasyPoints
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

    it('should have the property fantasyPointsDraftKings (base name: "FantasyPointsDraftKings")', function() {
      // uncomment below and update the code to test the property fantasyPointsDraftKings
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

    it('should have the property fantasyPointsFanDuel (base name: "FantasyPointsFanDuel")', function() {
      // uncomment below and update the code to test the property fantasyPointsFanDuel
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

    it('should have the property fantasyPointsFantasyDraft (base name: "FantasyPointsFantasyDraft")', function() {
      // uncomment below and update the code to test the property fantasyPointsFantasyDraft
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

    it('should have the property fantasyPointsYahoo (base name: "FantasyPointsYahoo")', function() {
      // uncomment below and update the code to test the property fantasyPointsYahoo
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

    it('should have the property fedExPoints (base name: "FedExPoints")', function() {
      // uncomment below and update the code to test the property fedExPoints
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

    it('should have the property holeInOnes (base name: "HoleInOnes")', function() {
      // uncomment below and update the code to test the property holeInOnes
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

    it('should have the property isAlternate (base name: "IsAlternate")', function() {
      // uncomment below and update the code to test the property isAlternate
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

    it('should have the property isWithdrawn (base name: "IsWithdrawn")', function() {
      // uncomment below and update the code to test the property isWithdrawn
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

    it('should have the property madeCut (base name: "MadeCut")', function() {
      // uncomment below and update the code to test the property madeCut
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

    it('should have the property madeCutDidNotFinish (base name: "MadeCutDidNotFinish")', function() {
      // uncomment below and update the code to test the property madeCutDidNotFinish
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "Name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

    it('should have the property oddsToWin (base name: "OddsToWin")', function() {
      // uncomment below and update the code to test the property oddsToWin
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

    it('should have the property oddsToWinDescription (base name: "OddsToWinDescription")', function() {
      // uncomment below and update the code to test the property oddsToWinDescription
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

    it('should have the property pars (base name: "Pars")', function() {
      // uncomment below and update the code to test the property pars
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

    it('should have the property playerID (base name: "PlayerID")', function() {
      // uncomment below and update the code to test the property playerID
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

    it('should have the property playerTournamentID (base name: "PlayerTournamentID")', function() {
      // uncomment below and update the code to test the property playerTournamentID
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

    it('should have the property rank (base name: "Rank")', function() {
      // uncomment below and update the code to test the property rank
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

    it('should have the property rounds (base name: "Rounds")', function() {
      // uncomment below and update the code to test the property rounds
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

    it('should have the property roundsUnderSeventy (base name: "RoundsUnderSeventy")', function() {
      // uncomment below and update the code to test the property roundsUnderSeventy
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

    it('should have the property roundsWithFiveOrMoreBirdiesOrBetter (base name: "RoundsWithFiveOrMoreBirdiesOrBetter")', function() {
      // uncomment below and update the code to test the property roundsWithFiveOrMoreBirdiesOrBetter
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

    it('should have the property streaksOfFiveBirdiesOrBetter (base name: "StreaksOfFiveBirdiesOrBetter")', function() {
      // uncomment below and update the code to test the property streaksOfFiveBirdiesOrBetter
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

    it('should have the property streaksOfFourBirdiesOrBetter (base name: "StreaksOfFourBirdiesOrBetter")', function() {
      // uncomment below and update the code to test the property streaksOfFourBirdiesOrBetter
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

    it('should have the property streaksOfSixBirdiesOrBetter (base name: "StreaksOfSixBirdiesOrBetter")', function() {
      // uncomment below and update the code to test the property streaksOfSixBirdiesOrBetter
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

    it('should have the property streaksOfThreeBirdiesOrBetter (base name: "StreaksOfThreeBirdiesOrBetter")', function() {
      // uncomment below and update the code to test the property streaksOfThreeBirdiesOrBetter
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

    it('should have the property teeTime (base name: "TeeTime")', function() {
      // uncomment below and update the code to test the property teeTime
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

    it('should have the property totalScore (base name: "TotalScore")', function() {
      // uncomment below and update the code to test the property totalScore
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

    it('should have the property totalStrokes (base name: "TotalStrokes")', function() {
      // uncomment below and update the code to test the property totalStrokes
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

    it('should have the property totalThrough (base name: "TotalThrough")', function() {
      // uncomment below and update the code to test the property totalThrough
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

    it('should have the property tournamentID (base name: "TournamentID")', function() {
      // uncomment below and update the code to test the property tournamentID
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

    it('should have the property tournamentStatus (base name: "TournamentStatus")', function() {
      // uncomment below and update the code to test the property tournamentStatus
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

    it('should have the property tripleBogeys (base name: "TripleBogeys")', function() {
      // uncomment below and update the code to test the property tripleBogeys
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

    it('should have the property win (base name: "Win")', function() {
      // uncomment below and update the code to test the property win
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

    it('should have the property worseThanDoubleBogey (base name: "WorseThanDoubleBogey")', function() {
      // uncomment below and update the code to test the property worseThanDoubleBogey
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

    it('should have the property worseThanTripleBogey (base name: "WorseThanTripleBogey")', function() {
      // uncomment below and update the code to test the property worseThanTripleBogey
      //var instance = new GolfV2.PlayerTournamentProjection();
      //expect(instance).to.be();
    });

  });

}));
