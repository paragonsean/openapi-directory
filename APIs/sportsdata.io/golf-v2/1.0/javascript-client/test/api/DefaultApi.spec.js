/**
 * Golf v2
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GolfV2);
  }
}(this, function(expect, GolfV2) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GolfV2.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('currentSeason', function() {
      it('should call currentSeason successfully', function(done) {
        //uncomment below and update the code to test currentSeason
        //instance.currentSeason(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dfsSlates', function() {
      it('should call dfsSlates successfully', function(done) {
        //uncomment below and update the code to test dfsSlates
        //instance.dfsSlates(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('injuries', function() {
      it('should call injuries successfully', function(done) {
        //uncomment below and update the code to test injuries
        //instance.injuries(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('injuriesHistorical', function() {
      it('should call injuriesHistorical successfully', function(done) {
        //uncomment below and update the code to test injuriesHistorical
        //instance.injuriesHistorical(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('leaderboard', function() {
      it('should call leaderboard successfully', function(done) {
        //uncomment below and update the code to test leaderboard
        //instance.leaderboard(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('news', function() {
      it('should call news successfully', function(done) {
        //uncomment below and update the code to test news
        //instance.news(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('newsByDate', function() {
      it('should call newsByDate successfully', function(done) {
        //uncomment below and update the code to test newsByDate
        //instance.newsByDate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('newsByPlayer', function() {
      it('should call newsByPlayer successfully', function(done) {
        //uncomment below and update the code to test newsByPlayer
        //instance.newsByPlayer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('player', function() {
      it('should call player successfully', function(done) {
        //uncomment below and update the code to test player
        //instance.player(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('playerSeasonStatsWWorldGolfRankings', function() {
      it('should call playerSeasonStatsWWorldGolfRankings successfully', function(done) {
        //uncomment below and update the code to test playerSeasonStatsWWorldGolfRankings
        //instance.playerSeasonStatsWWorldGolfRankings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('playerTournamentProjectedStatsWDraftkingsSalaries', function() {
      it('should call playerTournamentProjectedStatsWDraftkingsSalaries successfully', function(done) {
        //uncomment below and update the code to test playerTournamentProjectedStatsWDraftkingsSalaries
        //instance.playerTournamentProjectedStatsWDraftkingsSalaries(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('playerTournamentStatsByPlayer', function() {
      it('should call playerTournamentStatsByPlayer successfully', function(done) {
        //uncomment below and update the code to test playerTournamentStatsByPlayer
        //instance.playerTournamentStatsByPlayer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('players', function() {
      it('should call players successfully', function(done) {
        //uncomment below and update the code to test players
        //instance.players(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('schedule', function() {
      it('should call schedule successfully', function(done) {
        //uncomment below and update the code to test schedule
        //instance.schedule(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('scheduleBySeason', function() {
      it('should call scheduleBySeason successfully', function(done) {
        //uncomment below and update the code to test scheduleBySeason
        //instance.scheduleBySeason(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
