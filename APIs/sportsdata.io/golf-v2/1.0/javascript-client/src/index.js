/**
 * Golf v2
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import DfsSlate from './model/DfsSlate';
import DfsSlatePlayer from './model/DfsSlatePlayer';
import DfsSlateTournament from './model/DfsSlateTournament';
import Injury from './model/Injury';
import Leaderboard from './model/Leaderboard';
import News from './model/News';
import Player from './model/Player';
import PlayerHole from './model/PlayerHole';
import PlayerRound from './model/PlayerRound';
import PlayerSeason from './model/PlayerSeason';
import PlayerTournament from './model/PlayerTournament';
import PlayerTournamentProjection from './model/PlayerTournamentProjection';
import Round from './model/Round';
import Season from './model/Season';
import Tournament from './model/Tournament';
import DefaultApi from './api/DefaultApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var GolfV2 = require('index'); // See note below*.
* var xxxSvc = new GolfV2.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new GolfV2.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new GolfV2.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new GolfV2.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The DfsSlate model constructor.
     * @property {module:model/DfsSlate}
     */
    DfsSlate,

    /**
     * The DfsSlatePlayer model constructor.
     * @property {module:model/DfsSlatePlayer}
     */
    DfsSlatePlayer,

    /**
     * The DfsSlateTournament model constructor.
     * @property {module:model/DfsSlateTournament}
     */
    DfsSlateTournament,

    /**
     * The Injury model constructor.
     * @property {module:model/Injury}
     */
    Injury,

    /**
     * The Leaderboard model constructor.
     * @property {module:model/Leaderboard}
     */
    Leaderboard,

    /**
     * The News model constructor.
     * @property {module:model/News}
     */
    News,

    /**
     * The Player model constructor.
     * @property {module:model/Player}
     */
    Player,

    /**
     * The PlayerHole model constructor.
     * @property {module:model/PlayerHole}
     */
    PlayerHole,

    /**
     * The PlayerRound model constructor.
     * @property {module:model/PlayerRound}
     */
    PlayerRound,

    /**
     * The PlayerSeason model constructor.
     * @property {module:model/PlayerSeason}
     */
    PlayerSeason,

    /**
     * The PlayerTournament model constructor.
     * @property {module:model/PlayerTournament}
     */
    PlayerTournament,

    /**
     * The PlayerTournamentProjection model constructor.
     * @property {module:model/PlayerTournamentProjection}
     */
    PlayerTournamentProjection,

    /**
     * The Round model constructor.
     * @property {module:model/Round}
     */
    Round,

    /**
     * The Season model constructor.
     * @property {module:model/Season}
     */
    Season,

    /**
     * The Tournament model constructor.
     * @property {module:model/Tournament}
     */
    Tournament,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
