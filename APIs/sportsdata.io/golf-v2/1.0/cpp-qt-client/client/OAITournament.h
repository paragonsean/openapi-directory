/**
 * Golf v2
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITournament.h
 *
 * 
 */

#ifndef OAITournament_H
#define OAITournament_H

#include <QJsonObject>

#include "OAIRound.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRound;

class OAITournament : public OAIObject {
public:
    OAITournament();
    OAITournament(QString json);
    ~OAITournament() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isCanceled() const;
    void setCanceled(const bool &canceled);
    bool is_canceled_Set() const;
    bool is_canceled_Valid() const;

    QString getCity() const;
    void setCity(const QString &city);
    bool is_city_Set() const;
    bool is_city_Valid() const;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    bool isCovered() const;
    void setCovered(const bool &covered);
    bool is_covered_Set() const;
    bool is_covered_Valid() const;

    QString getEndDate() const;
    void setEndDate(const QString &end_date);
    bool is_end_date_Set() const;
    bool is_end_date_Valid() const;

    QString getFormat() const;
    void setFormat(const QString &format);
    bool is_format_Set() const;
    bool is_format_Valid() const;

    bool isIsInProgress() const;
    void setIsInProgress(const bool &is_in_progress);
    bool is_is_in_progress_Set() const;
    bool is_is_in_progress_Valid() const;

    bool isIsOver() const;
    void setIsOver(const bool &is_over);
    bool is_is_over_Set() const;
    bool is_is_over_Valid() const;

    QString getLocation() const;
    void setLocation(const QString &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getOddsCoverage() const;
    void setOddsCoverage(const QString &odds_coverage);
    bool is_odds_coverage_Set() const;
    bool is_odds_coverage_Valid() const;

    qint32 getPar() const;
    void setPar(const qint32 &par);
    bool is_par_Set() const;
    bool is_par_Valid() const;

    double getPurse() const;
    void setPurse(const double &purse);
    bool is_purse_Set() const;
    bool is_purse_Valid() const;

    QList<OAIRound> getRounds() const;
    void setRounds(const QList<OAIRound> &rounds);
    bool is_rounds_Set() const;
    bool is_rounds_Valid() const;

    QString getSportRadarTournamentId() const;
    void setSportRadarTournamentId(const QString &sport_radar_tournament_id);
    bool is_sport_radar_tournament_id_Set() const;
    bool is_sport_radar_tournament_id_Valid() const;

    QString getStartDate() const;
    void setStartDate(const QString &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    QString getStartDateTime() const;
    void setStartDateTime(const QString &start_date_time);
    bool is_start_date_time_Set() const;
    bool is_start_date_time_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getTimeZone() const;
    void setTimeZone(const QString &time_zone);
    bool is_time_zone_Set() const;
    bool is_time_zone_Valid() const;

    qint32 getTournamentId() const;
    void setTournamentId(const qint32 &tournament_id);
    bool is_tournament_id_Set() const;
    bool is_tournament_id_Valid() const;

    QString getVenue() const;
    void setVenue(const QString &venue);
    bool is_venue_Set() const;
    bool is_venue_Valid() const;

    qint32 getYards() const;
    void setYards(const qint32 &yards);
    bool is_yards_Set() const;
    bool is_yards_Valid() const;

    QString getZipCode() const;
    void setZipCode(const QString &zip_code);
    bool is_zip_code_Set() const;
    bool is_zip_code_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_canceled;
    bool m_canceled_isSet;
    bool m_canceled_isValid;

    QString m_city;
    bool m_city_isSet;
    bool m_city_isValid;

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    bool m_covered;
    bool m_covered_isSet;
    bool m_covered_isValid;

    QString m_end_date;
    bool m_end_date_isSet;
    bool m_end_date_isValid;

    QString m_format;
    bool m_format_isSet;
    bool m_format_isValid;

    bool m_is_in_progress;
    bool m_is_in_progress_isSet;
    bool m_is_in_progress_isValid;

    bool m_is_over;
    bool m_is_over_isSet;
    bool m_is_over_isValid;

    QString m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_odds_coverage;
    bool m_odds_coverage_isSet;
    bool m_odds_coverage_isValid;

    qint32 m_par;
    bool m_par_isSet;
    bool m_par_isValid;

    double m_purse;
    bool m_purse_isSet;
    bool m_purse_isValid;

    QList<OAIRound> m_rounds;
    bool m_rounds_isSet;
    bool m_rounds_isValid;

    QString m_sport_radar_tournament_id;
    bool m_sport_radar_tournament_id_isSet;
    bool m_sport_radar_tournament_id_isValid;

    QString m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;

    QString m_start_date_time;
    bool m_start_date_time_isSet;
    bool m_start_date_time_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_time_zone;
    bool m_time_zone_isSet;
    bool m_time_zone_isValid;

    qint32 m_tournament_id;
    bool m_tournament_id_isSet;
    bool m_tournament_id_isValid;

    QString m_venue;
    bool m_venue_isSet;
    bool m_venue_isValid;

    qint32 m_yards;
    bool m_yards_isSet;
    bool m_yards_isValid;

    QString m_zip_code;
    bool m_zip_code_isSet;
    bool m_zip_code_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITournament)

#endif // OAITournament_H
