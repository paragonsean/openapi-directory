/**
 * Golf v2
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILeaderboard.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILeaderboard::OAILeaderboard(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILeaderboard::OAILeaderboard() {
    this->initializeModel();
}

OAILeaderboard::~OAILeaderboard() {}

void OAILeaderboard::initializeModel() {

    m_players_isSet = false;
    m_players_isValid = false;

    m_tournament_isSet = false;
    m_tournament_isValid = false;
}

void OAILeaderboard::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILeaderboard::fromJsonObject(QJsonObject json) {

    m_players_isValid = ::OpenAPI::fromJsonValue(m_players, json[QString("Players")]);
    m_players_isSet = !json[QString("Players")].isNull() && m_players_isValid;

    m_tournament_isValid = ::OpenAPI::fromJsonValue(m_tournament, json[QString("Tournament")]);
    m_tournament_isSet = !json[QString("Tournament")].isNull() && m_tournament_isValid;
}

QString OAILeaderboard::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILeaderboard::asJsonObject() const {
    QJsonObject obj;
    if (m_players.size() > 0) {
        obj.insert(QString("Players"), ::OpenAPI::toJsonValue(m_players));
    }
    if (m_tournament.isSet()) {
        obj.insert(QString("Tournament"), ::OpenAPI::toJsonValue(m_tournament));
    }
    return obj;
}

QList<OAIPlayerTournament> OAILeaderboard::getPlayers() const {
    return m_players;
}
void OAILeaderboard::setPlayers(const QList<OAIPlayerTournament> &players) {
    m_players = players;
    m_players_isSet = true;
}

bool OAILeaderboard::is_players_Set() const{
    return m_players_isSet;
}

bool OAILeaderboard::is_players_Valid() const{
    return m_players_isValid;
}

OAITournament OAILeaderboard::getTournament() const {
    return m_tournament;
}
void OAILeaderboard::setTournament(const OAITournament &tournament) {
    m_tournament = tournament;
    m_tournament_isSet = true;
}

bool OAILeaderboard::is_tournament_Set() const{
    return m_tournament_isSet;
}

bool OAILeaderboard::is_tournament_Valid() const{
    return m_tournament_isValid;
}

bool OAILeaderboard::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_players.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_tournament.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILeaderboard::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
