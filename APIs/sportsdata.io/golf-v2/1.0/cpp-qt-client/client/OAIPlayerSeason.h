/**
 * Golf v2
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPlayerSeason.h
 *
 * 
 */

#ifndef OAIPlayerSeason_H
#define OAIPlayerSeason_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPlayerSeason : public OAIObject {
public:
    OAIPlayerSeason();
    OAIPlayerSeason(QString json);
    ~OAIPlayerSeason() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAveragePoints() const;
    void setAveragePoints(const double &average_points);
    bool is_average_points_Set() const;
    bool is_average_points_Valid() const;

    qint32 getEvents() const;
    void setEvents(const qint32 &events);
    bool is_events_Set() const;
    bool is_events_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getPlayerId() const;
    void setPlayerId(const qint32 &player_id);
    bool is_player_id_Set() const;
    bool is_player_id_Valid() const;

    qint32 getPlayerSeasonId() const;
    void setPlayerSeasonId(const qint32 &player_season_id);
    bool is_player_season_id_Set() const;
    bool is_player_season_id_Valid() const;

    double getPointsGained() const;
    void setPointsGained(const double &points_gained);
    bool is_points_gained_Set() const;
    bool is_points_gained_Valid() const;

    double getPointsLost() const;
    void setPointsLost(const double &points_lost);
    bool is_points_lost_Set() const;
    bool is_points_lost_Valid() const;

    qint32 getSeason() const;
    void setSeason(const qint32 &season);
    bool is_season_Set() const;
    bool is_season_Valid() const;

    double getTotalPoints() const;
    void setTotalPoints(const double &total_points);
    bool is_total_points_Set() const;
    bool is_total_points_Valid() const;

    qint32 getWorldGolfRank() const;
    void setWorldGolfRank(const qint32 &world_golf_rank);
    bool is_world_golf_rank_Set() const;
    bool is_world_golf_rank_Valid() const;

    qint32 getWorldGolfRankLastWeek() const;
    void setWorldGolfRankLastWeek(const qint32 &world_golf_rank_last_week);
    bool is_world_golf_rank_last_week_Set() const;
    bool is_world_golf_rank_last_week_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_average_points;
    bool m_average_points_isSet;
    bool m_average_points_isValid;

    qint32 m_events;
    bool m_events_isSet;
    bool m_events_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_player_id;
    bool m_player_id_isSet;
    bool m_player_id_isValid;

    qint32 m_player_season_id;
    bool m_player_season_id_isSet;
    bool m_player_season_id_isValid;

    double m_points_gained;
    bool m_points_gained_isSet;
    bool m_points_gained_isValid;

    double m_points_lost;
    bool m_points_lost_isSet;
    bool m_points_lost_isValid;

    qint32 m_season;
    bool m_season_isSet;
    bool m_season_isValid;

    double m_total_points;
    bool m_total_points_isSet;
    bool m_total_points_isValid;

    qint32 m_world_golf_rank;
    bool m_world_golf_rank_isSet;
    bool m_world_golf_rank_isValid;

    qint32 m_world_golf_rank_last_week;
    bool m_world_golf_rank_last_week_isSet;
    bool m_world_golf_rank_last_week_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPlayerSeason)

#endif // OAIPlayerSeason_H
