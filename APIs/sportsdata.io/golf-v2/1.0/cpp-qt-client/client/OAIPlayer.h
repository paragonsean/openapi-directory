/**
 * Golf v2
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPlayer.h
 *
 * 
 */

#ifndef OAIPlayer_H
#define OAIPlayer_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPlayer : public OAIObject {
public:
    OAIPlayer();
    OAIPlayer(QString json);
    ~OAIPlayer() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBirthCity() const;
    void setBirthCity(const QString &birth_city);
    bool is_birth_city_Set() const;
    bool is_birth_city_Valid() const;

    QString getBirthDate() const;
    void setBirthDate(const QString &birth_date);
    bool is_birth_date_Set() const;
    bool is_birth_date_Valid() const;

    QString getBirthState() const;
    void setBirthState(const QString &birth_state);
    bool is_birth_state_Set() const;
    bool is_birth_state_Valid() const;

    QString getCollege() const;
    void setCollege(const QString &college);
    bool is_college_Set() const;
    bool is_college_Valid() const;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    QString getDraftKingsName() const;
    void setDraftKingsName(const QString &draft_kings_name);
    bool is_draft_kings_name_Set() const;
    bool is_draft_kings_name_Valid() const;

    qint32 getDraftKingsPlayerId() const;
    void setDraftKingsPlayerId(const qint32 &draft_kings_player_id);
    bool is_draft_kings_player_id_Set() const;
    bool is_draft_kings_player_id_Valid() const;

    QString getFanDuelName() const;
    void setFanDuelName(const QString &fan_duel_name);
    bool is_fan_duel_name_Set() const;
    bool is_fan_duel_name_Valid() const;

    qint32 getFanDuelPlayerId() const;
    void setFanDuelPlayerId(const qint32 &fan_duel_player_id);
    bool is_fan_duel_player_id_Set() const;
    bool is_fan_duel_player_id_Valid() const;

    qint32 getFantasyAlarmPlayerId() const;
    void setFantasyAlarmPlayerId(const qint32 &fantasy_alarm_player_id);
    bool is_fantasy_alarm_player_id_Set() const;
    bool is_fantasy_alarm_player_id_Valid() const;

    QString getFantasyDraftName() const;
    void setFantasyDraftName(const QString &fantasy_draft_name);
    bool is_fantasy_draft_name_Set() const;
    bool is_fantasy_draft_name_Valid() const;

    qint32 getFantasyDraftPlayerId() const;
    void setFantasyDraftPlayerId(const qint32 &fantasy_draft_player_id);
    bool is_fantasy_draft_player_id_Set() const;
    bool is_fantasy_draft_player_id_Valid() const;

    QString getFirstName() const;
    void setFirstName(const QString &first_name);
    bool is_first_name_Set() const;
    bool is_first_name_Valid() const;

    QString getLastName() const;
    void setLastName(const QString &last_name);
    bool is_last_name_Set() const;
    bool is_last_name_Valid() const;

    qint32 getPgaDebut() const;
    void setPgaDebut(const qint32 &pga_debut);
    bool is_pga_debut_Set() const;
    bool is_pga_debut_Valid() const;

    qint32 getPgaTourPlayerId() const;
    void setPgaTourPlayerId(const qint32 &pga_tour_player_id);
    bool is_pga_tour_player_id_Set() const;
    bool is_pga_tour_player_id_Valid() const;

    QString getPhotoUrl() const;
    void setPhotoUrl(const QString &photo_url);
    bool is_photo_url_Set() const;
    bool is_photo_url_Valid() const;

    qint32 getPlayerId() const;
    void setPlayerId(const qint32 &player_id);
    bool is_player_id_Set() const;
    bool is_player_id_Valid() const;

    qint32 getRotoWirePlayerId() const;
    void setRotoWirePlayerId(const qint32 &roto_wire_player_id);
    bool is_roto_wire_player_id_Set() const;
    bool is_roto_wire_player_id_Valid() const;

    qint32 getRotoworldPlayerId() const;
    void setRotoworldPlayerId(const qint32 &rotoworld_player_id);
    bool is_rotoworld_player_id_Set() const;
    bool is_rotoworld_player_id_Valid() const;

    QString getSportRadarPlayerId() const;
    void setSportRadarPlayerId(const QString &sport_radar_player_id);
    bool is_sport_radar_player_id_Set() const;
    bool is_sport_radar_player_id_Valid() const;

    QString getSwings() const;
    void setSwings(const QString &swings);
    bool is_swings_Set() const;
    bool is_swings_Valid() const;

    qint32 getWeight() const;
    void setWeight(const qint32 &weight);
    bool is_weight_Set() const;
    bool is_weight_Valid() const;

    qint32 getYahooPlayerId() const;
    void setYahooPlayerId(const qint32 &yahoo_player_id);
    bool is_yahoo_player_id_Set() const;
    bool is_yahoo_player_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_birth_city;
    bool m_birth_city_isSet;
    bool m_birth_city_isValid;

    QString m_birth_date;
    bool m_birth_date_isSet;
    bool m_birth_date_isValid;

    QString m_birth_state;
    bool m_birth_state_isSet;
    bool m_birth_state_isValid;

    QString m_college;
    bool m_college_isSet;
    bool m_college_isValid;

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    QString m_draft_kings_name;
    bool m_draft_kings_name_isSet;
    bool m_draft_kings_name_isValid;

    qint32 m_draft_kings_player_id;
    bool m_draft_kings_player_id_isSet;
    bool m_draft_kings_player_id_isValid;

    QString m_fan_duel_name;
    bool m_fan_duel_name_isSet;
    bool m_fan_duel_name_isValid;

    qint32 m_fan_duel_player_id;
    bool m_fan_duel_player_id_isSet;
    bool m_fan_duel_player_id_isValid;

    qint32 m_fantasy_alarm_player_id;
    bool m_fantasy_alarm_player_id_isSet;
    bool m_fantasy_alarm_player_id_isValid;

    QString m_fantasy_draft_name;
    bool m_fantasy_draft_name_isSet;
    bool m_fantasy_draft_name_isValid;

    qint32 m_fantasy_draft_player_id;
    bool m_fantasy_draft_player_id_isSet;
    bool m_fantasy_draft_player_id_isValid;

    QString m_first_name;
    bool m_first_name_isSet;
    bool m_first_name_isValid;

    QString m_last_name;
    bool m_last_name_isSet;
    bool m_last_name_isValid;

    qint32 m_pga_debut;
    bool m_pga_debut_isSet;
    bool m_pga_debut_isValid;

    qint32 m_pga_tour_player_id;
    bool m_pga_tour_player_id_isSet;
    bool m_pga_tour_player_id_isValid;

    QString m_photo_url;
    bool m_photo_url_isSet;
    bool m_photo_url_isValid;

    qint32 m_player_id;
    bool m_player_id_isSet;
    bool m_player_id_isValid;

    qint32 m_roto_wire_player_id;
    bool m_roto_wire_player_id_isSet;
    bool m_roto_wire_player_id_isValid;

    qint32 m_rotoworld_player_id;
    bool m_rotoworld_player_id_isSet;
    bool m_rotoworld_player_id_isValid;

    QString m_sport_radar_player_id;
    bool m_sport_radar_player_id_isSet;
    bool m_sport_radar_player_id_isValid;

    QString m_swings;
    bool m_swings_isSet;
    bool m_swings_isValid;

    qint32 m_weight;
    bool m_weight_isSet;
    bool m_weight_isValid;

    qint32 m_yahoo_player_id;
    bool m_yahoo_player_id_isSet;
    bool m_yahoo_player_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPlayer)

#endif // OAIPlayer_H
