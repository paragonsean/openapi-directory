/**
 * Golf v2
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPlayerHole.h
 *
 * 
 */

#ifndef OAIPlayerHole_H
#define OAIPlayerHole_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPlayerHole : public OAIObject {
public:
    OAIPlayerHole();
    OAIPlayerHole(QString json);
    ~OAIPlayerHole() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isBirdie() const;
    void setBirdie(const bool &birdie);
    bool is_birdie_Set() const;
    bool is_birdie_Valid() const;

    bool isBogey() const;
    void setBogey(const bool &bogey);
    bool is_bogey_Set() const;
    bool is_bogey_Valid() const;

    bool isDoubleBogey() const;
    void setDoubleBogey(const bool &double_bogey);
    bool is_double_bogey_Set() const;
    bool is_double_bogey_Valid() const;

    bool isDoubleEagle() const;
    void setDoubleEagle(const bool &double_eagle);
    bool is_double_eagle_Set() const;
    bool is_double_eagle_Valid() const;

    bool isEagle() const;
    void setEagle(const bool &eagle);
    bool is_eagle_Set() const;
    bool is_eagle_Valid() const;

    bool isHoleInOne() const;
    void setHoleInOne(const bool &hole_in_one);
    bool is_hole_in_one_Set() const;
    bool is_hole_in_one_Valid() const;

    bool isIsPar() const;
    void setIsPar(const bool &is_par);
    bool is_is_par_Set() const;
    bool is_is_par_Valid() const;

    qint32 getNumber() const;
    void setNumber(const qint32 &number);
    bool is_number_Set() const;
    bool is_number_Valid() const;

    qint32 getPar() const;
    void setPar(const qint32 &par);
    bool is_par_Set() const;
    bool is_par_Valid() const;

    qint32 getPlayerRoundId() const;
    void setPlayerRoundId(const qint32 &player_round_id);
    bool is_player_round_id_Set() const;
    bool is_player_round_id_Valid() const;

    qint32 getScore() const;
    void setScore(const qint32 &score);
    bool is_score_Set() const;
    bool is_score_Valid() const;

    qint32 getToPar() const;
    void setToPar(const qint32 &to_par);
    bool is_to_par_Set() const;
    bool is_to_par_Valid() const;

    bool isWorseThanDoubleBogey() const;
    void setWorseThanDoubleBogey(const bool &worse_than_double_bogey);
    bool is_worse_than_double_bogey_Set() const;
    bool is_worse_than_double_bogey_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_birdie;
    bool m_birdie_isSet;
    bool m_birdie_isValid;

    bool m_bogey;
    bool m_bogey_isSet;
    bool m_bogey_isValid;

    bool m_double_bogey;
    bool m_double_bogey_isSet;
    bool m_double_bogey_isValid;

    bool m_double_eagle;
    bool m_double_eagle_isSet;
    bool m_double_eagle_isValid;

    bool m_eagle;
    bool m_eagle_isSet;
    bool m_eagle_isValid;

    bool m_hole_in_one;
    bool m_hole_in_one_isSet;
    bool m_hole_in_one_isValid;

    bool m_is_par;
    bool m_is_par_isSet;
    bool m_is_par_isValid;

    qint32 m_number;
    bool m_number_isSet;
    bool m_number_isValid;

    qint32 m_par;
    bool m_par_isSet;
    bool m_par_isValid;

    qint32 m_player_round_id;
    bool m_player_round_id_isSet;
    bool m_player_round_id_isValid;

    qint32 m_score;
    bool m_score_isSet;
    bool m_score_isValid;

    qint32 m_to_par;
    bool m_to_par_isSet;
    bool m_to_par_isValid;

    bool m_worse_than_double_bogey;
    bool m_worse_than_double_bogey_isSet;
    bool m_worse_than_double_bogey_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPlayerHole)

#endif // OAIPlayerHole_H
