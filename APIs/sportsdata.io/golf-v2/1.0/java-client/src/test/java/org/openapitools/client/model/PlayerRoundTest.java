/*
 * Golf v2
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.PlayerHole;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for PlayerRound
 */
public class PlayerRoundTest {
    private final PlayerRound model = new PlayerRound();

    /**
     * Model tests for PlayerRound
     */
    @Test
    public void testPlayerRound() {
        // TODO: test PlayerRound
    }

    /**
     * Test the property 'backNineStart'
     */
    @Test
    public void backNineStartTest() {
        // TODO: test backNineStart
    }

    /**
     * Test the property 'birdies'
     */
    @Test
    public void birdiesTest() {
        // TODO: test birdies
    }

    /**
     * Test the property 'bogeyFree'
     */
    @Test
    public void bogeyFreeTest() {
        // TODO: test bogeyFree
    }

    /**
     * Test the property 'bogeys'
     */
    @Test
    public void bogeysTest() {
        // TODO: test bogeys
    }

    /**
     * Test the property 'bounceBackCount'
     */
    @Test
    public void bounceBackCountTest() {
        // TODO: test bounceBackCount
    }

    /**
     * Test the property 'consecutiveBirdieOrBetterCount'
     */
    @Test
    public void consecutiveBirdieOrBetterCountTest() {
        // TODO: test consecutiveBirdieOrBetterCount
    }

    /**
     * Test the property 'day'
     */
    @Test
    public void dayTest() {
        // TODO: test day
    }

    /**
     * Test the property 'doubleBogeys'
     */
    @Test
    public void doubleBogeysTest() {
        // TODO: test doubleBogeys
    }

    /**
     * Test the property 'doubleEagles'
     */
    @Test
    public void doubleEaglesTest() {
        // TODO: test doubleEagles
    }

    /**
     * Test the property 'eagles'
     */
    @Test
    public void eaglesTest() {
        // TODO: test eagles
    }

    /**
     * Test the property 'holeInOnes'
     */
    @Test
    public void holeInOnesTest() {
        // TODO: test holeInOnes
    }

    /**
     * Test the property 'holes'
     */
    @Test
    public void holesTest() {
        // TODO: test holes
    }

    /**
     * Test the property 'includesFiveOrMoreBirdiesOrBetter'
     */
    @Test
    public void includesFiveOrMoreBirdiesOrBetterTest() {
        // TODO: test includesFiveOrMoreBirdiesOrBetter
    }

    /**
     * Test the property 'includesStreakOfFiveBirdiesOrBetter'
     */
    @Test
    public void includesStreakOfFiveBirdiesOrBetterTest() {
        // TODO: test includesStreakOfFiveBirdiesOrBetter
    }

    /**
     * Test the property 'includesStreakOfFourBirdiesOrBetter'
     */
    @Test
    public void includesStreakOfFourBirdiesOrBetterTest() {
        // TODO: test includesStreakOfFourBirdiesOrBetter
    }

    /**
     * Test the property 'includesStreakOfSixBirdiesOrBetter'
     */
    @Test
    public void includesStreakOfSixBirdiesOrBetterTest() {
        // TODO: test includesStreakOfSixBirdiesOrBetter
    }

    /**
     * Test the property 'includesStreakOfThreeBirdiesOrBetter'
     */
    @Test
    public void includesStreakOfThreeBirdiesOrBetterTest() {
        // TODO: test includesStreakOfThreeBirdiesOrBetter
    }

    /**
     * Test the property 'longestBirdieOrBetterStreak'
     */
    @Test
    public void longestBirdieOrBetterStreakTest() {
        // TODO: test longestBirdieOrBetterStreak
    }

    /**
     * Test the property 'number'
     */
    @Test
    public void numberTest() {
        // TODO: test number
    }

    /**
     * Test the property 'par'
     */
    @Test
    public void parTest() {
        // TODO: test par
    }

    /**
     * Test the property 'pars'
     */
    @Test
    public void parsTest() {
        // TODO: test pars
    }

    /**
     * Test the property 'playerRoundID'
     */
    @Test
    public void playerRoundIDTest() {
        // TODO: test playerRoundID
    }

    /**
     * Test the property 'playerTournamentID'
     */
    @Test
    public void playerTournamentIDTest() {
        // TODO: test playerTournamentID
    }

    /**
     * Test the property 'score'
     */
    @Test
    public void scoreTest() {
        // TODO: test score
    }

    /**
     * Test the property 'teeTime'
     */
    @Test
    public void teeTimeTest() {
        // TODO: test teeTime
    }

    /**
     * Test the property 'tripleBogeys'
     */
    @Test
    public void tripleBogeysTest() {
        // TODO: test tripleBogeys
    }

    /**
     * Test the property 'worseThanDoubleBogey'
     */
    @Test
    public void worseThanDoubleBogeyTest() {
        // TODO: test worseThanDoubleBogey
    }

    /**
     * Test the property 'worseThanTripleBogey'
     */
    @Test
    public void worseThanTripleBogeyTest() {
        // TODO: test worseThanTripleBogey
    }

}
