/**
 * MLB v3 Projections
 * MLB projections API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DepthChart model module.
 * @module model/DepthChart
 * @version 1.0
 */
class DepthChart {
    /**
     * Constructs a new <code>DepthChart</code>.
     * @alias module:model/DepthChart
     */
    constructor() { 
        
        DepthChart.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DepthChart</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DepthChart} obj Optional instance to populate.
     * @return {module:model/DepthChart} The populated <code>DepthChart</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DepthChart();

            if (data.hasOwnProperty('DepthChartID')) {
                obj['DepthChartID'] = ApiClient.convertToType(data['DepthChartID'], 'Number');
            }
            if (data.hasOwnProperty('DepthOrder')) {
                obj['DepthOrder'] = ApiClient.convertToType(data['DepthOrder'], 'Number');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('PlayerID')) {
                obj['PlayerID'] = ApiClient.convertToType(data['PlayerID'], 'Number');
            }
            if (data.hasOwnProperty('Position')) {
                obj['Position'] = ApiClient.convertToType(data['Position'], 'String');
            }
            if (data.hasOwnProperty('PositionCategory')) {
                obj['PositionCategory'] = ApiClient.convertToType(data['PositionCategory'], 'String');
            }
            if (data.hasOwnProperty('TeamID')) {
                obj['TeamID'] = ApiClient.convertToType(data['TeamID'], 'Number');
            }
            if (data.hasOwnProperty('Updated')) {
                obj['Updated'] = ApiClient.convertToType(data['Updated'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DepthChart</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DepthChart</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // ensure the json data is a string
        if (data['Position'] && !(typeof data['Position'] === 'string' || data['Position'] instanceof String)) {
            throw new Error("Expected the field `Position` to be a primitive type in the JSON string but got " + data['Position']);
        }
        // ensure the json data is a string
        if (data['PositionCategory'] && !(typeof data['PositionCategory'] === 'string' || data['PositionCategory'] instanceof String)) {
            throw new Error("Expected the field `PositionCategory` to be a primitive type in the JSON string but got " + data['PositionCategory']);
        }
        // ensure the json data is a string
        if (data['Updated'] && !(typeof data['Updated'] === 'string' || data['Updated'] instanceof String)) {
            throw new Error("Expected the field `Updated` to be a primitive type in the JSON string but got " + data['Updated']);
        }

        return true;
    }


}



/**
 * @member {Number} DepthChartID
 */
DepthChart.prototype['DepthChartID'] = undefined;

/**
 * @member {Number} DepthOrder
 */
DepthChart.prototype['DepthOrder'] = undefined;

/**
 * @member {String} Name
 */
DepthChart.prototype['Name'] = undefined;

/**
 * @member {Number} PlayerID
 */
DepthChart.prototype['PlayerID'] = undefined;

/**
 * @member {String} Position
 */
DepthChart.prototype['Position'] = undefined;

/**
 * @member {String} PositionCategory
 */
DepthChart.prototype['PositionCategory'] = undefined;

/**
 * @member {Number} TeamID
 */
DepthChart.prototype['TeamID'] = undefined;

/**
 * @member {String} Updated
 */
DepthChart.prototype['Updated'] = undefined;






export default DepthChart;

