/**
 * Soccer v3 Stats
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBoxScore.h
 *
 * 
 */

#ifndef OAIBoxScore_H
#define OAIBoxScore_H

#include <QJsonObject>

#include "OAIBooking.h"
#include "OAICoach.h"
#include "OAIGame.h"
#include "OAIGoal.h"
#include "OAILineup.h"
#include "OAIPenaltyShootout.h"
#include "OAIPlayerGame.h"
#include "OAIReferee.h"
#include "OAITeamGame.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIReferee;
class OAICoach;
class OAIBooking;
class OAIGame;
class OAIGoal;
class OAILineup;
class OAIPenaltyShootout;
class OAIPlayerGame;
class OAITeamGame;

class OAIBoxScore : public OAIObject {
public:
    OAIBoxScore();
    OAIBoxScore(QString json);
    ~OAIBoxScore() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIReferee getAdditionalAssistantReferee1() const;
    void setAdditionalAssistantReferee1(const OAIReferee &additional_assistant_referee1);
    bool is_additional_assistant_referee1_Set() const;
    bool is_additional_assistant_referee1_Valid() const;

    OAIReferee getAdditionalAssistantReferee2() const;
    void setAdditionalAssistantReferee2(const OAIReferee &additional_assistant_referee2);
    bool is_additional_assistant_referee2_Set() const;
    bool is_additional_assistant_referee2_Valid() const;

    OAIReferee getAssistantReferee1() const;
    void setAssistantReferee1(const OAIReferee &assistant_referee1);
    bool is_assistant_referee1_Set() const;
    bool is_assistant_referee1_Valid() const;

    OAIReferee getAssistantReferee2() const;
    void setAssistantReferee2(const OAIReferee &assistant_referee2);
    bool is_assistant_referee2_Set() const;
    bool is_assistant_referee2_Valid() const;

    OAICoach getAwayTeamCoach() const;
    void setAwayTeamCoach(const OAICoach &away_team_coach);
    bool is_away_team_coach_Set() const;
    bool is_away_team_coach_Valid() const;

    QList<OAIBooking> getBookings() const;
    void setBookings(const QList<OAIBooking> &bookings);
    bool is_bookings_Set() const;
    bool is_bookings_Valid() const;

    OAIReferee getFourthReferee() const;
    void setFourthReferee(const OAIReferee &fourth_referee);
    bool is_fourth_referee_Set() const;
    bool is_fourth_referee_Valid() const;

    OAIGame getGame() const;
    void setGame(const OAIGame &game);
    bool is_game_Set() const;
    bool is_game_Valid() const;

    QList<OAIGoal> getGoals() const;
    void setGoals(const QList<OAIGoal> &goals);
    bool is_goals_Set() const;
    bool is_goals_Valid() const;

    OAICoach getHomeTeamCoach() const;
    void setHomeTeamCoach(const OAICoach &home_team_coach);
    bool is_home_team_coach_Set() const;
    bool is_home_team_coach_Valid() const;

    QList<OAILineup> getLineups() const;
    void setLineups(const QList<OAILineup> &lineups);
    bool is_lineups_Set() const;
    bool is_lineups_Valid() const;

    OAIReferee getMainReferee() const;
    void setMainReferee(const OAIReferee &main_referee);
    bool is_main_referee_Set() const;
    bool is_main_referee_Valid() const;

    QList<OAIPenaltyShootout> getPenaltyShootouts() const;
    void setPenaltyShootouts(const QList<OAIPenaltyShootout> &penalty_shootouts);
    bool is_penalty_shootouts_Set() const;
    bool is_penalty_shootouts_Valid() const;

    QList<OAIPlayerGame> getPlayerGames() const;
    void setPlayerGames(const QList<OAIPlayerGame> &player_games);
    bool is_player_games_Set() const;
    bool is_player_games_Valid() const;

    QList<OAITeamGame> getTeamGames() const;
    void setTeamGames(const QList<OAITeamGame> &team_games);
    bool is_team_games_Set() const;
    bool is_team_games_Valid() const;

    OAIReferee getVideoAssistantReferee() const;
    void setVideoAssistantReferee(const OAIReferee &video_assistant_referee);
    bool is_video_assistant_referee_Set() const;
    bool is_video_assistant_referee_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIReferee m_additional_assistant_referee1;
    bool m_additional_assistant_referee1_isSet;
    bool m_additional_assistant_referee1_isValid;

    OAIReferee m_additional_assistant_referee2;
    bool m_additional_assistant_referee2_isSet;
    bool m_additional_assistant_referee2_isValid;

    OAIReferee m_assistant_referee1;
    bool m_assistant_referee1_isSet;
    bool m_assistant_referee1_isValid;

    OAIReferee m_assistant_referee2;
    bool m_assistant_referee2_isSet;
    bool m_assistant_referee2_isValid;

    OAICoach m_away_team_coach;
    bool m_away_team_coach_isSet;
    bool m_away_team_coach_isValid;

    QList<OAIBooking> m_bookings;
    bool m_bookings_isSet;
    bool m_bookings_isValid;

    OAIReferee m_fourth_referee;
    bool m_fourth_referee_isSet;
    bool m_fourth_referee_isValid;

    OAIGame m_game;
    bool m_game_isSet;
    bool m_game_isValid;

    QList<OAIGoal> m_goals;
    bool m_goals_isSet;
    bool m_goals_isValid;

    OAICoach m_home_team_coach;
    bool m_home_team_coach_isSet;
    bool m_home_team_coach_isValid;

    QList<OAILineup> m_lineups;
    bool m_lineups_isSet;
    bool m_lineups_isValid;

    OAIReferee m_main_referee;
    bool m_main_referee_isSet;
    bool m_main_referee_isValid;

    QList<OAIPenaltyShootout> m_penalty_shootouts;
    bool m_penalty_shootouts_isSet;
    bool m_penalty_shootouts_isValid;

    QList<OAIPlayerGame> m_player_games;
    bool m_player_games_isSet;
    bool m_player_games_isValid;

    QList<OAITeamGame> m_team_games;
    bool m_team_games_isSet;
    bool m_team_games_isValid;

    OAIReferee m_video_assistant_referee;
    bool m_video_assistant_referee_isSet;
    bool m_video_assistant_referee_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBoxScore)

#endif // OAIBoxScore_H
