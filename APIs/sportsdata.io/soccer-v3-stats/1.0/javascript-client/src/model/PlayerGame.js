/**
 * Soccer v3 Stats
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PlayerGame model module.
 * @module model/PlayerGame
 * @version 1.0
 */
class PlayerGame {
    /**
     * Constructs a new <code>PlayerGame</code>.
     * @alias module:model/PlayerGame
     */
    constructor() { 
        
        PlayerGame.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PlayerGame</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PlayerGame} obj Optional instance to populate.
     * @return {module:model/PlayerGame} The populated <code>PlayerGame</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PlayerGame();

            if (data.hasOwnProperty('Assists')) {
                obj['Assists'] = ApiClient.convertToType(data['Assists'], 'Number');
            }
            if (data.hasOwnProperty('BlockedShots')) {
                obj['BlockedShots'] = ApiClient.convertToType(data['BlockedShots'], 'Number');
            }
            if (data.hasOwnProperty('Captain')) {
                obj['Captain'] = ApiClient.convertToType(data['Captain'], 'Boolean');
            }
            if (data.hasOwnProperty('CornersWon')) {
                obj['CornersWon'] = ApiClient.convertToType(data['CornersWon'], 'Number');
            }
            if (data.hasOwnProperty('Crosses')) {
                obj['Crosses'] = ApiClient.convertToType(data['Crosses'], 'Number');
            }
            if (data.hasOwnProperty('DateTime')) {
                obj['DateTime'] = ApiClient.convertToType(data['DateTime'], 'String');
            }
            if (data.hasOwnProperty('Day')) {
                obj['Day'] = ApiClient.convertToType(data['Day'], 'String');
            }
            if (data.hasOwnProperty('DefenderCleanSheets')) {
                obj['DefenderCleanSheets'] = ApiClient.convertToType(data['DefenderCleanSheets'], 'Number');
            }
            if (data.hasOwnProperty('DraftKingsPosition')) {
                obj['DraftKingsPosition'] = ApiClient.convertToType(data['DraftKingsPosition'], 'String');
            }
            if (data.hasOwnProperty('DraftKingsSalary')) {
                obj['DraftKingsSalary'] = ApiClient.convertToType(data['DraftKingsSalary'], 'Number');
            }
            if (data.hasOwnProperty('FanDuelPosition')) {
                obj['FanDuelPosition'] = ApiClient.convertToType(data['FanDuelPosition'], 'String');
            }
            if (data.hasOwnProperty('FanDuelSalary')) {
                obj['FanDuelSalary'] = ApiClient.convertToType(data['FanDuelSalary'], 'Number');
            }
            if (data.hasOwnProperty('FantasyPoints')) {
                obj['FantasyPoints'] = ApiClient.convertToType(data['FantasyPoints'], 'Number');
            }
            if (data.hasOwnProperty('FantasyPointsDraftKings')) {
                obj['FantasyPointsDraftKings'] = ApiClient.convertToType(data['FantasyPointsDraftKings'], 'Number');
            }
            if (data.hasOwnProperty('FantasyPointsFanDuel')) {
                obj['FantasyPointsFanDuel'] = ApiClient.convertToType(data['FantasyPointsFanDuel'], 'Number');
            }
            if (data.hasOwnProperty('FantasyPointsMondogoal')) {
                obj['FantasyPointsMondogoal'] = ApiClient.convertToType(data['FantasyPointsMondogoal'], 'Number');
            }
            if (data.hasOwnProperty('FantasyPointsYahoo')) {
                obj['FantasyPointsYahoo'] = ApiClient.convertToType(data['FantasyPointsYahoo'], 'Number');
            }
            if (data.hasOwnProperty('Fouled')) {
                obj['Fouled'] = ApiClient.convertToType(data['Fouled'], 'Number');
            }
            if (data.hasOwnProperty('Fouls')) {
                obj['Fouls'] = ApiClient.convertToType(data['Fouls'], 'Number');
            }
            if (data.hasOwnProperty('GameId')) {
                obj['GameId'] = ApiClient.convertToType(data['GameId'], 'Number');
            }
            if (data.hasOwnProperty('Games')) {
                obj['Games'] = ApiClient.convertToType(data['Games'], 'Number');
            }
            if (data.hasOwnProperty('GlobalGameId')) {
                obj['GlobalGameId'] = ApiClient.convertToType(data['GlobalGameId'], 'Number');
            }
            if (data.hasOwnProperty('GlobalOpponentId')) {
                obj['GlobalOpponentId'] = ApiClient.convertToType(data['GlobalOpponentId'], 'Number');
            }
            if (data.hasOwnProperty('GlobalTeamId')) {
                obj['GlobalTeamId'] = ApiClient.convertToType(data['GlobalTeamId'], 'Number');
            }
            if (data.hasOwnProperty('GoalkeeperCleanSheets')) {
                obj['GoalkeeperCleanSheets'] = ApiClient.convertToType(data['GoalkeeperCleanSheets'], 'Number');
            }
            if (data.hasOwnProperty('GoalkeeperGoalsAgainst')) {
                obj['GoalkeeperGoalsAgainst'] = ApiClient.convertToType(data['GoalkeeperGoalsAgainst'], 'Number');
            }
            if (data.hasOwnProperty('GoalkeeperSaves')) {
                obj['GoalkeeperSaves'] = ApiClient.convertToType(data['GoalkeeperSaves'], 'Number');
            }
            if (data.hasOwnProperty('GoalkeeperSingleGoalAgainst')) {
                obj['GoalkeeperSingleGoalAgainst'] = ApiClient.convertToType(data['GoalkeeperSingleGoalAgainst'], 'Number');
            }
            if (data.hasOwnProperty('GoalkeeperWins')) {
                obj['GoalkeeperWins'] = ApiClient.convertToType(data['GoalkeeperWins'], 'Number');
            }
            if (data.hasOwnProperty('Goals')) {
                obj['Goals'] = ApiClient.convertToType(data['Goals'], 'Number');
            }
            if (data.hasOwnProperty('HomeOrAway')) {
                obj['HomeOrAway'] = ApiClient.convertToType(data['HomeOrAway'], 'String');
            }
            if (data.hasOwnProperty('InjuryBodyPart')) {
                obj['InjuryBodyPart'] = ApiClient.convertToType(data['InjuryBodyPart'], 'String');
            }
            if (data.hasOwnProperty('InjuryNotes')) {
                obj['InjuryNotes'] = ApiClient.convertToType(data['InjuryNotes'], 'String');
            }
            if (data.hasOwnProperty('InjuryStartDate')) {
                obj['InjuryStartDate'] = ApiClient.convertToType(data['InjuryStartDate'], 'String');
            }
            if (data.hasOwnProperty('InjuryStatus')) {
                obj['InjuryStatus'] = ApiClient.convertToType(data['InjuryStatus'], 'String');
            }
            if (data.hasOwnProperty('Interceptions')) {
                obj['Interceptions'] = ApiClient.convertToType(data['Interceptions'], 'Number');
            }
            if (data.hasOwnProperty('IsGameOver')) {
                obj['IsGameOver'] = ApiClient.convertToType(data['IsGameOver'], 'Boolean');
            }
            if (data.hasOwnProperty('Jersey')) {
                obj['Jersey'] = ApiClient.convertToType(data['Jersey'], 'Number');
            }
            if (data.hasOwnProperty('LastManTackle')) {
                obj['LastManTackle'] = ApiClient.convertToType(data['LastManTackle'], 'Number');
            }
            if (data.hasOwnProperty('Minutes')) {
                obj['Minutes'] = ApiClient.convertToType(data['Minutes'], 'Number');
            }
            if (data.hasOwnProperty('MondogoalPosition')) {
                obj['MondogoalPosition'] = ApiClient.convertToType(data['MondogoalPosition'], 'String');
            }
            if (data.hasOwnProperty('MondogoalSalary')) {
                obj['MondogoalSalary'] = ApiClient.convertToType(data['MondogoalSalary'], 'Number');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Offsides')) {
                obj['Offsides'] = ApiClient.convertToType(data['Offsides'], 'Number');
            }
            if (data.hasOwnProperty('Opponent')) {
                obj['Opponent'] = ApiClient.convertToType(data['Opponent'], 'String');
            }
            if (data.hasOwnProperty('OpponentId')) {
                obj['OpponentId'] = ApiClient.convertToType(data['OpponentId'], 'Number');
            }
            if (data.hasOwnProperty('OpponentScore')) {
                obj['OpponentScore'] = ApiClient.convertToType(data['OpponentScore'], 'Number');
            }
            if (data.hasOwnProperty('OwnGoals')) {
                obj['OwnGoals'] = ApiClient.convertToType(data['OwnGoals'], 'Number');
            }
            if (data.hasOwnProperty('Passes')) {
                obj['Passes'] = ApiClient.convertToType(data['Passes'], 'Number');
            }
            if (data.hasOwnProperty('PassesCompleted')) {
                obj['PassesCompleted'] = ApiClient.convertToType(data['PassesCompleted'], 'Number');
            }
            if (data.hasOwnProperty('PenaltiesConceded')) {
                obj['PenaltiesConceded'] = ApiClient.convertToType(data['PenaltiesConceded'], 'Number');
            }
            if (data.hasOwnProperty('PenaltiesWon')) {
                obj['PenaltiesWon'] = ApiClient.convertToType(data['PenaltiesWon'], 'Number');
            }
            if (data.hasOwnProperty('PenaltyKickGoals')) {
                obj['PenaltyKickGoals'] = ApiClient.convertToType(data['PenaltyKickGoals'], 'Number');
            }
            if (data.hasOwnProperty('PenaltyKickMisses')) {
                obj['PenaltyKickMisses'] = ApiClient.convertToType(data['PenaltyKickMisses'], 'Number');
            }
            if (data.hasOwnProperty('PenaltyKickSaves')) {
                obj['PenaltyKickSaves'] = ApiClient.convertToType(data['PenaltyKickSaves'], 'Number');
            }
            if (data.hasOwnProperty('PlayerId')) {
                obj['PlayerId'] = ApiClient.convertToType(data['PlayerId'], 'Number');
            }
            if (data.hasOwnProperty('Position')) {
                obj['Position'] = ApiClient.convertToType(data['Position'], 'String');
            }
            if (data.hasOwnProperty('PositionCategory')) {
                obj['PositionCategory'] = ApiClient.convertToType(data['PositionCategory'], 'String');
            }
            if (data.hasOwnProperty('RedCards')) {
                obj['RedCards'] = ApiClient.convertToType(data['RedCards'], 'Number');
            }
            if (data.hasOwnProperty('RoundId')) {
                obj['RoundId'] = ApiClient.convertToType(data['RoundId'], 'Number');
            }
            if (data.hasOwnProperty('Score')) {
                obj['Score'] = ApiClient.convertToType(data['Score'], 'Number');
            }
            if (data.hasOwnProperty('Season')) {
                obj['Season'] = ApiClient.convertToType(data['Season'], 'Number');
            }
            if (data.hasOwnProperty('SeasonType')) {
                obj['SeasonType'] = ApiClient.convertToType(data['SeasonType'], 'Number');
            }
            if (data.hasOwnProperty('ShortName')) {
                obj['ShortName'] = ApiClient.convertToType(data['ShortName'], 'String');
            }
            if (data.hasOwnProperty('Shots')) {
                obj['Shots'] = ApiClient.convertToType(data['Shots'], 'Number');
            }
            if (data.hasOwnProperty('ShotsOnGoal')) {
                obj['ShotsOnGoal'] = ApiClient.convertToType(data['ShotsOnGoal'], 'Number');
            }
            if (data.hasOwnProperty('Started')) {
                obj['Started'] = ApiClient.convertToType(data['Started'], 'Number');
            }
            if (data.hasOwnProperty('StatId')) {
                obj['StatId'] = ApiClient.convertToType(data['StatId'], 'Number');
            }
            if (data.hasOwnProperty('Suspension')) {
                obj['Suspension'] = ApiClient.convertToType(data['Suspension'], 'Boolean');
            }
            if (data.hasOwnProperty('SuspensionReason')) {
                obj['SuspensionReason'] = ApiClient.convertToType(data['SuspensionReason'], 'String');
            }
            if (data.hasOwnProperty('Tackles')) {
                obj['Tackles'] = ApiClient.convertToType(data['Tackles'], 'Number');
            }
            if (data.hasOwnProperty('TacklesWon')) {
                obj['TacklesWon'] = ApiClient.convertToType(data['TacklesWon'], 'Number');
            }
            if (data.hasOwnProperty('Team')) {
                obj['Team'] = ApiClient.convertToType(data['Team'], 'String');
            }
            if (data.hasOwnProperty('TeamId')) {
                obj['TeamId'] = ApiClient.convertToType(data['TeamId'], 'Number');
            }
            if (data.hasOwnProperty('Touches')) {
                obj['Touches'] = ApiClient.convertToType(data['Touches'], 'Number');
            }
            if (data.hasOwnProperty('Updated')) {
                obj['Updated'] = ApiClient.convertToType(data['Updated'], 'String');
            }
            if (data.hasOwnProperty('UpdatedUtc')) {
                obj['UpdatedUtc'] = ApiClient.convertToType(data['UpdatedUtc'], 'String');
            }
            if (data.hasOwnProperty('YahooPosition')) {
                obj['YahooPosition'] = ApiClient.convertToType(data['YahooPosition'], 'String');
            }
            if (data.hasOwnProperty('YahooSalary')) {
                obj['YahooSalary'] = ApiClient.convertToType(data['YahooSalary'], 'Number');
            }
            if (data.hasOwnProperty('YellowCards')) {
                obj['YellowCards'] = ApiClient.convertToType(data['YellowCards'], 'Number');
            }
            if (data.hasOwnProperty('YellowRedCards')) {
                obj['YellowRedCards'] = ApiClient.convertToType(data['YellowRedCards'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PlayerGame</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PlayerGame</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['DateTime'] && !(typeof data['DateTime'] === 'string' || data['DateTime'] instanceof String)) {
            throw new Error("Expected the field `DateTime` to be a primitive type in the JSON string but got " + data['DateTime']);
        }
        // ensure the json data is a string
        if (data['Day'] && !(typeof data['Day'] === 'string' || data['Day'] instanceof String)) {
            throw new Error("Expected the field `Day` to be a primitive type in the JSON string but got " + data['Day']);
        }
        // ensure the json data is a string
        if (data['DraftKingsPosition'] && !(typeof data['DraftKingsPosition'] === 'string' || data['DraftKingsPosition'] instanceof String)) {
            throw new Error("Expected the field `DraftKingsPosition` to be a primitive type in the JSON string but got " + data['DraftKingsPosition']);
        }
        // ensure the json data is a string
        if (data['FanDuelPosition'] && !(typeof data['FanDuelPosition'] === 'string' || data['FanDuelPosition'] instanceof String)) {
            throw new Error("Expected the field `FanDuelPosition` to be a primitive type in the JSON string but got " + data['FanDuelPosition']);
        }
        // ensure the json data is a string
        if (data['HomeOrAway'] && !(typeof data['HomeOrAway'] === 'string' || data['HomeOrAway'] instanceof String)) {
            throw new Error("Expected the field `HomeOrAway` to be a primitive type in the JSON string but got " + data['HomeOrAway']);
        }
        // ensure the json data is a string
        if (data['InjuryBodyPart'] && !(typeof data['InjuryBodyPart'] === 'string' || data['InjuryBodyPart'] instanceof String)) {
            throw new Error("Expected the field `InjuryBodyPart` to be a primitive type in the JSON string but got " + data['InjuryBodyPart']);
        }
        // ensure the json data is a string
        if (data['InjuryNotes'] && !(typeof data['InjuryNotes'] === 'string' || data['InjuryNotes'] instanceof String)) {
            throw new Error("Expected the field `InjuryNotes` to be a primitive type in the JSON string but got " + data['InjuryNotes']);
        }
        // ensure the json data is a string
        if (data['InjuryStartDate'] && !(typeof data['InjuryStartDate'] === 'string' || data['InjuryStartDate'] instanceof String)) {
            throw new Error("Expected the field `InjuryStartDate` to be a primitive type in the JSON string but got " + data['InjuryStartDate']);
        }
        // ensure the json data is a string
        if (data['InjuryStatus'] && !(typeof data['InjuryStatus'] === 'string' || data['InjuryStatus'] instanceof String)) {
            throw new Error("Expected the field `InjuryStatus` to be a primitive type in the JSON string but got " + data['InjuryStatus']);
        }
        // ensure the json data is a string
        if (data['MondogoalPosition'] && !(typeof data['MondogoalPosition'] === 'string' || data['MondogoalPosition'] instanceof String)) {
            throw new Error("Expected the field `MondogoalPosition` to be a primitive type in the JSON string but got " + data['MondogoalPosition']);
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // ensure the json data is a string
        if (data['Opponent'] && !(typeof data['Opponent'] === 'string' || data['Opponent'] instanceof String)) {
            throw new Error("Expected the field `Opponent` to be a primitive type in the JSON string but got " + data['Opponent']);
        }
        // ensure the json data is a string
        if (data['Position'] && !(typeof data['Position'] === 'string' || data['Position'] instanceof String)) {
            throw new Error("Expected the field `Position` to be a primitive type in the JSON string but got " + data['Position']);
        }
        // ensure the json data is a string
        if (data['PositionCategory'] && !(typeof data['PositionCategory'] === 'string' || data['PositionCategory'] instanceof String)) {
            throw new Error("Expected the field `PositionCategory` to be a primitive type in the JSON string but got " + data['PositionCategory']);
        }
        // ensure the json data is a string
        if (data['ShortName'] && !(typeof data['ShortName'] === 'string' || data['ShortName'] instanceof String)) {
            throw new Error("Expected the field `ShortName` to be a primitive type in the JSON string but got " + data['ShortName']);
        }
        // ensure the json data is a string
        if (data['SuspensionReason'] && !(typeof data['SuspensionReason'] === 'string' || data['SuspensionReason'] instanceof String)) {
            throw new Error("Expected the field `SuspensionReason` to be a primitive type in the JSON string but got " + data['SuspensionReason']);
        }
        // ensure the json data is a string
        if (data['Team'] && !(typeof data['Team'] === 'string' || data['Team'] instanceof String)) {
            throw new Error("Expected the field `Team` to be a primitive type in the JSON string but got " + data['Team']);
        }
        // ensure the json data is a string
        if (data['Updated'] && !(typeof data['Updated'] === 'string' || data['Updated'] instanceof String)) {
            throw new Error("Expected the field `Updated` to be a primitive type in the JSON string but got " + data['Updated']);
        }
        // ensure the json data is a string
        if (data['UpdatedUtc'] && !(typeof data['UpdatedUtc'] === 'string' || data['UpdatedUtc'] instanceof String)) {
            throw new Error("Expected the field `UpdatedUtc` to be a primitive type in the JSON string but got " + data['UpdatedUtc']);
        }
        // ensure the json data is a string
        if (data['YahooPosition'] && !(typeof data['YahooPosition'] === 'string' || data['YahooPosition'] instanceof String)) {
            throw new Error("Expected the field `YahooPosition` to be a primitive type in the JSON string but got " + data['YahooPosition']);
        }

        return true;
    }


}



/**
 * @member {Number} Assists
 */
PlayerGame.prototype['Assists'] = undefined;

/**
 * @member {Number} BlockedShots
 */
PlayerGame.prototype['BlockedShots'] = undefined;

/**
 * @member {Boolean} Captain
 */
PlayerGame.prototype['Captain'] = undefined;

/**
 * @member {Number} CornersWon
 */
PlayerGame.prototype['CornersWon'] = undefined;

/**
 * @member {Number} Crosses
 */
PlayerGame.prototype['Crosses'] = undefined;

/**
 * @member {String} DateTime
 */
PlayerGame.prototype['DateTime'] = undefined;

/**
 * @member {String} Day
 */
PlayerGame.prototype['Day'] = undefined;

/**
 * @member {Number} DefenderCleanSheets
 */
PlayerGame.prototype['DefenderCleanSheets'] = undefined;

/**
 * @member {String} DraftKingsPosition
 */
PlayerGame.prototype['DraftKingsPosition'] = undefined;

/**
 * @member {Number} DraftKingsSalary
 */
PlayerGame.prototype['DraftKingsSalary'] = undefined;

/**
 * @member {String} FanDuelPosition
 */
PlayerGame.prototype['FanDuelPosition'] = undefined;

/**
 * @member {Number} FanDuelSalary
 */
PlayerGame.prototype['FanDuelSalary'] = undefined;

/**
 * @member {Number} FantasyPoints
 */
PlayerGame.prototype['FantasyPoints'] = undefined;

/**
 * @member {Number} FantasyPointsDraftKings
 */
PlayerGame.prototype['FantasyPointsDraftKings'] = undefined;

/**
 * @member {Number} FantasyPointsFanDuel
 */
PlayerGame.prototype['FantasyPointsFanDuel'] = undefined;

/**
 * @member {Number} FantasyPointsMondogoal
 */
PlayerGame.prototype['FantasyPointsMondogoal'] = undefined;

/**
 * @member {Number} FantasyPointsYahoo
 */
PlayerGame.prototype['FantasyPointsYahoo'] = undefined;

/**
 * @member {Number} Fouled
 */
PlayerGame.prototype['Fouled'] = undefined;

/**
 * @member {Number} Fouls
 */
PlayerGame.prototype['Fouls'] = undefined;

/**
 * @member {Number} GameId
 */
PlayerGame.prototype['GameId'] = undefined;

/**
 * @member {Number} Games
 */
PlayerGame.prototype['Games'] = undefined;

/**
 * @member {Number} GlobalGameId
 */
PlayerGame.prototype['GlobalGameId'] = undefined;

/**
 * @member {Number} GlobalOpponentId
 */
PlayerGame.prototype['GlobalOpponentId'] = undefined;

/**
 * @member {Number} GlobalTeamId
 */
PlayerGame.prototype['GlobalTeamId'] = undefined;

/**
 * @member {Number} GoalkeeperCleanSheets
 */
PlayerGame.prototype['GoalkeeperCleanSheets'] = undefined;

/**
 * @member {Number} GoalkeeperGoalsAgainst
 */
PlayerGame.prototype['GoalkeeperGoalsAgainst'] = undefined;

/**
 * @member {Number} GoalkeeperSaves
 */
PlayerGame.prototype['GoalkeeperSaves'] = undefined;

/**
 * @member {Number} GoalkeeperSingleGoalAgainst
 */
PlayerGame.prototype['GoalkeeperSingleGoalAgainst'] = undefined;

/**
 * @member {Number} GoalkeeperWins
 */
PlayerGame.prototype['GoalkeeperWins'] = undefined;

/**
 * @member {Number} Goals
 */
PlayerGame.prototype['Goals'] = undefined;

/**
 * @member {String} HomeOrAway
 */
PlayerGame.prototype['HomeOrAway'] = undefined;

/**
 * @member {String} InjuryBodyPart
 */
PlayerGame.prototype['InjuryBodyPart'] = undefined;

/**
 * @member {String} InjuryNotes
 */
PlayerGame.prototype['InjuryNotes'] = undefined;

/**
 * @member {String} InjuryStartDate
 */
PlayerGame.prototype['InjuryStartDate'] = undefined;

/**
 * @member {String} InjuryStatus
 */
PlayerGame.prototype['InjuryStatus'] = undefined;

/**
 * @member {Number} Interceptions
 */
PlayerGame.prototype['Interceptions'] = undefined;

/**
 * @member {Boolean} IsGameOver
 */
PlayerGame.prototype['IsGameOver'] = undefined;

/**
 * @member {Number} Jersey
 */
PlayerGame.prototype['Jersey'] = undefined;

/**
 * @member {Number} LastManTackle
 */
PlayerGame.prototype['LastManTackle'] = undefined;

/**
 * @member {Number} Minutes
 */
PlayerGame.prototype['Minutes'] = undefined;

/**
 * @member {String} MondogoalPosition
 */
PlayerGame.prototype['MondogoalPosition'] = undefined;

/**
 * @member {Number} MondogoalSalary
 */
PlayerGame.prototype['MondogoalSalary'] = undefined;

/**
 * @member {String} Name
 */
PlayerGame.prototype['Name'] = undefined;

/**
 * @member {Number} Offsides
 */
PlayerGame.prototype['Offsides'] = undefined;

/**
 * @member {String} Opponent
 */
PlayerGame.prototype['Opponent'] = undefined;

/**
 * @member {Number} OpponentId
 */
PlayerGame.prototype['OpponentId'] = undefined;

/**
 * @member {Number} OpponentScore
 */
PlayerGame.prototype['OpponentScore'] = undefined;

/**
 * @member {Number} OwnGoals
 */
PlayerGame.prototype['OwnGoals'] = undefined;

/**
 * @member {Number} Passes
 */
PlayerGame.prototype['Passes'] = undefined;

/**
 * @member {Number} PassesCompleted
 */
PlayerGame.prototype['PassesCompleted'] = undefined;

/**
 * @member {Number} PenaltiesConceded
 */
PlayerGame.prototype['PenaltiesConceded'] = undefined;

/**
 * @member {Number} PenaltiesWon
 */
PlayerGame.prototype['PenaltiesWon'] = undefined;

/**
 * @member {Number} PenaltyKickGoals
 */
PlayerGame.prototype['PenaltyKickGoals'] = undefined;

/**
 * @member {Number} PenaltyKickMisses
 */
PlayerGame.prototype['PenaltyKickMisses'] = undefined;

/**
 * @member {Number} PenaltyKickSaves
 */
PlayerGame.prototype['PenaltyKickSaves'] = undefined;

/**
 * @member {Number} PlayerId
 */
PlayerGame.prototype['PlayerId'] = undefined;

/**
 * @member {String} Position
 */
PlayerGame.prototype['Position'] = undefined;

/**
 * @member {String} PositionCategory
 */
PlayerGame.prototype['PositionCategory'] = undefined;

/**
 * @member {Number} RedCards
 */
PlayerGame.prototype['RedCards'] = undefined;

/**
 * @member {Number} RoundId
 */
PlayerGame.prototype['RoundId'] = undefined;

/**
 * @member {Number} Score
 */
PlayerGame.prototype['Score'] = undefined;

/**
 * @member {Number} Season
 */
PlayerGame.prototype['Season'] = undefined;

/**
 * @member {Number} SeasonType
 */
PlayerGame.prototype['SeasonType'] = undefined;

/**
 * @member {String} ShortName
 */
PlayerGame.prototype['ShortName'] = undefined;

/**
 * @member {Number} Shots
 */
PlayerGame.prototype['Shots'] = undefined;

/**
 * @member {Number} ShotsOnGoal
 */
PlayerGame.prototype['ShotsOnGoal'] = undefined;

/**
 * @member {Number} Started
 */
PlayerGame.prototype['Started'] = undefined;

/**
 * @member {Number} StatId
 */
PlayerGame.prototype['StatId'] = undefined;

/**
 * @member {Boolean} Suspension
 */
PlayerGame.prototype['Suspension'] = undefined;

/**
 * @member {String} SuspensionReason
 */
PlayerGame.prototype['SuspensionReason'] = undefined;

/**
 * @member {Number} Tackles
 */
PlayerGame.prototype['Tackles'] = undefined;

/**
 * @member {Number} TacklesWon
 */
PlayerGame.prototype['TacklesWon'] = undefined;

/**
 * @member {String} Team
 */
PlayerGame.prototype['Team'] = undefined;

/**
 * @member {Number} TeamId
 */
PlayerGame.prototype['TeamId'] = undefined;

/**
 * @member {Number} Touches
 */
PlayerGame.prototype['Touches'] = undefined;

/**
 * @member {String} Updated
 */
PlayerGame.prototype['Updated'] = undefined;

/**
 * @member {String} UpdatedUtc
 */
PlayerGame.prototype['UpdatedUtc'] = undefined;

/**
 * @member {String} YahooPosition
 */
PlayerGame.prototype['YahooPosition'] = undefined;

/**
 * @member {Number} YahooSalary
 */
PlayerGame.prototype['YahooSalary'] = undefined;

/**
 * @member {Number} YellowCards
 */
PlayerGame.prototype['YellowCards'] = undefined;

/**
 * @member {Number} YellowRedCards
 */
PlayerGame.prototype['YellowRedCards'] = undefined;






export default PlayerGame;

