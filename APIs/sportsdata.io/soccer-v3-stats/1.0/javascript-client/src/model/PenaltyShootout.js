/**
 * Soccer v3 Stats
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PenaltyShootout model module.
 * @module model/PenaltyShootout
 * @version 1.0
 */
class PenaltyShootout {
    /**
     * Constructs a new <code>PenaltyShootout</code>.
     * @alias module:model/PenaltyShootout
     */
    constructor() { 
        
        PenaltyShootout.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PenaltyShootout</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PenaltyShootout} obj Optional instance to populate.
     * @return {module:model/PenaltyShootout} The populated <code>PenaltyShootout</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PenaltyShootout();

            if (data.hasOwnProperty('GameId')) {
                obj['GameId'] = ApiClient.convertToType(data['GameId'], 'Number');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Order')) {
                obj['Order'] = ApiClient.convertToType(data['Order'], 'Number');
            }
            if (data.hasOwnProperty('PenaltyShootoutId')) {
                obj['PenaltyShootoutId'] = ApiClient.convertToType(data['PenaltyShootoutId'], 'Number');
            }
            if (data.hasOwnProperty('PlayerId')) {
                obj['PlayerId'] = ApiClient.convertToType(data['PlayerId'], 'Number');
            }
            if (data.hasOwnProperty('Position')) {
                obj['Position'] = ApiClient.convertToType(data['Position'], 'String');
            }
            if (data.hasOwnProperty('TeamId')) {
                obj['TeamId'] = ApiClient.convertToType(data['TeamId'], 'Number');
            }
            if (data.hasOwnProperty('Type')) {
                obj['Type'] = ApiClient.convertToType(data['Type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PenaltyShootout</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PenaltyShootout</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // ensure the json data is a string
        if (data['Position'] && !(typeof data['Position'] === 'string' || data['Position'] instanceof String)) {
            throw new Error("Expected the field `Position` to be a primitive type in the JSON string but got " + data['Position']);
        }
        // ensure the json data is a string
        if (data['Type'] && !(typeof data['Type'] === 'string' || data['Type'] instanceof String)) {
            throw new Error("Expected the field `Type` to be a primitive type in the JSON string but got " + data['Type']);
        }

        return true;
    }


}



/**
 * @member {Number} GameId
 */
PenaltyShootout.prototype['GameId'] = undefined;

/**
 * @member {String} Name
 */
PenaltyShootout.prototype['Name'] = undefined;

/**
 * @member {Number} Order
 */
PenaltyShootout.prototype['Order'] = undefined;

/**
 * @member {Number} PenaltyShootoutId
 */
PenaltyShootout.prototype['PenaltyShootoutId'] = undefined;

/**
 * @member {Number} PlayerId
 */
PenaltyShootout.prototype['PlayerId'] = undefined;

/**
 * @member {String} Position
 */
PenaltyShootout.prototype['Position'] = undefined;

/**
 * @member {Number} TeamId
 */
PenaltyShootout.prototype['TeamId'] = undefined;

/**
 * @member {String} Type
 */
PenaltyShootout.prototype['Type'] = undefined;






export default PenaltyShootout;

