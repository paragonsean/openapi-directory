/**
 * Soccer v3 Stats
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Player model module.
 * @module model/Player
 * @version 1.0
 */
class Player {
    /**
     * Constructs a new <code>Player</code>.
     * @alias module:model/Player
     */
    constructor() { 
        
        Player.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Player</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Player} obj Optional instance to populate.
     * @return {module:model/Player} The populated <code>Player</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Player();

            if (data.hasOwnProperty('BirthCity')) {
                obj['BirthCity'] = ApiClient.convertToType(data['BirthCity'], 'String');
            }
            if (data.hasOwnProperty('BirthCountry')) {
                obj['BirthCountry'] = ApiClient.convertToType(data['BirthCountry'], 'String');
            }
            if (data.hasOwnProperty('BirthDate')) {
                obj['BirthDate'] = ApiClient.convertToType(data['BirthDate'], 'String');
            }
            if (data.hasOwnProperty('CommonName')) {
                obj['CommonName'] = ApiClient.convertToType(data['CommonName'], 'String');
            }
            if (data.hasOwnProperty('DraftKingsPosition')) {
                obj['DraftKingsPosition'] = ApiClient.convertToType(data['DraftKingsPosition'], 'String');
            }
            if (data.hasOwnProperty('FirstName')) {
                obj['FirstName'] = ApiClient.convertToType(data['FirstName'], 'String');
            }
            if (data.hasOwnProperty('Foot')) {
                obj['Foot'] = ApiClient.convertToType(data['Foot'], 'String');
            }
            if (data.hasOwnProperty('Gender')) {
                obj['Gender'] = ApiClient.convertToType(data['Gender'], 'String');
            }
            if (data.hasOwnProperty('Height')) {
                obj['Height'] = ApiClient.convertToType(data['Height'], 'Number');
            }
            if (data.hasOwnProperty('InjuryBodyPart')) {
                obj['InjuryBodyPart'] = ApiClient.convertToType(data['InjuryBodyPart'], 'String');
            }
            if (data.hasOwnProperty('InjuryNotes')) {
                obj['InjuryNotes'] = ApiClient.convertToType(data['InjuryNotes'], 'String');
            }
            if (data.hasOwnProperty('InjuryStartDate')) {
                obj['InjuryStartDate'] = ApiClient.convertToType(data['InjuryStartDate'], 'String');
            }
            if (data.hasOwnProperty('InjuryStatus')) {
                obj['InjuryStatus'] = ApiClient.convertToType(data['InjuryStatus'], 'String');
            }
            if (data.hasOwnProperty('Jersey')) {
                obj['Jersey'] = ApiClient.convertToType(data['Jersey'], 'Number');
            }
            if (data.hasOwnProperty('LastName')) {
                obj['LastName'] = ApiClient.convertToType(data['LastName'], 'String');
            }
            if (data.hasOwnProperty('Nationality')) {
                obj['Nationality'] = ApiClient.convertToType(data['Nationality'], 'String');
            }
            if (data.hasOwnProperty('PhotoUrl')) {
                obj['PhotoUrl'] = ApiClient.convertToType(data['PhotoUrl'], 'String');
            }
            if (data.hasOwnProperty('PlayerId')) {
                obj['PlayerId'] = ApiClient.convertToType(data['PlayerId'], 'Number');
            }
            if (data.hasOwnProperty('Position')) {
                obj['Position'] = ApiClient.convertToType(data['Position'], 'String');
            }
            if (data.hasOwnProperty('PositionCategory')) {
                obj['PositionCategory'] = ApiClient.convertToType(data['PositionCategory'], 'String');
            }
            if (data.hasOwnProperty('RotoWirePlayerID')) {
                obj['RotoWirePlayerID'] = ApiClient.convertToType(data['RotoWirePlayerID'], 'Number');
            }
            if (data.hasOwnProperty('ShortName')) {
                obj['ShortName'] = ApiClient.convertToType(data['ShortName'], 'String');
            }
            if (data.hasOwnProperty('Updated')) {
                obj['Updated'] = ApiClient.convertToType(data['Updated'], 'String');
            }
            if (data.hasOwnProperty('UsaTodayHeadshotNoBackgroundUpdated')) {
                obj['UsaTodayHeadshotNoBackgroundUpdated'] = ApiClient.convertToType(data['UsaTodayHeadshotNoBackgroundUpdated'], 'String');
            }
            if (data.hasOwnProperty('UsaTodayHeadshotNoBackgroundUrl')) {
                obj['UsaTodayHeadshotNoBackgroundUrl'] = ApiClient.convertToType(data['UsaTodayHeadshotNoBackgroundUrl'], 'String');
            }
            if (data.hasOwnProperty('UsaTodayHeadshotUpdated')) {
                obj['UsaTodayHeadshotUpdated'] = ApiClient.convertToType(data['UsaTodayHeadshotUpdated'], 'String');
            }
            if (data.hasOwnProperty('UsaTodayHeadshotUrl')) {
                obj['UsaTodayHeadshotUrl'] = ApiClient.convertToType(data['UsaTodayHeadshotUrl'], 'String');
            }
            if (data.hasOwnProperty('UsaTodayPlayerID')) {
                obj['UsaTodayPlayerID'] = ApiClient.convertToType(data['UsaTodayPlayerID'], 'Number');
            }
            if (data.hasOwnProperty('Weight')) {
                obj['Weight'] = ApiClient.convertToType(data['Weight'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Player</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Player</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['BirthCity'] && !(typeof data['BirthCity'] === 'string' || data['BirthCity'] instanceof String)) {
            throw new Error("Expected the field `BirthCity` to be a primitive type in the JSON string but got " + data['BirthCity']);
        }
        // ensure the json data is a string
        if (data['BirthCountry'] && !(typeof data['BirthCountry'] === 'string' || data['BirthCountry'] instanceof String)) {
            throw new Error("Expected the field `BirthCountry` to be a primitive type in the JSON string but got " + data['BirthCountry']);
        }
        // ensure the json data is a string
        if (data['BirthDate'] && !(typeof data['BirthDate'] === 'string' || data['BirthDate'] instanceof String)) {
            throw new Error("Expected the field `BirthDate` to be a primitive type in the JSON string but got " + data['BirthDate']);
        }
        // ensure the json data is a string
        if (data['CommonName'] && !(typeof data['CommonName'] === 'string' || data['CommonName'] instanceof String)) {
            throw new Error("Expected the field `CommonName` to be a primitive type in the JSON string but got " + data['CommonName']);
        }
        // ensure the json data is a string
        if (data['DraftKingsPosition'] && !(typeof data['DraftKingsPosition'] === 'string' || data['DraftKingsPosition'] instanceof String)) {
            throw new Error("Expected the field `DraftKingsPosition` to be a primitive type in the JSON string but got " + data['DraftKingsPosition']);
        }
        // ensure the json data is a string
        if (data['FirstName'] && !(typeof data['FirstName'] === 'string' || data['FirstName'] instanceof String)) {
            throw new Error("Expected the field `FirstName` to be a primitive type in the JSON string but got " + data['FirstName']);
        }
        // ensure the json data is a string
        if (data['Foot'] && !(typeof data['Foot'] === 'string' || data['Foot'] instanceof String)) {
            throw new Error("Expected the field `Foot` to be a primitive type in the JSON string but got " + data['Foot']);
        }
        // ensure the json data is a string
        if (data['Gender'] && !(typeof data['Gender'] === 'string' || data['Gender'] instanceof String)) {
            throw new Error("Expected the field `Gender` to be a primitive type in the JSON string but got " + data['Gender']);
        }
        // ensure the json data is a string
        if (data['InjuryBodyPart'] && !(typeof data['InjuryBodyPart'] === 'string' || data['InjuryBodyPart'] instanceof String)) {
            throw new Error("Expected the field `InjuryBodyPart` to be a primitive type in the JSON string but got " + data['InjuryBodyPart']);
        }
        // ensure the json data is a string
        if (data['InjuryNotes'] && !(typeof data['InjuryNotes'] === 'string' || data['InjuryNotes'] instanceof String)) {
            throw new Error("Expected the field `InjuryNotes` to be a primitive type in the JSON string but got " + data['InjuryNotes']);
        }
        // ensure the json data is a string
        if (data['InjuryStartDate'] && !(typeof data['InjuryStartDate'] === 'string' || data['InjuryStartDate'] instanceof String)) {
            throw new Error("Expected the field `InjuryStartDate` to be a primitive type in the JSON string but got " + data['InjuryStartDate']);
        }
        // ensure the json data is a string
        if (data['InjuryStatus'] && !(typeof data['InjuryStatus'] === 'string' || data['InjuryStatus'] instanceof String)) {
            throw new Error("Expected the field `InjuryStatus` to be a primitive type in the JSON string but got " + data['InjuryStatus']);
        }
        // ensure the json data is a string
        if (data['LastName'] && !(typeof data['LastName'] === 'string' || data['LastName'] instanceof String)) {
            throw new Error("Expected the field `LastName` to be a primitive type in the JSON string but got " + data['LastName']);
        }
        // ensure the json data is a string
        if (data['Nationality'] && !(typeof data['Nationality'] === 'string' || data['Nationality'] instanceof String)) {
            throw new Error("Expected the field `Nationality` to be a primitive type in the JSON string but got " + data['Nationality']);
        }
        // ensure the json data is a string
        if (data['PhotoUrl'] && !(typeof data['PhotoUrl'] === 'string' || data['PhotoUrl'] instanceof String)) {
            throw new Error("Expected the field `PhotoUrl` to be a primitive type in the JSON string but got " + data['PhotoUrl']);
        }
        // ensure the json data is a string
        if (data['Position'] && !(typeof data['Position'] === 'string' || data['Position'] instanceof String)) {
            throw new Error("Expected the field `Position` to be a primitive type in the JSON string but got " + data['Position']);
        }
        // ensure the json data is a string
        if (data['PositionCategory'] && !(typeof data['PositionCategory'] === 'string' || data['PositionCategory'] instanceof String)) {
            throw new Error("Expected the field `PositionCategory` to be a primitive type in the JSON string but got " + data['PositionCategory']);
        }
        // ensure the json data is a string
        if (data['ShortName'] && !(typeof data['ShortName'] === 'string' || data['ShortName'] instanceof String)) {
            throw new Error("Expected the field `ShortName` to be a primitive type in the JSON string but got " + data['ShortName']);
        }
        // ensure the json data is a string
        if (data['Updated'] && !(typeof data['Updated'] === 'string' || data['Updated'] instanceof String)) {
            throw new Error("Expected the field `Updated` to be a primitive type in the JSON string but got " + data['Updated']);
        }
        // ensure the json data is a string
        if (data['UsaTodayHeadshotNoBackgroundUpdated'] && !(typeof data['UsaTodayHeadshotNoBackgroundUpdated'] === 'string' || data['UsaTodayHeadshotNoBackgroundUpdated'] instanceof String)) {
            throw new Error("Expected the field `UsaTodayHeadshotNoBackgroundUpdated` to be a primitive type in the JSON string but got " + data['UsaTodayHeadshotNoBackgroundUpdated']);
        }
        // ensure the json data is a string
        if (data['UsaTodayHeadshotNoBackgroundUrl'] && !(typeof data['UsaTodayHeadshotNoBackgroundUrl'] === 'string' || data['UsaTodayHeadshotNoBackgroundUrl'] instanceof String)) {
            throw new Error("Expected the field `UsaTodayHeadshotNoBackgroundUrl` to be a primitive type in the JSON string but got " + data['UsaTodayHeadshotNoBackgroundUrl']);
        }
        // ensure the json data is a string
        if (data['UsaTodayHeadshotUpdated'] && !(typeof data['UsaTodayHeadshotUpdated'] === 'string' || data['UsaTodayHeadshotUpdated'] instanceof String)) {
            throw new Error("Expected the field `UsaTodayHeadshotUpdated` to be a primitive type in the JSON string but got " + data['UsaTodayHeadshotUpdated']);
        }
        // ensure the json data is a string
        if (data['UsaTodayHeadshotUrl'] && !(typeof data['UsaTodayHeadshotUrl'] === 'string' || data['UsaTodayHeadshotUrl'] instanceof String)) {
            throw new Error("Expected the field `UsaTodayHeadshotUrl` to be a primitive type in the JSON string but got " + data['UsaTodayHeadshotUrl']);
        }

        return true;
    }


}



/**
 * @member {String} BirthCity
 */
Player.prototype['BirthCity'] = undefined;

/**
 * @member {String} BirthCountry
 */
Player.prototype['BirthCountry'] = undefined;

/**
 * @member {String} BirthDate
 */
Player.prototype['BirthDate'] = undefined;

/**
 * @member {String} CommonName
 */
Player.prototype['CommonName'] = undefined;

/**
 * @member {String} DraftKingsPosition
 */
Player.prototype['DraftKingsPosition'] = undefined;

/**
 * @member {String} FirstName
 */
Player.prototype['FirstName'] = undefined;

/**
 * @member {String} Foot
 */
Player.prototype['Foot'] = undefined;

/**
 * @member {String} Gender
 */
Player.prototype['Gender'] = undefined;

/**
 * @member {Number} Height
 */
Player.prototype['Height'] = undefined;

/**
 * @member {String} InjuryBodyPart
 */
Player.prototype['InjuryBodyPart'] = undefined;

/**
 * @member {String} InjuryNotes
 */
Player.prototype['InjuryNotes'] = undefined;

/**
 * @member {String} InjuryStartDate
 */
Player.prototype['InjuryStartDate'] = undefined;

/**
 * @member {String} InjuryStatus
 */
Player.prototype['InjuryStatus'] = undefined;

/**
 * @member {Number} Jersey
 */
Player.prototype['Jersey'] = undefined;

/**
 * @member {String} LastName
 */
Player.prototype['LastName'] = undefined;

/**
 * @member {String} Nationality
 */
Player.prototype['Nationality'] = undefined;

/**
 * @member {String} PhotoUrl
 */
Player.prototype['PhotoUrl'] = undefined;

/**
 * @member {Number} PlayerId
 */
Player.prototype['PlayerId'] = undefined;

/**
 * @member {String} Position
 */
Player.prototype['Position'] = undefined;

/**
 * @member {String} PositionCategory
 */
Player.prototype['PositionCategory'] = undefined;

/**
 * @member {Number} RotoWirePlayerID
 */
Player.prototype['RotoWirePlayerID'] = undefined;

/**
 * @member {String} ShortName
 */
Player.prototype['ShortName'] = undefined;

/**
 * @member {String} Updated
 */
Player.prototype['Updated'] = undefined;

/**
 * @member {String} UsaTodayHeadshotNoBackgroundUpdated
 */
Player.prototype['UsaTodayHeadshotNoBackgroundUpdated'] = undefined;

/**
 * @member {String} UsaTodayHeadshotNoBackgroundUrl
 */
Player.prototype['UsaTodayHeadshotNoBackgroundUrl'] = undefined;

/**
 * @member {String} UsaTodayHeadshotUpdated
 */
Player.prototype['UsaTodayHeadshotUpdated'] = undefined;

/**
 * @member {String} UsaTodayHeadshotUrl
 */
Player.prototype['UsaTodayHeadshotUrl'] = undefined;

/**
 * @member {Number} UsaTodayPlayerID
 */
Player.prototype['UsaTodayPlayerID'] = undefined;

/**
 * @member {Number} Weight
 */
Player.prototype['Weight'] = undefined;






export default Player;

