/**
 * Soccer v3 Stats
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PlayoffAggregateScore from './PlayoffAggregateScore';

/**
 * The Game model module.
 * @module model/Game
 * @version 1.0
 */
class Game {
    /**
     * Constructs a new <code>Game</code>.
     * @alias module:model/Game
     */
    constructor() { 
        
        Game.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Game</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Game} obj Optional instance to populate.
     * @return {module:model/Game} The populated <code>Game</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Game();

            if (data.hasOwnProperty('Attendance')) {
                obj['Attendance'] = ApiClient.convertToType(data['Attendance'], 'Number');
            }
            if (data.hasOwnProperty('AwayTeamCountryCode')) {
                obj['AwayTeamCountryCode'] = ApiClient.convertToType(data['AwayTeamCountryCode'], 'String');
            }
            if (data.hasOwnProperty('AwayTeamFormation')) {
                obj['AwayTeamFormation'] = ApiClient.convertToType(data['AwayTeamFormation'], 'String');
            }
            if (data.hasOwnProperty('AwayTeamId')) {
                obj['AwayTeamId'] = ApiClient.convertToType(data['AwayTeamId'], 'Number');
            }
            if (data.hasOwnProperty('AwayTeamKey')) {
                obj['AwayTeamKey'] = ApiClient.convertToType(data['AwayTeamKey'], 'String');
            }
            if (data.hasOwnProperty('AwayTeamMoneyLine')) {
                obj['AwayTeamMoneyLine'] = ApiClient.convertToType(data['AwayTeamMoneyLine'], 'Number');
            }
            if (data.hasOwnProperty('AwayTeamName')) {
                obj['AwayTeamName'] = ApiClient.convertToType(data['AwayTeamName'], 'String');
            }
            if (data.hasOwnProperty('AwayTeamPointSpreadPayout')) {
                obj['AwayTeamPointSpreadPayout'] = ApiClient.convertToType(data['AwayTeamPointSpreadPayout'], 'Number');
            }
            if (data.hasOwnProperty('AwayTeamScore')) {
                obj['AwayTeamScore'] = ApiClient.convertToType(data['AwayTeamScore'], 'Number');
            }
            if (data.hasOwnProperty('AwayTeamScoreExtraTime')) {
                obj['AwayTeamScoreExtraTime'] = ApiClient.convertToType(data['AwayTeamScoreExtraTime'], 'Number');
            }
            if (data.hasOwnProperty('AwayTeamScorePenalty')) {
                obj['AwayTeamScorePenalty'] = ApiClient.convertToType(data['AwayTeamScorePenalty'], 'Number');
            }
            if (data.hasOwnProperty('AwayTeamScorePeriod1')) {
                obj['AwayTeamScorePeriod1'] = ApiClient.convertToType(data['AwayTeamScorePeriod1'], 'Number');
            }
            if (data.hasOwnProperty('AwayTeamScorePeriod2')) {
                obj['AwayTeamScorePeriod2'] = ApiClient.convertToType(data['AwayTeamScorePeriod2'], 'Number');
            }
            if (data.hasOwnProperty('Clock')) {
                obj['Clock'] = ApiClient.convertToType(data['Clock'], 'Number');
            }
            if (data.hasOwnProperty('ClockDisplay')) {
                obj['ClockDisplay'] = ApiClient.convertToType(data['ClockDisplay'], 'String');
            }
            if (data.hasOwnProperty('ClockExtra')) {
                obj['ClockExtra'] = ApiClient.convertToType(data['ClockExtra'], 'Number');
            }
            if (data.hasOwnProperty('DateTime')) {
                obj['DateTime'] = ApiClient.convertToType(data['DateTime'], 'String');
            }
            if (data.hasOwnProperty('Day')) {
                obj['Day'] = ApiClient.convertToType(data['Day'], 'String');
            }
            if (data.hasOwnProperty('DrawMoneyLine')) {
                obj['DrawMoneyLine'] = ApiClient.convertToType(data['DrawMoneyLine'], 'Number');
            }
            if (data.hasOwnProperty('GameId')) {
                obj['GameId'] = ApiClient.convertToType(data['GameId'], 'Number');
            }
            if (data.hasOwnProperty('GlobalAwayTeamId')) {
                obj['GlobalAwayTeamId'] = ApiClient.convertToType(data['GlobalAwayTeamId'], 'Number');
            }
            if (data.hasOwnProperty('GlobalGameId')) {
                obj['GlobalGameId'] = ApiClient.convertToType(data['GlobalGameId'], 'Number');
            }
            if (data.hasOwnProperty('GlobalHomeTeamId')) {
                obj['GlobalHomeTeamId'] = ApiClient.convertToType(data['GlobalHomeTeamId'], 'Number');
            }
            if (data.hasOwnProperty('Group')) {
                obj['Group'] = ApiClient.convertToType(data['Group'], 'String');
            }
            if (data.hasOwnProperty('HomeTeamCountryCode')) {
                obj['HomeTeamCountryCode'] = ApiClient.convertToType(data['HomeTeamCountryCode'], 'String');
            }
            if (data.hasOwnProperty('HomeTeamFormation')) {
                obj['HomeTeamFormation'] = ApiClient.convertToType(data['HomeTeamFormation'], 'String');
            }
            if (data.hasOwnProperty('HomeTeamId')) {
                obj['HomeTeamId'] = ApiClient.convertToType(data['HomeTeamId'], 'Number');
            }
            if (data.hasOwnProperty('HomeTeamKey')) {
                obj['HomeTeamKey'] = ApiClient.convertToType(data['HomeTeamKey'], 'String');
            }
            if (data.hasOwnProperty('HomeTeamMoneyLine')) {
                obj['HomeTeamMoneyLine'] = ApiClient.convertToType(data['HomeTeamMoneyLine'], 'Number');
            }
            if (data.hasOwnProperty('HomeTeamName')) {
                obj['HomeTeamName'] = ApiClient.convertToType(data['HomeTeamName'], 'String');
            }
            if (data.hasOwnProperty('HomeTeamPointSpreadPayout')) {
                obj['HomeTeamPointSpreadPayout'] = ApiClient.convertToType(data['HomeTeamPointSpreadPayout'], 'Number');
            }
            if (data.hasOwnProperty('HomeTeamScore')) {
                obj['HomeTeamScore'] = ApiClient.convertToType(data['HomeTeamScore'], 'Number');
            }
            if (data.hasOwnProperty('HomeTeamScoreExtraTime')) {
                obj['HomeTeamScoreExtraTime'] = ApiClient.convertToType(data['HomeTeamScoreExtraTime'], 'Number');
            }
            if (data.hasOwnProperty('HomeTeamScorePenalty')) {
                obj['HomeTeamScorePenalty'] = ApiClient.convertToType(data['HomeTeamScorePenalty'], 'Number');
            }
            if (data.hasOwnProperty('HomeTeamScorePeriod1')) {
                obj['HomeTeamScorePeriod1'] = ApiClient.convertToType(data['HomeTeamScorePeriod1'], 'Number');
            }
            if (data.hasOwnProperty('HomeTeamScorePeriod2')) {
                obj['HomeTeamScorePeriod2'] = ApiClient.convertToType(data['HomeTeamScorePeriod2'], 'Number');
            }
            if (data.hasOwnProperty('IsClosed')) {
                obj['IsClosed'] = ApiClient.convertToType(data['IsClosed'], 'Boolean');
            }
            if (data.hasOwnProperty('OverPayout')) {
                obj['OverPayout'] = ApiClient.convertToType(data['OverPayout'], 'Number');
            }
            if (data.hasOwnProperty('OverUnder')) {
                obj['OverUnder'] = ApiClient.convertToType(data['OverUnder'], 'Number');
            }
            if (data.hasOwnProperty('Period')) {
                obj['Period'] = ApiClient.convertToType(data['Period'], 'String');
            }
            if (data.hasOwnProperty('PlayoffAggregateScore')) {
                obj['PlayoffAggregateScore'] = PlayoffAggregateScore.constructFromObject(data['PlayoffAggregateScore']);
            }
            if (data.hasOwnProperty('PointSpread')) {
                obj['PointSpread'] = ApiClient.convertToType(data['PointSpread'], 'Number');
            }
            if (data.hasOwnProperty('RoundId')) {
                obj['RoundId'] = ApiClient.convertToType(data['RoundId'], 'Number');
            }
            if (data.hasOwnProperty('Season')) {
                obj['Season'] = ApiClient.convertToType(data['Season'], 'Number');
            }
            if (data.hasOwnProperty('SeasonType')) {
                obj['SeasonType'] = ApiClient.convertToType(data['SeasonType'], 'Number');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], 'String');
            }
            if (data.hasOwnProperty('UnderPayout')) {
                obj['UnderPayout'] = ApiClient.convertToType(data['UnderPayout'], 'Number');
            }
            if (data.hasOwnProperty('Updated')) {
                obj['Updated'] = ApiClient.convertToType(data['Updated'], 'String');
            }
            if (data.hasOwnProperty('UpdatedUtc')) {
                obj['UpdatedUtc'] = ApiClient.convertToType(data['UpdatedUtc'], 'String');
            }
            if (data.hasOwnProperty('VenueId')) {
                obj['VenueId'] = ApiClient.convertToType(data['VenueId'], 'Number');
            }
            if (data.hasOwnProperty('VenueType')) {
                obj['VenueType'] = ApiClient.convertToType(data['VenueType'], 'String');
            }
            if (data.hasOwnProperty('Week')) {
                obj['Week'] = ApiClient.convertToType(data['Week'], 'Number');
            }
            if (data.hasOwnProperty('Winner')) {
                obj['Winner'] = ApiClient.convertToType(data['Winner'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Game</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Game</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['AwayTeamCountryCode'] && !(typeof data['AwayTeamCountryCode'] === 'string' || data['AwayTeamCountryCode'] instanceof String)) {
            throw new Error("Expected the field `AwayTeamCountryCode` to be a primitive type in the JSON string but got " + data['AwayTeamCountryCode']);
        }
        // ensure the json data is a string
        if (data['AwayTeamFormation'] && !(typeof data['AwayTeamFormation'] === 'string' || data['AwayTeamFormation'] instanceof String)) {
            throw new Error("Expected the field `AwayTeamFormation` to be a primitive type in the JSON string but got " + data['AwayTeamFormation']);
        }
        // ensure the json data is a string
        if (data['AwayTeamKey'] && !(typeof data['AwayTeamKey'] === 'string' || data['AwayTeamKey'] instanceof String)) {
            throw new Error("Expected the field `AwayTeamKey` to be a primitive type in the JSON string but got " + data['AwayTeamKey']);
        }
        // ensure the json data is a string
        if (data['AwayTeamName'] && !(typeof data['AwayTeamName'] === 'string' || data['AwayTeamName'] instanceof String)) {
            throw new Error("Expected the field `AwayTeamName` to be a primitive type in the JSON string but got " + data['AwayTeamName']);
        }
        // ensure the json data is a string
        if (data['ClockDisplay'] && !(typeof data['ClockDisplay'] === 'string' || data['ClockDisplay'] instanceof String)) {
            throw new Error("Expected the field `ClockDisplay` to be a primitive type in the JSON string but got " + data['ClockDisplay']);
        }
        // ensure the json data is a string
        if (data['DateTime'] && !(typeof data['DateTime'] === 'string' || data['DateTime'] instanceof String)) {
            throw new Error("Expected the field `DateTime` to be a primitive type in the JSON string but got " + data['DateTime']);
        }
        // ensure the json data is a string
        if (data['Day'] && !(typeof data['Day'] === 'string' || data['Day'] instanceof String)) {
            throw new Error("Expected the field `Day` to be a primitive type in the JSON string but got " + data['Day']);
        }
        // ensure the json data is a string
        if (data['Group'] && !(typeof data['Group'] === 'string' || data['Group'] instanceof String)) {
            throw new Error("Expected the field `Group` to be a primitive type in the JSON string but got " + data['Group']);
        }
        // ensure the json data is a string
        if (data['HomeTeamCountryCode'] && !(typeof data['HomeTeamCountryCode'] === 'string' || data['HomeTeamCountryCode'] instanceof String)) {
            throw new Error("Expected the field `HomeTeamCountryCode` to be a primitive type in the JSON string but got " + data['HomeTeamCountryCode']);
        }
        // ensure the json data is a string
        if (data['HomeTeamFormation'] && !(typeof data['HomeTeamFormation'] === 'string' || data['HomeTeamFormation'] instanceof String)) {
            throw new Error("Expected the field `HomeTeamFormation` to be a primitive type in the JSON string but got " + data['HomeTeamFormation']);
        }
        // ensure the json data is a string
        if (data['HomeTeamKey'] && !(typeof data['HomeTeamKey'] === 'string' || data['HomeTeamKey'] instanceof String)) {
            throw new Error("Expected the field `HomeTeamKey` to be a primitive type in the JSON string but got " + data['HomeTeamKey']);
        }
        // ensure the json data is a string
        if (data['HomeTeamName'] && !(typeof data['HomeTeamName'] === 'string' || data['HomeTeamName'] instanceof String)) {
            throw new Error("Expected the field `HomeTeamName` to be a primitive type in the JSON string but got " + data['HomeTeamName']);
        }
        // ensure the json data is a string
        if (data['Period'] && !(typeof data['Period'] === 'string' || data['Period'] instanceof String)) {
            throw new Error("Expected the field `Period` to be a primitive type in the JSON string but got " + data['Period']);
        }
        // validate the optional field `PlayoffAggregateScore`
        if (data['PlayoffAggregateScore']) { // data not null
          PlayoffAggregateScore.validateJSON(data['PlayoffAggregateScore']);
        }
        // ensure the json data is a string
        if (data['Status'] && !(typeof data['Status'] === 'string' || data['Status'] instanceof String)) {
            throw new Error("Expected the field `Status` to be a primitive type in the JSON string but got " + data['Status']);
        }
        // ensure the json data is a string
        if (data['Updated'] && !(typeof data['Updated'] === 'string' || data['Updated'] instanceof String)) {
            throw new Error("Expected the field `Updated` to be a primitive type in the JSON string but got " + data['Updated']);
        }
        // ensure the json data is a string
        if (data['UpdatedUtc'] && !(typeof data['UpdatedUtc'] === 'string' || data['UpdatedUtc'] instanceof String)) {
            throw new Error("Expected the field `UpdatedUtc` to be a primitive type in the JSON string but got " + data['UpdatedUtc']);
        }
        // ensure the json data is a string
        if (data['VenueType'] && !(typeof data['VenueType'] === 'string' || data['VenueType'] instanceof String)) {
            throw new Error("Expected the field `VenueType` to be a primitive type in the JSON string but got " + data['VenueType']);
        }
        // ensure the json data is a string
        if (data['Winner'] && !(typeof data['Winner'] === 'string' || data['Winner'] instanceof String)) {
            throw new Error("Expected the field `Winner` to be a primitive type in the JSON string but got " + data['Winner']);
        }

        return true;
    }


}



/**
 * @member {Number} Attendance
 */
Game.prototype['Attendance'] = undefined;

/**
 * @member {String} AwayTeamCountryCode
 */
Game.prototype['AwayTeamCountryCode'] = undefined;

/**
 * @member {String} AwayTeamFormation
 */
Game.prototype['AwayTeamFormation'] = undefined;

/**
 * @member {Number} AwayTeamId
 */
Game.prototype['AwayTeamId'] = undefined;

/**
 * @member {String} AwayTeamKey
 */
Game.prototype['AwayTeamKey'] = undefined;

/**
 * @member {Number} AwayTeamMoneyLine
 */
Game.prototype['AwayTeamMoneyLine'] = undefined;

/**
 * @member {String} AwayTeamName
 */
Game.prototype['AwayTeamName'] = undefined;

/**
 * @member {Number} AwayTeamPointSpreadPayout
 */
Game.prototype['AwayTeamPointSpreadPayout'] = undefined;

/**
 * @member {Number} AwayTeamScore
 */
Game.prototype['AwayTeamScore'] = undefined;

/**
 * @member {Number} AwayTeamScoreExtraTime
 */
Game.prototype['AwayTeamScoreExtraTime'] = undefined;

/**
 * @member {Number} AwayTeamScorePenalty
 */
Game.prototype['AwayTeamScorePenalty'] = undefined;

/**
 * @member {Number} AwayTeamScorePeriod1
 */
Game.prototype['AwayTeamScorePeriod1'] = undefined;

/**
 * @member {Number} AwayTeamScorePeriod2
 */
Game.prototype['AwayTeamScorePeriod2'] = undefined;

/**
 * @member {Number} Clock
 */
Game.prototype['Clock'] = undefined;

/**
 * @member {String} ClockDisplay
 */
Game.prototype['ClockDisplay'] = undefined;

/**
 * @member {Number} ClockExtra
 */
Game.prototype['ClockExtra'] = undefined;

/**
 * @member {String} DateTime
 */
Game.prototype['DateTime'] = undefined;

/**
 * @member {String} Day
 */
Game.prototype['Day'] = undefined;

/**
 * @member {Number} DrawMoneyLine
 */
Game.prototype['DrawMoneyLine'] = undefined;

/**
 * @member {Number} GameId
 */
Game.prototype['GameId'] = undefined;

/**
 * @member {Number} GlobalAwayTeamId
 */
Game.prototype['GlobalAwayTeamId'] = undefined;

/**
 * @member {Number} GlobalGameId
 */
Game.prototype['GlobalGameId'] = undefined;

/**
 * @member {Number} GlobalHomeTeamId
 */
Game.prototype['GlobalHomeTeamId'] = undefined;

/**
 * @member {String} Group
 */
Game.prototype['Group'] = undefined;

/**
 * @member {String} HomeTeamCountryCode
 */
Game.prototype['HomeTeamCountryCode'] = undefined;

/**
 * @member {String} HomeTeamFormation
 */
Game.prototype['HomeTeamFormation'] = undefined;

/**
 * @member {Number} HomeTeamId
 */
Game.prototype['HomeTeamId'] = undefined;

/**
 * @member {String} HomeTeamKey
 */
Game.prototype['HomeTeamKey'] = undefined;

/**
 * @member {Number} HomeTeamMoneyLine
 */
Game.prototype['HomeTeamMoneyLine'] = undefined;

/**
 * @member {String} HomeTeamName
 */
Game.prototype['HomeTeamName'] = undefined;

/**
 * @member {Number} HomeTeamPointSpreadPayout
 */
Game.prototype['HomeTeamPointSpreadPayout'] = undefined;

/**
 * @member {Number} HomeTeamScore
 */
Game.prototype['HomeTeamScore'] = undefined;

/**
 * @member {Number} HomeTeamScoreExtraTime
 */
Game.prototype['HomeTeamScoreExtraTime'] = undefined;

/**
 * @member {Number} HomeTeamScorePenalty
 */
Game.prototype['HomeTeamScorePenalty'] = undefined;

/**
 * @member {Number} HomeTeamScorePeriod1
 */
Game.prototype['HomeTeamScorePeriod1'] = undefined;

/**
 * @member {Number} HomeTeamScorePeriod2
 */
Game.prototype['HomeTeamScorePeriod2'] = undefined;

/**
 * @member {Boolean} IsClosed
 */
Game.prototype['IsClosed'] = undefined;

/**
 * @member {Number} OverPayout
 */
Game.prototype['OverPayout'] = undefined;

/**
 * @member {Number} OverUnder
 */
Game.prototype['OverUnder'] = undefined;

/**
 * @member {String} Period
 */
Game.prototype['Period'] = undefined;

/**
 * @member {module:model/PlayoffAggregateScore} PlayoffAggregateScore
 */
Game.prototype['PlayoffAggregateScore'] = undefined;

/**
 * @member {Number} PointSpread
 */
Game.prototype['PointSpread'] = undefined;

/**
 * @member {Number} RoundId
 */
Game.prototype['RoundId'] = undefined;

/**
 * @member {Number} Season
 */
Game.prototype['Season'] = undefined;

/**
 * @member {Number} SeasonType
 */
Game.prototype['SeasonType'] = undefined;

/**
 * @member {String} Status
 */
Game.prototype['Status'] = undefined;

/**
 * @member {Number} UnderPayout
 */
Game.prototype['UnderPayout'] = undefined;

/**
 * @member {String} Updated
 */
Game.prototype['Updated'] = undefined;

/**
 * @member {String} UpdatedUtc
 */
Game.prototype['UpdatedUtc'] = undefined;

/**
 * @member {Number} VenueId
 */
Game.prototype['VenueId'] = undefined;

/**
 * @member {String} VenueType
 */
Game.prototype['VenueType'] = undefined;

/**
 * @member {Number} Week
 */
Game.prototype['Week'] = undefined;

/**
 * @member {String} Winner
 */
Game.prototype['Winner'] = undefined;






export default Game;

