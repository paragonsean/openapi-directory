/**
 * Soccer v3 Stats
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SoccerV3Stats);
  }
}(this, function(expect, SoccerV3Stats) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SoccerV3Stats.BoxScore();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BoxScore', function() {
    it('should create an instance of BoxScore', function() {
      // uncomment below and update the code to test BoxScore
      //var instance = new SoccerV3Stats.BoxScore();
      //expect(instance).to.be.a(SoccerV3Stats.BoxScore);
    });

    it('should have the property additionalAssistantReferee1 (base name: "AdditionalAssistantReferee1")', function() {
      // uncomment below and update the code to test the property additionalAssistantReferee1
      //var instance = new SoccerV3Stats.BoxScore();
      //expect(instance).to.be();
    });

    it('should have the property additionalAssistantReferee2 (base name: "AdditionalAssistantReferee2")', function() {
      // uncomment below and update the code to test the property additionalAssistantReferee2
      //var instance = new SoccerV3Stats.BoxScore();
      //expect(instance).to.be();
    });

    it('should have the property assistantReferee1 (base name: "AssistantReferee1")', function() {
      // uncomment below and update the code to test the property assistantReferee1
      //var instance = new SoccerV3Stats.BoxScore();
      //expect(instance).to.be();
    });

    it('should have the property assistantReferee2 (base name: "AssistantReferee2")', function() {
      // uncomment below and update the code to test the property assistantReferee2
      //var instance = new SoccerV3Stats.BoxScore();
      //expect(instance).to.be();
    });

    it('should have the property awayTeamCoach (base name: "AwayTeamCoach")', function() {
      // uncomment below and update the code to test the property awayTeamCoach
      //var instance = new SoccerV3Stats.BoxScore();
      //expect(instance).to.be();
    });

    it('should have the property bookings (base name: "Bookings")', function() {
      // uncomment below and update the code to test the property bookings
      //var instance = new SoccerV3Stats.BoxScore();
      //expect(instance).to.be();
    });

    it('should have the property fourthReferee (base name: "FourthReferee")', function() {
      // uncomment below and update the code to test the property fourthReferee
      //var instance = new SoccerV3Stats.BoxScore();
      //expect(instance).to.be();
    });

    it('should have the property game (base name: "Game")', function() {
      // uncomment below and update the code to test the property game
      //var instance = new SoccerV3Stats.BoxScore();
      //expect(instance).to.be();
    });

    it('should have the property goals (base name: "Goals")', function() {
      // uncomment below and update the code to test the property goals
      //var instance = new SoccerV3Stats.BoxScore();
      //expect(instance).to.be();
    });

    it('should have the property homeTeamCoach (base name: "HomeTeamCoach")', function() {
      // uncomment below and update the code to test the property homeTeamCoach
      //var instance = new SoccerV3Stats.BoxScore();
      //expect(instance).to.be();
    });

    it('should have the property lineups (base name: "Lineups")', function() {
      // uncomment below and update the code to test the property lineups
      //var instance = new SoccerV3Stats.BoxScore();
      //expect(instance).to.be();
    });

    it('should have the property mainReferee (base name: "MainReferee")', function() {
      // uncomment below and update the code to test the property mainReferee
      //var instance = new SoccerV3Stats.BoxScore();
      //expect(instance).to.be();
    });

    it('should have the property penaltyShootouts (base name: "PenaltyShootouts")', function() {
      // uncomment below and update the code to test the property penaltyShootouts
      //var instance = new SoccerV3Stats.BoxScore();
      //expect(instance).to.be();
    });

    it('should have the property playerGames (base name: "PlayerGames")', function() {
      // uncomment below and update the code to test the property playerGames
      //var instance = new SoccerV3Stats.BoxScore();
      //expect(instance).to.be();
    });

    it('should have the property teamGames (base name: "TeamGames")', function() {
      // uncomment below and update the code to test the property teamGames
      //var instance = new SoccerV3Stats.BoxScore();
      //expect(instance).to.be();
    });

    it('should have the property videoAssistantReferee (base name: "VideoAssistantReferee")', function() {
      // uncomment below and update the code to test the property videoAssistantReferee
      //var instance = new SoccerV3Stats.BoxScore();
      //expect(instance).to.be();
    });

  });

}));
