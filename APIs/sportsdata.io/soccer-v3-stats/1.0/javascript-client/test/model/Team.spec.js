/**
 * Soccer v3 Stats
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SoccerV3Stats);
  }
}(this, function(expect, SoccerV3Stats) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SoccerV3Stats.Team();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Team', function() {
    it('should create an instance of Team', function() {
      // uncomment below and update the code to test Team
      //var instance = new SoccerV3Stats.Team();
      //expect(instance).to.be.a(SoccerV3Stats.Team);
    });

    it('should have the property active (base name: "Active")', function() {
      // uncomment below and update the code to test the property active
      //var instance = new SoccerV3Stats.Team();
      //expect(instance).to.be();
    });

    it('should have the property address (base name: "Address")', function() {
      // uncomment below and update the code to test the property address
      //var instance = new SoccerV3Stats.Team();
      //expect(instance).to.be();
    });

    it('should have the property areaId (base name: "AreaId")', function() {
      // uncomment below and update the code to test the property areaId
      //var instance = new SoccerV3Stats.Team();
      //expect(instance).to.be();
    });

    it('should have the property areaName (base name: "AreaName")', function() {
      // uncomment below and update the code to test the property areaName
      //var instance = new SoccerV3Stats.Team();
      //expect(instance).to.be();
    });

    it('should have the property city (base name: "City")', function() {
      // uncomment below and update the code to test the property city
      //var instance = new SoccerV3Stats.Team();
      //expect(instance).to.be();
    });

    it('should have the property clubColor1 (base name: "ClubColor1")', function() {
      // uncomment below and update the code to test the property clubColor1
      //var instance = new SoccerV3Stats.Team();
      //expect(instance).to.be();
    });

    it('should have the property clubColor2 (base name: "ClubColor2")', function() {
      // uncomment below and update the code to test the property clubColor2
      //var instance = new SoccerV3Stats.Team();
      //expect(instance).to.be();
    });

    it('should have the property clubColor3 (base name: "ClubColor3")', function() {
      // uncomment below and update the code to test the property clubColor3
      //var instance = new SoccerV3Stats.Team();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "Email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new SoccerV3Stats.Team();
      //expect(instance).to.be();
    });

    it('should have the property fax (base name: "Fax")', function() {
      // uncomment below and update the code to test the property fax
      //var instance = new SoccerV3Stats.Team();
      //expect(instance).to.be();
    });

    it('should have the property founded (base name: "Founded")', function() {
      // uncomment below and update the code to test the property founded
      //var instance = new SoccerV3Stats.Team();
      //expect(instance).to.be();
    });

    it('should have the property fullName (base name: "FullName")', function() {
      // uncomment below and update the code to test the property fullName
      //var instance = new SoccerV3Stats.Team();
      //expect(instance).to.be();
    });

    it('should have the property gender (base name: "Gender")', function() {
      // uncomment below and update the code to test the property gender
      //var instance = new SoccerV3Stats.Team();
      //expect(instance).to.be();
    });

    it('should have the property globalTeamId (base name: "GlobalTeamId")', function() {
      // uncomment below and update the code to test the property globalTeamId
      //var instance = new SoccerV3Stats.Team();
      //expect(instance).to.be();
    });

    it('should have the property key (base name: "Key")', function() {
      // uncomment below and update the code to test the property key
      //var instance = new SoccerV3Stats.Team();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "Name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new SoccerV3Stats.Team();
      //expect(instance).to.be();
    });

    it('should have the property nickname1 (base name: "Nickname1")', function() {
      // uncomment below and update the code to test the property nickname1
      //var instance = new SoccerV3Stats.Team();
      //expect(instance).to.be();
    });

    it('should have the property nickname2 (base name: "Nickname2")', function() {
      // uncomment below and update the code to test the property nickname2
      //var instance = new SoccerV3Stats.Team();
      //expect(instance).to.be();
    });

    it('should have the property nickname3 (base name: "Nickname3")', function() {
      // uncomment below and update the code to test the property nickname3
      //var instance = new SoccerV3Stats.Team();
      //expect(instance).to.be();
    });

    it('should have the property phone (base name: "Phone")', function() {
      // uncomment below and update the code to test the property phone
      //var instance = new SoccerV3Stats.Team();
      //expect(instance).to.be();
    });

    it('should have the property teamId (base name: "TeamId")', function() {
      // uncomment below and update the code to test the property teamId
      //var instance = new SoccerV3Stats.Team();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "Type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new SoccerV3Stats.Team();
      //expect(instance).to.be();
    });

    it('should have the property venueId (base name: "VenueId")', function() {
      // uncomment below and update the code to test the property venueId
      //var instance = new SoccerV3Stats.Team();
      //expect(instance).to.be();
    });

    it('should have the property venueName (base name: "VenueName")', function() {
      // uncomment below and update the code to test the property venueName
      //var instance = new SoccerV3Stats.Team();
      //expect(instance).to.be();
    });

    it('should have the property website (base name: "Website")', function() {
      // uncomment below and update the code to test the property website
      //var instance = new SoccerV3Stats.Team();
      //expect(instance).to.be();
    });

    it('should have the property wikipediaLogoUrl (base name: "WikipediaLogoUrl")', function() {
      // uncomment below and update the code to test the property wikipediaLogoUrl
      //var instance = new SoccerV3Stats.Team();
      //expect(instance).to.be();
    });

    it('should have the property wikipediaWordMarkUrl (base name: "WikipediaWordMarkUrl")', function() {
      // uncomment below and update the code to test the property wikipediaWordMarkUrl
      //var instance = new SoccerV3Stats.Team();
      //expect(instance).to.be();
    });

    it('should have the property zip (base name: "Zip")', function() {
      // uncomment below and update the code to test the property zip
      //var instance = new SoccerV3Stats.Team();
      //expect(instance).to.be();
    });

  });

}));
