/*
 * Soccer v3 Stats
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PlayerGame
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:05:19.276097-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PlayerGame {
  public static final String SERIALIZED_NAME_ASSISTS = "Assists";
  @SerializedName(SERIALIZED_NAME_ASSISTS)
  private BigDecimal assists;

  public static final String SERIALIZED_NAME_BLOCKED_SHOTS = "BlockedShots";
  @SerializedName(SERIALIZED_NAME_BLOCKED_SHOTS)
  private BigDecimal blockedShots;

  public static final String SERIALIZED_NAME_CAPTAIN = "Captain";
  @SerializedName(SERIALIZED_NAME_CAPTAIN)
  private Boolean captain;

  public static final String SERIALIZED_NAME_CORNERS_WON = "CornersWon";
  @SerializedName(SERIALIZED_NAME_CORNERS_WON)
  private BigDecimal cornersWon;

  public static final String SERIALIZED_NAME_CROSSES = "Crosses";
  @SerializedName(SERIALIZED_NAME_CROSSES)
  private BigDecimal crosses;

  public static final String SERIALIZED_NAME_DATE_TIME = "DateTime";
  @SerializedName(SERIALIZED_NAME_DATE_TIME)
  private String dateTime;

  public static final String SERIALIZED_NAME_DAY = "Day";
  @SerializedName(SERIALIZED_NAME_DAY)
  private String day;

  public static final String SERIALIZED_NAME_DEFENDER_CLEAN_SHEETS = "DefenderCleanSheets";
  @SerializedName(SERIALIZED_NAME_DEFENDER_CLEAN_SHEETS)
  private BigDecimal defenderCleanSheets;

  public static final String SERIALIZED_NAME_DRAFT_KINGS_POSITION = "DraftKingsPosition";
  @SerializedName(SERIALIZED_NAME_DRAFT_KINGS_POSITION)
  private String draftKingsPosition;

  public static final String SERIALIZED_NAME_DRAFT_KINGS_SALARY = "DraftKingsSalary";
  @SerializedName(SERIALIZED_NAME_DRAFT_KINGS_SALARY)
  private Integer draftKingsSalary;

  public static final String SERIALIZED_NAME_FAN_DUEL_POSITION = "FanDuelPosition";
  @SerializedName(SERIALIZED_NAME_FAN_DUEL_POSITION)
  private String fanDuelPosition;

  public static final String SERIALIZED_NAME_FAN_DUEL_SALARY = "FanDuelSalary";
  @SerializedName(SERIALIZED_NAME_FAN_DUEL_SALARY)
  private Integer fanDuelSalary;

  public static final String SERIALIZED_NAME_FANTASY_POINTS = "FantasyPoints";
  @SerializedName(SERIALIZED_NAME_FANTASY_POINTS)
  private BigDecimal fantasyPoints;

  public static final String SERIALIZED_NAME_FANTASY_POINTS_DRAFT_KINGS = "FantasyPointsDraftKings";
  @SerializedName(SERIALIZED_NAME_FANTASY_POINTS_DRAFT_KINGS)
  private BigDecimal fantasyPointsDraftKings;

  public static final String SERIALIZED_NAME_FANTASY_POINTS_FAN_DUEL = "FantasyPointsFanDuel";
  @SerializedName(SERIALIZED_NAME_FANTASY_POINTS_FAN_DUEL)
  private BigDecimal fantasyPointsFanDuel;

  public static final String SERIALIZED_NAME_FANTASY_POINTS_MONDOGOAL = "FantasyPointsMondogoal";
  @SerializedName(SERIALIZED_NAME_FANTASY_POINTS_MONDOGOAL)
  private BigDecimal fantasyPointsMondogoal;

  public static final String SERIALIZED_NAME_FANTASY_POINTS_YAHOO = "FantasyPointsYahoo";
  @SerializedName(SERIALIZED_NAME_FANTASY_POINTS_YAHOO)
  private BigDecimal fantasyPointsYahoo;

  public static final String SERIALIZED_NAME_FOULED = "Fouled";
  @SerializedName(SERIALIZED_NAME_FOULED)
  private BigDecimal fouled;

  public static final String SERIALIZED_NAME_FOULS = "Fouls";
  @SerializedName(SERIALIZED_NAME_FOULS)
  private BigDecimal fouls;

  public static final String SERIALIZED_NAME_GAME_ID = "GameId";
  @SerializedName(SERIALIZED_NAME_GAME_ID)
  private Integer gameId;

  public static final String SERIALIZED_NAME_GAMES = "Games";
  @SerializedName(SERIALIZED_NAME_GAMES)
  private Integer games;

  public static final String SERIALIZED_NAME_GLOBAL_GAME_ID = "GlobalGameId";
  @SerializedName(SERIALIZED_NAME_GLOBAL_GAME_ID)
  private Integer globalGameId;

  public static final String SERIALIZED_NAME_GLOBAL_OPPONENT_ID = "GlobalOpponentId";
  @SerializedName(SERIALIZED_NAME_GLOBAL_OPPONENT_ID)
  private Integer globalOpponentId;

  public static final String SERIALIZED_NAME_GLOBAL_TEAM_ID = "GlobalTeamId";
  @SerializedName(SERIALIZED_NAME_GLOBAL_TEAM_ID)
  private Integer globalTeamId;

  public static final String SERIALIZED_NAME_GOALKEEPER_CLEAN_SHEETS = "GoalkeeperCleanSheets";
  @SerializedName(SERIALIZED_NAME_GOALKEEPER_CLEAN_SHEETS)
  private BigDecimal goalkeeperCleanSheets;

  public static final String SERIALIZED_NAME_GOALKEEPER_GOALS_AGAINST = "GoalkeeperGoalsAgainst";
  @SerializedName(SERIALIZED_NAME_GOALKEEPER_GOALS_AGAINST)
  private BigDecimal goalkeeperGoalsAgainst;

  public static final String SERIALIZED_NAME_GOALKEEPER_SAVES = "GoalkeeperSaves";
  @SerializedName(SERIALIZED_NAME_GOALKEEPER_SAVES)
  private BigDecimal goalkeeperSaves;

  public static final String SERIALIZED_NAME_GOALKEEPER_SINGLE_GOAL_AGAINST = "GoalkeeperSingleGoalAgainst";
  @SerializedName(SERIALIZED_NAME_GOALKEEPER_SINGLE_GOAL_AGAINST)
  private BigDecimal goalkeeperSingleGoalAgainst;

  public static final String SERIALIZED_NAME_GOALKEEPER_WINS = "GoalkeeperWins";
  @SerializedName(SERIALIZED_NAME_GOALKEEPER_WINS)
  private BigDecimal goalkeeperWins;

  public static final String SERIALIZED_NAME_GOALS = "Goals";
  @SerializedName(SERIALIZED_NAME_GOALS)
  private BigDecimal goals;

  public static final String SERIALIZED_NAME_HOME_OR_AWAY = "HomeOrAway";
  @SerializedName(SERIALIZED_NAME_HOME_OR_AWAY)
  private String homeOrAway;

  public static final String SERIALIZED_NAME_INJURY_BODY_PART = "InjuryBodyPart";
  @SerializedName(SERIALIZED_NAME_INJURY_BODY_PART)
  private String injuryBodyPart;

  public static final String SERIALIZED_NAME_INJURY_NOTES = "InjuryNotes";
  @SerializedName(SERIALIZED_NAME_INJURY_NOTES)
  private String injuryNotes;

  public static final String SERIALIZED_NAME_INJURY_START_DATE = "InjuryStartDate";
  @SerializedName(SERIALIZED_NAME_INJURY_START_DATE)
  private String injuryStartDate;

  public static final String SERIALIZED_NAME_INJURY_STATUS = "InjuryStatus";
  @SerializedName(SERIALIZED_NAME_INJURY_STATUS)
  private String injuryStatus;

  public static final String SERIALIZED_NAME_INTERCEPTIONS = "Interceptions";
  @SerializedName(SERIALIZED_NAME_INTERCEPTIONS)
  private BigDecimal interceptions;

  public static final String SERIALIZED_NAME_IS_GAME_OVER = "IsGameOver";
  @SerializedName(SERIALIZED_NAME_IS_GAME_OVER)
  private Boolean isGameOver;

  public static final String SERIALIZED_NAME_JERSEY = "Jersey";
  @SerializedName(SERIALIZED_NAME_JERSEY)
  private Integer jersey;

  public static final String SERIALIZED_NAME_LAST_MAN_TACKLE = "LastManTackle";
  @SerializedName(SERIALIZED_NAME_LAST_MAN_TACKLE)
  private BigDecimal lastManTackle;

  public static final String SERIALIZED_NAME_MINUTES = "Minutes";
  @SerializedName(SERIALIZED_NAME_MINUTES)
  private BigDecimal minutes;

  public static final String SERIALIZED_NAME_MONDOGOAL_POSITION = "MondogoalPosition";
  @SerializedName(SERIALIZED_NAME_MONDOGOAL_POSITION)
  private String mondogoalPosition;

  public static final String SERIALIZED_NAME_MONDOGOAL_SALARY = "MondogoalSalary";
  @SerializedName(SERIALIZED_NAME_MONDOGOAL_SALARY)
  private Integer mondogoalSalary;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_OFFSIDES = "Offsides";
  @SerializedName(SERIALIZED_NAME_OFFSIDES)
  private BigDecimal offsides;

  public static final String SERIALIZED_NAME_OPPONENT = "Opponent";
  @SerializedName(SERIALIZED_NAME_OPPONENT)
  private String opponent;

  public static final String SERIALIZED_NAME_OPPONENT_ID = "OpponentId";
  @SerializedName(SERIALIZED_NAME_OPPONENT_ID)
  private Integer opponentId;

  public static final String SERIALIZED_NAME_OPPONENT_SCORE = "OpponentScore";
  @SerializedName(SERIALIZED_NAME_OPPONENT_SCORE)
  private BigDecimal opponentScore;

  public static final String SERIALIZED_NAME_OWN_GOALS = "OwnGoals";
  @SerializedName(SERIALIZED_NAME_OWN_GOALS)
  private BigDecimal ownGoals;

  public static final String SERIALIZED_NAME_PASSES = "Passes";
  @SerializedName(SERIALIZED_NAME_PASSES)
  private BigDecimal passes;

  public static final String SERIALIZED_NAME_PASSES_COMPLETED = "PassesCompleted";
  @SerializedName(SERIALIZED_NAME_PASSES_COMPLETED)
  private BigDecimal passesCompleted;

  public static final String SERIALIZED_NAME_PENALTIES_CONCEDED = "PenaltiesConceded";
  @SerializedName(SERIALIZED_NAME_PENALTIES_CONCEDED)
  private BigDecimal penaltiesConceded;

  public static final String SERIALIZED_NAME_PENALTIES_WON = "PenaltiesWon";
  @SerializedName(SERIALIZED_NAME_PENALTIES_WON)
  private BigDecimal penaltiesWon;

  public static final String SERIALIZED_NAME_PENALTY_KICK_GOALS = "PenaltyKickGoals";
  @SerializedName(SERIALIZED_NAME_PENALTY_KICK_GOALS)
  private BigDecimal penaltyKickGoals;

  public static final String SERIALIZED_NAME_PENALTY_KICK_MISSES = "PenaltyKickMisses";
  @SerializedName(SERIALIZED_NAME_PENALTY_KICK_MISSES)
  private BigDecimal penaltyKickMisses;

  public static final String SERIALIZED_NAME_PENALTY_KICK_SAVES = "PenaltyKickSaves";
  @SerializedName(SERIALIZED_NAME_PENALTY_KICK_SAVES)
  private BigDecimal penaltyKickSaves;

  public static final String SERIALIZED_NAME_PLAYER_ID = "PlayerId";
  @SerializedName(SERIALIZED_NAME_PLAYER_ID)
  private Integer playerId;

  public static final String SERIALIZED_NAME_POSITION = "Position";
  @SerializedName(SERIALIZED_NAME_POSITION)
  private String position;

  public static final String SERIALIZED_NAME_POSITION_CATEGORY = "PositionCategory";
  @SerializedName(SERIALIZED_NAME_POSITION_CATEGORY)
  private String positionCategory;

  public static final String SERIALIZED_NAME_RED_CARDS = "RedCards";
  @SerializedName(SERIALIZED_NAME_RED_CARDS)
  private BigDecimal redCards;

  public static final String SERIALIZED_NAME_ROUND_ID = "RoundId";
  @SerializedName(SERIALIZED_NAME_ROUND_ID)
  private Integer roundId;

  public static final String SERIALIZED_NAME_SCORE = "Score";
  @SerializedName(SERIALIZED_NAME_SCORE)
  private BigDecimal score;

  public static final String SERIALIZED_NAME_SEASON = "Season";
  @SerializedName(SERIALIZED_NAME_SEASON)
  private Integer season;

  public static final String SERIALIZED_NAME_SEASON_TYPE = "SeasonType";
  @SerializedName(SERIALIZED_NAME_SEASON_TYPE)
  private Integer seasonType;

  public static final String SERIALIZED_NAME_SHORT_NAME = "ShortName";
  @SerializedName(SERIALIZED_NAME_SHORT_NAME)
  private String shortName;

  public static final String SERIALIZED_NAME_SHOTS = "Shots";
  @SerializedName(SERIALIZED_NAME_SHOTS)
  private BigDecimal shots;

  public static final String SERIALIZED_NAME_SHOTS_ON_GOAL = "ShotsOnGoal";
  @SerializedName(SERIALIZED_NAME_SHOTS_ON_GOAL)
  private BigDecimal shotsOnGoal;

  public static final String SERIALIZED_NAME_STARTED = "Started";
  @SerializedName(SERIALIZED_NAME_STARTED)
  private Integer started;

  public static final String SERIALIZED_NAME_STAT_ID = "StatId";
  @SerializedName(SERIALIZED_NAME_STAT_ID)
  private Integer statId;

  public static final String SERIALIZED_NAME_SUSPENSION = "Suspension";
  @SerializedName(SERIALIZED_NAME_SUSPENSION)
  private Boolean suspension;

  public static final String SERIALIZED_NAME_SUSPENSION_REASON = "SuspensionReason";
  @SerializedName(SERIALIZED_NAME_SUSPENSION_REASON)
  private String suspensionReason;

  public static final String SERIALIZED_NAME_TACKLES = "Tackles";
  @SerializedName(SERIALIZED_NAME_TACKLES)
  private BigDecimal tackles;

  public static final String SERIALIZED_NAME_TACKLES_WON = "TacklesWon";
  @SerializedName(SERIALIZED_NAME_TACKLES_WON)
  private BigDecimal tacklesWon;

  public static final String SERIALIZED_NAME_TEAM = "Team";
  @SerializedName(SERIALIZED_NAME_TEAM)
  private String team;

  public static final String SERIALIZED_NAME_TEAM_ID = "TeamId";
  @SerializedName(SERIALIZED_NAME_TEAM_ID)
  private Integer teamId;

  public static final String SERIALIZED_NAME_TOUCHES = "Touches";
  @SerializedName(SERIALIZED_NAME_TOUCHES)
  private BigDecimal touches;

  public static final String SERIALIZED_NAME_UPDATED = "Updated";
  @SerializedName(SERIALIZED_NAME_UPDATED)
  private String updated;

  public static final String SERIALIZED_NAME_UPDATED_UTC = "UpdatedUtc";
  @SerializedName(SERIALIZED_NAME_UPDATED_UTC)
  private String updatedUtc;

  public static final String SERIALIZED_NAME_YAHOO_POSITION = "YahooPosition";
  @SerializedName(SERIALIZED_NAME_YAHOO_POSITION)
  private String yahooPosition;

  public static final String SERIALIZED_NAME_YAHOO_SALARY = "YahooSalary";
  @SerializedName(SERIALIZED_NAME_YAHOO_SALARY)
  private Integer yahooSalary;

  public static final String SERIALIZED_NAME_YELLOW_CARDS = "YellowCards";
  @SerializedName(SERIALIZED_NAME_YELLOW_CARDS)
  private BigDecimal yellowCards;

  public static final String SERIALIZED_NAME_YELLOW_RED_CARDS = "YellowRedCards";
  @SerializedName(SERIALIZED_NAME_YELLOW_RED_CARDS)
  private BigDecimal yellowRedCards;

  public PlayerGame() {
  }

  public PlayerGame assists(BigDecimal assists) {
    this.assists = assists;
    return this;
  }

  /**
   * Get assists
   * @return assists
   */
  @javax.annotation.Nullable
  public BigDecimal getAssists() {
    return assists;
  }

  public void setAssists(BigDecimal assists) {
    this.assists = assists;
  }


  public PlayerGame blockedShots(BigDecimal blockedShots) {
    this.blockedShots = blockedShots;
    return this;
  }

  /**
   * Get blockedShots
   * @return blockedShots
   */
  @javax.annotation.Nullable
  public BigDecimal getBlockedShots() {
    return blockedShots;
  }

  public void setBlockedShots(BigDecimal blockedShots) {
    this.blockedShots = blockedShots;
  }


  public PlayerGame captain(Boolean captain) {
    this.captain = captain;
    return this;
  }

  /**
   * Get captain
   * @return captain
   */
  @javax.annotation.Nullable
  public Boolean getCaptain() {
    return captain;
  }

  public void setCaptain(Boolean captain) {
    this.captain = captain;
  }


  public PlayerGame cornersWon(BigDecimal cornersWon) {
    this.cornersWon = cornersWon;
    return this;
  }

  /**
   * Get cornersWon
   * @return cornersWon
   */
  @javax.annotation.Nullable
  public BigDecimal getCornersWon() {
    return cornersWon;
  }

  public void setCornersWon(BigDecimal cornersWon) {
    this.cornersWon = cornersWon;
  }


  public PlayerGame crosses(BigDecimal crosses) {
    this.crosses = crosses;
    return this;
  }

  /**
   * Get crosses
   * @return crosses
   */
  @javax.annotation.Nullable
  public BigDecimal getCrosses() {
    return crosses;
  }

  public void setCrosses(BigDecimal crosses) {
    this.crosses = crosses;
  }


  public PlayerGame dateTime(String dateTime) {
    this.dateTime = dateTime;
    return this;
  }

  /**
   * Get dateTime
   * @return dateTime
   */
  @javax.annotation.Nullable
  public String getDateTime() {
    return dateTime;
  }

  public void setDateTime(String dateTime) {
    this.dateTime = dateTime;
  }


  public PlayerGame day(String day) {
    this.day = day;
    return this;
  }

  /**
   * Get day
   * @return day
   */
  @javax.annotation.Nullable
  public String getDay() {
    return day;
  }

  public void setDay(String day) {
    this.day = day;
  }


  public PlayerGame defenderCleanSheets(BigDecimal defenderCleanSheets) {
    this.defenderCleanSheets = defenderCleanSheets;
    return this;
  }

  /**
   * Get defenderCleanSheets
   * @return defenderCleanSheets
   */
  @javax.annotation.Nullable
  public BigDecimal getDefenderCleanSheets() {
    return defenderCleanSheets;
  }

  public void setDefenderCleanSheets(BigDecimal defenderCleanSheets) {
    this.defenderCleanSheets = defenderCleanSheets;
  }


  public PlayerGame draftKingsPosition(String draftKingsPosition) {
    this.draftKingsPosition = draftKingsPosition;
    return this;
  }

  /**
   * Get draftKingsPosition
   * @return draftKingsPosition
   */
  @javax.annotation.Nullable
  public String getDraftKingsPosition() {
    return draftKingsPosition;
  }

  public void setDraftKingsPosition(String draftKingsPosition) {
    this.draftKingsPosition = draftKingsPosition;
  }


  public PlayerGame draftKingsSalary(Integer draftKingsSalary) {
    this.draftKingsSalary = draftKingsSalary;
    return this;
  }

  /**
   * Get draftKingsSalary
   * @return draftKingsSalary
   */
  @javax.annotation.Nullable
  public Integer getDraftKingsSalary() {
    return draftKingsSalary;
  }

  public void setDraftKingsSalary(Integer draftKingsSalary) {
    this.draftKingsSalary = draftKingsSalary;
  }


  public PlayerGame fanDuelPosition(String fanDuelPosition) {
    this.fanDuelPosition = fanDuelPosition;
    return this;
  }

  /**
   * Get fanDuelPosition
   * @return fanDuelPosition
   */
  @javax.annotation.Nullable
  public String getFanDuelPosition() {
    return fanDuelPosition;
  }

  public void setFanDuelPosition(String fanDuelPosition) {
    this.fanDuelPosition = fanDuelPosition;
  }


  public PlayerGame fanDuelSalary(Integer fanDuelSalary) {
    this.fanDuelSalary = fanDuelSalary;
    return this;
  }

  /**
   * Get fanDuelSalary
   * @return fanDuelSalary
   */
  @javax.annotation.Nullable
  public Integer getFanDuelSalary() {
    return fanDuelSalary;
  }

  public void setFanDuelSalary(Integer fanDuelSalary) {
    this.fanDuelSalary = fanDuelSalary;
  }


  public PlayerGame fantasyPoints(BigDecimal fantasyPoints) {
    this.fantasyPoints = fantasyPoints;
    return this;
  }

  /**
   * Get fantasyPoints
   * @return fantasyPoints
   */
  @javax.annotation.Nullable
  public BigDecimal getFantasyPoints() {
    return fantasyPoints;
  }

  public void setFantasyPoints(BigDecimal fantasyPoints) {
    this.fantasyPoints = fantasyPoints;
  }


  public PlayerGame fantasyPointsDraftKings(BigDecimal fantasyPointsDraftKings) {
    this.fantasyPointsDraftKings = fantasyPointsDraftKings;
    return this;
  }

  /**
   * Get fantasyPointsDraftKings
   * @return fantasyPointsDraftKings
   */
  @javax.annotation.Nullable
  public BigDecimal getFantasyPointsDraftKings() {
    return fantasyPointsDraftKings;
  }

  public void setFantasyPointsDraftKings(BigDecimal fantasyPointsDraftKings) {
    this.fantasyPointsDraftKings = fantasyPointsDraftKings;
  }


  public PlayerGame fantasyPointsFanDuel(BigDecimal fantasyPointsFanDuel) {
    this.fantasyPointsFanDuel = fantasyPointsFanDuel;
    return this;
  }

  /**
   * Get fantasyPointsFanDuel
   * @return fantasyPointsFanDuel
   */
  @javax.annotation.Nullable
  public BigDecimal getFantasyPointsFanDuel() {
    return fantasyPointsFanDuel;
  }

  public void setFantasyPointsFanDuel(BigDecimal fantasyPointsFanDuel) {
    this.fantasyPointsFanDuel = fantasyPointsFanDuel;
  }


  public PlayerGame fantasyPointsMondogoal(BigDecimal fantasyPointsMondogoal) {
    this.fantasyPointsMondogoal = fantasyPointsMondogoal;
    return this;
  }

  /**
   * Get fantasyPointsMondogoal
   * @return fantasyPointsMondogoal
   */
  @javax.annotation.Nullable
  public BigDecimal getFantasyPointsMondogoal() {
    return fantasyPointsMondogoal;
  }

  public void setFantasyPointsMondogoal(BigDecimal fantasyPointsMondogoal) {
    this.fantasyPointsMondogoal = fantasyPointsMondogoal;
  }


  public PlayerGame fantasyPointsYahoo(BigDecimal fantasyPointsYahoo) {
    this.fantasyPointsYahoo = fantasyPointsYahoo;
    return this;
  }

  /**
   * Get fantasyPointsYahoo
   * @return fantasyPointsYahoo
   */
  @javax.annotation.Nullable
  public BigDecimal getFantasyPointsYahoo() {
    return fantasyPointsYahoo;
  }

  public void setFantasyPointsYahoo(BigDecimal fantasyPointsYahoo) {
    this.fantasyPointsYahoo = fantasyPointsYahoo;
  }


  public PlayerGame fouled(BigDecimal fouled) {
    this.fouled = fouled;
    return this;
  }

  /**
   * Get fouled
   * @return fouled
   */
  @javax.annotation.Nullable
  public BigDecimal getFouled() {
    return fouled;
  }

  public void setFouled(BigDecimal fouled) {
    this.fouled = fouled;
  }


  public PlayerGame fouls(BigDecimal fouls) {
    this.fouls = fouls;
    return this;
  }

  /**
   * Get fouls
   * @return fouls
   */
  @javax.annotation.Nullable
  public BigDecimal getFouls() {
    return fouls;
  }

  public void setFouls(BigDecimal fouls) {
    this.fouls = fouls;
  }


  public PlayerGame gameId(Integer gameId) {
    this.gameId = gameId;
    return this;
  }

  /**
   * Get gameId
   * @return gameId
   */
  @javax.annotation.Nullable
  public Integer getGameId() {
    return gameId;
  }

  public void setGameId(Integer gameId) {
    this.gameId = gameId;
  }


  public PlayerGame games(Integer games) {
    this.games = games;
    return this;
  }

  /**
   * Get games
   * @return games
   */
  @javax.annotation.Nullable
  public Integer getGames() {
    return games;
  }

  public void setGames(Integer games) {
    this.games = games;
  }


  public PlayerGame globalGameId(Integer globalGameId) {
    this.globalGameId = globalGameId;
    return this;
  }

  /**
   * Get globalGameId
   * @return globalGameId
   */
  @javax.annotation.Nullable
  public Integer getGlobalGameId() {
    return globalGameId;
  }

  public void setGlobalGameId(Integer globalGameId) {
    this.globalGameId = globalGameId;
  }


  public PlayerGame globalOpponentId(Integer globalOpponentId) {
    this.globalOpponentId = globalOpponentId;
    return this;
  }

  /**
   * Get globalOpponentId
   * @return globalOpponentId
   */
  @javax.annotation.Nullable
  public Integer getGlobalOpponentId() {
    return globalOpponentId;
  }

  public void setGlobalOpponentId(Integer globalOpponentId) {
    this.globalOpponentId = globalOpponentId;
  }


  public PlayerGame globalTeamId(Integer globalTeamId) {
    this.globalTeamId = globalTeamId;
    return this;
  }

  /**
   * Get globalTeamId
   * @return globalTeamId
   */
  @javax.annotation.Nullable
  public Integer getGlobalTeamId() {
    return globalTeamId;
  }

  public void setGlobalTeamId(Integer globalTeamId) {
    this.globalTeamId = globalTeamId;
  }


  public PlayerGame goalkeeperCleanSheets(BigDecimal goalkeeperCleanSheets) {
    this.goalkeeperCleanSheets = goalkeeperCleanSheets;
    return this;
  }

  /**
   * Get goalkeeperCleanSheets
   * @return goalkeeperCleanSheets
   */
  @javax.annotation.Nullable
  public BigDecimal getGoalkeeperCleanSheets() {
    return goalkeeperCleanSheets;
  }

  public void setGoalkeeperCleanSheets(BigDecimal goalkeeperCleanSheets) {
    this.goalkeeperCleanSheets = goalkeeperCleanSheets;
  }


  public PlayerGame goalkeeperGoalsAgainst(BigDecimal goalkeeperGoalsAgainst) {
    this.goalkeeperGoalsAgainst = goalkeeperGoalsAgainst;
    return this;
  }

  /**
   * Get goalkeeperGoalsAgainst
   * @return goalkeeperGoalsAgainst
   */
  @javax.annotation.Nullable
  public BigDecimal getGoalkeeperGoalsAgainst() {
    return goalkeeperGoalsAgainst;
  }

  public void setGoalkeeperGoalsAgainst(BigDecimal goalkeeperGoalsAgainst) {
    this.goalkeeperGoalsAgainst = goalkeeperGoalsAgainst;
  }


  public PlayerGame goalkeeperSaves(BigDecimal goalkeeperSaves) {
    this.goalkeeperSaves = goalkeeperSaves;
    return this;
  }

  /**
   * Get goalkeeperSaves
   * @return goalkeeperSaves
   */
  @javax.annotation.Nullable
  public BigDecimal getGoalkeeperSaves() {
    return goalkeeperSaves;
  }

  public void setGoalkeeperSaves(BigDecimal goalkeeperSaves) {
    this.goalkeeperSaves = goalkeeperSaves;
  }


  public PlayerGame goalkeeperSingleGoalAgainst(BigDecimal goalkeeperSingleGoalAgainst) {
    this.goalkeeperSingleGoalAgainst = goalkeeperSingleGoalAgainst;
    return this;
  }

  /**
   * Get goalkeeperSingleGoalAgainst
   * @return goalkeeperSingleGoalAgainst
   */
  @javax.annotation.Nullable
  public BigDecimal getGoalkeeperSingleGoalAgainst() {
    return goalkeeperSingleGoalAgainst;
  }

  public void setGoalkeeperSingleGoalAgainst(BigDecimal goalkeeperSingleGoalAgainst) {
    this.goalkeeperSingleGoalAgainst = goalkeeperSingleGoalAgainst;
  }


  public PlayerGame goalkeeperWins(BigDecimal goalkeeperWins) {
    this.goalkeeperWins = goalkeeperWins;
    return this;
  }

  /**
   * Get goalkeeperWins
   * @return goalkeeperWins
   */
  @javax.annotation.Nullable
  public BigDecimal getGoalkeeperWins() {
    return goalkeeperWins;
  }

  public void setGoalkeeperWins(BigDecimal goalkeeperWins) {
    this.goalkeeperWins = goalkeeperWins;
  }


  public PlayerGame goals(BigDecimal goals) {
    this.goals = goals;
    return this;
  }

  /**
   * Get goals
   * @return goals
   */
  @javax.annotation.Nullable
  public BigDecimal getGoals() {
    return goals;
  }

  public void setGoals(BigDecimal goals) {
    this.goals = goals;
  }


  public PlayerGame homeOrAway(String homeOrAway) {
    this.homeOrAway = homeOrAway;
    return this;
  }

  /**
   * Get homeOrAway
   * @return homeOrAway
   */
  @javax.annotation.Nullable
  public String getHomeOrAway() {
    return homeOrAway;
  }

  public void setHomeOrAway(String homeOrAway) {
    this.homeOrAway = homeOrAway;
  }


  public PlayerGame injuryBodyPart(String injuryBodyPart) {
    this.injuryBodyPart = injuryBodyPart;
    return this;
  }

  /**
   * Get injuryBodyPart
   * @return injuryBodyPart
   */
  @javax.annotation.Nullable
  public String getInjuryBodyPart() {
    return injuryBodyPart;
  }

  public void setInjuryBodyPart(String injuryBodyPart) {
    this.injuryBodyPart = injuryBodyPart;
  }


  public PlayerGame injuryNotes(String injuryNotes) {
    this.injuryNotes = injuryNotes;
    return this;
  }

  /**
   * Get injuryNotes
   * @return injuryNotes
   */
  @javax.annotation.Nullable
  public String getInjuryNotes() {
    return injuryNotes;
  }

  public void setInjuryNotes(String injuryNotes) {
    this.injuryNotes = injuryNotes;
  }


  public PlayerGame injuryStartDate(String injuryStartDate) {
    this.injuryStartDate = injuryStartDate;
    return this;
  }

  /**
   * Get injuryStartDate
   * @return injuryStartDate
   */
  @javax.annotation.Nullable
  public String getInjuryStartDate() {
    return injuryStartDate;
  }

  public void setInjuryStartDate(String injuryStartDate) {
    this.injuryStartDate = injuryStartDate;
  }


  public PlayerGame injuryStatus(String injuryStatus) {
    this.injuryStatus = injuryStatus;
    return this;
  }

  /**
   * Get injuryStatus
   * @return injuryStatus
   */
  @javax.annotation.Nullable
  public String getInjuryStatus() {
    return injuryStatus;
  }

  public void setInjuryStatus(String injuryStatus) {
    this.injuryStatus = injuryStatus;
  }


  public PlayerGame interceptions(BigDecimal interceptions) {
    this.interceptions = interceptions;
    return this;
  }

  /**
   * Get interceptions
   * @return interceptions
   */
  @javax.annotation.Nullable
  public BigDecimal getInterceptions() {
    return interceptions;
  }

  public void setInterceptions(BigDecimal interceptions) {
    this.interceptions = interceptions;
  }


  public PlayerGame isGameOver(Boolean isGameOver) {
    this.isGameOver = isGameOver;
    return this;
  }

  /**
   * Get isGameOver
   * @return isGameOver
   */
  @javax.annotation.Nullable
  public Boolean getIsGameOver() {
    return isGameOver;
  }

  public void setIsGameOver(Boolean isGameOver) {
    this.isGameOver = isGameOver;
  }


  public PlayerGame jersey(Integer jersey) {
    this.jersey = jersey;
    return this;
  }

  /**
   * Get jersey
   * @return jersey
   */
  @javax.annotation.Nullable
  public Integer getJersey() {
    return jersey;
  }

  public void setJersey(Integer jersey) {
    this.jersey = jersey;
  }


  public PlayerGame lastManTackle(BigDecimal lastManTackle) {
    this.lastManTackle = lastManTackle;
    return this;
  }

  /**
   * Get lastManTackle
   * @return lastManTackle
   */
  @javax.annotation.Nullable
  public BigDecimal getLastManTackle() {
    return lastManTackle;
  }

  public void setLastManTackle(BigDecimal lastManTackle) {
    this.lastManTackle = lastManTackle;
  }


  public PlayerGame minutes(BigDecimal minutes) {
    this.minutes = minutes;
    return this;
  }

  /**
   * Get minutes
   * @return minutes
   */
  @javax.annotation.Nullable
  public BigDecimal getMinutes() {
    return minutes;
  }

  public void setMinutes(BigDecimal minutes) {
    this.minutes = minutes;
  }


  public PlayerGame mondogoalPosition(String mondogoalPosition) {
    this.mondogoalPosition = mondogoalPosition;
    return this;
  }

  /**
   * Get mondogoalPosition
   * @return mondogoalPosition
   */
  @javax.annotation.Nullable
  public String getMondogoalPosition() {
    return mondogoalPosition;
  }

  public void setMondogoalPosition(String mondogoalPosition) {
    this.mondogoalPosition = mondogoalPosition;
  }


  public PlayerGame mondogoalSalary(Integer mondogoalSalary) {
    this.mondogoalSalary = mondogoalSalary;
    return this;
  }

  /**
   * Get mondogoalSalary
   * @return mondogoalSalary
   */
  @javax.annotation.Nullable
  public Integer getMondogoalSalary() {
    return mondogoalSalary;
  }

  public void setMondogoalSalary(Integer mondogoalSalary) {
    this.mondogoalSalary = mondogoalSalary;
  }


  public PlayerGame name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public PlayerGame offsides(BigDecimal offsides) {
    this.offsides = offsides;
    return this;
  }

  /**
   * Get offsides
   * @return offsides
   */
  @javax.annotation.Nullable
  public BigDecimal getOffsides() {
    return offsides;
  }

  public void setOffsides(BigDecimal offsides) {
    this.offsides = offsides;
  }


  public PlayerGame opponent(String opponent) {
    this.opponent = opponent;
    return this;
  }

  /**
   * Get opponent
   * @return opponent
   */
  @javax.annotation.Nullable
  public String getOpponent() {
    return opponent;
  }

  public void setOpponent(String opponent) {
    this.opponent = opponent;
  }


  public PlayerGame opponentId(Integer opponentId) {
    this.opponentId = opponentId;
    return this;
  }

  /**
   * Get opponentId
   * @return opponentId
   */
  @javax.annotation.Nullable
  public Integer getOpponentId() {
    return opponentId;
  }

  public void setOpponentId(Integer opponentId) {
    this.opponentId = opponentId;
  }


  public PlayerGame opponentScore(BigDecimal opponentScore) {
    this.opponentScore = opponentScore;
    return this;
  }

  /**
   * Get opponentScore
   * @return opponentScore
   */
  @javax.annotation.Nullable
  public BigDecimal getOpponentScore() {
    return opponentScore;
  }

  public void setOpponentScore(BigDecimal opponentScore) {
    this.opponentScore = opponentScore;
  }


  public PlayerGame ownGoals(BigDecimal ownGoals) {
    this.ownGoals = ownGoals;
    return this;
  }

  /**
   * Get ownGoals
   * @return ownGoals
   */
  @javax.annotation.Nullable
  public BigDecimal getOwnGoals() {
    return ownGoals;
  }

  public void setOwnGoals(BigDecimal ownGoals) {
    this.ownGoals = ownGoals;
  }


  public PlayerGame passes(BigDecimal passes) {
    this.passes = passes;
    return this;
  }

  /**
   * Get passes
   * @return passes
   */
  @javax.annotation.Nullable
  public BigDecimal getPasses() {
    return passes;
  }

  public void setPasses(BigDecimal passes) {
    this.passes = passes;
  }


  public PlayerGame passesCompleted(BigDecimal passesCompleted) {
    this.passesCompleted = passesCompleted;
    return this;
  }

  /**
   * Get passesCompleted
   * @return passesCompleted
   */
  @javax.annotation.Nullable
  public BigDecimal getPassesCompleted() {
    return passesCompleted;
  }

  public void setPassesCompleted(BigDecimal passesCompleted) {
    this.passesCompleted = passesCompleted;
  }


  public PlayerGame penaltiesConceded(BigDecimal penaltiesConceded) {
    this.penaltiesConceded = penaltiesConceded;
    return this;
  }

  /**
   * Get penaltiesConceded
   * @return penaltiesConceded
   */
  @javax.annotation.Nullable
  public BigDecimal getPenaltiesConceded() {
    return penaltiesConceded;
  }

  public void setPenaltiesConceded(BigDecimal penaltiesConceded) {
    this.penaltiesConceded = penaltiesConceded;
  }


  public PlayerGame penaltiesWon(BigDecimal penaltiesWon) {
    this.penaltiesWon = penaltiesWon;
    return this;
  }

  /**
   * Get penaltiesWon
   * @return penaltiesWon
   */
  @javax.annotation.Nullable
  public BigDecimal getPenaltiesWon() {
    return penaltiesWon;
  }

  public void setPenaltiesWon(BigDecimal penaltiesWon) {
    this.penaltiesWon = penaltiesWon;
  }


  public PlayerGame penaltyKickGoals(BigDecimal penaltyKickGoals) {
    this.penaltyKickGoals = penaltyKickGoals;
    return this;
  }

  /**
   * Get penaltyKickGoals
   * @return penaltyKickGoals
   */
  @javax.annotation.Nullable
  public BigDecimal getPenaltyKickGoals() {
    return penaltyKickGoals;
  }

  public void setPenaltyKickGoals(BigDecimal penaltyKickGoals) {
    this.penaltyKickGoals = penaltyKickGoals;
  }


  public PlayerGame penaltyKickMisses(BigDecimal penaltyKickMisses) {
    this.penaltyKickMisses = penaltyKickMisses;
    return this;
  }

  /**
   * Get penaltyKickMisses
   * @return penaltyKickMisses
   */
  @javax.annotation.Nullable
  public BigDecimal getPenaltyKickMisses() {
    return penaltyKickMisses;
  }

  public void setPenaltyKickMisses(BigDecimal penaltyKickMisses) {
    this.penaltyKickMisses = penaltyKickMisses;
  }


  public PlayerGame penaltyKickSaves(BigDecimal penaltyKickSaves) {
    this.penaltyKickSaves = penaltyKickSaves;
    return this;
  }

  /**
   * Get penaltyKickSaves
   * @return penaltyKickSaves
   */
  @javax.annotation.Nullable
  public BigDecimal getPenaltyKickSaves() {
    return penaltyKickSaves;
  }

  public void setPenaltyKickSaves(BigDecimal penaltyKickSaves) {
    this.penaltyKickSaves = penaltyKickSaves;
  }


  public PlayerGame playerId(Integer playerId) {
    this.playerId = playerId;
    return this;
  }

  /**
   * Get playerId
   * @return playerId
   */
  @javax.annotation.Nullable
  public Integer getPlayerId() {
    return playerId;
  }

  public void setPlayerId(Integer playerId) {
    this.playerId = playerId;
  }


  public PlayerGame position(String position) {
    this.position = position;
    return this;
  }

  /**
   * Get position
   * @return position
   */
  @javax.annotation.Nullable
  public String getPosition() {
    return position;
  }

  public void setPosition(String position) {
    this.position = position;
  }


  public PlayerGame positionCategory(String positionCategory) {
    this.positionCategory = positionCategory;
    return this;
  }

  /**
   * Get positionCategory
   * @return positionCategory
   */
  @javax.annotation.Nullable
  public String getPositionCategory() {
    return positionCategory;
  }

  public void setPositionCategory(String positionCategory) {
    this.positionCategory = positionCategory;
  }


  public PlayerGame redCards(BigDecimal redCards) {
    this.redCards = redCards;
    return this;
  }

  /**
   * Get redCards
   * @return redCards
   */
  @javax.annotation.Nullable
  public BigDecimal getRedCards() {
    return redCards;
  }

  public void setRedCards(BigDecimal redCards) {
    this.redCards = redCards;
  }


  public PlayerGame roundId(Integer roundId) {
    this.roundId = roundId;
    return this;
  }

  /**
   * Get roundId
   * @return roundId
   */
  @javax.annotation.Nullable
  public Integer getRoundId() {
    return roundId;
  }

  public void setRoundId(Integer roundId) {
    this.roundId = roundId;
  }


  public PlayerGame score(BigDecimal score) {
    this.score = score;
    return this;
  }

  /**
   * Get score
   * @return score
   */
  @javax.annotation.Nullable
  public BigDecimal getScore() {
    return score;
  }

  public void setScore(BigDecimal score) {
    this.score = score;
  }


  public PlayerGame season(Integer season) {
    this.season = season;
    return this;
  }

  /**
   * Get season
   * @return season
   */
  @javax.annotation.Nullable
  public Integer getSeason() {
    return season;
  }

  public void setSeason(Integer season) {
    this.season = season;
  }


  public PlayerGame seasonType(Integer seasonType) {
    this.seasonType = seasonType;
    return this;
  }

  /**
   * Get seasonType
   * @return seasonType
   */
  @javax.annotation.Nullable
  public Integer getSeasonType() {
    return seasonType;
  }

  public void setSeasonType(Integer seasonType) {
    this.seasonType = seasonType;
  }


  public PlayerGame shortName(String shortName) {
    this.shortName = shortName;
    return this;
  }

  /**
   * Get shortName
   * @return shortName
   */
  @javax.annotation.Nullable
  public String getShortName() {
    return shortName;
  }

  public void setShortName(String shortName) {
    this.shortName = shortName;
  }


  public PlayerGame shots(BigDecimal shots) {
    this.shots = shots;
    return this;
  }

  /**
   * Get shots
   * @return shots
   */
  @javax.annotation.Nullable
  public BigDecimal getShots() {
    return shots;
  }

  public void setShots(BigDecimal shots) {
    this.shots = shots;
  }


  public PlayerGame shotsOnGoal(BigDecimal shotsOnGoal) {
    this.shotsOnGoal = shotsOnGoal;
    return this;
  }

  /**
   * Get shotsOnGoal
   * @return shotsOnGoal
   */
  @javax.annotation.Nullable
  public BigDecimal getShotsOnGoal() {
    return shotsOnGoal;
  }

  public void setShotsOnGoal(BigDecimal shotsOnGoal) {
    this.shotsOnGoal = shotsOnGoal;
  }


  public PlayerGame started(Integer started) {
    this.started = started;
    return this;
  }

  /**
   * Get started
   * @return started
   */
  @javax.annotation.Nullable
  public Integer getStarted() {
    return started;
  }

  public void setStarted(Integer started) {
    this.started = started;
  }


  public PlayerGame statId(Integer statId) {
    this.statId = statId;
    return this;
  }

  /**
   * Get statId
   * @return statId
   */
  @javax.annotation.Nullable
  public Integer getStatId() {
    return statId;
  }

  public void setStatId(Integer statId) {
    this.statId = statId;
  }


  public PlayerGame suspension(Boolean suspension) {
    this.suspension = suspension;
    return this;
  }

  /**
   * Get suspension
   * @return suspension
   */
  @javax.annotation.Nullable
  public Boolean getSuspension() {
    return suspension;
  }

  public void setSuspension(Boolean suspension) {
    this.suspension = suspension;
  }


  public PlayerGame suspensionReason(String suspensionReason) {
    this.suspensionReason = suspensionReason;
    return this;
  }

  /**
   * Get suspensionReason
   * @return suspensionReason
   */
  @javax.annotation.Nullable
  public String getSuspensionReason() {
    return suspensionReason;
  }

  public void setSuspensionReason(String suspensionReason) {
    this.suspensionReason = suspensionReason;
  }


  public PlayerGame tackles(BigDecimal tackles) {
    this.tackles = tackles;
    return this;
  }

  /**
   * Get tackles
   * @return tackles
   */
  @javax.annotation.Nullable
  public BigDecimal getTackles() {
    return tackles;
  }

  public void setTackles(BigDecimal tackles) {
    this.tackles = tackles;
  }


  public PlayerGame tacklesWon(BigDecimal tacklesWon) {
    this.tacklesWon = tacklesWon;
    return this;
  }

  /**
   * Get tacklesWon
   * @return tacklesWon
   */
  @javax.annotation.Nullable
  public BigDecimal getTacklesWon() {
    return tacklesWon;
  }

  public void setTacklesWon(BigDecimal tacklesWon) {
    this.tacklesWon = tacklesWon;
  }


  public PlayerGame team(String team) {
    this.team = team;
    return this;
  }

  /**
   * Get team
   * @return team
   */
  @javax.annotation.Nullable
  public String getTeam() {
    return team;
  }

  public void setTeam(String team) {
    this.team = team;
  }


  public PlayerGame teamId(Integer teamId) {
    this.teamId = teamId;
    return this;
  }

  /**
   * Get teamId
   * @return teamId
   */
  @javax.annotation.Nullable
  public Integer getTeamId() {
    return teamId;
  }

  public void setTeamId(Integer teamId) {
    this.teamId = teamId;
  }


  public PlayerGame touches(BigDecimal touches) {
    this.touches = touches;
    return this;
  }

  /**
   * Get touches
   * @return touches
   */
  @javax.annotation.Nullable
  public BigDecimal getTouches() {
    return touches;
  }

  public void setTouches(BigDecimal touches) {
    this.touches = touches;
  }


  public PlayerGame updated(String updated) {
    this.updated = updated;
    return this;
  }

  /**
   * Get updated
   * @return updated
   */
  @javax.annotation.Nullable
  public String getUpdated() {
    return updated;
  }

  public void setUpdated(String updated) {
    this.updated = updated;
  }


  public PlayerGame updatedUtc(String updatedUtc) {
    this.updatedUtc = updatedUtc;
    return this;
  }

  /**
   * Get updatedUtc
   * @return updatedUtc
   */
  @javax.annotation.Nullable
  public String getUpdatedUtc() {
    return updatedUtc;
  }

  public void setUpdatedUtc(String updatedUtc) {
    this.updatedUtc = updatedUtc;
  }


  public PlayerGame yahooPosition(String yahooPosition) {
    this.yahooPosition = yahooPosition;
    return this;
  }

  /**
   * Get yahooPosition
   * @return yahooPosition
   */
  @javax.annotation.Nullable
  public String getYahooPosition() {
    return yahooPosition;
  }

  public void setYahooPosition(String yahooPosition) {
    this.yahooPosition = yahooPosition;
  }


  public PlayerGame yahooSalary(Integer yahooSalary) {
    this.yahooSalary = yahooSalary;
    return this;
  }

  /**
   * Get yahooSalary
   * @return yahooSalary
   */
  @javax.annotation.Nullable
  public Integer getYahooSalary() {
    return yahooSalary;
  }

  public void setYahooSalary(Integer yahooSalary) {
    this.yahooSalary = yahooSalary;
  }


  public PlayerGame yellowCards(BigDecimal yellowCards) {
    this.yellowCards = yellowCards;
    return this;
  }

  /**
   * Get yellowCards
   * @return yellowCards
   */
  @javax.annotation.Nullable
  public BigDecimal getYellowCards() {
    return yellowCards;
  }

  public void setYellowCards(BigDecimal yellowCards) {
    this.yellowCards = yellowCards;
  }


  public PlayerGame yellowRedCards(BigDecimal yellowRedCards) {
    this.yellowRedCards = yellowRedCards;
    return this;
  }

  /**
   * Get yellowRedCards
   * @return yellowRedCards
   */
  @javax.annotation.Nullable
  public BigDecimal getYellowRedCards() {
    return yellowRedCards;
  }

  public void setYellowRedCards(BigDecimal yellowRedCards) {
    this.yellowRedCards = yellowRedCards;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PlayerGame playerGame = (PlayerGame) o;
    return Objects.equals(this.assists, playerGame.assists) &&
        Objects.equals(this.blockedShots, playerGame.blockedShots) &&
        Objects.equals(this.captain, playerGame.captain) &&
        Objects.equals(this.cornersWon, playerGame.cornersWon) &&
        Objects.equals(this.crosses, playerGame.crosses) &&
        Objects.equals(this.dateTime, playerGame.dateTime) &&
        Objects.equals(this.day, playerGame.day) &&
        Objects.equals(this.defenderCleanSheets, playerGame.defenderCleanSheets) &&
        Objects.equals(this.draftKingsPosition, playerGame.draftKingsPosition) &&
        Objects.equals(this.draftKingsSalary, playerGame.draftKingsSalary) &&
        Objects.equals(this.fanDuelPosition, playerGame.fanDuelPosition) &&
        Objects.equals(this.fanDuelSalary, playerGame.fanDuelSalary) &&
        Objects.equals(this.fantasyPoints, playerGame.fantasyPoints) &&
        Objects.equals(this.fantasyPointsDraftKings, playerGame.fantasyPointsDraftKings) &&
        Objects.equals(this.fantasyPointsFanDuel, playerGame.fantasyPointsFanDuel) &&
        Objects.equals(this.fantasyPointsMondogoal, playerGame.fantasyPointsMondogoal) &&
        Objects.equals(this.fantasyPointsYahoo, playerGame.fantasyPointsYahoo) &&
        Objects.equals(this.fouled, playerGame.fouled) &&
        Objects.equals(this.fouls, playerGame.fouls) &&
        Objects.equals(this.gameId, playerGame.gameId) &&
        Objects.equals(this.games, playerGame.games) &&
        Objects.equals(this.globalGameId, playerGame.globalGameId) &&
        Objects.equals(this.globalOpponentId, playerGame.globalOpponentId) &&
        Objects.equals(this.globalTeamId, playerGame.globalTeamId) &&
        Objects.equals(this.goalkeeperCleanSheets, playerGame.goalkeeperCleanSheets) &&
        Objects.equals(this.goalkeeperGoalsAgainst, playerGame.goalkeeperGoalsAgainst) &&
        Objects.equals(this.goalkeeperSaves, playerGame.goalkeeperSaves) &&
        Objects.equals(this.goalkeeperSingleGoalAgainst, playerGame.goalkeeperSingleGoalAgainst) &&
        Objects.equals(this.goalkeeperWins, playerGame.goalkeeperWins) &&
        Objects.equals(this.goals, playerGame.goals) &&
        Objects.equals(this.homeOrAway, playerGame.homeOrAway) &&
        Objects.equals(this.injuryBodyPart, playerGame.injuryBodyPart) &&
        Objects.equals(this.injuryNotes, playerGame.injuryNotes) &&
        Objects.equals(this.injuryStartDate, playerGame.injuryStartDate) &&
        Objects.equals(this.injuryStatus, playerGame.injuryStatus) &&
        Objects.equals(this.interceptions, playerGame.interceptions) &&
        Objects.equals(this.isGameOver, playerGame.isGameOver) &&
        Objects.equals(this.jersey, playerGame.jersey) &&
        Objects.equals(this.lastManTackle, playerGame.lastManTackle) &&
        Objects.equals(this.minutes, playerGame.minutes) &&
        Objects.equals(this.mondogoalPosition, playerGame.mondogoalPosition) &&
        Objects.equals(this.mondogoalSalary, playerGame.mondogoalSalary) &&
        Objects.equals(this.name, playerGame.name) &&
        Objects.equals(this.offsides, playerGame.offsides) &&
        Objects.equals(this.opponent, playerGame.opponent) &&
        Objects.equals(this.opponentId, playerGame.opponentId) &&
        Objects.equals(this.opponentScore, playerGame.opponentScore) &&
        Objects.equals(this.ownGoals, playerGame.ownGoals) &&
        Objects.equals(this.passes, playerGame.passes) &&
        Objects.equals(this.passesCompleted, playerGame.passesCompleted) &&
        Objects.equals(this.penaltiesConceded, playerGame.penaltiesConceded) &&
        Objects.equals(this.penaltiesWon, playerGame.penaltiesWon) &&
        Objects.equals(this.penaltyKickGoals, playerGame.penaltyKickGoals) &&
        Objects.equals(this.penaltyKickMisses, playerGame.penaltyKickMisses) &&
        Objects.equals(this.penaltyKickSaves, playerGame.penaltyKickSaves) &&
        Objects.equals(this.playerId, playerGame.playerId) &&
        Objects.equals(this.position, playerGame.position) &&
        Objects.equals(this.positionCategory, playerGame.positionCategory) &&
        Objects.equals(this.redCards, playerGame.redCards) &&
        Objects.equals(this.roundId, playerGame.roundId) &&
        Objects.equals(this.score, playerGame.score) &&
        Objects.equals(this.season, playerGame.season) &&
        Objects.equals(this.seasonType, playerGame.seasonType) &&
        Objects.equals(this.shortName, playerGame.shortName) &&
        Objects.equals(this.shots, playerGame.shots) &&
        Objects.equals(this.shotsOnGoal, playerGame.shotsOnGoal) &&
        Objects.equals(this.started, playerGame.started) &&
        Objects.equals(this.statId, playerGame.statId) &&
        Objects.equals(this.suspension, playerGame.suspension) &&
        Objects.equals(this.suspensionReason, playerGame.suspensionReason) &&
        Objects.equals(this.tackles, playerGame.tackles) &&
        Objects.equals(this.tacklesWon, playerGame.tacklesWon) &&
        Objects.equals(this.team, playerGame.team) &&
        Objects.equals(this.teamId, playerGame.teamId) &&
        Objects.equals(this.touches, playerGame.touches) &&
        Objects.equals(this.updated, playerGame.updated) &&
        Objects.equals(this.updatedUtc, playerGame.updatedUtc) &&
        Objects.equals(this.yahooPosition, playerGame.yahooPosition) &&
        Objects.equals(this.yahooSalary, playerGame.yahooSalary) &&
        Objects.equals(this.yellowCards, playerGame.yellowCards) &&
        Objects.equals(this.yellowRedCards, playerGame.yellowRedCards);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(assists, blockedShots, captain, cornersWon, crosses, dateTime, day, defenderCleanSheets, draftKingsPosition, draftKingsSalary, fanDuelPosition, fanDuelSalary, fantasyPoints, fantasyPointsDraftKings, fantasyPointsFanDuel, fantasyPointsMondogoal, fantasyPointsYahoo, fouled, fouls, gameId, games, globalGameId, globalOpponentId, globalTeamId, goalkeeperCleanSheets, goalkeeperGoalsAgainst, goalkeeperSaves, goalkeeperSingleGoalAgainst, goalkeeperWins, goals, homeOrAway, injuryBodyPart, injuryNotes, injuryStartDate, injuryStatus, interceptions, isGameOver, jersey, lastManTackle, minutes, mondogoalPosition, mondogoalSalary, name, offsides, opponent, opponentId, opponentScore, ownGoals, passes, passesCompleted, penaltiesConceded, penaltiesWon, penaltyKickGoals, penaltyKickMisses, penaltyKickSaves, playerId, position, positionCategory, redCards, roundId, score, season, seasonType, shortName, shots, shotsOnGoal, started, statId, suspension, suspensionReason, tackles, tacklesWon, team, teamId, touches, updated, updatedUtc, yahooPosition, yahooSalary, yellowCards, yellowRedCards);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PlayerGame {\n");
    sb.append("    assists: ").append(toIndentedString(assists)).append("\n");
    sb.append("    blockedShots: ").append(toIndentedString(blockedShots)).append("\n");
    sb.append("    captain: ").append(toIndentedString(captain)).append("\n");
    sb.append("    cornersWon: ").append(toIndentedString(cornersWon)).append("\n");
    sb.append("    crosses: ").append(toIndentedString(crosses)).append("\n");
    sb.append("    dateTime: ").append(toIndentedString(dateTime)).append("\n");
    sb.append("    day: ").append(toIndentedString(day)).append("\n");
    sb.append("    defenderCleanSheets: ").append(toIndentedString(defenderCleanSheets)).append("\n");
    sb.append("    draftKingsPosition: ").append(toIndentedString(draftKingsPosition)).append("\n");
    sb.append("    draftKingsSalary: ").append(toIndentedString(draftKingsSalary)).append("\n");
    sb.append("    fanDuelPosition: ").append(toIndentedString(fanDuelPosition)).append("\n");
    sb.append("    fanDuelSalary: ").append(toIndentedString(fanDuelSalary)).append("\n");
    sb.append("    fantasyPoints: ").append(toIndentedString(fantasyPoints)).append("\n");
    sb.append("    fantasyPointsDraftKings: ").append(toIndentedString(fantasyPointsDraftKings)).append("\n");
    sb.append("    fantasyPointsFanDuel: ").append(toIndentedString(fantasyPointsFanDuel)).append("\n");
    sb.append("    fantasyPointsMondogoal: ").append(toIndentedString(fantasyPointsMondogoal)).append("\n");
    sb.append("    fantasyPointsYahoo: ").append(toIndentedString(fantasyPointsYahoo)).append("\n");
    sb.append("    fouled: ").append(toIndentedString(fouled)).append("\n");
    sb.append("    fouls: ").append(toIndentedString(fouls)).append("\n");
    sb.append("    gameId: ").append(toIndentedString(gameId)).append("\n");
    sb.append("    games: ").append(toIndentedString(games)).append("\n");
    sb.append("    globalGameId: ").append(toIndentedString(globalGameId)).append("\n");
    sb.append("    globalOpponentId: ").append(toIndentedString(globalOpponentId)).append("\n");
    sb.append("    globalTeamId: ").append(toIndentedString(globalTeamId)).append("\n");
    sb.append("    goalkeeperCleanSheets: ").append(toIndentedString(goalkeeperCleanSheets)).append("\n");
    sb.append("    goalkeeperGoalsAgainst: ").append(toIndentedString(goalkeeperGoalsAgainst)).append("\n");
    sb.append("    goalkeeperSaves: ").append(toIndentedString(goalkeeperSaves)).append("\n");
    sb.append("    goalkeeperSingleGoalAgainst: ").append(toIndentedString(goalkeeperSingleGoalAgainst)).append("\n");
    sb.append("    goalkeeperWins: ").append(toIndentedString(goalkeeperWins)).append("\n");
    sb.append("    goals: ").append(toIndentedString(goals)).append("\n");
    sb.append("    homeOrAway: ").append(toIndentedString(homeOrAway)).append("\n");
    sb.append("    injuryBodyPart: ").append(toIndentedString(injuryBodyPart)).append("\n");
    sb.append("    injuryNotes: ").append(toIndentedString(injuryNotes)).append("\n");
    sb.append("    injuryStartDate: ").append(toIndentedString(injuryStartDate)).append("\n");
    sb.append("    injuryStatus: ").append(toIndentedString(injuryStatus)).append("\n");
    sb.append("    interceptions: ").append(toIndentedString(interceptions)).append("\n");
    sb.append("    isGameOver: ").append(toIndentedString(isGameOver)).append("\n");
    sb.append("    jersey: ").append(toIndentedString(jersey)).append("\n");
    sb.append("    lastManTackle: ").append(toIndentedString(lastManTackle)).append("\n");
    sb.append("    minutes: ").append(toIndentedString(minutes)).append("\n");
    sb.append("    mondogoalPosition: ").append(toIndentedString(mondogoalPosition)).append("\n");
    sb.append("    mondogoalSalary: ").append(toIndentedString(mondogoalSalary)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    offsides: ").append(toIndentedString(offsides)).append("\n");
    sb.append("    opponent: ").append(toIndentedString(opponent)).append("\n");
    sb.append("    opponentId: ").append(toIndentedString(opponentId)).append("\n");
    sb.append("    opponentScore: ").append(toIndentedString(opponentScore)).append("\n");
    sb.append("    ownGoals: ").append(toIndentedString(ownGoals)).append("\n");
    sb.append("    passes: ").append(toIndentedString(passes)).append("\n");
    sb.append("    passesCompleted: ").append(toIndentedString(passesCompleted)).append("\n");
    sb.append("    penaltiesConceded: ").append(toIndentedString(penaltiesConceded)).append("\n");
    sb.append("    penaltiesWon: ").append(toIndentedString(penaltiesWon)).append("\n");
    sb.append("    penaltyKickGoals: ").append(toIndentedString(penaltyKickGoals)).append("\n");
    sb.append("    penaltyKickMisses: ").append(toIndentedString(penaltyKickMisses)).append("\n");
    sb.append("    penaltyKickSaves: ").append(toIndentedString(penaltyKickSaves)).append("\n");
    sb.append("    playerId: ").append(toIndentedString(playerId)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    positionCategory: ").append(toIndentedString(positionCategory)).append("\n");
    sb.append("    redCards: ").append(toIndentedString(redCards)).append("\n");
    sb.append("    roundId: ").append(toIndentedString(roundId)).append("\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("    season: ").append(toIndentedString(season)).append("\n");
    sb.append("    seasonType: ").append(toIndentedString(seasonType)).append("\n");
    sb.append("    shortName: ").append(toIndentedString(shortName)).append("\n");
    sb.append("    shots: ").append(toIndentedString(shots)).append("\n");
    sb.append("    shotsOnGoal: ").append(toIndentedString(shotsOnGoal)).append("\n");
    sb.append("    started: ").append(toIndentedString(started)).append("\n");
    sb.append("    statId: ").append(toIndentedString(statId)).append("\n");
    sb.append("    suspension: ").append(toIndentedString(suspension)).append("\n");
    sb.append("    suspensionReason: ").append(toIndentedString(suspensionReason)).append("\n");
    sb.append("    tackles: ").append(toIndentedString(tackles)).append("\n");
    sb.append("    tacklesWon: ").append(toIndentedString(tacklesWon)).append("\n");
    sb.append("    team: ").append(toIndentedString(team)).append("\n");
    sb.append("    teamId: ").append(toIndentedString(teamId)).append("\n");
    sb.append("    touches: ").append(toIndentedString(touches)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    updatedUtc: ").append(toIndentedString(updatedUtc)).append("\n");
    sb.append("    yahooPosition: ").append(toIndentedString(yahooPosition)).append("\n");
    sb.append("    yahooSalary: ").append(toIndentedString(yahooSalary)).append("\n");
    sb.append("    yellowCards: ").append(toIndentedString(yellowCards)).append("\n");
    sb.append("    yellowRedCards: ").append(toIndentedString(yellowRedCards)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Assists");
    openapiFields.add("BlockedShots");
    openapiFields.add("Captain");
    openapiFields.add("CornersWon");
    openapiFields.add("Crosses");
    openapiFields.add("DateTime");
    openapiFields.add("Day");
    openapiFields.add("DefenderCleanSheets");
    openapiFields.add("DraftKingsPosition");
    openapiFields.add("DraftKingsSalary");
    openapiFields.add("FanDuelPosition");
    openapiFields.add("FanDuelSalary");
    openapiFields.add("FantasyPoints");
    openapiFields.add("FantasyPointsDraftKings");
    openapiFields.add("FantasyPointsFanDuel");
    openapiFields.add("FantasyPointsMondogoal");
    openapiFields.add("FantasyPointsYahoo");
    openapiFields.add("Fouled");
    openapiFields.add("Fouls");
    openapiFields.add("GameId");
    openapiFields.add("Games");
    openapiFields.add("GlobalGameId");
    openapiFields.add("GlobalOpponentId");
    openapiFields.add("GlobalTeamId");
    openapiFields.add("GoalkeeperCleanSheets");
    openapiFields.add("GoalkeeperGoalsAgainst");
    openapiFields.add("GoalkeeperSaves");
    openapiFields.add("GoalkeeperSingleGoalAgainst");
    openapiFields.add("GoalkeeperWins");
    openapiFields.add("Goals");
    openapiFields.add("HomeOrAway");
    openapiFields.add("InjuryBodyPart");
    openapiFields.add("InjuryNotes");
    openapiFields.add("InjuryStartDate");
    openapiFields.add("InjuryStatus");
    openapiFields.add("Interceptions");
    openapiFields.add("IsGameOver");
    openapiFields.add("Jersey");
    openapiFields.add("LastManTackle");
    openapiFields.add("Minutes");
    openapiFields.add("MondogoalPosition");
    openapiFields.add("MondogoalSalary");
    openapiFields.add("Name");
    openapiFields.add("Offsides");
    openapiFields.add("Opponent");
    openapiFields.add("OpponentId");
    openapiFields.add("OpponentScore");
    openapiFields.add("OwnGoals");
    openapiFields.add("Passes");
    openapiFields.add("PassesCompleted");
    openapiFields.add("PenaltiesConceded");
    openapiFields.add("PenaltiesWon");
    openapiFields.add("PenaltyKickGoals");
    openapiFields.add("PenaltyKickMisses");
    openapiFields.add("PenaltyKickSaves");
    openapiFields.add("PlayerId");
    openapiFields.add("Position");
    openapiFields.add("PositionCategory");
    openapiFields.add("RedCards");
    openapiFields.add("RoundId");
    openapiFields.add("Score");
    openapiFields.add("Season");
    openapiFields.add("SeasonType");
    openapiFields.add("ShortName");
    openapiFields.add("Shots");
    openapiFields.add("ShotsOnGoal");
    openapiFields.add("Started");
    openapiFields.add("StatId");
    openapiFields.add("Suspension");
    openapiFields.add("SuspensionReason");
    openapiFields.add("Tackles");
    openapiFields.add("TacklesWon");
    openapiFields.add("Team");
    openapiFields.add("TeamId");
    openapiFields.add("Touches");
    openapiFields.add("Updated");
    openapiFields.add("UpdatedUtc");
    openapiFields.add("YahooPosition");
    openapiFields.add("YahooSalary");
    openapiFields.add("YellowCards");
    openapiFields.add("YellowRedCards");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PlayerGame
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PlayerGame.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PlayerGame is not found in the empty JSON string", PlayerGame.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PlayerGame.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PlayerGame` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("DateTime") != null && !jsonObj.get("DateTime").isJsonNull()) && !jsonObj.get("DateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DateTime").toString()));
      }
      if ((jsonObj.get("Day") != null && !jsonObj.get("Day").isJsonNull()) && !jsonObj.get("Day").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Day` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Day").toString()));
      }
      if ((jsonObj.get("DraftKingsPosition") != null && !jsonObj.get("DraftKingsPosition").isJsonNull()) && !jsonObj.get("DraftKingsPosition").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DraftKingsPosition` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DraftKingsPosition").toString()));
      }
      if ((jsonObj.get("FanDuelPosition") != null && !jsonObj.get("FanDuelPosition").isJsonNull()) && !jsonObj.get("FanDuelPosition").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `FanDuelPosition` to be a primitive type in the JSON string but got `%s`", jsonObj.get("FanDuelPosition").toString()));
      }
      if ((jsonObj.get("HomeOrAway") != null && !jsonObj.get("HomeOrAway").isJsonNull()) && !jsonObj.get("HomeOrAway").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `HomeOrAway` to be a primitive type in the JSON string but got `%s`", jsonObj.get("HomeOrAway").toString()));
      }
      if ((jsonObj.get("InjuryBodyPart") != null && !jsonObj.get("InjuryBodyPart").isJsonNull()) && !jsonObj.get("InjuryBodyPart").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `InjuryBodyPart` to be a primitive type in the JSON string but got `%s`", jsonObj.get("InjuryBodyPart").toString()));
      }
      if ((jsonObj.get("InjuryNotes") != null && !jsonObj.get("InjuryNotes").isJsonNull()) && !jsonObj.get("InjuryNotes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `InjuryNotes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("InjuryNotes").toString()));
      }
      if ((jsonObj.get("InjuryStartDate") != null && !jsonObj.get("InjuryStartDate").isJsonNull()) && !jsonObj.get("InjuryStartDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `InjuryStartDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("InjuryStartDate").toString()));
      }
      if ((jsonObj.get("InjuryStatus") != null && !jsonObj.get("InjuryStatus").isJsonNull()) && !jsonObj.get("InjuryStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `InjuryStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("InjuryStatus").toString()));
      }
      if ((jsonObj.get("MondogoalPosition") != null && !jsonObj.get("MondogoalPosition").isJsonNull()) && !jsonObj.get("MondogoalPosition").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `MondogoalPosition` to be a primitive type in the JSON string but got `%s`", jsonObj.get("MondogoalPosition").toString()));
      }
      if ((jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) && !jsonObj.get("Name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Name").toString()));
      }
      if ((jsonObj.get("Opponent") != null && !jsonObj.get("Opponent").isJsonNull()) && !jsonObj.get("Opponent").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Opponent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Opponent").toString()));
      }
      if ((jsonObj.get("Position") != null && !jsonObj.get("Position").isJsonNull()) && !jsonObj.get("Position").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Position` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Position").toString()));
      }
      if ((jsonObj.get("PositionCategory") != null && !jsonObj.get("PositionCategory").isJsonNull()) && !jsonObj.get("PositionCategory").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PositionCategory` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PositionCategory").toString()));
      }
      if ((jsonObj.get("ShortName") != null && !jsonObj.get("ShortName").isJsonNull()) && !jsonObj.get("ShortName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ShortName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ShortName").toString()));
      }
      if ((jsonObj.get("SuspensionReason") != null && !jsonObj.get("SuspensionReason").isJsonNull()) && !jsonObj.get("SuspensionReason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SuspensionReason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SuspensionReason").toString()));
      }
      if ((jsonObj.get("Team") != null && !jsonObj.get("Team").isJsonNull()) && !jsonObj.get("Team").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Team` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Team").toString()));
      }
      if ((jsonObj.get("Updated") != null && !jsonObj.get("Updated").isJsonNull()) && !jsonObj.get("Updated").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Updated` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Updated").toString()));
      }
      if ((jsonObj.get("UpdatedUtc") != null && !jsonObj.get("UpdatedUtc").isJsonNull()) && !jsonObj.get("UpdatedUtc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `UpdatedUtc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("UpdatedUtc").toString()));
      }
      if ((jsonObj.get("YahooPosition") != null && !jsonObj.get("YahooPosition").isJsonNull()) && !jsonObj.get("YahooPosition").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `YahooPosition` to be a primitive type in the JSON string but got `%s`", jsonObj.get("YahooPosition").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PlayerGame.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PlayerGame' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PlayerGame> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PlayerGame.class));

       return (TypeAdapter<T>) new TypeAdapter<PlayerGame>() {
           @Override
           public void write(JsonWriter out, PlayerGame value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PlayerGame read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PlayerGame given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PlayerGame
   * @throws IOException if the JSON string is invalid with respect to PlayerGame
   */
  public static PlayerGame fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PlayerGame.class);
  }

  /**
   * Convert an instance of PlayerGame to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

