/*
 * Soccer v3 Stats
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TeamSeason
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:05:19.276097-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TeamSeason {
  public static final String SERIALIZED_NAME_ASSISTS = "Assists";
  @SerializedName(SERIALIZED_NAME_ASSISTS)
  private BigDecimal assists;

  public static final String SERIALIZED_NAME_BLOCKED_SHOTS = "BlockedShots";
  @SerializedName(SERIALIZED_NAME_BLOCKED_SHOTS)
  private BigDecimal blockedShots;

  public static final String SERIALIZED_NAME_CORNERS_WON = "CornersWon";
  @SerializedName(SERIALIZED_NAME_CORNERS_WON)
  private BigDecimal cornersWon;

  public static final String SERIALIZED_NAME_CROSSES = "Crosses";
  @SerializedName(SERIALIZED_NAME_CROSSES)
  private BigDecimal crosses;

  public static final String SERIALIZED_NAME_DEFENDER_CLEAN_SHEETS = "DefenderCleanSheets";
  @SerializedName(SERIALIZED_NAME_DEFENDER_CLEAN_SHEETS)
  private BigDecimal defenderCleanSheets;

  public static final String SERIALIZED_NAME_FANTASY_POINTS = "FantasyPoints";
  @SerializedName(SERIALIZED_NAME_FANTASY_POINTS)
  private BigDecimal fantasyPoints;

  public static final String SERIALIZED_NAME_FANTASY_POINTS_DRAFT_KINGS = "FantasyPointsDraftKings";
  @SerializedName(SERIALIZED_NAME_FANTASY_POINTS_DRAFT_KINGS)
  private BigDecimal fantasyPointsDraftKings;

  public static final String SERIALIZED_NAME_FANTASY_POINTS_FAN_DUEL = "FantasyPointsFanDuel";
  @SerializedName(SERIALIZED_NAME_FANTASY_POINTS_FAN_DUEL)
  private BigDecimal fantasyPointsFanDuel;

  public static final String SERIALIZED_NAME_FANTASY_POINTS_MONDOGOAL = "FantasyPointsMondogoal";
  @SerializedName(SERIALIZED_NAME_FANTASY_POINTS_MONDOGOAL)
  private BigDecimal fantasyPointsMondogoal;

  public static final String SERIALIZED_NAME_FANTASY_POINTS_YAHOO = "FantasyPointsYahoo";
  @SerializedName(SERIALIZED_NAME_FANTASY_POINTS_YAHOO)
  private BigDecimal fantasyPointsYahoo;

  public static final String SERIALIZED_NAME_FOULED = "Fouled";
  @SerializedName(SERIALIZED_NAME_FOULED)
  private BigDecimal fouled;

  public static final String SERIALIZED_NAME_FOULS = "Fouls";
  @SerializedName(SERIALIZED_NAME_FOULS)
  private BigDecimal fouls;

  public static final String SERIALIZED_NAME_GAMES = "Games";
  @SerializedName(SERIALIZED_NAME_GAMES)
  private Integer games;

  public static final String SERIALIZED_NAME_GLOBAL_TEAM_ID = "GlobalTeamId";
  @SerializedName(SERIALIZED_NAME_GLOBAL_TEAM_ID)
  private Integer globalTeamId;

  public static final String SERIALIZED_NAME_GOALKEEPER_CLEAN_SHEETS = "GoalkeeperCleanSheets";
  @SerializedName(SERIALIZED_NAME_GOALKEEPER_CLEAN_SHEETS)
  private BigDecimal goalkeeperCleanSheets;

  public static final String SERIALIZED_NAME_GOALKEEPER_GOALS_AGAINST = "GoalkeeperGoalsAgainst";
  @SerializedName(SERIALIZED_NAME_GOALKEEPER_GOALS_AGAINST)
  private BigDecimal goalkeeperGoalsAgainst;

  public static final String SERIALIZED_NAME_GOALKEEPER_SAVES = "GoalkeeperSaves";
  @SerializedName(SERIALIZED_NAME_GOALKEEPER_SAVES)
  private BigDecimal goalkeeperSaves;

  public static final String SERIALIZED_NAME_GOALKEEPER_SINGLE_GOAL_AGAINST = "GoalkeeperSingleGoalAgainst";
  @SerializedName(SERIALIZED_NAME_GOALKEEPER_SINGLE_GOAL_AGAINST)
  private BigDecimal goalkeeperSingleGoalAgainst;

  public static final String SERIALIZED_NAME_GOALKEEPER_WINS = "GoalkeeperWins";
  @SerializedName(SERIALIZED_NAME_GOALKEEPER_WINS)
  private BigDecimal goalkeeperWins;

  public static final String SERIALIZED_NAME_GOALS = "Goals";
  @SerializedName(SERIALIZED_NAME_GOALS)
  private BigDecimal goals;

  public static final String SERIALIZED_NAME_INTERCEPTIONS = "Interceptions";
  @SerializedName(SERIALIZED_NAME_INTERCEPTIONS)
  private BigDecimal interceptions;

  public static final String SERIALIZED_NAME_LAST_MAN_TACKLE = "LastManTackle";
  @SerializedName(SERIALIZED_NAME_LAST_MAN_TACKLE)
  private BigDecimal lastManTackle;

  public static final String SERIALIZED_NAME_MINUTES = "Minutes";
  @SerializedName(SERIALIZED_NAME_MINUTES)
  private BigDecimal minutes;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_OFFSIDES = "Offsides";
  @SerializedName(SERIALIZED_NAME_OFFSIDES)
  private BigDecimal offsides;

  public static final String SERIALIZED_NAME_OPPONENT_SCORE = "OpponentScore";
  @SerializedName(SERIALIZED_NAME_OPPONENT_SCORE)
  private BigDecimal opponentScore;

  public static final String SERIALIZED_NAME_OWN_GOALS = "OwnGoals";
  @SerializedName(SERIALIZED_NAME_OWN_GOALS)
  private BigDecimal ownGoals;

  public static final String SERIALIZED_NAME_PASSES = "Passes";
  @SerializedName(SERIALIZED_NAME_PASSES)
  private BigDecimal passes;

  public static final String SERIALIZED_NAME_PASSES_COMPLETED = "PassesCompleted";
  @SerializedName(SERIALIZED_NAME_PASSES_COMPLETED)
  private BigDecimal passesCompleted;

  public static final String SERIALIZED_NAME_PENALTIES_CONCEDED = "PenaltiesConceded";
  @SerializedName(SERIALIZED_NAME_PENALTIES_CONCEDED)
  private BigDecimal penaltiesConceded;

  public static final String SERIALIZED_NAME_PENALTIES_WON = "PenaltiesWon";
  @SerializedName(SERIALIZED_NAME_PENALTIES_WON)
  private BigDecimal penaltiesWon;

  public static final String SERIALIZED_NAME_PENALTY_KICK_GOALS = "PenaltyKickGoals";
  @SerializedName(SERIALIZED_NAME_PENALTY_KICK_GOALS)
  private BigDecimal penaltyKickGoals;

  public static final String SERIALIZED_NAME_PENALTY_KICK_MISSES = "PenaltyKickMisses";
  @SerializedName(SERIALIZED_NAME_PENALTY_KICK_MISSES)
  private BigDecimal penaltyKickMisses;

  public static final String SERIALIZED_NAME_PENALTY_KICK_SAVES = "PenaltyKickSaves";
  @SerializedName(SERIALIZED_NAME_PENALTY_KICK_SAVES)
  private BigDecimal penaltyKickSaves;

  public static final String SERIALIZED_NAME_POSSESSION = "Possession";
  @SerializedName(SERIALIZED_NAME_POSSESSION)
  private BigDecimal possession;

  public static final String SERIALIZED_NAME_RED_CARDS = "RedCards";
  @SerializedName(SERIALIZED_NAME_RED_CARDS)
  private BigDecimal redCards;

  public static final String SERIALIZED_NAME_ROUND_ID = "RoundId";
  @SerializedName(SERIALIZED_NAME_ROUND_ID)
  private Integer roundId;

  public static final String SERIALIZED_NAME_SCORE = "Score";
  @SerializedName(SERIALIZED_NAME_SCORE)
  private BigDecimal score;

  public static final String SERIALIZED_NAME_SEASON = "Season";
  @SerializedName(SERIALIZED_NAME_SEASON)
  private Integer season;

  public static final String SERIALIZED_NAME_SEASON_TYPE = "SeasonType";
  @SerializedName(SERIALIZED_NAME_SEASON_TYPE)
  private Integer seasonType;

  public static final String SERIALIZED_NAME_SHOTS = "Shots";
  @SerializedName(SERIALIZED_NAME_SHOTS)
  private BigDecimal shots;

  public static final String SERIALIZED_NAME_SHOTS_ON_GOAL = "ShotsOnGoal";
  @SerializedName(SERIALIZED_NAME_SHOTS_ON_GOAL)
  private BigDecimal shotsOnGoal;

  public static final String SERIALIZED_NAME_STAT_ID = "StatId";
  @SerializedName(SERIALIZED_NAME_STAT_ID)
  private Integer statId;

  public static final String SERIALIZED_NAME_TACKLES = "Tackles";
  @SerializedName(SERIALIZED_NAME_TACKLES)
  private BigDecimal tackles;

  public static final String SERIALIZED_NAME_TACKLES_WON = "TacklesWon";
  @SerializedName(SERIALIZED_NAME_TACKLES_WON)
  private BigDecimal tacklesWon;

  public static final String SERIALIZED_NAME_TEAM = "Team";
  @SerializedName(SERIALIZED_NAME_TEAM)
  private String team;

  public static final String SERIALIZED_NAME_TEAM_ID = "TeamId";
  @SerializedName(SERIALIZED_NAME_TEAM_ID)
  private Integer teamId;

  public static final String SERIALIZED_NAME_TOUCHES = "Touches";
  @SerializedName(SERIALIZED_NAME_TOUCHES)
  private BigDecimal touches;

  public static final String SERIALIZED_NAME_UPDATED = "Updated";
  @SerializedName(SERIALIZED_NAME_UPDATED)
  private String updated;

  public static final String SERIALIZED_NAME_UPDATED_UTC = "UpdatedUtc";
  @SerializedName(SERIALIZED_NAME_UPDATED_UTC)
  private String updatedUtc;

  public static final String SERIALIZED_NAME_YELLOW_CARDS = "YellowCards";
  @SerializedName(SERIALIZED_NAME_YELLOW_CARDS)
  private BigDecimal yellowCards;

  public static final String SERIALIZED_NAME_YELLOW_RED_CARDS = "YellowRedCards";
  @SerializedName(SERIALIZED_NAME_YELLOW_RED_CARDS)
  private BigDecimal yellowRedCards;

  public TeamSeason() {
  }

  public TeamSeason assists(BigDecimal assists) {
    this.assists = assists;
    return this;
  }

  /**
   * Get assists
   * @return assists
   */
  @javax.annotation.Nullable
  public BigDecimal getAssists() {
    return assists;
  }

  public void setAssists(BigDecimal assists) {
    this.assists = assists;
  }


  public TeamSeason blockedShots(BigDecimal blockedShots) {
    this.blockedShots = blockedShots;
    return this;
  }

  /**
   * Get blockedShots
   * @return blockedShots
   */
  @javax.annotation.Nullable
  public BigDecimal getBlockedShots() {
    return blockedShots;
  }

  public void setBlockedShots(BigDecimal blockedShots) {
    this.blockedShots = blockedShots;
  }


  public TeamSeason cornersWon(BigDecimal cornersWon) {
    this.cornersWon = cornersWon;
    return this;
  }

  /**
   * Get cornersWon
   * @return cornersWon
   */
  @javax.annotation.Nullable
  public BigDecimal getCornersWon() {
    return cornersWon;
  }

  public void setCornersWon(BigDecimal cornersWon) {
    this.cornersWon = cornersWon;
  }


  public TeamSeason crosses(BigDecimal crosses) {
    this.crosses = crosses;
    return this;
  }

  /**
   * Get crosses
   * @return crosses
   */
  @javax.annotation.Nullable
  public BigDecimal getCrosses() {
    return crosses;
  }

  public void setCrosses(BigDecimal crosses) {
    this.crosses = crosses;
  }


  public TeamSeason defenderCleanSheets(BigDecimal defenderCleanSheets) {
    this.defenderCleanSheets = defenderCleanSheets;
    return this;
  }

  /**
   * Get defenderCleanSheets
   * @return defenderCleanSheets
   */
  @javax.annotation.Nullable
  public BigDecimal getDefenderCleanSheets() {
    return defenderCleanSheets;
  }

  public void setDefenderCleanSheets(BigDecimal defenderCleanSheets) {
    this.defenderCleanSheets = defenderCleanSheets;
  }


  public TeamSeason fantasyPoints(BigDecimal fantasyPoints) {
    this.fantasyPoints = fantasyPoints;
    return this;
  }

  /**
   * Get fantasyPoints
   * @return fantasyPoints
   */
  @javax.annotation.Nullable
  public BigDecimal getFantasyPoints() {
    return fantasyPoints;
  }

  public void setFantasyPoints(BigDecimal fantasyPoints) {
    this.fantasyPoints = fantasyPoints;
  }


  public TeamSeason fantasyPointsDraftKings(BigDecimal fantasyPointsDraftKings) {
    this.fantasyPointsDraftKings = fantasyPointsDraftKings;
    return this;
  }

  /**
   * Get fantasyPointsDraftKings
   * @return fantasyPointsDraftKings
   */
  @javax.annotation.Nullable
  public BigDecimal getFantasyPointsDraftKings() {
    return fantasyPointsDraftKings;
  }

  public void setFantasyPointsDraftKings(BigDecimal fantasyPointsDraftKings) {
    this.fantasyPointsDraftKings = fantasyPointsDraftKings;
  }


  public TeamSeason fantasyPointsFanDuel(BigDecimal fantasyPointsFanDuel) {
    this.fantasyPointsFanDuel = fantasyPointsFanDuel;
    return this;
  }

  /**
   * Get fantasyPointsFanDuel
   * @return fantasyPointsFanDuel
   */
  @javax.annotation.Nullable
  public BigDecimal getFantasyPointsFanDuel() {
    return fantasyPointsFanDuel;
  }

  public void setFantasyPointsFanDuel(BigDecimal fantasyPointsFanDuel) {
    this.fantasyPointsFanDuel = fantasyPointsFanDuel;
  }


  public TeamSeason fantasyPointsMondogoal(BigDecimal fantasyPointsMondogoal) {
    this.fantasyPointsMondogoal = fantasyPointsMondogoal;
    return this;
  }

  /**
   * Get fantasyPointsMondogoal
   * @return fantasyPointsMondogoal
   */
  @javax.annotation.Nullable
  public BigDecimal getFantasyPointsMondogoal() {
    return fantasyPointsMondogoal;
  }

  public void setFantasyPointsMondogoal(BigDecimal fantasyPointsMondogoal) {
    this.fantasyPointsMondogoal = fantasyPointsMondogoal;
  }


  public TeamSeason fantasyPointsYahoo(BigDecimal fantasyPointsYahoo) {
    this.fantasyPointsYahoo = fantasyPointsYahoo;
    return this;
  }

  /**
   * Get fantasyPointsYahoo
   * @return fantasyPointsYahoo
   */
  @javax.annotation.Nullable
  public BigDecimal getFantasyPointsYahoo() {
    return fantasyPointsYahoo;
  }

  public void setFantasyPointsYahoo(BigDecimal fantasyPointsYahoo) {
    this.fantasyPointsYahoo = fantasyPointsYahoo;
  }


  public TeamSeason fouled(BigDecimal fouled) {
    this.fouled = fouled;
    return this;
  }

  /**
   * Get fouled
   * @return fouled
   */
  @javax.annotation.Nullable
  public BigDecimal getFouled() {
    return fouled;
  }

  public void setFouled(BigDecimal fouled) {
    this.fouled = fouled;
  }


  public TeamSeason fouls(BigDecimal fouls) {
    this.fouls = fouls;
    return this;
  }

  /**
   * Get fouls
   * @return fouls
   */
  @javax.annotation.Nullable
  public BigDecimal getFouls() {
    return fouls;
  }

  public void setFouls(BigDecimal fouls) {
    this.fouls = fouls;
  }


  public TeamSeason games(Integer games) {
    this.games = games;
    return this;
  }

  /**
   * Get games
   * @return games
   */
  @javax.annotation.Nullable
  public Integer getGames() {
    return games;
  }

  public void setGames(Integer games) {
    this.games = games;
  }


  public TeamSeason globalTeamId(Integer globalTeamId) {
    this.globalTeamId = globalTeamId;
    return this;
  }

  /**
   * Get globalTeamId
   * @return globalTeamId
   */
  @javax.annotation.Nullable
  public Integer getGlobalTeamId() {
    return globalTeamId;
  }

  public void setGlobalTeamId(Integer globalTeamId) {
    this.globalTeamId = globalTeamId;
  }


  public TeamSeason goalkeeperCleanSheets(BigDecimal goalkeeperCleanSheets) {
    this.goalkeeperCleanSheets = goalkeeperCleanSheets;
    return this;
  }

  /**
   * Get goalkeeperCleanSheets
   * @return goalkeeperCleanSheets
   */
  @javax.annotation.Nullable
  public BigDecimal getGoalkeeperCleanSheets() {
    return goalkeeperCleanSheets;
  }

  public void setGoalkeeperCleanSheets(BigDecimal goalkeeperCleanSheets) {
    this.goalkeeperCleanSheets = goalkeeperCleanSheets;
  }


  public TeamSeason goalkeeperGoalsAgainst(BigDecimal goalkeeperGoalsAgainst) {
    this.goalkeeperGoalsAgainst = goalkeeperGoalsAgainst;
    return this;
  }

  /**
   * Get goalkeeperGoalsAgainst
   * @return goalkeeperGoalsAgainst
   */
  @javax.annotation.Nullable
  public BigDecimal getGoalkeeperGoalsAgainst() {
    return goalkeeperGoalsAgainst;
  }

  public void setGoalkeeperGoalsAgainst(BigDecimal goalkeeperGoalsAgainst) {
    this.goalkeeperGoalsAgainst = goalkeeperGoalsAgainst;
  }


  public TeamSeason goalkeeperSaves(BigDecimal goalkeeperSaves) {
    this.goalkeeperSaves = goalkeeperSaves;
    return this;
  }

  /**
   * Get goalkeeperSaves
   * @return goalkeeperSaves
   */
  @javax.annotation.Nullable
  public BigDecimal getGoalkeeperSaves() {
    return goalkeeperSaves;
  }

  public void setGoalkeeperSaves(BigDecimal goalkeeperSaves) {
    this.goalkeeperSaves = goalkeeperSaves;
  }


  public TeamSeason goalkeeperSingleGoalAgainst(BigDecimal goalkeeperSingleGoalAgainst) {
    this.goalkeeperSingleGoalAgainst = goalkeeperSingleGoalAgainst;
    return this;
  }

  /**
   * Get goalkeeperSingleGoalAgainst
   * @return goalkeeperSingleGoalAgainst
   */
  @javax.annotation.Nullable
  public BigDecimal getGoalkeeperSingleGoalAgainst() {
    return goalkeeperSingleGoalAgainst;
  }

  public void setGoalkeeperSingleGoalAgainst(BigDecimal goalkeeperSingleGoalAgainst) {
    this.goalkeeperSingleGoalAgainst = goalkeeperSingleGoalAgainst;
  }


  public TeamSeason goalkeeperWins(BigDecimal goalkeeperWins) {
    this.goalkeeperWins = goalkeeperWins;
    return this;
  }

  /**
   * Get goalkeeperWins
   * @return goalkeeperWins
   */
  @javax.annotation.Nullable
  public BigDecimal getGoalkeeperWins() {
    return goalkeeperWins;
  }

  public void setGoalkeeperWins(BigDecimal goalkeeperWins) {
    this.goalkeeperWins = goalkeeperWins;
  }


  public TeamSeason goals(BigDecimal goals) {
    this.goals = goals;
    return this;
  }

  /**
   * Get goals
   * @return goals
   */
  @javax.annotation.Nullable
  public BigDecimal getGoals() {
    return goals;
  }

  public void setGoals(BigDecimal goals) {
    this.goals = goals;
  }


  public TeamSeason interceptions(BigDecimal interceptions) {
    this.interceptions = interceptions;
    return this;
  }

  /**
   * Get interceptions
   * @return interceptions
   */
  @javax.annotation.Nullable
  public BigDecimal getInterceptions() {
    return interceptions;
  }

  public void setInterceptions(BigDecimal interceptions) {
    this.interceptions = interceptions;
  }


  public TeamSeason lastManTackle(BigDecimal lastManTackle) {
    this.lastManTackle = lastManTackle;
    return this;
  }

  /**
   * Get lastManTackle
   * @return lastManTackle
   */
  @javax.annotation.Nullable
  public BigDecimal getLastManTackle() {
    return lastManTackle;
  }

  public void setLastManTackle(BigDecimal lastManTackle) {
    this.lastManTackle = lastManTackle;
  }


  public TeamSeason minutes(BigDecimal minutes) {
    this.minutes = minutes;
    return this;
  }

  /**
   * Get minutes
   * @return minutes
   */
  @javax.annotation.Nullable
  public BigDecimal getMinutes() {
    return minutes;
  }

  public void setMinutes(BigDecimal minutes) {
    this.minutes = minutes;
  }


  public TeamSeason name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public TeamSeason offsides(BigDecimal offsides) {
    this.offsides = offsides;
    return this;
  }

  /**
   * Get offsides
   * @return offsides
   */
  @javax.annotation.Nullable
  public BigDecimal getOffsides() {
    return offsides;
  }

  public void setOffsides(BigDecimal offsides) {
    this.offsides = offsides;
  }


  public TeamSeason opponentScore(BigDecimal opponentScore) {
    this.opponentScore = opponentScore;
    return this;
  }

  /**
   * Get opponentScore
   * @return opponentScore
   */
  @javax.annotation.Nullable
  public BigDecimal getOpponentScore() {
    return opponentScore;
  }

  public void setOpponentScore(BigDecimal opponentScore) {
    this.opponentScore = opponentScore;
  }


  public TeamSeason ownGoals(BigDecimal ownGoals) {
    this.ownGoals = ownGoals;
    return this;
  }

  /**
   * Get ownGoals
   * @return ownGoals
   */
  @javax.annotation.Nullable
  public BigDecimal getOwnGoals() {
    return ownGoals;
  }

  public void setOwnGoals(BigDecimal ownGoals) {
    this.ownGoals = ownGoals;
  }


  public TeamSeason passes(BigDecimal passes) {
    this.passes = passes;
    return this;
  }

  /**
   * Get passes
   * @return passes
   */
  @javax.annotation.Nullable
  public BigDecimal getPasses() {
    return passes;
  }

  public void setPasses(BigDecimal passes) {
    this.passes = passes;
  }


  public TeamSeason passesCompleted(BigDecimal passesCompleted) {
    this.passesCompleted = passesCompleted;
    return this;
  }

  /**
   * Get passesCompleted
   * @return passesCompleted
   */
  @javax.annotation.Nullable
  public BigDecimal getPassesCompleted() {
    return passesCompleted;
  }

  public void setPassesCompleted(BigDecimal passesCompleted) {
    this.passesCompleted = passesCompleted;
  }


  public TeamSeason penaltiesConceded(BigDecimal penaltiesConceded) {
    this.penaltiesConceded = penaltiesConceded;
    return this;
  }

  /**
   * Get penaltiesConceded
   * @return penaltiesConceded
   */
  @javax.annotation.Nullable
  public BigDecimal getPenaltiesConceded() {
    return penaltiesConceded;
  }

  public void setPenaltiesConceded(BigDecimal penaltiesConceded) {
    this.penaltiesConceded = penaltiesConceded;
  }


  public TeamSeason penaltiesWon(BigDecimal penaltiesWon) {
    this.penaltiesWon = penaltiesWon;
    return this;
  }

  /**
   * Get penaltiesWon
   * @return penaltiesWon
   */
  @javax.annotation.Nullable
  public BigDecimal getPenaltiesWon() {
    return penaltiesWon;
  }

  public void setPenaltiesWon(BigDecimal penaltiesWon) {
    this.penaltiesWon = penaltiesWon;
  }


  public TeamSeason penaltyKickGoals(BigDecimal penaltyKickGoals) {
    this.penaltyKickGoals = penaltyKickGoals;
    return this;
  }

  /**
   * Get penaltyKickGoals
   * @return penaltyKickGoals
   */
  @javax.annotation.Nullable
  public BigDecimal getPenaltyKickGoals() {
    return penaltyKickGoals;
  }

  public void setPenaltyKickGoals(BigDecimal penaltyKickGoals) {
    this.penaltyKickGoals = penaltyKickGoals;
  }


  public TeamSeason penaltyKickMisses(BigDecimal penaltyKickMisses) {
    this.penaltyKickMisses = penaltyKickMisses;
    return this;
  }

  /**
   * Get penaltyKickMisses
   * @return penaltyKickMisses
   */
  @javax.annotation.Nullable
  public BigDecimal getPenaltyKickMisses() {
    return penaltyKickMisses;
  }

  public void setPenaltyKickMisses(BigDecimal penaltyKickMisses) {
    this.penaltyKickMisses = penaltyKickMisses;
  }


  public TeamSeason penaltyKickSaves(BigDecimal penaltyKickSaves) {
    this.penaltyKickSaves = penaltyKickSaves;
    return this;
  }

  /**
   * Get penaltyKickSaves
   * @return penaltyKickSaves
   */
  @javax.annotation.Nullable
  public BigDecimal getPenaltyKickSaves() {
    return penaltyKickSaves;
  }

  public void setPenaltyKickSaves(BigDecimal penaltyKickSaves) {
    this.penaltyKickSaves = penaltyKickSaves;
  }


  public TeamSeason possession(BigDecimal possession) {
    this.possession = possession;
    return this;
  }

  /**
   * Get possession
   * @return possession
   */
  @javax.annotation.Nullable
  public BigDecimal getPossession() {
    return possession;
  }

  public void setPossession(BigDecimal possession) {
    this.possession = possession;
  }


  public TeamSeason redCards(BigDecimal redCards) {
    this.redCards = redCards;
    return this;
  }

  /**
   * Get redCards
   * @return redCards
   */
  @javax.annotation.Nullable
  public BigDecimal getRedCards() {
    return redCards;
  }

  public void setRedCards(BigDecimal redCards) {
    this.redCards = redCards;
  }


  public TeamSeason roundId(Integer roundId) {
    this.roundId = roundId;
    return this;
  }

  /**
   * Get roundId
   * @return roundId
   */
  @javax.annotation.Nullable
  public Integer getRoundId() {
    return roundId;
  }

  public void setRoundId(Integer roundId) {
    this.roundId = roundId;
  }


  public TeamSeason score(BigDecimal score) {
    this.score = score;
    return this;
  }

  /**
   * Get score
   * @return score
   */
  @javax.annotation.Nullable
  public BigDecimal getScore() {
    return score;
  }

  public void setScore(BigDecimal score) {
    this.score = score;
  }


  public TeamSeason season(Integer season) {
    this.season = season;
    return this;
  }

  /**
   * Get season
   * @return season
   */
  @javax.annotation.Nullable
  public Integer getSeason() {
    return season;
  }

  public void setSeason(Integer season) {
    this.season = season;
  }


  public TeamSeason seasonType(Integer seasonType) {
    this.seasonType = seasonType;
    return this;
  }

  /**
   * Get seasonType
   * @return seasonType
   */
  @javax.annotation.Nullable
  public Integer getSeasonType() {
    return seasonType;
  }

  public void setSeasonType(Integer seasonType) {
    this.seasonType = seasonType;
  }


  public TeamSeason shots(BigDecimal shots) {
    this.shots = shots;
    return this;
  }

  /**
   * Get shots
   * @return shots
   */
  @javax.annotation.Nullable
  public BigDecimal getShots() {
    return shots;
  }

  public void setShots(BigDecimal shots) {
    this.shots = shots;
  }


  public TeamSeason shotsOnGoal(BigDecimal shotsOnGoal) {
    this.shotsOnGoal = shotsOnGoal;
    return this;
  }

  /**
   * Get shotsOnGoal
   * @return shotsOnGoal
   */
  @javax.annotation.Nullable
  public BigDecimal getShotsOnGoal() {
    return shotsOnGoal;
  }

  public void setShotsOnGoal(BigDecimal shotsOnGoal) {
    this.shotsOnGoal = shotsOnGoal;
  }


  public TeamSeason statId(Integer statId) {
    this.statId = statId;
    return this;
  }

  /**
   * Get statId
   * @return statId
   */
  @javax.annotation.Nullable
  public Integer getStatId() {
    return statId;
  }

  public void setStatId(Integer statId) {
    this.statId = statId;
  }


  public TeamSeason tackles(BigDecimal tackles) {
    this.tackles = tackles;
    return this;
  }

  /**
   * Get tackles
   * @return tackles
   */
  @javax.annotation.Nullable
  public BigDecimal getTackles() {
    return tackles;
  }

  public void setTackles(BigDecimal tackles) {
    this.tackles = tackles;
  }


  public TeamSeason tacklesWon(BigDecimal tacklesWon) {
    this.tacklesWon = tacklesWon;
    return this;
  }

  /**
   * Get tacklesWon
   * @return tacklesWon
   */
  @javax.annotation.Nullable
  public BigDecimal getTacklesWon() {
    return tacklesWon;
  }

  public void setTacklesWon(BigDecimal tacklesWon) {
    this.tacklesWon = tacklesWon;
  }


  public TeamSeason team(String team) {
    this.team = team;
    return this;
  }

  /**
   * Get team
   * @return team
   */
  @javax.annotation.Nullable
  public String getTeam() {
    return team;
  }

  public void setTeam(String team) {
    this.team = team;
  }


  public TeamSeason teamId(Integer teamId) {
    this.teamId = teamId;
    return this;
  }

  /**
   * Get teamId
   * @return teamId
   */
  @javax.annotation.Nullable
  public Integer getTeamId() {
    return teamId;
  }

  public void setTeamId(Integer teamId) {
    this.teamId = teamId;
  }


  public TeamSeason touches(BigDecimal touches) {
    this.touches = touches;
    return this;
  }

  /**
   * Get touches
   * @return touches
   */
  @javax.annotation.Nullable
  public BigDecimal getTouches() {
    return touches;
  }

  public void setTouches(BigDecimal touches) {
    this.touches = touches;
  }


  public TeamSeason updated(String updated) {
    this.updated = updated;
    return this;
  }

  /**
   * Get updated
   * @return updated
   */
  @javax.annotation.Nullable
  public String getUpdated() {
    return updated;
  }

  public void setUpdated(String updated) {
    this.updated = updated;
  }


  public TeamSeason updatedUtc(String updatedUtc) {
    this.updatedUtc = updatedUtc;
    return this;
  }

  /**
   * Get updatedUtc
   * @return updatedUtc
   */
  @javax.annotation.Nullable
  public String getUpdatedUtc() {
    return updatedUtc;
  }

  public void setUpdatedUtc(String updatedUtc) {
    this.updatedUtc = updatedUtc;
  }


  public TeamSeason yellowCards(BigDecimal yellowCards) {
    this.yellowCards = yellowCards;
    return this;
  }

  /**
   * Get yellowCards
   * @return yellowCards
   */
  @javax.annotation.Nullable
  public BigDecimal getYellowCards() {
    return yellowCards;
  }

  public void setYellowCards(BigDecimal yellowCards) {
    this.yellowCards = yellowCards;
  }


  public TeamSeason yellowRedCards(BigDecimal yellowRedCards) {
    this.yellowRedCards = yellowRedCards;
    return this;
  }

  /**
   * Get yellowRedCards
   * @return yellowRedCards
   */
  @javax.annotation.Nullable
  public BigDecimal getYellowRedCards() {
    return yellowRedCards;
  }

  public void setYellowRedCards(BigDecimal yellowRedCards) {
    this.yellowRedCards = yellowRedCards;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TeamSeason teamSeason = (TeamSeason) o;
    return Objects.equals(this.assists, teamSeason.assists) &&
        Objects.equals(this.blockedShots, teamSeason.blockedShots) &&
        Objects.equals(this.cornersWon, teamSeason.cornersWon) &&
        Objects.equals(this.crosses, teamSeason.crosses) &&
        Objects.equals(this.defenderCleanSheets, teamSeason.defenderCleanSheets) &&
        Objects.equals(this.fantasyPoints, teamSeason.fantasyPoints) &&
        Objects.equals(this.fantasyPointsDraftKings, teamSeason.fantasyPointsDraftKings) &&
        Objects.equals(this.fantasyPointsFanDuel, teamSeason.fantasyPointsFanDuel) &&
        Objects.equals(this.fantasyPointsMondogoal, teamSeason.fantasyPointsMondogoal) &&
        Objects.equals(this.fantasyPointsYahoo, teamSeason.fantasyPointsYahoo) &&
        Objects.equals(this.fouled, teamSeason.fouled) &&
        Objects.equals(this.fouls, teamSeason.fouls) &&
        Objects.equals(this.games, teamSeason.games) &&
        Objects.equals(this.globalTeamId, teamSeason.globalTeamId) &&
        Objects.equals(this.goalkeeperCleanSheets, teamSeason.goalkeeperCleanSheets) &&
        Objects.equals(this.goalkeeperGoalsAgainst, teamSeason.goalkeeperGoalsAgainst) &&
        Objects.equals(this.goalkeeperSaves, teamSeason.goalkeeperSaves) &&
        Objects.equals(this.goalkeeperSingleGoalAgainst, teamSeason.goalkeeperSingleGoalAgainst) &&
        Objects.equals(this.goalkeeperWins, teamSeason.goalkeeperWins) &&
        Objects.equals(this.goals, teamSeason.goals) &&
        Objects.equals(this.interceptions, teamSeason.interceptions) &&
        Objects.equals(this.lastManTackle, teamSeason.lastManTackle) &&
        Objects.equals(this.minutes, teamSeason.minutes) &&
        Objects.equals(this.name, teamSeason.name) &&
        Objects.equals(this.offsides, teamSeason.offsides) &&
        Objects.equals(this.opponentScore, teamSeason.opponentScore) &&
        Objects.equals(this.ownGoals, teamSeason.ownGoals) &&
        Objects.equals(this.passes, teamSeason.passes) &&
        Objects.equals(this.passesCompleted, teamSeason.passesCompleted) &&
        Objects.equals(this.penaltiesConceded, teamSeason.penaltiesConceded) &&
        Objects.equals(this.penaltiesWon, teamSeason.penaltiesWon) &&
        Objects.equals(this.penaltyKickGoals, teamSeason.penaltyKickGoals) &&
        Objects.equals(this.penaltyKickMisses, teamSeason.penaltyKickMisses) &&
        Objects.equals(this.penaltyKickSaves, teamSeason.penaltyKickSaves) &&
        Objects.equals(this.possession, teamSeason.possession) &&
        Objects.equals(this.redCards, teamSeason.redCards) &&
        Objects.equals(this.roundId, teamSeason.roundId) &&
        Objects.equals(this.score, teamSeason.score) &&
        Objects.equals(this.season, teamSeason.season) &&
        Objects.equals(this.seasonType, teamSeason.seasonType) &&
        Objects.equals(this.shots, teamSeason.shots) &&
        Objects.equals(this.shotsOnGoal, teamSeason.shotsOnGoal) &&
        Objects.equals(this.statId, teamSeason.statId) &&
        Objects.equals(this.tackles, teamSeason.tackles) &&
        Objects.equals(this.tacklesWon, teamSeason.tacklesWon) &&
        Objects.equals(this.team, teamSeason.team) &&
        Objects.equals(this.teamId, teamSeason.teamId) &&
        Objects.equals(this.touches, teamSeason.touches) &&
        Objects.equals(this.updated, teamSeason.updated) &&
        Objects.equals(this.updatedUtc, teamSeason.updatedUtc) &&
        Objects.equals(this.yellowCards, teamSeason.yellowCards) &&
        Objects.equals(this.yellowRedCards, teamSeason.yellowRedCards);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(assists, blockedShots, cornersWon, crosses, defenderCleanSheets, fantasyPoints, fantasyPointsDraftKings, fantasyPointsFanDuel, fantasyPointsMondogoal, fantasyPointsYahoo, fouled, fouls, games, globalTeamId, goalkeeperCleanSheets, goalkeeperGoalsAgainst, goalkeeperSaves, goalkeeperSingleGoalAgainst, goalkeeperWins, goals, interceptions, lastManTackle, minutes, name, offsides, opponentScore, ownGoals, passes, passesCompleted, penaltiesConceded, penaltiesWon, penaltyKickGoals, penaltyKickMisses, penaltyKickSaves, possession, redCards, roundId, score, season, seasonType, shots, shotsOnGoal, statId, tackles, tacklesWon, team, teamId, touches, updated, updatedUtc, yellowCards, yellowRedCards);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TeamSeason {\n");
    sb.append("    assists: ").append(toIndentedString(assists)).append("\n");
    sb.append("    blockedShots: ").append(toIndentedString(blockedShots)).append("\n");
    sb.append("    cornersWon: ").append(toIndentedString(cornersWon)).append("\n");
    sb.append("    crosses: ").append(toIndentedString(crosses)).append("\n");
    sb.append("    defenderCleanSheets: ").append(toIndentedString(defenderCleanSheets)).append("\n");
    sb.append("    fantasyPoints: ").append(toIndentedString(fantasyPoints)).append("\n");
    sb.append("    fantasyPointsDraftKings: ").append(toIndentedString(fantasyPointsDraftKings)).append("\n");
    sb.append("    fantasyPointsFanDuel: ").append(toIndentedString(fantasyPointsFanDuel)).append("\n");
    sb.append("    fantasyPointsMondogoal: ").append(toIndentedString(fantasyPointsMondogoal)).append("\n");
    sb.append("    fantasyPointsYahoo: ").append(toIndentedString(fantasyPointsYahoo)).append("\n");
    sb.append("    fouled: ").append(toIndentedString(fouled)).append("\n");
    sb.append("    fouls: ").append(toIndentedString(fouls)).append("\n");
    sb.append("    games: ").append(toIndentedString(games)).append("\n");
    sb.append("    globalTeamId: ").append(toIndentedString(globalTeamId)).append("\n");
    sb.append("    goalkeeperCleanSheets: ").append(toIndentedString(goalkeeperCleanSheets)).append("\n");
    sb.append("    goalkeeperGoalsAgainst: ").append(toIndentedString(goalkeeperGoalsAgainst)).append("\n");
    sb.append("    goalkeeperSaves: ").append(toIndentedString(goalkeeperSaves)).append("\n");
    sb.append("    goalkeeperSingleGoalAgainst: ").append(toIndentedString(goalkeeperSingleGoalAgainst)).append("\n");
    sb.append("    goalkeeperWins: ").append(toIndentedString(goalkeeperWins)).append("\n");
    sb.append("    goals: ").append(toIndentedString(goals)).append("\n");
    sb.append("    interceptions: ").append(toIndentedString(interceptions)).append("\n");
    sb.append("    lastManTackle: ").append(toIndentedString(lastManTackle)).append("\n");
    sb.append("    minutes: ").append(toIndentedString(minutes)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    offsides: ").append(toIndentedString(offsides)).append("\n");
    sb.append("    opponentScore: ").append(toIndentedString(opponentScore)).append("\n");
    sb.append("    ownGoals: ").append(toIndentedString(ownGoals)).append("\n");
    sb.append("    passes: ").append(toIndentedString(passes)).append("\n");
    sb.append("    passesCompleted: ").append(toIndentedString(passesCompleted)).append("\n");
    sb.append("    penaltiesConceded: ").append(toIndentedString(penaltiesConceded)).append("\n");
    sb.append("    penaltiesWon: ").append(toIndentedString(penaltiesWon)).append("\n");
    sb.append("    penaltyKickGoals: ").append(toIndentedString(penaltyKickGoals)).append("\n");
    sb.append("    penaltyKickMisses: ").append(toIndentedString(penaltyKickMisses)).append("\n");
    sb.append("    penaltyKickSaves: ").append(toIndentedString(penaltyKickSaves)).append("\n");
    sb.append("    possession: ").append(toIndentedString(possession)).append("\n");
    sb.append("    redCards: ").append(toIndentedString(redCards)).append("\n");
    sb.append("    roundId: ").append(toIndentedString(roundId)).append("\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("    season: ").append(toIndentedString(season)).append("\n");
    sb.append("    seasonType: ").append(toIndentedString(seasonType)).append("\n");
    sb.append("    shots: ").append(toIndentedString(shots)).append("\n");
    sb.append("    shotsOnGoal: ").append(toIndentedString(shotsOnGoal)).append("\n");
    sb.append("    statId: ").append(toIndentedString(statId)).append("\n");
    sb.append("    tackles: ").append(toIndentedString(tackles)).append("\n");
    sb.append("    tacklesWon: ").append(toIndentedString(tacklesWon)).append("\n");
    sb.append("    team: ").append(toIndentedString(team)).append("\n");
    sb.append("    teamId: ").append(toIndentedString(teamId)).append("\n");
    sb.append("    touches: ").append(toIndentedString(touches)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    updatedUtc: ").append(toIndentedString(updatedUtc)).append("\n");
    sb.append("    yellowCards: ").append(toIndentedString(yellowCards)).append("\n");
    sb.append("    yellowRedCards: ").append(toIndentedString(yellowRedCards)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Assists");
    openapiFields.add("BlockedShots");
    openapiFields.add("CornersWon");
    openapiFields.add("Crosses");
    openapiFields.add("DefenderCleanSheets");
    openapiFields.add("FantasyPoints");
    openapiFields.add("FantasyPointsDraftKings");
    openapiFields.add("FantasyPointsFanDuel");
    openapiFields.add("FantasyPointsMondogoal");
    openapiFields.add("FantasyPointsYahoo");
    openapiFields.add("Fouled");
    openapiFields.add("Fouls");
    openapiFields.add("Games");
    openapiFields.add("GlobalTeamId");
    openapiFields.add("GoalkeeperCleanSheets");
    openapiFields.add("GoalkeeperGoalsAgainst");
    openapiFields.add("GoalkeeperSaves");
    openapiFields.add("GoalkeeperSingleGoalAgainst");
    openapiFields.add("GoalkeeperWins");
    openapiFields.add("Goals");
    openapiFields.add("Interceptions");
    openapiFields.add("LastManTackle");
    openapiFields.add("Minutes");
    openapiFields.add("Name");
    openapiFields.add("Offsides");
    openapiFields.add("OpponentScore");
    openapiFields.add("OwnGoals");
    openapiFields.add("Passes");
    openapiFields.add("PassesCompleted");
    openapiFields.add("PenaltiesConceded");
    openapiFields.add("PenaltiesWon");
    openapiFields.add("PenaltyKickGoals");
    openapiFields.add("PenaltyKickMisses");
    openapiFields.add("PenaltyKickSaves");
    openapiFields.add("Possession");
    openapiFields.add("RedCards");
    openapiFields.add("RoundId");
    openapiFields.add("Score");
    openapiFields.add("Season");
    openapiFields.add("SeasonType");
    openapiFields.add("Shots");
    openapiFields.add("ShotsOnGoal");
    openapiFields.add("StatId");
    openapiFields.add("Tackles");
    openapiFields.add("TacklesWon");
    openapiFields.add("Team");
    openapiFields.add("TeamId");
    openapiFields.add("Touches");
    openapiFields.add("Updated");
    openapiFields.add("UpdatedUtc");
    openapiFields.add("YellowCards");
    openapiFields.add("YellowRedCards");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TeamSeason
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TeamSeason.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TeamSeason is not found in the empty JSON string", TeamSeason.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TeamSeason.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TeamSeason` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) && !jsonObj.get("Name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Name").toString()));
      }
      if ((jsonObj.get("Team") != null && !jsonObj.get("Team").isJsonNull()) && !jsonObj.get("Team").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Team` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Team").toString()));
      }
      if ((jsonObj.get("Updated") != null && !jsonObj.get("Updated").isJsonNull()) && !jsonObj.get("Updated").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Updated` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Updated").toString()));
      }
      if ((jsonObj.get("UpdatedUtc") != null && !jsonObj.get("UpdatedUtc").isJsonNull()) && !jsonObj.get("UpdatedUtc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `UpdatedUtc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("UpdatedUtc").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TeamSeason.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TeamSeason' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TeamSeason> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TeamSeason.class));

       return (TypeAdapter<T>) new TypeAdapter<TeamSeason>() {
           @Override
           public void write(JsonWriter out, TeamSeason value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TeamSeason read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TeamSeason given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TeamSeason
   * @throws IOException if the JSON string is invalid with respect to TeamSeason
   */
  public static TeamSeason fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TeamSeason.class);
  }

  /**
   * Convert an instance of TeamSeason to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

