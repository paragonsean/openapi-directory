/*
 * Soccer v3 Stats
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.client.model.PlayoffAggregateScore;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Game
 */
public class GameTest {
    private final Game model = new Game();

    /**
     * Model tests for Game
     */
    @Test
    public void testGame() {
        // TODO: test Game
    }

    /**
     * Test the property 'attendance'
     */
    @Test
    public void attendanceTest() {
        // TODO: test attendance
    }

    /**
     * Test the property 'awayTeamCountryCode'
     */
    @Test
    public void awayTeamCountryCodeTest() {
        // TODO: test awayTeamCountryCode
    }

    /**
     * Test the property 'awayTeamFormation'
     */
    @Test
    public void awayTeamFormationTest() {
        // TODO: test awayTeamFormation
    }

    /**
     * Test the property 'awayTeamId'
     */
    @Test
    public void awayTeamIdTest() {
        // TODO: test awayTeamId
    }

    /**
     * Test the property 'awayTeamKey'
     */
    @Test
    public void awayTeamKeyTest() {
        // TODO: test awayTeamKey
    }

    /**
     * Test the property 'awayTeamMoneyLine'
     */
    @Test
    public void awayTeamMoneyLineTest() {
        // TODO: test awayTeamMoneyLine
    }

    /**
     * Test the property 'awayTeamName'
     */
    @Test
    public void awayTeamNameTest() {
        // TODO: test awayTeamName
    }

    /**
     * Test the property 'awayTeamPointSpreadPayout'
     */
    @Test
    public void awayTeamPointSpreadPayoutTest() {
        // TODO: test awayTeamPointSpreadPayout
    }

    /**
     * Test the property 'awayTeamScore'
     */
    @Test
    public void awayTeamScoreTest() {
        // TODO: test awayTeamScore
    }

    /**
     * Test the property 'awayTeamScoreExtraTime'
     */
    @Test
    public void awayTeamScoreExtraTimeTest() {
        // TODO: test awayTeamScoreExtraTime
    }

    /**
     * Test the property 'awayTeamScorePenalty'
     */
    @Test
    public void awayTeamScorePenaltyTest() {
        // TODO: test awayTeamScorePenalty
    }

    /**
     * Test the property 'awayTeamScorePeriod1'
     */
    @Test
    public void awayTeamScorePeriod1Test() {
        // TODO: test awayTeamScorePeriod1
    }

    /**
     * Test the property 'awayTeamScorePeriod2'
     */
    @Test
    public void awayTeamScorePeriod2Test() {
        // TODO: test awayTeamScorePeriod2
    }

    /**
     * Test the property 'clock'
     */
    @Test
    public void clockTest() {
        // TODO: test clock
    }

    /**
     * Test the property 'clockDisplay'
     */
    @Test
    public void clockDisplayTest() {
        // TODO: test clockDisplay
    }

    /**
     * Test the property 'clockExtra'
     */
    @Test
    public void clockExtraTest() {
        // TODO: test clockExtra
    }

    /**
     * Test the property 'dateTime'
     */
    @Test
    public void dateTimeTest() {
        // TODO: test dateTime
    }

    /**
     * Test the property 'day'
     */
    @Test
    public void dayTest() {
        // TODO: test day
    }

    /**
     * Test the property 'drawMoneyLine'
     */
    @Test
    public void drawMoneyLineTest() {
        // TODO: test drawMoneyLine
    }

    /**
     * Test the property 'gameId'
     */
    @Test
    public void gameIdTest() {
        // TODO: test gameId
    }

    /**
     * Test the property 'globalAwayTeamId'
     */
    @Test
    public void globalAwayTeamIdTest() {
        // TODO: test globalAwayTeamId
    }

    /**
     * Test the property 'globalGameId'
     */
    @Test
    public void globalGameIdTest() {
        // TODO: test globalGameId
    }

    /**
     * Test the property 'globalHomeTeamId'
     */
    @Test
    public void globalHomeTeamIdTest() {
        // TODO: test globalHomeTeamId
    }

    /**
     * Test the property 'group'
     */
    @Test
    public void groupTest() {
        // TODO: test group
    }

    /**
     * Test the property 'homeTeamCountryCode'
     */
    @Test
    public void homeTeamCountryCodeTest() {
        // TODO: test homeTeamCountryCode
    }

    /**
     * Test the property 'homeTeamFormation'
     */
    @Test
    public void homeTeamFormationTest() {
        // TODO: test homeTeamFormation
    }

    /**
     * Test the property 'homeTeamId'
     */
    @Test
    public void homeTeamIdTest() {
        // TODO: test homeTeamId
    }

    /**
     * Test the property 'homeTeamKey'
     */
    @Test
    public void homeTeamKeyTest() {
        // TODO: test homeTeamKey
    }

    /**
     * Test the property 'homeTeamMoneyLine'
     */
    @Test
    public void homeTeamMoneyLineTest() {
        // TODO: test homeTeamMoneyLine
    }

    /**
     * Test the property 'homeTeamName'
     */
    @Test
    public void homeTeamNameTest() {
        // TODO: test homeTeamName
    }

    /**
     * Test the property 'homeTeamPointSpreadPayout'
     */
    @Test
    public void homeTeamPointSpreadPayoutTest() {
        // TODO: test homeTeamPointSpreadPayout
    }

    /**
     * Test the property 'homeTeamScore'
     */
    @Test
    public void homeTeamScoreTest() {
        // TODO: test homeTeamScore
    }

    /**
     * Test the property 'homeTeamScoreExtraTime'
     */
    @Test
    public void homeTeamScoreExtraTimeTest() {
        // TODO: test homeTeamScoreExtraTime
    }

    /**
     * Test the property 'homeTeamScorePenalty'
     */
    @Test
    public void homeTeamScorePenaltyTest() {
        // TODO: test homeTeamScorePenalty
    }

    /**
     * Test the property 'homeTeamScorePeriod1'
     */
    @Test
    public void homeTeamScorePeriod1Test() {
        // TODO: test homeTeamScorePeriod1
    }

    /**
     * Test the property 'homeTeamScorePeriod2'
     */
    @Test
    public void homeTeamScorePeriod2Test() {
        // TODO: test homeTeamScorePeriod2
    }

    /**
     * Test the property 'isClosed'
     */
    @Test
    public void isClosedTest() {
        // TODO: test isClosed
    }

    /**
     * Test the property 'overPayout'
     */
    @Test
    public void overPayoutTest() {
        // TODO: test overPayout
    }

    /**
     * Test the property 'overUnder'
     */
    @Test
    public void overUnderTest() {
        // TODO: test overUnder
    }

    /**
     * Test the property 'period'
     */
    @Test
    public void periodTest() {
        // TODO: test period
    }

    /**
     * Test the property 'playoffAggregateScore'
     */
    @Test
    public void playoffAggregateScoreTest() {
        // TODO: test playoffAggregateScore
    }

    /**
     * Test the property 'pointSpread'
     */
    @Test
    public void pointSpreadTest() {
        // TODO: test pointSpread
    }

    /**
     * Test the property 'roundId'
     */
    @Test
    public void roundIdTest() {
        // TODO: test roundId
    }

    /**
     * Test the property 'season'
     */
    @Test
    public void seasonTest() {
        // TODO: test season
    }

    /**
     * Test the property 'seasonType'
     */
    @Test
    public void seasonTypeTest() {
        // TODO: test seasonType
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'underPayout'
     */
    @Test
    public void underPayoutTest() {
        // TODO: test underPayout
    }

    /**
     * Test the property 'updated'
     */
    @Test
    public void updatedTest() {
        // TODO: test updated
    }

    /**
     * Test the property 'updatedUtc'
     */
    @Test
    public void updatedUtcTest() {
        // TODO: test updatedUtc
    }

    /**
     * Test the property 'venueId'
     */
    @Test
    public void venueIdTest() {
        // TODO: test venueId
    }

    /**
     * Test the property 'venueType'
     */
    @Test
    public void venueTypeTest() {
        // TODO: test venueType
    }

    /**
     * Test the property 'week'
     */
    @Test
    public void weekTest() {
        // TODO: test week
    }

    /**
     * Test the property 'winner'
     */
    @Test
    public void winnerTest() {
        // TODO: test winner
    }

}
