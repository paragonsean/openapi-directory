# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.competition import Competition
from openapi_server import util


class Area(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, area_id: int=None, competitions: List[Competition]=None, country_code: str=None, name: str=None):
        """Area - a model defined in OpenAPI

        :param area_id: The area_id of this Area.
        :param competitions: The competitions of this Area.
        :param country_code: The country_code of this Area.
        :param name: The name of this Area.
        """
        self.openapi_types = {
            'area_id': int,
            'competitions': List[Competition],
            'country_code': str,
            'name': str
        }

        self.attribute_map = {
            'area_id': 'AreaId',
            'competitions': 'Competitions',
            'country_code': 'CountryCode',
            'name': 'Name'
        }

        self._area_id = area_id
        self._competitions = competitions
        self._country_code = country_code
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Area':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Area of this Area.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def area_id(self):
        """Gets the area_id of this Area.


        :return: The area_id of this Area.
        :rtype: int
        """
        return self._area_id

    @area_id.setter
    def area_id(self, area_id):
        """Sets the area_id of this Area.


        :param area_id: The area_id of this Area.
        :type area_id: int
        """

        self._area_id = area_id

    @property
    def competitions(self):
        """Gets the competitions of this Area.


        :return: The competitions of this Area.
        :rtype: List[Competition]
        """
        return self._competitions

    @competitions.setter
    def competitions(self, competitions):
        """Sets the competitions of this Area.


        :param competitions: The competitions of this Area.
        :type competitions: List[Competition]
        """

        self._competitions = competitions

    @property
    def country_code(self):
        """Gets the country_code of this Area.


        :return: The country_code of this Area.
        :rtype: str
        """
        return self._country_code

    @country_code.setter
    def country_code(self, country_code):
        """Sets the country_code of this Area.


        :param country_code: The country_code of this Area.
        :type country_code: str
        """

        self._country_code = country_code

    @property
    def name(self):
        """Gets the name of this Area.


        :return: The name of this Area.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Area.


        :param name: The name of this Area.
        :type name: str
        """

        self._name = name
