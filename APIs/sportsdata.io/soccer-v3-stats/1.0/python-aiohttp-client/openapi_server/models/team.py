# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Team(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active: bool=None, address: str=None, area_id: int=None, area_name: str=None, city: str=None, club_color1: str=None, club_color2: str=None, club_color3: str=None, email: str=None, fax: str=None, founded: int=None, full_name: str=None, gender: str=None, global_team_id: int=None, key: str=None, name: str=None, nickname1: str=None, nickname2: str=None, nickname3: str=None, phone: str=None, team_id: int=None, type: str=None, venue_id: int=None, venue_name: str=None, website: str=None, wikipedia_logo_url: str=None, wikipedia_word_mark_url: str=None, zip: str=None):
        """Team - a model defined in OpenAPI

        :param active: The active of this Team.
        :param address: The address of this Team.
        :param area_id: The area_id of this Team.
        :param area_name: The area_name of this Team.
        :param city: The city of this Team.
        :param club_color1: The club_color1 of this Team.
        :param club_color2: The club_color2 of this Team.
        :param club_color3: The club_color3 of this Team.
        :param email: The email of this Team.
        :param fax: The fax of this Team.
        :param founded: The founded of this Team.
        :param full_name: The full_name of this Team.
        :param gender: The gender of this Team.
        :param global_team_id: The global_team_id of this Team.
        :param key: The key of this Team.
        :param name: The name of this Team.
        :param nickname1: The nickname1 of this Team.
        :param nickname2: The nickname2 of this Team.
        :param nickname3: The nickname3 of this Team.
        :param phone: The phone of this Team.
        :param team_id: The team_id of this Team.
        :param type: The type of this Team.
        :param venue_id: The venue_id of this Team.
        :param venue_name: The venue_name of this Team.
        :param website: The website of this Team.
        :param wikipedia_logo_url: The wikipedia_logo_url of this Team.
        :param wikipedia_word_mark_url: The wikipedia_word_mark_url of this Team.
        :param zip: The zip of this Team.
        """
        self.openapi_types = {
            'active': bool,
            'address': str,
            'area_id': int,
            'area_name': str,
            'city': str,
            'club_color1': str,
            'club_color2': str,
            'club_color3': str,
            'email': str,
            'fax': str,
            'founded': int,
            'full_name': str,
            'gender': str,
            'global_team_id': int,
            'key': str,
            'name': str,
            'nickname1': str,
            'nickname2': str,
            'nickname3': str,
            'phone': str,
            'team_id': int,
            'type': str,
            'venue_id': int,
            'venue_name': str,
            'website': str,
            'wikipedia_logo_url': str,
            'wikipedia_word_mark_url': str,
            'zip': str
        }

        self.attribute_map = {
            'active': 'Active',
            'address': 'Address',
            'area_id': 'AreaId',
            'area_name': 'AreaName',
            'city': 'City',
            'club_color1': 'ClubColor1',
            'club_color2': 'ClubColor2',
            'club_color3': 'ClubColor3',
            'email': 'Email',
            'fax': 'Fax',
            'founded': 'Founded',
            'full_name': 'FullName',
            'gender': 'Gender',
            'global_team_id': 'GlobalTeamId',
            'key': 'Key',
            'name': 'Name',
            'nickname1': 'Nickname1',
            'nickname2': 'Nickname2',
            'nickname3': 'Nickname3',
            'phone': 'Phone',
            'team_id': 'TeamId',
            'type': 'Type',
            'venue_id': 'VenueId',
            'venue_name': 'VenueName',
            'website': 'Website',
            'wikipedia_logo_url': 'WikipediaLogoUrl',
            'wikipedia_word_mark_url': 'WikipediaWordMarkUrl',
            'zip': 'Zip'
        }

        self._active = active
        self._address = address
        self._area_id = area_id
        self._area_name = area_name
        self._city = city
        self._club_color1 = club_color1
        self._club_color2 = club_color2
        self._club_color3 = club_color3
        self._email = email
        self._fax = fax
        self._founded = founded
        self._full_name = full_name
        self._gender = gender
        self._global_team_id = global_team_id
        self._key = key
        self._name = name
        self._nickname1 = nickname1
        self._nickname2 = nickname2
        self._nickname3 = nickname3
        self._phone = phone
        self._team_id = team_id
        self._type = type
        self._venue_id = venue_id
        self._venue_name = venue_name
        self._website = website
        self._wikipedia_logo_url = wikipedia_logo_url
        self._wikipedia_word_mark_url = wikipedia_word_mark_url
        self._zip = zip

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Team':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Team of this Team.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active(self):
        """Gets the active of this Team.


        :return: The active of this Team.
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this Team.


        :param active: The active of this Team.
        :type active: bool
        """

        self._active = active

    @property
    def address(self):
        """Gets the address of this Team.


        :return: The address of this Team.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this Team.


        :param address: The address of this Team.
        :type address: str
        """

        self._address = address

    @property
    def area_id(self):
        """Gets the area_id of this Team.


        :return: The area_id of this Team.
        :rtype: int
        """
        return self._area_id

    @area_id.setter
    def area_id(self, area_id):
        """Sets the area_id of this Team.


        :param area_id: The area_id of this Team.
        :type area_id: int
        """

        self._area_id = area_id

    @property
    def area_name(self):
        """Gets the area_name of this Team.


        :return: The area_name of this Team.
        :rtype: str
        """
        return self._area_name

    @area_name.setter
    def area_name(self, area_name):
        """Sets the area_name of this Team.


        :param area_name: The area_name of this Team.
        :type area_name: str
        """

        self._area_name = area_name

    @property
    def city(self):
        """Gets the city of this Team.


        :return: The city of this Team.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this Team.


        :param city: The city of this Team.
        :type city: str
        """

        self._city = city

    @property
    def club_color1(self):
        """Gets the club_color1 of this Team.


        :return: The club_color1 of this Team.
        :rtype: str
        """
        return self._club_color1

    @club_color1.setter
    def club_color1(self, club_color1):
        """Sets the club_color1 of this Team.


        :param club_color1: The club_color1 of this Team.
        :type club_color1: str
        """

        self._club_color1 = club_color1

    @property
    def club_color2(self):
        """Gets the club_color2 of this Team.


        :return: The club_color2 of this Team.
        :rtype: str
        """
        return self._club_color2

    @club_color2.setter
    def club_color2(self, club_color2):
        """Sets the club_color2 of this Team.


        :param club_color2: The club_color2 of this Team.
        :type club_color2: str
        """

        self._club_color2 = club_color2

    @property
    def club_color3(self):
        """Gets the club_color3 of this Team.


        :return: The club_color3 of this Team.
        :rtype: str
        """
        return self._club_color3

    @club_color3.setter
    def club_color3(self, club_color3):
        """Sets the club_color3 of this Team.


        :param club_color3: The club_color3 of this Team.
        :type club_color3: str
        """

        self._club_color3 = club_color3

    @property
    def email(self):
        """Gets the email of this Team.


        :return: The email of this Team.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this Team.


        :param email: The email of this Team.
        :type email: str
        """

        self._email = email

    @property
    def fax(self):
        """Gets the fax of this Team.


        :return: The fax of this Team.
        :rtype: str
        """
        return self._fax

    @fax.setter
    def fax(self, fax):
        """Sets the fax of this Team.


        :param fax: The fax of this Team.
        :type fax: str
        """

        self._fax = fax

    @property
    def founded(self):
        """Gets the founded of this Team.


        :return: The founded of this Team.
        :rtype: int
        """
        return self._founded

    @founded.setter
    def founded(self, founded):
        """Sets the founded of this Team.


        :param founded: The founded of this Team.
        :type founded: int
        """

        self._founded = founded

    @property
    def full_name(self):
        """Gets the full_name of this Team.


        :return: The full_name of this Team.
        :rtype: str
        """
        return self._full_name

    @full_name.setter
    def full_name(self, full_name):
        """Sets the full_name of this Team.


        :param full_name: The full_name of this Team.
        :type full_name: str
        """

        self._full_name = full_name

    @property
    def gender(self):
        """Gets the gender of this Team.


        :return: The gender of this Team.
        :rtype: str
        """
        return self._gender

    @gender.setter
    def gender(self, gender):
        """Sets the gender of this Team.


        :param gender: The gender of this Team.
        :type gender: str
        """

        self._gender = gender

    @property
    def global_team_id(self):
        """Gets the global_team_id of this Team.


        :return: The global_team_id of this Team.
        :rtype: int
        """
        return self._global_team_id

    @global_team_id.setter
    def global_team_id(self, global_team_id):
        """Sets the global_team_id of this Team.


        :param global_team_id: The global_team_id of this Team.
        :type global_team_id: int
        """

        self._global_team_id = global_team_id

    @property
    def key(self):
        """Gets the key of this Team.


        :return: The key of this Team.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this Team.


        :param key: The key of this Team.
        :type key: str
        """

        self._key = key

    @property
    def name(self):
        """Gets the name of this Team.


        :return: The name of this Team.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Team.


        :param name: The name of this Team.
        :type name: str
        """

        self._name = name

    @property
    def nickname1(self):
        """Gets the nickname1 of this Team.


        :return: The nickname1 of this Team.
        :rtype: str
        """
        return self._nickname1

    @nickname1.setter
    def nickname1(self, nickname1):
        """Sets the nickname1 of this Team.


        :param nickname1: The nickname1 of this Team.
        :type nickname1: str
        """

        self._nickname1 = nickname1

    @property
    def nickname2(self):
        """Gets the nickname2 of this Team.


        :return: The nickname2 of this Team.
        :rtype: str
        """
        return self._nickname2

    @nickname2.setter
    def nickname2(self, nickname2):
        """Sets the nickname2 of this Team.


        :param nickname2: The nickname2 of this Team.
        :type nickname2: str
        """

        self._nickname2 = nickname2

    @property
    def nickname3(self):
        """Gets the nickname3 of this Team.


        :return: The nickname3 of this Team.
        :rtype: str
        """
        return self._nickname3

    @nickname3.setter
    def nickname3(self, nickname3):
        """Sets the nickname3 of this Team.


        :param nickname3: The nickname3 of this Team.
        :type nickname3: str
        """

        self._nickname3 = nickname3

    @property
    def phone(self):
        """Gets the phone of this Team.


        :return: The phone of this Team.
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone):
        """Sets the phone of this Team.


        :param phone: The phone of this Team.
        :type phone: str
        """

        self._phone = phone

    @property
    def team_id(self):
        """Gets the team_id of this Team.


        :return: The team_id of this Team.
        :rtype: int
        """
        return self._team_id

    @team_id.setter
    def team_id(self, team_id):
        """Sets the team_id of this Team.


        :param team_id: The team_id of this Team.
        :type team_id: int
        """

        self._team_id = team_id

    @property
    def type(self):
        """Gets the type of this Team.


        :return: The type of this Team.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Team.


        :param type: The type of this Team.
        :type type: str
        """

        self._type = type

    @property
    def venue_id(self):
        """Gets the venue_id of this Team.


        :return: The venue_id of this Team.
        :rtype: int
        """
        return self._venue_id

    @venue_id.setter
    def venue_id(self, venue_id):
        """Sets the venue_id of this Team.


        :param venue_id: The venue_id of this Team.
        :type venue_id: int
        """

        self._venue_id = venue_id

    @property
    def venue_name(self):
        """Gets the venue_name of this Team.


        :return: The venue_name of this Team.
        :rtype: str
        """
        return self._venue_name

    @venue_name.setter
    def venue_name(self, venue_name):
        """Sets the venue_name of this Team.


        :param venue_name: The venue_name of this Team.
        :type venue_name: str
        """

        self._venue_name = venue_name

    @property
    def website(self):
        """Gets the website of this Team.


        :return: The website of this Team.
        :rtype: str
        """
        return self._website

    @website.setter
    def website(self, website):
        """Sets the website of this Team.


        :param website: The website of this Team.
        :type website: str
        """

        self._website = website

    @property
    def wikipedia_logo_url(self):
        """Gets the wikipedia_logo_url of this Team.


        :return: The wikipedia_logo_url of this Team.
        :rtype: str
        """
        return self._wikipedia_logo_url

    @wikipedia_logo_url.setter
    def wikipedia_logo_url(self, wikipedia_logo_url):
        """Sets the wikipedia_logo_url of this Team.


        :param wikipedia_logo_url: The wikipedia_logo_url of this Team.
        :type wikipedia_logo_url: str
        """

        self._wikipedia_logo_url = wikipedia_logo_url

    @property
    def wikipedia_word_mark_url(self):
        """Gets the wikipedia_word_mark_url of this Team.


        :return: The wikipedia_word_mark_url of this Team.
        :rtype: str
        """
        return self._wikipedia_word_mark_url

    @wikipedia_word_mark_url.setter
    def wikipedia_word_mark_url(self, wikipedia_word_mark_url):
        """Sets the wikipedia_word_mark_url of this Team.


        :param wikipedia_word_mark_url: The wikipedia_word_mark_url of this Team.
        :type wikipedia_word_mark_url: str
        """

        self._wikipedia_word_mark_url = wikipedia_word_mark_url

    @property
    def zip(self):
        """Gets the zip of this Team.


        :return: The zip of this Team.
        :rtype: str
        """
        return self._zip

    @zip.setter
    def zip(self, zip):
        """Sets the zip of this Team.


        :param zip: The zip of this Team.
        :type zip: str
        """

        self._zip = zip
