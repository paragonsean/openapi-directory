# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Referee(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, first_name: str=None, last_name: str=None, nationality: str=None, referee_id: int=None, short_name: str=None):
        """Referee - a model defined in OpenAPI

        :param first_name: The first_name of this Referee.
        :param last_name: The last_name of this Referee.
        :param nationality: The nationality of this Referee.
        :param referee_id: The referee_id of this Referee.
        :param short_name: The short_name of this Referee.
        """
        self.openapi_types = {
            'first_name': str,
            'last_name': str,
            'nationality': str,
            'referee_id': int,
            'short_name': str
        }

        self.attribute_map = {
            'first_name': 'FirstName',
            'last_name': 'LastName',
            'nationality': 'Nationality',
            'referee_id': 'RefereeId',
            'short_name': 'ShortName'
        }

        self._first_name = first_name
        self._last_name = last_name
        self._nationality = nationality
        self._referee_id = referee_id
        self._short_name = short_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Referee':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Referee of this Referee.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def first_name(self):
        """Gets the first_name of this Referee.


        :return: The first_name of this Referee.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this Referee.


        :param first_name: The first_name of this Referee.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def last_name(self):
        """Gets the last_name of this Referee.


        :return: The last_name of this Referee.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this Referee.


        :param last_name: The last_name of this Referee.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def nationality(self):
        """Gets the nationality of this Referee.


        :return: The nationality of this Referee.
        :rtype: str
        """
        return self._nationality

    @nationality.setter
    def nationality(self, nationality):
        """Sets the nationality of this Referee.


        :param nationality: The nationality of this Referee.
        :type nationality: str
        """

        self._nationality = nationality

    @property
    def referee_id(self):
        """Gets the referee_id of this Referee.


        :return: The referee_id of this Referee.
        :rtype: int
        """
        return self._referee_id

    @referee_id.setter
    def referee_id(self, referee_id):
        """Sets the referee_id of this Referee.


        :param referee_id: The referee_id of this Referee.
        :type referee_id: int
        """

        self._referee_id = referee_id

    @property
    def short_name(self):
        """Gets the short_name of this Referee.


        :return: The short_name of this Referee.
        :rtype: str
        """
        return self._short_name

    @short_name.setter
    def short_name(self, short_name):
        """Sets the short_name of this Referee.


        :param short_name: The short_name of this Referee.
        :type short_name: str
        """

        self._short_name = short_name
