# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.team import Team
from openapi_server import util


class SeasonTeam(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active: bool=None, gender: str=None, season_id: int=None, season_team_id: int=None, team: Team=None, team_id: int=None, team_name: str=None, type: str=None):
        """SeasonTeam - a model defined in OpenAPI

        :param active: The active of this SeasonTeam.
        :param gender: The gender of this SeasonTeam.
        :param season_id: The season_id of this SeasonTeam.
        :param season_team_id: The season_team_id of this SeasonTeam.
        :param team: The team of this SeasonTeam.
        :param team_id: The team_id of this SeasonTeam.
        :param team_name: The team_name of this SeasonTeam.
        :param type: The type of this SeasonTeam.
        """
        self.openapi_types = {
            'active': bool,
            'gender': str,
            'season_id': int,
            'season_team_id': int,
            'team': Team,
            'team_id': int,
            'team_name': str,
            'type': str
        }

        self.attribute_map = {
            'active': 'Active',
            'gender': 'Gender',
            'season_id': 'SeasonId',
            'season_team_id': 'SeasonTeamId',
            'team': 'Team',
            'team_id': 'TeamId',
            'team_name': 'TeamName',
            'type': 'Type'
        }

        self._active = active
        self._gender = gender
        self._season_id = season_id
        self._season_team_id = season_team_id
        self._team = team
        self._team_id = team_id
        self._team_name = team_name
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SeasonTeam':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SeasonTeam of this SeasonTeam.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active(self):
        """Gets the active of this SeasonTeam.


        :return: The active of this SeasonTeam.
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this SeasonTeam.


        :param active: The active of this SeasonTeam.
        :type active: bool
        """

        self._active = active

    @property
    def gender(self):
        """Gets the gender of this SeasonTeam.


        :return: The gender of this SeasonTeam.
        :rtype: str
        """
        return self._gender

    @gender.setter
    def gender(self, gender):
        """Sets the gender of this SeasonTeam.


        :param gender: The gender of this SeasonTeam.
        :type gender: str
        """

        self._gender = gender

    @property
    def season_id(self):
        """Gets the season_id of this SeasonTeam.


        :return: The season_id of this SeasonTeam.
        :rtype: int
        """
        return self._season_id

    @season_id.setter
    def season_id(self, season_id):
        """Sets the season_id of this SeasonTeam.


        :param season_id: The season_id of this SeasonTeam.
        :type season_id: int
        """

        self._season_id = season_id

    @property
    def season_team_id(self):
        """Gets the season_team_id of this SeasonTeam.


        :return: The season_team_id of this SeasonTeam.
        :rtype: int
        """
        return self._season_team_id

    @season_team_id.setter
    def season_team_id(self, season_team_id):
        """Sets the season_team_id of this SeasonTeam.


        :param season_team_id: The season_team_id of this SeasonTeam.
        :type season_team_id: int
        """

        self._season_team_id = season_team_id

    @property
    def team(self):
        """Gets the team of this SeasonTeam.


        :return: The team of this SeasonTeam.
        :rtype: Team
        """
        return self._team

    @team.setter
    def team(self, team):
        """Sets the team of this SeasonTeam.


        :param team: The team of this SeasonTeam.
        :type team: Team
        """

        self._team = team

    @property
    def team_id(self):
        """Gets the team_id of this SeasonTeam.


        :return: The team_id of this SeasonTeam.
        :rtype: int
        """
        return self._team_id

    @team_id.setter
    def team_id(self, team_id):
        """Sets the team_id of this SeasonTeam.


        :param team_id: The team_id of this SeasonTeam.
        :type team_id: int
        """

        self._team_id = team_id

    @property
    def team_name(self):
        """Gets the team_name of this SeasonTeam.


        :return: The team_name of this SeasonTeam.
        :rtype: str
        """
        return self._team_name

    @team_name.setter
    def team_name(self, team_name):
        """Sets the team_name of this SeasonTeam.


        :param team_name: The team_name of this SeasonTeam.
        :type team_name: str
        """

        self._team_name = team_name

    @property
    def type(self):
        """Gets the type of this SeasonTeam.


        :return: The type of this SeasonTeam.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this SeasonTeam.


        :param type: The type of this SeasonTeam.
        :type type: str
        """

        self._type = type
