# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Lineup(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, game_id: int=None, game_minute: int=None, game_minute_extra: int=None, lineup_id: int=None, name: str=None, pitch_position_horizontal: int=None, pitch_position_vertical: int=None, player_id: int=None, position: str=None, replaced_player_id: int=None, replaced_player_name: str=None, team_id: int=None, type: str=None):
        """Lineup - a model defined in OpenAPI

        :param game_id: The game_id of this Lineup.
        :param game_minute: The game_minute of this Lineup.
        :param game_minute_extra: The game_minute_extra of this Lineup.
        :param lineup_id: The lineup_id of this Lineup.
        :param name: The name of this Lineup.
        :param pitch_position_horizontal: The pitch_position_horizontal of this Lineup.
        :param pitch_position_vertical: The pitch_position_vertical of this Lineup.
        :param player_id: The player_id of this Lineup.
        :param position: The position of this Lineup.
        :param replaced_player_id: The replaced_player_id of this Lineup.
        :param replaced_player_name: The replaced_player_name of this Lineup.
        :param team_id: The team_id of this Lineup.
        :param type: The type of this Lineup.
        """
        self.openapi_types = {
            'game_id': int,
            'game_minute': int,
            'game_minute_extra': int,
            'lineup_id': int,
            'name': str,
            'pitch_position_horizontal': int,
            'pitch_position_vertical': int,
            'player_id': int,
            'position': str,
            'replaced_player_id': int,
            'replaced_player_name': str,
            'team_id': int,
            'type': str
        }

        self.attribute_map = {
            'game_id': 'GameId',
            'game_minute': 'GameMinute',
            'game_minute_extra': 'GameMinuteExtra',
            'lineup_id': 'LineupId',
            'name': 'Name',
            'pitch_position_horizontal': 'PitchPositionHorizontal',
            'pitch_position_vertical': 'PitchPositionVertical',
            'player_id': 'PlayerId',
            'position': 'Position',
            'replaced_player_id': 'ReplacedPlayerId',
            'replaced_player_name': 'ReplacedPlayerName',
            'team_id': 'TeamId',
            'type': 'Type'
        }

        self._game_id = game_id
        self._game_minute = game_minute
        self._game_minute_extra = game_minute_extra
        self._lineup_id = lineup_id
        self._name = name
        self._pitch_position_horizontal = pitch_position_horizontal
        self._pitch_position_vertical = pitch_position_vertical
        self._player_id = player_id
        self._position = position
        self._replaced_player_id = replaced_player_id
        self._replaced_player_name = replaced_player_name
        self._team_id = team_id
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Lineup':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Lineup of this Lineup.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def game_id(self):
        """Gets the game_id of this Lineup.


        :return: The game_id of this Lineup.
        :rtype: int
        """
        return self._game_id

    @game_id.setter
    def game_id(self, game_id):
        """Sets the game_id of this Lineup.


        :param game_id: The game_id of this Lineup.
        :type game_id: int
        """

        self._game_id = game_id

    @property
    def game_minute(self):
        """Gets the game_minute of this Lineup.


        :return: The game_minute of this Lineup.
        :rtype: int
        """
        return self._game_minute

    @game_minute.setter
    def game_minute(self, game_minute):
        """Sets the game_minute of this Lineup.


        :param game_minute: The game_minute of this Lineup.
        :type game_minute: int
        """

        self._game_minute = game_minute

    @property
    def game_minute_extra(self):
        """Gets the game_minute_extra of this Lineup.


        :return: The game_minute_extra of this Lineup.
        :rtype: int
        """
        return self._game_minute_extra

    @game_minute_extra.setter
    def game_minute_extra(self, game_minute_extra):
        """Sets the game_minute_extra of this Lineup.


        :param game_minute_extra: The game_minute_extra of this Lineup.
        :type game_minute_extra: int
        """

        self._game_minute_extra = game_minute_extra

    @property
    def lineup_id(self):
        """Gets the lineup_id of this Lineup.


        :return: The lineup_id of this Lineup.
        :rtype: int
        """
        return self._lineup_id

    @lineup_id.setter
    def lineup_id(self, lineup_id):
        """Sets the lineup_id of this Lineup.


        :param lineup_id: The lineup_id of this Lineup.
        :type lineup_id: int
        """

        self._lineup_id = lineup_id

    @property
    def name(self):
        """Gets the name of this Lineup.


        :return: The name of this Lineup.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Lineup.


        :param name: The name of this Lineup.
        :type name: str
        """

        self._name = name

    @property
    def pitch_position_horizontal(self):
        """Gets the pitch_position_horizontal of this Lineup.


        :return: The pitch_position_horizontal of this Lineup.
        :rtype: int
        """
        return self._pitch_position_horizontal

    @pitch_position_horizontal.setter
    def pitch_position_horizontal(self, pitch_position_horizontal):
        """Sets the pitch_position_horizontal of this Lineup.


        :param pitch_position_horizontal: The pitch_position_horizontal of this Lineup.
        :type pitch_position_horizontal: int
        """

        self._pitch_position_horizontal = pitch_position_horizontal

    @property
    def pitch_position_vertical(self):
        """Gets the pitch_position_vertical of this Lineup.


        :return: The pitch_position_vertical of this Lineup.
        :rtype: int
        """
        return self._pitch_position_vertical

    @pitch_position_vertical.setter
    def pitch_position_vertical(self, pitch_position_vertical):
        """Sets the pitch_position_vertical of this Lineup.


        :param pitch_position_vertical: The pitch_position_vertical of this Lineup.
        :type pitch_position_vertical: int
        """

        self._pitch_position_vertical = pitch_position_vertical

    @property
    def player_id(self):
        """Gets the player_id of this Lineup.


        :return: The player_id of this Lineup.
        :rtype: int
        """
        return self._player_id

    @player_id.setter
    def player_id(self, player_id):
        """Sets the player_id of this Lineup.


        :param player_id: The player_id of this Lineup.
        :type player_id: int
        """

        self._player_id = player_id

    @property
    def position(self):
        """Gets the position of this Lineup.


        :return: The position of this Lineup.
        :rtype: str
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this Lineup.


        :param position: The position of this Lineup.
        :type position: str
        """

        self._position = position

    @property
    def replaced_player_id(self):
        """Gets the replaced_player_id of this Lineup.


        :return: The replaced_player_id of this Lineup.
        :rtype: int
        """
        return self._replaced_player_id

    @replaced_player_id.setter
    def replaced_player_id(self, replaced_player_id):
        """Sets the replaced_player_id of this Lineup.


        :param replaced_player_id: The replaced_player_id of this Lineup.
        :type replaced_player_id: int
        """

        self._replaced_player_id = replaced_player_id

    @property
    def replaced_player_name(self):
        """Gets the replaced_player_name of this Lineup.


        :return: The replaced_player_name of this Lineup.
        :rtype: str
        """
        return self._replaced_player_name

    @replaced_player_name.setter
    def replaced_player_name(self, replaced_player_name):
        """Sets the replaced_player_name of this Lineup.


        :param replaced_player_name: The replaced_player_name of this Lineup.
        :type replaced_player_name: str
        """

        self._replaced_player_name = replaced_player_name

    @property
    def team_id(self):
        """Gets the team_id of this Lineup.


        :return: The team_id of this Lineup.
        :rtype: int
        """
        return self._team_id

    @team_id.setter
    def team_id(self, team_id):
        """Sets the team_id of this Lineup.


        :param team_id: The team_id of this Lineup.
        :type team_id: int
        """

        self._team_id = team_id

    @property
    def type(self):
        """Gets the type of this Lineup.


        :return: The type of this Lineup.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Lineup.


        :param type: The type of this Lineup.
        :type type: str
        """

        self._type = type
