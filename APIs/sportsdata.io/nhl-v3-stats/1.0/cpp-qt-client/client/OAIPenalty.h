/**
 * NHL v3 Stats
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPenalty.h
 *
 * 
 */

#ifndef OAIPenalty_H
#define OAIPenalty_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPenalty : public OAIObject {
public:
    OAIPenalty();
    OAIPenalty(QString json);
    ~OAIPenalty() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getBenchPenaltyServedByPlayerId() const;
    void setBenchPenaltyServedByPlayerId(const qint32 &bench_penalty_served_by_player_id);
    bool is_bench_penalty_served_by_player_id_Set() const;
    bool is_bench_penalty_served_by_player_id_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    qint32 getDrawnByPlayerId() const;
    void setDrawnByPlayerId(const qint32 &drawn_by_player_id);
    bool is_drawn_by_player_id_Set() const;
    bool is_drawn_by_player_id_Valid() const;

    qint32 getDrawnByTeamId() const;
    void setDrawnByTeamId(const qint32 &drawn_by_team_id);
    bool is_drawn_by_team_id_Set() const;
    bool is_drawn_by_team_id_Valid() const;

    bool isIsBenchPenalty() const;
    void setIsBenchPenalty(const bool &is_bench_penalty);
    bool is_is_bench_penalty_Set() const;
    bool is_is_bench_penalty_Valid() const;

    qint32 getPenalizedPlayerId() const;
    void setPenalizedPlayerId(const qint32 &penalized_player_id);
    bool is_penalized_player_id_Set() const;
    bool is_penalized_player_id_Valid() const;

    qint32 getPenalizedTeamId() const;
    void setPenalizedTeamId(const qint32 &penalized_team_id);
    bool is_penalized_team_id_Set() const;
    bool is_penalized_team_id_Valid() const;

    qint32 getPenaltyId() const;
    void setPenaltyId(const qint32 &penalty_id);
    bool is_penalty_id_Set() const;
    bool is_penalty_id_Valid() const;

    qint32 getPenaltyMinutes() const;
    void setPenaltyMinutes(const qint32 &penalty_minutes);
    bool is_penalty_minutes_Set() const;
    bool is_penalty_minutes_Valid() const;

    qint32 getPeriodId() const;
    void setPeriodId(const qint32 &period_id);
    bool is_period_id_Set() const;
    bool is_period_id_Valid() const;

    qint32 getSequence() const;
    void setSequence(const qint32 &sequence);
    bool is_sequence_Set() const;
    bool is_sequence_Valid() const;

    qint32 getTimeRemainingMinutes() const;
    void setTimeRemainingMinutes(const qint32 &time_remaining_minutes);
    bool is_time_remaining_minutes_Set() const;
    bool is_time_remaining_minutes_Valid() const;

    qint32 getTimeRemainingSeconds() const;
    void setTimeRemainingSeconds(const qint32 &time_remaining_seconds);
    bool is_time_remaining_seconds_Set() const;
    bool is_time_remaining_seconds_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_bench_penalty_served_by_player_id;
    bool m_bench_penalty_served_by_player_id_isSet;
    bool m_bench_penalty_served_by_player_id_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    qint32 m_drawn_by_player_id;
    bool m_drawn_by_player_id_isSet;
    bool m_drawn_by_player_id_isValid;

    qint32 m_drawn_by_team_id;
    bool m_drawn_by_team_id_isSet;
    bool m_drawn_by_team_id_isValid;

    bool m_is_bench_penalty;
    bool m_is_bench_penalty_isSet;
    bool m_is_bench_penalty_isValid;

    qint32 m_penalized_player_id;
    bool m_penalized_player_id_isSet;
    bool m_penalized_player_id_isValid;

    qint32 m_penalized_team_id;
    bool m_penalized_team_id_isSet;
    bool m_penalized_team_id_isValid;

    qint32 m_penalty_id;
    bool m_penalty_id_isSet;
    bool m_penalty_id_isValid;

    qint32 m_penalty_minutes;
    bool m_penalty_minutes_isSet;
    bool m_penalty_minutes_isValid;

    qint32 m_period_id;
    bool m_period_id_isSet;
    bool m_period_id_isValid;

    qint32 m_sequence;
    bool m_sequence_isSet;
    bool m_sequence_isValid;

    qint32 m_time_remaining_minutes;
    bool m_time_remaining_minutes_isSet;
    bool m_time_remaining_minutes_isValid;

    qint32 m_time_remaining_seconds;
    bool m_time_remaining_seconds_isSet;
    bool m_time_remaining_seconds_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPenalty)

#endif // OAIPenalty_H
