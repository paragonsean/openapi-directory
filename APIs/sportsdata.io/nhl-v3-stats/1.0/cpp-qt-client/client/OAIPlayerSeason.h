/**
 * NHL v3 Stats
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPlayerSeason.h
 *
 * 
 */

#ifndef OAIPlayerSeason_H
#define OAIPlayerSeason_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPlayerSeason : public OAIObject {
public:
    OAIPlayerSeason();
    OAIPlayerSeason(QString json);
    ~OAIPlayerSeason() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAssists() const;
    void setAssists(const double &assists);
    bool is_assists_Set() const;
    bool is_assists_Valid() const;

    double getBenchPenaltyMinutes() const;
    void setBenchPenaltyMinutes(const double &bench_penalty_minutes);
    bool is_bench_penalty_minutes_Set() const;
    bool is_bench_penalty_minutes_Valid() const;

    double getBlocks() const;
    void setBlocks(const double &blocks);
    bool is_blocks_Set() const;
    bool is_blocks_Valid() const;

    double getEmptyNetGoals() const;
    void setEmptyNetGoals(const double &empty_net_goals);
    bool is_empty_net_goals_Set() const;
    bool is_empty_net_goals_Valid() const;

    double getFaceoffsLost() const;
    void setFaceoffsLost(const double &faceoffs_lost);
    bool is_faceoffs_lost_Set() const;
    bool is_faceoffs_lost_Valid() const;

    double getFaceoffsWon() const;
    void setFaceoffsWon(const double &faceoffs_won);
    bool is_faceoffs_won_Set() const;
    bool is_faceoffs_won_Valid() const;

    double getFantasyPoints() const;
    void setFantasyPoints(const double &fantasy_points);
    bool is_fantasy_points_Set() const;
    bool is_fantasy_points_Valid() const;

    double getFantasyPointsDraftKings() const;
    void setFantasyPointsDraftKings(const double &fantasy_points_draft_kings);
    bool is_fantasy_points_draft_kings_Set() const;
    bool is_fantasy_points_draft_kings_Valid() const;

    double getFantasyPointsFanDuel() const;
    void setFantasyPointsFanDuel(const double &fantasy_points_fan_duel);
    bool is_fantasy_points_fan_duel_Set() const;
    bool is_fantasy_points_fan_duel_Valid() const;

    double getFantasyPointsFantasyDraft() const;
    void setFantasyPointsFantasyDraft(const double &fantasy_points_fantasy_draft);
    bool is_fantasy_points_fantasy_draft_Set() const;
    bool is_fantasy_points_fantasy_draft_Valid() const;

    double getFantasyPointsYahoo() const;
    void setFantasyPointsYahoo(const double &fantasy_points_yahoo);
    bool is_fantasy_points_yahoo_Set() const;
    bool is_fantasy_points_yahoo_Valid() const;

    qint32 getGames() const;
    void setGames(const qint32 &games);
    bool is_games_Set() const;
    bool is_games_Valid() const;

    double getGiveaways() const;
    void setGiveaways(const double &giveaways);
    bool is_giveaways_Set() const;
    bool is_giveaways_Valid() const;

    qint32 getGlobalTeamId() const;
    void setGlobalTeamId(const qint32 &global_team_id);
    bool is_global_team_id_Set() const;
    bool is_global_team_id_Valid() const;

    double getGoals() const;
    void setGoals(const double &goals);
    bool is_goals_Set() const;
    bool is_goals_Valid() const;

    double getGoaltendingGoalsAgainst() const;
    void setGoaltendingGoalsAgainst(const double &goaltending_goals_against);
    bool is_goaltending_goals_against_Set() const;
    bool is_goaltending_goals_against_Valid() const;

    double getGoaltendingLosses() const;
    void setGoaltendingLosses(const double &goaltending_losses);
    bool is_goaltending_losses_Set() const;
    bool is_goaltending_losses_Valid() const;

    qint32 getGoaltendingMinutes() const;
    void setGoaltendingMinutes(const qint32 &goaltending_minutes);
    bool is_goaltending_minutes_Set() const;
    bool is_goaltending_minutes_Valid() const;

    double getGoaltendingOvertimeLosses() const;
    void setGoaltendingOvertimeLosses(const double &goaltending_overtime_losses);
    bool is_goaltending_overtime_losses_Set() const;
    bool is_goaltending_overtime_losses_Valid() const;

    double getGoaltendingSaves() const;
    void setGoaltendingSaves(const double &goaltending_saves);
    bool is_goaltending_saves_Set() const;
    bool is_goaltending_saves_Valid() const;

    qint32 getGoaltendingSeconds() const;
    void setGoaltendingSeconds(const qint32 &goaltending_seconds);
    bool is_goaltending_seconds_Set() const;
    bool is_goaltending_seconds_Valid() const;

    double getGoaltendingShotsAgainst() const;
    void setGoaltendingShotsAgainst(const double &goaltending_shots_against);
    bool is_goaltending_shots_against_Set() const;
    bool is_goaltending_shots_against_Valid() const;

    double getGoaltendingShutouts() const;
    void setGoaltendingShutouts(const double &goaltending_shutouts);
    bool is_goaltending_shutouts_Set() const;
    bool is_goaltending_shutouts_Valid() const;

    double getGoaltendingWins() const;
    void setGoaltendingWins(const double &goaltending_wins);
    bool is_goaltending_wins_Set() const;
    bool is_goaltending_wins_Valid() const;

    double getHatTricks() const;
    void setHatTricks(const double &hat_tricks);
    bool is_hat_tricks_Set() const;
    bool is_hat_tricks_Valid() const;

    double getHits() const;
    void setHits(const double &hits);
    bool is_hits_Set() const;
    bool is_hits_Valid() const;

    qint32 getMinutes() const;
    void setMinutes(const qint32 &minutes);
    bool is_minutes_Set() const;
    bool is_minutes_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    double getPenaltyMinutes() const;
    void setPenaltyMinutes(const double &penalty_minutes);
    bool is_penalty_minutes_Set() const;
    bool is_penalty_minutes_Valid() const;

    qint32 getPlayerId() const;
    void setPlayerId(const qint32 &player_id);
    bool is_player_id_Set() const;
    bool is_player_id_Valid() const;

    double getPlusMinus() const;
    void setPlusMinus(const double &plus_minus);
    bool is_plus_minus_Set() const;
    bool is_plus_minus_Valid() const;

    QString getPosition() const;
    void setPosition(const QString &position);
    bool is_position_Set() const;
    bool is_position_Valid() const;

    double getPowerPlayAssists() const;
    void setPowerPlayAssists(const double &power_play_assists);
    bool is_power_play_assists_Set() const;
    bool is_power_play_assists_Valid() const;

    double getPowerPlayGoals() const;
    void setPowerPlayGoals(const double &power_play_goals);
    bool is_power_play_goals_Set() const;
    bool is_power_play_goals_Valid() const;

    qint32 getSeason() const;
    void setSeason(const qint32 &season);
    bool is_season_Set() const;
    bool is_season_Valid() const;

    qint32 getSeasonType() const;
    void setSeasonType(const qint32 &season_type);
    bool is_season_type_Set() const;
    bool is_season_type_Valid() const;

    qint32 getSeconds() const;
    void setSeconds(const qint32 &seconds);
    bool is_seconds_Set() const;
    bool is_seconds_Valid() const;

    double getShifts() const;
    void setShifts(const double &shifts);
    bool is_shifts_Set() const;
    bool is_shifts_Valid() const;

    double getShootoutGoals() const;
    void setShootoutGoals(const double &shootout_goals);
    bool is_shootout_goals_Set() const;
    bool is_shootout_goals_Valid() const;

    double getShortHandedAssists() const;
    void setShortHandedAssists(const double &short_handed_assists);
    bool is_short_handed_assists_Set() const;
    bool is_short_handed_assists_Valid() const;

    double getShortHandedGoals() const;
    void setShortHandedGoals(const double &short_handed_goals);
    bool is_short_handed_goals_Set() const;
    bool is_short_handed_goals_Valid() const;

    double getShotsOnGoal() const;
    void setShotsOnGoal(const double &shots_on_goal);
    bool is_shots_on_goal_Set() const;
    bool is_shots_on_goal_Valid() const;

    qint32 getStarted() const;
    void setStarted(const qint32 &started);
    bool is_started_Set() const;
    bool is_started_Valid() const;

    qint32 getStatId() const;
    void setStatId(const qint32 &stat_id);
    bool is_stat_id_Set() const;
    bool is_stat_id_Valid() const;

    double getTakeaways() const;
    void setTakeaways(const double &takeaways);
    bool is_takeaways_Set() const;
    bool is_takeaways_Valid() const;

    QString getTeam() const;
    void setTeam(const QString &team);
    bool is_team_Set() const;
    bool is_team_Valid() const;

    qint32 getTeamId() const;
    void setTeamId(const qint32 &team_id);
    bool is_team_id_Set() const;
    bool is_team_id_Valid() const;

    QString getUpdated() const;
    void setUpdated(const QString &updated);
    bool is_updated_Set() const;
    bool is_updated_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_assists;
    bool m_assists_isSet;
    bool m_assists_isValid;

    double m_bench_penalty_minutes;
    bool m_bench_penalty_minutes_isSet;
    bool m_bench_penalty_minutes_isValid;

    double m_blocks;
    bool m_blocks_isSet;
    bool m_blocks_isValid;

    double m_empty_net_goals;
    bool m_empty_net_goals_isSet;
    bool m_empty_net_goals_isValid;

    double m_faceoffs_lost;
    bool m_faceoffs_lost_isSet;
    bool m_faceoffs_lost_isValid;

    double m_faceoffs_won;
    bool m_faceoffs_won_isSet;
    bool m_faceoffs_won_isValid;

    double m_fantasy_points;
    bool m_fantasy_points_isSet;
    bool m_fantasy_points_isValid;

    double m_fantasy_points_draft_kings;
    bool m_fantasy_points_draft_kings_isSet;
    bool m_fantasy_points_draft_kings_isValid;

    double m_fantasy_points_fan_duel;
    bool m_fantasy_points_fan_duel_isSet;
    bool m_fantasy_points_fan_duel_isValid;

    double m_fantasy_points_fantasy_draft;
    bool m_fantasy_points_fantasy_draft_isSet;
    bool m_fantasy_points_fantasy_draft_isValid;

    double m_fantasy_points_yahoo;
    bool m_fantasy_points_yahoo_isSet;
    bool m_fantasy_points_yahoo_isValid;

    qint32 m_games;
    bool m_games_isSet;
    bool m_games_isValid;

    double m_giveaways;
    bool m_giveaways_isSet;
    bool m_giveaways_isValid;

    qint32 m_global_team_id;
    bool m_global_team_id_isSet;
    bool m_global_team_id_isValid;

    double m_goals;
    bool m_goals_isSet;
    bool m_goals_isValid;

    double m_goaltending_goals_against;
    bool m_goaltending_goals_against_isSet;
    bool m_goaltending_goals_against_isValid;

    double m_goaltending_losses;
    bool m_goaltending_losses_isSet;
    bool m_goaltending_losses_isValid;

    qint32 m_goaltending_minutes;
    bool m_goaltending_minutes_isSet;
    bool m_goaltending_minutes_isValid;

    double m_goaltending_overtime_losses;
    bool m_goaltending_overtime_losses_isSet;
    bool m_goaltending_overtime_losses_isValid;

    double m_goaltending_saves;
    bool m_goaltending_saves_isSet;
    bool m_goaltending_saves_isValid;

    qint32 m_goaltending_seconds;
    bool m_goaltending_seconds_isSet;
    bool m_goaltending_seconds_isValid;

    double m_goaltending_shots_against;
    bool m_goaltending_shots_against_isSet;
    bool m_goaltending_shots_against_isValid;

    double m_goaltending_shutouts;
    bool m_goaltending_shutouts_isSet;
    bool m_goaltending_shutouts_isValid;

    double m_goaltending_wins;
    bool m_goaltending_wins_isSet;
    bool m_goaltending_wins_isValid;

    double m_hat_tricks;
    bool m_hat_tricks_isSet;
    bool m_hat_tricks_isValid;

    double m_hits;
    bool m_hits_isSet;
    bool m_hits_isValid;

    qint32 m_minutes;
    bool m_minutes_isSet;
    bool m_minutes_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    double m_penalty_minutes;
    bool m_penalty_minutes_isSet;
    bool m_penalty_minutes_isValid;

    qint32 m_player_id;
    bool m_player_id_isSet;
    bool m_player_id_isValid;

    double m_plus_minus;
    bool m_plus_minus_isSet;
    bool m_plus_minus_isValid;

    QString m_position;
    bool m_position_isSet;
    bool m_position_isValid;

    double m_power_play_assists;
    bool m_power_play_assists_isSet;
    bool m_power_play_assists_isValid;

    double m_power_play_goals;
    bool m_power_play_goals_isSet;
    bool m_power_play_goals_isValid;

    qint32 m_season;
    bool m_season_isSet;
    bool m_season_isValid;

    qint32 m_season_type;
    bool m_season_type_isSet;
    bool m_season_type_isValid;

    qint32 m_seconds;
    bool m_seconds_isSet;
    bool m_seconds_isValid;

    double m_shifts;
    bool m_shifts_isSet;
    bool m_shifts_isValid;

    double m_shootout_goals;
    bool m_shootout_goals_isSet;
    bool m_shootout_goals_isValid;

    double m_short_handed_assists;
    bool m_short_handed_assists_isSet;
    bool m_short_handed_assists_isValid;

    double m_short_handed_goals;
    bool m_short_handed_goals_isSet;
    bool m_short_handed_goals_isValid;

    double m_shots_on_goal;
    bool m_shots_on_goal_isSet;
    bool m_shots_on_goal_isValid;

    qint32 m_started;
    bool m_started_isSet;
    bool m_started_isValid;

    qint32 m_stat_id;
    bool m_stat_id_isSet;
    bool m_stat_id_isValid;

    double m_takeaways;
    bool m_takeaways_isSet;
    bool m_takeaways_isValid;

    QString m_team;
    bool m_team_isSet;
    bool m_team_isValid;

    qint32 m_team_id;
    bool m_team_id_isSet;
    bool m_team_id_isValid;

    QString m_updated;
    bool m_updated_isSet;
    bool m_updated_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPlayerSeason)

#endif // OAIPlayerSeason_H
