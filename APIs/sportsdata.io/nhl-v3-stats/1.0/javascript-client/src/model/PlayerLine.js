/**
 * NHL v3 Stats
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PlayerLine model module.
 * @module model/PlayerLine
 * @version 1.0
 */
class PlayerLine {
    /**
     * Constructs a new <code>PlayerLine</code>.
     * @alias module:model/PlayerLine
     */
    constructor() { 
        
        PlayerLine.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PlayerLine</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PlayerLine} obj Optional instance to populate.
     * @return {module:model/PlayerLine} The populated <code>PlayerLine</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PlayerLine();

            if (data.hasOwnProperty('LineNumber')) {
                obj['LineNumber'] = ApiClient.convertToType(data['LineNumber'], 'Number');
            }
            if (data.hasOwnProperty('LineType')) {
                obj['LineType'] = ApiClient.convertToType(data['LineType'], 'String');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('PlayerID')) {
                obj['PlayerID'] = ApiClient.convertToType(data['PlayerID'], 'Number');
            }
            if (data.hasOwnProperty('Position')) {
                obj['Position'] = ApiClient.convertToType(data['Position'], 'String');
            }
            if (data.hasOwnProperty('Shoots')) {
                obj['Shoots'] = ApiClient.convertToType(data['Shoots'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PlayerLine</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PlayerLine</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['LineType'] && !(typeof data['LineType'] === 'string' || data['LineType'] instanceof String)) {
            throw new Error("Expected the field `LineType` to be a primitive type in the JSON string but got " + data['LineType']);
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // ensure the json data is a string
        if (data['Position'] && !(typeof data['Position'] === 'string' || data['Position'] instanceof String)) {
            throw new Error("Expected the field `Position` to be a primitive type in the JSON string but got " + data['Position']);
        }
        // ensure the json data is a string
        if (data['Shoots'] && !(typeof data['Shoots'] === 'string' || data['Shoots'] instanceof String)) {
            throw new Error("Expected the field `Shoots` to be a primitive type in the JSON string but got " + data['Shoots']);
        }

        return true;
    }


}



/**
 * @member {Number} LineNumber
 */
PlayerLine.prototype['LineNumber'] = undefined;

/**
 * @member {String} LineType
 */
PlayerLine.prototype['LineType'] = undefined;

/**
 * @member {String} Name
 */
PlayerLine.prototype['Name'] = undefined;

/**
 * @member {Number} PlayerID
 */
PlayerLine.prototype['PlayerID'] = undefined;

/**
 * @member {String} Position
 */
PlayerLine.prototype['Position'] = undefined;

/**
 * @member {String} Shoots
 */
PlayerLine.prototype['Shoots'] = undefined;






export default PlayerLine;

