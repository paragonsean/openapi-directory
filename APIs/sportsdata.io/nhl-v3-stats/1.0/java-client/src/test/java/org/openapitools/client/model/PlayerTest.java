/*
 * NHL v3 Stats
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Player
 */
public class PlayerTest {
    private final Player model = new Player();

    /**
     * Model tests for Player
     */
    @Test
    public void testPlayer() {
        // TODO: test Player
    }

    /**
     * Test the property 'birthCity'
     */
    @Test
    public void birthCityTest() {
        // TODO: test birthCity
    }

    /**
     * Test the property 'birthDate'
     */
    @Test
    public void birthDateTest() {
        // TODO: test birthDate
    }

    /**
     * Test the property 'birthState'
     */
    @Test
    public void birthStateTest() {
        // TODO: test birthState
    }

    /**
     * Test the property 'catches'
     */
    @Test
    public void catchesTest() {
        // TODO: test catches
    }

    /**
     * Test the property 'depthChartOrder'
     */
    @Test
    public void depthChartOrderTest() {
        // TODO: test depthChartOrder
    }

    /**
     * Test the property 'depthChartPosition'
     */
    @Test
    public void depthChartPositionTest() {
        // TODO: test depthChartPosition
    }

    /**
     * Test the property 'draftKingsName'
     */
    @Test
    public void draftKingsNameTest() {
        // TODO: test draftKingsName
    }

    /**
     * Test the property 'draftKingsPlayerID'
     */
    @Test
    public void draftKingsPlayerIDTest() {
        // TODO: test draftKingsPlayerID
    }

    /**
     * Test the property 'fanDuelName'
     */
    @Test
    public void fanDuelNameTest() {
        // TODO: test fanDuelName
    }

    /**
     * Test the property 'fanDuelPlayerID'
     */
    @Test
    public void fanDuelPlayerIDTest() {
        // TODO: test fanDuelPlayerID
    }

    /**
     * Test the property 'fantasyAlarmPlayerID'
     */
    @Test
    public void fantasyAlarmPlayerIDTest() {
        // TODO: test fantasyAlarmPlayerID
    }

    /**
     * Test the property 'fantasyDraftName'
     */
    @Test
    public void fantasyDraftNameTest() {
        // TODO: test fantasyDraftName
    }

    /**
     * Test the property 'fantasyDraftPlayerID'
     */
    @Test
    public void fantasyDraftPlayerIDTest() {
        // TODO: test fantasyDraftPlayerID
    }

    /**
     * Test the property 'firstName'
     */
    @Test
    public void firstNameTest() {
        // TODO: test firstName
    }

    /**
     * Test the property 'globalTeamID'
     */
    @Test
    public void globalTeamIDTest() {
        // TODO: test globalTeamID
    }

    /**
     * Test the property 'height'
     */
    @Test
    public void heightTest() {
        // TODO: test height
    }

    /**
     * Test the property 'injuryBodyPart'
     */
    @Test
    public void injuryBodyPartTest() {
        // TODO: test injuryBodyPart
    }

    /**
     * Test the property 'injuryNotes'
     */
    @Test
    public void injuryNotesTest() {
        // TODO: test injuryNotes
    }

    /**
     * Test the property 'injuryStartDate'
     */
    @Test
    public void injuryStartDateTest() {
        // TODO: test injuryStartDate
    }

    /**
     * Test the property 'injuryStatus'
     */
    @Test
    public void injuryStatusTest() {
        // TODO: test injuryStatus
    }

    /**
     * Test the property 'jersey'
     */
    @Test
    public void jerseyTest() {
        // TODO: test jersey
    }

    /**
     * Test the property 'lastName'
     */
    @Test
    public void lastNameTest() {
        // TODO: test lastName
    }

    /**
     * Test the property 'photoUrl'
     */
    @Test
    public void photoUrlTest() {
        // TODO: test photoUrl
    }

    /**
     * Test the property 'playerID'
     */
    @Test
    public void playerIDTest() {
        // TODO: test playerID
    }

    /**
     * Test the property 'position'
     */
    @Test
    public void positionTest() {
        // TODO: test position
    }

    /**
     * Test the property 'rotoWirePlayerID'
     */
    @Test
    public void rotoWirePlayerIDTest() {
        // TODO: test rotoWirePlayerID
    }

    /**
     * Test the property 'rotoworldPlayerID'
     */
    @Test
    public void rotoworldPlayerIDTest() {
        // TODO: test rotoworldPlayerID
    }

    /**
     * Test the property 'shoots'
     */
    @Test
    public void shootsTest() {
        // TODO: test shoots
    }

    /**
     * Test the property 'sportRadarPlayerID'
     */
    @Test
    public void sportRadarPlayerIDTest() {
        // TODO: test sportRadarPlayerID
    }

    /**
     * Test the property 'sportsDirectPlayerID'
     */
    @Test
    public void sportsDirectPlayerIDTest() {
        // TODO: test sportsDirectPlayerID
    }

    /**
     * Test the property 'statsPlayerID'
     */
    @Test
    public void statsPlayerIDTest() {
        // TODO: test statsPlayerID
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'team'
     */
    @Test
    public void teamTest() {
        // TODO: test team
    }

    /**
     * Test the property 'teamID'
     */
    @Test
    public void teamIDTest() {
        // TODO: test teamID
    }

    /**
     * Test the property 'usaTodayHeadshotNoBackgroundUpdated'
     */
    @Test
    public void usaTodayHeadshotNoBackgroundUpdatedTest() {
        // TODO: test usaTodayHeadshotNoBackgroundUpdated
    }

    /**
     * Test the property 'usaTodayHeadshotNoBackgroundUrl'
     */
    @Test
    public void usaTodayHeadshotNoBackgroundUrlTest() {
        // TODO: test usaTodayHeadshotNoBackgroundUrl
    }

    /**
     * Test the property 'usaTodayHeadshotUpdated'
     */
    @Test
    public void usaTodayHeadshotUpdatedTest() {
        // TODO: test usaTodayHeadshotUpdated
    }

    /**
     * Test the property 'usaTodayHeadshotUrl'
     */
    @Test
    public void usaTodayHeadshotUrlTest() {
        // TODO: test usaTodayHeadshotUrl
    }

    /**
     * Test the property 'usaTodayPlayerID'
     */
    @Test
    public void usaTodayPlayerIDTest() {
        // TODO: test usaTodayPlayerID
    }

    /**
     * Test the property 'weight'
     */
    @Test
    public void weightTest() {
        // TODO: test weight
    }

    /**
     * Test the property 'xmlTeamPlayerID'
     */
    @Test
    public void xmlTeamPlayerIDTest() {
        // TODO: test xmlTeamPlayerID
    }

    /**
     * Test the property 'yahooName'
     */
    @Test
    public void yahooNameTest() {
        // TODO: test yahooName
    }

    /**
     * Test the property 'yahooPlayerID'
     */
    @Test
    public void yahooPlayerIDTest() {
        // TODO: test yahooPlayerID
    }

}
