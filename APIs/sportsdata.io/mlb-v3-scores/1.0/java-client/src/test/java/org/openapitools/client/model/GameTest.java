/*
 * MLB v3 Scores
 * MLB scores API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Inning;
import org.openapitools.client.model.Series;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Game
 */
public class GameTest {
    private final Game model = new Game();

    /**
     * Model tests for Game
     */
    @Test
    public void testGame() {
        // TODO: test Game
    }

    /**
     * Test the property 'attendance'
     */
    @Test
    public void attendanceTest() {
        // TODO: test attendance
    }

    /**
     * Test the property 'awayRotationNumber'
     */
    @Test
    public void awayRotationNumberTest() {
        // TODO: test awayRotationNumber
    }

    /**
     * Test the property 'awayTeam'
     */
    @Test
    public void awayTeamTest() {
        // TODO: test awayTeam
    }

    /**
     * Test the property 'awayTeamErrors'
     */
    @Test
    public void awayTeamErrorsTest() {
        // TODO: test awayTeamErrors
    }

    /**
     * Test the property 'awayTeamHits'
     */
    @Test
    public void awayTeamHitsTest() {
        // TODO: test awayTeamHits
    }

    /**
     * Test the property 'awayTeamID'
     */
    @Test
    public void awayTeamIDTest() {
        // TODO: test awayTeamID
    }

    /**
     * Test the property 'awayTeamMoneyLine'
     */
    @Test
    public void awayTeamMoneyLineTest() {
        // TODO: test awayTeamMoneyLine
    }

    /**
     * Test the property 'awayTeamProbablePitcherID'
     */
    @Test
    public void awayTeamProbablePitcherIDTest() {
        // TODO: test awayTeamProbablePitcherID
    }

    /**
     * Test the property 'awayTeamRuns'
     */
    @Test
    public void awayTeamRunsTest() {
        // TODO: test awayTeamRuns
    }

    /**
     * Test the property 'awayTeamStartingPitcher'
     */
    @Test
    public void awayTeamStartingPitcherTest() {
        // TODO: test awayTeamStartingPitcher
    }

    /**
     * Test the property 'awayTeamStartingPitcherID'
     */
    @Test
    public void awayTeamStartingPitcherIDTest() {
        // TODO: test awayTeamStartingPitcherID
    }

    /**
     * Test the property 'balls'
     */
    @Test
    public void ballsTest() {
        // TODO: test balls
    }

    /**
     * Test the property 'channel'
     */
    @Test
    public void channelTest() {
        // TODO: test channel
    }

    /**
     * Test the property 'currentHitter'
     */
    @Test
    public void currentHitterTest() {
        // TODO: test currentHitter
    }

    /**
     * Test the property 'currentHitterID'
     */
    @Test
    public void currentHitterIDTest() {
        // TODO: test currentHitterID
    }

    /**
     * Test the property 'currentHittingTeamID'
     */
    @Test
    public void currentHittingTeamIDTest() {
        // TODO: test currentHittingTeamID
    }

    /**
     * Test the property 'currentPitcher'
     */
    @Test
    public void currentPitcherTest() {
        // TODO: test currentPitcher
    }

    /**
     * Test the property 'currentPitcherID'
     */
    @Test
    public void currentPitcherIDTest() {
        // TODO: test currentPitcherID
    }

    /**
     * Test the property 'currentPitchingTeamID'
     */
    @Test
    public void currentPitchingTeamIDTest() {
        // TODO: test currentPitchingTeamID
    }

    /**
     * Test the property 'dateTime'
     */
    @Test
    public void dateTimeTest() {
        // TODO: test dateTime
    }

    /**
     * Test the property 'dateTimeUTC'
     */
    @Test
    public void dateTimeUTCTest() {
        // TODO: test dateTimeUTC
    }

    /**
     * Test the property 'day'
     */
    @Test
    public void dayTest() {
        // TODO: test day
    }

    /**
     * Test the property 'dueUpHitterID1'
     */
    @Test
    public void dueUpHitterID1Test() {
        // TODO: test dueUpHitterID1
    }

    /**
     * Test the property 'dueUpHitterID2'
     */
    @Test
    public void dueUpHitterID2Test() {
        // TODO: test dueUpHitterID2
    }

    /**
     * Test the property 'dueUpHitterID3'
     */
    @Test
    public void dueUpHitterID3Test() {
        // TODO: test dueUpHitterID3
    }

    /**
     * Test the property 'forecastDescription'
     */
    @Test
    public void forecastDescriptionTest() {
        // TODO: test forecastDescription
    }

    /**
     * Test the property 'forecastTempHigh'
     */
    @Test
    public void forecastTempHighTest() {
        // TODO: test forecastTempHigh
    }

    /**
     * Test the property 'forecastTempLow'
     */
    @Test
    public void forecastTempLowTest() {
        // TODO: test forecastTempLow
    }

    /**
     * Test the property 'forecastWindChill'
     */
    @Test
    public void forecastWindChillTest() {
        // TODO: test forecastWindChill
    }

    /**
     * Test the property 'forecastWindDirection'
     */
    @Test
    public void forecastWindDirectionTest() {
        // TODO: test forecastWindDirection
    }

    /**
     * Test the property 'forecastWindSpeed'
     */
    @Test
    public void forecastWindSpeedTest() {
        // TODO: test forecastWindSpeed
    }

    /**
     * Test the property 'gameEndDateTime'
     */
    @Test
    public void gameEndDateTimeTest() {
        // TODO: test gameEndDateTime
    }

    /**
     * Test the property 'gameID'
     */
    @Test
    public void gameIDTest() {
        // TODO: test gameID
    }

    /**
     * Test the property 'globalAwayTeamID'
     */
    @Test
    public void globalAwayTeamIDTest() {
        // TODO: test globalAwayTeamID
    }

    /**
     * Test the property 'globalGameID'
     */
    @Test
    public void globalGameIDTest() {
        // TODO: test globalGameID
    }

    /**
     * Test the property 'globalHomeTeamID'
     */
    @Test
    public void globalHomeTeamIDTest() {
        // TODO: test globalHomeTeamID
    }

    /**
     * Test the property 'homeRotationNumber'
     */
    @Test
    public void homeRotationNumberTest() {
        // TODO: test homeRotationNumber
    }

    /**
     * Test the property 'homeTeam'
     */
    @Test
    public void homeTeamTest() {
        // TODO: test homeTeam
    }

    /**
     * Test the property 'homeTeamErrors'
     */
    @Test
    public void homeTeamErrorsTest() {
        // TODO: test homeTeamErrors
    }

    /**
     * Test the property 'homeTeamHits'
     */
    @Test
    public void homeTeamHitsTest() {
        // TODO: test homeTeamHits
    }

    /**
     * Test the property 'homeTeamID'
     */
    @Test
    public void homeTeamIDTest() {
        // TODO: test homeTeamID
    }

    /**
     * Test the property 'homeTeamMoneyLine'
     */
    @Test
    public void homeTeamMoneyLineTest() {
        // TODO: test homeTeamMoneyLine
    }

    /**
     * Test the property 'homeTeamProbablePitcherID'
     */
    @Test
    public void homeTeamProbablePitcherIDTest() {
        // TODO: test homeTeamProbablePitcherID
    }

    /**
     * Test the property 'homeTeamRuns'
     */
    @Test
    public void homeTeamRunsTest() {
        // TODO: test homeTeamRuns
    }

    /**
     * Test the property 'homeTeamStartingPitcher'
     */
    @Test
    public void homeTeamStartingPitcherTest() {
        // TODO: test homeTeamStartingPitcher
    }

    /**
     * Test the property 'homeTeamStartingPitcherID'
     */
    @Test
    public void homeTeamStartingPitcherIDTest() {
        // TODO: test homeTeamStartingPitcherID
    }

    /**
     * Test the property 'inning'
     */
    @Test
    public void inningTest() {
        // TODO: test inning
    }

    /**
     * Test the property 'inningDescription'
     */
    @Test
    public void inningDescriptionTest() {
        // TODO: test inningDescription
    }

    /**
     * Test the property 'inningHalf'
     */
    @Test
    public void inningHalfTest() {
        // TODO: test inningHalf
    }

    /**
     * Test the property 'innings'
     */
    @Test
    public void inningsTest() {
        // TODO: test innings
    }

    /**
     * Test the property 'isClosed'
     */
    @Test
    public void isClosedTest() {
        // TODO: test isClosed
    }

    /**
     * Test the property 'lastPlay'
     */
    @Test
    public void lastPlayTest() {
        // TODO: test lastPlay
    }

    /**
     * Test the property 'losingPitcher'
     */
    @Test
    public void losingPitcherTest() {
        // TODO: test losingPitcher
    }

    /**
     * Test the property 'losingPitcherID'
     */
    @Test
    public void losingPitcherIDTest() {
        // TODO: test losingPitcherID
    }

    /**
     * Test the property 'neutralVenue'
     */
    @Test
    public void neutralVenueTest() {
        // TODO: test neutralVenue
    }

    /**
     * Test the property 'outs'
     */
    @Test
    public void outsTest() {
        // TODO: test outs
    }

    /**
     * Test the property 'overPayout'
     */
    @Test
    public void overPayoutTest() {
        // TODO: test overPayout
    }

    /**
     * Test the property 'overUnder'
     */
    @Test
    public void overUnderTest() {
        // TODO: test overUnder
    }

    /**
     * Test the property 'pointSpread'
     */
    @Test
    public void pointSpreadTest() {
        // TODO: test pointSpread
    }

    /**
     * Test the property 'pointSpreadAwayTeamMoneyLine'
     */
    @Test
    public void pointSpreadAwayTeamMoneyLineTest() {
        // TODO: test pointSpreadAwayTeamMoneyLine
    }

    /**
     * Test the property 'pointSpreadHomeTeamMoneyLine'
     */
    @Test
    public void pointSpreadHomeTeamMoneyLineTest() {
        // TODO: test pointSpreadHomeTeamMoneyLine
    }

    /**
     * Test the property 'rescheduledFromGameID'
     */
    @Test
    public void rescheduledFromGameIDTest() {
        // TODO: test rescheduledFromGameID
    }

    /**
     * Test the property 'rescheduledGameID'
     */
    @Test
    public void rescheduledGameIDTest() {
        // TODO: test rescheduledGameID
    }

    /**
     * Test the property 'runnerOnFirst'
     */
    @Test
    public void runnerOnFirstTest() {
        // TODO: test runnerOnFirst
    }

    /**
     * Test the property 'runnerOnSecond'
     */
    @Test
    public void runnerOnSecondTest() {
        // TODO: test runnerOnSecond
    }

    /**
     * Test the property 'runnerOnThird'
     */
    @Test
    public void runnerOnThirdTest() {
        // TODO: test runnerOnThird
    }

    /**
     * Test the property 'savingPitcher'
     */
    @Test
    public void savingPitcherTest() {
        // TODO: test savingPitcher
    }

    /**
     * Test the property 'savingPitcherID'
     */
    @Test
    public void savingPitcherIDTest() {
        // TODO: test savingPitcherID
    }

    /**
     * Test the property 'season'
     */
    @Test
    public void seasonTest() {
        // TODO: test season
    }

    /**
     * Test the property 'seasonType'
     */
    @Test
    public void seasonTypeTest() {
        // TODO: test seasonType
    }

    /**
     * Test the property 'seriesInfo'
     */
    @Test
    public void seriesInfoTest() {
        // TODO: test seriesInfo
    }

    /**
     * Test the property 'stadiumID'
     */
    @Test
    public void stadiumIDTest() {
        // TODO: test stadiumID
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'strikes'
     */
    @Test
    public void strikesTest() {
        // TODO: test strikes
    }

    /**
     * Test the property 'underPayout'
     */
    @Test
    public void underPayoutTest() {
        // TODO: test underPayout
    }

    /**
     * Test the property 'updated'
     */
    @Test
    public void updatedTest() {
        // TODO: test updated
    }

    /**
     * Test the property 'winningPitcher'
     */
    @Test
    public void winningPitcherTest() {
        // TODO: test winningPitcher
    }

    /**
     * Test the property 'winningPitcherID'
     */
    @Test
    public void winningPitcherIDTest() {
        // TODO: test winningPitcherID
    }

}
