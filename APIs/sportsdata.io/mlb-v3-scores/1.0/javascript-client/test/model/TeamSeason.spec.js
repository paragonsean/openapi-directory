/**
 * MLB v3 Scores
 * MLB scores API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MlbV3Scores);
  }
}(this, function(expect, MlbV3Scores) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MlbV3Scores.TeamSeason();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TeamSeason', function() {
    it('should create an instance of TeamSeason', function() {
      // uncomment below and update the code to test TeamSeason
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be.a(MlbV3Scores.TeamSeason);
    });

    it('should have the property atBats (base name: "AtBats")', function() {
      // uncomment below and update the code to test the property atBats
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property ballsInPlay (base name: "BallsInPlay")', function() {
      // uncomment below and update the code to test the property ballsInPlay
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property battingAverage (base name: "BattingAverage")', function() {
      // uncomment below and update the code to test the property battingAverage
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property battingAverageOnBallsInPlay (base name: "BattingAverageOnBallsInPlay")', function() {
      // uncomment below and update the code to test the property battingAverageOnBallsInPlay
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property battingOrderConfirmed (base name: "BattingOrderConfirmed")', function() {
      // uncomment below and update the code to test the property battingOrderConfirmed
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property caughtStealing (base name: "CaughtStealing")', function() {
      // uncomment below and update the code to test the property caughtStealing
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property doublePlays (base name: "DoublePlays")', function() {
      // uncomment below and update the code to test the property doublePlays
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property doubles (base name: "Doubles")', function() {
      // uncomment below and update the code to test the property doubles
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property earnedRunAverage (base name: "EarnedRunAverage")', function() {
      // uncomment below and update the code to test the property earnedRunAverage
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property errors (base name: "Errors")', function() {
      // uncomment below and update the code to test the property errors
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property fantasyPoints (base name: "FantasyPoints")', function() {
      // uncomment below and update the code to test the property fantasyPoints
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property fantasyPointsBatting (base name: "FantasyPointsBatting")', function() {
      // uncomment below and update the code to test the property fantasyPointsBatting
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property fantasyPointsDraftKings (base name: "FantasyPointsDraftKings")', function() {
      // uncomment below and update the code to test the property fantasyPointsDraftKings
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property fantasyPointsFanDuel (base name: "FantasyPointsFanDuel")', function() {
      // uncomment below and update the code to test the property fantasyPointsFanDuel
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property fantasyPointsFantasyDraft (base name: "FantasyPointsFantasyDraft")', function() {
      // uncomment below and update the code to test the property fantasyPointsFantasyDraft
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property fantasyPointsPitching (base name: "FantasyPointsPitching")', function() {
      // uncomment below and update the code to test the property fantasyPointsPitching
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property fantasyPointsYahoo (base name: "FantasyPointsYahoo")', function() {
      // uncomment below and update the code to test the property fantasyPointsYahoo
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property fieldingIndependentPitching (base name: "FieldingIndependentPitching")', function() {
      // uncomment below and update the code to test the property fieldingIndependentPitching
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property flyOuts (base name: "FlyOuts")', function() {
      // uncomment below and update the code to test the property flyOuts
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property games (base name: "Games")', function() {
      // uncomment below and update the code to test the property games
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property globalTeamID (base name: "GlobalTeamID")', function() {
      // uncomment below and update the code to test the property globalTeamID
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property grandSlams (base name: "GrandSlams")', function() {
      // uncomment below and update the code to test the property grandSlams
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property groundIntoDoublePlay (base name: "GroundIntoDoublePlay")', function() {
      // uncomment below and update the code to test the property groundIntoDoublePlay
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property groundOuts (base name: "GroundOuts")', function() {
      // uncomment below and update the code to test the property groundOuts
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property hitByPitch (base name: "HitByPitch")', function() {
      // uncomment below and update the code to test the property hitByPitch
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property hits (base name: "Hits")', function() {
      // uncomment below and update the code to test the property hits
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property homeRuns (base name: "HomeRuns")', function() {
      // uncomment below and update the code to test the property homeRuns
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property inningsPitchedDecimal (base name: "InningsPitchedDecimal")', function() {
      // uncomment below and update the code to test the property inningsPitchedDecimal
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property inningsPitchedFull (base name: "InningsPitchedFull")', function() {
      // uncomment below and update the code to test the property inningsPitchedFull
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property inningsPitchedOuts (base name: "InningsPitchedOuts")', function() {
      // uncomment below and update the code to test the property inningsPitchedOuts
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property intentionalWalks (base name: "IntentionalWalks")', function() {
      // uncomment below and update the code to test the property intentionalWalks
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property isolatedPower (base name: "IsolatedPower")', function() {
      // uncomment below and update the code to test the property isolatedPower
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property leftOnBase (base name: "LeftOnBase")', function() {
      // uncomment below and update the code to test the property leftOnBase
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property lineOuts (base name: "LineOuts")', function() {
      // uncomment below and update the code to test the property lineOuts
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property losses (base name: "Losses")', function() {
      // uncomment below and update the code to test the property losses
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "Name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property onBasePercentage (base name: "OnBasePercentage")', function() {
      // uncomment below and update the code to test the property onBasePercentage
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property onBasePlusSlugging (base name: "OnBasePlusSlugging")', function() {
      // uncomment below and update the code to test the property onBasePlusSlugging
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property outs (base name: "Outs")', function() {
      // uncomment below and update the code to test the property outs
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property pitchesSeen (base name: "PitchesSeen")', function() {
      // uncomment below and update the code to test the property pitchesSeen
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property pitchesThrown (base name: "PitchesThrown")', function() {
      // uncomment below and update the code to test the property pitchesThrown
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property pitchesThrownStrikes (base name: "PitchesThrownStrikes")', function() {
      // uncomment below and update the code to test the property pitchesThrownStrikes
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property pitchingBallsInPlay (base name: "PitchingBallsInPlay")', function() {
      // uncomment below and update the code to test the property pitchingBallsInPlay
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property pitchingBattingAverageAgainst (base name: "PitchingBattingAverageAgainst")', function() {
      // uncomment below and update the code to test the property pitchingBattingAverageAgainst
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property pitchingBattingAverageOnBallsInPlay (base name: "PitchingBattingAverageOnBallsInPlay")', function() {
      // uncomment below and update the code to test the property pitchingBattingAverageOnBallsInPlay
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property pitchingBlownSaves (base name: "PitchingBlownSaves")', function() {
      // uncomment below and update the code to test the property pitchingBlownSaves
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property pitchingCatchersInterference (base name: "PitchingCatchersInterference")', function() {
      // uncomment below and update the code to test the property pitchingCatchersInterference
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property pitchingCompleteGames (base name: "PitchingCompleteGames")', function() {
      // uncomment below and update the code to test the property pitchingCompleteGames
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property pitchingDoublePlays (base name: "PitchingDoublePlays")', function() {
      // uncomment below and update the code to test the property pitchingDoublePlays
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property pitchingDoubles (base name: "PitchingDoubles")', function() {
      // uncomment below and update the code to test the property pitchingDoubles
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property pitchingEarnedRuns (base name: "PitchingEarnedRuns")', function() {
      // uncomment below and update the code to test the property pitchingEarnedRuns
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property pitchingFlyOuts (base name: "PitchingFlyOuts")', function() {
      // uncomment below and update the code to test the property pitchingFlyOuts
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property pitchingGrandSlams (base name: "PitchingGrandSlams")', function() {
      // uncomment below and update the code to test the property pitchingGrandSlams
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property pitchingGroundIntoDoublePlay (base name: "PitchingGroundIntoDoublePlay")', function() {
      // uncomment below and update the code to test the property pitchingGroundIntoDoublePlay
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property pitchingGroundOuts (base name: "PitchingGroundOuts")', function() {
      // uncomment below and update the code to test the property pitchingGroundOuts
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property pitchingHitByPitch (base name: "PitchingHitByPitch")', function() {
      // uncomment below and update the code to test the property pitchingHitByPitch
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property pitchingHits (base name: "PitchingHits")', function() {
      // uncomment below and update the code to test the property pitchingHits
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property pitchingHolds (base name: "PitchingHolds")', function() {
      // uncomment below and update the code to test the property pitchingHolds
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property pitchingHomeRuns (base name: "PitchingHomeRuns")', function() {
      // uncomment below and update the code to test the property pitchingHomeRuns
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property pitchingInningStarted (base name: "PitchingInningStarted")', function() {
      // uncomment below and update the code to test the property pitchingInningStarted
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property pitchingIntentionalWalks (base name: "PitchingIntentionalWalks")', function() {
      // uncomment below and update the code to test the property pitchingIntentionalWalks
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property pitchingLineOuts (base name: "PitchingLineOuts")', function() {
      // uncomment below and update the code to test the property pitchingLineOuts
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property pitchingNoHitters (base name: "PitchingNoHitters")', function() {
      // uncomment below and update the code to test the property pitchingNoHitters
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property pitchingOnBasePercentage (base name: "PitchingOnBasePercentage")', function() {
      // uncomment below and update the code to test the property pitchingOnBasePercentage
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property pitchingOnBasePlusSlugging (base name: "PitchingOnBasePlusSlugging")', function() {
      // uncomment below and update the code to test the property pitchingOnBasePlusSlugging
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property pitchingPerfectGames (base name: "PitchingPerfectGames")', function() {
      // uncomment below and update the code to test the property pitchingPerfectGames
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property pitchingPlateAppearances (base name: "PitchingPlateAppearances")', function() {
      // uncomment below and update the code to test the property pitchingPlateAppearances
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property pitchingPopOuts (base name: "PitchingPopOuts")', function() {
      // uncomment below and update the code to test the property pitchingPopOuts
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property pitchingQualityStarts (base name: "PitchingQualityStarts")', function() {
      // uncomment below and update the code to test the property pitchingQualityStarts
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property pitchingReachedOnError (base name: "PitchingReachedOnError")', function() {
      // uncomment below and update the code to test the property pitchingReachedOnError
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property pitchingRuns (base name: "PitchingRuns")', function() {
      // uncomment below and update the code to test the property pitchingRuns
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property pitchingSacrificeFlies (base name: "PitchingSacrificeFlies")', function() {
      // uncomment below and update the code to test the property pitchingSacrificeFlies
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property pitchingSacrifices (base name: "PitchingSacrifices")', function() {
      // uncomment below and update the code to test the property pitchingSacrifices
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property pitchingShutOuts (base name: "PitchingShutOuts")', function() {
      // uncomment below and update the code to test the property pitchingShutOuts
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property pitchingSingles (base name: "PitchingSingles")', function() {
      // uncomment below and update the code to test the property pitchingSingles
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property pitchingSluggingPercentage (base name: "PitchingSluggingPercentage")', function() {
      // uncomment below and update the code to test the property pitchingSluggingPercentage
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property pitchingStrikeouts (base name: "PitchingStrikeouts")', function() {
      // uncomment below and update the code to test the property pitchingStrikeouts
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property pitchingStrikeoutsPerNineInnings (base name: "PitchingStrikeoutsPerNineInnings")', function() {
      // uncomment below and update the code to test the property pitchingStrikeoutsPerNineInnings
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property pitchingTotalBases (base name: "PitchingTotalBases")', function() {
      // uncomment below and update the code to test the property pitchingTotalBases
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property pitchingTriples (base name: "PitchingTriples")', function() {
      // uncomment below and update the code to test the property pitchingTriples
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property pitchingWalks (base name: "PitchingWalks")', function() {
      // uncomment below and update the code to test the property pitchingWalks
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property pitchingWalksPerNineInnings (base name: "PitchingWalksPerNineInnings")', function() {
      // uncomment below and update the code to test the property pitchingWalksPerNineInnings
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property pitchingWeightedOnBasePercentage (base name: "PitchingWeightedOnBasePercentage")', function() {
      // uncomment below and update the code to test the property pitchingWeightedOnBasePercentage
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property plateAppearances (base name: "PlateAppearances")', function() {
      // uncomment below and update the code to test the property plateAppearances
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property popOuts (base name: "PopOuts")', function() {
      // uncomment below and update the code to test the property popOuts
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property reachedOnError (base name: "ReachedOnError")', function() {
      // uncomment below and update the code to test the property reachedOnError
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property runs (base name: "Runs")', function() {
      // uncomment below and update the code to test the property runs
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property runsBattedIn (base name: "RunsBattedIn")', function() {
      // uncomment below and update the code to test the property runsBattedIn
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property sacrificeFlies (base name: "SacrificeFlies")', function() {
      // uncomment below and update the code to test the property sacrificeFlies
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property sacrifices (base name: "Sacrifices")', function() {
      // uncomment below and update the code to test the property sacrifices
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property saves (base name: "Saves")', function() {
      // uncomment below and update the code to test the property saves
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property season (base name: "Season")', function() {
      // uncomment below and update the code to test the property season
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property seasonType (base name: "SeasonType")', function() {
      // uncomment below and update the code to test the property seasonType
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property singles (base name: "Singles")', function() {
      // uncomment below and update the code to test the property singles
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property sluggingPercentage (base name: "SluggingPercentage")', function() {
      // uncomment below and update the code to test the property sluggingPercentage
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property statID (base name: "StatID")', function() {
      // uncomment below and update the code to test the property statID
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property stolenBases (base name: "StolenBases")', function() {
      // uncomment below and update the code to test the property stolenBases
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property strikeouts (base name: "Strikeouts")', function() {
      // uncomment below and update the code to test the property strikeouts
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property substituteBattingOrder (base name: "SubstituteBattingOrder")', function() {
      // uncomment below and update the code to test the property substituteBattingOrder
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property substituteBattingOrderSequence (base name: "SubstituteBattingOrderSequence")', function() {
      // uncomment below and update the code to test the property substituteBattingOrderSequence
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property team (base name: "Team")', function() {
      // uncomment below and update the code to test the property team
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property teamID (base name: "TeamID")', function() {
      // uncomment below and update the code to test the property teamID
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property totalBases (base name: "TotalBases")', function() {
      // uncomment below and update the code to test the property totalBases
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property totalOutsPitched (base name: "TotalOutsPitched")', function() {
      // uncomment below and update the code to test the property totalOutsPitched
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property triples (base name: "Triples")', function() {
      // uncomment below and update the code to test the property triples
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property updated (base name: "Updated")', function() {
      // uncomment below and update the code to test the property updated
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property walks (base name: "Walks")', function() {
      // uncomment below and update the code to test the property walks
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property walksHitsPerInningsPitched (base name: "WalksHitsPerInningsPitched")', function() {
      // uncomment below and update the code to test the property walksHitsPerInningsPitched
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property weightedOnBasePercentage (base name: "WeightedOnBasePercentage")', function() {
      // uncomment below and update the code to test the property weightedOnBasePercentage
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property wins (base name: "Wins")', function() {
      // uncomment below and update the code to test the property wins
      //var instance = new MlbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

  });

}));
