/**
 * MLB v3 Play-by-Play
 * MLB play-by-play API.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPitch.h
 *
 * 
 */

#ifndef OAIPitch_H
#define OAIPitch_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPitch : public OAIObject {
public:
    OAIPitch();
    OAIPitch(QString json);
    ~OAIPitch() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isBall() const;
    void setBall(const bool &ball);
    bool is_ball_Set() const;
    bool is_ball_Valid() const;

    qint32 getBallsBeforePitch() const;
    void setBallsBeforePitch(const qint32 &balls_before_pitch);
    bool is_balls_before_pitch_Set() const;
    bool is_balls_before_pitch_Valid() const;

    bool isFoul() const;
    void setFoul(const bool &foul);
    bool is_foul_Set() const;
    bool is_foul_Valid() const;

    qint32 getHitterId() const;
    void setHitterId(const qint32 &hitter_id);
    bool is_hitter_id_Set() const;
    bool is_hitter_id_Valid() const;

    bool isLooking() const;
    void setLooking(const bool &looking);
    bool is_looking_Set() const;
    bool is_looking_Valid() const;

    qint32 getOuts() const;
    void setOuts(const qint32 &outs);
    bool is_outs_Set() const;
    bool is_outs_Valid() const;

    qint32 getPitchId() const;
    void setPitchId(const qint32 &pitch_id);
    bool is_pitch_id_Set() const;
    bool is_pitch_id_Valid() const;

    qint32 getPitchNumberThisAtBat() const;
    void setPitchNumberThisAtBat(const qint32 &pitch_number_this_at_bat);
    bool is_pitch_number_this_at_bat_Set() const;
    bool is_pitch_number_this_at_bat_Valid() const;

    qint32 getPitcherId() const;
    void setPitcherId(const qint32 &pitcher_id);
    bool is_pitcher_id_Set() const;
    bool is_pitcher_id_Valid() const;

    qint32 getPlayId() const;
    void setPlayId(const qint32 &play_id);
    bool is_play_id_Set() const;
    bool is_play_id_Valid() const;

    bool isStrike() const;
    void setStrike(const bool &strike);
    bool is_strike_Set() const;
    bool is_strike_Valid() const;

    qint32 getStrikesBeforePitch() const;
    void setStrikesBeforePitch(const qint32 &strikes_before_pitch);
    bool is_strikes_before_pitch_Set() const;
    bool is_strikes_before_pitch_Valid() const;

    bool isSwinging() const;
    void setSwinging(const bool &swinging);
    bool is_swinging_Set() const;
    bool is_swinging_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_ball;
    bool m_ball_isSet;
    bool m_ball_isValid;

    qint32 m_balls_before_pitch;
    bool m_balls_before_pitch_isSet;
    bool m_balls_before_pitch_isValid;

    bool m_foul;
    bool m_foul_isSet;
    bool m_foul_isValid;

    qint32 m_hitter_id;
    bool m_hitter_id_isSet;
    bool m_hitter_id_isValid;

    bool m_looking;
    bool m_looking_isSet;
    bool m_looking_isValid;

    qint32 m_outs;
    bool m_outs_isSet;
    bool m_outs_isValid;

    qint32 m_pitch_id;
    bool m_pitch_id_isSet;
    bool m_pitch_id_isValid;

    qint32 m_pitch_number_this_at_bat;
    bool m_pitch_number_this_at_bat_isSet;
    bool m_pitch_number_this_at_bat_isValid;

    qint32 m_pitcher_id;
    bool m_pitcher_id_isSet;
    bool m_pitcher_id_isValid;

    qint32 m_play_id;
    bool m_play_id_isSet;
    bool m_play_id_isValid;

    bool m_strike;
    bool m_strike_isSet;
    bool m_strike_isValid;

    qint32 m_strikes_before_pitch;
    bool m_strikes_before_pitch_isSet;
    bool m_strikes_before_pitch_isValid;

    bool m_swinging;
    bool m_swinging_isSet;
    bool m_swinging_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPitch)

#endif // OAIPitch_H
