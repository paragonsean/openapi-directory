/**
 * CS:GO v3 Scores
 * CS:GO v3 Scores
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Team from './Team';

/**
 * The SeasonTeam model module.
 * @module model/SeasonTeam
 * @version 1.0
 */
class SeasonTeam {
    /**
     * Constructs a new <code>SeasonTeam</code>.
     * @alias module:model/SeasonTeam
     */
    constructor() { 
        
        SeasonTeam.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SeasonTeam</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SeasonTeam} obj Optional instance to populate.
     * @return {module:model/SeasonTeam} The populated <code>SeasonTeam</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SeasonTeam();

            if (data.hasOwnProperty('Active')) {
                obj['Active'] = ApiClient.convertToType(data['Active'], 'Boolean');
            }
            if (data.hasOwnProperty('Gender')) {
                obj['Gender'] = ApiClient.convertToType(data['Gender'], 'String');
            }
            if (data.hasOwnProperty('SeasonId')) {
                obj['SeasonId'] = ApiClient.convertToType(data['SeasonId'], 'Number');
            }
            if (data.hasOwnProperty('SeasonTeamId')) {
                obj['SeasonTeamId'] = ApiClient.convertToType(data['SeasonTeamId'], 'Number');
            }
            if (data.hasOwnProperty('Team')) {
                obj['Team'] = Team.constructFromObject(data['Team']);
            }
            if (data.hasOwnProperty('TeamId')) {
                obj['TeamId'] = ApiClient.convertToType(data['TeamId'], 'Number');
            }
            if (data.hasOwnProperty('TeamName')) {
                obj['TeamName'] = ApiClient.convertToType(data['TeamName'], 'String');
            }
            if (data.hasOwnProperty('Type')) {
                obj['Type'] = ApiClient.convertToType(data['Type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SeasonTeam</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SeasonTeam</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Gender'] && !(typeof data['Gender'] === 'string' || data['Gender'] instanceof String)) {
            throw new Error("Expected the field `Gender` to be a primitive type in the JSON string but got " + data['Gender']);
        }
        // validate the optional field `Team`
        if (data['Team']) { // data not null
          Team.validateJSON(data['Team']);
        }
        // ensure the json data is a string
        if (data['TeamName'] && !(typeof data['TeamName'] === 'string' || data['TeamName'] instanceof String)) {
            throw new Error("Expected the field `TeamName` to be a primitive type in the JSON string but got " + data['TeamName']);
        }
        // ensure the json data is a string
        if (data['Type'] && !(typeof data['Type'] === 'string' || data['Type'] instanceof String)) {
            throw new Error("Expected the field `Type` to be a primitive type in the JSON string but got " + data['Type']);
        }

        return true;
    }


}



/**
 * @member {Boolean} Active
 */
SeasonTeam.prototype['Active'] = undefined;

/**
 * @member {String} Gender
 */
SeasonTeam.prototype['Gender'] = undefined;

/**
 * @member {Number} SeasonId
 */
SeasonTeam.prototype['SeasonId'] = undefined;

/**
 * @member {Number} SeasonTeamId
 */
SeasonTeam.prototype['SeasonTeamId'] = undefined;

/**
 * @member {module:model/Team} Team
 */
SeasonTeam.prototype['Team'] = undefined;

/**
 * @member {Number} TeamId
 */
SeasonTeam.prototype['TeamId'] = undefined;

/**
 * @member {String} TeamName
 */
SeasonTeam.prototype['TeamName'] = undefined;

/**
 * @member {String} Type
 */
SeasonTeam.prototype['Type'] = undefined;






export default SeasonTeam;

