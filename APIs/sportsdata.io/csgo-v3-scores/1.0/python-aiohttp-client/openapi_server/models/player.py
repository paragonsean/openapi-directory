# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Player(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, birth_city: str=None, birth_country: str=None, birth_date: str=None, common_name: str=None, first_name: str=None, gender: str=None, last_name: str=None, match_name: str=None, nationality: str=None, player_id: int=None, position: str=None, updated: str=None):
        """Player - a model defined in OpenAPI

        :param birth_city: The birth_city of this Player.
        :param birth_country: The birth_country of this Player.
        :param birth_date: The birth_date of this Player.
        :param common_name: The common_name of this Player.
        :param first_name: The first_name of this Player.
        :param gender: The gender of this Player.
        :param last_name: The last_name of this Player.
        :param match_name: The match_name of this Player.
        :param nationality: The nationality of this Player.
        :param player_id: The player_id of this Player.
        :param position: The position of this Player.
        :param updated: The updated of this Player.
        """
        self.openapi_types = {
            'birth_city': str,
            'birth_country': str,
            'birth_date': str,
            'common_name': str,
            'first_name': str,
            'gender': str,
            'last_name': str,
            'match_name': str,
            'nationality': str,
            'player_id': int,
            'position': str,
            'updated': str
        }

        self.attribute_map = {
            'birth_city': 'BirthCity',
            'birth_country': 'BirthCountry',
            'birth_date': 'BirthDate',
            'common_name': 'CommonName',
            'first_name': 'FirstName',
            'gender': 'Gender',
            'last_name': 'LastName',
            'match_name': 'MatchName',
            'nationality': 'Nationality',
            'player_id': 'PlayerId',
            'position': 'Position',
            'updated': 'Updated'
        }

        self._birth_city = birth_city
        self._birth_country = birth_country
        self._birth_date = birth_date
        self._common_name = common_name
        self._first_name = first_name
        self._gender = gender
        self._last_name = last_name
        self._match_name = match_name
        self._nationality = nationality
        self._player_id = player_id
        self._position = position
        self._updated = updated

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Player':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Player of this Player.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def birth_city(self):
        """Gets the birth_city of this Player.


        :return: The birth_city of this Player.
        :rtype: str
        """
        return self._birth_city

    @birth_city.setter
    def birth_city(self, birth_city):
        """Sets the birth_city of this Player.


        :param birth_city: The birth_city of this Player.
        :type birth_city: str
        """

        self._birth_city = birth_city

    @property
    def birth_country(self):
        """Gets the birth_country of this Player.


        :return: The birth_country of this Player.
        :rtype: str
        """
        return self._birth_country

    @birth_country.setter
    def birth_country(self, birth_country):
        """Sets the birth_country of this Player.


        :param birth_country: The birth_country of this Player.
        :type birth_country: str
        """

        self._birth_country = birth_country

    @property
    def birth_date(self):
        """Gets the birth_date of this Player.


        :return: The birth_date of this Player.
        :rtype: str
        """
        return self._birth_date

    @birth_date.setter
    def birth_date(self, birth_date):
        """Sets the birth_date of this Player.


        :param birth_date: The birth_date of this Player.
        :type birth_date: str
        """

        self._birth_date = birth_date

    @property
    def common_name(self):
        """Gets the common_name of this Player.


        :return: The common_name of this Player.
        :rtype: str
        """
        return self._common_name

    @common_name.setter
    def common_name(self, common_name):
        """Sets the common_name of this Player.


        :param common_name: The common_name of this Player.
        :type common_name: str
        """

        self._common_name = common_name

    @property
    def first_name(self):
        """Gets the first_name of this Player.


        :return: The first_name of this Player.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this Player.


        :param first_name: The first_name of this Player.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def gender(self):
        """Gets the gender of this Player.


        :return: The gender of this Player.
        :rtype: str
        """
        return self._gender

    @gender.setter
    def gender(self, gender):
        """Sets the gender of this Player.


        :param gender: The gender of this Player.
        :type gender: str
        """

        self._gender = gender

    @property
    def last_name(self):
        """Gets the last_name of this Player.


        :return: The last_name of this Player.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this Player.


        :param last_name: The last_name of this Player.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def match_name(self):
        """Gets the match_name of this Player.


        :return: The match_name of this Player.
        :rtype: str
        """
        return self._match_name

    @match_name.setter
    def match_name(self, match_name):
        """Sets the match_name of this Player.


        :param match_name: The match_name of this Player.
        :type match_name: str
        """

        self._match_name = match_name

    @property
    def nationality(self):
        """Gets the nationality of this Player.


        :return: The nationality of this Player.
        :rtype: str
        """
        return self._nationality

    @nationality.setter
    def nationality(self, nationality):
        """Sets the nationality of this Player.


        :param nationality: The nationality of this Player.
        :type nationality: str
        """

        self._nationality = nationality

    @property
    def player_id(self):
        """Gets the player_id of this Player.


        :return: The player_id of this Player.
        :rtype: int
        """
        return self._player_id

    @player_id.setter
    def player_id(self, player_id):
        """Sets the player_id of this Player.


        :param player_id: The player_id of this Player.
        :type player_id: int
        """

        self._player_id = player_id

    @property
    def position(self):
        """Gets the position of this Player.


        :return: The position of this Player.
        :rtype: str
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this Player.


        :param position: The position of this Player.
        :type position: str
        """

        self._position = position

    @property
    def updated(self):
        """Gets the updated of this Player.


        :return: The updated of this Player.
        :rtype: str
        """
        return self._updated

    @updated.setter
    def updated(self, updated):
        """Sets the updated of this Player.


        :param updated: The updated of this Player.
        :type updated: str
        """

        self._updated = updated
