# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.player import Player
from openapi_server import util


class TeamDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active: bool=None, area_id: int=None, area_name: str=None, email: str=None, facebook: str=None, founded: int=None, gender: str=None, instagram: str=None, key: str=None, name: str=None, players: List[Player]=None, primary_color: str=None, quaternary_color: str=None, secondary_color: str=None, short_name: str=None, team_id: int=None, tertiary_color: str=None, twitter: str=None, type: str=None, website: str=None, you_tube: str=None):
        """TeamDetail - a model defined in OpenAPI

        :param active: The active of this TeamDetail.
        :param area_id: The area_id of this TeamDetail.
        :param area_name: The area_name of this TeamDetail.
        :param email: The email of this TeamDetail.
        :param facebook: The facebook of this TeamDetail.
        :param founded: The founded of this TeamDetail.
        :param gender: The gender of this TeamDetail.
        :param instagram: The instagram of this TeamDetail.
        :param key: The key of this TeamDetail.
        :param name: The name of this TeamDetail.
        :param players: The players of this TeamDetail.
        :param primary_color: The primary_color of this TeamDetail.
        :param quaternary_color: The quaternary_color of this TeamDetail.
        :param secondary_color: The secondary_color of this TeamDetail.
        :param short_name: The short_name of this TeamDetail.
        :param team_id: The team_id of this TeamDetail.
        :param tertiary_color: The tertiary_color of this TeamDetail.
        :param twitter: The twitter of this TeamDetail.
        :param type: The type of this TeamDetail.
        :param website: The website of this TeamDetail.
        :param you_tube: The you_tube of this TeamDetail.
        """
        self.openapi_types = {
            'active': bool,
            'area_id': int,
            'area_name': str,
            'email': str,
            'facebook': str,
            'founded': int,
            'gender': str,
            'instagram': str,
            'key': str,
            'name': str,
            'players': List[Player],
            'primary_color': str,
            'quaternary_color': str,
            'secondary_color': str,
            'short_name': str,
            'team_id': int,
            'tertiary_color': str,
            'twitter': str,
            'type': str,
            'website': str,
            'you_tube': str
        }

        self.attribute_map = {
            'active': 'Active',
            'area_id': 'AreaId',
            'area_name': 'AreaName',
            'email': 'Email',
            'facebook': 'Facebook',
            'founded': 'Founded',
            'gender': 'Gender',
            'instagram': 'Instagram',
            'key': 'Key',
            'name': 'Name',
            'players': 'Players',
            'primary_color': 'PrimaryColor',
            'quaternary_color': 'QuaternaryColor',
            'secondary_color': 'SecondaryColor',
            'short_name': 'ShortName',
            'team_id': 'TeamId',
            'tertiary_color': 'TertiaryColor',
            'twitter': 'Twitter',
            'type': 'Type',
            'website': 'Website',
            'you_tube': 'YouTube'
        }

        self._active = active
        self._area_id = area_id
        self._area_name = area_name
        self._email = email
        self._facebook = facebook
        self._founded = founded
        self._gender = gender
        self._instagram = instagram
        self._key = key
        self._name = name
        self._players = players
        self._primary_color = primary_color
        self._quaternary_color = quaternary_color
        self._secondary_color = secondary_color
        self._short_name = short_name
        self._team_id = team_id
        self._tertiary_color = tertiary_color
        self._twitter = twitter
        self._type = type
        self._website = website
        self._you_tube = you_tube

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TeamDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TeamDetail of this TeamDetail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active(self):
        """Gets the active of this TeamDetail.


        :return: The active of this TeamDetail.
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this TeamDetail.


        :param active: The active of this TeamDetail.
        :type active: bool
        """

        self._active = active

    @property
    def area_id(self):
        """Gets the area_id of this TeamDetail.


        :return: The area_id of this TeamDetail.
        :rtype: int
        """
        return self._area_id

    @area_id.setter
    def area_id(self, area_id):
        """Sets the area_id of this TeamDetail.


        :param area_id: The area_id of this TeamDetail.
        :type area_id: int
        """

        self._area_id = area_id

    @property
    def area_name(self):
        """Gets the area_name of this TeamDetail.


        :return: The area_name of this TeamDetail.
        :rtype: str
        """
        return self._area_name

    @area_name.setter
    def area_name(self, area_name):
        """Sets the area_name of this TeamDetail.


        :param area_name: The area_name of this TeamDetail.
        :type area_name: str
        """

        self._area_name = area_name

    @property
    def email(self):
        """Gets the email of this TeamDetail.


        :return: The email of this TeamDetail.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this TeamDetail.


        :param email: The email of this TeamDetail.
        :type email: str
        """

        self._email = email

    @property
    def facebook(self):
        """Gets the facebook of this TeamDetail.


        :return: The facebook of this TeamDetail.
        :rtype: str
        """
        return self._facebook

    @facebook.setter
    def facebook(self, facebook):
        """Sets the facebook of this TeamDetail.


        :param facebook: The facebook of this TeamDetail.
        :type facebook: str
        """

        self._facebook = facebook

    @property
    def founded(self):
        """Gets the founded of this TeamDetail.


        :return: The founded of this TeamDetail.
        :rtype: int
        """
        return self._founded

    @founded.setter
    def founded(self, founded):
        """Sets the founded of this TeamDetail.


        :param founded: The founded of this TeamDetail.
        :type founded: int
        """

        self._founded = founded

    @property
    def gender(self):
        """Gets the gender of this TeamDetail.


        :return: The gender of this TeamDetail.
        :rtype: str
        """
        return self._gender

    @gender.setter
    def gender(self, gender):
        """Sets the gender of this TeamDetail.


        :param gender: The gender of this TeamDetail.
        :type gender: str
        """

        self._gender = gender

    @property
    def instagram(self):
        """Gets the instagram of this TeamDetail.


        :return: The instagram of this TeamDetail.
        :rtype: str
        """
        return self._instagram

    @instagram.setter
    def instagram(self, instagram):
        """Sets the instagram of this TeamDetail.


        :param instagram: The instagram of this TeamDetail.
        :type instagram: str
        """

        self._instagram = instagram

    @property
    def key(self):
        """Gets the key of this TeamDetail.


        :return: The key of this TeamDetail.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this TeamDetail.


        :param key: The key of this TeamDetail.
        :type key: str
        """

        self._key = key

    @property
    def name(self):
        """Gets the name of this TeamDetail.


        :return: The name of this TeamDetail.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this TeamDetail.


        :param name: The name of this TeamDetail.
        :type name: str
        """

        self._name = name

    @property
    def players(self):
        """Gets the players of this TeamDetail.


        :return: The players of this TeamDetail.
        :rtype: List[Player]
        """
        return self._players

    @players.setter
    def players(self, players):
        """Sets the players of this TeamDetail.


        :param players: The players of this TeamDetail.
        :type players: List[Player]
        """

        self._players = players

    @property
    def primary_color(self):
        """Gets the primary_color of this TeamDetail.


        :return: The primary_color of this TeamDetail.
        :rtype: str
        """
        return self._primary_color

    @primary_color.setter
    def primary_color(self, primary_color):
        """Sets the primary_color of this TeamDetail.


        :param primary_color: The primary_color of this TeamDetail.
        :type primary_color: str
        """

        self._primary_color = primary_color

    @property
    def quaternary_color(self):
        """Gets the quaternary_color of this TeamDetail.


        :return: The quaternary_color of this TeamDetail.
        :rtype: str
        """
        return self._quaternary_color

    @quaternary_color.setter
    def quaternary_color(self, quaternary_color):
        """Sets the quaternary_color of this TeamDetail.


        :param quaternary_color: The quaternary_color of this TeamDetail.
        :type quaternary_color: str
        """

        self._quaternary_color = quaternary_color

    @property
    def secondary_color(self):
        """Gets the secondary_color of this TeamDetail.


        :return: The secondary_color of this TeamDetail.
        :rtype: str
        """
        return self._secondary_color

    @secondary_color.setter
    def secondary_color(self, secondary_color):
        """Sets the secondary_color of this TeamDetail.


        :param secondary_color: The secondary_color of this TeamDetail.
        :type secondary_color: str
        """

        self._secondary_color = secondary_color

    @property
    def short_name(self):
        """Gets the short_name of this TeamDetail.


        :return: The short_name of this TeamDetail.
        :rtype: str
        """
        return self._short_name

    @short_name.setter
    def short_name(self, short_name):
        """Sets the short_name of this TeamDetail.


        :param short_name: The short_name of this TeamDetail.
        :type short_name: str
        """

        self._short_name = short_name

    @property
    def team_id(self):
        """Gets the team_id of this TeamDetail.


        :return: The team_id of this TeamDetail.
        :rtype: int
        """
        return self._team_id

    @team_id.setter
    def team_id(self, team_id):
        """Sets the team_id of this TeamDetail.


        :param team_id: The team_id of this TeamDetail.
        :type team_id: int
        """

        self._team_id = team_id

    @property
    def tertiary_color(self):
        """Gets the tertiary_color of this TeamDetail.


        :return: The tertiary_color of this TeamDetail.
        :rtype: str
        """
        return self._tertiary_color

    @tertiary_color.setter
    def tertiary_color(self, tertiary_color):
        """Sets the tertiary_color of this TeamDetail.


        :param tertiary_color: The tertiary_color of this TeamDetail.
        :type tertiary_color: str
        """

        self._tertiary_color = tertiary_color

    @property
    def twitter(self):
        """Gets the twitter of this TeamDetail.


        :return: The twitter of this TeamDetail.
        :rtype: str
        """
        return self._twitter

    @twitter.setter
    def twitter(self, twitter):
        """Sets the twitter of this TeamDetail.


        :param twitter: The twitter of this TeamDetail.
        :type twitter: str
        """

        self._twitter = twitter

    @property
    def type(self):
        """Gets the type of this TeamDetail.


        :return: The type of this TeamDetail.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this TeamDetail.


        :param type: The type of this TeamDetail.
        :type type: str
        """

        self._type = type

    @property
    def website(self):
        """Gets the website of this TeamDetail.


        :return: The website of this TeamDetail.
        :rtype: str
        """
        return self._website

    @website.setter
    def website(self, website):
        """Sets the website of this TeamDetail.


        :param website: The website of this TeamDetail.
        :type website: str
        """

        self._website = website

    @property
    def you_tube(self):
        """Gets the you_tube of this TeamDetail.


        :return: The you_tube of this TeamDetail.
        :rtype: str
        """
        return self._you_tube

    @you_tube.setter
    def you_tube(self, you_tube):
        """Sets the you_tube of this TeamDetail.


        :param you_tube: The you_tube of this TeamDetail.
        :type you_tube: str
        """

        self._you_tube = you_tube
