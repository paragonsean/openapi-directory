/**
 * CBB v3 Scores
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITournament.h
 *
 * 
 */

#ifndef OAITournament_H
#define OAITournament_H

#include <QJsonObject>

#include "OAIGame.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGame;

class OAITournament : public OAIObject {
public:
    OAITournament();
    OAITournament(QString json);
    ~OAITournament() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIGame> getGames() const;
    void setGames(const QList<OAIGame> &games);
    bool is_games_Set() const;
    bool is_games_Valid() const;

    QString getLeftBottomBracketConference() const;
    void setLeftBottomBracketConference(const QString &left_bottom_bracket_conference);
    bool is_left_bottom_bracket_conference_Set() const;
    bool is_left_bottom_bracket_conference_Valid() const;

    QString getLeftTopBracketConference() const;
    void setLeftTopBracketConference(const QString &left_top_bracket_conference);
    bool is_left_top_bracket_conference_Set() const;
    bool is_left_top_bracket_conference_Valid() const;

    QString getLocation() const;
    void setLocation(const QString &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getRightBottomBracketConference() const;
    void setRightBottomBracketConference(const QString &right_bottom_bracket_conference);
    bool is_right_bottom_bracket_conference_Set() const;
    bool is_right_bottom_bracket_conference_Valid() const;

    QString getRightTopBracketConference() const;
    void setRightTopBracketConference(const QString &right_top_bracket_conference);
    bool is_right_top_bracket_conference_Set() const;
    bool is_right_top_bracket_conference_Valid() const;

    qint32 getSeason() const;
    void setSeason(const qint32 &season);
    bool is_season_Set() const;
    bool is_season_Valid() const;

    qint32 getTournamentId() const;
    void setTournamentId(const qint32 &tournament_id);
    bool is_tournament_id_Set() const;
    bool is_tournament_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIGame> m_games;
    bool m_games_isSet;
    bool m_games_isValid;

    QString m_left_bottom_bracket_conference;
    bool m_left_bottom_bracket_conference_isSet;
    bool m_left_bottom_bracket_conference_isValid;

    QString m_left_top_bracket_conference;
    bool m_left_top_bracket_conference_isSet;
    bool m_left_top_bracket_conference_isValid;

    QString m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_right_bottom_bracket_conference;
    bool m_right_bottom_bracket_conference_isSet;
    bool m_right_bottom_bracket_conference_isValid;

    QString m_right_top_bracket_conference;
    bool m_right_top_bracket_conference_isSet;
    bool m_right_top_bracket_conference_isValid;

    qint32 m_season;
    bool m_season_isSet;
    bool m_season_isValid;

    qint32 m_tournament_id;
    bool m_tournament_id_isSet;
    bool m_tournament_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITournament)

#endif // OAITournament_H
