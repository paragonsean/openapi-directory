# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PlayoffAggregateScore(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created: str=None, team_a_aggregate_score: int=None, team_a_id: int=None, team_b_aggregate_score: int=None, team_b_id: int=None, updated: str=None, winning_team_id: int=None):
        """PlayoffAggregateScore - a model defined in OpenAPI

        :param created: The created of this PlayoffAggregateScore.
        :param team_a_aggregate_score: The team_a_aggregate_score of this PlayoffAggregateScore.
        :param team_a_id: The team_a_id of this PlayoffAggregateScore.
        :param team_b_aggregate_score: The team_b_aggregate_score of this PlayoffAggregateScore.
        :param team_b_id: The team_b_id of this PlayoffAggregateScore.
        :param updated: The updated of this PlayoffAggregateScore.
        :param winning_team_id: The winning_team_id of this PlayoffAggregateScore.
        """
        self.openapi_types = {
            'created': str,
            'team_a_aggregate_score': int,
            'team_a_id': int,
            'team_b_aggregate_score': int,
            'team_b_id': int,
            'updated': str,
            'winning_team_id': int
        }

        self.attribute_map = {
            'created': 'Created',
            'team_a_aggregate_score': 'TeamA_AggregateScore',
            'team_a_id': 'TeamA_Id',
            'team_b_aggregate_score': 'TeamB_AggregateScore',
            'team_b_id': 'TeamB_Id',
            'updated': 'Updated',
            'winning_team_id': 'WinningTeamId'
        }

        self._created = created
        self._team_a_aggregate_score = team_a_aggregate_score
        self._team_a_id = team_a_id
        self._team_b_aggregate_score = team_b_aggregate_score
        self._team_b_id = team_b_id
        self._updated = updated
        self._winning_team_id = winning_team_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PlayoffAggregateScore':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PlayoffAggregateScore of this PlayoffAggregateScore.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created(self):
        """Gets the created of this PlayoffAggregateScore.


        :return: The created of this PlayoffAggregateScore.
        :rtype: str
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this PlayoffAggregateScore.


        :param created: The created of this PlayoffAggregateScore.
        :type created: str
        """

        self._created = created

    @property
    def team_a_aggregate_score(self):
        """Gets the team_a_aggregate_score of this PlayoffAggregateScore.


        :return: The team_a_aggregate_score of this PlayoffAggregateScore.
        :rtype: int
        """
        return self._team_a_aggregate_score

    @team_a_aggregate_score.setter
    def team_a_aggregate_score(self, team_a_aggregate_score):
        """Sets the team_a_aggregate_score of this PlayoffAggregateScore.


        :param team_a_aggregate_score: The team_a_aggregate_score of this PlayoffAggregateScore.
        :type team_a_aggregate_score: int
        """

        self._team_a_aggregate_score = team_a_aggregate_score

    @property
    def team_a_id(self):
        """Gets the team_a_id of this PlayoffAggregateScore.


        :return: The team_a_id of this PlayoffAggregateScore.
        :rtype: int
        """
        return self._team_a_id

    @team_a_id.setter
    def team_a_id(self, team_a_id):
        """Sets the team_a_id of this PlayoffAggregateScore.


        :param team_a_id: The team_a_id of this PlayoffAggregateScore.
        :type team_a_id: int
        """

        self._team_a_id = team_a_id

    @property
    def team_b_aggregate_score(self):
        """Gets the team_b_aggregate_score of this PlayoffAggregateScore.


        :return: The team_b_aggregate_score of this PlayoffAggregateScore.
        :rtype: int
        """
        return self._team_b_aggregate_score

    @team_b_aggregate_score.setter
    def team_b_aggregate_score(self, team_b_aggregate_score):
        """Sets the team_b_aggregate_score of this PlayoffAggregateScore.


        :param team_b_aggregate_score: The team_b_aggregate_score of this PlayoffAggregateScore.
        :type team_b_aggregate_score: int
        """

        self._team_b_aggregate_score = team_b_aggregate_score

    @property
    def team_b_id(self):
        """Gets the team_b_id of this PlayoffAggregateScore.


        :return: The team_b_id of this PlayoffAggregateScore.
        :rtype: int
        """
        return self._team_b_id

    @team_b_id.setter
    def team_b_id(self, team_b_id):
        """Sets the team_b_id of this PlayoffAggregateScore.


        :param team_b_id: The team_b_id of this PlayoffAggregateScore.
        :type team_b_id: int
        """

        self._team_b_id = team_b_id

    @property
    def updated(self):
        """Gets the updated of this PlayoffAggregateScore.


        :return: The updated of this PlayoffAggregateScore.
        :rtype: str
        """
        return self._updated

    @updated.setter
    def updated(self, updated):
        """Sets the updated of this PlayoffAggregateScore.


        :param updated: The updated of this PlayoffAggregateScore.
        :type updated: str
        """

        self._updated = updated

    @property
    def winning_team_id(self):
        """Gets the winning_team_id of this PlayoffAggregateScore.


        :return: The winning_team_id of this PlayoffAggregateScore.
        :rtype: int
        """
        return self._winning_team_id

    @winning_team_id.setter
    def winning_team_id(self, winning_team_id):
        """Sets the winning_team_id of this PlayoffAggregateScore.


        :param winning_team_id: The winning_team_id of this PlayoffAggregateScore.
        :type winning_team_id: int
        """

        self._winning_team_id = winning_team_id
