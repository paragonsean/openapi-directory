/*
 * NFL v3 Scores
 * NFL schedules, scores, odds, weather, and news API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TeamSeason
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:05:21.929041-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TeamSeason {
  public static final String SERIALIZED_NAME_ASSISTED_TACKLES = "AssistedTackles";
  @SerializedName(SERIALIZED_NAME_ASSISTED_TACKLES)
  private Integer assistedTackles;

  public static final String SERIALIZED_NAME_BLOCKED_KICK_RETURN_TOUCHDOWNS = "BlockedKickReturnTouchdowns";
  @SerializedName(SERIALIZED_NAME_BLOCKED_KICK_RETURN_TOUCHDOWNS)
  private Integer blockedKickReturnTouchdowns;

  public static final String SERIALIZED_NAME_BLOCKED_KICK_RETURN_YARDS = "BlockedKickReturnYards";
  @SerializedName(SERIALIZED_NAME_BLOCKED_KICK_RETURN_YARDS)
  private Integer blockedKickReturnYards;

  public static final String SERIALIZED_NAME_BLOCKED_KICKS = "BlockedKicks";
  @SerializedName(SERIALIZED_NAME_BLOCKED_KICKS)
  private Integer blockedKicks;

  public static final String SERIALIZED_NAME_COMPLETION_PERCENTAGE = "CompletionPercentage";
  @SerializedName(SERIALIZED_NAME_COMPLETION_PERCENTAGE)
  private BigDecimal completionPercentage;

  public static final String SERIALIZED_NAME_EXTRA_POINT_KICKING_ATTEMPTS = "ExtraPointKickingAttempts";
  @SerializedName(SERIALIZED_NAME_EXTRA_POINT_KICKING_ATTEMPTS)
  private Integer extraPointKickingAttempts;

  public static final String SERIALIZED_NAME_EXTRA_POINT_KICKING_CONVERSIONS = "ExtraPointKickingConversions";
  @SerializedName(SERIALIZED_NAME_EXTRA_POINT_KICKING_CONVERSIONS)
  private Integer extraPointKickingConversions;

  public static final String SERIALIZED_NAME_EXTRA_POINT_PASSING_ATTEMPTS = "ExtraPointPassingAttempts";
  @SerializedName(SERIALIZED_NAME_EXTRA_POINT_PASSING_ATTEMPTS)
  private Integer extraPointPassingAttempts;

  public static final String SERIALIZED_NAME_EXTRA_POINT_PASSING_CONVERSIONS = "ExtraPointPassingConversions";
  @SerializedName(SERIALIZED_NAME_EXTRA_POINT_PASSING_CONVERSIONS)
  private Integer extraPointPassingConversions;

  public static final String SERIALIZED_NAME_EXTRA_POINT_PERCENTAGE = "ExtraPointPercentage";
  @SerializedName(SERIALIZED_NAME_EXTRA_POINT_PERCENTAGE)
  private BigDecimal extraPointPercentage;

  public static final String SERIALIZED_NAME_EXTRA_POINT_RUSHING_ATTEMPTS = "ExtraPointRushingAttempts";
  @SerializedName(SERIALIZED_NAME_EXTRA_POINT_RUSHING_ATTEMPTS)
  private Integer extraPointRushingAttempts;

  public static final String SERIALIZED_NAME_EXTRA_POINT_RUSHING_CONVERSIONS = "ExtraPointRushingConversions";
  @SerializedName(SERIALIZED_NAME_EXTRA_POINT_RUSHING_CONVERSIONS)
  private Integer extraPointRushingConversions;

  public static final String SERIALIZED_NAME_EXTRA_POINTS_HAD_BLOCKED = "ExtraPointsHadBlocked";
  @SerializedName(SERIALIZED_NAME_EXTRA_POINTS_HAD_BLOCKED)
  private Integer extraPointsHadBlocked;

  public static final String SERIALIZED_NAME_FIELD_GOAL_ATTEMPTS = "FieldGoalAttempts";
  @SerializedName(SERIALIZED_NAME_FIELD_GOAL_ATTEMPTS)
  private Integer fieldGoalAttempts;

  public static final String SERIALIZED_NAME_FIELD_GOAL_PERCENTAGE = "FieldGoalPercentage";
  @SerializedName(SERIALIZED_NAME_FIELD_GOAL_PERCENTAGE)
  private BigDecimal fieldGoalPercentage;

  public static final String SERIALIZED_NAME_FIELD_GOAL_RETURN_TOUCHDOWNS = "FieldGoalReturnTouchdowns";
  @SerializedName(SERIALIZED_NAME_FIELD_GOAL_RETURN_TOUCHDOWNS)
  private Integer fieldGoalReturnTouchdowns;

  public static final String SERIALIZED_NAME_FIELD_GOAL_RETURN_YARDS = "FieldGoalReturnYards";
  @SerializedName(SERIALIZED_NAME_FIELD_GOAL_RETURN_YARDS)
  private Integer fieldGoalReturnYards;

  public static final String SERIALIZED_NAME_FIELD_GOALS_HAD_BLOCKED = "FieldGoalsHadBlocked";
  @SerializedName(SERIALIZED_NAME_FIELD_GOALS_HAD_BLOCKED)
  private Integer fieldGoalsHadBlocked;

  public static final String SERIALIZED_NAME_FIELD_GOALS_MADE = "FieldGoalsMade";
  @SerializedName(SERIALIZED_NAME_FIELD_GOALS_MADE)
  private Integer fieldGoalsMade;

  public static final String SERIALIZED_NAME_FIRST_DOWNS = "FirstDowns";
  @SerializedName(SERIALIZED_NAME_FIRST_DOWNS)
  private Integer firstDowns;

  public static final String SERIALIZED_NAME_FIRST_DOWNS_BY_PASSING = "FirstDownsByPassing";
  @SerializedName(SERIALIZED_NAME_FIRST_DOWNS_BY_PASSING)
  private Integer firstDownsByPassing;

  public static final String SERIALIZED_NAME_FIRST_DOWNS_BY_PENALTY = "FirstDownsByPenalty";
  @SerializedName(SERIALIZED_NAME_FIRST_DOWNS_BY_PENALTY)
  private Integer firstDownsByPenalty;

  public static final String SERIALIZED_NAME_FIRST_DOWNS_BY_RUSHING = "FirstDownsByRushing";
  @SerializedName(SERIALIZED_NAME_FIRST_DOWNS_BY_RUSHING)
  private Integer firstDownsByRushing;

  public static final String SERIALIZED_NAME_FOURTH_DOWN_ATTEMPTS = "FourthDownAttempts";
  @SerializedName(SERIALIZED_NAME_FOURTH_DOWN_ATTEMPTS)
  private Integer fourthDownAttempts;

  public static final String SERIALIZED_NAME_FOURTH_DOWN_CONVERSIONS = "FourthDownConversions";
  @SerializedName(SERIALIZED_NAME_FOURTH_DOWN_CONVERSIONS)
  private Integer fourthDownConversions;

  public static final String SERIALIZED_NAME_FOURTH_DOWN_PERCENTAGE = "FourthDownPercentage";
  @SerializedName(SERIALIZED_NAME_FOURTH_DOWN_PERCENTAGE)
  private BigDecimal fourthDownPercentage;

  public static final String SERIALIZED_NAME_FUMBLE_RETURN_TOUCHDOWNS = "FumbleReturnTouchdowns";
  @SerializedName(SERIALIZED_NAME_FUMBLE_RETURN_TOUCHDOWNS)
  private Integer fumbleReturnTouchdowns;

  public static final String SERIALIZED_NAME_FUMBLE_RETURN_YARDS = "FumbleReturnYards";
  @SerializedName(SERIALIZED_NAME_FUMBLE_RETURN_YARDS)
  private Integer fumbleReturnYards;

  public static final String SERIALIZED_NAME_FUMBLES = "Fumbles";
  @SerializedName(SERIALIZED_NAME_FUMBLES)
  private Integer fumbles;

  public static final String SERIALIZED_NAME_FUMBLES_FORCED = "FumblesForced";
  @SerializedName(SERIALIZED_NAME_FUMBLES_FORCED)
  private Integer fumblesForced;

  public static final String SERIALIZED_NAME_FUMBLES_LOST = "FumblesLost";
  @SerializedName(SERIALIZED_NAME_FUMBLES_LOST)
  private Integer fumblesLost;

  public static final String SERIALIZED_NAME_FUMBLES_RECOVERED = "FumblesRecovered";
  @SerializedName(SERIALIZED_NAME_FUMBLES_RECOVERED)
  private Integer fumblesRecovered;

  public static final String SERIALIZED_NAME_GAMES = "Games";
  @SerializedName(SERIALIZED_NAME_GAMES)
  private Integer games;

  public static final String SERIALIZED_NAME_GIVEAWAYS = "Giveaways";
  @SerializedName(SERIALIZED_NAME_GIVEAWAYS)
  private Integer giveaways;

  public static final String SERIALIZED_NAME_GLOBAL_TEAM_I_D = "GlobalTeamID";
  @SerializedName(SERIALIZED_NAME_GLOBAL_TEAM_I_D)
  private Integer globalTeamID;

  public static final String SERIALIZED_NAME_GOAL_TO_GO_ATTEMPTS = "GoalToGoAttempts";
  @SerializedName(SERIALIZED_NAME_GOAL_TO_GO_ATTEMPTS)
  private Integer goalToGoAttempts;

  public static final String SERIALIZED_NAME_GOAL_TO_GO_CONVERSIONS = "GoalToGoConversions";
  @SerializedName(SERIALIZED_NAME_GOAL_TO_GO_CONVERSIONS)
  private Integer goalToGoConversions;

  public static final String SERIALIZED_NAME_GOAL_TO_GO_PERCENTAGE = "GoalToGoPercentage";
  @SerializedName(SERIALIZED_NAME_GOAL_TO_GO_PERCENTAGE)
  private BigDecimal goalToGoPercentage;

  public static final String SERIALIZED_NAME_HUMIDITY = "Humidity";
  @SerializedName(SERIALIZED_NAME_HUMIDITY)
  private Integer humidity;

  public static final String SERIALIZED_NAME_INTERCEPTION_RETURN_TOUCHDOWNS = "InterceptionReturnTouchdowns";
  @SerializedName(SERIALIZED_NAME_INTERCEPTION_RETURN_TOUCHDOWNS)
  private Integer interceptionReturnTouchdowns;

  public static final String SERIALIZED_NAME_INTERCEPTION_RETURN_YARDS = "InterceptionReturnYards";
  @SerializedName(SERIALIZED_NAME_INTERCEPTION_RETURN_YARDS)
  private Integer interceptionReturnYards;

  public static final String SERIALIZED_NAME_INTERCEPTION_RETURNS = "InterceptionReturns";
  @SerializedName(SERIALIZED_NAME_INTERCEPTION_RETURNS)
  private Integer interceptionReturns;

  public static final String SERIALIZED_NAME_KICK_RETURN_AVERAGE = "KickReturnAverage";
  @SerializedName(SERIALIZED_NAME_KICK_RETURN_AVERAGE)
  private BigDecimal kickReturnAverage;

  public static final String SERIALIZED_NAME_KICK_RETURN_LONG = "KickReturnLong";
  @SerializedName(SERIALIZED_NAME_KICK_RETURN_LONG)
  private Integer kickReturnLong;

  public static final String SERIALIZED_NAME_KICK_RETURN_TOUCHDOWNS = "KickReturnTouchdowns";
  @SerializedName(SERIALIZED_NAME_KICK_RETURN_TOUCHDOWNS)
  private Integer kickReturnTouchdowns;

  public static final String SERIALIZED_NAME_KICK_RETURN_YARD_DIFFERENTIAL = "KickReturnYardDifferential";
  @SerializedName(SERIALIZED_NAME_KICK_RETURN_YARD_DIFFERENTIAL)
  private Integer kickReturnYardDifferential;

  public static final String SERIALIZED_NAME_KICK_RETURN_YARDS = "KickReturnYards";
  @SerializedName(SERIALIZED_NAME_KICK_RETURN_YARDS)
  private Integer kickReturnYards;

  public static final String SERIALIZED_NAME_KICK_RETURNS = "KickReturns";
  @SerializedName(SERIALIZED_NAME_KICK_RETURNS)
  private Integer kickReturns;

  public static final String SERIALIZED_NAME_KICKOFF_TOUCHBACKS = "KickoffTouchbacks";
  @SerializedName(SERIALIZED_NAME_KICKOFF_TOUCHBACKS)
  private Integer kickoffTouchbacks;

  public static final String SERIALIZED_NAME_KICKOFFS = "Kickoffs";
  @SerializedName(SERIALIZED_NAME_KICKOFFS)
  private Integer kickoffs;

  public static final String SERIALIZED_NAME_KICKOFFS_IN_END_ZONE = "KickoffsInEndZone";
  @SerializedName(SERIALIZED_NAME_KICKOFFS_IN_END_ZONE)
  private Integer kickoffsInEndZone;

  public static final String SERIALIZED_NAME_OFFENSIVE_PLAYS = "OffensivePlays";
  @SerializedName(SERIALIZED_NAME_OFFENSIVE_PLAYS)
  private Integer offensivePlays;

  public static final String SERIALIZED_NAME_OFFENSIVE_YARDS = "OffensiveYards";
  @SerializedName(SERIALIZED_NAME_OFFENSIVE_YARDS)
  private Integer offensiveYards;

  public static final String SERIALIZED_NAME_OFFENSIVE_YARDS_PER_PLAY = "OffensiveYardsPerPlay";
  @SerializedName(SERIALIZED_NAME_OFFENSIVE_YARDS_PER_PLAY)
  private BigDecimal offensiveYardsPerPlay;

  public static final String SERIALIZED_NAME_OPPONENT_ASSISTED_TACKLES = "OpponentAssistedTackles";
  @SerializedName(SERIALIZED_NAME_OPPONENT_ASSISTED_TACKLES)
  private Integer opponentAssistedTackles;

  public static final String SERIALIZED_NAME_OPPONENT_BLOCKED_KICK_RETURN_TOUCHDOWNS = "OpponentBlockedKickReturnTouchdowns";
  @SerializedName(SERIALIZED_NAME_OPPONENT_BLOCKED_KICK_RETURN_TOUCHDOWNS)
  private Integer opponentBlockedKickReturnTouchdowns;

  public static final String SERIALIZED_NAME_OPPONENT_BLOCKED_KICK_RETURN_YARDS = "OpponentBlockedKickReturnYards";
  @SerializedName(SERIALIZED_NAME_OPPONENT_BLOCKED_KICK_RETURN_YARDS)
  private Integer opponentBlockedKickReturnYards;

  public static final String SERIALIZED_NAME_OPPONENT_BLOCKED_KICKS = "OpponentBlockedKicks";
  @SerializedName(SERIALIZED_NAME_OPPONENT_BLOCKED_KICKS)
  private Integer opponentBlockedKicks;

  public static final String SERIALIZED_NAME_OPPONENT_COMPLETION_PERCENTAGE = "OpponentCompletionPercentage";
  @SerializedName(SERIALIZED_NAME_OPPONENT_COMPLETION_PERCENTAGE)
  private BigDecimal opponentCompletionPercentage;

  public static final String SERIALIZED_NAME_OPPONENT_EXTRA_POINT_KICKING_ATTEMPTS = "OpponentExtraPointKickingAttempts";
  @SerializedName(SERIALIZED_NAME_OPPONENT_EXTRA_POINT_KICKING_ATTEMPTS)
  private Integer opponentExtraPointKickingAttempts;

  public static final String SERIALIZED_NAME_OPPONENT_EXTRA_POINT_KICKING_CONVERSIONS = "OpponentExtraPointKickingConversions";
  @SerializedName(SERIALIZED_NAME_OPPONENT_EXTRA_POINT_KICKING_CONVERSIONS)
  private Integer opponentExtraPointKickingConversions;

  public static final String SERIALIZED_NAME_OPPONENT_EXTRA_POINT_PASSING_ATTEMPTS = "OpponentExtraPointPassingAttempts";
  @SerializedName(SERIALIZED_NAME_OPPONENT_EXTRA_POINT_PASSING_ATTEMPTS)
  private Integer opponentExtraPointPassingAttempts;

  public static final String SERIALIZED_NAME_OPPONENT_EXTRA_POINT_PASSING_CONVERSIONS = "OpponentExtraPointPassingConversions";
  @SerializedName(SERIALIZED_NAME_OPPONENT_EXTRA_POINT_PASSING_CONVERSIONS)
  private Integer opponentExtraPointPassingConversions;

  public static final String SERIALIZED_NAME_OPPONENT_EXTRA_POINT_PERCENTAGE = "OpponentExtraPointPercentage";
  @SerializedName(SERIALIZED_NAME_OPPONENT_EXTRA_POINT_PERCENTAGE)
  private BigDecimal opponentExtraPointPercentage;

  public static final String SERIALIZED_NAME_OPPONENT_EXTRA_POINT_RUSHING_ATTEMPTS = "OpponentExtraPointRushingAttempts";
  @SerializedName(SERIALIZED_NAME_OPPONENT_EXTRA_POINT_RUSHING_ATTEMPTS)
  private Integer opponentExtraPointRushingAttempts;

  public static final String SERIALIZED_NAME_OPPONENT_EXTRA_POINT_RUSHING_CONVERSIONS = "OpponentExtraPointRushingConversions";
  @SerializedName(SERIALIZED_NAME_OPPONENT_EXTRA_POINT_RUSHING_CONVERSIONS)
  private Integer opponentExtraPointRushingConversions;

  public static final String SERIALIZED_NAME_OPPONENT_EXTRA_POINTS_HAD_BLOCKED = "OpponentExtraPointsHadBlocked";
  @SerializedName(SERIALIZED_NAME_OPPONENT_EXTRA_POINTS_HAD_BLOCKED)
  private Integer opponentExtraPointsHadBlocked;

  public static final String SERIALIZED_NAME_OPPONENT_FIELD_GOAL_ATTEMPTS = "OpponentFieldGoalAttempts";
  @SerializedName(SERIALIZED_NAME_OPPONENT_FIELD_GOAL_ATTEMPTS)
  private Integer opponentFieldGoalAttempts;

  public static final String SERIALIZED_NAME_OPPONENT_FIELD_GOAL_PERCENTAGE = "OpponentFieldGoalPercentage";
  @SerializedName(SERIALIZED_NAME_OPPONENT_FIELD_GOAL_PERCENTAGE)
  private BigDecimal opponentFieldGoalPercentage;

  public static final String SERIALIZED_NAME_OPPONENT_FIELD_GOAL_RETURN_TOUCHDOWNS = "OpponentFieldGoalReturnTouchdowns";
  @SerializedName(SERIALIZED_NAME_OPPONENT_FIELD_GOAL_RETURN_TOUCHDOWNS)
  private Integer opponentFieldGoalReturnTouchdowns;

  public static final String SERIALIZED_NAME_OPPONENT_FIELD_GOAL_RETURN_YARDS = "OpponentFieldGoalReturnYards";
  @SerializedName(SERIALIZED_NAME_OPPONENT_FIELD_GOAL_RETURN_YARDS)
  private Integer opponentFieldGoalReturnYards;

  public static final String SERIALIZED_NAME_OPPONENT_FIELD_GOALS_HAD_BLOCKED = "OpponentFieldGoalsHadBlocked";
  @SerializedName(SERIALIZED_NAME_OPPONENT_FIELD_GOALS_HAD_BLOCKED)
  private Integer opponentFieldGoalsHadBlocked;

  public static final String SERIALIZED_NAME_OPPONENT_FIELD_GOALS_MADE = "OpponentFieldGoalsMade";
  @SerializedName(SERIALIZED_NAME_OPPONENT_FIELD_GOALS_MADE)
  private Integer opponentFieldGoalsMade;

  public static final String SERIALIZED_NAME_OPPONENT_FIRST_DOWNS = "OpponentFirstDowns";
  @SerializedName(SERIALIZED_NAME_OPPONENT_FIRST_DOWNS)
  private Integer opponentFirstDowns;

  public static final String SERIALIZED_NAME_OPPONENT_FIRST_DOWNS_BY_PASSING = "OpponentFirstDownsByPassing";
  @SerializedName(SERIALIZED_NAME_OPPONENT_FIRST_DOWNS_BY_PASSING)
  private Integer opponentFirstDownsByPassing;

  public static final String SERIALIZED_NAME_OPPONENT_FIRST_DOWNS_BY_PENALTY = "OpponentFirstDownsByPenalty";
  @SerializedName(SERIALIZED_NAME_OPPONENT_FIRST_DOWNS_BY_PENALTY)
  private Integer opponentFirstDownsByPenalty;

  public static final String SERIALIZED_NAME_OPPONENT_FIRST_DOWNS_BY_RUSHING = "OpponentFirstDownsByRushing";
  @SerializedName(SERIALIZED_NAME_OPPONENT_FIRST_DOWNS_BY_RUSHING)
  private Integer opponentFirstDownsByRushing;

  public static final String SERIALIZED_NAME_OPPONENT_FOURTH_DOWN_ATTEMPTS = "OpponentFourthDownAttempts";
  @SerializedName(SERIALIZED_NAME_OPPONENT_FOURTH_DOWN_ATTEMPTS)
  private Integer opponentFourthDownAttempts;

  public static final String SERIALIZED_NAME_OPPONENT_FOURTH_DOWN_CONVERSIONS = "OpponentFourthDownConversions";
  @SerializedName(SERIALIZED_NAME_OPPONENT_FOURTH_DOWN_CONVERSIONS)
  private Integer opponentFourthDownConversions;

  public static final String SERIALIZED_NAME_OPPONENT_FOURTH_DOWN_PERCENTAGE = "OpponentFourthDownPercentage";
  @SerializedName(SERIALIZED_NAME_OPPONENT_FOURTH_DOWN_PERCENTAGE)
  private BigDecimal opponentFourthDownPercentage;

  public static final String SERIALIZED_NAME_OPPONENT_FUMBLE_RETURN_TOUCHDOWNS = "OpponentFumbleReturnTouchdowns";
  @SerializedName(SERIALIZED_NAME_OPPONENT_FUMBLE_RETURN_TOUCHDOWNS)
  private Integer opponentFumbleReturnTouchdowns;

  public static final String SERIALIZED_NAME_OPPONENT_FUMBLE_RETURN_YARDS = "OpponentFumbleReturnYards";
  @SerializedName(SERIALIZED_NAME_OPPONENT_FUMBLE_RETURN_YARDS)
  private Integer opponentFumbleReturnYards;

  public static final String SERIALIZED_NAME_OPPONENT_FUMBLES = "OpponentFumbles";
  @SerializedName(SERIALIZED_NAME_OPPONENT_FUMBLES)
  private Integer opponentFumbles;

  public static final String SERIALIZED_NAME_OPPONENT_FUMBLES_FORCED = "OpponentFumblesForced";
  @SerializedName(SERIALIZED_NAME_OPPONENT_FUMBLES_FORCED)
  private Integer opponentFumblesForced;

  public static final String SERIALIZED_NAME_OPPONENT_FUMBLES_LOST = "OpponentFumblesLost";
  @SerializedName(SERIALIZED_NAME_OPPONENT_FUMBLES_LOST)
  private Integer opponentFumblesLost;

  public static final String SERIALIZED_NAME_OPPONENT_FUMBLES_RECOVERED = "OpponentFumblesRecovered";
  @SerializedName(SERIALIZED_NAME_OPPONENT_FUMBLES_RECOVERED)
  private Integer opponentFumblesRecovered;

  public static final String SERIALIZED_NAME_OPPONENT_GIVEAWAYS = "OpponentGiveaways";
  @SerializedName(SERIALIZED_NAME_OPPONENT_GIVEAWAYS)
  private Integer opponentGiveaways;

  public static final String SERIALIZED_NAME_OPPONENT_GOAL_TO_GO_ATTEMPTS = "OpponentGoalToGoAttempts";
  @SerializedName(SERIALIZED_NAME_OPPONENT_GOAL_TO_GO_ATTEMPTS)
  private Integer opponentGoalToGoAttempts;

  public static final String SERIALIZED_NAME_OPPONENT_GOAL_TO_GO_CONVERSIONS = "OpponentGoalToGoConversions";
  @SerializedName(SERIALIZED_NAME_OPPONENT_GOAL_TO_GO_CONVERSIONS)
  private Integer opponentGoalToGoConversions;

  public static final String SERIALIZED_NAME_OPPONENT_GOAL_TO_GO_PERCENTAGE = "OpponentGoalToGoPercentage";
  @SerializedName(SERIALIZED_NAME_OPPONENT_GOAL_TO_GO_PERCENTAGE)
  private BigDecimal opponentGoalToGoPercentage;

  public static final String SERIALIZED_NAME_OPPONENT_INTERCEPTION_RETURN_TOUCHDOWNS = "OpponentInterceptionReturnTouchdowns";
  @SerializedName(SERIALIZED_NAME_OPPONENT_INTERCEPTION_RETURN_TOUCHDOWNS)
  private Integer opponentInterceptionReturnTouchdowns;

  public static final String SERIALIZED_NAME_OPPONENT_INTERCEPTION_RETURN_YARDS = "OpponentInterceptionReturnYards";
  @SerializedName(SERIALIZED_NAME_OPPONENT_INTERCEPTION_RETURN_YARDS)
  private Integer opponentInterceptionReturnYards;

  public static final String SERIALIZED_NAME_OPPONENT_INTERCEPTION_RETURNS = "OpponentInterceptionReturns";
  @SerializedName(SERIALIZED_NAME_OPPONENT_INTERCEPTION_RETURNS)
  private Integer opponentInterceptionReturns;

  public static final String SERIALIZED_NAME_OPPONENT_KICK_RETURN_AVERAGE = "OpponentKickReturnAverage";
  @SerializedName(SERIALIZED_NAME_OPPONENT_KICK_RETURN_AVERAGE)
  private BigDecimal opponentKickReturnAverage;

  public static final String SERIALIZED_NAME_OPPONENT_KICK_RETURN_LONG = "OpponentKickReturnLong";
  @SerializedName(SERIALIZED_NAME_OPPONENT_KICK_RETURN_LONG)
  private Integer opponentKickReturnLong;

  public static final String SERIALIZED_NAME_OPPONENT_KICK_RETURN_TOUCHDOWNS = "OpponentKickReturnTouchdowns";
  @SerializedName(SERIALIZED_NAME_OPPONENT_KICK_RETURN_TOUCHDOWNS)
  private Integer opponentKickReturnTouchdowns;

  public static final String SERIALIZED_NAME_OPPONENT_KICK_RETURN_YARDS = "OpponentKickReturnYards";
  @SerializedName(SERIALIZED_NAME_OPPONENT_KICK_RETURN_YARDS)
  private Integer opponentKickReturnYards;

  public static final String SERIALIZED_NAME_OPPONENT_KICK_RETURNS = "OpponentKickReturns";
  @SerializedName(SERIALIZED_NAME_OPPONENT_KICK_RETURNS)
  private Integer opponentKickReturns;

  public static final String SERIALIZED_NAME_OPPONENT_KICKOFF_TOUCHBACKS = "OpponentKickoffTouchbacks";
  @SerializedName(SERIALIZED_NAME_OPPONENT_KICKOFF_TOUCHBACKS)
  private Integer opponentKickoffTouchbacks;

  public static final String SERIALIZED_NAME_OPPONENT_KICKOFFS = "OpponentKickoffs";
  @SerializedName(SERIALIZED_NAME_OPPONENT_KICKOFFS)
  private Integer opponentKickoffs;

  public static final String SERIALIZED_NAME_OPPONENT_KICKOFFS_IN_END_ZONE = "OpponentKickoffsInEndZone";
  @SerializedName(SERIALIZED_NAME_OPPONENT_KICKOFFS_IN_END_ZONE)
  private Integer opponentKickoffsInEndZone;

  public static final String SERIALIZED_NAME_OPPONENT_OFFENSIVE_PLAYS = "OpponentOffensivePlays";
  @SerializedName(SERIALIZED_NAME_OPPONENT_OFFENSIVE_PLAYS)
  private Integer opponentOffensivePlays;

  public static final String SERIALIZED_NAME_OPPONENT_OFFENSIVE_YARDS = "OpponentOffensiveYards";
  @SerializedName(SERIALIZED_NAME_OPPONENT_OFFENSIVE_YARDS)
  private Integer opponentOffensiveYards;

  public static final String SERIALIZED_NAME_OPPONENT_OFFENSIVE_YARDS_PER_PLAY = "OpponentOffensiveYardsPerPlay";
  @SerializedName(SERIALIZED_NAME_OPPONENT_OFFENSIVE_YARDS_PER_PLAY)
  private BigDecimal opponentOffensiveYardsPerPlay;

  public static final String SERIALIZED_NAME_OPPONENT_PASSER_RATING = "OpponentPasserRating";
  @SerializedName(SERIALIZED_NAME_OPPONENT_PASSER_RATING)
  private BigDecimal opponentPasserRating;

  public static final String SERIALIZED_NAME_OPPONENT_PASSES_DEFENDED = "OpponentPassesDefended";
  @SerializedName(SERIALIZED_NAME_OPPONENT_PASSES_DEFENDED)
  private Integer opponentPassesDefended;

  public static final String SERIALIZED_NAME_OPPONENT_PASSING_ATTEMPTS = "OpponentPassingAttempts";
  @SerializedName(SERIALIZED_NAME_OPPONENT_PASSING_ATTEMPTS)
  private Integer opponentPassingAttempts;

  public static final String SERIALIZED_NAME_OPPONENT_PASSING_COMPLETIONS = "OpponentPassingCompletions";
  @SerializedName(SERIALIZED_NAME_OPPONENT_PASSING_COMPLETIONS)
  private Integer opponentPassingCompletions;

  public static final String SERIALIZED_NAME_OPPONENT_PASSING_DROPBACKS = "OpponentPassingDropbacks";
  @SerializedName(SERIALIZED_NAME_OPPONENT_PASSING_DROPBACKS)
  private Integer opponentPassingDropbacks;

  public static final String SERIALIZED_NAME_OPPONENT_PASSING_INTERCEPTION_PERCENTAGE = "OpponentPassingInterceptionPercentage";
  @SerializedName(SERIALIZED_NAME_OPPONENT_PASSING_INTERCEPTION_PERCENTAGE)
  private BigDecimal opponentPassingInterceptionPercentage;

  public static final String SERIALIZED_NAME_OPPONENT_PASSING_INTERCEPTIONS = "OpponentPassingInterceptions";
  @SerializedName(SERIALIZED_NAME_OPPONENT_PASSING_INTERCEPTIONS)
  private Integer opponentPassingInterceptions;

  public static final String SERIALIZED_NAME_OPPONENT_PASSING_TOUCHDOWNS = "OpponentPassingTouchdowns";
  @SerializedName(SERIALIZED_NAME_OPPONENT_PASSING_TOUCHDOWNS)
  private Integer opponentPassingTouchdowns;

  public static final String SERIALIZED_NAME_OPPONENT_PASSING_YARDS = "OpponentPassingYards";
  @SerializedName(SERIALIZED_NAME_OPPONENT_PASSING_YARDS)
  private Integer opponentPassingYards;

  public static final String SERIALIZED_NAME_OPPONENT_PASSING_YARDS_PER_ATTEMPT = "OpponentPassingYardsPerAttempt";
  @SerializedName(SERIALIZED_NAME_OPPONENT_PASSING_YARDS_PER_ATTEMPT)
  private BigDecimal opponentPassingYardsPerAttempt;

  public static final String SERIALIZED_NAME_OPPONENT_PASSING_YARDS_PER_COMPLETION = "OpponentPassingYardsPerCompletion";
  @SerializedName(SERIALIZED_NAME_OPPONENT_PASSING_YARDS_PER_COMPLETION)
  private BigDecimal opponentPassingYardsPerCompletion;

  public static final String SERIALIZED_NAME_OPPONENT_PENALTIES = "OpponentPenalties";
  @SerializedName(SERIALIZED_NAME_OPPONENT_PENALTIES)
  private Integer opponentPenalties;

  public static final String SERIALIZED_NAME_OPPONENT_PENALTY_YARDS = "OpponentPenaltyYards";
  @SerializedName(SERIALIZED_NAME_OPPONENT_PENALTY_YARDS)
  private Integer opponentPenaltyYards;

  public static final String SERIALIZED_NAME_OPPONENT_PUNT_AVERAGE = "OpponentPuntAverage";
  @SerializedName(SERIALIZED_NAME_OPPONENT_PUNT_AVERAGE)
  private BigDecimal opponentPuntAverage;

  public static final String SERIALIZED_NAME_OPPONENT_PUNT_NET_AVERAGE = "OpponentPuntNetAverage";
  @SerializedName(SERIALIZED_NAME_OPPONENT_PUNT_NET_AVERAGE)
  private BigDecimal opponentPuntNetAverage;

  public static final String SERIALIZED_NAME_OPPONENT_PUNT_NET_YARDS = "OpponentPuntNetYards";
  @SerializedName(SERIALIZED_NAME_OPPONENT_PUNT_NET_YARDS)
  private Integer opponentPuntNetYards;

  public static final String SERIALIZED_NAME_OPPONENT_PUNT_RETURN_AVERAGE = "OpponentPuntReturnAverage";
  @SerializedName(SERIALIZED_NAME_OPPONENT_PUNT_RETURN_AVERAGE)
  private BigDecimal opponentPuntReturnAverage;

  public static final String SERIALIZED_NAME_OPPONENT_PUNT_RETURN_LONG = "OpponentPuntReturnLong";
  @SerializedName(SERIALIZED_NAME_OPPONENT_PUNT_RETURN_LONG)
  private Integer opponentPuntReturnLong;

  public static final String SERIALIZED_NAME_OPPONENT_PUNT_RETURN_TOUCHDOWNS = "OpponentPuntReturnTouchdowns";
  @SerializedName(SERIALIZED_NAME_OPPONENT_PUNT_RETURN_TOUCHDOWNS)
  private Integer opponentPuntReturnTouchdowns;

  public static final String SERIALIZED_NAME_OPPONENT_PUNT_RETURN_YARDS = "OpponentPuntReturnYards";
  @SerializedName(SERIALIZED_NAME_OPPONENT_PUNT_RETURN_YARDS)
  private Integer opponentPuntReturnYards;

  public static final String SERIALIZED_NAME_OPPONENT_PUNT_RETURNS = "OpponentPuntReturns";
  @SerializedName(SERIALIZED_NAME_OPPONENT_PUNT_RETURNS)
  private Integer opponentPuntReturns;

  public static final String SERIALIZED_NAME_OPPONENT_PUNT_YARDS = "OpponentPuntYards";
  @SerializedName(SERIALIZED_NAME_OPPONENT_PUNT_YARDS)
  private Integer opponentPuntYards;

  public static final String SERIALIZED_NAME_OPPONENT_PUNTS = "OpponentPunts";
  @SerializedName(SERIALIZED_NAME_OPPONENT_PUNTS)
  private Integer opponentPunts;

  public static final String SERIALIZED_NAME_OPPONENT_PUNTS_HAD_BLOCKED = "OpponentPuntsHadBlocked";
  @SerializedName(SERIALIZED_NAME_OPPONENT_PUNTS_HAD_BLOCKED)
  private Integer opponentPuntsHadBlocked;

  public static final String SERIALIZED_NAME_OPPONENT_QUARTERBACK_HITS = "OpponentQuarterbackHits";
  @SerializedName(SERIALIZED_NAME_OPPONENT_QUARTERBACK_HITS)
  private Integer opponentQuarterbackHits;

  public static final String SERIALIZED_NAME_OPPONENT_QUARTERBACK_HITS_DIFFERENTIAL = "OpponentQuarterbackHitsDifferential";
  @SerializedName(SERIALIZED_NAME_OPPONENT_QUARTERBACK_HITS_DIFFERENTIAL)
  private Integer opponentQuarterbackHitsDifferential;

  public static final String SERIALIZED_NAME_OPPONENT_QUARTERBACK_HITS_PERCENTAGE = "OpponentQuarterbackHitsPercentage";
  @SerializedName(SERIALIZED_NAME_OPPONENT_QUARTERBACK_HITS_PERCENTAGE)
  private BigDecimal opponentQuarterbackHitsPercentage;

  public static final String SERIALIZED_NAME_OPPONENT_QUARTERBACK_SACKS_DIFFERENTIAL = "OpponentQuarterbackSacksDifferential";
  @SerializedName(SERIALIZED_NAME_OPPONENT_QUARTERBACK_SACKS_DIFFERENTIAL)
  private Integer opponentQuarterbackSacksDifferential;

  public static final String SERIALIZED_NAME_OPPONENT_RED_ZONE_ATTEMPTS = "OpponentRedZoneAttempts";
  @SerializedName(SERIALIZED_NAME_OPPONENT_RED_ZONE_ATTEMPTS)
  private Integer opponentRedZoneAttempts;

  public static final String SERIALIZED_NAME_OPPONENT_RED_ZONE_CONVERSIONS = "OpponentRedZoneConversions";
  @SerializedName(SERIALIZED_NAME_OPPONENT_RED_ZONE_CONVERSIONS)
  private Integer opponentRedZoneConversions;

  public static final String SERIALIZED_NAME_OPPONENT_RED_ZONE_PERCENTAGE = "OpponentRedZonePercentage";
  @SerializedName(SERIALIZED_NAME_OPPONENT_RED_ZONE_PERCENTAGE)
  private BigDecimal opponentRedZonePercentage;

  public static final String SERIALIZED_NAME_OPPONENT_RETURN_YARDS = "OpponentReturnYards";
  @SerializedName(SERIALIZED_NAME_OPPONENT_RETURN_YARDS)
  private Integer opponentReturnYards;

  public static final String SERIALIZED_NAME_OPPONENT_RUSHING_ATTEMPTS = "OpponentRushingAttempts";
  @SerializedName(SERIALIZED_NAME_OPPONENT_RUSHING_ATTEMPTS)
  private Integer opponentRushingAttempts;

  public static final String SERIALIZED_NAME_OPPONENT_RUSHING_TOUCHDOWNS = "OpponentRushingTouchdowns";
  @SerializedName(SERIALIZED_NAME_OPPONENT_RUSHING_TOUCHDOWNS)
  private Integer opponentRushingTouchdowns;

  public static final String SERIALIZED_NAME_OPPONENT_RUSHING_YARDS = "OpponentRushingYards";
  @SerializedName(SERIALIZED_NAME_OPPONENT_RUSHING_YARDS)
  private Integer opponentRushingYards;

  public static final String SERIALIZED_NAME_OPPONENT_RUSHING_YARDS_PER_ATTEMPT = "OpponentRushingYardsPerAttempt";
  @SerializedName(SERIALIZED_NAME_OPPONENT_RUSHING_YARDS_PER_ATTEMPT)
  private BigDecimal opponentRushingYardsPerAttempt;

  public static final String SERIALIZED_NAME_OPPONENT_SACK_YARDS = "OpponentSackYards";
  @SerializedName(SERIALIZED_NAME_OPPONENT_SACK_YARDS)
  private Integer opponentSackYards;

  public static final String SERIALIZED_NAME_OPPONENT_SACKS = "OpponentSacks";
  @SerializedName(SERIALIZED_NAME_OPPONENT_SACKS)
  private Integer opponentSacks;

  public static final String SERIALIZED_NAME_OPPONENT_SAFETIES = "OpponentSafeties";
  @SerializedName(SERIALIZED_NAME_OPPONENT_SAFETIES)
  private Integer opponentSafeties;

  public static final String SERIALIZED_NAME_OPPONENT_SCORE = "OpponentScore";
  @SerializedName(SERIALIZED_NAME_OPPONENT_SCORE)
  private Integer opponentScore;

  public static final String SERIALIZED_NAME_OPPONENT_SCORE_OVERTIME = "OpponentScoreOvertime";
  @SerializedName(SERIALIZED_NAME_OPPONENT_SCORE_OVERTIME)
  private Integer opponentScoreOvertime;

  public static final String SERIALIZED_NAME_OPPONENT_SCORE_QUARTER1 = "OpponentScoreQuarter1";
  @SerializedName(SERIALIZED_NAME_OPPONENT_SCORE_QUARTER1)
  private Integer opponentScoreQuarter1;

  public static final String SERIALIZED_NAME_OPPONENT_SCORE_QUARTER2 = "OpponentScoreQuarter2";
  @SerializedName(SERIALIZED_NAME_OPPONENT_SCORE_QUARTER2)
  private Integer opponentScoreQuarter2;

  public static final String SERIALIZED_NAME_OPPONENT_SCORE_QUARTER3 = "OpponentScoreQuarter3";
  @SerializedName(SERIALIZED_NAME_OPPONENT_SCORE_QUARTER3)
  private Integer opponentScoreQuarter3;

  public static final String SERIALIZED_NAME_OPPONENT_SCORE_QUARTER4 = "OpponentScoreQuarter4";
  @SerializedName(SERIALIZED_NAME_OPPONENT_SCORE_QUARTER4)
  private Integer opponentScoreQuarter4;

  public static final String SERIALIZED_NAME_OPPONENT_SOLO_TACKLES = "OpponentSoloTackles";
  @SerializedName(SERIALIZED_NAME_OPPONENT_SOLO_TACKLES)
  private Integer opponentSoloTackles;

  public static final String SERIALIZED_NAME_OPPONENT_TACKLES_FOR_LOSS = "OpponentTacklesForLoss";
  @SerializedName(SERIALIZED_NAME_OPPONENT_TACKLES_FOR_LOSS)
  private Integer opponentTacklesForLoss;

  public static final String SERIALIZED_NAME_OPPONENT_TACKLES_FOR_LOSS_DIFFERENTIAL = "OpponentTacklesForLossDifferential";
  @SerializedName(SERIALIZED_NAME_OPPONENT_TACKLES_FOR_LOSS_DIFFERENTIAL)
  private Integer opponentTacklesForLossDifferential;

  public static final String SERIALIZED_NAME_OPPONENT_TACKLES_FOR_LOSS_PERCENTAGE = "OpponentTacklesForLossPercentage";
  @SerializedName(SERIALIZED_NAME_OPPONENT_TACKLES_FOR_LOSS_PERCENTAGE)
  private BigDecimal opponentTacklesForLossPercentage;

  public static final String SERIALIZED_NAME_OPPONENT_TAKEAWAYS = "OpponentTakeaways";
  @SerializedName(SERIALIZED_NAME_OPPONENT_TAKEAWAYS)
  private Integer opponentTakeaways;

  public static final String SERIALIZED_NAME_OPPONENT_THIRD_DOWN_ATTEMPTS = "OpponentThirdDownAttempts";
  @SerializedName(SERIALIZED_NAME_OPPONENT_THIRD_DOWN_ATTEMPTS)
  private Integer opponentThirdDownAttempts;

  public static final String SERIALIZED_NAME_OPPONENT_THIRD_DOWN_CONVERSIONS = "OpponentThirdDownConversions";
  @SerializedName(SERIALIZED_NAME_OPPONENT_THIRD_DOWN_CONVERSIONS)
  private Integer opponentThirdDownConversions;

  public static final String SERIALIZED_NAME_OPPONENT_THIRD_DOWN_PERCENTAGE = "OpponentThirdDownPercentage";
  @SerializedName(SERIALIZED_NAME_OPPONENT_THIRD_DOWN_PERCENTAGE)
  private BigDecimal opponentThirdDownPercentage;

  public static final String SERIALIZED_NAME_OPPONENT_TIME_OF_POSSESSION = "OpponentTimeOfPossession";
  @SerializedName(SERIALIZED_NAME_OPPONENT_TIME_OF_POSSESSION)
  private String opponentTimeOfPossession;

  public static final String SERIALIZED_NAME_OPPONENT_TIMES_SACKED = "OpponentTimesSacked";
  @SerializedName(SERIALIZED_NAME_OPPONENT_TIMES_SACKED)
  private Integer opponentTimesSacked;

  public static final String SERIALIZED_NAME_OPPONENT_TIMES_SACKED_PERCENTAGE = "OpponentTimesSackedPercentage";
  @SerializedName(SERIALIZED_NAME_OPPONENT_TIMES_SACKED_PERCENTAGE)
  private BigDecimal opponentTimesSackedPercentage;

  public static final String SERIALIZED_NAME_OPPONENT_TIMES_SACKED_YARDS = "OpponentTimesSackedYards";
  @SerializedName(SERIALIZED_NAME_OPPONENT_TIMES_SACKED_YARDS)
  private Integer opponentTimesSackedYards;

  public static final String SERIALIZED_NAME_OPPONENT_TOUCHDOWNS = "OpponentTouchdowns";
  @SerializedName(SERIALIZED_NAME_OPPONENT_TOUCHDOWNS)
  private Integer opponentTouchdowns;

  public static final String SERIALIZED_NAME_OPPONENT_TURNOVER_DIFFERENTIAL = "OpponentTurnoverDifferential";
  @SerializedName(SERIALIZED_NAME_OPPONENT_TURNOVER_DIFFERENTIAL)
  private Integer opponentTurnoverDifferential;

  public static final String SERIALIZED_NAME_OPPONENT_TWO_POINT_CONVERSION_RETURNS = "OpponentTwoPointConversionReturns";
  @SerializedName(SERIALIZED_NAME_OPPONENT_TWO_POINT_CONVERSION_RETURNS)
  private Integer opponentTwoPointConversionReturns;

  public static final String SERIALIZED_NAME_OVER_UNDER = "OverUnder";
  @SerializedName(SERIALIZED_NAME_OVER_UNDER)
  private BigDecimal overUnder;

  public static final String SERIALIZED_NAME_PASSER_RATING = "PasserRating";
  @SerializedName(SERIALIZED_NAME_PASSER_RATING)
  private BigDecimal passerRating;

  public static final String SERIALIZED_NAME_PASSES_DEFENDED = "PassesDefended";
  @SerializedName(SERIALIZED_NAME_PASSES_DEFENDED)
  private Integer passesDefended;

  public static final String SERIALIZED_NAME_PASSING_ATTEMPTS = "PassingAttempts";
  @SerializedName(SERIALIZED_NAME_PASSING_ATTEMPTS)
  private Integer passingAttempts;

  public static final String SERIALIZED_NAME_PASSING_COMPLETIONS = "PassingCompletions";
  @SerializedName(SERIALIZED_NAME_PASSING_COMPLETIONS)
  private Integer passingCompletions;

  public static final String SERIALIZED_NAME_PASSING_DROPBACKS = "PassingDropbacks";
  @SerializedName(SERIALIZED_NAME_PASSING_DROPBACKS)
  private Integer passingDropbacks;

  public static final String SERIALIZED_NAME_PASSING_INTERCEPTION_PERCENTAGE = "PassingInterceptionPercentage";
  @SerializedName(SERIALIZED_NAME_PASSING_INTERCEPTION_PERCENTAGE)
  private BigDecimal passingInterceptionPercentage;

  public static final String SERIALIZED_NAME_PASSING_INTERCEPTIONS = "PassingInterceptions";
  @SerializedName(SERIALIZED_NAME_PASSING_INTERCEPTIONS)
  private Integer passingInterceptions;

  public static final String SERIALIZED_NAME_PASSING_TOUCHDOWNS = "PassingTouchdowns";
  @SerializedName(SERIALIZED_NAME_PASSING_TOUCHDOWNS)
  private Integer passingTouchdowns;

  public static final String SERIALIZED_NAME_PASSING_YARDS = "PassingYards";
  @SerializedName(SERIALIZED_NAME_PASSING_YARDS)
  private Integer passingYards;

  public static final String SERIALIZED_NAME_PASSING_YARDS_PER_ATTEMPT = "PassingYardsPerAttempt";
  @SerializedName(SERIALIZED_NAME_PASSING_YARDS_PER_ATTEMPT)
  private BigDecimal passingYardsPerAttempt;

  public static final String SERIALIZED_NAME_PASSING_YARDS_PER_COMPLETION = "PassingYardsPerCompletion";
  @SerializedName(SERIALIZED_NAME_PASSING_YARDS_PER_COMPLETION)
  private BigDecimal passingYardsPerCompletion;

  public static final String SERIALIZED_NAME_PENALTIES = "Penalties";
  @SerializedName(SERIALIZED_NAME_PENALTIES)
  private Integer penalties;

  public static final String SERIALIZED_NAME_PENALTY_YARD_DIFFERENTIAL = "PenaltyYardDifferential";
  @SerializedName(SERIALIZED_NAME_PENALTY_YARD_DIFFERENTIAL)
  private Integer penaltyYardDifferential;

  public static final String SERIALIZED_NAME_PENALTY_YARDS = "PenaltyYards";
  @SerializedName(SERIALIZED_NAME_PENALTY_YARDS)
  private Integer penaltyYards;

  public static final String SERIALIZED_NAME_POINT_DIFFERENTIAL = "PointDifferential";
  @SerializedName(SERIALIZED_NAME_POINT_DIFFERENTIAL)
  private Integer pointDifferential;

  public static final String SERIALIZED_NAME_POINT_SPREAD = "PointSpread";
  @SerializedName(SERIALIZED_NAME_POINT_SPREAD)
  private BigDecimal pointSpread;

  public static final String SERIALIZED_NAME_PUNT_AVERAGE = "PuntAverage";
  @SerializedName(SERIALIZED_NAME_PUNT_AVERAGE)
  private BigDecimal puntAverage;

  public static final String SERIALIZED_NAME_PUNT_NET_AVERAGE = "PuntNetAverage";
  @SerializedName(SERIALIZED_NAME_PUNT_NET_AVERAGE)
  private BigDecimal puntNetAverage;

  public static final String SERIALIZED_NAME_PUNT_NET_YARDS = "PuntNetYards";
  @SerializedName(SERIALIZED_NAME_PUNT_NET_YARDS)
  private Integer puntNetYards;

  public static final String SERIALIZED_NAME_PUNT_RETURN_AVERAGE = "PuntReturnAverage";
  @SerializedName(SERIALIZED_NAME_PUNT_RETURN_AVERAGE)
  private BigDecimal puntReturnAverage;

  public static final String SERIALIZED_NAME_PUNT_RETURN_LONG = "PuntReturnLong";
  @SerializedName(SERIALIZED_NAME_PUNT_RETURN_LONG)
  private Integer puntReturnLong;

  public static final String SERIALIZED_NAME_PUNT_RETURN_TOUCHDOWNS = "PuntReturnTouchdowns";
  @SerializedName(SERIALIZED_NAME_PUNT_RETURN_TOUCHDOWNS)
  private Integer puntReturnTouchdowns;

  public static final String SERIALIZED_NAME_PUNT_RETURN_YARD_DIFFERENTIAL = "PuntReturnYardDifferential";
  @SerializedName(SERIALIZED_NAME_PUNT_RETURN_YARD_DIFFERENTIAL)
  private Integer puntReturnYardDifferential;

  public static final String SERIALIZED_NAME_PUNT_RETURN_YARDS = "PuntReturnYards";
  @SerializedName(SERIALIZED_NAME_PUNT_RETURN_YARDS)
  private Integer puntReturnYards;

  public static final String SERIALIZED_NAME_PUNT_RETURNS = "PuntReturns";
  @SerializedName(SERIALIZED_NAME_PUNT_RETURNS)
  private Integer puntReturns;

  public static final String SERIALIZED_NAME_PUNT_YARDS = "PuntYards";
  @SerializedName(SERIALIZED_NAME_PUNT_YARDS)
  private Integer puntYards;

  public static final String SERIALIZED_NAME_PUNTS = "Punts";
  @SerializedName(SERIALIZED_NAME_PUNTS)
  private Integer punts;

  public static final String SERIALIZED_NAME_PUNTS_HAD_BLOCKED = "PuntsHadBlocked";
  @SerializedName(SERIALIZED_NAME_PUNTS_HAD_BLOCKED)
  private Integer puntsHadBlocked;

  public static final String SERIALIZED_NAME_QUARTERBACK_HITS = "QuarterbackHits";
  @SerializedName(SERIALIZED_NAME_QUARTERBACK_HITS)
  private Integer quarterbackHits;

  public static final String SERIALIZED_NAME_QUARTERBACK_HITS_DIFFERENTIAL = "QuarterbackHitsDifferential";
  @SerializedName(SERIALIZED_NAME_QUARTERBACK_HITS_DIFFERENTIAL)
  private Integer quarterbackHitsDifferential;

  public static final String SERIALIZED_NAME_QUARTERBACK_HITS_PERCENTAGE = "QuarterbackHitsPercentage";
  @SerializedName(SERIALIZED_NAME_QUARTERBACK_HITS_PERCENTAGE)
  private BigDecimal quarterbackHitsPercentage;

  public static final String SERIALIZED_NAME_QUARTERBACK_SACKS_DIFFERENTIAL = "QuarterbackSacksDifferential";
  @SerializedName(SERIALIZED_NAME_QUARTERBACK_SACKS_DIFFERENTIAL)
  private Integer quarterbackSacksDifferential;

  public static final String SERIALIZED_NAME_RED_ZONE_ATTEMPTS = "RedZoneAttempts";
  @SerializedName(SERIALIZED_NAME_RED_ZONE_ATTEMPTS)
  private Integer redZoneAttempts;

  public static final String SERIALIZED_NAME_RED_ZONE_CONVERSIONS = "RedZoneConversions";
  @SerializedName(SERIALIZED_NAME_RED_ZONE_CONVERSIONS)
  private Integer redZoneConversions;

  public static final String SERIALIZED_NAME_RED_ZONE_PERCENTAGE = "RedZonePercentage";
  @SerializedName(SERIALIZED_NAME_RED_ZONE_PERCENTAGE)
  private BigDecimal redZonePercentage;

  public static final String SERIALIZED_NAME_RETURN_YARDS = "ReturnYards";
  @SerializedName(SERIALIZED_NAME_RETURN_YARDS)
  private Integer returnYards;

  public static final String SERIALIZED_NAME_RUSHING_ATTEMPTS = "RushingAttempts";
  @SerializedName(SERIALIZED_NAME_RUSHING_ATTEMPTS)
  private Integer rushingAttempts;

  public static final String SERIALIZED_NAME_RUSHING_TOUCHDOWNS = "RushingTouchdowns";
  @SerializedName(SERIALIZED_NAME_RUSHING_TOUCHDOWNS)
  private Integer rushingTouchdowns;

  public static final String SERIALIZED_NAME_RUSHING_YARDS = "RushingYards";
  @SerializedName(SERIALIZED_NAME_RUSHING_YARDS)
  private Integer rushingYards;

  public static final String SERIALIZED_NAME_RUSHING_YARDS_PER_ATTEMPT = "RushingYardsPerAttempt";
  @SerializedName(SERIALIZED_NAME_RUSHING_YARDS_PER_ATTEMPT)
  private BigDecimal rushingYardsPerAttempt;

  public static final String SERIALIZED_NAME_SACK_YARDS = "SackYards";
  @SerializedName(SERIALIZED_NAME_SACK_YARDS)
  private Integer sackYards;

  public static final String SERIALIZED_NAME_SACKS = "Sacks";
  @SerializedName(SERIALIZED_NAME_SACKS)
  private Integer sacks;

  public static final String SERIALIZED_NAME_SAFETIES = "Safeties";
  @SerializedName(SERIALIZED_NAME_SAFETIES)
  private Integer safeties;

  public static final String SERIALIZED_NAME_SCORE = "Score";
  @SerializedName(SERIALIZED_NAME_SCORE)
  private Integer score;

  public static final String SERIALIZED_NAME_SCORE_OVERTIME = "ScoreOvertime";
  @SerializedName(SERIALIZED_NAME_SCORE_OVERTIME)
  private Integer scoreOvertime;

  public static final String SERIALIZED_NAME_SCORE_QUARTER1 = "ScoreQuarter1";
  @SerializedName(SERIALIZED_NAME_SCORE_QUARTER1)
  private Integer scoreQuarter1;

  public static final String SERIALIZED_NAME_SCORE_QUARTER2 = "ScoreQuarter2";
  @SerializedName(SERIALIZED_NAME_SCORE_QUARTER2)
  private Integer scoreQuarter2;

  public static final String SERIALIZED_NAME_SCORE_QUARTER3 = "ScoreQuarter3";
  @SerializedName(SERIALIZED_NAME_SCORE_QUARTER3)
  private Integer scoreQuarter3;

  public static final String SERIALIZED_NAME_SCORE_QUARTER4 = "ScoreQuarter4";
  @SerializedName(SERIALIZED_NAME_SCORE_QUARTER4)
  private Integer scoreQuarter4;

  public static final String SERIALIZED_NAME_SEASON = "Season";
  @SerializedName(SERIALIZED_NAME_SEASON)
  private Integer season;

  public static final String SERIALIZED_NAME_SEASON_TYPE = "SeasonType";
  @SerializedName(SERIALIZED_NAME_SEASON_TYPE)
  private Integer seasonType;

  public static final String SERIALIZED_NAME_SOLO_TACKLES = "SoloTackles";
  @SerializedName(SERIALIZED_NAME_SOLO_TACKLES)
  private Integer soloTackles;

  public static final String SERIALIZED_NAME_TACKLES_FOR_LOSS = "TacklesForLoss";
  @SerializedName(SERIALIZED_NAME_TACKLES_FOR_LOSS)
  private Integer tacklesForLoss;

  public static final String SERIALIZED_NAME_TACKLES_FOR_LOSS_DIFFERENTIAL = "TacklesForLossDifferential";
  @SerializedName(SERIALIZED_NAME_TACKLES_FOR_LOSS_DIFFERENTIAL)
  private Integer tacklesForLossDifferential;

  public static final String SERIALIZED_NAME_TACKLES_FOR_LOSS_PERCENTAGE = "TacklesForLossPercentage";
  @SerializedName(SERIALIZED_NAME_TACKLES_FOR_LOSS_PERCENTAGE)
  private BigDecimal tacklesForLossPercentage;

  public static final String SERIALIZED_NAME_TAKEAWAYS = "Takeaways";
  @SerializedName(SERIALIZED_NAME_TAKEAWAYS)
  private Integer takeaways;

  public static final String SERIALIZED_NAME_TEAM = "Team";
  @SerializedName(SERIALIZED_NAME_TEAM)
  private String team;

  public static final String SERIALIZED_NAME_TEAM_I_D = "TeamID";
  @SerializedName(SERIALIZED_NAME_TEAM_I_D)
  private Integer teamID;

  public static final String SERIALIZED_NAME_TEAM_NAME = "TeamName";
  @SerializedName(SERIALIZED_NAME_TEAM_NAME)
  private String teamName;

  public static final String SERIALIZED_NAME_TEAM_SEASON_I_D = "TeamSeasonID";
  @SerializedName(SERIALIZED_NAME_TEAM_SEASON_I_D)
  private Integer teamSeasonID;

  public static final String SERIALIZED_NAME_TEAM_STAT_I_D = "TeamStatID";
  @SerializedName(SERIALIZED_NAME_TEAM_STAT_I_D)
  private Integer teamStatID;

  public static final String SERIALIZED_NAME_TEMPERATURE = "Temperature";
  @SerializedName(SERIALIZED_NAME_TEMPERATURE)
  private Integer temperature;

  public static final String SERIALIZED_NAME_THIRD_DOWN_ATTEMPTS = "ThirdDownAttempts";
  @SerializedName(SERIALIZED_NAME_THIRD_DOWN_ATTEMPTS)
  private Integer thirdDownAttempts;

  public static final String SERIALIZED_NAME_THIRD_DOWN_CONVERSIONS = "ThirdDownConversions";
  @SerializedName(SERIALIZED_NAME_THIRD_DOWN_CONVERSIONS)
  private Integer thirdDownConversions;

  public static final String SERIALIZED_NAME_THIRD_DOWN_PERCENTAGE = "ThirdDownPercentage";
  @SerializedName(SERIALIZED_NAME_THIRD_DOWN_PERCENTAGE)
  private BigDecimal thirdDownPercentage;

  public static final String SERIALIZED_NAME_TIME_OF_POSSESSION = "TimeOfPossession";
  @SerializedName(SERIALIZED_NAME_TIME_OF_POSSESSION)
  private String timeOfPossession;

  public static final String SERIALIZED_NAME_TIMES_SACKED = "TimesSacked";
  @SerializedName(SERIALIZED_NAME_TIMES_SACKED)
  private Integer timesSacked;

  public static final String SERIALIZED_NAME_TIMES_SACKED_PERCENTAGE = "TimesSackedPercentage";
  @SerializedName(SERIALIZED_NAME_TIMES_SACKED_PERCENTAGE)
  private BigDecimal timesSackedPercentage;

  public static final String SERIALIZED_NAME_TIMES_SACKED_YARDS = "TimesSackedYards";
  @SerializedName(SERIALIZED_NAME_TIMES_SACKED_YARDS)
  private Integer timesSackedYards;

  public static final String SERIALIZED_NAME_TOTAL_SCORE = "TotalScore";
  @SerializedName(SERIALIZED_NAME_TOTAL_SCORE)
  private Integer totalScore;

  public static final String SERIALIZED_NAME_TOUCHDOWNS = "Touchdowns";
  @SerializedName(SERIALIZED_NAME_TOUCHDOWNS)
  private Integer touchdowns;

  public static final String SERIALIZED_NAME_TURNOVER_DIFFERENTIAL = "TurnoverDifferential";
  @SerializedName(SERIALIZED_NAME_TURNOVER_DIFFERENTIAL)
  private Integer turnoverDifferential;

  public static final String SERIALIZED_NAME_TWO_POINT_CONVERSION_RETURNS = "TwoPointConversionReturns";
  @SerializedName(SERIALIZED_NAME_TWO_POINT_CONVERSION_RETURNS)
  private Integer twoPointConversionReturns;

  public static final String SERIALIZED_NAME_WIND_SPEED = "WindSpeed";
  @SerializedName(SERIALIZED_NAME_WIND_SPEED)
  private Integer windSpeed;

  public TeamSeason() {
  }

  public TeamSeason assistedTackles(Integer assistedTackles) {
    this.assistedTackles = assistedTackles;
    return this;
  }

  /**
   * Get assistedTackles
   * @return assistedTackles
   */
  @javax.annotation.Nullable
  public Integer getAssistedTackles() {
    return assistedTackles;
  }

  public void setAssistedTackles(Integer assistedTackles) {
    this.assistedTackles = assistedTackles;
  }


  public TeamSeason blockedKickReturnTouchdowns(Integer blockedKickReturnTouchdowns) {
    this.blockedKickReturnTouchdowns = blockedKickReturnTouchdowns;
    return this;
  }

  /**
   * Get blockedKickReturnTouchdowns
   * @return blockedKickReturnTouchdowns
   */
  @javax.annotation.Nullable
  public Integer getBlockedKickReturnTouchdowns() {
    return blockedKickReturnTouchdowns;
  }

  public void setBlockedKickReturnTouchdowns(Integer blockedKickReturnTouchdowns) {
    this.blockedKickReturnTouchdowns = blockedKickReturnTouchdowns;
  }


  public TeamSeason blockedKickReturnYards(Integer blockedKickReturnYards) {
    this.blockedKickReturnYards = blockedKickReturnYards;
    return this;
  }

  /**
   * Get blockedKickReturnYards
   * @return blockedKickReturnYards
   */
  @javax.annotation.Nullable
  public Integer getBlockedKickReturnYards() {
    return blockedKickReturnYards;
  }

  public void setBlockedKickReturnYards(Integer blockedKickReturnYards) {
    this.blockedKickReturnYards = blockedKickReturnYards;
  }


  public TeamSeason blockedKicks(Integer blockedKicks) {
    this.blockedKicks = blockedKicks;
    return this;
  }

  /**
   * Get blockedKicks
   * @return blockedKicks
   */
  @javax.annotation.Nullable
  public Integer getBlockedKicks() {
    return blockedKicks;
  }

  public void setBlockedKicks(Integer blockedKicks) {
    this.blockedKicks = blockedKicks;
  }


  public TeamSeason completionPercentage(BigDecimal completionPercentage) {
    this.completionPercentage = completionPercentage;
    return this;
  }

  /**
   * Get completionPercentage
   * @return completionPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getCompletionPercentage() {
    return completionPercentage;
  }

  public void setCompletionPercentage(BigDecimal completionPercentage) {
    this.completionPercentage = completionPercentage;
  }


  public TeamSeason extraPointKickingAttempts(Integer extraPointKickingAttempts) {
    this.extraPointKickingAttempts = extraPointKickingAttempts;
    return this;
  }

  /**
   * Get extraPointKickingAttempts
   * @return extraPointKickingAttempts
   */
  @javax.annotation.Nullable
  public Integer getExtraPointKickingAttempts() {
    return extraPointKickingAttempts;
  }

  public void setExtraPointKickingAttempts(Integer extraPointKickingAttempts) {
    this.extraPointKickingAttempts = extraPointKickingAttempts;
  }


  public TeamSeason extraPointKickingConversions(Integer extraPointKickingConversions) {
    this.extraPointKickingConversions = extraPointKickingConversions;
    return this;
  }

  /**
   * Get extraPointKickingConversions
   * @return extraPointKickingConversions
   */
  @javax.annotation.Nullable
  public Integer getExtraPointKickingConversions() {
    return extraPointKickingConversions;
  }

  public void setExtraPointKickingConversions(Integer extraPointKickingConversions) {
    this.extraPointKickingConversions = extraPointKickingConversions;
  }


  public TeamSeason extraPointPassingAttempts(Integer extraPointPassingAttempts) {
    this.extraPointPassingAttempts = extraPointPassingAttempts;
    return this;
  }

  /**
   * Get extraPointPassingAttempts
   * @return extraPointPassingAttempts
   */
  @javax.annotation.Nullable
  public Integer getExtraPointPassingAttempts() {
    return extraPointPassingAttempts;
  }

  public void setExtraPointPassingAttempts(Integer extraPointPassingAttempts) {
    this.extraPointPassingAttempts = extraPointPassingAttempts;
  }


  public TeamSeason extraPointPassingConversions(Integer extraPointPassingConversions) {
    this.extraPointPassingConversions = extraPointPassingConversions;
    return this;
  }

  /**
   * Get extraPointPassingConversions
   * @return extraPointPassingConversions
   */
  @javax.annotation.Nullable
  public Integer getExtraPointPassingConversions() {
    return extraPointPassingConversions;
  }

  public void setExtraPointPassingConversions(Integer extraPointPassingConversions) {
    this.extraPointPassingConversions = extraPointPassingConversions;
  }


  public TeamSeason extraPointPercentage(BigDecimal extraPointPercentage) {
    this.extraPointPercentage = extraPointPercentage;
    return this;
  }

  /**
   * Get extraPointPercentage
   * @return extraPointPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getExtraPointPercentage() {
    return extraPointPercentage;
  }

  public void setExtraPointPercentage(BigDecimal extraPointPercentage) {
    this.extraPointPercentage = extraPointPercentage;
  }


  public TeamSeason extraPointRushingAttempts(Integer extraPointRushingAttempts) {
    this.extraPointRushingAttempts = extraPointRushingAttempts;
    return this;
  }

  /**
   * Get extraPointRushingAttempts
   * @return extraPointRushingAttempts
   */
  @javax.annotation.Nullable
  public Integer getExtraPointRushingAttempts() {
    return extraPointRushingAttempts;
  }

  public void setExtraPointRushingAttempts(Integer extraPointRushingAttempts) {
    this.extraPointRushingAttempts = extraPointRushingAttempts;
  }


  public TeamSeason extraPointRushingConversions(Integer extraPointRushingConversions) {
    this.extraPointRushingConversions = extraPointRushingConversions;
    return this;
  }

  /**
   * Get extraPointRushingConversions
   * @return extraPointRushingConversions
   */
  @javax.annotation.Nullable
  public Integer getExtraPointRushingConversions() {
    return extraPointRushingConversions;
  }

  public void setExtraPointRushingConversions(Integer extraPointRushingConversions) {
    this.extraPointRushingConversions = extraPointRushingConversions;
  }


  public TeamSeason extraPointsHadBlocked(Integer extraPointsHadBlocked) {
    this.extraPointsHadBlocked = extraPointsHadBlocked;
    return this;
  }

  /**
   * Get extraPointsHadBlocked
   * @return extraPointsHadBlocked
   */
  @javax.annotation.Nullable
  public Integer getExtraPointsHadBlocked() {
    return extraPointsHadBlocked;
  }

  public void setExtraPointsHadBlocked(Integer extraPointsHadBlocked) {
    this.extraPointsHadBlocked = extraPointsHadBlocked;
  }


  public TeamSeason fieldGoalAttempts(Integer fieldGoalAttempts) {
    this.fieldGoalAttempts = fieldGoalAttempts;
    return this;
  }

  /**
   * Get fieldGoalAttempts
   * @return fieldGoalAttempts
   */
  @javax.annotation.Nullable
  public Integer getFieldGoalAttempts() {
    return fieldGoalAttempts;
  }

  public void setFieldGoalAttempts(Integer fieldGoalAttempts) {
    this.fieldGoalAttempts = fieldGoalAttempts;
  }


  public TeamSeason fieldGoalPercentage(BigDecimal fieldGoalPercentage) {
    this.fieldGoalPercentage = fieldGoalPercentage;
    return this;
  }

  /**
   * Get fieldGoalPercentage
   * @return fieldGoalPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getFieldGoalPercentage() {
    return fieldGoalPercentage;
  }

  public void setFieldGoalPercentage(BigDecimal fieldGoalPercentage) {
    this.fieldGoalPercentage = fieldGoalPercentage;
  }


  public TeamSeason fieldGoalReturnTouchdowns(Integer fieldGoalReturnTouchdowns) {
    this.fieldGoalReturnTouchdowns = fieldGoalReturnTouchdowns;
    return this;
  }

  /**
   * Get fieldGoalReturnTouchdowns
   * @return fieldGoalReturnTouchdowns
   */
  @javax.annotation.Nullable
  public Integer getFieldGoalReturnTouchdowns() {
    return fieldGoalReturnTouchdowns;
  }

  public void setFieldGoalReturnTouchdowns(Integer fieldGoalReturnTouchdowns) {
    this.fieldGoalReturnTouchdowns = fieldGoalReturnTouchdowns;
  }


  public TeamSeason fieldGoalReturnYards(Integer fieldGoalReturnYards) {
    this.fieldGoalReturnYards = fieldGoalReturnYards;
    return this;
  }

  /**
   * Get fieldGoalReturnYards
   * @return fieldGoalReturnYards
   */
  @javax.annotation.Nullable
  public Integer getFieldGoalReturnYards() {
    return fieldGoalReturnYards;
  }

  public void setFieldGoalReturnYards(Integer fieldGoalReturnYards) {
    this.fieldGoalReturnYards = fieldGoalReturnYards;
  }


  public TeamSeason fieldGoalsHadBlocked(Integer fieldGoalsHadBlocked) {
    this.fieldGoalsHadBlocked = fieldGoalsHadBlocked;
    return this;
  }

  /**
   * Get fieldGoalsHadBlocked
   * @return fieldGoalsHadBlocked
   */
  @javax.annotation.Nullable
  public Integer getFieldGoalsHadBlocked() {
    return fieldGoalsHadBlocked;
  }

  public void setFieldGoalsHadBlocked(Integer fieldGoalsHadBlocked) {
    this.fieldGoalsHadBlocked = fieldGoalsHadBlocked;
  }


  public TeamSeason fieldGoalsMade(Integer fieldGoalsMade) {
    this.fieldGoalsMade = fieldGoalsMade;
    return this;
  }

  /**
   * Get fieldGoalsMade
   * @return fieldGoalsMade
   */
  @javax.annotation.Nullable
  public Integer getFieldGoalsMade() {
    return fieldGoalsMade;
  }

  public void setFieldGoalsMade(Integer fieldGoalsMade) {
    this.fieldGoalsMade = fieldGoalsMade;
  }


  public TeamSeason firstDowns(Integer firstDowns) {
    this.firstDowns = firstDowns;
    return this;
  }

  /**
   * Get firstDowns
   * @return firstDowns
   */
  @javax.annotation.Nullable
  public Integer getFirstDowns() {
    return firstDowns;
  }

  public void setFirstDowns(Integer firstDowns) {
    this.firstDowns = firstDowns;
  }


  public TeamSeason firstDownsByPassing(Integer firstDownsByPassing) {
    this.firstDownsByPassing = firstDownsByPassing;
    return this;
  }

  /**
   * Get firstDownsByPassing
   * @return firstDownsByPassing
   */
  @javax.annotation.Nullable
  public Integer getFirstDownsByPassing() {
    return firstDownsByPassing;
  }

  public void setFirstDownsByPassing(Integer firstDownsByPassing) {
    this.firstDownsByPassing = firstDownsByPassing;
  }


  public TeamSeason firstDownsByPenalty(Integer firstDownsByPenalty) {
    this.firstDownsByPenalty = firstDownsByPenalty;
    return this;
  }

  /**
   * Get firstDownsByPenalty
   * @return firstDownsByPenalty
   */
  @javax.annotation.Nullable
  public Integer getFirstDownsByPenalty() {
    return firstDownsByPenalty;
  }

  public void setFirstDownsByPenalty(Integer firstDownsByPenalty) {
    this.firstDownsByPenalty = firstDownsByPenalty;
  }


  public TeamSeason firstDownsByRushing(Integer firstDownsByRushing) {
    this.firstDownsByRushing = firstDownsByRushing;
    return this;
  }

  /**
   * Get firstDownsByRushing
   * @return firstDownsByRushing
   */
  @javax.annotation.Nullable
  public Integer getFirstDownsByRushing() {
    return firstDownsByRushing;
  }

  public void setFirstDownsByRushing(Integer firstDownsByRushing) {
    this.firstDownsByRushing = firstDownsByRushing;
  }


  public TeamSeason fourthDownAttempts(Integer fourthDownAttempts) {
    this.fourthDownAttempts = fourthDownAttempts;
    return this;
  }

  /**
   * Get fourthDownAttempts
   * @return fourthDownAttempts
   */
  @javax.annotation.Nullable
  public Integer getFourthDownAttempts() {
    return fourthDownAttempts;
  }

  public void setFourthDownAttempts(Integer fourthDownAttempts) {
    this.fourthDownAttempts = fourthDownAttempts;
  }


  public TeamSeason fourthDownConversions(Integer fourthDownConversions) {
    this.fourthDownConversions = fourthDownConversions;
    return this;
  }

  /**
   * Get fourthDownConversions
   * @return fourthDownConversions
   */
  @javax.annotation.Nullable
  public Integer getFourthDownConversions() {
    return fourthDownConversions;
  }

  public void setFourthDownConversions(Integer fourthDownConversions) {
    this.fourthDownConversions = fourthDownConversions;
  }


  public TeamSeason fourthDownPercentage(BigDecimal fourthDownPercentage) {
    this.fourthDownPercentage = fourthDownPercentage;
    return this;
  }

  /**
   * Get fourthDownPercentage
   * @return fourthDownPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getFourthDownPercentage() {
    return fourthDownPercentage;
  }

  public void setFourthDownPercentage(BigDecimal fourthDownPercentage) {
    this.fourthDownPercentage = fourthDownPercentage;
  }


  public TeamSeason fumbleReturnTouchdowns(Integer fumbleReturnTouchdowns) {
    this.fumbleReturnTouchdowns = fumbleReturnTouchdowns;
    return this;
  }

  /**
   * Get fumbleReturnTouchdowns
   * @return fumbleReturnTouchdowns
   */
  @javax.annotation.Nullable
  public Integer getFumbleReturnTouchdowns() {
    return fumbleReturnTouchdowns;
  }

  public void setFumbleReturnTouchdowns(Integer fumbleReturnTouchdowns) {
    this.fumbleReturnTouchdowns = fumbleReturnTouchdowns;
  }


  public TeamSeason fumbleReturnYards(Integer fumbleReturnYards) {
    this.fumbleReturnYards = fumbleReturnYards;
    return this;
  }

  /**
   * Get fumbleReturnYards
   * @return fumbleReturnYards
   */
  @javax.annotation.Nullable
  public Integer getFumbleReturnYards() {
    return fumbleReturnYards;
  }

  public void setFumbleReturnYards(Integer fumbleReturnYards) {
    this.fumbleReturnYards = fumbleReturnYards;
  }


  public TeamSeason fumbles(Integer fumbles) {
    this.fumbles = fumbles;
    return this;
  }

  /**
   * Get fumbles
   * @return fumbles
   */
  @javax.annotation.Nullable
  public Integer getFumbles() {
    return fumbles;
  }

  public void setFumbles(Integer fumbles) {
    this.fumbles = fumbles;
  }


  public TeamSeason fumblesForced(Integer fumblesForced) {
    this.fumblesForced = fumblesForced;
    return this;
  }

  /**
   * Get fumblesForced
   * @return fumblesForced
   */
  @javax.annotation.Nullable
  public Integer getFumblesForced() {
    return fumblesForced;
  }

  public void setFumblesForced(Integer fumblesForced) {
    this.fumblesForced = fumblesForced;
  }


  public TeamSeason fumblesLost(Integer fumblesLost) {
    this.fumblesLost = fumblesLost;
    return this;
  }

  /**
   * Get fumblesLost
   * @return fumblesLost
   */
  @javax.annotation.Nullable
  public Integer getFumblesLost() {
    return fumblesLost;
  }

  public void setFumblesLost(Integer fumblesLost) {
    this.fumblesLost = fumblesLost;
  }


  public TeamSeason fumblesRecovered(Integer fumblesRecovered) {
    this.fumblesRecovered = fumblesRecovered;
    return this;
  }

  /**
   * Get fumblesRecovered
   * @return fumblesRecovered
   */
  @javax.annotation.Nullable
  public Integer getFumblesRecovered() {
    return fumblesRecovered;
  }

  public void setFumblesRecovered(Integer fumblesRecovered) {
    this.fumblesRecovered = fumblesRecovered;
  }


  public TeamSeason games(Integer games) {
    this.games = games;
    return this;
  }

  /**
   * Get games
   * @return games
   */
  @javax.annotation.Nullable
  public Integer getGames() {
    return games;
  }

  public void setGames(Integer games) {
    this.games = games;
  }


  public TeamSeason giveaways(Integer giveaways) {
    this.giveaways = giveaways;
    return this;
  }

  /**
   * Get giveaways
   * @return giveaways
   */
  @javax.annotation.Nullable
  public Integer getGiveaways() {
    return giveaways;
  }

  public void setGiveaways(Integer giveaways) {
    this.giveaways = giveaways;
  }


  public TeamSeason globalTeamID(Integer globalTeamID) {
    this.globalTeamID = globalTeamID;
    return this;
  }

  /**
   * Get globalTeamID
   * @return globalTeamID
   */
  @javax.annotation.Nullable
  public Integer getGlobalTeamID() {
    return globalTeamID;
  }

  public void setGlobalTeamID(Integer globalTeamID) {
    this.globalTeamID = globalTeamID;
  }


  public TeamSeason goalToGoAttempts(Integer goalToGoAttempts) {
    this.goalToGoAttempts = goalToGoAttempts;
    return this;
  }

  /**
   * Get goalToGoAttempts
   * @return goalToGoAttempts
   */
  @javax.annotation.Nullable
  public Integer getGoalToGoAttempts() {
    return goalToGoAttempts;
  }

  public void setGoalToGoAttempts(Integer goalToGoAttempts) {
    this.goalToGoAttempts = goalToGoAttempts;
  }


  public TeamSeason goalToGoConversions(Integer goalToGoConversions) {
    this.goalToGoConversions = goalToGoConversions;
    return this;
  }

  /**
   * Get goalToGoConversions
   * @return goalToGoConversions
   */
  @javax.annotation.Nullable
  public Integer getGoalToGoConversions() {
    return goalToGoConversions;
  }

  public void setGoalToGoConversions(Integer goalToGoConversions) {
    this.goalToGoConversions = goalToGoConversions;
  }


  public TeamSeason goalToGoPercentage(BigDecimal goalToGoPercentage) {
    this.goalToGoPercentage = goalToGoPercentage;
    return this;
  }

  /**
   * Get goalToGoPercentage
   * @return goalToGoPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getGoalToGoPercentage() {
    return goalToGoPercentage;
  }

  public void setGoalToGoPercentage(BigDecimal goalToGoPercentage) {
    this.goalToGoPercentage = goalToGoPercentage;
  }


  public TeamSeason humidity(Integer humidity) {
    this.humidity = humidity;
    return this;
  }

  /**
   * Get humidity
   * @return humidity
   */
  @javax.annotation.Nullable
  public Integer getHumidity() {
    return humidity;
  }

  public void setHumidity(Integer humidity) {
    this.humidity = humidity;
  }


  public TeamSeason interceptionReturnTouchdowns(Integer interceptionReturnTouchdowns) {
    this.interceptionReturnTouchdowns = interceptionReturnTouchdowns;
    return this;
  }

  /**
   * Get interceptionReturnTouchdowns
   * @return interceptionReturnTouchdowns
   */
  @javax.annotation.Nullable
  public Integer getInterceptionReturnTouchdowns() {
    return interceptionReturnTouchdowns;
  }

  public void setInterceptionReturnTouchdowns(Integer interceptionReturnTouchdowns) {
    this.interceptionReturnTouchdowns = interceptionReturnTouchdowns;
  }


  public TeamSeason interceptionReturnYards(Integer interceptionReturnYards) {
    this.interceptionReturnYards = interceptionReturnYards;
    return this;
  }

  /**
   * Get interceptionReturnYards
   * @return interceptionReturnYards
   */
  @javax.annotation.Nullable
  public Integer getInterceptionReturnYards() {
    return interceptionReturnYards;
  }

  public void setInterceptionReturnYards(Integer interceptionReturnYards) {
    this.interceptionReturnYards = interceptionReturnYards;
  }


  public TeamSeason interceptionReturns(Integer interceptionReturns) {
    this.interceptionReturns = interceptionReturns;
    return this;
  }

  /**
   * Get interceptionReturns
   * @return interceptionReturns
   */
  @javax.annotation.Nullable
  public Integer getInterceptionReturns() {
    return interceptionReturns;
  }

  public void setInterceptionReturns(Integer interceptionReturns) {
    this.interceptionReturns = interceptionReturns;
  }


  public TeamSeason kickReturnAverage(BigDecimal kickReturnAverage) {
    this.kickReturnAverage = kickReturnAverage;
    return this;
  }

  /**
   * Get kickReturnAverage
   * @return kickReturnAverage
   */
  @javax.annotation.Nullable
  public BigDecimal getKickReturnAverage() {
    return kickReturnAverage;
  }

  public void setKickReturnAverage(BigDecimal kickReturnAverage) {
    this.kickReturnAverage = kickReturnAverage;
  }


  public TeamSeason kickReturnLong(Integer kickReturnLong) {
    this.kickReturnLong = kickReturnLong;
    return this;
  }

  /**
   * Get kickReturnLong
   * @return kickReturnLong
   */
  @javax.annotation.Nullable
  public Integer getKickReturnLong() {
    return kickReturnLong;
  }

  public void setKickReturnLong(Integer kickReturnLong) {
    this.kickReturnLong = kickReturnLong;
  }


  public TeamSeason kickReturnTouchdowns(Integer kickReturnTouchdowns) {
    this.kickReturnTouchdowns = kickReturnTouchdowns;
    return this;
  }

  /**
   * Get kickReturnTouchdowns
   * @return kickReturnTouchdowns
   */
  @javax.annotation.Nullable
  public Integer getKickReturnTouchdowns() {
    return kickReturnTouchdowns;
  }

  public void setKickReturnTouchdowns(Integer kickReturnTouchdowns) {
    this.kickReturnTouchdowns = kickReturnTouchdowns;
  }


  public TeamSeason kickReturnYardDifferential(Integer kickReturnYardDifferential) {
    this.kickReturnYardDifferential = kickReturnYardDifferential;
    return this;
  }

  /**
   * Get kickReturnYardDifferential
   * @return kickReturnYardDifferential
   */
  @javax.annotation.Nullable
  public Integer getKickReturnYardDifferential() {
    return kickReturnYardDifferential;
  }

  public void setKickReturnYardDifferential(Integer kickReturnYardDifferential) {
    this.kickReturnYardDifferential = kickReturnYardDifferential;
  }


  public TeamSeason kickReturnYards(Integer kickReturnYards) {
    this.kickReturnYards = kickReturnYards;
    return this;
  }

  /**
   * Get kickReturnYards
   * @return kickReturnYards
   */
  @javax.annotation.Nullable
  public Integer getKickReturnYards() {
    return kickReturnYards;
  }

  public void setKickReturnYards(Integer kickReturnYards) {
    this.kickReturnYards = kickReturnYards;
  }


  public TeamSeason kickReturns(Integer kickReturns) {
    this.kickReturns = kickReturns;
    return this;
  }

  /**
   * Get kickReturns
   * @return kickReturns
   */
  @javax.annotation.Nullable
  public Integer getKickReturns() {
    return kickReturns;
  }

  public void setKickReturns(Integer kickReturns) {
    this.kickReturns = kickReturns;
  }


  public TeamSeason kickoffTouchbacks(Integer kickoffTouchbacks) {
    this.kickoffTouchbacks = kickoffTouchbacks;
    return this;
  }

  /**
   * Get kickoffTouchbacks
   * @return kickoffTouchbacks
   */
  @javax.annotation.Nullable
  public Integer getKickoffTouchbacks() {
    return kickoffTouchbacks;
  }

  public void setKickoffTouchbacks(Integer kickoffTouchbacks) {
    this.kickoffTouchbacks = kickoffTouchbacks;
  }


  public TeamSeason kickoffs(Integer kickoffs) {
    this.kickoffs = kickoffs;
    return this;
  }

  /**
   * Get kickoffs
   * @return kickoffs
   */
  @javax.annotation.Nullable
  public Integer getKickoffs() {
    return kickoffs;
  }

  public void setKickoffs(Integer kickoffs) {
    this.kickoffs = kickoffs;
  }


  public TeamSeason kickoffsInEndZone(Integer kickoffsInEndZone) {
    this.kickoffsInEndZone = kickoffsInEndZone;
    return this;
  }

  /**
   * Get kickoffsInEndZone
   * @return kickoffsInEndZone
   */
  @javax.annotation.Nullable
  public Integer getKickoffsInEndZone() {
    return kickoffsInEndZone;
  }

  public void setKickoffsInEndZone(Integer kickoffsInEndZone) {
    this.kickoffsInEndZone = kickoffsInEndZone;
  }


  public TeamSeason offensivePlays(Integer offensivePlays) {
    this.offensivePlays = offensivePlays;
    return this;
  }

  /**
   * Get offensivePlays
   * @return offensivePlays
   */
  @javax.annotation.Nullable
  public Integer getOffensivePlays() {
    return offensivePlays;
  }

  public void setOffensivePlays(Integer offensivePlays) {
    this.offensivePlays = offensivePlays;
  }


  public TeamSeason offensiveYards(Integer offensiveYards) {
    this.offensiveYards = offensiveYards;
    return this;
  }

  /**
   * Get offensiveYards
   * @return offensiveYards
   */
  @javax.annotation.Nullable
  public Integer getOffensiveYards() {
    return offensiveYards;
  }

  public void setOffensiveYards(Integer offensiveYards) {
    this.offensiveYards = offensiveYards;
  }


  public TeamSeason offensiveYardsPerPlay(BigDecimal offensiveYardsPerPlay) {
    this.offensiveYardsPerPlay = offensiveYardsPerPlay;
    return this;
  }

  /**
   * Get offensiveYardsPerPlay
   * @return offensiveYardsPerPlay
   */
  @javax.annotation.Nullable
  public BigDecimal getOffensiveYardsPerPlay() {
    return offensiveYardsPerPlay;
  }

  public void setOffensiveYardsPerPlay(BigDecimal offensiveYardsPerPlay) {
    this.offensiveYardsPerPlay = offensiveYardsPerPlay;
  }


  public TeamSeason opponentAssistedTackles(Integer opponentAssistedTackles) {
    this.opponentAssistedTackles = opponentAssistedTackles;
    return this;
  }

  /**
   * Get opponentAssistedTackles
   * @return opponentAssistedTackles
   */
  @javax.annotation.Nullable
  public Integer getOpponentAssistedTackles() {
    return opponentAssistedTackles;
  }

  public void setOpponentAssistedTackles(Integer opponentAssistedTackles) {
    this.opponentAssistedTackles = opponentAssistedTackles;
  }


  public TeamSeason opponentBlockedKickReturnTouchdowns(Integer opponentBlockedKickReturnTouchdowns) {
    this.opponentBlockedKickReturnTouchdowns = opponentBlockedKickReturnTouchdowns;
    return this;
  }

  /**
   * Get opponentBlockedKickReturnTouchdowns
   * @return opponentBlockedKickReturnTouchdowns
   */
  @javax.annotation.Nullable
  public Integer getOpponentBlockedKickReturnTouchdowns() {
    return opponentBlockedKickReturnTouchdowns;
  }

  public void setOpponentBlockedKickReturnTouchdowns(Integer opponentBlockedKickReturnTouchdowns) {
    this.opponentBlockedKickReturnTouchdowns = opponentBlockedKickReturnTouchdowns;
  }


  public TeamSeason opponentBlockedKickReturnYards(Integer opponentBlockedKickReturnYards) {
    this.opponentBlockedKickReturnYards = opponentBlockedKickReturnYards;
    return this;
  }

  /**
   * Get opponentBlockedKickReturnYards
   * @return opponentBlockedKickReturnYards
   */
  @javax.annotation.Nullable
  public Integer getOpponentBlockedKickReturnYards() {
    return opponentBlockedKickReturnYards;
  }

  public void setOpponentBlockedKickReturnYards(Integer opponentBlockedKickReturnYards) {
    this.opponentBlockedKickReturnYards = opponentBlockedKickReturnYards;
  }


  public TeamSeason opponentBlockedKicks(Integer opponentBlockedKicks) {
    this.opponentBlockedKicks = opponentBlockedKicks;
    return this;
  }

  /**
   * Get opponentBlockedKicks
   * @return opponentBlockedKicks
   */
  @javax.annotation.Nullable
  public Integer getOpponentBlockedKicks() {
    return opponentBlockedKicks;
  }

  public void setOpponentBlockedKicks(Integer opponentBlockedKicks) {
    this.opponentBlockedKicks = opponentBlockedKicks;
  }


  public TeamSeason opponentCompletionPercentage(BigDecimal opponentCompletionPercentage) {
    this.opponentCompletionPercentage = opponentCompletionPercentage;
    return this;
  }

  /**
   * Get opponentCompletionPercentage
   * @return opponentCompletionPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getOpponentCompletionPercentage() {
    return opponentCompletionPercentage;
  }

  public void setOpponentCompletionPercentage(BigDecimal opponentCompletionPercentage) {
    this.opponentCompletionPercentage = opponentCompletionPercentage;
  }


  public TeamSeason opponentExtraPointKickingAttempts(Integer opponentExtraPointKickingAttempts) {
    this.opponentExtraPointKickingAttempts = opponentExtraPointKickingAttempts;
    return this;
  }

  /**
   * Get opponentExtraPointKickingAttempts
   * @return opponentExtraPointKickingAttempts
   */
  @javax.annotation.Nullable
  public Integer getOpponentExtraPointKickingAttempts() {
    return opponentExtraPointKickingAttempts;
  }

  public void setOpponentExtraPointKickingAttempts(Integer opponentExtraPointKickingAttempts) {
    this.opponentExtraPointKickingAttempts = opponentExtraPointKickingAttempts;
  }


  public TeamSeason opponentExtraPointKickingConversions(Integer opponentExtraPointKickingConversions) {
    this.opponentExtraPointKickingConversions = opponentExtraPointKickingConversions;
    return this;
  }

  /**
   * Get opponentExtraPointKickingConversions
   * @return opponentExtraPointKickingConversions
   */
  @javax.annotation.Nullable
  public Integer getOpponentExtraPointKickingConversions() {
    return opponentExtraPointKickingConversions;
  }

  public void setOpponentExtraPointKickingConversions(Integer opponentExtraPointKickingConversions) {
    this.opponentExtraPointKickingConversions = opponentExtraPointKickingConversions;
  }


  public TeamSeason opponentExtraPointPassingAttempts(Integer opponentExtraPointPassingAttempts) {
    this.opponentExtraPointPassingAttempts = opponentExtraPointPassingAttempts;
    return this;
  }

  /**
   * Get opponentExtraPointPassingAttempts
   * @return opponentExtraPointPassingAttempts
   */
  @javax.annotation.Nullable
  public Integer getOpponentExtraPointPassingAttempts() {
    return opponentExtraPointPassingAttempts;
  }

  public void setOpponentExtraPointPassingAttempts(Integer opponentExtraPointPassingAttempts) {
    this.opponentExtraPointPassingAttempts = opponentExtraPointPassingAttempts;
  }


  public TeamSeason opponentExtraPointPassingConversions(Integer opponentExtraPointPassingConversions) {
    this.opponentExtraPointPassingConversions = opponentExtraPointPassingConversions;
    return this;
  }

  /**
   * Get opponentExtraPointPassingConversions
   * @return opponentExtraPointPassingConversions
   */
  @javax.annotation.Nullable
  public Integer getOpponentExtraPointPassingConversions() {
    return opponentExtraPointPassingConversions;
  }

  public void setOpponentExtraPointPassingConversions(Integer opponentExtraPointPassingConversions) {
    this.opponentExtraPointPassingConversions = opponentExtraPointPassingConversions;
  }


  public TeamSeason opponentExtraPointPercentage(BigDecimal opponentExtraPointPercentage) {
    this.opponentExtraPointPercentage = opponentExtraPointPercentage;
    return this;
  }

  /**
   * Get opponentExtraPointPercentage
   * @return opponentExtraPointPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getOpponentExtraPointPercentage() {
    return opponentExtraPointPercentage;
  }

  public void setOpponentExtraPointPercentage(BigDecimal opponentExtraPointPercentage) {
    this.opponentExtraPointPercentage = opponentExtraPointPercentage;
  }


  public TeamSeason opponentExtraPointRushingAttempts(Integer opponentExtraPointRushingAttempts) {
    this.opponentExtraPointRushingAttempts = opponentExtraPointRushingAttempts;
    return this;
  }

  /**
   * Get opponentExtraPointRushingAttempts
   * @return opponentExtraPointRushingAttempts
   */
  @javax.annotation.Nullable
  public Integer getOpponentExtraPointRushingAttempts() {
    return opponentExtraPointRushingAttempts;
  }

  public void setOpponentExtraPointRushingAttempts(Integer opponentExtraPointRushingAttempts) {
    this.opponentExtraPointRushingAttempts = opponentExtraPointRushingAttempts;
  }


  public TeamSeason opponentExtraPointRushingConversions(Integer opponentExtraPointRushingConversions) {
    this.opponentExtraPointRushingConversions = opponentExtraPointRushingConversions;
    return this;
  }

  /**
   * Get opponentExtraPointRushingConversions
   * @return opponentExtraPointRushingConversions
   */
  @javax.annotation.Nullable
  public Integer getOpponentExtraPointRushingConversions() {
    return opponentExtraPointRushingConversions;
  }

  public void setOpponentExtraPointRushingConversions(Integer opponentExtraPointRushingConversions) {
    this.opponentExtraPointRushingConversions = opponentExtraPointRushingConversions;
  }


  public TeamSeason opponentExtraPointsHadBlocked(Integer opponentExtraPointsHadBlocked) {
    this.opponentExtraPointsHadBlocked = opponentExtraPointsHadBlocked;
    return this;
  }

  /**
   * Get opponentExtraPointsHadBlocked
   * @return opponentExtraPointsHadBlocked
   */
  @javax.annotation.Nullable
  public Integer getOpponentExtraPointsHadBlocked() {
    return opponentExtraPointsHadBlocked;
  }

  public void setOpponentExtraPointsHadBlocked(Integer opponentExtraPointsHadBlocked) {
    this.opponentExtraPointsHadBlocked = opponentExtraPointsHadBlocked;
  }


  public TeamSeason opponentFieldGoalAttempts(Integer opponentFieldGoalAttempts) {
    this.opponentFieldGoalAttempts = opponentFieldGoalAttempts;
    return this;
  }

  /**
   * Get opponentFieldGoalAttempts
   * @return opponentFieldGoalAttempts
   */
  @javax.annotation.Nullable
  public Integer getOpponentFieldGoalAttempts() {
    return opponentFieldGoalAttempts;
  }

  public void setOpponentFieldGoalAttempts(Integer opponentFieldGoalAttempts) {
    this.opponentFieldGoalAttempts = opponentFieldGoalAttempts;
  }


  public TeamSeason opponentFieldGoalPercentage(BigDecimal opponentFieldGoalPercentage) {
    this.opponentFieldGoalPercentage = opponentFieldGoalPercentage;
    return this;
  }

  /**
   * Get opponentFieldGoalPercentage
   * @return opponentFieldGoalPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getOpponentFieldGoalPercentage() {
    return opponentFieldGoalPercentage;
  }

  public void setOpponentFieldGoalPercentage(BigDecimal opponentFieldGoalPercentage) {
    this.opponentFieldGoalPercentage = opponentFieldGoalPercentage;
  }


  public TeamSeason opponentFieldGoalReturnTouchdowns(Integer opponentFieldGoalReturnTouchdowns) {
    this.opponentFieldGoalReturnTouchdowns = opponentFieldGoalReturnTouchdowns;
    return this;
  }

  /**
   * Get opponentFieldGoalReturnTouchdowns
   * @return opponentFieldGoalReturnTouchdowns
   */
  @javax.annotation.Nullable
  public Integer getOpponentFieldGoalReturnTouchdowns() {
    return opponentFieldGoalReturnTouchdowns;
  }

  public void setOpponentFieldGoalReturnTouchdowns(Integer opponentFieldGoalReturnTouchdowns) {
    this.opponentFieldGoalReturnTouchdowns = opponentFieldGoalReturnTouchdowns;
  }


  public TeamSeason opponentFieldGoalReturnYards(Integer opponentFieldGoalReturnYards) {
    this.opponentFieldGoalReturnYards = opponentFieldGoalReturnYards;
    return this;
  }

  /**
   * Get opponentFieldGoalReturnYards
   * @return opponentFieldGoalReturnYards
   */
  @javax.annotation.Nullable
  public Integer getOpponentFieldGoalReturnYards() {
    return opponentFieldGoalReturnYards;
  }

  public void setOpponentFieldGoalReturnYards(Integer opponentFieldGoalReturnYards) {
    this.opponentFieldGoalReturnYards = opponentFieldGoalReturnYards;
  }


  public TeamSeason opponentFieldGoalsHadBlocked(Integer opponentFieldGoalsHadBlocked) {
    this.opponentFieldGoalsHadBlocked = opponentFieldGoalsHadBlocked;
    return this;
  }

  /**
   * Get opponentFieldGoalsHadBlocked
   * @return opponentFieldGoalsHadBlocked
   */
  @javax.annotation.Nullable
  public Integer getOpponentFieldGoalsHadBlocked() {
    return opponentFieldGoalsHadBlocked;
  }

  public void setOpponentFieldGoalsHadBlocked(Integer opponentFieldGoalsHadBlocked) {
    this.opponentFieldGoalsHadBlocked = opponentFieldGoalsHadBlocked;
  }


  public TeamSeason opponentFieldGoalsMade(Integer opponentFieldGoalsMade) {
    this.opponentFieldGoalsMade = opponentFieldGoalsMade;
    return this;
  }

  /**
   * Get opponentFieldGoalsMade
   * @return opponentFieldGoalsMade
   */
  @javax.annotation.Nullable
  public Integer getOpponentFieldGoalsMade() {
    return opponentFieldGoalsMade;
  }

  public void setOpponentFieldGoalsMade(Integer opponentFieldGoalsMade) {
    this.opponentFieldGoalsMade = opponentFieldGoalsMade;
  }


  public TeamSeason opponentFirstDowns(Integer opponentFirstDowns) {
    this.opponentFirstDowns = opponentFirstDowns;
    return this;
  }

  /**
   * Get opponentFirstDowns
   * @return opponentFirstDowns
   */
  @javax.annotation.Nullable
  public Integer getOpponentFirstDowns() {
    return opponentFirstDowns;
  }

  public void setOpponentFirstDowns(Integer opponentFirstDowns) {
    this.opponentFirstDowns = opponentFirstDowns;
  }


  public TeamSeason opponentFirstDownsByPassing(Integer opponentFirstDownsByPassing) {
    this.opponentFirstDownsByPassing = opponentFirstDownsByPassing;
    return this;
  }

  /**
   * Get opponentFirstDownsByPassing
   * @return opponentFirstDownsByPassing
   */
  @javax.annotation.Nullable
  public Integer getOpponentFirstDownsByPassing() {
    return opponentFirstDownsByPassing;
  }

  public void setOpponentFirstDownsByPassing(Integer opponentFirstDownsByPassing) {
    this.opponentFirstDownsByPassing = opponentFirstDownsByPassing;
  }


  public TeamSeason opponentFirstDownsByPenalty(Integer opponentFirstDownsByPenalty) {
    this.opponentFirstDownsByPenalty = opponentFirstDownsByPenalty;
    return this;
  }

  /**
   * Get opponentFirstDownsByPenalty
   * @return opponentFirstDownsByPenalty
   */
  @javax.annotation.Nullable
  public Integer getOpponentFirstDownsByPenalty() {
    return opponentFirstDownsByPenalty;
  }

  public void setOpponentFirstDownsByPenalty(Integer opponentFirstDownsByPenalty) {
    this.opponentFirstDownsByPenalty = opponentFirstDownsByPenalty;
  }


  public TeamSeason opponentFirstDownsByRushing(Integer opponentFirstDownsByRushing) {
    this.opponentFirstDownsByRushing = opponentFirstDownsByRushing;
    return this;
  }

  /**
   * Get opponentFirstDownsByRushing
   * @return opponentFirstDownsByRushing
   */
  @javax.annotation.Nullable
  public Integer getOpponentFirstDownsByRushing() {
    return opponentFirstDownsByRushing;
  }

  public void setOpponentFirstDownsByRushing(Integer opponentFirstDownsByRushing) {
    this.opponentFirstDownsByRushing = opponentFirstDownsByRushing;
  }


  public TeamSeason opponentFourthDownAttempts(Integer opponentFourthDownAttempts) {
    this.opponentFourthDownAttempts = opponentFourthDownAttempts;
    return this;
  }

  /**
   * Get opponentFourthDownAttempts
   * @return opponentFourthDownAttempts
   */
  @javax.annotation.Nullable
  public Integer getOpponentFourthDownAttempts() {
    return opponentFourthDownAttempts;
  }

  public void setOpponentFourthDownAttempts(Integer opponentFourthDownAttempts) {
    this.opponentFourthDownAttempts = opponentFourthDownAttempts;
  }


  public TeamSeason opponentFourthDownConversions(Integer opponentFourthDownConversions) {
    this.opponentFourthDownConversions = opponentFourthDownConversions;
    return this;
  }

  /**
   * Get opponentFourthDownConversions
   * @return opponentFourthDownConversions
   */
  @javax.annotation.Nullable
  public Integer getOpponentFourthDownConversions() {
    return opponentFourthDownConversions;
  }

  public void setOpponentFourthDownConversions(Integer opponentFourthDownConversions) {
    this.opponentFourthDownConversions = opponentFourthDownConversions;
  }


  public TeamSeason opponentFourthDownPercentage(BigDecimal opponentFourthDownPercentage) {
    this.opponentFourthDownPercentage = opponentFourthDownPercentage;
    return this;
  }

  /**
   * Get opponentFourthDownPercentage
   * @return opponentFourthDownPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getOpponentFourthDownPercentage() {
    return opponentFourthDownPercentage;
  }

  public void setOpponentFourthDownPercentage(BigDecimal opponentFourthDownPercentage) {
    this.opponentFourthDownPercentage = opponentFourthDownPercentage;
  }


  public TeamSeason opponentFumbleReturnTouchdowns(Integer opponentFumbleReturnTouchdowns) {
    this.opponentFumbleReturnTouchdowns = opponentFumbleReturnTouchdowns;
    return this;
  }

  /**
   * Get opponentFumbleReturnTouchdowns
   * @return opponentFumbleReturnTouchdowns
   */
  @javax.annotation.Nullable
  public Integer getOpponentFumbleReturnTouchdowns() {
    return opponentFumbleReturnTouchdowns;
  }

  public void setOpponentFumbleReturnTouchdowns(Integer opponentFumbleReturnTouchdowns) {
    this.opponentFumbleReturnTouchdowns = opponentFumbleReturnTouchdowns;
  }


  public TeamSeason opponentFumbleReturnYards(Integer opponentFumbleReturnYards) {
    this.opponentFumbleReturnYards = opponentFumbleReturnYards;
    return this;
  }

  /**
   * Get opponentFumbleReturnYards
   * @return opponentFumbleReturnYards
   */
  @javax.annotation.Nullable
  public Integer getOpponentFumbleReturnYards() {
    return opponentFumbleReturnYards;
  }

  public void setOpponentFumbleReturnYards(Integer opponentFumbleReturnYards) {
    this.opponentFumbleReturnYards = opponentFumbleReturnYards;
  }


  public TeamSeason opponentFumbles(Integer opponentFumbles) {
    this.opponentFumbles = opponentFumbles;
    return this;
  }

  /**
   * Get opponentFumbles
   * @return opponentFumbles
   */
  @javax.annotation.Nullable
  public Integer getOpponentFumbles() {
    return opponentFumbles;
  }

  public void setOpponentFumbles(Integer opponentFumbles) {
    this.opponentFumbles = opponentFumbles;
  }


  public TeamSeason opponentFumblesForced(Integer opponentFumblesForced) {
    this.opponentFumblesForced = opponentFumblesForced;
    return this;
  }

  /**
   * Get opponentFumblesForced
   * @return opponentFumblesForced
   */
  @javax.annotation.Nullable
  public Integer getOpponentFumblesForced() {
    return opponentFumblesForced;
  }

  public void setOpponentFumblesForced(Integer opponentFumblesForced) {
    this.opponentFumblesForced = opponentFumblesForced;
  }


  public TeamSeason opponentFumblesLost(Integer opponentFumblesLost) {
    this.opponentFumblesLost = opponentFumblesLost;
    return this;
  }

  /**
   * Get opponentFumblesLost
   * @return opponentFumblesLost
   */
  @javax.annotation.Nullable
  public Integer getOpponentFumblesLost() {
    return opponentFumblesLost;
  }

  public void setOpponentFumblesLost(Integer opponentFumblesLost) {
    this.opponentFumblesLost = opponentFumblesLost;
  }


  public TeamSeason opponentFumblesRecovered(Integer opponentFumblesRecovered) {
    this.opponentFumblesRecovered = opponentFumblesRecovered;
    return this;
  }

  /**
   * Get opponentFumblesRecovered
   * @return opponentFumblesRecovered
   */
  @javax.annotation.Nullable
  public Integer getOpponentFumblesRecovered() {
    return opponentFumblesRecovered;
  }

  public void setOpponentFumblesRecovered(Integer opponentFumblesRecovered) {
    this.opponentFumblesRecovered = opponentFumblesRecovered;
  }


  public TeamSeason opponentGiveaways(Integer opponentGiveaways) {
    this.opponentGiveaways = opponentGiveaways;
    return this;
  }

  /**
   * Get opponentGiveaways
   * @return opponentGiveaways
   */
  @javax.annotation.Nullable
  public Integer getOpponentGiveaways() {
    return opponentGiveaways;
  }

  public void setOpponentGiveaways(Integer opponentGiveaways) {
    this.opponentGiveaways = opponentGiveaways;
  }


  public TeamSeason opponentGoalToGoAttempts(Integer opponentGoalToGoAttempts) {
    this.opponentGoalToGoAttempts = opponentGoalToGoAttempts;
    return this;
  }

  /**
   * Get opponentGoalToGoAttempts
   * @return opponentGoalToGoAttempts
   */
  @javax.annotation.Nullable
  public Integer getOpponentGoalToGoAttempts() {
    return opponentGoalToGoAttempts;
  }

  public void setOpponentGoalToGoAttempts(Integer opponentGoalToGoAttempts) {
    this.opponentGoalToGoAttempts = opponentGoalToGoAttempts;
  }


  public TeamSeason opponentGoalToGoConversions(Integer opponentGoalToGoConversions) {
    this.opponentGoalToGoConversions = opponentGoalToGoConversions;
    return this;
  }

  /**
   * Get opponentGoalToGoConversions
   * @return opponentGoalToGoConversions
   */
  @javax.annotation.Nullable
  public Integer getOpponentGoalToGoConversions() {
    return opponentGoalToGoConversions;
  }

  public void setOpponentGoalToGoConversions(Integer opponentGoalToGoConversions) {
    this.opponentGoalToGoConversions = opponentGoalToGoConversions;
  }


  public TeamSeason opponentGoalToGoPercentage(BigDecimal opponentGoalToGoPercentage) {
    this.opponentGoalToGoPercentage = opponentGoalToGoPercentage;
    return this;
  }

  /**
   * Get opponentGoalToGoPercentage
   * @return opponentGoalToGoPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getOpponentGoalToGoPercentage() {
    return opponentGoalToGoPercentage;
  }

  public void setOpponentGoalToGoPercentage(BigDecimal opponentGoalToGoPercentage) {
    this.opponentGoalToGoPercentage = opponentGoalToGoPercentage;
  }


  public TeamSeason opponentInterceptionReturnTouchdowns(Integer opponentInterceptionReturnTouchdowns) {
    this.opponentInterceptionReturnTouchdowns = opponentInterceptionReturnTouchdowns;
    return this;
  }

  /**
   * Get opponentInterceptionReturnTouchdowns
   * @return opponentInterceptionReturnTouchdowns
   */
  @javax.annotation.Nullable
  public Integer getOpponentInterceptionReturnTouchdowns() {
    return opponentInterceptionReturnTouchdowns;
  }

  public void setOpponentInterceptionReturnTouchdowns(Integer opponentInterceptionReturnTouchdowns) {
    this.opponentInterceptionReturnTouchdowns = opponentInterceptionReturnTouchdowns;
  }


  public TeamSeason opponentInterceptionReturnYards(Integer opponentInterceptionReturnYards) {
    this.opponentInterceptionReturnYards = opponentInterceptionReturnYards;
    return this;
  }

  /**
   * Get opponentInterceptionReturnYards
   * @return opponentInterceptionReturnYards
   */
  @javax.annotation.Nullable
  public Integer getOpponentInterceptionReturnYards() {
    return opponentInterceptionReturnYards;
  }

  public void setOpponentInterceptionReturnYards(Integer opponentInterceptionReturnYards) {
    this.opponentInterceptionReturnYards = opponentInterceptionReturnYards;
  }


  public TeamSeason opponentInterceptionReturns(Integer opponentInterceptionReturns) {
    this.opponentInterceptionReturns = opponentInterceptionReturns;
    return this;
  }

  /**
   * Get opponentInterceptionReturns
   * @return opponentInterceptionReturns
   */
  @javax.annotation.Nullable
  public Integer getOpponentInterceptionReturns() {
    return opponentInterceptionReturns;
  }

  public void setOpponentInterceptionReturns(Integer opponentInterceptionReturns) {
    this.opponentInterceptionReturns = opponentInterceptionReturns;
  }


  public TeamSeason opponentKickReturnAverage(BigDecimal opponentKickReturnAverage) {
    this.opponentKickReturnAverage = opponentKickReturnAverage;
    return this;
  }

  /**
   * Get opponentKickReturnAverage
   * @return opponentKickReturnAverage
   */
  @javax.annotation.Nullable
  public BigDecimal getOpponentKickReturnAverage() {
    return opponentKickReturnAverage;
  }

  public void setOpponentKickReturnAverage(BigDecimal opponentKickReturnAverage) {
    this.opponentKickReturnAverage = opponentKickReturnAverage;
  }


  public TeamSeason opponentKickReturnLong(Integer opponentKickReturnLong) {
    this.opponentKickReturnLong = opponentKickReturnLong;
    return this;
  }

  /**
   * Get opponentKickReturnLong
   * @return opponentKickReturnLong
   */
  @javax.annotation.Nullable
  public Integer getOpponentKickReturnLong() {
    return opponentKickReturnLong;
  }

  public void setOpponentKickReturnLong(Integer opponentKickReturnLong) {
    this.opponentKickReturnLong = opponentKickReturnLong;
  }


  public TeamSeason opponentKickReturnTouchdowns(Integer opponentKickReturnTouchdowns) {
    this.opponentKickReturnTouchdowns = opponentKickReturnTouchdowns;
    return this;
  }

  /**
   * Get opponentKickReturnTouchdowns
   * @return opponentKickReturnTouchdowns
   */
  @javax.annotation.Nullable
  public Integer getOpponentKickReturnTouchdowns() {
    return opponentKickReturnTouchdowns;
  }

  public void setOpponentKickReturnTouchdowns(Integer opponentKickReturnTouchdowns) {
    this.opponentKickReturnTouchdowns = opponentKickReturnTouchdowns;
  }


  public TeamSeason opponentKickReturnYards(Integer opponentKickReturnYards) {
    this.opponentKickReturnYards = opponentKickReturnYards;
    return this;
  }

  /**
   * Get opponentKickReturnYards
   * @return opponentKickReturnYards
   */
  @javax.annotation.Nullable
  public Integer getOpponentKickReturnYards() {
    return opponentKickReturnYards;
  }

  public void setOpponentKickReturnYards(Integer opponentKickReturnYards) {
    this.opponentKickReturnYards = opponentKickReturnYards;
  }


  public TeamSeason opponentKickReturns(Integer opponentKickReturns) {
    this.opponentKickReturns = opponentKickReturns;
    return this;
  }

  /**
   * Get opponentKickReturns
   * @return opponentKickReturns
   */
  @javax.annotation.Nullable
  public Integer getOpponentKickReturns() {
    return opponentKickReturns;
  }

  public void setOpponentKickReturns(Integer opponentKickReturns) {
    this.opponentKickReturns = opponentKickReturns;
  }


  public TeamSeason opponentKickoffTouchbacks(Integer opponentKickoffTouchbacks) {
    this.opponentKickoffTouchbacks = opponentKickoffTouchbacks;
    return this;
  }

  /**
   * Get opponentKickoffTouchbacks
   * @return opponentKickoffTouchbacks
   */
  @javax.annotation.Nullable
  public Integer getOpponentKickoffTouchbacks() {
    return opponentKickoffTouchbacks;
  }

  public void setOpponentKickoffTouchbacks(Integer opponentKickoffTouchbacks) {
    this.opponentKickoffTouchbacks = opponentKickoffTouchbacks;
  }


  public TeamSeason opponentKickoffs(Integer opponentKickoffs) {
    this.opponentKickoffs = opponentKickoffs;
    return this;
  }

  /**
   * Get opponentKickoffs
   * @return opponentKickoffs
   */
  @javax.annotation.Nullable
  public Integer getOpponentKickoffs() {
    return opponentKickoffs;
  }

  public void setOpponentKickoffs(Integer opponentKickoffs) {
    this.opponentKickoffs = opponentKickoffs;
  }


  public TeamSeason opponentKickoffsInEndZone(Integer opponentKickoffsInEndZone) {
    this.opponentKickoffsInEndZone = opponentKickoffsInEndZone;
    return this;
  }

  /**
   * Get opponentKickoffsInEndZone
   * @return opponentKickoffsInEndZone
   */
  @javax.annotation.Nullable
  public Integer getOpponentKickoffsInEndZone() {
    return opponentKickoffsInEndZone;
  }

  public void setOpponentKickoffsInEndZone(Integer opponentKickoffsInEndZone) {
    this.opponentKickoffsInEndZone = opponentKickoffsInEndZone;
  }


  public TeamSeason opponentOffensivePlays(Integer opponentOffensivePlays) {
    this.opponentOffensivePlays = opponentOffensivePlays;
    return this;
  }

  /**
   * Get opponentOffensivePlays
   * @return opponentOffensivePlays
   */
  @javax.annotation.Nullable
  public Integer getOpponentOffensivePlays() {
    return opponentOffensivePlays;
  }

  public void setOpponentOffensivePlays(Integer opponentOffensivePlays) {
    this.opponentOffensivePlays = opponentOffensivePlays;
  }


  public TeamSeason opponentOffensiveYards(Integer opponentOffensiveYards) {
    this.opponentOffensiveYards = opponentOffensiveYards;
    return this;
  }

  /**
   * Get opponentOffensiveYards
   * @return opponentOffensiveYards
   */
  @javax.annotation.Nullable
  public Integer getOpponentOffensiveYards() {
    return opponentOffensiveYards;
  }

  public void setOpponentOffensiveYards(Integer opponentOffensiveYards) {
    this.opponentOffensiveYards = opponentOffensiveYards;
  }


  public TeamSeason opponentOffensiveYardsPerPlay(BigDecimal opponentOffensiveYardsPerPlay) {
    this.opponentOffensiveYardsPerPlay = opponentOffensiveYardsPerPlay;
    return this;
  }

  /**
   * Get opponentOffensiveYardsPerPlay
   * @return opponentOffensiveYardsPerPlay
   */
  @javax.annotation.Nullable
  public BigDecimal getOpponentOffensiveYardsPerPlay() {
    return opponentOffensiveYardsPerPlay;
  }

  public void setOpponentOffensiveYardsPerPlay(BigDecimal opponentOffensiveYardsPerPlay) {
    this.opponentOffensiveYardsPerPlay = opponentOffensiveYardsPerPlay;
  }


  public TeamSeason opponentPasserRating(BigDecimal opponentPasserRating) {
    this.opponentPasserRating = opponentPasserRating;
    return this;
  }

  /**
   * Get opponentPasserRating
   * @return opponentPasserRating
   */
  @javax.annotation.Nullable
  public BigDecimal getOpponentPasserRating() {
    return opponentPasserRating;
  }

  public void setOpponentPasserRating(BigDecimal opponentPasserRating) {
    this.opponentPasserRating = opponentPasserRating;
  }


  public TeamSeason opponentPassesDefended(Integer opponentPassesDefended) {
    this.opponentPassesDefended = opponentPassesDefended;
    return this;
  }

  /**
   * Get opponentPassesDefended
   * @return opponentPassesDefended
   */
  @javax.annotation.Nullable
  public Integer getOpponentPassesDefended() {
    return opponentPassesDefended;
  }

  public void setOpponentPassesDefended(Integer opponentPassesDefended) {
    this.opponentPassesDefended = opponentPassesDefended;
  }


  public TeamSeason opponentPassingAttempts(Integer opponentPassingAttempts) {
    this.opponentPassingAttempts = opponentPassingAttempts;
    return this;
  }

  /**
   * Get opponentPassingAttempts
   * @return opponentPassingAttempts
   */
  @javax.annotation.Nullable
  public Integer getOpponentPassingAttempts() {
    return opponentPassingAttempts;
  }

  public void setOpponentPassingAttempts(Integer opponentPassingAttempts) {
    this.opponentPassingAttempts = opponentPassingAttempts;
  }


  public TeamSeason opponentPassingCompletions(Integer opponentPassingCompletions) {
    this.opponentPassingCompletions = opponentPassingCompletions;
    return this;
  }

  /**
   * Get opponentPassingCompletions
   * @return opponentPassingCompletions
   */
  @javax.annotation.Nullable
  public Integer getOpponentPassingCompletions() {
    return opponentPassingCompletions;
  }

  public void setOpponentPassingCompletions(Integer opponentPassingCompletions) {
    this.opponentPassingCompletions = opponentPassingCompletions;
  }


  public TeamSeason opponentPassingDropbacks(Integer opponentPassingDropbacks) {
    this.opponentPassingDropbacks = opponentPassingDropbacks;
    return this;
  }

  /**
   * Get opponentPassingDropbacks
   * @return opponentPassingDropbacks
   */
  @javax.annotation.Nullable
  public Integer getOpponentPassingDropbacks() {
    return opponentPassingDropbacks;
  }

  public void setOpponentPassingDropbacks(Integer opponentPassingDropbacks) {
    this.opponentPassingDropbacks = opponentPassingDropbacks;
  }


  public TeamSeason opponentPassingInterceptionPercentage(BigDecimal opponentPassingInterceptionPercentage) {
    this.opponentPassingInterceptionPercentage = opponentPassingInterceptionPercentage;
    return this;
  }

  /**
   * Get opponentPassingInterceptionPercentage
   * @return opponentPassingInterceptionPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getOpponentPassingInterceptionPercentage() {
    return opponentPassingInterceptionPercentage;
  }

  public void setOpponentPassingInterceptionPercentage(BigDecimal opponentPassingInterceptionPercentage) {
    this.opponentPassingInterceptionPercentage = opponentPassingInterceptionPercentage;
  }


  public TeamSeason opponentPassingInterceptions(Integer opponentPassingInterceptions) {
    this.opponentPassingInterceptions = opponentPassingInterceptions;
    return this;
  }

  /**
   * Get opponentPassingInterceptions
   * @return opponentPassingInterceptions
   */
  @javax.annotation.Nullable
  public Integer getOpponentPassingInterceptions() {
    return opponentPassingInterceptions;
  }

  public void setOpponentPassingInterceptions(Integer opponentPassingInterceptions) {
    this.opponentPassingInterceptions = opponentPassingInterceptions;
  }


  public TeamSeason opponentPassingTouchdowns(Integer opponentPassingTouchdowns) {
    this.opponentPassingTouchdowns = opponentPassingTouchdowns;
    return this;
  }

  /**
   * Get opponentPassingTouchdowns
   * @return opponentPassingTouchdowns
   */
  @javax.annotation.Nullable
  public Integer getOpponentPassingTouchdowns() {
    return opponentPassingTouchdowns;
  }

  public void setOpponentPassingTouchdowns(Integer opponentPassingTouchdowns) {
    this.opponentPassingTouchdowns = opponentPassingTouchdowns;
  }


  public TeamSeason opponentPassingYards(Integer opponentPassingYards) {
    this.opponentPassingYards = opponentPassingYards;
    return this;
  }

  /**
   * Get opponentPassingYards
   * @return opponentPassingYards
   */
  @javax.annotation.Nullable
  public Integer getOpponentPassingYards() {
    return opponentPassingYards;
  }

  public void setOpponentPassingYards(Integer opponentPassingYards) {
    this.opponentPassingYards = opponentPassingYards;
  }


  public TeamSeason opponentPassingYardsPerAttempt(BigDecimal opponentPassingYardsPerAttempt) {
    this.opponentPassingYardsPerAttempt = opponentPassingYardsPerAttempt;
    return this;
  }

  /**
   * Get opponentPassingYardsPerAttempt
   * @return opponentPassingYardsPerAttempt
   */
  @javax.annotation.Nullable
  public BigDecimal getOpponentPassingYardsPerAttempt() {
    return opponentPassingYardsPerAttempt;
  }

  public void setOpponentPassingYardsPerAttempt(BigDecimal opponentPassingYardsPerAttempt) {
    this.opponentPassingYardsPerAttempt = opponentPassingYardsPerAttempt;
  }


  public TeamSeason opponentPassingYardsPerCompletion(BigDecimal opponentPassingYardsPerCompletion) {
    this.opponentPassingYardsPerCompletion = opponentPassingYardsPerCompletion;
    return this;
  }

  /**
   * Get opponentPassingYardsPerCompletion
   * @return opponentPassingYardsPerCompletion
   */
  @javax.annotation.Nullable
  public BigDecimal getOpponentPassingYardsPerCompletion() {
    return opponentPassingYardsPerCompletion;
  }

  public void setOpponentPassingYardsPerCompletion(BigDecimal opponentPassingYardsPerCompletion) {
    this.opponentPassingYardsPerCompletion = opponentPassingYardsPerCompletion;
  }


  public TeamSeason opponentPenalties(Integer opponentPenalties) {
    this.opponentPenalties = opponentPenalties;
    return this;
  }

  /**
   * Get opponentPenalties
   * @return opponentPenalties
   */
  @javax.annotation.Nullable
  public Integer getOpponentPenalties() {
    return opponentPenalties;
  }

  public void setOpponentPenalties(Integer opponentPenalties) {
    this.opponentPenalties = opponentPenalties;
  }


  public TeamSeason opponentPenaltyYards(Integer opponentPenaltyYards) {
    this.opponentPenaltyYards = opponentPenaltyYards;
    return this;
  }

  /**
   * Get opponentPenaltyYards
   * @return opponentPenaltyYards
   */
  @javax.annotation.Nullable
  public Integer getOpponentPenaltyYards() {
    return opponentPenaltyYards;
  }

  public void setOpponentPenaltyYards(Integer opponentPenaltyYards) {
    this.opponentPenaltyYards = opponentPenaltyYards;
  }


  public TeamSeason opponentPuntAverage(BigDecimal opponentPuntAverage) {
    this.opponentPuntAverage = opponentPuntAverage;
    return this;
  }

  /**
   * Get opponentPuntAverage
   * @return opponentPuntAverage
   */
  @javax.annotation.Nullable
  public BigDecimal getOpponentPuntAverage() {
    return opponentPuntAverage;
  }

  public void setOpponentPuntAverage(BigDecimal opponentPuntAverage) {
    this.opponentPuntAverage = opponentPuntAverage;
  }


  public TeamSeason opponentPuntNetAverage(BigDecimal opponentPuntNetAverage) {
    this.opponentPuntNetAverage = opponentPuntNetAverage;
    return this;
  }

  /**
   * Get opponentPuntNetAverage
   * @return opponentPuntNetAverage
   */
  @javax.annotation.Nullable
  public BigDecimal getOpponentPuntNetAverage() {
    return opponentPuntNetAverage;
  }

  public void setOpponentPuntNetAverage(BigDecimal opponentPuntNetAverage) {
    this.opponentPuntNetAverage = opponentPuntNetAverage;
  }


  public TeamSeason opponentPuntNetYards(Integer opponentPuntNetYards) {
    this.opponentPuntNetYards = opponentPuntNetYards;
    return this;
  }

  /**
   * Get opponentPuntNetYards
   * @return opponentPuntNetYards
   */
  @javax.annotation.Nullable
  public Integer getOpponentPuntNetYards() {
    return opponentPuntNetYards;
  }

  public void setOpponentPuntNetYards(Integer opponentPuntNetYards) {
    this.opponentPuntNetYards = opponentPuntNetYards;
  }


  public TeamSeason opponentPuntReturnAverage(BigDecimal opponentPuntReturnAverage) {
    this.opponentPuntReturnAverage = opponentPuntReturnAverage;
    return this;
  }

  /**
   * Get opponentPuntReturnAverage
   * @return opponentPuntReturnAverage
   */
  @javax.annotation.Nullable
  public BigDecimal getOpponentPuntReturnAverage() {
    return opponentPuntReturnAverage;
  }

  public void setOpponentPuntReturnAverage(BigDecimal opponentPuntReturnAverage) {
    this.opponentPuntReturnAverage = opponentPuntReturnAverage;
  }


  public TeamSeason opponentPuntReturnLong(Integer opponentPuntReturnLong) {
    this.opponentPuntReturnLong = opponentPuntReturnLong;
    return this;
  }

  /**
   * Get opponentPuntReturnLong
   * @return opponentPuntReturnLong
   */
  @javax.annotation.Nullable
  public Integer getOpponentPuntReturnLong() {
    return opponentPuntReturnLong;
  }

  public void setOpponentPuntReturnLong(Integer opponentPuntReturnLong) {
    this.opponentPuntReturnLong = opponentPuntReturnLong;
  }


  public TeamSeason opponentPuntReturnTouchdowns(Integer opponentPuntReturnTouchdowns) {
    this.opponentPuntReturnTouchdowns = opponentPuntReturnTouchdowns;
    return this;
  }

  /**
   * Get opponentPuntReturnTouchdowns
   * @return opponentPuntReturnTouchdowns
   */
  @javax.annotation.Nullable
  public Integer getOpponentPuntReturnTouchdowns() {
    return opponentPuntReturnTouchdowns;
  }

  public void setOpponentPuntReturnTouchdowns(Integer opponentPuntReturnTouchdowns) {
    this.opponentPuntReturnTouchdowns = opponentPuntReturnTouchdowns;
  }


  public TeamSeason opponentPuntReturnYards(Integer opponentPuntReturnYards) {
    this.opponentPuntReturnYards = opponentPuntReturnYards;
    return this;
  }

  /**
   * Get opponentPuntReturnYards
   * @return opponentPuntReturnYards
   */
  @javax.annotation.Nullable
  public Integer getOpponentPuntReturnYards() {
    return opponentPuntReturnYards;
  }

  public void setOpponentPuntReturnYards(Integer opponentPuntReturnYards) {
    this.opponentPuntReturnYards = opponentPuntReturnYards;
  }


  public TeamSeason opponentPuntReturns(Integer opponentPuntReturns) {
    this.opponentPuntReturns = opponentPuntReturns;
    return this;
  }

  /**
   * Get opponentPuntReturns
   * @return opponentPuntReturns
   */
  @javax.annotation.Nullable
  public Integer getOpponentPuntReturns() {
    return opponentPuntReturns;
  }

  public void setOpponentPuntReturns(Integer opponentPuntReturns) {
    this.opponentPuntReturns = opponentPuntReturns;
  }


  public TeamSeason opponentPuntYards(Integer opponentPuntYards) {
    this.opponentPuntYards = opponentPuntYards;
    return this;
  }

  /**
   * Get opponentPuntYards
   * @return opponentPuntYards
   */
  @javax.annotation.Nullable
  public Integer getOpponentPuntYards() {
    return opponentPuntYards;
  }

  public void setOpponentPuntYards(Integer opponentPuntYards) {
    this.opponentPuntYards = opponentPuntYards;
  }


  public TeamSeason opponentPunts(Integer opponentPunts) {
    this.opponentPunts = opponentPunts;
    return this;
  }

  /**
   * Get opponentPunts
   * @return opponentPunts
   */
  @javax.annotation.Nullable
  public Integer getOpponentPunts() {
    return opponentPunts;
  }

  public void setOpponentPunts(Integer opponentPunts) {
    this.opponentPunts = opponentPunts;
  }


  public TeamSeason opponentPuntsHadBlocked(Integer opponentPuntsHadBlocked) {
    this.opponentPuntsHadBlocked = opponentPuntsHadBlocked;
    return this;
  }

  /**
   * Get opponentPuntsHadBlocked
   * @return opponentPuntsHadBlocked
   */
  @javax.annotation.Nullable
  public Integer getOpponentPuntsHadBlocked() {
    return opponentPuntsHadBlocked;
  }

  public void setOpponentPuntsHadBlocked(Integer opponentPuntsHadBlocked) {
    this.opponentPuntsHadBlocked = opponentPuntsHadBlocked;
  }


  public TeamSeason opponentQuarterbackHits(Integer opponentQuarterbackHits) {
    this.opponentQuarterbackHits = opponentQuarterbackHits;
    return this;
  }

  /**
   * Get opponentQuarterbackHits
   * @return opponentQuarterbackHits
   */
  @javax.annotation.Nullable
  public Integer getOpponentQuarterbackHits() {
    return opponentQuarterbackHits;
  }

  public void setOpponentQuarterbackHits(Integer opponentQuarterbackHits) {
    this.opponentQuarterbackHits = opponentQuarterbackHits;
  }


  public TeamSeason opponentQuarterbackHitsDifferential(Integer opponentQuarterbackHitsDifferential) {
    this.opponentQuarterbackHitsDifferential = opponentQuarterbackHitsDifferential;
    return this;
  }

  /**
   * Get opponentQuarterbackHitsDifferential
   * @return opponentQuarterbackHitsDifferential
   */
  @javax.annotation.Nullable
  public Integer getOpponentQuarterbackHitsDifferential() {
    return opponentQuarterbackHitsDifferential;
  }

  public void setOpponentQuarterbackHitsDifferential(Integer opponentQuarterbackHitsDifferential) {
    this.opponentQuarterbackHitsDifferential = opponentQuarterbackHitsDifferential;
  }


  public TeamSeason opponentQuarterbackHitsPercentage(BigDecimal opponentQuarterbackHitsPercentage) {
    this.opponentQuarterbackHitsPercentage = opponentQuarterbackHitsPercentage;
    return this;
  }

  /**
   * Get opponentQuarterbackHitsPercentage
   * @return opponentQuarterbackHitsPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getOpponentQuarterbackHitsPercentage() {
    return opponentQuarterbackHitsPercentage;
  }

  public void setOpponentQuarterbackHitsPercentage(BigDecimal opponentQuarterbackHitsPercentage) {
    this.opponentQuarterbackHitsPercentage = opponentQuarterbackHitsPercentage;
  }


  public TeamSeason opponentQuarterbackSacksDifferential(Integer opponentQuarterbackSacksDifferential) {
    this.opponentQuarterbackSacksDifferential = opponentQuarterbackSacksDifferential;
    return this;
  }

  /**
   * Get opponentQuarterbackSacksDifferential
   * @return opponentQuarterbackSacksDifferential
   */
  @javax.annotation.Nullable
  public Integer getOpponentQuarterbackSacksDifferential() {
    return opponentQuarterbackSacksDifferential;
  }

  public void setOpponentQuarterbackSacksDifferential(Integer opponentQuarterbackSacksDifferential) {
    this.opponentQuarterbackSacksDifferential = opponentQuarterbackSacksDifferential;
  }


  public TeamSeason opponentRedZoneAttempts(Integer opponentRedZoneAttempts) {
    this.opponentRedZoneAttempts = opponentRedZoneAttempts;
    return this;
  }

  /**
   * Get opponentRedZoneAttempts
   * @return opponentRedZoneAttempts
   */
  @javax.annotation.Nullable
  public Integer getOpponentRedZoneAttempts() {
    return opponentRedZoneAttempts;
  }

  public void setOpponentRedZoneAttempts(Integer opponentRedZoneAttempts) {
    this.opponentRedZoneAttempts = opponentRedZoneAttempts;
  }


  public TeamSeason opponentRedZoneConversions(Integer opponentRedZoneConversions) {
    this.opponentRedZoneConversions = opponentRedZoneConversions;
    return this;
  }

  /**
   * Get opponentRedZoneConversions
   * @return opponentRedZoneConversions
   */
  @javax.annotation.Nullable
  public Integer getOpponentRedZoneConversions() {
    return opponentRedZoneConversions;
  }

  public void setOpponentRedZoneConversions(Integer opponentRedZoneConversions) {
    this.opponentRedZoneConversions = opponentRedZoneConversions;
  }


  public TeamSeason opponentRedZonePercentage(BigDecimal opponentRedZonePercentage) {
    this.opponentRedZonePercentage = opponentRedZonePercentage;
    return this;
  }

  /**
   * Get opponentRedZonePercentage
   * @return opponentRedZonePercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getOpponentRedZonePercentage() {
    return opponentRedZonePercentage;
  }

  public void setOpponentRedZonePercentage(BigDecimal opponentRedZonePercentage) {
    this.opponentRedZonePercentage = opponentRedZonePercentage;
  }


  public TeamSeason opponentReturnYards(Integer opponentReturnYards) {
    this.opponentReturnYards = opponentReturnYards;
    return this;
  }

  /**
   * Get opponentReturnYards
   * @return opponentReturnYards
   */
  @javax.annotation.Nullable
  public Integer getOpponentReturnYards() {
    return opponentReturnYards;
  }

  public void setOpponentReturnYards(Integer opponentReturnYards) {
    this.opponentReturnYards = opponentReturnYards;
  }


  public TeamSeason opponentRushingAttempts(Integer opponentRushingAttempts) {
    this.opponentRushingAttempts = opponentRushingAttempts;
    return this;
  }

  /**
   * Get opponentRushingAttempts
   * @return opponentRushingAttempts
   */
  @javax.annotation.Nullable
  public Integer getOpponentRushingAttempts() {
    return opponentRushingAttempts;
  }

  public void setOpponentRushingAttempts(Integer opponentRushingAttempts) {
    this.opponentRushingAttempts = opponentRushingAttempts;
  }


  public TeamSeason opponentRushingTouchdowns(Integer opponentRushingTouchdowns) {
    this.opponentRushingTouchdowns = opponentRushingTouchdowns;
    return this;
  }

  /**
   * Get opponentRushingTouchdowns
   * @return opponentRushingTouchdowns
   */
  @javax.annotation.Nullable
  public Integer getOpponentRushingTouchdowns() {
    return opponentRushingTouchdowns;
  }

  public void setOpponentRushingTouchdowns(Integer opponentRushingTouchdowns) {
    this.opponentRushingTouchdowns = opponentRushingTouchdowns;
  }


  public TeamSeason opponentRushingYards(Integer opponentRushingYards) {
    this.opponentRushingYards = opponentRushingYards;
    return this;
  }

  /**
   * Get opponentRushingYards
   * @return opponentRushingYards
   */
  @javax.annotation.Nullable
  public Integer getOpponentRushingYards() {
    return opponentRushingYards;
  }

  public void setOpponentRushingYards(Integer opponentRushingYards) {
    this.opponentRushingYards = opponentRushingYards;
  }


  public TeamSeason opponentRushingYardsPerAttempt(BigDecimal opponentRushingYardsPerAttempt) {
    this.opponentRushingYardsPerAttempt = opponentRushingYardsPerAttempt;
    return this;
  }

  /**
   * Get opponentRushingYardsPerAttempt
   * @return opponentRushingYardsPerAttempt
   */
  @javax.annotation.Nullable
  public BigDecimal getOpponentRushingYardsPerAttempt() {
    return opponentRushingYardsPerAttempt;
  }

  public void setOpponentRushingYardsPerAttempt(BigDecimal opponentRushingYardsPerAttempt) {
    this.opponentRushingYardsPerAttempt = opponentRushingYardsPerAttempt;
  }


  public TeamSeason opponentSackYards(Integer opponentSackYards) {
    this.opponentSackYards = opponentSackYards;
    return this;
  }

  /**
   * Get opponentSackYards
   * @return opponentSackYards
   */
  @javax.annotation.Nullable
  public Integer getOpponentSackYards() {
    return opponentSackYards;
  }

  public void setOpponentSackYards(Integer opponentSackYards) {
    this.opponentSackYards = opponentSackYards;
  }


  public TeamSeason opponentSacks(Integer opponentSacks) {
    this.opponentSacks = opponentSacks;
    return this;
  }

  /**
   * Get opponentSacks
   * @return opponentSacks
   */
  @javax.annotation.Nullable
  public Integer getOpponentSacks() {
    return opponentSacks;
  }

  public void setOpponentSacks(Integer opponentSacks) {
    this.opponentSacks = opponentSacks;
  }


  public TeamSeason opponentSafeties(Integer opponentSafeties) {
    this.opponentSafeties = opponentSafeties;
    return this;
  }

  /**
   * Get opponentSafeties
   * @return opponentSafeties
   */
  @javax.annotation.Nullable
  public Integer getOpponentSafeties() {
    return opponentSafeties;
  }

  public void setOpponentSafeties(Integer opponentSafeties) {
    this.opponentSafeties = opponentSafeties;
  }


  public TeamSeason opponentScore(Integer opponentScore) {
    this.opponentScore = opponentScore;
    return this;
  }

  /**
   * Get opponentScore
   * @return opponentScore
   */
  @javax.annotation.Nullable
  public Integer getOpponentScore() {
    return opponentScore;
  }

  public void setOpponentScore(Integer opponentScore) {
    this.opponentScore = opponentScore;
  }


  public TeamSeason opponentScoreOvertime(Integer opponentScoreOvertime) {
    this.opponentScoreOvertime = opponentScoreOvertime;
    return this;
  }

  /**
   * Get opponentScoreOvertime
   * @return opponentScoreOvertime
   */
  @javax.annotation.Nullable
  public Integer getOpponentScoreOvertime() {
    return opponentScoreOvertime;
  }

  public void setOpponentScoreOvertime(Integer opponentScoreOvertime) {
    this.opponentScoreOvertime = opponentScoreOvertime;
  }


  public TeamSeason opponentScoreQuarter1(Integer opponentScoreQuarter1) {
    this.opponentScoreQuarter1 = opponentScoreQuarter1;
    return this;
  }

  /**
   * Get opponentScoreQuarter1
   * @return opponentScoreQuarter1
   */
  @javax.annotation.Nullable
  public Integer getOpponentScoreQuarter1() {
    return opponentScoreQuarter1;
  }

  public void setOpponentScoreQuarter1(Integer opponentScoreQuarter1) {
    this.opponentScoreQuarter1 = opponentScoreQuarter1;
  }


  public TeamSeason opponentScoreQuarter2(Integer opponentScoreQuarter2) {
    this.opponentScoreQuarter2 = opponentScoreQuarter2;
    return this;
  }

  /**
   * Get opponentScoreQuarter2
   * @return opponentScoreQuarter2
   */
  @javax.annotation.Nullable
  public Integer getOpponentScoreQuarter2() {
    return opponentScoreQuarter2;
  }

  public void setOpponentScoreQuarter2(Integer opponentScoreQuarter2) {
    this.opponentScoreQuarter2 = opponentScoreQuarter2;
  }


  public TeamSeason opponentScoreQuarter3(Integer opponentScoreQuarter3) {
    this.opponentScoreQuarter3 = opponentScoreQuarter3;
    return this;
  }

  /**
   * Get opponentScoreQuarter3
   * @return opponentScoreQuarter3
   */
  @javax.annotation.Nullable
  public Integer getOpponentScoreQuarter3() {
    return opponentScoreQuarter3;
  }

  public void setOpponentScoreQuarter3(Integer opponentScoreQuarter3) {
    this.opponentScoreQuarter3 = opponentScoreQuarter3;
  }


  public TeamSeason opponentScoreQuarter4(Integer opponentScoreQuarter4) {
    this.opponentScoreQuarter4 = opponentScoreQuarter4;
    return this;
  }

  /**
   * Get opponentScoreQuarter4
   * @return opponentScoreQuarter4
   */
  @javax.annotation.Nullable
  public Integer getOpponentScoreQuarter4() {
    return opponentScoreQuarter4;
  }

  public void setOpponentScoreQuarter4(Integer opponentScoreQuarter4) {
    this.opponentScoreQuarter4 = opponentScoreQuarter4;
  }


  public TeamSeason opponentSoloTackles(Integer opponentSoloTackles) {
    this.opponentSoloTackles = opponentSoloTackles;
    return this;
  }

  /**
   * Get opponentSoloTackles
   * @return opponentSoloTackles
   */
  @javax.annotation.Nullable
  public Integer getOpponentSoloTackles() {
    return opponentSoloTackles;
  }

  public void setOpponentSoloTackles(Integer opponentSoloTackles) {
    this.opponentSoloTackles = opponentSoloTackles;
  }


  public TeamSeason opponentTacklesForLoss(Integer opponentTacklesForLoss) {
    this.opponentTacklesForLoss = opponentTacklesForLoss;
    return this;
  }

  /**
   * Get opponentTacklesForLoss
   * @return opponentTacklesForLoss
   */
  @javax.annotation.Nullable
  public Integer getOpponentTacklesForLoss() {
    return opponentTacklesForLoss;
  }

  public void setOpponentTacklesForLoss(Integer opponentTacklesForLoss) {
    this.opponentTacklesForLoss = opponentTacklesForLoss;
  }


  public TeamSeason opponentTacklesForLossDifferential(Integer opponentTacklesForLossDifferential) {
    this.opponentTacklesForLossDifferential = opponentTacklesForLossDifferential;
    return this;
  }

  /**
   * Get opponentTacklesForLossDifferential
   * @return opponentTacklesForLossDifferential
   */
  @javax.annotation.Nullable
  public Integer getOpponentTacklesForLossDifferential() {
    return opponentTacklesForLossDifferential;
  }

  public void setOpponentTacklesForLossDifferential(Integer opponentTacklesForLossDifferential) {
    this.opponentTacklesForLossDifferential = opponentTacklesForLossDifferential;
  }


  public TeamSeason opponentTacklesForLossPercentage(BigDecimal opponentTacklesForLossPercentage) {
    this.opponentTacklesForLossPercentage = opponentTacklesForLossPercentage;
    return this;
  }

  /**
   * Get opponentTacklesForLossPercentage
   * @return opponentTacklesForLossPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getOpponentTacklesForLossPercentage() {
    return opponentTacklesForLossPercentage;
  }

  public void setOpponentTacklesForLossPercentage(BigDecimal opponentTacklesForLossPercentage) {
    this.opponentTacklesForLossPercentage = opponentTacklesForLossPercentage;
  }


  public TeamSeason opponentTakeaways(Integer opponentTakeaways) {
    this.opponentTakeaways = opponentTakeaways;
    return this;
  }

  /**
   * Get opponentTakeaways
   * @return opponentTakeaways
   */
  @javax.annotation.Nullable
  public Integer getOpponentTakeaways() {
    return opponentTakeaways;
  }

  public void setOpponentTakeaways(Integer opponentTakeaways) {
    this.opponentTakeaways = opponentTakeaways;
  }


  public TeamSeason opponentThirdDownAttempts(Integer opponentThirdDownAttempts) {
    this.opponentThirdDownAttempts = opponentThirdDownAttempts;
    return this;
  }

  /**
   * Get opponentThirdDownAttempts
   * @return opponentThirdDownAttempts
   */
  @javax.annotation.Nullable
  public Integer getOpponentThirdDownAttempts() {
    return opponentThirdDownAttempts;
  }

  public void setOpponentThirdDownAttempts(Integer opponentThirdDownAttempts) {
    this.opponentThirdDownAttempts = opponentThirdDownAttempts;
  }


  public TeamSeason opponentThirdDownConversions(Integer opponentThirdDownConversions) {
    this.opponentThirdDownConversions = opponentThirdDownConversions;
    return this;
  }

  /**
   * Get opponentThirdDownConversions
   * @return opponentThirdDownConversions
   */
  @javax.annotation.Nullable
  public Integer getOpponentThirdDownConversions() {
    return opponentThirdDownConversions;
  }

  public void setOpponentThirdDownConversions(Integer opponentThirdDownConversions) {
    this.opponentThirdDownConversions = opponentThirdDownConversions;
  }


  public TeamSeason opponentThirdDownPercentage(BigDecimal opponentThirdDownPercentage) {
    this.opponentThirdDownPercentage = opponentThirdDownPercentage;
    return this;
  }

  /**
   * Get opponentThirdDownPercentage
   * @return opponentThirdDownPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getOpponentThirdDownPercentage() {
    return opponentThirdDownPercentage;
  }

  public void setOpponentThirdDownPercentage(BigDecimal opponentThirdDownPercentage) {
    this.opponentThirdDownPercentage = opponentThirdDownPercentage;
  }


  public TeamSeason opponentTimeOfPossession(String opponentTimeOfPossession) {
    this.opponentTimeOfPossession = opponentTimeOfPossession;
    return this;
  }

  /**
   * Get opponentTimeOfPossession
   * @return opponentTimeOfPossession
   */
  @javax.annotation.Nullable
  public String getOpponentTimeOfPossession() {
    return opponentTimeOfPossession;
  }

  public void setOpponentTimeOfPossession(String opponentTimeOfPossession) {
    this.opponentTimeOfPossession = opponentTimeOfPossession;
  }


  public TeamSeason opponentTimesSacked(Integer opponentTimesSacked) {
    this.opponentTimesSacked = opponentTimesSacked;
    return this;
  }

  /**
   * Get opponentTimesSacked
   * @return opponentTimesSacked
   */
  @javax.annotation.Nullable
  public Integer getOpponentTimesSacked() {
    return opponentTimesSacked;
  }

  public void setOpponentTimesSacked(Integer opponentTimesSacked) {
    this.opponentTimesSacked = opponentTimesSacked;
  }


  public TeamSeason opponentTimesSackedPercentage(BigDecimal opponentTimesSackedPercentage) {
    this.opponentTimesSackedPercentage = opponentTimesSackedPercentage;
    return this;
  }

  /**
   * Get opponentTimesSackedPercentage
   * @return opponentTimesSackedPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getOpponentTimesSackedPercentage() {
    return opponentTimesSackedPercentage;
  }

  public void setOpponentTimesSackedPercentage(BigDecimal opponentTimesSackedPercentage) {
    this.opponentTimesSackedPercentage = opponentTimesSackedPercentage;
  }


  public TeamSeason opponentTimesSackedYards(Integer opponentTimesSackedYards) {
    this.opponentTimesSackedYards = opponentTimesSackedYards;
    return this;
  }

  /**
   * Get opponentTimesSackedYards
   * @return opponentTimesSackedYards
   */
  @javax.annotation.Nullable
  public Integer getOpponentTimesSackedYards() {
    return opponentTimesSackedYards;
  }

  public void setOpponentTimesSackedYards(Integer opponentTimesSackedYards) {
    this.opponentTimesSackedYards = opponentTimesSackedYards;
  }


  public TeamSeason opponentTouchdowns(Integer opponentTouchdowns) {
    this.opponentTouchdowns = opponentTouchdowns;
    return this;
  }

  /**
   * Get opponentTouchdowns
   * @return opponentTouchdowns
   */
  @javax.annotation.Nullable
  public Integer getOpponentTouchdowns() {
    return opponentTouchdowns;
  }

  public void setOpponentTouchdowns(Integer opponentTouchdowns) {
    this.opponentTouchdowns = opponentTouchdowns;
  }


  public TeamSeason opponentTurnoverDifferential(Integer opponentTurnoverDifferential) {
    this.opponentTurnoverDifferential = opponentTurnoverDifferential;
    return this;
  }

  /**
   * Get opponentTurnoverDifferential
   * @return opponentTurnoverDifferential
   */
  @javax.annotation.Nullable
  public Integer getOpponentTurnoverDifferential() {
    return opponentTurnoverDifferential;
  }

  public void setOpponentTurnoverDifferential(Integer opponentTurnoverDifferential) {
    this.opponentTurnoverDifferential = opponentTurnoverDifferential;
  }


  public TeamSeason opponentTwoPointConversionReturns(Integer opponentTwoPointConversionReturns) {
    this.opponentTwoPointConversionReturns = opponentTwoPointConversionReturns;
    return this;
  }

  /**
   * Get opponentTwoPointConversionReturns
   * @return opponentTwoPointConversionReturns
   */
  @javax.annotation.Nullable
  public Integer getOpponentTwoPointConversionReturns() {
    return opponentTwoPointConversionReturns;
  }

  public void setOpponentTwoPointConversionReturns(Integer opponentTwoPointConversionReturns) {
    this.opponentTwoPointConversionReturns = opponentTwoPointConversionReturns;
  }


  public TeamSeason overUnder(BigDecimal overUnder) {
    this.overUnder = overUnder;
    return this;
  }

  /**
   * Get overUnder
   * @return overUnder
   */
  @javax.annotation.Nullable
  public BigDecimal getOverUnder() {
    return overUnder;
  }

  public void setOverUnder(BigDecimal overUnder) {
    this.overUnder = overUnder;
  }


  public TeamSeason passerRating(BigDecimal passerRating) {
    this.passerRating = passerRating;
    return this;
  }

  /**
   * Get passerRating
   * @return passerRating
   */
  @javax.annotation.Nullable
  public BigDecimal getPasserRating() {
    return passerRating;
  }

  public void setPasserRating(BigDecimal passerRating) {
    this.passerRating = passerRating;
  }


  public TeamSeason passesDefended(Integer passesDefended) {
    this.passesDefended = passesDefended;
    return this;
  }

  /**
   * Get passesDefended
   * @return passesDefended
   */
  @javax.annotation.Nullable
  public Integer getPassesDefended() {
    return passesDefended;
  }

  public void setPassesDefended(Integer passesDefended) {
    this.passesDefended = passesDefended;
  }


  public TeamSeason passingAttempts(Integer passingAttempts) {
    this.passingAttempts = passingAttempts;
    return this;
  }

  /**
   * Get passingAttempts
   * @return passingAttempts
   */
  @javax.annotation.Nullable
  public Integer getPassingAttempts() {
    return passingAttempts;
  }

  public void setPassingAttempts(Integer passingAttempts) {
    this.passingAttempts = passingAttempts;
  }


  public TeamSeason passingCompletions(Integer passingCompletions) {
    this.passingCompletions = passingCompletions;
    return this;
  }

  /**
   * Get passingCompletions
   * @return passingCompletions
   */
  @javax.annotation.Nullable
  public Integer getPassingCompletions() {
    return passingCompletions;
  }

  public void setPassingCompletions(Integer passingCompletions) {
    this.passingCompletions = passingCompletions;
  }


  public TeamSeason passingDropbacks(Integer passingDropbacks) {
    this.passingDropbacks = passingDropbacks;
    return this;
  }

  /**
   * Get passingDropbacks
   * @return passingDropbacks
   */
  @javax.annotation.Nullable
  public Integer getPassingDropbacks() {
    return passingDropbacks;
  }

  public void setPassingDropbacks(Integer passingDropbacks) {
    this.passingDropbacks = passingDropbacks;
  }


  public TeamSeason passingInterceptionPercentage(BigDecimal passingInterceptionPercentage) {
    this.passingInterceptionPercentage = passingInterceptionPercentage;
    return this;
  }

  /**
   * Get passingInterceptionPercentage
   * @return passingInterceptionPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getPassingInterceptionPercentage() {
    return passingInterceptionPercentage;
  }

  public void setPassingInterceptionPercentage(BigDecimal passingInterceptionPercentage) {
    this.passingInterceptionPercentage = passingInterceptionPercentage;
  }


  public TeamSeason passingInterceptions(Integer passingInterceptions) {
    this.passingInterceptions = passingInterceptions;
    return this;
  }

  /**
   * Get passingInterceptions
   * @return passingInterceptions
   */
  @javax.annotation.Nullable
  public Integer getPassingInterceptions() {
    return passingInterceptions;
  }

  public void setPassingInterceptions(Integer passingInterceptions) {
    this.passingInterceptions = passingInterceptions;
  }


  public TeamSeason passingTouchdowns(Integer passingTouchdowns) {
    this.passingTouchdowns = passingTouchdowns;
    return this;
  }

  /**
   * Get passingTouchdowns
   * @return passingTouchdowns
   */
  @javax.annotation.Nullable
  public Integer getPassingTouchdowns() {
    return passingTouchdowns;
  }

  public void setPassingTouchdowns(Integer passingTouchdowns) {
    this.passingTouchdowns = passingTouchdowns;
  }


  public TeamSeason passingYards(Integer passingYards) {
    this.passingYards = passingYards;
    return this;
  }

  /**
   * Get passingYards
   * @return passingYards
   */
  @javax.annotation.Nullable
  public Integer getPassingYards() {
    return passingYards;
  }

  public void setPassingYards(Integer passingYards) {
    this.passingYards = passingYards;
  }


  public TeamSeason passingYardsPerAttempt(BigDecimal passingYardsPerAttempt) {
    this.passingYardsPerAttempt = passingYardsPerAttempt;
    return this;
  }

  /**
   * Get passingYardsPerAttempt
   * @return passingYardsPerAttempt
   */
  @javax.annotation.Nullable
  public BigDecimal getPassingYardsPerAttempt() {
    return passingYardsPerAttempt;
  }

  public void setPassingYardsPerAttempt(BigDecimal passingYardsPerAttempt) {
    this.passingYardsPerAttempt = passingYardsPerAttempt;
  }


  public TeamSeason passingYardsPerCompletion(BigDecimal passingYardsPerCompletion) {
    this.passingYardsPerCompletion = passingYardsPerCompletion;
    return this;
  }

  /**
   * Get passingYardsPerCompletion
   * @return passingYardsPerCompletion
   */
  @javax.annotation.Nullable
  public BigDecimal getPassingYardsPerCompletion() {
    return passingYardsPerCompletion;
  }

  public void setPassingYardsPerCompletion(BigDecimal passingYardsPerCompletion) {
    this.passingYardsPerCompletion = passingYardsPerCompletion;
  }


  public TeamSeason penalties(Integer penalties) {
    this.penalties = penalties;
    return this;
  }

  /**
   * Get penalties
   * @return penalties
   */
  @javax.annotation.Nullable
  public Integer getPenalties() {
    return penalties;
  }

  public void setPenalties(Integer penalties) {
    this.penalties = penalties;
  }


  public TeamSeason penaltyYardDifferential(Integer penaltyYardDifferential) {
    this.penaltyYardDifferential = penaltyYardDifferential;
    return this;
  }

  /**
   * Get penaltyYardDifferential
   * @return penaltyYardDifferential
   */
  @javax.annotation.Nullable
  public Integer getPenaltyYardDifferential() {
    return penaltyYardDifferential;
  }

  public void setPenaltyYardDifferential(Integer penaltyYardDifferential) {
    this.penaltyYardDifferential = penaltyYardDifferential;
  }


  public TeamSeason penaltyYards(Integer penaltyYards) {
    this.penaltyYards = penaltyYards;
    return this;
  }

  /**
   * Get penaltyYards
   * @return penaltyYards
   */
  @javax.annotation.Nullable
  public Integer getPenaltyYards() {
    return penaltyYards;
  }

  public void setPenaltyYards(Integer penaltyYards) {
    this.penaltyYards = penaltyYards;
  }


  public TeamSeason pointDifferential(Integer pointDifferential) {
    this.pointDifferential = pointDifferential;
    return this;
  }

  /**
   * Get pointDifferential
   * @return pointDifferential
   */
  @javax.annotation.Nullable
  public Integer getPointDifferential() {
    return pointDifferential;
  }

  public void setPointDifferential(Integer pointDifferential) {
    this.pointDifferential = pointDifferential;
  }


  public TeamSeason pointSpread(BigDecimal pointSpread) {
    this.pointSpread = pointSpread;
    return this;
  }

  /**
   * Get pointSpread
   * @return pointSpread
   */
  @javax.annotation.Nullable
  public BigDecimal getPointSpread() {
    return pointSpread;
  }

  public void setPointSpread(BigDecimal pointSpread) {
    this.pointSpread = pointSpread;
  }


  public TeamSeason puntAverage(BigDecimal puntAverage) {
    this.puntAverage = puntAverage;
    return this;
  }

  /**
   * Get puntAverage
   * @return puntAverage
   */
  @javax.annotation.Nullable
  public BigDecimal getPuntAverage() {
    return puntAverage;
  }

  public void setPuntAverage(BigDecimal puntAverage) {
    this.puntAverage = puntAverage;
  }


  public TeamSeason puntNetAverage(BigDecimal puntNetAverage) {
    this.puntNetAverage = puntNetAverage;
    return this;
  }

  /**
   * Get puntNetAverage
   * @return puntNetAverage
   */
  @javax.annotation.Nullable
  public BigDecimal getPuntNetAverage() {
    return puntNetAverage;
  }

  public void setPuntNetAverage(BigDecimal puntNetAverage) {
    this.puntNetAverage = puntNetAverage;
  }


  public TeamSeason puntNetYards(Integer puntNetYards) {
    this.puntNetYards = puntNetYards;
    return this;
  }

  /**
   * Get puntNetYards
   * @return puntNetYards
   */
  @javax.annotation.Nullable
  public Integer getPuntNetYards() {
    return puntNetYards;
  }

  public void setPuntNetYards(Integer puntNetYards) {
    this.puntNetYards = puntNetYards;
  }


  public TeamSeason puntReturnAverage(BigDecimal puntReturnAverage) {
    this.puntReturnAverage = puntReturnAverage;
    return this;
  }

  /**
   * Get puntReturnAverage
   * @return puntReturnAverage
   */
  @javax.annotation.Nullable
  public BigDecimal getPuntReturnAverage() {
    return puntReturnAverage;
  }

  public void setPuntReturnAverage(BigDecimal puntReturnAverage) {
    this.puntReturnAverage = puntReturnAverage;
  }


  public TeamSeason puntReturnLong(Integer puntReturnLong) {
    this.puntReturnLong = puntReturnLong;
    return this;
  }

  /**
   * Get puntReturnLong
   * @return puntReturnLong
   */
  @javax.annotation.Nullable
  public Integer getPuntReturnLong() {
    return puntReturnLong;
  }

  public void setPuntReturnLong(Integer puntReturnLong) {
    this.puntReturnLong = puntReturnLong;
  }


  public TeamSeason puntReturnTouchdowns(Integer puntReturnTouchdowns) {
    this.puntReturnTouchdowns = puntReturnTouchdowns;
    return this;
  }

  /**
   * Get puntReturnTouchdowns
   * @return puntReturnTouchdowns
   */
  @javax.annotation.Nullable
  public Integer getPuntReturnTouchdowns() {
    return puntReturnTouchdowns;
  }

  public void setPuntReturnTouchdowns(Integer puntReturnTouchdowns) {
    this.puntReturnTouchdowns = puntReturnTouchdowns;
  }


  public TeamSeason puntReturnYardDifferential(Integer puntReturnYardDifferential) {
    this.puntReturnYardDifferential = puntReturnYardDifferential;
    return this;
  }

  /**
   * Get puntReturnYardDifferential
   * @return puntReturnYardDifferential
   */
  @javax.annotation.Nullable
  public Integer getPuntReturnYardDifferential() {
    return puntReturnYardDifferential;
  }

  public void setPuntReturnYardDifferential(Integer puntReturnYardDifferential) {
    this.puntReturnYardDifferential = puntReturnYardDifferential;
  }


  public TeamSeason puntReturnYards(Integer puntReturnYards) {
    this.puntReturnYards = puntReturnYards;
    return this;
  }

  /**
   * Get puntReturnYards
   * @return puntReturnYards
   */
  @javax.annotation.Nullable
  public Integer getPuntReturnYards() {
    return puntReturnYards;
  }

  public void setPuntReturnYards(Integer puntReturnYards) {
    this.puntReturnYards = puntReturnYards;
  }


  public TeamSeason puntReturns(Integer puntReturns) {
    this.puntReturns = puntReturns;
    return this;
  }

  /**
   * Get puntReturns
   * @return puntReturns
   */
  @javax.annotation.Nullable
  public Integer getPuntReturns() {
    return puntReturns;
  }

  public void setPuntReturns(Integer puntReturns) {
    this.puntReturns = puntReturns;
  }


  public TeamSeason puntYards(Integer puntYards) {
    this.puntYards = puntYards;
    return this;
  }

  /**
   * Get puntYards
   * @return puntYards
   */
  @javax.annotation.Nullable
  public Integer getPuntYards() {
    return puntYards;
  }

  public void setPuntYards(Integer puntYards) {
    this.puntYards = puntYards;
  }


  public TeamSeason punts(Integer punts) {
    this.punts = punts;
    return this;
  }

  /**
   * Get punts
   * @return punts
   */
  @javax.annotation.Nullable
  public Integer getPunts() {
    return punts;
  }

  public void setPunts(Integer punts) {
    this.punts = punts;
  }


  public TeamSeason puntsHadBlocked(Integer puntsHadBlocked) {
    this.puntsHadBlocked = puntsHadBlocked;
    return this;
  }

  /**
   * Get puntsHadBlocked
   * @return puntsHadBlocked
   */
  @javax.annotation.Nullable
  public Integer getPuntsHadBlocked() {
    return puntsHadBlocked;
  }

  public void setPuntsHadBlocked(Integer puntsHadBlocked) {
    this.puntsHadBlocked = puntsHadBlocked;
  }


  public TeamSeason quarterbackHits(Integer quarterbackHits) {
    this.quarterbackHits = quarterbackHits;
    return this;
  }

  /**
   * Get quarterbackHits
   * @return quarterbackHits
   */
  @javax.annotation.Nullable
  public Integer getQuarterbackHits() {
    return quarterbackHits;
  }

  public void setQuarterbackHits(Integer quarterbackHits) {
    this.quarterbackHits = quarterbackHits;
  }


  public TeamSeason quarterbackHitsDifferential(Integer quarterbackHitsDifferential) {
    this.quarterbackHitsDifferential = quarterbackHitsDifferential;
    return this;
  }

  /**
   * Get quarterbackHitsDifferential
   * @return quarterbackHitsDifferential
   */
  @javax.annotation.Nullable
  public Integer getQuarterbackHitsDifferential() {
    return quarterbackHitsDifferential;
  }

  public void setQuarterbackHitsDifferential(Integer quarterbackHitsDifferential) {
    this.quarterbackHitsDifferential = quarterbackHitsDifferential;
  }


  public TeamSeason quarterbackHitsPercentage(BigDecimal quarterbackHitsPercentage) {
    this.quarterbackHitsPercentage = quarterbackHitsPercentage;
    return this;
  }

  /**
   * Get quarterbackHitsPercentage
   * @return quarterbackHitsPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getQuarterbackHitsPercentage() {
    return quarterbackHitsPercentage;
  }

  public void setQuarterbackHitsPercentage(BigDecimal quarterbackHitsPercentage) {
    this.quarterbackHitsPercentage = quarterbackHitsPercentage;
  }


  public TeamSeason quarterbackSacksDifferential(Integer quarterbackSacksDifferential) {
    this.quarterbackSacksDifferential = quarterbackSacksDifferential;
    return this;
  }

  /**
   * Get quarterbackSacksDifferential
   * @return quarterbackSacksDifferential
   */
  @javax.annotation.Nullable
  public Integer getQuarterbackSacksDifferential() {
    return quarterbackSacksDifferential;
  }

  public void setQuarterbackSacksDifferential(Integer quarterbackSacksDifferential) {
    this.quarterbackSacksDifferential = quarterbackSacksDifferential;
  }


  public TeamSeason redZoneAttempts(Integer redZoneAttempts) {
    this.redZoneAttempts = redZoneAttempts;
    return this;
  }

  /**
   * Get redZoneAttempts
   * @return redZoneAttempts
   */
  @javax.annotation.Nullable
  public Integer getRedZoneAttempts() {
    return redZoneAttempts;
  }

  public void setRedZoneAttempts(Integer redZoneAttempts) {
    this.redZoneAttempts = redZoneAttempts;
  }


  public TeamSeason redZoneConversions(Integer redZoneConversions) {
    this.redZoneConversions = redZoneConversions;
    return this;
  }

  /**
   * Get redZoneConversions
   * @return redZoneConversions
   */
  @javax.annotation.Nullable
  public Integer getRedZoneConversions() {
    return redZoneConversions;
  }

  public void setRedZoneConversions(Integer redZoneConversions) {
    this.redZoneConversions = redZoneConversions;
  }


  public TeamSeason redZonePercentage(BigDecimal redZonePercentage) {
    this.redZonePercentage = redZonePercentage;
    return this;
  }

  /**
   * Get redZonePercentage
   * @return redZonePercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getRedZonePercentage() {
    return redZonePercentage;
  }

  public void setRedZonePercentage(BigDecimal redZonePercentage) {
    this.redZonePercentage = redZonePercentage;
  }


  public TeamSeason returnYards(Integer returnYards) {
    this.returnYards = returnYards;
    return this;
  }

  /**
   * Get returnYards
   * @return returnYards
   */
  @javax.annotation.Nullable
  public Integer getReturnYards() {
    return returnYards;
  }

  public void setReturnYards(Integer returnYards) {
    this.returnYards = returnYards;
  }


  public TeamSeason rushingAttempts(Integer rushingAttempts) {
    this.rushingAttempts = rushingAttempts;
    return this;
  }

  /**
   * Get rushingAttempts
   * @return rushingAttempts
   */
  @javax.annotation.Nullable
  public Integer getRushingAttempts() {
    return rushingAttempts;
  }

  public void setRushingAttempts(Integer rushingAttempts) {
    this.rushingAttempts = rushingAttempts;
  }


  public TeamSeason rushingTouchdowns(Integer rushingTouchdowns) {
    this.rushingTouchdowns = rushingTouchdowns;
    return this;
  }

  /**
   * Get rushingTouchdowns
   * @return rushingTouchdowns
   */
  @javax.annotation.Nullable
  public Integer getRushingTouchdowns() {
    return rushingTouchdowns;
  }

  public void setRushingTouchdowns(Integer rushingTouchdowns) {
    this.rushingTouchdowns = rushingTouchdowns;
  }


  public TeamSeason rushingYards(Integer rushingYards) {
    this.rushingYards = rushingYards;
    return this;
  }

  /**
   * Get rushingYards
   * @return rushingYards
   */
  @javax.annotation.Nullable
  public Integer getRushingYards() {
    return rushingYards;
  }

  public void setRushingYards(Integer rushingYards) {
    this.rushingYards = rushingYards;
  }


  public TeamSeason rushingYardsPerAttempt(BigDecimal rushingYardsPerAttempt) {
    this.rushingYardsPerAttempt = rushingYardsPerAttempt;
    return this;
  }

  /**
   * Get rushingYardsPerAttempt
   * @return rushingYardsPerAttempt
   */
  @javax.annotation.Nullable
  public BigDecimal getRushingYardsPerAttempt() {
    return rushingYardsPerAttempt;
  }

  public void setRushingYardsPerAttempt(BigDecimal rushingYardsPerAttempt) {
    this.rushingYardsPerAttempt = rushingYardsPerAttempt;
  }


  public TeamSeason sackYards(Integer sackYards) {
    this.sackYards = sackYards;
    return this;
  }

  /**
   * Get sackYards
   * @return sackYards
   */
  @javax.annotation.Nullable
  public Integer getSackYards() {
    return sackYards;
  }

  public void setSackYards(Integer sackYards) {
    this.sackYards = sackYards;
  }


  public TeamSeason sacks(Integer sacks) {
    this.sacks = sacks;
    return this;
  }

  /**
   * Get sacks
   * @return sacks
   */
  @javax.annotation.Nullable
  public Integer getSacks() {
    return sacks;
  }

  public void setSacks(Integer sacks) {
    this.sacks = sacks;
  }


  public TeamSeason safeties(Integer safeties) {
    this.safeties = safeties;
    return this;
  }

  /**
   * Get safeties
   * @return safeties
   */
  @javax.annotation.Nullable
  public Integer getSafeties() {
    return safeties;
  }

  public void setSafeties(Integer safeties) {
    this.safeties = safeties;
  }


  public TeamSeason score(Integer score) {
    this.score = score;
    return this;
  }

  /**
   * Get score
   * @return score
   */
  @javax.annotation.Nullable
  public Integer getScore() {
    return score;
  }

  public void setScore(Integer score) {
    this.score = score;
  }


  public TeamSeason scoreOvertime(Integer scoreOvertime) {
    this.scoreOvertime = scoreOvertime;
    return this;
  }

  /**
   * Get scoreOvertime
   * @return scoreOvertime
   */
  @javax.annotation.Nullable
  public Integer getScoreOvertime() {
    return scoreOvertime;
  }

  public void setScoreOvertime(Integer scoreOvertime) {
    this.scoreOvertime = scoreOvertime;
  }


  public TeamSeason scoreQuarter1(Integer scoreQuarter1) {
    this.scoreQuarter1 = scoreQuarter1;
    return this;
  }

  /**
   * Get scoreQuarter1
   * @return scoreQuarter1
   */
  @javax.annotation.Nullable
  public Integer getScoreQuarter1() {
    return scoreQuarter1;
  }

  public void setScoreQuarter1(Integer scoreQuarter1) {
    this.scoreQuarter1 = scoreQuarter1;
  }


  public TeamSeason scoreQuarter2(Integer scoreQuarter2) {
    this.scoreQuarter2 = scoreQuarter2;
    return this;
  }

  /**
   * Get scoreQuarter2
   * @return scoreQuarter2
   */
  @javax.annotation.Nullable
  public Integer getScoreQuarter2() {
    return scoreQuarter2;
  }

  public void setScoreQuarter2(Integer scoreQuarter2) {
    this.scoreQuarter2 = scoreQuarter2;
  }


  public TeamSeason scoreQuarter3(Integer scoreQuarter3) {
    this.scoreQuarter3 = scoreQuarter3;
    return this;
  }

  /**
   * Get scoreQuarter3
   * @return scoreQuarter3
   */
  @javax.annotation.Nullable
  public Integer getScoreQuarter3() {
    return scoreQuarter3;
  }

  public void setScoreQuarter3(Integer scoreQuarter3) {
    this.scoreQuarter3 = scoreQuarter3;
  }


  public TeamSeason scoreQuarter4(Integer scoreQuarter4) {
    this.scoreQuarter4 = scoreQuarter4;
    return this;
  }

  /**
   * Get scoreQuarter4
   * @return scoreQuarter4
   */
  @javax.annotation.Nullable
  public Integer getScoreQuarter4() {
    return scoreQuarter4;
  }

  public void setScoreQuarter4(Integer scoreQuarter4) {
    this.scoreQuarter4 = scoreQuarter4;
  }


  public TeamSeason season(Integer season) {
    this.season = season;
    return this;
  }

  /**
   * Get season
   * @return season
   */
  @javax.annotation.Nullable
  public Integer getSeason() {
    return season;
  }

  public void setSeason(Integer season) {
    this.season = season;
  }


  public TeamSeason seasonType(Integer seasonType) {
    this.seasonType = seasonType;
    return this;
  }

  /**
   * Get seasonType
   * @return seasonType
   */
  @javax.annotation.Nullable
  public Integer getSeasonType() {
    return seasonType;
  }

  public void setSeasonType(Integer seasonType) {
    this.seasonType = seasonType;
  }


  public TeamSeason soloTackles(Integer soloTackles) {
    this.soloTackles = soloTackles;
    return this;
  }

  /**
   * Get soloTackles
   * @return soloTackles
   */
  @javax.annotation.Nullable
  public Integer getSoloTackles() {
    return soloTackles;
  }

  public void setSoloTackles(Integer soloTackles) {
    this.soloTackles = soloTackles;
  }


  public TeamSeason tacklesForLoss(Integer tacklesForLoss) {
    this.tacklesForLoss = tacklesForLoss;
    return this;
  }

  /**
   * Get tacklesForLoss
   * @return tacklesForLoss
   */
  @javax.annotation.Nullable
  public Integer getTacklesForLoss() {
    return tacklesForLoss;
  }

  public void setTacklesForLoss(Integer tacklesForLoss) {
    this.tacklesForLoss = tacklesForLoss;
  }


  public TeamSeason tacklesForLossDifferential(Integer tacklesForLossDifferential) {
    this.tacklesForLossDifferential = tacklesForLossDifferential;
    return this;
  }

  /**
   * Get tacklesForLossDifferential
   * @return tacklesForLossDifferential
   */
  @javax.annotation.Nullable
  public Integer getTacklesForLossDifferential() {
    return tacklesForLossDifferential;
  }

  public void setTacklesForLossDifferential(Integer tacklesForLossDifferential) {
    this.tacklesForLossDifferential = tacklesForLossDifferential;
  }


  public TeamSeason tacklesForLossPercentage(BigDecimal tacklesForLossPercentage) {
    this.tacklesForLossPercentage = tacklesForLossPercentage;
    return this;
  }

  /**
   * Get tacklesForLossPercentage
   * @return tacklesForLossPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getTacklesForLossPercentage() {
    return tacklesForLossPercentage;
  }

  public void setTacklesForLossPercentage(BigDecimal tacklesForLossPercentage) {
    this.tacklesForLossPercentage = tacklesForLossPercentage;
  }


  public TeamSeason takeaways(Integer takeaways) {
    this.takeaways = takeaways;
    return this;
  }

  /**
   * Get takeaways
   * @return takeaways
   */
  @javax.annotation.Nullable
  public Integer getTakeaways() {
    return takeaways;
  }

  public void setTakeaways(Integer takeaways) {
    this.takeaways = takeaways;
  }


  public TeamSeason team(String team) {
    this.team = team;
    return this;
  }

  /**
   * Get team
   * @return team
   */
  @javax.annotation.Nullable
  public String getTeam() {
    return team;
  }

  public void setTeam(String team) {
    this.team = team;
  }


  public TeamSeason teamID(Integer teamID) {
    this.teamID = teamID;
    return this;
  }

  /**
   * Get teamID
   * @return teamID
   */
  @javax.annotation.Nullable
  public Integer getTeamID() {
    return teamID;
  }

  public void setTeamID(Integer teamID) {
    this.teamID = teamID;
  }


  public TeamSeason teamName(String teamName) {
    this.teamName = teamName;
    return this;
  }

  /**
   * Get teamName
   * @return teamName
   */
  @javax.annotation.Nullable
  public String getTeamName() {
    return teamName;
  }

  public void setTeamName(String teamName) {
    this.teamName = teamName;
  }


  public TeamSeason teamSeasonID(Integer teamSeasonID) {
    this.teamSeasonID = teamSeasonID;
    return this;
  }

  /**
   * Get teamSeasonID
   * @return teamSeasonID
   */
  @javax.annotation.Nullable
  public Integer getTeamSeasonID() {
    return teamSeasonID;
  }

  public void setTeamSeasonID(Integer teamSeasonID) {
    this.teamSeasonID = teamSeasonID;
  }


  public TeamSeason teamStatID(Integer teamStatID) {
    this.teamStatID = teamStatID;
    return this;
  }

  /**
   * Get teamStatID
   * @return teamStatID
   */
  @javax.annotation.Nullable
  public Integer getTeamStatID() {
    return teamStatID;
  }

  public void setTeamStatID(Integer teamStatID) {
    this.teamStatID = teamStatID;
  }


  public TeamSeason temperature(Integer temperature) {
    this.temperature = temperature;
    return this;
  }

  /**
   * Get temperature
   * @return temperature
   */
  @javax.annotation.Nullable
  public Integer getTemperature() {
    return temperature;
  }

  public void setTemperature(Integer temperature) {
    this.temperature = temperature;
  }


  public TeamSeason thirdDownAttempts(Integer thirdDownAttempts) {
    this.thirdDownAttempts = thirdDownAttempts;
    return this;
  }

  /**
   * Get thirdDownAttempts
   * @return thirdDownAttempts
   */
  @javax.annotation.Nullable
  public Integer getThirdDownAttempts() {
    return thirdDownAttempts;
  }

  public void setThirdDownAttempts(Integer thirdDownAttempts) {
    this.thirdDownAttempts = thirdDownAttempts;
  }


  public TeamSeason thirdDownConversions(Integer thirdDownConversions) {
    this.thirdDownConversions = thirdDownConversions;
    return this;
  }

  /**
   * Get thirdDownConversions
   * @return thirdDownConversions
   */
  @javax.annotation.Nullable
  public Integer getThirdDownConversions() {
    return thirdDownConversions;
  }

  public void setThirdDownConversions(Integer thirdDownConversions) {
    this.thirdDownConversions = thirdDownConversions;
  }


  public TeamSeason thirdDownPercentage(BigDecimal thirdDownPercentage) {
    this.thirdDownPercentage = thirdDownPercentage;
    return this;
  }

  /**
   * Get thirdDownPercentage
   * @return thirdDownPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getThirdDownPercentage() {
    return thirdDownPercentage;
  }

  public void setThirdDownPercentage(BigDecimal thirdDownPercentage) {
    this.thirdDownPercentage = thirdDownPercentage;
  }


  public TeamSeason timeOfPossession(String timeOfPossession) {
    this.timeOfPossession = timeOfPossession;
    return this;
  }

  /**
   * Get timeOfPossession
   * @return timeOfPossession
   */
  @javax.annotation.Nullable
  public String getTimeOfPossession() {
    return timeOfPossession;
  }

  public void setTimeOfPossession(String timeOfPossession) {
    this.timeOfPossession = timeOfPossession;
  }


  public TeamSeason timesSacked(Integer timesSacked) {
    this.timesSacked = timesSacked;
    return this;
  }

  /**
   * Get timesSacked
   * @return timesSacked
   */
  @javax.annotation.Nullable
  public Integer getTimesSacked() {
    return timesSacked;
  }

  public void setTimesSacked(Integer timesSacked) {
    this.timesSacked = timesSacked;
  }


  public TeamSeason timesSackedPercentage(BigDecimal timesSackedPercentage) {
    this.timesSackedPercentage = timesSackedPercentage;
    return this;
  }

  /**
   * Get timesSackedPercentage
   * @return timesSackedPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getTimesSackedPercentage() {
    return timesSackedPercentage;
  }

  public void setTimesSackedPercentage(BigDecimal timesSackedPercentage) {
    this.timesSackedPercentage = timesSackedPercentage;
  }


  public TeamSeason timesSackedYards(Integer timesSackedYards) {
    this.timesSackedYards = timesSackedYards;
    return this;
  }

  /**
   * Get timesSackedYards
   * @return timesSackedYards
   */
  @javax.annotation.Nullable
  public Integer getTimesSackedYards() {
    return timesSackedYards;
  }

  public void setTimesSackedYards(Integer timesSackedYards) {
    this.timesSackedYards = timesSackedYards;
  }


  public TeamSeason totalScore(Integer totalScore) {
    this.totalScore = totalScore;
    return this;
  }

  /**
   * Get totalScore
   * @return totalScore
   */
  @javax.annotation.Nullable
  public Integer getTotalScore() {
    return totalScore;
  }

  public void setTotalScore(Integer totalScore) {
    this.totalScore = totalScore;
  }


  public TeamSeason touchdowns(Integer touchdowns) {
    this.touchdowns = touchdowns;
    return this;
  }

  /**
   * Get touchdowns
   * @return touchdowns
   */
  @javax.annotation.Nullable
  public Integer getTouchdowns() {
    return touchdowns;
  }

  public void setTouchdowns(Integer touchdowns) {
    this.touchdowns = touchdowns;
  }


  public TeamSeason turnoverDifferential(Integer turnoverDifferential) {
    this.turnoverDifferential = turnoverDifferential;
    return this;
  }

  /**
   * Get turnoverDifferential
   * @return turnoverDifferential
   */
  @javax.annotation.Nullable
  public Integer getTurnoverDifferential() {
    return turnoverDifferential;
  }

  public void setTurnoverDifferential(Integer turnoverDifferential) {
    this.turnoverDifferential = turnoverDifferential;
  }


  public TeamSeason twoPointConversionReturns(Integer twoPointConversionReturns) {
    this.twoPointConversionReturns = twoPointConversionReturns;
    return this;
  }

  /**
   * Get twoPointConversionReturns
   * @return twoPointConversionReturns
   */
  @javax.annotation.Nullable
  public Integer getTwoPointConversionReturns() {
    return twoPointConversionReturns;
  }

  public void setTwoPointConversionReturns(Integer twoPointConversionReturns) {
    this.twoPointConversionReturns = twoPointConversionReturns;
  }


  public TeamSeason windSpeed(Integer windSpeed) {
    this.windSpeed = windSpeed;
    return this;
  }

  /**
   * Get windSpeed
   * @return windSpeed
   */
  @javax.annotation.Nullable
  public Integer getWindSpeed() {
    return windSpeed;
  }

  public void setWindSpeed(Integer windSpeed) {
    this.windSpeed = windSpeed;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TeamSeason teamSeason = (TeamSeason) o;
    return Objects.equals(this.assistedTackles, teamSeason.assistedTackles) &&
        Objects.equals(this.blockedKickReturnTouchdowns, teamSeason.blockedKickReturnTouchdowns) &&
        Objects.equals(this.blockedKickReturnYards, teamSeason.blockedKickReturnYards) &&
        Objects.equals(this.blockedKicks, teamSeason.blockedKicks) &&
        Objects.equals(this.completionPercentage, teamSeason.completionPercentage) &&
        Objects.equals(this.extraPointKickingAttempts, teamSeason.extraPointKickingAttempts) &&
        Objects.equals(this.extraPointKickingConversions, teamSeason.extraPointKickingConversions) &&
        Objects.equals(this.extraPointPassingAttempts, teamSeason.extraPointPassingAttempts) &&
        Objects.equals(this.extraPointPassingConversions, teamSeason.extraPointPassingConversions) &&
        Objects.equals(this.extraPointPercentage, teamSeason.extraPointPercentage) &&
        Objects.equals(this.extraPointRushingAttempts, teamSeason.extraPointRushingAttempts) &&
        Objects.equals(this.extraPointRushingConversions, teamSeason.extraPointRushingConversions) &&
        Objects.equals(this.extraPointsHadBlocked, teamSeason.extraPointsHadBlocked) &&
        Objects.equals(this.fieldGoalAttempts, teamSeason.fieldGoalAttempts) &&
        Objects.equals(this.fieldGoalPercentage, teamSeason.fieldGoalPercentage) &&
        Objects.equals(this.fieldGoalReturnTouchdowns, teamSeason.fieldGoalReturnTouchdowns) &&
        Objects.equals(this.fieldGoalReturnYards, teamSeason.fieldGoalReturnYards) &&
        Objects.equals(this.fieldGoalsHadBlocked, teamSeason.fieldGoalsHadBlocked) &&
        Objects.equals(this.fieldGoalsMade, teamSeason.fieldGoalsMade) &&
        Objects.equals(this.firstDowns, teamSeason.firstDowns) &&
        Objects.equals(this.firstDownsByPassing, teamSeason.firstDownsByPassing) &&
        Objects.equals(this.firstDownsByPenalty, teamSeason.firstDownsByPenalty) &&
        Objects.equals(this.firstDownsByRushing, teamSeason.firstDownsByRushing) &&
        Objects.equals(this.fourthDownAttempts, teamSeason.fourthDownAttempts) &&
        Objects.equals(this.fourthDownConversions, teamSeason.fourthDownConversions) &&
        Objects.equals(this.fourthDownPercentage, teamSeason.fourthDownPercentage) &&
        Objects.equals(this.fumbleReturnTouchdowns, teamSeason.fumbleReturnTouchdowns) &&
        Objects.equals(this.fumbleReturnYards, teamSeason.fumbleReturnYards) &&
        Objects.equals(this.fumbles, teamSeason.fumbles) &&
        Objects.equals(this.fumblesForced, teamSeason.fumblesForced) &&
        Objects.equals(this.fumblesLost, teamSeason.fumblesLost) &&
        Objects.equals(this.fumblesRecovered, teamSeason.fumblesRecovered) &&
        Objects.equals(this.games, teamSeason.games) &&
        Objects.equals(this.giveaways, teamSeason.giveaways) &&
        Objects.equals(this.globalTeamID, teamSeason.globalTeamID) &&
        Objects.equals(this.goalToGoAttempts, teamSeason.goalToGoAttempts) &&
        Objects.equals(this.goalToGoConversions, teamSeason.goalToGoConversions) &&
        Objects.equals(this.goalToGoPercentage, teamSeason.goalToGoPercentage) &&
        Objects.equals(this.humidity, teamSeason.humidity) &&
        Objects.equals(this.interceptionReturnTouchdowns, teamSeason.interceptionReturnTouchdowns) &&
        Objects.equals(this.interceptionReturnYards, teamSeason.interceptionReturnYards) &&
        Objects.equals(this.interceptionReturns, teamSeason.interceptionReturns) &&
        Objects.equals(this.kickReturnAverage, teamSeason.kickReturnAverage) &&
        Objects.equals(this.kickReturnLong, teamSeason.kickReturnLong) &&
        Objects.equals(this.kickReturnTouchdowns, teamSeason.kickReturnTouchdowns) &&
        Objects.equals(this.kickReturnYardDifferential, teamSeason.kickReturnYardDifferential) &&
        Objects.equals(this.kickReturnYards, teamSeason.kickReturnYards) &&
        Objects.equals(this.kickReturns, teamSeason.kickReturns) &&
        Objects.equals(this.kickoffTouchbacks, teamSeason.kickoffTouchbacks) &&
        Objects.equals(this.kickoffs, teamSeason.kickoffs) &&
        Objects.equals(this.kickoffsInEndZone, teamSeason.kickoffsInEndZone) &&
        Objects.equals(this.offensivePlays, teamSeason.offensivePlays) &&
        Objects.equals(this.offensiveYards, teamSeason.offensiveYards) &&
        Objects.equals(this.offensiveYardsPerPlay, teamSeason.offensiveYardsPerPlay) &&
        Objects.equals(this.opponentAssistedTackles, teamSeason.opponentAssistedTackles) &&
        Objects.equals(this.opponentBlockedKickReturnTouchdowns, teamSeason.opponentBlockedKickReturnTouchdowns) &&
        Objects.equals(this.opponentBlockedKickReturnYards, teamSeason.opponentBlockedKickReturnYards) &&
        Objects.equals(this.opponentBlockedKicks, teamSeason.opponentBlockedKicks) &&
        Objects.equals(this.opponentCompletionPercentage, teamSeason.opponentCompletionPercentage) &&
        Objects.equals(this.opponentExtraPointKickingAttempts, teamSeason.opponentExtraPointKickingAttempts) &&
        Objects.equals(this.opponentExtraPointKickingConversions, teamSeason.opponentExtraPointKickingConversions) &&
        Objects.equals(this.opponentExtraPointPassingAttempts, teamSeason.opponentExtraPointPassingAttempts) &&
        Objects.equals(this.opponentExtraPointPassingConversions, teamSeason.opponentExtraPointPassingConversions) &&
        Objects.equals(this.opponentExtraPointPercentage, teamSeason.opponentExtraPointPercentage) &&
        Objects.equals(this.opponentExtraPointRushingAttempts, teamSeason.opponentExtraPointRushingAttempts) &&
        Objects.equals(this.opponentExtraPointRushingConversions, teamSeason.opponentExtraPointRushingConversions) &&
        Objects.equals(this.opponentExtraPointsHadBlocked, teamSeason.opponentExtraPointsHadBlocked) &&
        Objects.equals(this.opponentFieldGoalAttempts, teamSeason.opponentFieldGoalAttempts) &&
        Objects.equals(this.opponentFieldGoalPercentage, teamSeason.opponentFieldGoalPercentage) &&
        Objects.equals(this.opponentFieldGoalReturnTouchdowns, teamSeason.opponentFieldGoalReturnTouchdowns) &&
        Objects.equals(this.opponentFieldGoalReturnYards, teamSeason.opponentFieldGoalReturnYards) &&
        Objects.equals(this.opponentFieldGoalsHadBlocked, teamSeason.opponentFieldGoalsHadBlocked) &&
        Objects.equals(this.opponentFieldGoalsMade, teamSeason.opponentFieldGoalsMade) &&
        Objects.equals(this.opponentFirstDowns, teamSeason.opponentFirstDowns) &&
        Objects.equals(this.opponentFirstDownsByPassing, teamSeason.opponentFirstDownsByPassing) &&
        Objects.equals(this.opponentFirstDownsByPenalty, teamSeason.opponentFirstDownsByPenalty) &&
        Objects.equals(this.opponentFirstDownsByRushing, teamSeason.opponentFirstDownsByRushing) &&
        Objects.equals(this.opponentFourthDownAttempts, teamSeason.opponentFourthDownAttempts) &&
        Objects.equals(this.opponentFourthDownConversions, teamSeason.opponentFourthDownConversions) &&
        Objects.equals(this.opponentFourthDownPercentage, teamSeason.opponentFourthDownPercentage) &&
        Objects.equals(this.opponentFumbleReturnTouchdowns, teamSeason.opponentFumbleReturnTouchdowns) &&
        Objects.equals(this.opponentFumbleReturnYards, teamSeason.opponentFumbleReturnYards) &&
        Objects.equals(this.opponentFumbles, teamSeason.opponentFumbles) &&
        Objects.equals(this.opponentFumblesForced, teamSeason.opponentFumblesForced) &&
        Objects.equals(this.opponentFumblesLost, teamSeason.opponentFumblesLost) &&
        Objects.equals(this.opponentFumblesRecovered, teamSeason.opponentFumblesRecovered) &&
        Objects.equals(this.opponentGiveaways, teamSeason.opponentGiveaways) &&
        Objects.equals(this.opponentGoalToGoAttempts, teamSeason.opponentGoalToGoAttempts) &&
        Objects.equals(this.opponentGoalToGoConversions, teamSeason.opponentGoalToGoConversions) &&
        Objects.equals(this.opponentGoalToGoPercentage, teamSeason.opponentGoalToGoPercentage) &&
        Objects.equals(this.opponentInterceptionReturnTouchdowns, teamSeason.opponentInterceptionReturnTouchdowns) &&
        Objects.equals(this.opponentInterceptionReturnYards, teamSeason.opponentInterceptionReturnYards) &&
        Objects.equals(this.opponentInterceptionReturns, teamSeason.opponentInterceptionReturns) &&
        Objects.equals(this.opponentKickReturnAverage, teamSeason.opponentKickReturnAverage) &&
        Objects.equals(this.opponentKickReturnLong, teamSeason.opponentKickReturnLong) &&
        Objects.equals(this.opponentKickReturnTouchdowns, teamSeason.opponentKickReturnTouchdowns) &&
        Objects.equals(this.opponentKickReturnYards, teamSeason.opponentKickReturnYards) &&
        Objects.equals(this.opponentKickReturns, teamSeason.opponentKickReturns) &&
        Objects.equals(this.opponentKickoffTouchbacks, teamSeason.opponentKickoffTouchbacks) &&
        Objects.equals(this.opponentKickoffs, teamSeason.opponentKickoffs) &&
        Objects.equals(this.opponentKickoffsInEndZone, teamSeason.opponentKickoffsInEndZone) &&
        Objects.equals(this.opponentOffensivePlays, teamSeason.opponentOffensivePlays) &&
        Objects.equals(this.opponentOffensiveYards, teamSeason.opponentOffensiveYards) &&
        Objects.equals(this.opponentOffensiveYardsPerPlay, teamSeason.opponentOffensiveYardsPerPlay) &&
        Objects.equals(this.opponentPasserRating, teamSeason.opponentPasserRating) &&
        Objects.equals(this.opponentPassesDefended, teamSeason.opponentPassesDefended) &&
        Objects.equals(this.opponentPassingAttempts, teamSeason.opponentPassingAttempts) &&
        Objects.equals(this.opponentPassingCompletions, teamSeason.opponentPassingCompletions) &&
        Objects.equals(this.opponentPassingDropbacks, teamSeason.opponentPassingDropbacks) &&
        Objects.equals(this.opponentPassingInterceptionPercentage, teamSeason.opponentPassingInterceptionPercentage) &&
        Objects.equals(this.opponentPassingInterceptions, teamSeason.opponentPassingInterceptions) &&
        Objects.equals(this.opponentPassingTouchdowns, teamSeason.opponentPassingTouchdowns) &&
        Objects.equals(this.opponentPassingYards, teamSeason.opponentPassingYards) &&
        Objects.equals(this.opponentPassingYardsPerAttempt, teamSeason.opponentPassingYardsPerAttempt) &&
        Objects.equals(this.opponentPassingYardsPerCompletion, teamSeason.opponentPassingYardsPerCompletion) &&
        Objects.equals(this.opponentPenalties, teamSeason.opponentPenalties) &&
        Objects.equals(this.opponentPenaltyYards, teamSeason.opponentPenaltyYards) &&
        Objects.equals(this.opponentPuntAverage, teamSeason.opponentPuntAverage) &&
        Objects.equals(this.opponentPuntNetAverage, teamSeason.opponentPuntNetAverage) &&
        Objects.equals(this.opponentPuntNetYards, teamSeason.opponentPuntNetYards) &&
        Objects.equals(this.opponentPuntReturnAverage, teamSeason.opponentPuntReturnAverage) &&
        Objects.equals(this.opponentPuntReturnLong, teamSeason.opponentPuntReturnLong) &&
        Objects.equals(this.opponentPuntReturnTouchdowns, teamSeason.opponentPuntReturnTouchdowns) &&
        Objects.equals(this.opponentPuntReturnYards, teamSeason.opponentPuntReturnYards) &&
        Objects.equals(this.opponentPuntReturns, teamSeason.opponentPuntReturns) &&
        Objects.equals(this.opponentPuntYards, teamSeason.opponentPuntYards) &&
        Objects.equals(this.opponentPunts, teamSeason.opponentPunts) &&
        Objects.equals(this.opponentPuntsHadBlocked, teamSeason.opponentPuntsHadBlocked) &&
        Objects.equals(this.opponentQuarterbackHits, teamSeason.opponentQuarterbackHits) &&
        Objects.equals(this.opponentQuarterbackHitsDifferential, teamSeason.opponentQuarterbackHitsDifferential) &&
        Objects.equals(this.opponentQuarterbackHitsPercentage, teamSeason.opponentQuarterbackHitsPercentage) &&
        Objects.equals(this.opponentQuarterbackSacksDifferential, teamSeason.opponentQuarterbackSacksDifferential) &&
        Objects.equals(this.opponentRedZoneAttempts, teamSeason.opponentRedZoneAttempts) &&
        Objects.equals(this.opponentRedZoneConversions, teamSeason.opponentRedZoneConversions) &&
        Objects.equals(this.opponentRedZonePercentage, teamSeason.opponentRedZonePercentage) &&
        Objects.equals(this.opponentReturnYards, teamSeason.opponentReturnYards) &&
        Objects.equals(this.opponentRushingAttempts, teamSeason.opponentRushingAttempts) &&
        Objects.equals(this.opponentRushingTouchdowns, teamSeason.opponentRushingTouchdowns) &&
        Objects.equals(this.opponentRushingYards, teamSeason.opponentRushingYards) &&
        Objects.equals(this.opponentRushingYardsPerAttempt, teamSeason.opponentRushingYardsPerAttempt) &&
        Objects.equals(this.opponentSackYards, teamSeason.opponentSackYards) &&
        Objects.equals(this.opponentSacks, teamSeason.opponentSacks) &&
        Objects.equals(this.opponentSafeties, teamSeason.opponentSafeties) &&
        Objects.equals(this.opponentScore, teamSeason.opponentScore) &&
        Objects.equals(this.opponentScoreOvertime, teamSeason.opponentScoreOvertime) &&
        Objects.equals(this.opponentScoreQuarter1, teamSeason.opponentScoreQuarter1) &&
        Objects.equals(this.opponentScoreQuarter2, teamSeason.opponentScoreQuarter2) &&
        Objects.equals(this.opponentScoreQuarter3, teamSeason.opponentScoreQuarter3) &&
        Objects.equals(this.opponentScoreQuarter4, teamSeason.opponentScoreQuarter4) &&
        Objects.equals(this.opponentSoloTackles, teamSeason.opponentSoloTackles) &&
        Objects.equals(this.opponentTacklesForLoss, teamSeason.opponentTacklesForLoss) &&
        Objects.equals(this.opponentTacklesForLossDifferential, teamSeason.opponentTacklesForLossDifferential) &&
        Objects.equals(this.opponentTacklesForLossPercentage, teamSeason.opponentTacklesForLossPercentage) &&
        Objects.equals(this.opponentTakeaways, teamSeason.opponentTakeaways) &&
        Objects.equals(this.opponentThirdDownAttempts, teamSeason.opponentThirdDownAttempts) &&
        Objects.equals(this.opponentThirdDownConversions, teamSeason.opponentThirdDownConversions) &&
        Objects.equals(this.opponentThirdDownPercentage, teamSeason.opponentThirdDownPercentage) &&
        Objects.equals(this.opponentTimeOfPossession, teamSeason.opponentTimeOfPossession) &&
        Objects.equals(this.opponentTimesSacked, teamSeason.opponentTimesSacked) &&
        Objects.equals(this.opponentTimesSackedPercentage, teamSeason.opponentTimesSackedPercentage) &&
        Objects.equals(this.opponentTimesSackedYards, teamSeason.opponentTimesSackedYards) &&
        Objects.equals(this.opponentTouchdowns, teamSeason.opponentTouchdowns) &&
        Objects.equals(this.opponentTurnoverDifferential, teamSeason.opponentTurnoverDifferential) &&
        Objects.equals(this.opponentTwoPointConversionReturns, teamSeason.opponentTwoPointConversionReturns) &&
        Objects.equals(this.overUnder, teamSeason.overUnder) &&
        Objects.equals(this.passerRating, teamSeason.passerRating) &&
        Objects.equals(this.passesDefended, teamSeason.passesDefended) &&
        Objects.equals(this.passingAttempts, teamSeason.passingAttempts) &&
        Objects.equals(this.passingCompletions, teamSeason.passingCompletions) &&
        Objects.equals(this.passingDropbacks, teamSeason.passingDropbacks) &&
        Objects.equals(this.passingInterceptionPercentage, teamSeason.passingInterceptionPercentage) &&
        Objects.equals(this.passingInterceptions, teamSeason.passingInterceptions) &&
        Objects.equals(this.passingTouchdowns, teamSeason.passingTouchdowns) &&
        Objects.equals(this.passingYards, teamSeason.passingYards) &&
        Objects.equals(this.passingYardsPerAttempt, teamSeason.passingYardsPerAttempt) &&
        Objects.equals(this.passingYardsPerCompletion, teamSeason.passingYardsPerCompletion) &&
        Objects.equals(this.penalties, teamSeason.penalties) &&
        Objects.equals(this.penaltyYardDifferential, teamSeason.penaltyYardDifferential) &&
        Objects.equals(this.penaltyYards, teamSeason.penaltyYards) &&
        Objects.equals(this.pointDifferential, teamSeason.pointDifferential) &&
        Objects.equals(this.pointSpread, teamSeason.pointSpread) &&
        Objects.equals(this.puntAverage, teamSeason.puntAverage) &&
        Objects.equals(this.puntNetAverage, teamSeason.puntNetAverage) &&
        Objects.equals(this.puntNetYards, teamSeason.puntNetYards) &&
        Objects.equals(this.puntReturnAverage, teamSeason.puntReturnAverage) &&
        Objects.equals(this.puntReturnLong, teamSeason.puntReturnLong) &&
        Objects.equals(this.puntReturnTouchdowns, teamSeason.puntReturnTouchdowns) &&
        Objects.equals(this.puntReturnYardDifferential, teamSeason.puntReturnYardDifferential) &&
        Objects.equals(this.puntReturnYards, teamSeason.puntReturnYards) &&
        Objects.equals(this.puntReturns, teamSeason.puntReturns) &&
        Objects.equals(this.puntYards, teamSeason.puntYards) &&
        Objects.equals(this.punts, teamSeason.punts) &&
        Objects.equals(this.puntsHadBlocked, teamSeason.puntsHadBlocked) &&
        Objects.equals(this.quarterbackHits, teamSeason.quarterbackHits) &&
        Objects.equals(this.quarterbackHitsDifferential, teamSeason.quarterbackHitsDifferential) &&
        Objects.equals(this.quarterbackHitsPercentage, teamSeason.quarterbackHitsPercentage) &&
        Objects.equals(this.quarterbackSacksDifferential, teamSeason.quarterbackSacksDifferential) &&
        Objects.equals(this.redZoneAttempts, teamSeason.redZoneAttempts) &&
        Objects.equals(this.redZoneConversions, teamSeason.redZoneConversions) &&
        Objects.equals(this.redZonePercentage, teamSeason.redZonePercentage) &&
        Objects.equals(this.returnYards, teamSeason.returnYards) &&
        Objects.equals(this.rushingAttempts, teamSeason.rushingAttempts) &&
        Objects.equals(this.rushingTouchdowns, teamSeason.rushingTouchdowns) &&
        Objects.equals(this.rushingYards, teamSeason.rushingYards) &&
        Objects.equals(this.rushingYardsPerAttempt, teamSeason.rushingYardsPerAttempt) &&
        Objects.equals(this.sackYards, teamSeason.sackYards) &&
        Objects.equals(this.sacks, teamSeason.sacks) &&
        Objects.equals(this.safeties, teamSeason.safeties) &&
        Objects.equals(this.score, teamSeason.score) &&
        Objects.equals(this.scoreOvertime, teamSeason.scoreOvertime) &&
        Objects.equals(this.scoreQuarter1, teamSeason.scoreQuarter1) &&
        Objects.equals(this.scoreQuarter2, teamSeason.scoreQuarter2) &&
        Objects.equals(this.scoreQuarter3, teamSeason.scoreQuarter3) &&
        Objects.equals(this.scoreQuarter4, teamSeason.scoreQuarter4) &&
        Objects.equals(this.season, teamSeason.season) &&
        Objects.equals(this.seasonType, teamSeason.seasonType) &&
        Objects.equals(this.soloTackles, teamSeason.soloTackles) &&
        Objects.equals(this.tacklesForLoss, teamSeason.tacklesForLoss) &&
        Objects.equals(this.tacklesForLossDifferential, teamSeason.tacklesForLossDifferential) &&
        Objects.equals(this.tacklesForLossPercentage, teamSeason.tacklesForLossPercentage) &&
        Objects.equals(this.takeaways, teamSeason.takeaways) &&
        Objects.equals(this.team, teamSeason.team) &&
        Objects.equals(this.teamID, teamSeason.teamID) &&
        Objects.equals(this.teamName, teamSeason.teamName) &&
        Objects.equals(this.teamSeasonID, teamSeason.teamSeasonID) &&
        Objects.equals(this.teamStatID, teamSeason.teamStatID) &&
        Objects.equals(this.temperature, teamSeason.temperature) &&
        Objects.equals(this.thirdDownAttempts, teamSeason.thirdDownAttempts) &&
        Objects.equals(this.thirdDownConversions, teamSeason.thirdDownConversions) &&
        Objects.equals(this.thirdDownPercentage, teamSeason.thirdDownPercentage) &&
        Objects.equals(this.timeOfPossession, teamSeason.timeOfPossession) &&
        Objects.equals(this.timesSacked, teamSeason.timesSacked) &&
        Objects.equals(this.timesSackedPercentage, teamSeason.timesSackedPercentage) &&
        Objects.equals(this.timesSackedYards, teamSeason.timesSackedYards) &&
        Objects.equals(this.totalScore, teamSeason.totalScore) &&
        Objects.equals(this.touchdowns, teamSeason.touchdowns) &&
        Objects.equals(this.turnoverDifferential, teamSeason.turnoverDifferential) &&
        Objects.equals(this.twoPointConversionReturns, teamSeason.twoPointConversionReturns) &&
        Objects.equals(this.windSpeed, teamSeason.windSpeed);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(assistedTackles, blockedKickReturnTouchdowns, blockedKickReturnYards, blockedKicks, completionPercentage, extraPointKickingAttempts, extraPointKickingConversions, extraPointPassingAttempts, extraPointPassingConversions, extraPointPercentage, extraPointRushingAttempts, extraPointRushingConversions, extraPointsHadBlocked, fieldGoalAttempts, fieldGoalPercentage, fieldGoalReturnTouchdowns, fieldGoalReturnYards, fieldGoalsHadBlocked, fieldGoalsMade, firstDowns, firstDownsByPassing, firstDownsByPenalty, firstDownsByRushing, fourthDownAttempts, fourthDownConversions, fourthDownPercentage, fumbleReturnTouchdowns, fumbleReturnYards, fumbles, fumblesForced, fumblesLost, fumblesRecovered, games, giveaways, globalTeamID, goalToGoAttempts, goalToGoConversions, goalToGoPercentage, humidity, interceptionReturnTouchdowns, interceptionReturnYards, interceptionReturns, kickReturnAverage, kickReturnLong, kickReturnTouchdowns, kickReturnYardDifferential, kickReturnYards, kickReturns, kickoffTouchbacks, kickoffs, kickoffsInEndZone, offensivePlays, offensiveYards, offensiveYardsPerPlay, opponentAssistedTackles, opponentBlockedKickReturnTouchdowns, opponentBlockedKickReturnYards, opponentBlockedKicks, opponentCompletionPercentage, opponentExtraPointKickingAttempts, opponentExtraPointKickingConversions, opponentExtraPointPassingAttempts, opponentExtraPointPassingConversions, opponentExtraPointPercentage, opponentExtraPointRushingAttempts, opponentExtraPointRushingConversions, opponentExtraPointsHadBlocked, opponentFieldGoalAttempts, opponentFieldGoalPercentage, opponentFieldGoalReturnTouchdowns, opponentFieldGoalReturnYards, opponentFieldGoalsHadBlocked, opponentFieldGoalsMade, opponentFirstDowns, opponentFirstDownsByPassing, opponentFirstDownsByPenalty, opponentFirstDownsByRushing, opponentFourthDownAttempts, opponentFourthDownConversions, opponentFourthDownPercentage, opponentFumbleReturnTouchdowns, opponentFumbleReturnYards, opponentFumbles, opponentFumblesForced, opponentFumblesLost, opponentFumblesRecovered, opponentGiveaways, opponentGoalToGoAttempts, opponentGoalToGoConversions, opponentGoalToGoPercentage, opponentInterceptionReturnTouchdowns, opponentInterceptionReturnYards, opponentInterceptionReturns, opponentKickReturnAverage, opponentKickReturnLong, opponentKickReturnTouchdowns, opponentKickReturnYards, opponentKickReturns, opponentKickoffTouchbacks, opponentKickoffs, opponentKickoffsInEndZone, opponentOffensivePlays, opponentOffensiveYards, opponentOffensiveYardsPerPlay, opponentPasserRating, opponentPassesDefended, opponentPassingAttempts, opponentPassingCompletions, opponentPassingDropbacks, opponentPassingInterceptionPercentage, opponentPassingInterceptions, opponentPassingTouchdowns, opponentPassingYards, opponentPassingYardsPerAttempt, opponentPassingYardsPerCompletion, opponentPenalties, opponentPenaltyYards, opponentPuntAverage, opponentPuntNetAverage, opponentPuntNetYards, opponentPuntReturnAverage, opponentPuntReturnLong, opponentPuntReturnTouchdowns, opponentPuntReturnYards, opponentPuntReturns, opponentPuntYards, opponentPunts, opponentPuntsHadBlocked, opponentQuarterbackHits, opponentQuarterbackHitsDifferential, opponentQuarterbackHitsPercentage, opponentQuarterbackSacksDifferential, opponentRedZoneAttempts, opponentRedZoneConversions, opponentRedZonePercentage, opponentReturnYards, opponentRushingAttempts, opponentRushingTouchdowns, opponentRushingYards, opponentRushingYardsPerAttempt, opponentSackYards, opponentSacks, opponentSafeties, opponentScore, opponentScoreOvertime, opponentScoreQuarter1, opponentScoreQuarter2, opponentScoreQuarter3, opponentScoreQuarter4, opponentSoloTackles, opponentTacklesForLoss, opponentTacklesForLossDifferential, opponentTacklesForLossPercentage, opponentTakeaways, opponentThirdDownAttempts, opponentThirdDownConversions, opponentThirdDownPercentage, opponentTimeOfPossession, opponentTimesSacked, opponentTimesSackedPercentage, opponentTimesSackedYards, opponentTouchdowns, opponentTurnoverDifferential, opponentTwoPointConversionReturns, overUnder, passerRating, passesDefended, passingAttempts, passingCompletions, passingDropbacks, passingInterceptionPercentage, passingInterceptions, passingTouchdowns, passingYards, passingYardsPerAttempt, passingYardsPerCompletion, penalties, penaltyYardDifferential, penaltyYards, pointDifferential, pointSpread, puntAverage, puntNetAverage, puntNetYards, puntReturnAverage, puntReturnLong, puntReturnTouchdowns, puntReturnYardDifferential, puntReturnYards, puntReturns, puntYards, punts, puntsHadBlocked, quarterbackHits, quarterbackHitsDifferential, quarterbackHitsPercentage, quarterbackSacksDifferential, redZoneAttempts, redZoneConversions, redZonePercentage, returnYards, rushingAttempts, rushingTouchdowns, rushingYards, rushingYardsPerAttempt, sackYards, sacks, safeties, score, scoreOvertime, scoreQuarter1, scoreQuarter2, scoreQuarter3, scoreQuarter4, season, seasonType, soloTackles, tacklesForLoss, tacklesForLossDifferential, tacklesForLossPercentage, takeaways, team, teamID, teamName, teamSeasonID, teamStatID, temperature, thirdDownAttempts, thirdDownConversions, thirdDownPercentage, timeOfPossession, timesSacked, timesSackedPercentage, timesSackedYards, totalScore, touchdowns, turnoverDifferential, twoPointConversionReturns, windSpeed);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TeamSeason {\n");
    sb.append("    assistedTackles: ").append(toIndentedString(assistedTackles)).append("\n");
    sb.append("    blockedKickReturnTouchdowns: ").append(toIndentedString(blockedKickReturnTouchdowns)).append("\n");
    sb.append("    blockedKickReturnYards: ").append(toIndentedString(blockedKickReturnYards)).append("\n");
    sb.append("    blockedKicks: ").append(toIndentedString(blockedKicks)).append("\n");
    sb.append("    completionPercentage: ").append(toIndentedString(completionPercentage)).append("\n");
    sb.append("    extraPointKickingAttempts: ").append(toIndentedString(extraPointKickingAttempts)).append("\n");
    sb.append("    extraPointKickingConversions: ").append(toIndentedString(extraPointKickingConversions)).append("\n");
    sb.append("    extraPointPassingAttempts: ").append(toIndentedString(extraPointPassingAttempts)).append("\n");
    sb.append("    extraPointPassingConversions: ").append(toIndentedString(extraPointPassingConversions)).append("\n");
    sb.append("    extraPointPercentage: ").append(toIndentedString(extraPointPercentage)).append("\n");
    sb.append("    extraPointRushingAttempts: ").append(toIndentedString(extraPointRushingAttempts)).append("\n");
    sb.append("    extraPointRushingConversions: ").append(toIndentedString(extraPointRushingConversions)).append("\n");
    sb.append("    extraPointsHadBlocked: ").append(toIndentedString(extraPointsHadBlocked)).append("\n");
    sb.append("    fieldGoalAttempts: ").append(toIndentedString(fieldGoalAttempts)).append("\n");
    sb.append("    fieldGoalPercentage: ").append(toIndentedString(fieldGoalPercentage)).append("\n");
    sb.append("    fieldGoalReturnTouchdowns: ").append(toIndentedString(fieldGoalReturnTouchdowns)).append("\n");
    sb.append("    fieldGoalReturnYards: ").append(toIndentedString(fieldGoalReturnYards)).append("\n");
    sb.append("    fieldGoalsHadBlocked: ").append(toIndentedString(fieldGoalsHadBlocked)).append("\n");
    sb.append("    fieldGoalsMade: ").append(toIndentedString(fieldGoalsMade)).append("\n");
    sb.append("    firstDowns: ").append(toIndentedString(firstDowns)).append("\n");
    sb.append("    firstDownsByPassing: ").append(toIndentedString(firstDownsByPassing)).append("\n");
    sb.append("    firstDownsByPenalty: ").append(toIndentedString(firstDownsByPenalty)).append("\n");
    sb.append("    firstDownsByRushing: ").append(toIndentedString(firstDownsByRushing)).append("\n");
    sb.append("    fourthDownAttempts: ").append(toIndentedString(fourthDownAttempts)).append("\n");
    sb.append("    fourthDownConversions: ").append(toIndentedString(fourthDownConversions)).append("\n");
    sb.append("    fourthDownPercentage: ").append(toIndentedString(fourthDownPercentage)).append("\n");
    sb.append("    fumbleReturnTouchdowns: ").append(toIndentedString(fumbleReturnTouchdowns)).append("\n");
    sb.append("    fumbleReturnYards: ").append(toIndentedString(fumbleReturnYards)).append("\n");
    sb.append("    fumbles: ").append(toIndentedString(fumbles)).append("\n");
    sb.append("    fumblesForced: ").append(toIndentedString(fumblesForced)).append("\n");
    sb.append("    fumblesLost: ").append(toIndentedString(fumblesLost)).append("\n");
    sb.append("    fumblesRecovered: ").append(toIndentedString(fumblesRecovered)).append("\n");
    sb.append("    games: ").append(toIndentedString(games)).append("\n");
    sb.append("    giveaways: ").append(toIndentedString(giveaways)).append("\n");
    sb.append("    globalTeamID: ").append(toIndentedString(globalTeamID)).append("\n");
    sb.append("    goalToGoAttempts: ").append(toIndentedString(goalToGoAttempts)).append("\n");
    sb.append("    goalToGoConversions: ").append(toIndentedString(goalToGoConversions)).append("\n");
    sb.append("    goalToGoPercentage: ").append(toIndentedString(goalToGoPercentage)).append("\n");
    sb.append("    humidity: ").append(toIndentedString(humidity)).append("\n");
    sb.append("    interceptionReturnTouchdowns: ").append(toIndentedString(interceptionReturnTouchdowns)).append("\n");
    sb.append("    interceptionReturnYards: ").append(toIndentedString(interceptionReturnYards)).append("\n");
    sb.append("    interceptionReturns: ").append(toIndentedString(interceptionReturns)).append("\n");
    sb.append("    kickReturnAverage: ").append(toIndentedString(kickReturnAverage)).append("\n");
    sb.append("    kickReturnLong: ").append(toIndentedString(kickReturnLong)).append("\n");
    sb.append("    kickReturnTouchdowns: ").append(toIndentedString(kickReturnTouchdowns)).append("\n");
    sb.append("    kickReturnYardDifferential: ").append(toIndentedString(kickReturnYardDifferential)).append("\n");
    sb.append("    kickReturnYards: ").append(toIndentedString(kickReturnYards)).append("\n");
    sb.append("    kickReturns: ").append(toIndentedString(kickReturns)).append("\n");
    sb.append("    kickoffTouchbacks: ").append(toIndentedString(kickoffTouchbacks)).append("\n");
    sb.append("    kickoffs: ").append(toIndentedString(kickoffs)).append("\n");
    sb.append("    kickoffsInEndZone: ").append(toIndentedString(kickoffsInEndZone)).append("\n");
    sb.append("    offensivePlays: ").append(toIndentedString(offensivePlays)).append("\n");
    sb.append("    offensiveYards: ").append(toIndentedString(offensiveYards)).append("\n");
    sb.append("    offensiveYardsPerPlay: ").append(toIndentedString(offensiveYardsPerPlay)).append("\n");
    sb.append("    opponentAssistedTackles: ").append(toIndentedString(opponentAssistedTackles)).append("\n");
    sb.append("    opponentBlockedKickReturnTouchdowns: ").append(toIndentedString(opponentBlockedKickReturnTouchdowns)).append("\n");
    sb.append("    opponentBlockedKickReturnYards: ").append(toIndentedString(opponentBlockedKickReturnYards)).append("\n");
    sb.append("    opponentBlockedKicks: ").append(toIndentedString(opponentBlockedKicks)).append("\n");
    sb.append("    opponentCompletionPercentage: ").append(toIndentedString(opponentCompletionPercentage)).append("\n");
    sb.append("    opponentExtraPointKickingAttempts: ").append(toIndentedString(opponentExtraPointKickingAttempts)).append("\n");
    sb.append("    opponentExtraPointKickingConversions: ").append(toIndentedString(opponentExtraPointKickingConversions)).append("\n");
    sb.append("    opponentExtraPointPassingAttempts: ").append(toIndentedString(opponentExtraPointPassingAttempts)).append("\n");
    sb.append("    opponentExtraPointPassingConversions: ").append(toIndentedString(opponentExtraPointPassingConversions)).append("\n");
    sb.append("    opponentExtraPointPercentage: ").append(toIndentedString(opponentExtraPointPercentage)).append("\n");
    sb.append("    opponentExtraPointRushingAttempts: ").append(toIndentedString(opponentExtraPointRushingAttempts)).append("\n");
    sb.append("    opponentExtraPointRushingConversions: ").append(toIndentedString(opponentExtraPointRushingConversions)).append("\n");
    sb.append("    opponentExtraPointsHadBlocked: ").append(toIndentedString(opponentExtraPointsHadBlocked)).append("\n");
    sb.append("    opponentFieldGoalAttempts: ").append(toIndentedString(opponentFieldGoalAttempts)).append("\n");
    sb.append("    opponentFieldGoalPercentage: ").append(toIndentedString(opponentFieldGoalPercentage)).append("\n");
    sb.append("    opponentFieldGoalReturnTouchdowns: ").append(toIndentedString(opponentFieldGoalReturnTouchdowns)).append("\n");
    sb.append("    opponentFieldGoalReturnYards: ").append(toIndentedString(opponentFieldGoalReturnYards)).append("\n");
    sb.append("    opponentFieldGoalsHadBlocked: ").append(toIndentedString(opponentFieldGoalsHadBlocked)).append("\n");
    sb.append("    opponentFieldGoalsMade: ").append(toIndentedString(opponentFieldGoalsMade)).append("\n");
    sb.append("    opponentFirstDowns: ").append(toIndentedString(opponentFirstDowns)).append("\n");
    sb.append("    opponentFirstDownsByPassing: ").append(toIndentedString(opponentFirstDownsByPassing)).append("\n");
    sb.append("    opponentFirstDownsByPenalty: ").append(toIndentedString(opponentFirstDownsByPenalty)).append("\n");
    sb.append("    opponentFirstDownsByRushing: ").append(toIndentedString(opponentFirstDownsByRushing)).append("\n");
    sb.append("    opponentFourthDownAttempts: ").append(toIndentedString(opponentFourthDownAttempts)).append("\n");
    sb.append("    opponentFourthDownConversions: ").append(toIndentedString(opponentFourthDownConversions)).append("\n");
    sb.append("    opponentFourthDownPercentage: ").append(toIndentedString(opponentFourthDownPercentage)).append("\n");
    sb.append("    opponentFumbleReturnTouchdowns: ").append(toIndentedString(opponentFumbleReturnTouchdowns)).append("\n");
    sb.append("    opponentFumbleReturnYards: ").append(toIndentedString(opponentFumbleReturnYards)).append("\n");
    sb.append("    opponentFumbles: ").append(toIndentedString(opponentFumbles)).append("\n");
    sb.append("    opponentFumblesForced: ").append(toIndentedString(opponentFumblesForced)).append("\n");
    sb.append("    opponentFumblesLost: ").append(toIndentedString(opponentFumblesLost)).append("\n");
    sb.append("    opponentFumblesRecovered: ").append(toIndentedString(opponentFumblesRecovered)).append("\n");
    sb.append("    opponentGiveaways: ").append(toIndentedString(opponentGiveaways)).append("\n");
    sb.append("    opponentGoalToGoAttempts: ").append(toIndentedString(opponentGoalToGoAttempts)).append("\n");
    sb.append("    opponentGoalToGoConversions: ").append(toIndentedString(opponentGoalToGoConversions)).append("\n");
    sb.append("    opponentGoalToGoPercentage: ").append(toIndentedString(opponentGoalToGoPercentage)).append("\n");
    sb.append("    opponentInterceptionReturnTouchdowns: ").append(toIndentedString(opponentInterceptionReturnTouchdowns)).append("\n");
    sb.append("    opponentInterceptionReturnYards: ").append(toIndentedString(opponentInterceptionReturnYards)).append("\n");
    sb.append("    opponentInterceptionReturns: ").append(toIndentedString(opponentInterceptionReturns)).append("\n");
    sb.append("    opponentKickReturnAverage: ").append(toIndentedString(opponentKickReturnAverage)).append("\n");
    sb.append("    opponentKickReturnLong: ").append(toIndentedString(opponentKickReturnLong)).append("\n");
    sb.append("    opponentKickReturnTouchdowns: ").append(toIndentedString(opponentKickReturnTouchdowns)).append("\n");
    sb.append("    opponentKickReturnYards: ").append(toIndentedString(opponentKickReturnYards)).append("\n");
    sb.append("    opponentKickReturns: ").append(toIndentedString(opponentKickReturns)).append("\n");
    sb.append("    opponentKickoffTouchbacks: ").append(toIndentedString(opponentKickoffTouchbacks)).append("\n");
    sb.append("    opponentKickoffs: ").append(toIndentedString(opponentKickoffs)).append("\n");
    sb.append("    opponentKickoffsInEndZone: ").append(toIndentedString(opponentKickoffsInEndZone)).append("\n");
    sb.append("    opponentOffensivePlays: ").append(toIndentedString(opponentOffensivePlays)).append("\n");
    sb.append("    opponentOffensiveYards: ").append(toIndentedString(opponentOffensiveYards)).append("\n");
    sb.append("    opponentOffensiveYardsPerPlay: ").append(toIndentedString(opponentOffensiveYardsPerPlay)).append("\n");
    sb.append("    opponentPasserRating: ").append(toIndentedString(opponentPasserRating)).append("\n");
    sb.append("    opponentPassesDefended: ").append(toIndentedString(opponentPassesDefended)).append("\n");
    sb.append("    opponentPassingAttempts: ").append(toIndentedString(opponentPassingAttempts)).append("\n");
    sb.append("    opponentPassingCompletions: ").append(toIndentedString(opponentPassingCompletions)).append("\n");
    sb.append("    opponentPassingDropbacks: ").append(toIndentedString(opponentPassingDropbacks)).append("\n");
    sb.append("    opponentPassingInterceptionPercentage: ").append(toIndentedString(opponentPassingInterceptionPercentage)).append("\n");
    sb.append("    opponentPassingInterceptions: ").append(toIndentedString(opponentPassingInterceptions)).append("\n");
    sb.append("    opponentPassingTouchdowns: ").append(toIndentedString(opponentPassingTouchdowns)).append("\n");
    sb.append("    opponentPassingYards: ").append(toIndentedString(opponentPassingYards)).append("\n");
    sb.append("    opponentPassingYardsPerAttempt: ").append(toIndentedString(opponentPassingYardsPerAttempt)).append("\n");
    sb.append("    opponentPassingYardsPerCompletion: ").append(toIndentedString(opponentPassingYardsPerCompletion)).append("\n");
    sb.append("    opponentPenalties: ").append(toIndentedString(opponentPenalties)).append("\n");
    sb.append("    opponentPenaltyYards: ").append(toIndentedString(opponentPenaltyYards)).append("\n");
    sb.append("    opponentPuntAverage: ").append(toIndentedString(opponentPuntAverage)).append("\n");
    sb.append("    opponentPuntNetAverage: ").append(toIndentedString(opponentPuntNetAverage)).append("\n");
    sb.append("    opponentPuntNetYards: ").append(toIndentedString(opponentPuntNetYards)).append("\n");
    sb.append("    opponentPuntReturnAverage: ").append(toIndentedString(opponentPuntReturnAverage)).append("\n");
    sb.append("    opponentPuntReturnLong: ").append(toIndentedString(opponentPuntReturnLong)).append("\n");
    sb.append("    opponentPuntReturnTouchdowns: ").append(toIndentedString(opponentPuntReturnTouchdowns)).append("\n");
    sb.append("    opponentPuntReturnYards: ").append(toIndentedString(opponentPuntReturnYards)).append("\n");
    sb.append("    opponentPuntReturns: ").append(toIndentedString(opponentPuntReturns)).append("\n");
    sb.append("    opponentPuntYards: ").append(toIndentedString(opponentPuntYards)).append("\n");
    sb.append("    opponentPunts: ").append(toIndentedString(opponentPunts)).append("\n");
    sb.append("    opponentPuntsHadBlocked: ").append(toIndentedString(opponentPuntsHadBlocked)).append("\n");
    sb.append("    opponentQuarterbackHits: ").append(toIndentedString(opponentQuarterbackHits)).append("\n");
    sb.append("    opponentQuarterbackHitsDifferential: ").append(toIndentedString(opponentQuarterbackHitsDifferential)).append("\n");
    sb.append("    opponentQuarterbackHitsPercentage: ").append(toIndentedString(opponentQuarterbackHitsPercentage)).append("\n");
    sb.append("    opponentQuarterbackSacksDifferential: ").append(toIndentedString(opponentQuarterbackSacksDifferential)).append("\n");
    sb.append("    opponentRedZoneAttempts: ").append(toIndentedString(opponentRedZoneAttempts)).append("\n");
    sb.append("    opponentRedZoneConversions: ").append(toIndentedString(opponentRedZoneConversions)).append("\n");
    sb.append("    opponentRedZonePercentage: ").append(toIndentedString(opponentRedZonePercentage)).append("\n");
    sb.append("    opponentReturnYards: ").append(toIndentedString(opponentReturnYards)).append("\n");
    sb.append("    opponentRushingAttempts: ").append(toIndentedString(opponentRushingAttempts)).append("\n");
    sb.append("    opponentRushingTouchdowns: ").append(toIndentedString(opponentRushingTouchdowns)).append("\n");
    sb.append("    opponentRushingYards: ").append(toIndentedString(opponentRushingYards)).append("\n");
    sb.append("    opponentRushingYardsPerAttempt: ").append(toIndentedString(opponentRushingYardsPerAttempt)).append("\n");
    sb.append("    opponentSackYards: ").append(toIndentedString(opponentSackYards)).append("\n");
    sb.append("    opponentSacks: ").append(toIndentedString(opponentSacks)).append("\n");
    sb.append("    opponentSafeties: ").append(toIndentedString(opponentSafeties)).append("\n");
    sb.append("    opponentScore: ").append(toIndentedString(opponentScore)).append("\n");
    sb.append("    opponentScoreOvertime: ").append(toIndentedString(opponentScoreOvertime)).append("\n");
    sb.append("    opponentScoreQuarter1: ").append(toIndentedString(opponentScoreQuarter1)).append("\n");
    sb.append("    opponentScoreQuarter2: ").append(toIndentedString(opponentScoreQuarter2)).append("\n");
    sb.append("    opponentScoreQuarter3: ").append(toIndentedString(opponentScoreQuarter3)).append("\n");
    sb.append("    opponentScoreQuarter4: ").append(toIndentedString(opponentScoreQuarter4)).append("\n");
    sb.append("    opponentSoloTackles: ").append(toIndentedString(opponentSoloTackles)).append("\n");
    sb.append("    opponentTacklesForLoss: ").append(toIndentedString(opponentTacklesForLoss)).append("\n");
    sb.append("    opponentTacklesForLossDifferential: ").append(toIndentedString(opponentTacklesForLossDifferential)).append("\n");
    sb.append("    opponentTacklesForLossPercentage: ").append(toIndentedString(opponentTacklesForLossPercentage)).append("\n");
    sb.append("    opponentTakeaways: ").append(toIndentedString(opponentTakeaways)).append("\n");
    sb.append("    opponentThirdDownAttempts: ").append(toIndentedString(opponentThirdDownAttempts)).append("\n");
    sb.append("    opponentThirdDownConversions: ").append(toIndentedString(opponentThirdDownConversions)).append("\n");
    sb.append("    opponentThirdDownPercentage: ").append(toIndentedString(opponentThirdDownPercentage)).append("\n");
    sb.append("    opponentTimeOfPossession: ").append(toIndentedString(opponentTimeOfPossession)).append("\n");
    sb.append("    opponentTimesSacked: ").append(toIndentedString(opponentTimesSacked)).append("\n");
    sb.append("    opponentTimesSackedPercentage: ").append(toIndentedString(opponentTimesSackedPercentage)).append("\n");
    sb.append("    opponentTimesSackedYards: ").append(toIndentedString(opponentTimesSackedYards)).append("\n");
    sb.append("    opponentTouchdowns: ").append(toIndentedString(opponentTouchdowns)).append("\n");
    sb.append("    opponentTurnoverDifferential: ").append(toIndentedString(opponentTurnoverDifferential)).append("\n");
    sb.append("    opponentTwoPointConversionReturns: ").append(toIndentedString(opponentTwoPointConversionReturns)).append("\n");
    sb.append("    overUnder: ").append(toIndentedString(overUnder)).append("\n");
    sb.append("    passerRating: ").append(toIndentedString(passerRating)).append("\n");
    sb.append("    passesDefended: ").append(toIndentedString(passesDefended)).append("\n");
    sb.append("    passingAttempts: ").append(toIndentedString(passingAttempts)).append("\n");
    sb.append("    passingCompletions: ").append(toIndentedString(passingCompletions)).append("\n");
    sb.append("    passingDropbacks: ").append(toIndentedString(passingDropbacks)).append("\n");
    sb.append("    passingInterceptionPercentage: ").append(toIndentedString(passingInterceptionPercentage)).append("\n");
    sb.append("    passingInterceptions: ").append(toIndentedString(passingInterceptions)).append("\n");
    sb.append("    passingTouchdowns: ").append(toIndentedString(passingTouchdowns)).append("\n");
    sb.append("    passingYards: ").append(toIndentedString(passingYards)).append("\n");
    sb.append("    passingYardsPerAttempt: ").append(toIndentedString(passingYardsPerAttempt)).append("\n");
    sb.append("    passingYardsPerCompletion: ").append(toIndentedString(passingYardsPerCompletion)).append("\n");
    sb.append("    penalties: ").append(toIndentedString(penalties)).append("\n");
    sb.append("    penaltyYardDifferential: ").append(toIndentedString(penaltyYardDifferential)).append("\n");
    sb.append("    penaltyYards: ").append(toIndentedString(penaltyYards)).append("\n");
    sb.append("    pointDifferential: ").append(toIndentedString(pointDifferential)).append("\n");
    sb.append("    pointSpread: ").append(toIndentedString(pointSpread)).append("\n");
    sb.append("    puntAverage: ").append(toIndentedString(puntAverage)).append("\n");
    sb.append("    puntNetAverage: ").append(toIndentedString(puntNetAverage)).append("\n");
    sb.append("    puntNetYards: ").append(toIndentedString(puntNetYards)).append("\n");
    sb.append("    puntReturnAverage: ").append(toIndentedString(puntReturnAverage)).append("\n");
    sb.append("    puntReturnLong: ").append(toIndentedString(puntReturnLong)).append("\n");
    sb.append("    puntReturnTouchdowns: ").append(toIndentedString(puntReturnTouchdowns)).append("\n");
    sb.append("    puntReturnYardDifferential: ").append(toIndentedString(puntReturnYardDifferential)).append("\n");
    sb.append("    puntReturnYards: ").append(toIndentedString(puntReturnYards)).append("\n");
    sb.append("    puntReturns: ").append(toIndentedString(puntReturns)).append("\n");
    sb.append("    puntYards: ").append(toIndentedString(puntYards)).append("\n");
    sb.append("    punts: ").append(toIndentedString(punts)).append("\n");
    sb.append("    puntsHadBlocked: ").append(toIndentedString(puntsHadBlocked)).append("\n");
    sb.append("    quarterbackHits: ").append(toIndentedString(quarterbackHits)).append("\n");
    sb.append("    quarterbackHitsDifferential: ").append(toIndentedString(quarterbackHitsDifferential)).append("\n");
    sb.append("    quarterbackHitsPercentage: ").append(toIndentedString(quarterbackHitsPercentage)).append("\n");
    sb.append("    quarterbackSacksDifferential: ").append(toIndentedString(quarterbackSacksDifferential)).append("\n");
    sb.append("    redZoneAttempts: ").append(toIndentedString(redZoneAttempts)).append("\n");
    sb.append("    redZoneConversions: ").append(toIndentedString(redZoneConversions)).append("\n");
    sb.append("    redZonePercentage: ").append(toIndentedString(redZonePercentage)).append("\n");
    sb.append("    returnYards: ").append(toIndentedString(returnYards)).append("\n");
    sb.append("    rushingAttempts: ").append(toIndentedString(rushingAttempts)).append("\n");
    sb.append("    rushingTouchdowns: ").append(toIndentedString(rushingTouchdowns)).append("\n");
    sb.append("    rushingYards: ").append(toIndentedString(rushingYards)).append("\n");
    sb.append("    rushingYardsPerAttempt: ").append(toIndentedString(rushingYardsPerAttempt)).append("\n");
    sb.append("    sackYards: ").append(toIndentedString(sackYards)).append("\n");
    sb.append("    sacks: ").append(toIndentedString(sacks)).append("\n");
    sb.append("    safeties: ").append(toIndentedString(safeties)).append("\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("    scoreOvertime: ").append(toIndentedString(scoreOvertime)).append("\n");
    sb.append("    scoreQuarter1: ").append(toIndentedString(scoreQuarter1)).append("\n");
    sb.append("    scoreQuarter2: ").append(toIndentedString(scoreQuarter2)).append("\n");
    sb.append("    scoreQuarter3: ").append(toIndentedString(scoreQuarter3)).append("\n");
    sb.append("    scoreQuarter4: ").append(toIndentedString(scoreQuarter4)).append("\n");
    sb.append("    season: ").append(toIndentedString(season)).append("\n");
    sb.append("    seasonType: ").append(toIndentedString(seasonType)).append("\n");
    sb.append("    soloTackles: ").append(toIndentedString(soloTackles)).append("\n");
    sb.append("    tacklesForLoss: ").append(toIndentedString(tacklesForLoss)).append("\n");
    sb.append("    tacklesForLossDifferential: ").append(toIndentedString(tacklesForLossDifferential)).append("\n");
    sb.append("    tacklesForLossPercentage: ").append(toIndentedString(tacklesForLossPercentage)).append("\n");
    sb.append("    takeaways: ").append(toIndentedString(takeaways)).append("\n");
    sb.append("    team: ").append(toIndentedString(team)).append("\n");
    sb.append("    teamID: ").append(toIndentedString(teamID)).append("\n");
    sb.append("    teamName: ").append(toIndentedString(teamName)).append("\n");
    sb.append("    teamSeasonID: ").append(toIndentedString(teamSeasonID)).append("\n");
    sb.append("    teamStatID: ").append(toIndentedString(teamStatID)).append("\n");
    sb.append("    temperature: ").append(toIndentedString(temperature)).append("\n");
    sb.append("    thirdDownAttempts: ").append(toIndentedString(thirdDownAttempts)).append("\n");
    sb.append("    thirdDownConversions: ").append(toIndentedString(thirdDownConversions)).append("\n");
    sb.append("    thirdDownPercentage: ").append(toIndentedString(thirdDownPercentage)).append("\n");
    sb.append("    timeOfPossession: ").append(toIndentedString(timeOfPossession)).append("\n");
    sb.append("    timesSacked: ").append(toIndentedString(timesSacked)).append("\n");
    sb.append("    timesSackedPercentage: ").append(toIndentedString(timesSackedPercentage)).append("\n");
    sb.append("    timesSackedYards: ").append(toIndentedString(timesSackedYards)).append("\n");
    sb.append("    totalScore: ").append(toIndentedString(totalScore)).append("\n");
    sb.append("    touchdowns: ").append(toIndentedString(touchdowns)).append("\n");
    sb.append("    turnoverDifferential: ").append(toIndentedString(turnoverDifferential)).append("\n");
    sb.append("    twoPointConversionReturns: ").append(toIndentedString(twoPointConversionReturns)).append("\n");
    sb.append("    windSpeed: ").append(toIndentedString(windSpeed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AssistedTackles");
    openapiFields.add("BlockedKickReturnTouchdowns");
    openapiFields.add("BlockedKickReturnYards");
    openapiFields.add("BlockedKicks");
    openapiFields.add("CompletionPercentage");
    openapiFields.add("ExtraPointKickingAttempts");
    openapiFields.add("ExtraPointKickingConversions");
    openapiFields.add("ExtraPointPassingAttempts");
    openapiFields.add("ExtraPointPassingConversions");
    openapiFields.add("ExtraPointPercentage");
    openapiFields.add("ExtraPointRushingAttempts");
    openapiFields.add("ExtraPointRushingConversions");
    openapiFields.add("ExtraPointsHadBlocked");
    openapiFields.add("FieldGoalAttempts");
    openapiFields.add("FieldGoalPercentage");
    openapiFields.add("FieldGoalReturnTouchdowns");
    openapiFields.add("FieldGoalReturnYards");
    openapiFields.add("FieldGoalsHadBlocked");
    openapiFields.add("FieldGoalsMade");
    openapiFields.add("FirstDowns");
    openapiFields.add("FirstDownsByPassing");
    openapiFields.add("FirstDownsByPenalty");
    openapiFields.add("FirstDownsByRushing");
    openapiFields.add("FourthDownAttempts");
    openapiFields.add("FourthDownConversions");
    openapiFields.add("FourthDownPercentage");
    openapiFields.add("FumbleReturnTouchdowns");
    openapiFields.add("FumbleReturnYards");
    openapiFields.add("Fumbles");
    openapiFields.add("FumblesForced");
    openapiFields.add("FumblesLost");
    openapiFields.add("FumblesRecovered");
    openapiFields.add("Games");
    openapiFields.add("Giveaways");
    openapiFields.add("GlobalTeamID");
    openapiFields.add("GoalToGoAttempts");
    openapiFields.add("GoalToGoConversions");
    openapiFields.add("GoalToGoPercentage");
    openapiFields.add("Humidity");
    openapiFields.add("InterceptionReturnTouchdowns");
    openapiFields.add("InterceptionReturnYards");
    openapiFields.add("InterceptionReturns");
    openapiFields.add("KickReturnAverage");
    openapiFields.add("KickReturnLong");
    openapiFields.add("KickReturnTouchdowns");
    openapiFields.add("KickReturnYardDifferential");
    openapiFields.add("KickReturnYards");
    openapiFields.add("KickReturns");
    openapiFields.add("KickoffTouchbacks");
    openapiFields.add("Kickoffs");
    openapiFields.add("KickoffsInEndZone");
    openapiFields.add("OffensivePlays");
    openapiFields.add("OffensiveYards");
    openapiFields.add("OffensiveYardsPerPlay");
    openapiFields.add("OpponentAssistedTackles");
    openapiFields.add("OpponentBlockedKickReturnTouchdowns");
    openapiFields.add("OpponentBlockedKickReturnYards");
    openapiFields.add("OpponentBlockedKicks");
    openapiFields.add("OpponentCompletionPercentage");
    openapiFields.add("OpponentExtraPointKickingAttempts");
    openapiFields.add("OpponentExtraPointKickingConversions");
    openapiFields.add("OpponentExtraPointPassingAttempts");
    openapiFields.add("OpponentExtraPointPassingConversions");
    openapiFields.add("OpponentExtraPointPercentage");
    openapiFields.add("OpponentExtraPointRushingAttempts");
    openapiFields.add("OpponentExtraPointRushingConversions");
    openapiFields.add("OpponentExtraPointsHadBlocked");
    openapiFields.add("OpponentFieldGoalAttempts");
    openapiFields.add("OpponentFieldGoalPercentage");
    openapiFields.add("OpponentFieldGoalReturnTouchdowns");
    openapiFields.add("OpponentFieldGoalReturnYards");
    openapiFields.add("OpponentFieldGoalsHadBlocked");
    openapiFields.add("OpponentFieldGoalsMade");
    openapiFields.add("OpponentFirstDowns");
    openapiFields.add("OpponentFirstDownsByPassing");
    openapiFields.add("OpponentFirstDownsByPenalty");
    openapiFields.add("OpponentFirstDownsByRushing");
    openapiFields.add("OpponentFourthDownAttempts");
    openapiFields.add("OpponentFourthDownConversions");
    openapiFields.add("OpponentFourthDownPercentage");
    openapiFields.add("OpponentFumbleReturnTouchdowns");
    openapiFields.add("OpponentFumbleReturnYards");
    openapiFields.add("OpponentFumbles");
    openapiFields.add("OpponentFumblesForced");
    openapiFields.add("OpponentFumblesLost");
    openapiFields.add("OpponentFumblesRecovered");
    openapiFields.add("OpponentGiveaways");
    openapiFields.add("OpponentGoalToGoAttempts");
    openapiFields.add("OpponentGoalToGoConversions");
    openapiFields.add("OpponentGoalToGoPercentage");
    openapiFields.add("OpponentInterceptionReturnTouchdowns");
    openapiFields.add("OpponentInterceptionReturnYards");
    openapiFields.add("OpponentInterceptionReturns");
    openapiFields.add("OpponentKickReturnAverage");
    openapiFields.add("OpponentKickReturnLong");
    openapiFields.add("OpponentKickReturnTouchdowns");
    openapiFields.add("OpponentKickReturnYards");
    openapiFields.add("OpponentKickReturns");
    openapiFields.add("OpponentKickoffTouchbacks");
    openapiFields.add("OpponentKickoffs");
    openapiFields.add("OpponentKickoffsInEndZone");
    openapiFields.add("OpponentOffensivePlays");
    openapiFields.add("OpponentOffensiveYards");
    openapiFields.add("OpponentOffensiveYardsPerPlay");
    openapiFields.add("OpponentPasserRating");
    openapiFields.add("OpponentPassesDefended");
    openapiFields.add("OpponentPassingAttempts");
    openapiFields.add("OpponentPassingCompletions");
    openapiFields.add("OpponentPassingDropbacks");
    openapiFields.add("OpponentPassingInterceptionPercentage");
    openapiFields.add("OpponentPassingInterceptions");
    openapiFields.add("OpponentPassingTouchdowns");
    openapiFields.add("OpponentPassingYards");
    openapiFields.add("OpponentPassingYardsPerAttempt");
    openapiFields.add("OpponentPassingYardsPerCompletion");
    openapiFields.add("OpponentPenalties");
    openapiFields.add("OpponentPenaltyYards");
    openapiFields.add("OpponentPuntAverage");
    openapiFields.add("OpponentPuntNetAverage");
    openapiFields.add("OpponentPuntNetYards");
    openapiFields.add("OpponentPuntReturnAverage");
    openapiFields.add("OpponentPuntReturnLong");
    openapiFields.add("OpponentPuntReturnTouchdowns");
    openapiFields.add("OpponentPuntReturnYards");
    openapiFields.add("OpponentPuntReturns");
    openapiFields.add("OpponentPuntYards");
    openapiFields.add("OpponentPunts");
    openapiFields.add("OpponentPuntsHadBlocked");
    openapiFields.add("OpponentQuarterbackHits");
    openapiFields.add("OpponentQuarterbackHitsDifferential");
    openapiFields.add("OpponentQuarterbackHitsPercentage");
    openapiFields.add("OpponentQuarterbackSacksDifferential");
    openapiFields.add("OpponentRedZoneAttempts");
    openapiFields.add("OpponentRedZoneConversions");
    openapiFields.add("OpponentRedZonePercentage");
    openapiFields.add("OpponentReturnYards");
    openapiFields.add("OpponentRushingAttempts");
    openapiFields.add("OpponentRushingTouchdowns");
    openapiFields.add("OpponentRushingYards");
    openapiFields.add("OpponentRushingYardsPerAttempt");
    openapiFields.add("OpponentSackYards");
    openapiFields.add("OpponentSacks");
    openapiFields.add("OpponentSafeties");
    openapiFields.add("OpponentScore");
    openapiFields.add("OpponentScoreOvertime");
    openapiFields.add("OpponentScoreQuarter1");
    openapiFields.add("OpponentScoreQuarter2");
    openapiFields.add("OpponentScoreQuarter3");
    openapiFields.add("OpponentScoreQuarter4");
    openapiFields.add("OpponentSoloTackles");
    openapiFields.add("OpponentTacklesForLoss");
    openapiFields.add("OpponentTacklesForLossDifferential");
    openapiFields.add("OpponentTacklesForLossPercentage");
    openapiFields.add("OpponentTakeaways");
    openapiFields.add("OpponentThirdDownAttempts");
    openapiFields.add("OpponentThirdDownConversions");
    openapiFields.add("OpponentThirdDownPercentage");
    openapiFields.add("OpponentTimeOfPossession");
    openapiFields.add("OpponentTimesSacked");
    openapiFields.add("OpponentTimesSackedPercentage");
    openapiFields.add("OpponentTimesSackedYards");
    openapiFields.add("OpponentTouchdowns");
    openapiFields.add("OpponentTurnoverDifferential");
    openapiFields.add("OpponentTwoPointConversionReturns");
    openapiFields.add("OverUnder");
    openapiFields.add("PasserRating");
    openapiFields.add("PassesDefended");
    openapiFields.add("PassingAttempts");
    openapiFields.add("PassingCompletions");
    openapiFields.add("PassingDropbacks");
    openapiFields.add("PassingInterceptionPercentage");
    openapiFields.add("PassingInterceptions");
    openapiFields.add("PassingTouchdowns");
    openapiFields.add("PassingYards");
    openapiFields.add("PassingYardsPerAttempt");
    openapiFields.add("PassingYardsPerCompletion");
    openapiFields.add("Penalties");
    openapiFields.add("PenaltyYardDifferential");
    openapiFields.add("PenaltyYards");
    openapiFields.add("PointDifferential");
    openapiFields.add("PointSpread");
    openapiFields.add("PuntAverage");
    openapiFields.add("PuntNetAverage");
    openapiFields.add("PuntNetYards");
    openapiFields.add("PuntReturnAverage");
    openapiFields.add("PuntReturnLong");
    openapiFields.add("PuntReturnTouchdowns");
    openapiFields.add("PuntReturnYardDifferential");
    openapiFields.add("PuntReturnYards");
    openapiFields.add("PuntReturns");
    openapiFields.add("PuntYards");
    openapiFields.add("Punts");
    openapiFields.add("PuntsHadBlocked");
    openapiFields.add("QuarterbackHits");
    openapiFields.add("QuarterbackHitsDifferential");
    openapiFields.add("QuarterbackHitsPercentage");
    openapiFields.add("QuarterbackSacksDifferential");
    openapiFields.add("RedZoneAttempts");
    openapiFields.add("RedZoneConversions");
    openapiFields.add("RedZonePercentage");
    openapiFields.add("ReturnYards");
    openapiFields.add("RushingAttempts");
    openapiFields.add("RushingTouchdowns");
    openapiFields.add("RushingYards");
    openapiFields.add("RushingYardsPerAttempt");
    openapiFields.add("SackYards");
    openapiFields.add("Sacks");
    openapiFields.add("Safeties");
    openapiFields.add("Score");
    openapiFields.add("ScoreOvertime");
    openapiFields.add("ScoreQuarter1");
    openapiFields.add("ScoreQuarter2");
    openapiFields.add("ScoreQuarter3");
    openapiFields.add("ScoreQuarter4");
    openapiFields.add("Season");
    openapiFields.add("SeasonType");
    openapiFields.add("SoloTackles");
    openapiFields.add("TacklesForLoss");
    openapiFields.add("TacklesForLossDifferential");
    openapiFields.add("TacklesForLossPercentage");
    openapiFields.add("Takeaways");
    openapiFields.add("Team");
    openapiFields.add("TeamID");
    openapiFields.add("TeamName");
    openapiFields.add("TeamSeasonID");
    openapiFields.add("TeamStatID");
    openapiFields.add("Temperature");
    openapiFields.add("ThirdDownAttempts");
    openapiFields.add("ThirdDownConversions");
    openapiFields.add("ThirdDownPercentage");
    openapiFields.add("TimeOfPossession");
    openapiFields.add("TimesSacked");
    openapiFields.add("TimesSackedPercentage");
    openapiFields.add("TimesSackedYards");
    openapiFields.add("TotalScore");
    openapiFields.add("Touchdowns");
    openapiFields.add("TurnoverDifferential");
    openapiFields.add("TwoPointConversionReturns");
    openapiFields.add("WindSpeed");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TeamSeason
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TeamSeason.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TeamSeason is not found in the empty JSON string", TeamSeason.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TeamSeason.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TeamSeason` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("OpponentTimeOfPossession") != null && !jsonObj.get("OpponentTimeOfPossession").isJsonNull()) && !jsonObj.get("OpponentTimeOfPossession").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `OpponentTimeOfPossession` to be a primitive type in the JSON string but got `%s`", jsonObj.get("OpponentTimeOfPossession").toString()));
      }
      if ((jsonObj.get("Team") != null && !jsonObj.get("Team").isJsonNull()) && !jsonObj.get("Team").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Team` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Team").toString()));
      }
      if ((jsonObj.get("TeamName") != null && !jsonObj.get("TeamName").isJsonNull()) && !jsonObj.get("TeamName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `TeamName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("TeamName").toString()));
      }
      if ((jsonObj.get("TimeOfPossession") != null && !jsonObj.get("TimeOfPossession").isJsonNull()) && !jsonObj.get("TimeOfPossession").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `TimeOfPossession` to be a primitive type in the JSON string but got `%s`", jsonObj.get("TimeOfPossession").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TeamSeason.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TeamSeason' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TeamSeason> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TeamSeason.class));

       return (TypeAdapter<T>) new TypeAdapter<TeamSeason>() {
           @Override
           public void write(JsonWriter out, TeamSeason value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TeamSeason read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TeamSeason given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TeamSeason
   * @throws IOException if the JSON string is invalid with respect to TeamSeason
   */
  public static TeamSeason fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TeamSeason.class);
  }

  /**
   * Convert an instance of TeamSeason to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

