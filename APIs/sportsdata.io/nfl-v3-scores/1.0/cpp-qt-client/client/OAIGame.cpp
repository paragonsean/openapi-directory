/**
 * NFL v3 Scores
 * NFL schedules, scores, odds, weather, and news API.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGame.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGame::OAIGame(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGame::OAIGame() {
    this->initializeModel();
}

OAIGame::~OAIGame() {}

void OAIGame::initializeModel() {

    m_away_assisted_tackles_isSet = false;
    m_away_assisted_tackles_isValid = false;

    m_away_blocked_kick_return_touchdowns_isSet = false;
    m_away_blocked_kick_return_touchdowns_isValid = false;

    m_away_blocked_kick_return_yards_isSet = false;
    m_away_blocked_kick_return_yards_isValid = false;

    m_away_blocked_kicks_isSet = false;
    m_away_blocked_kicks_isValid = false;

    m_away_completion_percentage_isSet = false;
    m_away_completion_percentage_isValid = false;

    m_away_extra_point_kicking_attempts_isSet = false;
    m_away_extra_point_kicking_attempts_isValid = false;

    m_away_extra_point_kicking_conversions_isSet = false;
    m_away_extra_point_kicking_conversions_isValid = false;

    m_away_extra_point_passing_attempts_isSet = false;
    m_away_extra_point_passing_attempts_isValid = false;

    m_away_extra_point_passing_conversions_isSet = false;
    m_away_extra_point_passing_conversions_isValid = false;

    m_away_extra_point_rushing_attempts_isSet = false;
    m_away_extra_point_rushing_attempts_isValid = false;

    m_away_extra_point_rushing_conversions_isSet = false;
    m_away_extra_point_rushing_conversions_isValid = false;

    m_away_extra_points_had_blocked_isSet = false;
    m_away_extra_points_had_blocked_isValid = false;

    m_away_field_goal_attempts_isSet = false;
    m_away_field_goal_attempts_isValid = false;

    m_away_field_goal_return_touchdowns_isSet = false;
    m_away_field_goal_return_touchdowns_isValid = false;

    m_away_field_goal_return_yards_isSet = false;
    m_away_field_goal_return_yards_isValid = false;

    m_away_field_goals_had_blocked_isSet = false;
    m_away_field_goals_had_blocked_isValid = false;

    m_away_field_goals_made_isSet = false;
    m_away_field_goals_made_isValid = false;

    m_away_first_downs_isSet = false;
    m_away_first_downs_isValid = false;

    m_away_first_downs_by_passing_isSet = false;
    m_away_first_downs_by_passing_isValid = false;

    m_away_first_downs_by_penalty_isSet = false;
    m_away_first_downs_by_penalty_isValid = false;

    m_away_first_downs_by_rushing_isSet = false;
    m_away_first_downs_by_rushing_isValid = false;

    m_away_fourth_down_attempts_isSet = false;
    m_away_fourth_down_attempts_isValid = false;

    m_away_fourth_down_conversions_isSet = false;
    m_away_fourth_down_conversions_isValid = false;

    m_away_fourth_down_percentage_isSet = false;
    m_away_fourth_down_percentage_isValid = false;

    m_away_fumble_return_touchdowns_isSet = false;
    m_away_fumble_return_touchdowns_isValid = false;

    m_away_fumble_return_yards_isSet = false;
    m_away_fumble_return_yards_isValid = false;

    m_away_fumbles_isSet = false;
    m_away_fumbles_isValid = false;

    m_away_fumbles_forced_isSet = false;
    m_away_fumbles_forced_isValid = false;

    m_away_fumbles_lost_isSet = false;
    m_away_fumbles_lost_isValid = false;

    m_away_fumbles_recovered_isSet = false;
    m_away_fumbles_recovered_isValid = false;

    m_away_giveaways_isSet = false;
    m_away_giveaways_isValid = false;

    m_away_goal_to_go_attempts_isSet = false;
    m_away_goal_to_go_attempts_isValid = false;

    m_away_goal_to_go_conversions_isSet = false;
    m_away_goal_to_go_conversions_isValid = false;

    m_away_interception_return_touchdowns_isSet = false;
    m_away_interception_return_touchdowns_isValid = false;

    m_away_interception_return_yards_isSet = false;
    m_away_interception_return_yards_isValid = false;

    m_away_interception_returns_isSet = false;
    m_away_interception_returns_isValid = false;

    m_away_kick_return_long_isSet = false;
    m_away_kick_return_long_isValid = false;

    m_away_kick_return_touchdowns_isSet = false;
    m_away_kick_return_touchdowns_isValid = false;

    m_away_kick_return_yards_isSet = false;
    m_away_kick_return_yards_isValid = false;

    m_away_kick_returns_isSet = false;
    m_away_kick_returns_isValid = false;

    m_away_kickoff_touchbacks_isSet = false;
    m_away_kickoff_touchbacks_isValid = false;

    m_away_kickoffs_isSet = false;
    m_away_kickoffs_isValid = false;

    m_away_kickoffs_in_end_zone_isSet = false;
    m_away_kickoffs_in_end_zone_isValid = false;

    m_away_offensive_plays_isSet = false;
    m_away_offensive_plays_isValid = false;

    m_away_offensive_yards_isSet = false;
    m_away_offensive_yards_isValid = false;

    m_away_offensive_yards_per_play_isSet = false;
    m_away_offensive_yards_per_play_isValid = false;

    m_away_passer_rating_isSet = false;
    m_away_passer_rating_isValid = false;

    m_away_passes_defended_isSet = false;
    m_away_passes_defended_isValid = false;

    m_away_passing_attempts_isSet = false;
    m_away_passing_attempts_isValid = false;

    m_away_passing_completions_isSet = false;
    m_away_passing_completions_isValid = false;

    m_away_passing_interceptions_isSet = false;
    m_away_passing_interceptions_isValid = false;

    m_away_passing_touchdowns_isSet = false;
    m_away_passing_touchdowns_isValid = false;

    m_away_passing_yards_isSet = false;
    m_away_passing_yards_isValid = false;

    m_away_passing_yards_per_attempt_isSet = false;
    m_away_passing_yards_per_attempt_isValid = false;

    m_away_passing_yards_per_completion_isSet = false;
    m_away_passing_yards_per_completion_isValid = false;

    m_away_penalties_isSet = false;
    m_away_penalties_isValid = false;

    m_away_penalty_yards_isSet = false;
    m_away_penalty_yards_isValid = false;

    m_away_punt_average_isSet = false;
    m_away_punt_average_isValid = false;

    m_away_punt_net_average_isSet = false;
    m_away_punt_net_average_isValid = false;

    m_away_punt_net_yards_isSet = false;
    m_away_punt_net_yards_isValid = false;

    m_away_punt_return_long_isSet = false;
    m_away_punt_return_long_isValid = false;

    m_away_punt_return_touchdowns_isSet = false;
    m_away_punt_return_touchdowns_isValid = false;

    m_away_punt_return_yards_isSet = false;
    m_away_punt_return_yards_isValid = false;

    m_away_punt_returns_isSet = false;
    m_away_punt_returns_isValid = false;

    m_away_punt_yards_isSet = false;
    m_away_punt_yards_isValid = false;

    m_away_punts_isSet = false;
    m_away_punts_isValid = false;

    m_away_punts_had_blocked_isSet = false;
    m_away_punts_had_blocked_isValid = false;

    m_away_quarterback_hits_isSet = false;
    m_away_quarterback_hits_isValid = false;

    m_away_red_zone_attempts_isSet = false;
    m_away_red_zone_attempts_isValid = false;

    m_away_red_zone_conversions_isSet = false;
    m_away_red_zone_conversions_isValid = false;

    m_away_return_yards_isSet = false;
    m_away_return_yards_isValid = false;

    m_away_rushing_attempts_isSet = false;
    m_away_rushing_attempts_isValid = false;

    m_away_rushing_touchdowns_isSet = false;
    m_away_rushing_touchdowns_isValid = false;

    m_away_rushing_yards_isSet = false;
    m_away_rushing_yards_isValid = false;

    m_away_rushing_yards_per_attempt_isSet = false;
    m_away_rushing_yards_per_attempt_isValid = false;

    m_away_sack_yards_isSet = false;
    m_away_sack_yards_isValid = false;

    m_away_sacks_isSet = false;
    m_away_sacks_isValid = false;

    m_away_safeties_isSet = false;
    m_away_safeties_isValid = false;

    m_away_score_isSet = false;
    m_away_score_isValid = false;

    m_away_score_overtime_isSet = false;
    m_away_score_overtime_isValid = false;

    m_away_score_quarter1_isSet = false;
    m_away_score_quarter1_isValid = false;

    m_away_score_quarter2_isSet = false;
    m_away_score_quarter2_isValid = false;

    m_away_score_quarter3_isSet = false;
    m_away_score_quarter3_isValid = false;

    m_away_score_quarter4_isSet = false;
    m_away_score_quarter4_isValid = false;

    m_away_solo_tackles_isSet = false;
    m_away_solo_tackles_isValid = false;

    m_away_tackles_for_loss_isSet = false;
    m_away_tackles_for_loss_isValid = false;

    m_away_takeaways_isSet = false;
    m_away_takeaways_isValid = false;

    m_away_team_isSet = false;
    m_away_team_isValid = false;

    m_away_third_down_attempts_isSet = false;
    m_away_third_down_attempts_isValid = false;

    m_away_third_down_conversions_isSet = false;
    m_away_third_down_conversions_isValid = false;

    m_away_third_down_percentage_isSet = false;
    m_away_third_down_percentage_isValid = false;

    m_away_time_of_possession_isSet = false;
    m_away_time_of_possession_isValid = false;

    m_away_times_sacked_isSet = false;
    m_away_times_sacked_isValid = false;

    m_away_times_sacked_yards_isSet = false;
    m_away_times_sacked_yards_isValid = false;

    m_away_touchdowns_isSet = false;
    m_away_touchdowns_isValid = false;

    m_away_turnover_differential_isSet = false;
    m_away_turnover_differential_isValid = false;

    m_away_two_point_conversion_returns_isSet = false;
    m_away_two_point_conversion_returns_isValid = false;

    m_date_isSet = false;
    m_date_isValid = false;

    m_game_id_isSet = false;
    m_game_id_isValid = false;

    m_game_key_isSet = false;
    m_game_key_isValid = false;

    m_home_assisted_tackles_isSet = false;
    m_home_assisted_tackles_isValid = false;

    m_home_blocked_kick_return_touchdowns_isSet = false;
    m_home_blocked_kick_return_touchdowns_isValid = false;

    m_home_blocked_kick_return_yards_isSet = false;
    m_home_blocked_kick_return_yards_isValid = false;

    m_home_blocked_kicks_isSet = false;
    m_home_blocked_kicks_isValid = false;

    m_home_completion_percentage_isSet = false;
    m_home_completion_percentage_isValid = false;

    m_home_extra_point_kicking_attempts_isSet = false;
    m_home_extra_point_kicking_attempts_isValid = false;

    m_home_extra_point_kicking_conversions_isSet = false;
    m_home_extra_point_kicking_conversions_isValid = false;

    m_home_extra_point_passing_attempts_isSet = false;
    m_home_extra_point_passing_attempts_isValid = false;

    m_home_extra_point_passing_conversions_isSet = false;
    m_home_extra_point_passing_conversions_isValid = false;

    m_home_extra_point_rushing_attempts_isSet = false;
    m_home_extra_point_rushing_attempts_isValid = false;

    m_home_extra_point_rushing_conversions_isSet = false;
    m_home_extra_point_rushing_conversions_isValid = false;

    m_home_extra_points_had_blocked_isSet = false;
    m_home_extra_points_had_blocked_isValid = false;

    m_home_field_goal_attempts_isSet = false;
    m_home_field_goal_attempts_isValid = false;

    m_home_field_goal_return_touchdowns_isSet = false;
    m_home_field_goal_return_touchdowns_isValid = false;

    m_home_field_goal_return_yards_isSet = false;
    m_home_field_goal_return_yards_isValid = false;

    m_home_field_goals_had_blocked_isSet = false;
    m_home_field_goals_had_blocked_isValid = false;

    m_home_field_goals_made_isSet = false;
    m_home_field_goals_made_isValid = false;

    m_home_first_downs_isSet = false;
    m_home_first_downs_isValid = false;

    m_home_first_downs_by_passing_isSet = false;
    m_home_first_downs_by_passing_isValid = false;

    m_home_first_downs_by_penalty_isSet = false;
    m_home_first_downs_by_penalty_isValid = false;

    m_home_first_downs_by_rushing_isSet = false;
    m_home_first_downs_by_rushing_isValid = false;

    m_home_fourth_down_attempts_isSet = false;
    m_home_fourth_down_attempts_isValid = false;

    m_home_fourth_down_conversions_isSet = false;
    m_home_fourth_down_conversions_isValid = false;

    m_home_fourth_down_percentage_isSet = false;
    m_home_fourth_down_percentage_isValid = false;

    m_home_fumble_return_touchdowns_isSet = false;
    m_home_fumble_return_touchdowns_isValid = false;

    m_home_fumble_return_yards_isSet = false;
    m_home_fumble_return_yards_isValid = false;

    m_home_fumbles_isSet = false;
    m_home_fumbles_isValid = false;

    m_home_fumbles_forced_isSet = false;
    m_home_fumbles_forced_isValid = false;

    m_home_fumbles_lost_isSet = false;
    m_home_fumbles_lost_isValid = false;

    m_home_fumbles_recovered_isSet = false;
    m_home_fumbles_recovered_isValid = false;

    m_home_giveaways_isSet = false;
    m_home_giveaways_isValid = false;

    m_home_goal_to_go_attempts_isSet = false;
    m_home_goal_to_go_attempts_isValid = false;

    m_home_goal_to_go_conversions_isSet = false;
    m_home_goal_to_go_conversions_isValid = false;

    m_home_interception_return_touchdowns_isSet = false;
    m_home_interception_return_touchdowns_isValid = false;

    m_home_interception_return_yards_isSet = false;
    m_home_interception_return_yards_isValid = false;

    m_home_interception_returns_isSet = false;
    m_home_interception_returns_isValid = false;

    m_home_kick_return_long_isSet = false;
    m_home_kick_return_long_isValid = false;

    m_home_kick_return_touchdowns_isSet = false;
    m_home_kick_return_touchdowns_isValid = false;

    m_home_kick_return_yards_isSet = false;
    m_home_kick_return_yards_isValid = false;

    m_home_kick_returns_isSet = false;
    m_home_kick_returns_isValid = false;

    m_home_kickoff_touchbacks_isSet = false;
    m_home_kickoff_touchbacks_isValid = false;

    m_home_kickoffs_isSet = false;
    m_home_kickoffs_isValid = false;

    m_home_kickoffs_in_end_zone_isSet = false;
    m_home_kickoffs_in_end_zone_isValid = false;

    m_home_offensive_plays_isSet = false;
    m_home_offensive_plays_isValid = false;

    m_home_offensive_yards_isSet = false;
    m_home_offensive_yards_isValid = false;

    m_home_offensive_yards_per_play_isSet = false;
    m_home_offensive_yards_per_play_isValid = false;

    m_home_passer_rating_isSet = false;
    m_home_passer_rating_isValid = false;

    m_home_passes_defended_isSet = false;
    m_home_passes_defended_isValid = false;

    m_home_passing_attempts_isSet = false;
    m_home_passing_attempts_isValid = false;

    m_home_passing_completions_isSet = false;
    m_home_passing_completions_isValid = false;

    m_home_passing_interceptions_isSet = false;
    m_home_passing_interceptions_isValid = false;

    m_home_passing_touchdowns_isSet = false;
    m_home_passing_touchdowns_isValid = false;

    m_home_passing_yards_isSet = false;
    m_home_passing_yards_isValid = false;

    m_home_passing_yards_per_attempt_isSet = false;
    m_home_passing_yards_per_attempt_isValid = false;

    m_home_passing_yards_per_completion_isSet = false;
    m_home_passing_yards_per_completion_isValid = false;

    m_home_penalties_isSet = false;
    m_home_penalties_isValid = false;

    m_home_penalty_yards_isSet = false;
    m_home_penalty_yards_isValid = false;

    m_home_punt_average_isSet = false;
    m_home_punt_average_isValid = false;

    m_home_punt_net_average_isSet = false;
    m_home_punt_net_average_isValid = false;

    m_home_punt_net_yards_isSet = false;
    m_home_punt_net_yards_isValid = false;

    m_home_punt_return_long_isSet = false;
    m_home_punt_return_long_isValid = false;

    m_home_punt_return_touchdowns_isSet = false;
    m_home_punt_return_touchdowns_isValid = false;

    m_home_punt_return_yards_isSet = false;
    m_home_punt_return_yards_isValid = false;

    m_home_punt_returns_isSet = false;
    m_home_punt_returns_isValid = false;

    m_home_punt_yards_isSet = false;
    m_home_punt_yards_isValid = false;

    m_home_punts_isSet = false;
    m_home_punts_isValid = false;

    m_home_punts_had_blocked_isSet = false;
    m_home_punts_had_blocked_isValid = false;

    m_home_quarterback_hits_isSet = false;
    m_home_quarterback_hits_isValid = false;

    m_home_red_zone_attempts_isSet = false;
    m_home_red_zone_attempts_isValid = false;

    m_home_red_zone_conversions_isSet = false;
    m_home_red_zone_conversions_isValid = false;

    m_home_return_yards_isSet = false;
    m_home_return_yards_isValid = false;

    m_home_rushing_attempts_isSet = false;
    m_home_rushing_attempts_isValid = false;

    m_home_rushing_touchdowns_isSet = false;
    m_home_rushing_touchdowns_isValid = false;

    m_home_rushing_yards_isSet = false;
    m_home_rushing_yards_isValid = false;

    m_home_rushing_yards_per_attempt_isSet = false;
    m_home_rushing_yards_per_attempt_isValid = false;

    m_home_sack_yards_isSet = false;
    m_home_sack_yards_isValid = false;

    m_home_sacks_isSet = false;
    m_home_sacks_isValid = false;

    m_home_safeties_isSet = false;
    m_home_safeties_isValid = false;

    m_home_score_isSet = false;
    m_home_score_isValid = false;

    m_home_score_overtime_isSet = false;
    m_home_score_overtime_isValid = false;

    m_home_score_quarter1_isSet = false;
    m_home_score_quarter1_isValid = false;

    m_home_score_quarter2_isSet = false;
    m_home_score_quarter2_isValid = false;

    m_home_score_quarter3_isSet = false;
    m_home_score_quarter3_isValid = false;

    m_home_score_quarter4_isSet = false;
    m_home_score_quarter4_isValid = false;

    m_home_solo_tackles_isSet = false;
    m_home_solo_tackles_isValid = false;

    m_home_tackles_for_loss_isSet = false;
    m_home_tackles_for_loss_isValid = false;

    m_home_takeaways_isSet = false;
    m_home_takeaways_isValid = false;

    m_home_team_isSet = false;
    m_home_team_isValid = false;

    m_home_third_down_attempts_isSet = false;
    m_home_third_down_attempts_isValid = false;

    m_home_third_down_conversions_isSet = false;
    m_home_third_down_conversions_isValid = false;

    m_home_third_down_percentage_isSet = false;
    m_home_third_down_percentage_isValid = false;

    m_home_time_of_possession_isSet = false;
    m_home_time_of_possession_isValid = false;

    m_home_times_sacked_isSet = false;
    m_home_times_sacked_isValid = false;

    m_home_times_sacked_yards_isSet = false;
    m_home_times_sacked_yards_isValid = false;

    m_home_touchdowns_isSet = false;
    m_home_touchdowns_isValid = false;

    m_home_turnover_differential_isSet = false;
    m_home_turnover_differential_isValid = false;

    m_home_two_point_conversion_returns_isSet = false;
    m_home_two_point_conversion_returns_isValid = false;

    m_humidity_isSet = false;
    m_humidity_isValid = false;

    m_is_game_over_isSet = false;
    m_is_game_over_isValid = false;

    m_over_under_isSet = false;
    m_over_under_isValid = false;

    m_playing_surface_isSet = false;
    m_playing_surface_isValid = false;

    m_point_spread_isSet = false;
    m_point_spread_isValid = false;

    m_score_id_isSet = false;
    m_score_id_isValid = false;

    m_season_isSet = false;
    m_season_isValid = false;

    m_season_type_isSet = false;
    m_season_type_isValid = false;

    m_stadium_isSet = false;
    m_stadium_isValid = false;

    m_stadium_details_isSet = false;
    m_stadium_details_isValid = false;

    m_stadium_id_isSet = false;
    m_stadium_id_isValid = false;

    m_temperature_isSet = false;
    m_temperature_isValid = false;

    m_total_score_isSet = false;
    m_total_score_isValid = false;

    m_week_isSet = false;
    m_week_isValid = false;

    m_wind_speed_isSet = false;
    m_wind_speed_isValid = false;
}

void OAIGame::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGame::fromJsonObject(QJsonObject json) {

    m_away_assisted_tackles_isValid = ::OpenAPI::fromJsonValue(m_away_assisted_tackles, json[QString("AwayAssistedTackles")]);
    m_away_assisted_tackles_isSet = !json[QString("AwayAssistedTackles")].isNull() && m_away_assisted_tackles_isValid;

    m_away_blocked_kick_return_touchdowns_isValid = ::OpenAPI::fromJsonValue(m_away_blocked_kick_return_touchdowns, json[QString("AwayBlockedKickReturnTouchdowns")]);
    m_away_blocked_kick_return_touchdowns_isSet = !json[QString("AwayBlockedKickReturnTouchdowns")].isNull() && m_away_blocked_kick_return_touchdowns_isValid;

    m_away_blocked_kick_return_yards_isValid = ::OpenAPI::fromJsonValue(m_away_blocked_kick_return_yards, json[QString("AwayBlockedKickReturnYards")]);
    m_away_blocked_kick_return_yards_isSet = !json[QString("AwayBlockedKickReturnYards")].isNull() && m_away_blocked_kick_return_yards_isValid;

    m_away_blocked_kicks_isValid = ::OpenAPI::fromJsonValue(m_away_blocked_kicks, json[QString("AwayBlockedKicks")]);
    m_away_blocked_kicks_isSet = !json[QString("AwayBlockedKicks")].isNull() && m_away_blocked_kicks_isValid;

    m_away_completion_percentage_isValid = ::OpenAPI::fromJsonValue(m_away_completion_percentage, json[QString("AwayCompletionPercentage")]);
    m_away_completion_percentage_isSet = !json[QString("AwayCompletionPercentage")].isNull() && m_away_completion_percentage_isValid;

    m_away_extra_point_kicking_attempts_isValid = ::OpenAPI::fromJsonValue(m_away_extra_point_kicking_attempts, json[QString("AwayExtraPointKickingAttempts")]);
    m_away_extra_point_kicking_attempts_isSet = !json[QString("AwayExtraPointKickingAttempts")].isNull() && m_away_extra_point_kicking_attempts_isValid;

    m_away_extra_point_kicking_conversions_isValid = ::OpenAPI::fromJsonValue(m_away_extra_point_kicking_conversions, json[QString("AwayExtraPointKickingConversions")]);
    m_away_extra_point_kicking_conversions_isSet = !json[QString("AwayExtraPointKickingConversions")].isNull() && m_away_extra_point_kicking_conversions_isValid;

    m_away_extra_point_passing_attempts_isValid = ::OpenAPI::fromJsonValue(m_away_extra_point_passing_attempts, json[QString("AwayExtraPointPassingAttempts")]);
    m_away_extra_point_passing_attempts_isSet = !json[QString("AwayExtraPointPassingAttempts")].isNull() && m_away_extra_point_passing_attempts_isValid;

    m_away_extra_point_passing_conversions_isValid = ::OpenAPI::fromJsonValue(m_away_extra_point_passing_conversions, json[QString("AwayExtraPointPassingConversions")]);
    m_away_extra_point_passing_conversions_isSet = !json[QString("AwayExtraPointPassingConversions")].isNull() && m_away_extra_point_passing_conversions_isValid;

    m_away_extra_point_rushing_attempts_isValid = ::OpenAPI::fromJsonValue(m_away_extra_point_rushing_attempts, json[QString("AwayExtraPointRushingAttempts")]);
    m_away_extra_point_rushing_attempts_isSet = !json[QString("AwayExtraPointRushingAttempts")].isNull() && m_away_extra_point_rushing_attempts_isValid;

    m_away_extra_point_rushing_conversions_isValid = ::OpenAPI::fromJsonValue(m_away_extra_point_rushing_conversions, json[QString("AwayExtraPointRushingConversions")]);
    m_away_extra_point_rushing_conversions_isSet = !json[QString("AwayExtraPointRushingConversions")].isNull() && m_away_extra_point_rushing_conversions_isValid;

    m_away_extra_points_had_blocked_isValid = ::OpenAPI::fromJsonValue(m_away_extra_points_had_blocked, json[QString("AwayExtraPointsHadBlocked")]);
    m_away_extra_points_had_blocked_isSet = !json[QString("AwayExtraPointsHadBlocked")].isNull() && m_away_extra_points_had_blocked_isValid;

    m_away_field_goal_attempts_isValid = ::OpenAPI::fromJsonValue(m_away_field_goal_attempts, json[QString("AwayFieldGoalAttempts")]);
    m_away_field_goal_attempts_isSet = !json[QString("AwayFieldGoalAttempts")].isNull() && m_away_field_goal_attempts_isValid;

    m_away_field_goal_return_touchdowns_isValid = ::OpenAPI::fromJsonValue(m_away_field_goal_return_touchdowns, json[QString("AwayFieldGoalReturnTouchdowns")]);
    m_away_field_goal_return_touchdowns_isSet = !json[QString("AwayFieldGoalReturnTouchdowns")].isNull() && m_away_field_goal_return_touchdowns_isValid;

    m_away_field_goal_return_yards_isValid = ::OpenAPI::fromJsonValue(m_away_field_goal_return_yards, json[QString("AwayFieldGoalReturnYards")]);
    m_away_field_goal_return_yards_isSet = !json[QString("AwayFieldGoalReturnYards")].isNull() && m_away_field_goal_return_yards_isValid;

    m_away_field_goals_had_blocked_isValid = ::OpenAPI::fromJsonValue(m_away_field_goals_had_blocked, json[QString("AwayFieldGoalsHadBlocked")]);
    m_away_field_goals_had_blocked_isSet = !json[QString("AwayFieldGoalsHadBlocked")].isNull() && m_away_field_goals_had_blocked_isValid;

    m_away_field_goals_made_isValid = ::OpenAPI::fromJsonValue(m_away_field_goals_made, json[QString("AwayFieldGoalsMade")]);
    m_away_field_goals_made_isSet = !json[QString("AwayFieldGoalsMade")].isNull() && m_away_field_goals_made_isValid;

    m_away_first_downs_isValid = ::OpenAPI::fromJsonValue(m_away_first_downs, json[QString("AwayFirstDowns")]);
    m_away_first_downs_isSet = !json[QString("AwayFirstDowns")].isNull() && m_away_first_downs_isValid;

    m_away_first_downs_by_passing_isValid = ::OpenAPI::fromJsonValue(m_away_first_downs_by_passing, json[QString("AwayFirstDownsByPassing")]);
    m_away_first_downs_by_passing_isSet = !json[QString("AwayFirstDownsByPassing")].isNull() && m_away_first_downs_by_passing_isValid;

    m_away_first_downs_by_penalty_isValid = ::OpenAPI::fromJsonValue(m_away_first_downs_by_penalty, json[QString("AwayFirstDownsByPenalty")]);
    m_away_first_downs_by_penalty_isSet = !json[QString("AwayFirstDownsByPenalty")].isNull() && m_away_first_downs_by_penalty_isValid;

    m_away_first_downs_by_rushing_isValid = ::OpenAPI::fromJsonValue(m_away_first_downs_by_rushing, json[QString("AwayFirstDownsByRushing")]);
    m_away_first_downs_by_rushing_isSet = !json[QString("AwayFirstDownsByRushing")].isNull() && m_away_first_downs_by_rushing_isValid;

    m_away_fourth_down_attempts_isValid = ::OpenAPI::fromJsonValue(m_away_fourth_down_attempts, json[QString("AwayFourthDownAttempts")]);
    m_away_fourth_down_attempts_isSet = !json[QString("AwayFourthDownAttempts")].isNull() && m_away_fourth_down_attempts_isValid;

    m_away_fourth_down_conversions_isValid = ::OpenAPI::fromJsonValue(m_away_fourth_down_conversions, json[QString("AwayFourthDownConversions")]);
    m_away_fourth_down_conversions_isSet = !json[QString("AwayFourthDownConversions")].isNull() && m_away_fourth_down_conversions_isValid;

    m_away_fourth_down_percentage_isValid = ::OpenAPI::fromJsonValue(m_away_fourth_down_percentage, json[QString("AwayFourthDownPercentage")]);
    m_away_fourth_down_percentage_isSet = !json[QString("AwayFourthDownPercentage")].isNull() && m_away_fourth_down_percentage_isValid;

    m_away_fumble_return_touchdowns_isValid = ::OpenAPI::fromJsonValue(m_away_fumble_return_touchdowns, json[QString("AwayFumbleReturnTouchdowns")]);
    m_away_fumble_return_touchdowns_isSet = !json[QString("AwayFumbleReturnTouchdowns")].isNull() && m_away_fumble_return_touchdowns_isValid;

    m_away_fumble_return_yards_isValid = ::OpenAPI::fromJsonValue(m_away_fumble_return_yards, json[QString("AwayFumbleReturnYards")]);
    m_away_fumble_return_yards_isSet = !json[QString("AwayFumbleReturnYards")].isNull() && m_away_fumble_return_yards_isValid;

    m_away_fumbles_isValid = ::OpenAPI::fromJsonValue(m_away_fumbles, json[QString("AwayFumbles")]);
    m_away_fumbles_isSet = !json[QString("AwayFumbles")].isNull() && m_away_fumbles_isValid;

    m_away_fumbles_forced_isValid = ::OpenAPI::fromJsonValue(m_away_fumbles_forced, json[QString("AwayFumblesForced")]);
    m_away_fumbles_forced_isSet = !json[QString("AwayFumblesForced")].isNull() && m_away_fumbles_forced_isValid;

    m_away_fumbles_lost_isValid = ::OpenAPI::fromJsonValue(m_away_fumbles_lost, json[QString("AwayFumblesLost")]);
    m_away_fumbles_lost_isSet = !json[QString("AwayFumblesLost")].isNull() && m_away_fumbles_lost_isValid;

    m_away_fumbles_recovered_isValid = ::OpenAPI::fromJsonValue(m_away_fumbles_recovered, json[QString("AwayFumblesRecovered")]);
    m_away_fumbles_recovered_isSet = !json[QString("AwayFumblesRecovered")].isNull() && m_away_fumbles_recovered_isValid;

    m_away_giveaways_isValid = ::OpenAPI::fromJsonValue(m_away_giveaways, json[QString("AwayGiveaways")]);
    m_away_giveaways_isSet = !json[QString("AwayGiveaways")].isNull() && m_away_giveaways_isValid;

    m_away_goal_to_go_attempts_isValid = ::OpenAPI::fromJsonValue(m_away_goal_to_go_attempts, json[QString("AwayGoalToGoAttempts")]);
    m_away_goal_to_go_attempts_isSet = !json[QString("AwayGoalToGoAttempts")].isNull() && m_away_goal_to_go_attempts_isValid;

    m_away_goal_to_go_conversions_isValid = ::OpenAPI::fromJsonValue(m_away_goal_to_go_conversions, json[QString("AwayGoalToGoConversions")]);
    m_away_goal_to_go_conversions_isSet = !json[QString("AwayGoalToGoConversions")].isNull() && m_away_goal_to_go_conversions_isValid;

    m_away_interception_return_touchdowns_isValid = ::OpenAPI::fromJsonValue(m_away_interception_return_touchdowns, json[QString("AwayInterceptionReturnTouchdowns")]);
    m_away_interception_return_touchdowns_isSet = !json[QString("AwayInterceptionReturnTouchdowns")].isNull() && m_away_interception_return_touchdowns_isValid;

    m_away_interception_return_yards_isValid = ::OpenAPI::fromJsonValue(m_away_interception_return_yards, json[QString("AwayInterceptionReturnYards")]);
    m_away_interception_return_yards_isSet = !json[QString("AwayInterceptionReturnYards")].isNull() && m_away_interception_return_yards_isValid;

    m_away_interception_returns_isValid = ::OpenAPI::fromJsonValue(m_away_interception_returns, json[QString("AwayInterceptionReturns")]);
    m_away_interception_returns_isSet = !json[QString("AwayInterceptionReturns")].isNull() && m_away_interception_returns_isValid;

    m_away_kick_return_long_isValid = ::OpenAPI::fromJsonValue(m_away_kick_return_long, json[QString("AwayKickReturnLong")]);
    m_away_kick_return_long_isSet = !json[QString("AwayKickReturnLong")].isNull() && m_away_kick_return_long_isValid;

    m_away_kick_return_touchdowns_isValid = ::OpenAPI::fromJsonValue(m_away_kick_return_touchdowns, json[QString("AwayKickReturnTouchdowns")]);
    m_away_kick_return_touchdowns_isSet = !json[QString("AwayKickReturnTouchdowns")].isNull() && m_away_kick_return_touchdowns_isValid;

    m_away_kick_return_yards_isValid = ::OpenAPI::fromJsonValue(m_away_kick_return_yards, json[QString("AwayKickReturnYards")]);
    m_away_kick_return_yards_isSet = !json[QString("AwayKickReturnYards")].isNull() && m_away_kick_return_yards_isValid;

    m_away_kick_returns_isValid = ::OpenAPI::fromJsonValue(m_away_kick_returns, json[QString("AwayKickReturns")]);
    m_away_kick_returns_isSet = !json[QString("AwayKickReturns")].isNull() && m_away_kick_returns_isValid;

    m_away_kickoff_touchbacks_isValid = ::OpenAPI::fromJsonValue(m_away_kickoff_touchbacks, json[QString("AwayKickoffTouchbacks")]);
    m_away_kickoff_touchbacks_isSet = !json[QString("AwayKickoffTouchbacks")].isNull() && m_away_kickoff_touchbacks_isValid;

    m_away_kickoffs_isValid = ::OpenAPI::fromJsonValue(m_away_kickoffs, json[QString("AwayKickoffs")]);
    m_away_kickoffs_isSet = !json[QString("AwayKickoffs")].isNull() && m_away_kickoffs_isValid;

    m_away_kickoffs_in_end_zone_isValid = ::OpenAPI::fromJsonValue(m_away_kickoffs_in_end_zone, json[QString("AwayKickoffsInEndZone")]);
    m_away_kickoffs_in_end_zone_isSet = !json[QString("AwayKickoffsInEndZone")].isNull() && m_away_kickoffs_in_end_zone_isValid;

    m_away_offensive_plays_isValid = ::OpenAPI::fromJsonValue(m_away_offensive_plays, json[QString("AwayOffensivePlays")]);
    m_away_offensive_plays_isSet = !json[QString("AwayOffensivePlays")].isNull() && m_away_offensive_plays_isValid;

    m_away_offensive_yards_isValid = ::OpenAPI::fromJsonValue(m_away_offensive_yards, json[QString("AwayOffensiveYards")]);
    m_away_offensive_yards_isSet = !json[QString("AwayOffensiveYards")].isNull() && m_away_offensive_yards_isValid;

    m_away_offensive_yards_per_play_isValid = ::OpenAPI::fromJsonValue(m_away_offensive_yards_per_play, json[QString("AwayOffensiveYardsPerPlay")]);
    m_away_offensive_yards_per_play_isSet = !json[QString("AwayOffensiveYardsPerPlay")].isNull() && m_away_offensive_yards_per_play_isValid;

    m_away_passer_rating_isValid = ::OpenAPI::fromJsonValue(m_away_passer_rating, json[QString("AwayPasserRating")]);
    m_away_passer_rating_isSet = !json[QString("AwayPasserRating")].isNull() && m_away_passer_rating_isValid;

    m_away_passes_defended_isValid = ::OpenAPI::fromJsonValue(m_away_passes_defended, json[QString("AwayPassesDefended")]);
    m_away_passes_defended_isSet = !json[QString("AwayPassesDefended")].isNull() && m_away_passes_defended_isValid;

    m_away_passing_attempts_isValid = ::OpenAPI::fromJsonValue(m_away_passing_attempts, json[QString("AwayPassingAttempts")]);
    m_away_passing_attempts_isSet = !json[QString("AwayPassingAttempts")].isNull() && m_away_passing_attempts_isValid;

    m_away_passing_completions_isValid = ::OpenAPI::fromJsonValue(m_away_passing_completions, json[QString("AwayPassingCompletions")]);
    m_away_passing_completions_isSet = !json[QString("AwayPassingCompletions")].isNull() && m_away_passing_completions_isValid;

    m_away_passing_interceptions_isValid = ::OpenAPI::fromJsonValue(m_away_passing_interceptions, json[QString("AwayPassingInterceptions")]);
    m_away_passing_interceptions_isSet = !json[QString("AwayPassingInterceptions")].isNull() && m_away_passing_interceptions_isValid;

    m_away_passing_touchdowns_isValid = ::OpenAPI::fromJsonValue(m_away_passing_touchdowns, json[QString("AwayPassingTouchdowns")]);
    m_away_passing_touchdowns_isSet = !json[QString("AwayPassingTouchdowns")].isNull() && m_away_passing_touchdowns_isValid;

    m_away_passing_yards_isValid = ::OpenAPI::fromJsonValue(m_away_passing_yards, json[QString("AwayPassingYards")]);
    m_away_passing_yards_isSet = !json[QString("AwayPassingYards")].isNull() && m_away_passing_yards_isValid;

    m_away_passing_yards_per_attempt_isValid = ::OpenAPI::fromJsonValue(m_away_passing_yards_per_attempt, json[QString("AwayPassingYardsPerAttempt")]);
    m_away_passing_yards_per_attempt_isSet = !json[QString("AwayPassingYardsPerAttempt")].isNull() && m_away_passing_yards_per_attempt_isValid;

    m_away_passing_yards_per_completion_isValid = ::OpenAPI::fromJsonValue(m_away_passing_yards_per_completion, json[QString("AwayPassingYardsPerCompletion")]);
    m_away_passing_yards_per_completion_isSet = !json[QString("AwayPassingYardsPerCompletion")].isNull() && m_away_passing_yards_per_completion_isValid;

    m_away_penalties_isValid = ::OpenAPI::fromJsonValue(m_away_penalties, json[QString("AwayPenalties")]);
    m_away_penalties_isSet = !json[QString("AwayPenalties")].isNull() && m_away_penalties_isValid;

    m_away_penalty_yards_isValid = ::OpenAPI::fromJsonValue(m_away_penalty_yards, json[QString("AwayPenaltyYards")]);
    m_away_penalty_yards_isSet = !json[QString("AwayPenaltyYards")].isNull() && m_away_penalty_yards_isValid;

    m_away_punt_average_isValid = ::OpenAPI::fromJsonValue(m_away_punt_average, json[QString("AwayPuntAverage")]);
    m_away_punt_average_isSet = !json[QString("AwayPuntAverage")].isNull() && m_away_punt_average_isValid;

    m_away_punt_net_average_isValid = ::OpenAPI::fromJsonValue(m_away_punt_net_average, json[QString("AwayPuntNetAverage")]);
    m_away_punt_net_average_isSet = !json[QString("AwayPuntNetAverage")].isNull() && m_away_punt_net_average_isValid;

    m_away_punt_net_yards_isValid = ::OpenAPI::fromJsonValue(m_away_punt_net_yards, json[QString("AwayPuntNetYards")]);
    m_away_punt_net_yards_isSet = !json[QString("AwayPuntNetYards")].isNull() && m_away_punt_net_yards_isValid;

    m_away_punt_return_long_isValid = ::OpenAPI::fromJsonValue(m_away_punt_return_long, json[QString("AwayPuntReturnLong")]);
    m_away_punt_return_long_isSet = !json[QString("AwayPuntReturnLong")].isNull() && m_away_punt_return_long_isValid;

    m_away_punt_return_touchdowns_isValid = ::OpenAPI::fromJsonValue(m_away_punt_return_touchdowns, json[QString("AwayPuntReturnTouchdowns")]);
    m_away_punt_return_touchdowns_isSet = !json[QString("AwayPuntReturnTouchdowns")].isNull() && m_away_punt_return_touchdowns_isValid;

    m_away_punt_return_yards_isValid = ::OpenAPI::fromJsonValue(m_away_punt_return_yards, json[QString("AwayPuntReturnYards")]);
    m_away_punt_return_yards_isSet = !json[QString("AwayPuntReturnYards")].isNull() && m_away_punt_return_yards_isValid;

    m_away_punt_returns_isValid = ::OpenAPI::fromJsonValue(m_away_punt_returns, json[QString("AwayPuntReturns")]);
    m_away_punt_returns_isSet = !json[QString("AwayPuntReturns")].isNull() && m_away_punt_returns_isValid;

    m_away_punt_yards_isValid = ::OpenAPI::fromJsonValue(m_away_punt_yards, json[QString("AwayPuntYards")]);
    m_away_punt_yards_isSet = !json[QString("AwayPuntYards")].isNull() && m_away_punt_yards_isValid;

    m_away_punts_isValid = ::OpenAPI::fromJsonValue(m_away_punts, json[QString("AwayPunts")]);
    m_away_punts_isSet = !json[QString("AwayPunts")].isNull() && m_away_punts_isValid;

    m_away_punts_had_blocked_isValid = ::OpenAPI::fromJsonValue(m_away_punts_had_blocked, json[QString("AwayPuntsHadBlocked")]);
    m_away_punts_had_blocked_isSet = !json[QString("AwayPuntsHadBlocked")].isNull() && m_away_punts_had_blocked_isValid;

    m_away_quarterback_hits_isValid = ::OpenAPI::fromJsonValue(m_away_quarterback_hits, json[QString("AwayQuarterbackHits")]);
    m_away_quarterback_hits_isSet = !json[QString("AwayQuarterbackHits")].isNull() && m_away_quarterback_hits_isValid;

    m_away_red_zone_attempts_isValid = ::OpenAPI::fromJsonValue(m_away_red_zone_attempts, json[QString("AwayRedZoneAttempts")]);
    m_away_red_zone_attempts_isSet = !json[QString("AwayRedZoneAttempts")].isNull() && m_away_red_zone_attempts_isValid;

    m_away_red_zone_conversions_isValid = ::OpenAPI::fromJsonValue(m_away_red_zone_conversions, json[QString("AwayRedZoneConversions")]);
    m_away_red_zone_conversions_isSet = !json[QString("AwayRedZoneConversions")].isNull() && m_away_red_zone_conversions_isValid;

    m_away_return_yards_isValid = ::OpenAPI::fromJsonValue(m_away_return_yards, json[QString("AwayReturnYards")]);
    m_away_return_yards_isSet = !json[QString("AwayReturnYards")].isNull() && m_away_return_yards_isValid;

    m_away_rushing_attempts_isValid = ::OpenAPI::fromJsonValue(m_away_rushing_attempts, json[QString("AwayRushingAttempts")]);
    m_away_rushing_attempts_isSet = !json[QString("AwayRushingAttempts")].isNull() && m_away_rushing_attempts_isValid;

    m_away_rushing_touchdowns_isValid = ::OpenAPI::fromJsonValue(m_away_rushing_touchdowns, json[QString("AwayRushingTouchdowns")]);
    m_away_rushing_touchdowns_isSet = !json[QString("AwayRushingTouchdowns")].isNull() && m_away_rushing_touchdowns_isValid;

    m_away_rushing_yards_isValid = ::OpenAPI::fromJsonValue(m_away_rushing_yards, json[QString("AwayRushingYards")]);
    m_away_rushing_yards_isSet = !json[QString("AwayRushingYards")].isNull() && m_away_rushing_yards_isValid;

    m_away_rushing_yards_per_attempt_isValid = ::OpenAPI::fromJsonValue(m_away_rushing_yards_per_attempt, json[QString("AwayRushingYardsPerAttempt")]);
    m_away_rushing_yards_per_attempt_isSet = !json[QString("AwayRushingYardsPerAttempt")].isNull() && m_away_rushing_yards_per_attempt_isValid;

    m_away_sack_yards_isValid = ::OpenAPI::fromJsonValue(m_away_sack_yards, json[QString("AwaySackYards")]);
    m_away_sack_yards_isSet = !json[QString("AwaySackYards")].isNull() && m_away_sack_yards_isValid;

    m_away_sacks_isValid = ::OpenAPI::fromJsonValue(m_away_sacks, json[QString("AwaySacks")]);
    m_away_sacks_isSet = !json[QString("AwaySacks")].isNull() && m_away_sacks_isValid;

    m_away_safeties_isValid = ::OpenAPI::fromJsonValue(m_away_safeties, json[QString("AwaySafeties")]);
    m_away_safeties_isSet = !json[QString("AwaySafeties")].isNull() && m_away_safeties_isValid;

    m_away_score_isValid = ::OpenAPI::fromJsonValue(m_away_score, json[QString("AwayScore")]);
    m_away_score_isSet = !json[QString("AwayScore")].isNull() && m_away_score_isValid;

    m_away_score_overtime_isValid = ::OpenAPI::fromJsonValue(m_away_score_overtime, json[QString("AwayScoreOvertime")]);
    m_away_score_overtime_isSet = !json[QString("AwayScoreOvertime")].isNull() && m_away_score_overtime_isValid;

    m_away_score_quarter1_isValid = ::OpenAPI::fromJsonValue(m_away_score_quarter1, json[QString("AwayScoreQuarter1")]);
    m_away_score_quarter1_isSet = !json[QString("AwayScoreQuarter1")].isNull() && m_away_score_quarter1_isValid;

    m_away_score_quarter2_isValid = ::OpenAPI::fromJsonValue(m_away_score_quarter2, json[QString("AwayScoreQuarter2")]);
    m_away_score_quarter2_isSet = !json[QString("AwayScoreQuarter2")].isNull() && m_away_score_quarter2_isValid;

    m_away_score_quarter3_isValid = ::OpenAPI::fromJsonValue(m_away_score_quarter3, json[QString("AwayScoreQuarter3")]);
    m_away_score_quarter3_isSet = !json[QString("AwayScoreQuarter3")].isNull() && m_away_score_quarter3_isValid;

    m_away_score_quarter4_isValid = ::OpenAPI::fromJsonValue(m_away_score_quarter4, json[QString("AwayScoreQuarter4")]);
    m_away_score_quarter4_isSet = !json[QString("AwayScoreQuarter4")].isNull() && m_away_score_quarter4_isValid;

    m_away_solo_tackles_isValid = ::OpenAPI::fromJsonValue(m_away_solo_tackles, json[QString("AwaySoloTackles")]);
    m_away_solo_tackles_isSet = !json[QString("AwaySoloTackles")].isNull() && m_away_solo_tackles_isValid;

    m_away_tackles_for_loss_isValid = ::OpenAPI::fromJsonValue(m_away_tackles_for_loss, json[QString("AwayTacklesForLoss")]);
    m_away_tackles_for_loss_isSet = !json[QString("AwayTacklesForLoss")].isNull() && m_away_tackles_for_loss_isValid;

    m_away_takeaways_isValid = ::OpenAPI::fromJsonValue(m_away_takeaways, json[QString("AwayTakeaways")]);
    m_away_takeaways_isSet = !json[QString("AwayTakeaways")].isNull() && m_away_takeaways_isValid;

    m_away_team_isValid = ::OpenAPI::fromJsonValue(m_away_team, json[QString("AwayTeam")]);
    m_away_team_isSet = !json[QString("AwayTeam")].isNull() && m_away_team_isValid;

    m_away_third_down_attempts_isValid = ::OpenAPI::fromJsonValue(m_away_third_down_attempts, json[QString("AwayThirdDownAttempts")]);
    m_away_third_down_attempts_isSet = !json[QString("AwayThirdDownAttempts")].isNull() && m_away_third_down_attempts_isValid;

    m_away_third_down_conversions_isValid = ::OpenAPI::fromJsonValue(m_away_third_down_conversions, json[QString("AwayThirdDownConversions")]);
    m_away_third_down_conversions_isSet = !json[QString("AwayThirdDownConversions")].isNull() && m_away_third_down_conversions_isValid;

    m_away_third_down_percentage_isValid = ::OpenAPI::fromJsonValue(m_away_third_down_percentage, json[QString("AwayThirdDownPercentage")]);
    m_away_third_down_percentage_isSet = !json[QString("AwayThirdDownPercentage")].isNull() && m_away_third_down_percentage_isValid;

    m_away_time_of_possession_isValid = ::OpenAPI::fromJsonValue(m_away_time_of_possession, json[QString("AwayTimeOfPossession")]);
    m_away_time_of_possession_isSet = !json[QString("AwayTimeOfPossession")].isNull() && m_away_time_of_possession_isValid;

    m_away_times_sacked_isValid = ::OpenAPI::fromJsonValue(m_away_times_sacked, json[QString("AwayTimesSacked")]);
    m_away_times_sacked_isSet = !json[QString("AwayTimesSacked")].isNull() && m_away_times_sacked_isValid;

    m_away_times_sacked_yards_isValid = ::OpenAPI::fromJsonValue(m_away_times_sacked_yards, json[QString("AwayTimesSackedYards")]);
    m_away_times_sacked_yards_isSet = !json[QString("AwayTimesSackedYards")].isNull() && m_away_times_sacked_yards_isValid;

    m_away_touchdowns_isValid = ::OpenAPI::fromJsonValue(m_away_touchdowns, json[QString("AwayTouchdowns")]);
    m_away_touchdowns_isSet = !json[QString("AwayTouchdowns")].isNull() && m_away_touchdowns_isValid;

    m_away_turnover_differential_isValid = ::OpenAPI::fromJsonValue(m_away_turnover_differential, json[QString("AwayTurnoverDifferential")]);
    m_away_turnover_differential_isSet = !json[QString("AwayTurnoverDifferential")].isNull() && m_away_turnover_differential_isValid;

    m_away_two_point_conversion_returns_isValid = ::OpenAPI::fromJsonValue(m_away_two_point_conversion_returns, json[QString("AwayTwoPointConversionReturns")]);
    m_away_two_point_conversion_returns_isSet = !json[QString("AwayTwoPointConversionReturns")].isNull() && m_away_two_point_conversion_returns_isValid;

    m_date_isValid = ::OpenAPI::fromJsonValue(m_date, json[QString("Date")]);
    m_date_isSet = !json[QString("Date")].isNull() && m_date_isValid;

    m_game_id_isValid = ::OpenAPI::fromJsonValue(m_game_id, json[QString("GameID")]);
    m_game_id_isSet = !json[QString("GameID")].isNull() && m_game_id_isValid;

    m_game_key_isValid = ::OpenAPI::fromJsonValue(m_game_key, json[QString("GameKey")]);
    m_game_key_isSet = !json[QString("GameKey")].isNull() && m_game_key_isValid;

    m_home_assisted_tackles_isValid = ::OpenAPI::fromJsonValue(m_home_assisted_tackles, json[QString("HomeAssistedTackles")]);
    m_home_assisted_tackles_isSet = !json[QString("HomeAssistedTackles")].isNull() && m_home_assisted_tackles_isValid;

    m_home_blocked_kick_return_touchdowns_isValid = ::OpenAPI::fromJsonValue(m_home_blocked_kick_return_touchdowns, json[QString("HomeBlockedKickReturnTouchdowns")]);
    m_home_blocked_kick_return_touchdowns_isSet = !json[QString("HomeBlockedKickReturnTouchdowns")].isNull() && m_home_blocked_kick_return_touchdowns_isValid;

    m_home_blocked_kick_return_yards_isValid = ::OpenAPI::fromJsonValue(m_home_blocked_kick_return_yards, json[QString("HomeBlockedKickReturnYards")]);
    m_home_blocked_kick_return_yards_isSet = !json[QString("HomeBlockedKickReturnYards")].isNull() && m_home_blocked_kick_return_yards_isValid;

    m_home_blocked_kicks_isValid = ::OpenAPI::fromJsonValue(m_home_blocked_kicks, json[QString("HomeBlockedKicks")]);
    m_home_blocked_kicks_isSet = !json[QString("HomeBlockedKicks")].isNull() && m_home_blocked_kicks_isValid;

    m_home_completion_percentage_isValid = ::OpenAPI::fromJsonValue(m_home_completion_percentage, json[QString("HomeCompletionPercentage")]);
    m_home_completion_percentage_isSet = !json[QString("HomeCompletionPercentage")].isNull() && m_home_completion_percentage_isValid;

    m_home_extra_point_kicking_attempts_isValid = ::OpenAPI::fromJsonValue(m_home_extra_point_kicking_attempts, json[QString("HomeExtraPointKickingAttempts")]);
    m_home_extra_point_kicking_attempts_isSet = !json[QString("HomeExtraPointKickingAttempts")].isNull() && m_home_extra_point_kicking_attempts_isValid;

    m_home_extra_point_kicking_conversions_isValid = ::OpenAPI::fromJsonValue(m_home_extra_point_kicking_conversions, json[QString("HomeExtraPointKickingConversions")]);
    m_home_extra_point_kicking_conversions_isSet = !json[QString("HomeExtraPointKickingConversions")].isNull() && m_home_extra_point_kicking_conversions_isValid;

    m_home_extra_point_passing_attempts_isValid = ::OpenAPI::fromJsonValue(m_home_extra_point_passing_attempts, json[QString("HomeExtraPointPassingAttempts")]);
    m_home_extra_point_passing_attempts_isSet = !json[QString("HomeExtraPointPassingAttempts")].isNull() && m_home_extra_point_passing_attempts_isValid;

    m_home_extra_point_passing_conversions_isValid = ::OpenAPI::fromJsonValue(m_home_extra_point_passing_conversions, json[QString("HomeExtraPointPassingConversions")]);
    m_home_extra_point_passing_conversions_isSet = !json[QString("HomeExtraPointPassingConversions")].isNull() && m_home_extra_point_passing_conversions_isValid;

    m_home_extra_point_rushing_attempts_isValid = ::OpenAPI::fromJsonValue(m_home_extra_point_rushing_attempts, json[QString("HomeExtraPointRushingAttempts")]);
    m_home_extra_point_rushing_attempts_isSet = !json[QString("HomeExtraPointRushingAttempts")].isNull() && m_home_extra_point_rushing_attempts_isValid;

    m_home_extra_point_rushing_conversions_isValid = ::OpenAPI::fromJsonValue(m_home_extra_point_rushing_conversions, json[QString("HomeExtraPointRushingConversions")]);
    m_home_extra_point_rushing_conversions_isSet = !json[QString("HomeExtraPointRushingConversions")].isNull() && m_home_extra_point_rushing_conversions_isValid;

    m_home_extra_points_had_blocked_isValid = ::OpenAPI::fromJsonValue(m_home_extra_points_had_blocked, json[QString("HomeExtraPointsHadBlocked")]);
    m_home_extra_points_had_blocked_isSet = !json[QString("HomeExtraPointsHadBlocked")].isNull() && m_home_extra_points_had_blocked_isValid;

    m_home_field_goal_attempts_isValid = ::OpenAPI::fromJsonValue(m_home_field_goal_attempts, json[QString("HomeFieldGoalAttempts")]);
    m_home_field_goal_attempts_isSet = !json[QString("HomeFieldGoalAttempts")].isNull() && m_home_field_goal_attempts_isValid;

    m_home_field_goal_return_touchdowns_isValid = ::OpenAPI::fromJsonValue(m_home_field_goal_return_touchdowns, json[QString("HomeFieldGoalReturnTouchdowns")]);
    m_home_field_goal_return_touchdowns_isSet = !json[QString("HomeFieldGoalReturnTouchdowns")].isNull() && m_home_field_goal_return_touchdowns_isValid;

    m_home_field_goal_return_yards_isValid = ::OpenAPI::fromJsonValue(m_home_field_goal_return_yards, json[QString("HomeFieldGoalReturnYards")]);
    m_home_field_goal_return_yards_isSet = !json[QString("HomeFieldGoalReturnYards")].isNull() && m_home_field_goal_return_yards_isValid;

    m_home_field_goals_had_blocked_isValid = ::OpenAPI::fromJsonValue(m_home_field_goals_had_blocked, json[QString("HomeFieldGoalsHadBlocked")]);
    m_home_field_goals_had_blocked_isSet = !json[QString("HomeFieldGoalsHadBlocked")].isNull() && m_home_field_goals_had_blocked_isValid;

    m_home_field_goals_made_isValid = ::OpenAPI::fromJsonValue(m_home_field_goals_made, json[QString("HomeFieldGoalsMade")]);
    m_home_field_goals_made_isSet = !json[QString("HomeFieldGoalsMade")].isNull() && m_home_field_goals_made_isValid;

    m_home_first_downs_isValid = ::OpenAPI::fromJsonValue(m_home_first_downs, json[QString("HomeFirstDowns")]);
    m_home_first_downs_isSet = !json[QString("HomeFirstDowns")].isNull() && m_home_first_downs_isValid;

    m_home_first_downs_by_passing_isValid = ::OpenAPI::fromJsonValue(m_home_first_downs_by_passing, json[QString("HomeFirstDownsByPassing")]);
    m_home_first_downs_by_passing_isSet = !json[QString("HomeFirstDownsByPassing")].isNull() && m_home_first_downs_by_passing_isValid;

    m_home_first_downs_by_penalty_isValid = ::OpenAPI::fromJsonValue(m_home_first_downs_by_penalty, json[QString("HomeFirstDownsByPenalty")]);
    m_home_first_downs_by_penalty_isSet = !json[QString("HomeFirstDownsByPenalty")].isNull() && m_home_first_downs_by_penalty_isValid;

    m_home_first_downs_by_rushing_isValid = ::OpenAPI::fromJsonValue(m_home_first_downs_by_rushing, json[QString("HomeFirstDownsByRushing")]);
    m_home_first_downs_by_rushing_isSet = !json[QString("HomeFirstDownsByRushing")].isNull() && m_home_first_downs_by_rushing_isValid;

    m_home_fourth_down_attempts_isValid = ::OpenAPI::fromJsonValue(m_home_fourth_down_attempts, json[QString("HomeFourthDownAttempts")]);
    m_home_fourth_down_attempts_isSet = !json[QString("HomeFourthDownAttempts")].isNull() && m_home_fourth_down_attempts_isValid;

    m_home_fourth_down_conversions_isValid = ::OpenAPI::fromJsonValue(m_home_fourth_down_conversions, json[QString("HomeFourthDownConversions")]);
    m_home_fourth_down_conversions_isSet = !json[QString("HomeFourthDownConversions")].isNull() && m_home_fourth_down_conversions_isValid;

    m_home_fourth_down_percentage_isValid = ::OpenAPI::fromJsonValue(m_home_fourth_down_percentage, json[QString("HomeFourthDownPercentage")]);
    m_home_fourth_down_percentage_isSet = !json[QString("HomeFourthDownPercentage")].isNull() && m_home_fourth_down_percentage_isValid;

    m_home_fumble_return_touchdowns_isValid = ::OpenAPI::fromJsonValue(m_home_fumble_return_touchdowns, json[QString("HomeFumbleReturnTouchdowns")]);
    m_home_fumble_return_touchdowns_isSet = !json[QString("HomeFumbleReturnTouchdowns")].isNull() && m_home_fumble_return_touchdowns_isValid;

    m_home_fumble_return_yards_isValid = ::OpenAPI::fromJsonValue(m_home_fumble_return_yards, json[QString("HomeFumbleReturnYards")]);
    m_home_fumble_return_yards_isSet = !json[QString("HomeFumbleReturnYards")].isNull() && m_home_fumble_return_yards_isValid;

    m_home_fumbles_isValid = ::OpenAPI::fromJsonValue(m_home_fumbles, json[QString("HomeFumbles")]);
    m_home_fumbles_isSet = !json[QString("HomeFumbles")].isNull() && m_home_fumbles_isValid;

    m_home_fumbles_forced_isValid = ::OpenAPI::fromJsonValue(m_home_fumbles_forced, json[QString("HomeFumblesForced")]);
    m_home_fumbles_forced_isSet = !json[QString("HomeFumblesForced")].isNull() && m_home_fumbles_forced_isValid;

    m_home_fumbles_lost_isValid = ::OpenAPI::fromJsonValue(m_home_fumbles_lost, json[QString("HomeFumblesLost")]);
    m_home_fumbles_lost_isSet = !json[QString("HomeFumblesLost")].isNull() && m_home_fumbles_lost_isValid;

    m_home_fumbles_recovered_isValid = ::OpenAPI::fromJsonValue(m_home_fumbles_recovered, json[QString("HomeFumblesRecovered")]);
    m_home_fumbles_recovered_isSet = !json[QString("HomeFumblesRecovered")].isNull() && m_home_fumbles_recovered_isValid;

    m_home_giveaways_isValid = ::OpenAPI::fromJsonValue(m_home_giveaways, json[QString("HomeGiveaways")]);
    m_home_giveaways_isSet = !json[QString("HomeGiveaways")].isNull() && m_home_giveaways_isValid;

    m_home_goal_to_go_attempts_isValid = ::OpenAPI::fromJsonValue(m_home_goal_to_go_attempts, json[QString("HomeGoalToGoAttempts")]);
    m_home_goal_to_go_attempts_isSet = !json[QString("HomeGoalToGoAttempts")].isNull() && m_home_goal_to_go_attempts_isValid;

    m_home_goal_to_go_conversions_isValid = ::OpenAPI::fromJsonValue(m_home_goal_to_go_conversions, json[QString("HomeGoalToGoConversions")]);
    m_home_goal_to_go_conversions_isSet = !json[QString("HomeGoalToGoConversions")].isNull() && m_home_goal_to_go_conversions_isValid;

    m_home_interception_return_touchdowns_isValid = ::OpenAPI::fromJsonValue(m_home_interception_return_touchdowns, json[QString("HomeInterceptionReturnTouchdowns")]);
    m_home_interception_return_touchdowns_isSet = !json[QString("HomeInterceptionReturnTouchdowns")].isNull() && m_home_interception_return_touchdowns_isValid;

    m_home_interception_return_yards_isValid = ::OpenAPI::fromJsonValue(m_home_interception_return_yards, json[QString("HomeInterceptionReturnYards")]);
    m_home_interception_return_yards_isSet = !json[QString("HomeInterceptionReturnYards")].isNull() && m_home_interception_return_yards_isValid;

    m_home_interception_returns_isValid = ::OpenAPI::fromJsonValue(m_home_interception_returns, json[QString("HomeInterceptionReturns")]);
    m_home_interception_returns_isSet = !json[QString("HomeInterceptionReturns")].isNull() && m_home_interception_returns_isValid;

    m_home_kick_return_long_isValid = ::OpenAPI::fromJsonValue(m_home_kick_return_long, json[QString("HomeKickReturnLong")]);
    m_home_kick_return_long_isSet = !json[QString("HomeKickReturnLong")].isNull() && m_home_kick_return_long_isValid;

    m_home_kick_return_touchdowns_isValid = ::OpenAPI::fromJsonValue(m_home_kick_return_touchdowns, json[QString("HomeKickReturnTouchdowns")]);
    m_home_kick_return_touchdowns_isSet = !json[QString("HomeKickReturnTouchdowns")].isNull() && m_home_kick_return_touchdowns_isValid;

    m_home_kick_return_yards_isValid = ::OpenAPI::fromJsonValue(m_home_kick_return_yards, json[QString("HomeKickReturnYards")]);
    m_home_kick_return_yards_isSet = !json[QString("HomeKickReturnYards")].isNull() && m_home_kick_return_yards_isValid;

    m_home_kick_returns_isValid = ::OpenAPI::fromJsonValue(m_home_kick_returns, json[QString("HomeKickReturns")]);
    m_home_kick_returns_isSet = !json[QString("HomeKickReturns")].isNull() && m_home_kick_returns_isValid;

    m_home_kickoff_touchbacks_isValid = ::OpenAPI::fromJsonValue(m_home_kickoff_touchbacks, json[QString("HomeKickoffTouchbacks")]);
    m_home_kickoff_touchbacks_isSet = !json[QString("HomeKickoffTouchbacks")].isNull() && m_home_kickoff_touchbacks_isValid;

    m_home_kickoffs_isValid = ::OpenAPI::fromJsonValue(m_home_kickoffs, json[QString("HomeKickoffs")]);
    m_home_kickoffs_isSet = !json[QString("HomeKickoffs")].isNull() && m_home_kickoffs_isValid;

    m_home_kickoffs_in_end_zone_isValid = ::OpenAPI::fromJsonValue(m_home_kickoffs_in_end_zone, json[QString("HomeKickoffsInEndZone")]);
    m_home_kickoffs_in_end_zone_isSet = !json[QString("HomeKickoffsInEndZone")].isNull() && m_home_kickoffs_in_end_zone_isValid;

    m_home_offensive_plays_isValid = ::OpenAPI::fromJsonValue(m_home_offensive_plays, json[QString("HomeOffensivePlays")]);
    m_home_offensive_plays_isSet = !json[QString("HomeOffensivePlays")].isNull() && m_home_offensive_plays_isValid;

    m_home_offensive_yards_isValid = ::OpenAPI::fromJsonValue(m_home_offensive_yards, json[QString("HomeOffensiveYards")]);
    m_home_offensive_yards_isSet = !json[QString("HomeOffensiveYards")].isNull() && m_home_offensive_yards_isValid;

    m_home_offensive_yards_per_play_isValid = ::OpenAPI::fromJsonValue(m_home_offensive_yards_per_play, json[QString("HomeOffensiveYardsPerPlay")]);
    m_home_offensive_yards_per_play_isSet = !json[QString("HomeOffensiveYardsPerPlay")].isNull() && m_home_offensive_yards_per_play_isValid;

    m_home_passer_rating_isValid = ::OpenAPI::fromJsonValue(m_home_passer_rating, json[QString("HomePasserRating")]);
    m_home_passer_rating_isSet = !json[QString("HomePasserRating")].isNull() && m_home_passer_rating_isValid;

    m_home_passes_defended_isValid = ::OpenAPI::fromJsonValue(m_home_passes_defended, json[QString("HomePassesDefended")]);
    m_home_passes_defended_isSet = !json[QString("HomePassesDefended")].isNull() && m_home_passes_defended_isValid;

    m_home_passing_attempts_isValid = ::OpenAPI::fromJsonValue(m_home_passing_attempts, json[QString("HomePassingAttempts")]);
    m_home_passing_attempts_isSet = !json[QString("HomePassingAttempts")].isNull() && m_home_passing_attempts_isValid;

    m_home_passing_completions_isValid = ::OpenAPI::fromJsonValue(m_home_passing_completions, json[QString("HomePassingCompletions")]);
    m_home_passing_completions_isSet = !json[QString("HomePassingCompletions")].isNull() && m_home_passing_completions_isValid;

    m_home_passing_interceptions_isValid = ::OpenAPI::fromJsonValue(m_home_passing_interceptions, json[QString("HomePassingInterceptions")]);
    m_home_passing_interceptions_isSet = !json[QString("HomePassingInterceptions")].isNull() && m_home_passing_interceptions_isValid;

    m_home_passing_touchdowns_isValid = ::OpenAPI::fromJsonValue(m_home_passing_touchdowns, json[QString("HomePassingTouchdowns")]);
    m_home_passing_touchdowns_isSet = !json[QString("HomePassingTouchdowns")].isNull() && m_home_passing_touchdowns_isValid;

    m_home_passing_yards_isValid = ::OpenAPI::fromJsonValue(m_home_passing_yards, json[QString("HomePassingYards")]);
    m_home_passing_yards_isSet = !json[QString("HomePassingYards")].isNull() && m_home_passing_yards_isValid;

    m_home_passing_yards_per_attempt_isValid = ::OpenAPI::fromJsonValue(m_home_passing_yards_per_attempt, json[QString("HomePassingYardsPerAttempt")]);
    m_home_passing_yards_per_attempt_isSet = !json[QString("HomePassingYardsPerAttempt")].isNull() && m_home_passing_yards_per_attempt_isValid;

    m_home_passing_yards_per_completion_isValid = ::OpenAPI::fromJsonValue(m_home_passing_yards_per_completion, json[QString("HomePassingYardsPerCompletion")]);
    m_home_passing_yards_per_completion_isSet = !json[QString("HomePassingYardsPerCompletion")].isNull() && m_home_passing_yards_per_completion_isValid;

    m_home_penalties_isValid = ::OpenAPI::fromJsonValue(m_home_penalties, json[QString("HomePenalties")]);
    m_home_penalties_isSet = !json[QString("HomePenalties")].isNull() && m_home_penalties_isValid;

    m_home_penalty_yards_isValid = ::OpenAPI::fromJsonValue(m_home_penalty_yards, json[QString("HomePenaltyYards")]);
    m_home_penalty_yards_isSet = !json[QString("HomePenaltyYards")].isNull() && m_home_penalty_yards_isValid;

    m_home_punt_average_isValid = ::OpenAPI::fromJsonValue(m_home_punt_average, json[QString("HomePuntAverage")]);
    m_home_punt_average_isSet = !json[QString("HomePuntAverage")].isNull() && m_home_punt_average_isValid;

    m_home_punt_net_average_isValid = ::OpenAPI::fromJsonValue(m_home_punt_net_average, json[QString("HomePuntNetAverage")]);
    m_home_punt_net_average_isSet = !json[QString("HomePuntNetAverage")].isNull() && m_home_punt_net_average_isValid;

    m_home_punt_net_yards_isValid = ::OpenAPI::fromJsonValue(m_home_punt_net_yards, json[QString("HomePuntNetYards")]);
    m_home_punt_net_yards_isSet = !json[QString("HomePuntNetYards")].isNull() && m_home_punt_net_yards_isValid;

    m_home_punt_return_long_isValid = ::OpenAPI::fromJsonValue(m_home_punt_return_long, json[QString("HomePuntReturnLong")]);
    m_home_punt_return_long_isSet = !json[QString("HomePuntReturnLong")].isNull() && m_home_punt_return_long_isValid;

    m_home_punt_return_touchdowns_isValid = ::OpenAPI::fromJsonValue(m_home_punt_return_touchdowns, json[QString("HomePuntReturnTouchdowns")]);
    m_home_punt_return_touchdowns_isSet = !json[QString("HomePuntReturnTouchdowns")].isNull() && m_home_punt_return_touchdowns_isValid;

    m_home_punt_return_yards_isValid = ::OpenAPI::fromJsonValue(m_home_punt_return_yards, json[QString("HomePuntReturnYards")]);
    m_home_punt_return_yards_isSet = !json[QString("HomePuntReturnYards")].isNull() && m_home_punt_return_yards_isValid;

    m_home_punt_returns_isValid = ::OpenAPI::fromJsonValue(m_home_punt_returns, json[QString("HomePuntReturns")]);
    m_home_punt_returns_isSet = !json[QString("HomePuntReturns")].isNull() && m_home_punt_returns_isValid;

    m_home_punt_yards_isValid = ::OpenAPI::fromJsonValue(m_home_punt_yards, json[QString("HomePuntYards")]);
    m_home_punt_yards_isSet = !json[QString("HomePuntYards")].isNull() && m_home_punt_yards_isValid;

    m_home_punts_isValid = ::OpenAPI::fromJsonValue(m_home_punts, json[QString("HomePunts")]);
    m_home_punts_isSet = !json[QString("HomePunts")].isNull() && m_home_punts_isValid;

    m_home_punts_had_blocked_isValid = ::OpenAPI::fromJsonValue(m_home_punts_had_blocked, json[QString("HomePuntsHadBlocked")]);
    m_home_punts_had_blocked_isSet = !json[QString("HomePuntsHadBlocked")].isNull() && m_home_punts_had_blocked_isValid;

    m_home_quarterback_hits_isValid = ::OpenAPI::fromJsonValue(m_home_quarterback_hits, json[QString("HomeQuarterbackHits")]);
    m_home_quarterback_hits_isSet = !json[QString("HomeQuarterbackHits")].isNull() && m_home_quarterback_hits_isValid;

    m_home_red_zone_attempts_isValid = ::OpenAPI::fromJsonValue(m_home_red_zone_attempts, json[QString("HomeRedZoneAttempts")]);
    m_home_red_zone_attempts_isSet = !json[QString("HomeRedZoneAttempts")].isNull() && m_home_red_zone_attempts_isValid;

    m_home_red_zone_conversions_isValid = ::OpenAPI::fromJsonValue(m_home_red_zone_conversions, json[QString("HomeRedZoneConversions")]);
    m_home_red_zone_conversions_isSet = !json[QString("HomeRedZoneConversions")].isNull() && m_home_red_zone_conversions_isValid;

    m_home_return_yards_isValid = ::OpenAPI::fromJsonValue(m_home_return_yards, json[QString("HomeReturnYards")]);
    m_home_return_yards_isSet = !json[QString("HomeReturnYards")].isNull() && m_home_return_yards_isValid;

    m_home_rushing_attempts_isValid = ::OpenAPI::fromJsonValue(m_home_rushing_attempts, json[QString("HomeRushingAttempts")]);
    m_home_rushing_attempts_isSet = !json[QString("HomeRushingAttempts")].isNull() && m_home_rushing_attempts_isValid;

    m_home_rushing_touchdowns_isValid = ::OpenAPI::fromJsonValue(m_home_rushing_touchdowns, json[QString("HomeRushingTouchdowns")]);
    m_home_rushing_touchdowns_isSet = !json[QString("HomeRushingTouchdowns")].isNull() && m_home_rushing_touchdowns_isValid;

    m_home_rushing_yards_isValid = ::OpenAPI::fromJsonValue(m_home_rushing_yards, json[QString("HomeRushingYards")]);
    m_home_rushing_yards_isSet = !json[QString("HomeRushingYards")].isNull() && m_home_rushing_yards_isValid;

    m_home_rushing_yards_per_attempt_isValid = ::OpenAPI::fromJsonValue(m_home_rushing_yards_per_attempt, json[QString("HomeRushingYardsPerAttempt")]);
    m_home_rushing_yards_per_attempt_isSet = !json[QString("HomeRushingYardsPerAttempt")].isNull() && m_home_rushing_yards_per_attempt_isValid;

    m_home_sack_yards_isValid = ::OpenAPI::fromJsonValue(m_home_sack_yards, json[QString("HomeSackYards")]);
    m_home_sack_yards_isSet = !json[QString("HomeSackYards")].isNull() && m_home_sack_yards_isValid;

    m_home_sacks_isValid = ::OpenAPI::fromJsonValue(m_home_sacks, json[QString("HomeSacks")]);
    m_home_sacks_isSet = !json[QString("HomeSacks")].isNull() && m_home_sacks_isValid;

    m_home_safeties_isValid = ::OpenAPI::fromJsonValue(m_home_safeties, json[QString("HomeSafeties")]);
    m_home_safeties_isSet = !json[QString("HomeSafeties")].isNull() && m_home_safeties_isValid;

    m_home_score_isValid = ::OpenAPI::fromJsonValue(m_home_score, json[QString("HomeScore")]);
    m_home_score_isSet = !json[QString("HomeScore")].isNull() && m_home_score_isValid;

    m_home_score_overtime_isValid = ::OpenAPI::fromJsonValue(m_home_score_overtime, json[QString("HomeScoreOvertime")]);
    m_home_score_overtime_isSet = !json[QString("HomeScoreOvertime")].isNull() && m_home_score_overtime_isValid;

    m_home_score_quarter1_isValid = ::OpenAPI::fromJsonValue(m_home_score_quarter1, json[QString("HomeScoreQuarter1")]);
    m_home_score_quarter1_isSet = !json[QString("HomeScoreQuarter1")].isNull() && m_home_score_quarter1_isValid;

    m_home_score_quarter2_isValid = ::OpenAPI::fromJsonValue(m_home_score_quarter2, json[QString("HomeScoreQuarter2")]);
    m_home_score_quarter2_isSet = !json[QString("HomeScoreQuarter2")].isNull() && m_home_score_quarter2_isValid;

    m_home_score_quarter3_isValid = ::OpenAPI::fromJsonValue(m_home_score_quarter3, json[QString("HomeScoreQuarter3")]);
    m_home_score_quarter3_isSet = !json[QString("HomeScoreQuarter3")].isNull() && m_home_score_quarter3_isValid;

    m_home_score_quarter4_isValid = ::OpenAPI::fromJsonValue(m_home_score_quarter4, json[QString("HomeScoreQuarter4")]);
    m_home_score_quarter4_isSet = !json[QString("HomeScoreQuarter4")].isNull() && m_home_score_quarter4_isValid;

    m_home_solo_tackles_isValid = ::OpenAPI::fromJsonValue(m_home_solo_tackles, json[QString("HomeSoloTackles")]);
    m_home_solo_tackles_isSet = !json[QString("HomeSoloTackles")].isNull() && m_home_solo_tackles_isValid;

    m_home_tackles_for_loss_isValid = ::OpenAPI::fromJsonValue(m_home_tackles_for_loss, json[QString("HomeTacklesForLoss")]);
    m_home_tackles_for_loss_isSet = !json[QString("HomeTacklesForLoss")].isNull() && m_home_tackles_for_loss_isValid;

    m_home_takeaways_isValid = ::OpenAPI::fromJsonValue(m_home_takeaways, json[QString("HomeTakeaways")]);
    m_home_takeaways_isSet = !json[QString("HomeTakeaways")].isNull() && m_home_takeaways_isValid;

    m_home_team_isValid = ::OpenAPI::fromJsonValue(m_home_team, json[QString("HomeTeam")]);
    m_home_team_isSet = !json[QString("HomeTeam")].isNull() && m_home_team_isValid;

    m_home_third_down_attempts_isValid = ::OpenAPI::fromJsonValue(m_home_third_down_attempts, json[QString("HomeThirdDownAttempts")]);
    m_home_third_down_attempts_isSet = !json[QString("HomeThirdDownAttempts")].isNull() && m_home_third_down_attempts_isValid;

    m_home_third_down_conversions_isValid = ::OpenAPI::fromJsonValue(m_home_third_down_conversions, json[QString("HomeThirdDownConversions")]);
    m_home_third_down_conversions_isSet = !json[QString("HomeThirdDownConversions")].isNull() && m_home_third_down_conversions_isValid;

    m_home_third_down_percentage_isValid = ::OpenAPI::fromJsonValue(m_home_third_down_percentage, json[QString("HomeThirdDownPercentage")]);
    m_home_third_down_percentage_isSet = !json[QString("HomeThirdDownPercentage")].isNull() && m_home_third_down_percentage_isValid;

    m_home_time_of_possession_isValid = ::OpenAPI::fromJsonValue(m_home_time_of_possession, json[QString("HomeTimeOfPossession")]);
    m_home_time_of_possession_isSet = !json[QString("HomeTimeOfPossession")].isNull() && m_home_time_of_possession_isValid;

    m_home_times_sacked_isValid = ::OpenAPI::fromJsonValue(m_home_times_sacked, json[QString("HomeTimesSacked")]);
    m_home_times_sacked_isSet = !json[QString("HomeTimesSacked")].isNull() && m_home_times_sacked_isValid;

    m_home_times_sacked_yards_isValid = ::OpenAPI::fromJsonValue(m_home_times_sacked_yards, json[QString("HomeTimesSackedYards")]);
    m_home_times_sacked_yards_isSet = !json[QString("HomeTimesSackedYards")].isNull() && m_home_times_sacked_yards_isValid;

    m_home_touchdowns_isValid = ::OpenAPI::fromJsonValue(m_home_touchdowns, json[QString("HomeTouchdowns")]);
    m_home_touchdowns_isSet = !json[QString("HomeTouchdowns")].isNull() && m_home_touchdowns_isValid;

    m_home_turnover_differential_isValid = ::OpenAPI::fromJsonValue(m_home_turnover_differential, json[QString("HomeTurnoverDifferential")]);
    m_home_turnover_differential_isSet = !json[QString("HomeTurnoverDifferential")].isNull() && m_home_turnover_differential_isValid;

    m_home_two_point_conversion_returns_isValid = ::OpenAPI::fromJsonValue(m_home_two_point_conversion_returns, json[QString("HomeTwoPointConversionReturns")]);
    m_home_two_point_conversion_returns_isSet = !json[QString("HomeTwoPointConversionReturns")].isNull() && m_home_two_point_conversion_returns_isValid;

    m_humidity_isValid = ::OpenAPI::fromJsonValue(m_humidity, json[QString("Humidity")]);
    m_humidity_isSet = !json[QString("Humidity")].isNull() && m_humidity_isValid;

    m_is_game_over_isValid = ::OpenAPI::fromJsonValue(m_is_game_over, json[QString("IsGameOver")]);
    m_is_game_over_isSet = !json[QString("IsGameOver")].isNull() && m_is_game_over_isValid;

    m_over_under_isValid = ::OpenAPI::fromJsonValue(m_over_under, json[QString("OverUnder")]);
    m_over_under_isSet = !json[QString("OverUnder")].isNull() && m_over_under_isValid;

    m_playing_surface_isValid = ::OpenAPI::fromJsonValue(m_playing_surface, json[QString("PlayingSurface")]);
    m_playing_surface_isSet = !json[QString("PlayingSurface")].isNull() && m_playing_surface_isValid;

    m_point_spread_isValid = ::OpenAPI::fromJsonValue(m_point_spread, json[QString("PointSpread")]);
    m_point_spread_isSet = !json[QString("PointSpread")].isNull() && m_point_spread_isValid;

    m_score_id_isValid = ::OpenAPI::fromJsonValue(m_score_id, json[QString("ScoreID")]);
    m_score_id_isSet = !json[QString("ScoreID")].isNull() && m_score_id_isValid;

    m_season_isValid = ::OpenAPI::fromJsonValue(m_season, json[QString("Season")]);
    m_season_isSet = !json[QString("Season")].isNull() && m_season_isValid;

    m_season_type_isValid = ::OpenAPI::fromJsonValue(m_season_type, json[QString("SeasonType")]);
    m_season_type_isSet = !json[QString("SeasonType")].isNull() && m_season_type_isValid;

    m_stadium_isValid = ::OpenAPI::fromJsonValue(m_stadium, json[QString("Stadium")]);
    m_stadium_isSet = !json[QString("Stadium")].isNull() && m_stadium_isValid;

    m_stadium_details_isValid = ::OpenAPI::fromJsonValue(m_stadium_details, json[QString("StadiumDetails")]);
    m_stadium_details_isSet = !json[QString("StadiumDetails")].isNull() && m_stadium_details_isValid;

    m_stadium_id_isValid = ::OpenAPI::fromJsonValue(m_stadium_id, json[QString("StadiumID")]);
    m_stadium_id_isSet = !json[QString("StadiumID")].isNull() && m_stadium_id_isValid;

    m_temperature_isValid = ::OpenAPI::fromJsonValue(m_temperature, json[QString("Temperature")]);
    m_temperature_isSet = !json[QString("Temperature")].isNull() && m_temperature_isValid;

    m_total_score_isValid = ::OpenAPI::fromJsonValue(m_total_score, json[QString("TotalScore")]);
    m_total_score_isSet = !json[QString("TotalScore")].isNull() && m_total_score_isValid;

    m_week_isValid = ::OpenAPI::fromJsonValue(m_week, json[QString("Week")]);
    m_week_isSet = !json[QString("Week")].isNull() && m_week_isValid;

    m_wind_speed_isValid = ::OpenAPI::fromJsonValue(m_wind_speed, json[QString("WindSpeed")]);
    m_wind_speed_isSet = !json[QString("WindSpeed")].isNull() && m_wind_speed_isValid;
}

QString OAIGame::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGame::asJsonObject() const {
    QJsonObject obj;
    if (m_away_assisted_tackles_isSet) {
        obj.insert(QString("AwayAssistedTackles"), ::OpenAPI::toJsonValue(m_away_assisted_tackles));
    }
    if (m_away_blocked_kick_return_touchdowns_isSet) {
        obj.insert(QString("AwayBlockedKickReturnTouchdowns"), ::OpenAPI::toJsonValue(m_away_blocked_kick_return_touchdowns));
    }
    if (m_away_blocked_kick_return_yards_isSet) {
        obj.insert(QString("AwayBlockedKickReturnYards"), ::OpenAPI::toJsonValue(m_away_blocked_kick_return_yards));
    }
    if (m_away_blocked_kicks_isSet) {
        obj.insert(QString("AwayBlockedKicks"), ::OpenAPI::toJsonValue(m_away_blocked_kicks));
    }
    if (m_away_completion_percentage_isSet) {
        obj.insert(QString("AwayCompletionPercentage"), ::OpenAPI::toJsonValue(m_away_completion_percentage));
    }
    if (m_away_extra_point_kicking_attempts_isSet) {
        obj.insert(QString("AwayExtraPointKickingAttempts"), ::OpenAPI::toJsonValue(m_away_extra_point_kicking_attempts));
    }
    if (m_away_extra_point_kicking_conversions_isSet) {
        obj.insert(QString("AwayExtraPointKickingConversions"), ::OpenAPI::toJsonValue(m_away_extra_point_kicking_conversions));
    }
    if (m_away_extra_point_passing_attempts_isSet) {
        obj.insert(QString("AwayExtraPointPassingAttempts"), ::OpenAPI::toJsonValue(m_away_extra_point_passing_attempts));
    }
    if (m_away_extra_point_passing_conversions_isSet) {
        obj.insert(QString("AwayExtraPointPassingConversions"), ::OpenAPI::toJsonValue(m_away_extra_point_passing_conversions));
    }
    if (m_away_extra_point_rushing_attempts_isSet) {
        obj.insert(QString("AwayExtraPointRushingAttempts"), ::OpenAPI::toJsonValue(m_away_extra_point_rushing_attempts));
    }
    if (m_away_extra_point_rushing_conversions_isSet) {
        obj.insert(QString("AwayExtraPointRushingConversions"), ::OpenAPI::toJsonValue(m_away_extra_point_rushing_conversions));
    }
    if (m_away_extra_points_had_blocked_isSet) {
        obj.insert(QString("AwayExtraPointsHadBlocked"), ::OpenAPI::toJsonValue(m_away_extra_points_had_blocked));
    }
    if (m_away_field_goal_attempts_isSet) {
        obj.insert(QString("AwayFieldGoalAttempts"), ::OpenAPI::toJsonValue(m_away_field_goal_attempts));
    }
    if (m_away_field_goal_return_touchdowns_isSet) {
        obj.insert(QString("AwayFieldGoalReturnTouchdowns"), ::OpenAPI::toJsonValue(m_away_field_goal_return_touchdowns));
    }
    if (m_away_field_goal_return_yards_isSet) {
        obj.insert(QString("AwayFieldGoalReturnYards"), ::OpenAPI::toJsonValue(m_away_field_goal_return_yards));
    }
    if (m_away_field_goals_had_blocked_isSet) {
        obj.insert(QString("AwayFieldGoalsHadBlocked"), ::OpenAPI::toJsonValue(m_away_field_goals_had_blocked));
    }
    if (m_away_field_goals_made_isSet) {
        obj.insert(QString("AwayFieldGoalsMade"), ::OpenAPI::toJsonValue(m_away_field_goals_made));
    }
    if (m_away_first_downs_isSet) {
        obj.insert(QString("AwayFirstDowns"), ::OpenAPI::toJsonValue(m_away_first_downs));
    }
    if (m_away_first_downs_by_passing_isSet) {
        obj.insert(QString("AwayFirstDownsByPassing"), ::OpenAPI::toJsonValue(m_away_first_downs_by_passing));
    }
    if (m_away_first_downs_by_penalty_isSet) {
        obj.insert(QString("AwayFirstDownsByPenalty"), ::OpenAPI::toJsonValue(m_away_first_downs_by_penalty));
    }
    if (m_away_first_downs_by_rushing_isSet) {
        obj.insert(QString("AwayFirstDownsByRushing"), ::OpenAPI::toJsonValue(m_away_first_downs_by_rushing));
    }
    if (m_away_fourth_down_attempts_isSet) {
        obj.insert(QString("AwayFourthDownAttempts"), ::OpenAPI::toJsonValue(m_away_fourth_down_attempts));
    }
    if (m_away_fourth_down_conversions_isSet) {
        obj.insert(QString("AwayFourthDownConversions"), ::OpenAPI::toJsonValue(m_away_fourth_down_conversions));
    }
    if (m_away_fourth_down_percentage_isSet) {
        obj.insert(QString("AwayFourthDownPercentage"), ::OpenAPI::toJsonValue(m_away_fourth_down_percentage));
    }
    if (m_away_fumble_return_touchdowns_isSet) {
        obj.insert(QString("AwayFumbleReturnTouchdowns"), ::OpenAPI::toJsonValue(m_away_fumble_return_touchdowns));
    }
    if (m_away_fumble_return_yards_isSet) {
        obj.insert(QString("AwayFumbleReturnYards"), ::OpenAPI::toJsonValue(m_away_fumble_return_yards));
    }
    if (m_away_fumbles_isSet) {
        obj.insert(QString("AwayFumbles"), ::OpenAPI::toJsonValue(m_away_fumbles));
    }
    if (m_away_fumbles_forced_isSet) {
        obj.insert(QString("AwayFumblesForced"), ::OpenAPI::toJsonValue(m_away_fumbles_forced));
    }
    if (m_away_fumbles_lost_isSet) {
        obj.insert(QString("AwayFumblesLost"), ::OpenAPI::toJsonValue(m_away_fumbles_lost));
    }
    if (m_away_fumbles_recovered_isSet) {
        obj.insert(QString("AwayFumblesRecovered"), ::OpenAPI::toJsonValue(m_away_fumbles_recovered));
    }
    if (m_away_giveaways_isSet) {
        obj.insert(QString("AwayGiveaways"), ::OpenAPI::toJsonValue(m_away_giveaways));
    }
    if (m_away_goal_to_go_attempts_isSet) {
        obj.insert(QString("AwayGoalToGoAttempts"), ::OpenAPI::toJsonValue(m_away_goal_to_go_attempts));
    }
    if (m_away_goal_to_go_conversions_isSet) {
        obj.insert(QString("AwayGoalToGoConversions"), ::OpenAPI::toJsonValue(m_away_goal_to_go_conversions));
    }
    if (m_away_interception_return_touchdowns_isSet) {
        obj.insert(QString("AwayInterceptionReturnTouchdowns"), ::OpenAPI::toJsonValue(m_away_interception_return_touchdowns));
    }
    if (m_away_interception_return_yards_isSet) {
        obj.insert(QString("AwayInterceptionReturnYards"), ::OpenAPI::toJsonValue(m_away_interception_return_yards));
    }
    if (m_away_interception_returns_isSet) {
        obj.insert(QString("AwayInterceptionReturns"), ::OpenAPI::toJsonValue(m_away_interception_returns));
    }
    if (m_away_kick_return_long_isSet) {
        obj.insert(QString("AwayKickReturnLong"), ::OpenAPI::toJsonValue(m_away_kick_return_long));
    }
    if (m_away_kick_return_touchdowns_isSet) {
        obj.insert(QString("AwayKickReturnTouchdowns"), ::OpenAPI::toJsonValue(m_away_kick_return_touchdowns));
    }
    if (m_away_kick_return_yards_isSet) {
        obj.insert(QString("AwayKickReturnYards"), ::OpenAPI::toJsonValue(m_away_kick_return_yards));
    }
    if (m_away_kick_returns_isSet) {
        obj.insert(QString("AwayKickReturns"), ::OpenAPI::toJsonValue(m_away_kick_returns));
    }
    if (m_away_kickoff_touchbacks_isSet) {
        obj.insert(QString("AwayKickoffTouchbacks"), ::OpenAPI::toJsonValue(m_away_kickoff_touchbacks));
    }
    if (m_away_kickoffs_isSet) {
        obj.insert(QString("AwayKickoffs"), ::OpenAPI::toJsonValue(m_away_kickoffs));
    }
    if (m_away_kickoffs_in_end_zone_isSet) {
        obj.insert(QString("AwayKickoffsInEndZone"), ::OpenAPI::toJsonValue(m_away_kickoffs_in_end_zone));
    }
    if (m_away_offensive_plays_isSet) {
        obj.insert(QString("AwayOffensivePlays"), ::OpenAPI::toJsonValue(m_away_offensive_plays));
    }
    if (m_away_offensive_yards_isSet) {
        obj.insert(QString("AwayOffensiveYards"), ::OpenAPI::toJsonValue(m_away_offensive_yards));
    }
    if (m_away_offensive_yards_per_play_isSet) {
        obj.insert(QString("AwayOffensiveYardsPerPlay"), ::OpenAPI::toJsonValue(m_away_offensive_yards_per_play));
    }
    if (m_away_passer_rating_isSet) {
        obj.insert(QString("AwayPasserRating"), ::OpenAPI::toJsonValue(m_away_passer_rating));
    }
    if (m_away_passes_defended_isSet) {
        obj.insert(QString("AwayPassesDefended"), ::OpenAPI::toJsonValue(m_away_passes_defended));
    }
    if (m_away_passing_attempts_isSet) {
        obj.insert(QString("AwayPassingAttempts"), ::OpenAPI::toJsonValue(m_away_passing_attempts));
    }
    if (m_away_passing_completions_isSet) {
        obj.insert(QString("AwayPassingCompletions"), ::OpenAPI::toJsonValue(m_away_passing_completions));
    }
    if (m_away_passing_interceptions_isSet) {
        obj.insert(QString("AwayPassingInterceptions"), ::OpenAPI::toJsonValue(m_away_passing_interceptions));
    }
    if (m_away_passing_touchdowns_isSet) {
        obj.insert(QString("AwayPassingTouchdowns"), ::OpenAPI::toJsonValue(m_away_passing_touchdowns));
    }
    if (m_away_passing_yards_isSet) {
        obj.insert(QString("AwayPassingYards"), ::OpenAPI::toJsonValue(m_away_passing_yards));
    }
    if (m_away_passing_yards_per_attempt_isSet) {
        obj.insert(QString("AwayPassingYardsPerAttempt"), ::OpenAPI::toJsonValue(m_away_passing_yards_per_attempt));
    }
    if (m_away_passing_yards_per_completion_isSet) {
        obj.insert(QString("AwayPassingYardsPerCompletion"), ::OpenAPI::toJsonValue(m_away_passing_yards_per_completion));
    }
    if (m_away_penalties_isSet) {
        obj.insert(QString("AwayPenalties"), ::OpenAPI::toJsonValue(m_away_penalties));
    }
    if (m_away_penalty_yards_isSet) {
        obj.insert(QString("AwayPenaltyYards"), ::OpenAPI::toJsonValue(m_away_penalty_yards));
    }
    if (m_away_punt_average_isSet) {
        obj.insert(QString("AwayPuntAverage"), ::OpenAPI::toJsonValue(m_away_punt_average));
    }
    if (m_away_punt_net_average_isSet) {
        obj.insert(QString("AwayPuntNetAverage"), ::OpenAPI::toJsonValue(m_away_punt_net_average));
    }
    if (m_away_punt_net_yards_isSet) {
        obj.insert(QString("AwayPuntNetYards"), ::OpenAPI::toJsonValue(m_away_punt_net_yards));
    }
    if (m_away_punt_return_long_isSet) {
        obj.insert(QString("AwayPuntReturnLong"), ::OpenAPI::toJsonValue(m_away_punt_return_long));
    }
    if (m_away_punt_return_touchdowns_isSet) {
        obj.insert(QString("AwayPuntReturnTouchdowns"), ::OpenAPI::toJsonValue(m_away_punt_return_touchdowns));
    }
    if (m_away_punt_return_yards_isSet) {
        obj.insert(QString("AwayPuntReturnYards"), ::OpenAPI::toJsonValue(m_away_punt_return_yards));
    }
    if (m_away_punt_returns_isSet) {
        obj.insert(QString("AwayPuntReturns"), ::OpenAPI::toJsonValue(m_away_punt_returns));
    }
    if (m_away_punt_yards_isSet) {
        obj.insert(QString("AwayPuntYards"), ::OpenAPI::toJsonValue(m_away_punt_yards));
    }
    if (m_away_punts_isSet) {
        obj.insert(QString("AwayPunts"), ::OpenAPI::toJsonValue(m_away_punts));
    }
    if (m_away_punts_had_blocked_isSet) {
        obj.insert(QString("AwayPuntsHadBlocked"), ::OpenAPI::toJsonValue(m_away_punts_had_blocked));
    }
    if (m_away_quarterback_hits_isSet) {
        obj.insert(QString("AwayQuarterbackHits"), ::OpenAPI::toJsonValue(m_away_quarterback_hits));
    }
    if (m_away_red_zone_attempts_isSet) {
        obj.insert(QString("AwayRedZoneAttempts"), ::OpenAPI::toJsonValue(m_away_red_zone_attempts));
    }
    if (m_away_red_zone_conversions_isSet) {
        obj.insert(QString("AwayRedZoneConversions"), ::OpenAPI::toJsonValue(m_away_red_zone_conversions));
    }
    if (m_away_return_yards_isSet) {
        obj.insert(QString("AwayReturnYards"), ::OpenAPI::toJsonValue(m_away_return_yards));
    }
    if (m_away_rushing_attempts_isSet) {
        obj.insert(QString("AwayRushingAttempts"), ::OpenAPI::toJsonValue(m_away_rushing_attempts));
    }
    if (m_away_rushing_touchdowns_isSet) {
        obj.insert(QString("AwayRushingTouchdowns"), ::OpenAPI::toJsonValue(m_away_rushing_touchdowns));
    }
    if (m_away_rushing_yards_isSet) {
        obj.insert(QString("AwayRushingYards"), ::OpenAPI::toJsonValue(m_away_rushing_yards));
    }
    if (m_away_rushing_yards_per_attempt_isSet) {
        obj.insert(QString("AwayRushingYardsPerAttempt"), ::OpenAPI::toJsonValue(m_away_rushing_yards_per_attempt));
    }
    if (m_away_sack_yards_isSet) {
        obj.insert(QString("AwaySackYards"), ::OpenAPI::toJsonValue(m_away_sack_yards));
    }
    if (m_away_sacks_isSet) {
        obj.insert(QString("AwaySacks"), ::OpenAPI::toJsonValue(m_away_sacks));
    }
    if (m_away_safeties_isSet) {
        obj.insert(QString("AwaySafeties"), ::OpenAPI::toJsonValue(m_away_safeties));
    }
    if (m_away_score_isSet) {
        obj.insert(QString("AwayScore"), ::OpenAPI::toJsonValue(m_away_score));
    }
    if (m_away_score_overtime_isSet) {
        obj.insert(QString("AwayScoreOvertime"), ::OpenAPI::toJsonValue(m_away_score_overtime));
    }
    if (m_away_score_quarter1_isSet) {
        obj.insert(QString("AwayScoreQuarter1"), ::OpenAPI::toJsonValue(m_away_score_quarter1));
    }
    if (m_away_score_quarter2_isSet) {
        obj.insert(QString("AwayScoreQuarter2"), ::OpenAPI::toJsonValue(m_away_score_quarter2));
    }
    if (m_away_score_quarter3_isSet) {
        obj.insert(QString("AwayScoreQuarter3"), ::OpenAPI::toJsonValue(m_away_score_quarter3));
    }
    if (m_away_score_quarter4_isSet) {
        obj.insert(QString("AwayScoreQuarter4"), ::OpenAPI::toJsonValue(m_away_score_quarter4));
    }
    if (m_away_solo_tackles_isSet) {
        obj.insert(QString("AwaySoloTackles"), ::OpenAPI::toJsonValue(m_away_solo_tackles));
    }
    if (m_away_tackles_for_loss_isSet) {
        obj.insert(QString("AwayTacklesForLoss"), ::OpenAPI::toJsonValue(m_away_tackles_for_loss));
    }
    if (m_away_takeaways_isSet) {
        obj.insert(QString("AwayTakeaways"), ::OpenAPI::toJsonValue(m_away_takeaways));
    }
    if (m_away_team_isSet) {
        obj.insert(QString("AwayTeam"), ::OpenAPI::toJsonValue(m_away_team));
    }
    if (m_away_third_down_attempts_isSet) {
        obj.insert(QString("AwayThirdDownAttempts"), ::OpenAPI::toJsonValue(m_away_third_down_attempts));
    }
    if (m_away_third_down_conversions_isSet) {
        obj.insert(QString("AwayThirdDownConversions"), ::OpenAPI::toJsonValue(m_away_third_down_conversions));
    }
    if (m_away_third_down_percentage_isSet) {
        obj.insert(QString("AwayThirdDownPercentage"), ::OpenAPI::toJsonValue(m_away_third_down_percentage));
    }
    if (m_away_time_of_possession_isSet) {
        obj.insert(QString("AwayTimeOfPossession"), ::OpenAPI::toJsonValue(m_away_time_of_possession));
    }
    if (m_away_times_sacked_isSet) {
        obj.insert(QString("AwayTimesSacked"), ::OpenAPI::toJsonValue(m_away_times_sacked));
    }
    if (m_away_times_sacked_yards_isSet) {
        obj.insert(QString("AwayTimesSackedYards"), ::OpenAPI::toJsonValue(m_away_times_sacked_yards));
    }
    if (m_away_touchdowns_isSet) {
        obj.insert(QString("AwayTouchdowns"), ::OpenAPI::toJsonValue(m_away_touchdowns));
    }
    if (m_away_turnover_differential_isSet) {
        obj.insert(QString("AwayTurnoverDifferential"), ::OpenAPI::toJsonValue(m_away_turnover_differential));
    }
    if (m_away_two_point_conversion_returns_isSet) {
        obj.insert(QString("AwayTwoPointConversionReturns"), ::OpenAPI::toJsonValue(m_away_two_point_conversion_returns));
    }
    if (m_date_isSet) {
        obj.insert(QString("Date"), ::OpenAPI::toJsonValue(m_date));
    }
    if (m_game_id_isSet) {
        obj.insert(QString("GameID"), ::OpenAPI::toJsonValue(m_game_id));
    }
    if (m_game_key_isSet) {
        obj.insert(QString("GameKey"), ::OpenAPI::toJsonValue(m_game_key));
    }
    if (m_home_assisted_tackles_isSet) {
        obj.insert(QString("HomeAssistedTackles"), ::OpenAPI::toJsonValue(m_home_assisted_tackles));
    }
    if (m_home_blocked_kick_return_touchdowns_isSet) {
        obj.insert(QString("HomeBlockedKickReturnTouchdowns"), ::OpenAPI::toJsonValue(m_home_blocked_kick_return_touchdowns));
    }
    if (m_home_blocked_kick_return_yards_isSet) {
        obj.insert(QString("HomeBlockedKickReturnYards"), ::OpenAPI::toJsonValue(m_home_blocked_kick_return_yards));
    }
    if (m_home_blocked_kicks_isSet) {
        obj.insert(QString("HomeBlockedKicks"), ::OpenAPI::toJsonValue(m_home_blocked_kicks));
    }
    if (m_home_completion_percentage_isSet) {
        obj.insert(QString("HomeCompletionPercentage"), ::OpenAPI::toJsonValue(m_home_completion_percentage));
    }
    if (m_home_extra_point_kicking_attempts_isSet) {
        obj.insert(QString("HomeExtraPointKickingAttempts"), ::OpenAPI::toJsonValue(m_home_extra_point_kicking_attempts));
    }
    if (m_home_extra_point_kicking_conversions_isSet) {
        obj.insert(QString("HomeExtraPointKickingConversions"), ::OpenAPI::toJsonValue(m_home_extra_point_kicking_conversions));
    }
    if (m_home_extra_point_passing_attempts_isSet) {
        obj.insert(QString("HomeExtraPointPassingAttempts"), ::OpenAPI::toJsonValue(m_home_extra_point_passing_attempts));
    }
    if (m_home_extra_point_passing_conversions_isSet) {
        obj.insert(QString("HomeExtraPointPassingConversions"), ::OpenAPI::toJsonValue(m_home_extra_point_passing_conversions));
    }
    if (m_home_extra_point_rushing_attempts_isSet) {
        obj.insert(QString("HomeExtraPointRushingAttempts"), ::OpenAPI::toJsonValue(m_home_extra_point_rushing_attempts));
    }
    if (m_home_extra_point_rushing_conversions_isSet) {
        obj.insert(QString("HomeExtraPointRushingConversions"), ::OpenAPI::toJsonValue(m_home_extra_point_rushing_conversions));
    }
    if (m_home_extra_points_had_blocked_isSet) {
        obj.insert(QString("HomeExtraPointsHadBlocked"), ::OpenAPI::toJsonValue(m_home_extra_points_had_blocked));
    }
    if (m_home_field_goal_attempts_isSet) {
        obj.insert(QString("HomeFieldGoalAttempts"), ::OpenAPI::toJsonValue(m_home_field_goal_attempts));
    }
    if (m_home_field_goal_return_touchdowns_isSet) {
        obj.insert(QString("HomeFieldGoalReturnTouchdowns"), ::OpenAPI::toJsonValue(m_home_field_goal_return_touchdowns));
    }
    if (m_home_field_goal_return_yards_isSet) {
        obj.insert(QString("HomeFieldGoalReturnYards"), ::OpenAPI::toJsonValue(m_home_field_goal_return_yards));
    }
    if (m_home_field_goals_had_blocked_isSet) {
        obj.insert(QString("HomeFieldGoalsHadBlocked"), ::OpenAPI::toJsonValue(m_home_field_goals_had_blocked));
    }
    if (m_home_field_goals_made_isSet) {
        obj.insert(QString("HomeFieldGoalsMade"), ::OpenAPI::toJsonValue(m_home_field_goals_made));
    }
    if (m_home_first_downs_isSet) {
        obj.insert(QString("HomeFirstDowns"), ::OpenAPI::toJsonValue(m_home_first_downs));
    }
    if (m_home_first_downs_by_passing_isSet) {
        obj.insert(QString("HomeFirstDownsByPassing"), ::OpenAPI::toJsonValue(m_home_first_downs_by_passing));
    }
    if (m_home_first_downs_by_penalty_isSet) {
        obj.insert(QString("HomeFirstDownsByPenalty"), ::OpenAPI::toJsonValue(m_home_first_downs_by_penalty));
    }
    if (m_home_first_downs_by_rushing_isSet) {
        obj.insert(QString("HomeFirstDownsByRushing"), ::OpenAPI::toJsonValue(m_home_first_downs_by_rushing));
    }
    if (m_home_fourth_down_attempts_isSet) {
        obj.insert(QString("HomeFourthDownAttempts"), ::OpenAPI::toJsonValue(m_home_fourth_down_attempts));
    }
    if (m_home_fourth_down_conversions_isSet) {
        obj.insert(QString("HomeFourthDownConversions"), ::OpenAPI::toJsonValue(m_home_fourth_down_conversions));
    }
    if (m_home_fourth_down_percentage_isSet) {
        obj.insert(QString("HomeFourthDownPercentage"), ::OpenAPI::toJsonValue(m_home_fourth_down_percentage));
    }
    if (m_home_fumble_return_touchdowns_isSet) {
        obj.insert(QString("HomeFumbleReturnTouchdowns"), ::OpenAPI::toJsonValue(m_home_fumble_return_touchdowns));
    }
    if (m_home_fumble_return_yards_isSet) {
        obj.insert(QString("HomeFumbleReturnYards"), ::OpenAPI::toJsonValue(m_home_fumble_return_yards));
    }
    if (m_home_fumbles_isSet) {
        obj.insert(QString("HomeFumbles"), ::OpenAPI::toJsonValue(m_home_fumbles));
    }
    if (m_home_fumbles_forced_isSet) {
        obj.insert(QString("HomeFumblesForced"), ::OpenAPI::toJsonValue(m_home_fumbles_forced));
    }
    if (m_home_fumbles_lost_isSet) {
        obj.insert(QString("HomeFumblesLost"), ::OpenAPI::toJsonValue(m_home_fumbles_lost));
    }
    if (m_home_fumbles_recovered_isSet) {
        obj.insert(QString("HomeFumblesRecovered"), ::OpenAPI::toJsonValue(m_home_fumbles_recovered));
    }
    if (m_home_giveaways_isSet) {
        obj.insert(QString("HomeGiveaways"), ::OpenAPI::toJsonValue(m_home_giveaways));
    }
    if (m_home_goal_to_go_attempts_isSet) {
        obj.insert(QString("HomeGoalToGoAttempts"), ::OpenAPI::toJsonValue(m_home_goal_to_go_attempts));
    }
    if (m_home_goal_to_go_conversions_isSet) {
        obj.insert(QString("HomeGoalToGoConversions"), ::OpenAPI::toJsonValue(m_home_goal_to_go_conversions));
    }
    if (m_home_interception_return_touchdowns_isSet) {
        obj.insert(QString("HomeInterceptionReturnTouchdowns"), ::OpenAPI::toJsonValue(m_home_interception_return_touchdowns));
    }
    if (m_home_interception_return_yards_isSet) {
        obj.insert(QString("HomeInterceptionReturnYards"), ::OpenAPI::toJsonValue(m_home_interception_return_yards));
    }
    if (m_home_interception_returns_isSet) {
        obj.insert(QString("HomeInterceptionReturns"), ::OpenAPI::toJsonValue(m_home_interception_returns));
    }
    if (m_home_kick_return_long_isSet) {
        obj.insert(QString("HomeKickReturnLong"), ::OpenAPI::toJsonValue(m_home_kick_return_long));
    }
    if (m_home_kick_return_touchdowns_isSet) {
        obj.insert(QString("HomeKickReturnTouchdowns"), ::OpenAPI::toJsonValue(m_home_kick_return_touchdowns));
    }
    if (m_home_kick_return_yards_isSet) {
        obj.insert(QString("HomeKickReturnYards"), ::OpenAPI::toJsonValue(m_home_kick_return_yards));
    }
    if (m_home_kick_returns_isSet) {
        obj.insert(QString("HomeKickReturns"), ::OpenAPI::toJsonValue(m_home_kick_returns));
    }
    if (m_home_kickoff_touchbacks_isSet) {
        obj.insert(QString("HomeKickoffTouchbacks"), ::OpenAPI::toJsonValue(m_home_kickoff_touchbacks));
    }
    if (m_home_kickoffs_isSet) {
        obj.insert(QString("HomeKickoffs"), ::OpenAPI::toJsonValue(m_home_kickoffs));
    }
    if (m_home_kickoffs_in_end_zone_isSet) {
        obj.insert(QString("HomeKickoffsInEndZone"), ::OpenAPI::toJsonValue(m_home_kickoffs_in_end_zone));
    }
    if (m_home_offensive_plays_isSet) {
        obj.insert(QString("HomeOffensivePlays"), ::OpenAPI::toJsonValue(m_home_offensive_plays));
    }
    if (m_home_offensive_yards_isSet) {
        obj.insert(QString("HomeOffensiveYards"), ::OpenAPI::toJsonValue(m_home_offensive_yards));
    }
    if (m_home_offensive_yards_per_play_isSet) {
        obj.insert(QString("HomeOffensiveYardsPerPlay"), ::OpenAPI::toJsonValue(m_home_offensive_yards_per_play));
    }
    if (m_home_passer_rating_isSet) {
        obj.insert(QString("HomePasserRating"), ::OpenAPI::toJsonValue(m_home_passer_rating));
    }
    if (m_home_passes_defended_isSet) {
        obj.insert(QString("HomePassesDefended"), ::OpenAPI::toJsonValue(m_home_passes_defended));
    }
    if (m_home_passing_attempts_isSet) {
        obj.insert(QString("HomePassingAttempts"), ::OpenAPI::toJsonValue(m_home_passing_attempts));
    }
    if (m_home_passing_completions_isSet) {
        obj.insert(QString("HomePassingCompletions"), ::OpenAPI::toJsonValue(m_home_passing_completions));
    }
    if (m_home_passing_interceptions_isSet) {
        obj.insert(QString("HomePassingInterceptions"), ::OpenAPI::toJsonValue(m_home_passing_interceptions));
    }
    if (m_home_passing_touchdowns_isSet) {
        obj.insert(QString("HomePassingTouchdowns"), ::OpenAPI::toJsonValue(m_home_passing_touchdowns));
    }
    if (m_home_passing_yards_isSet) {
        obj.insert(QString("HomePassingYards"), ::OpenAPI::toJsonValue(m_home_passing_yards));
    }
    if (m_home_passing_yards_per_attempt_isSet) {
        obj.insert(QString("HomePassingYardsPerAttempt"), ::OpenAPI::toJsonValue(m_home_passing_yards_per_attempt));
    }
    if (m_home_passing_yards_per_completion_isSet) {
        obj.insert(QString("HomePassingYardsPerCompletion"), ::OpenAPI::toJsonValue(m_home_passing_yards_per_completion));
    }
    if (m_home_penalties_isSet) {
        obj.insert(QString("HomePenalties"), ::OpenAPI::toJsonValue(m_home_penalties));
    }
    if (m_home_penalty_yards_isSet) {
        obj.insert(QString("HomePenaltyYards"), ::OpenAPI::toJsonValue(m_home_penalty_yards));
    }
    if (m_home_punt_average_isSet) {
        obj.insert(QString("HomePuntAverage"), ::OpenAPI::toJsonValue(m_home_punt_average));
    }
    if (m_home_punt_net_average_isSet) {
        obj.insert(QString("HomePuntNetAverage"), ::OpenAPI::toJsonValue(m_home_punt_net_average));
    }
    if (m_home_punt_net_yards_isSet) {
        obj.insert(QString("HomePuntNetYards"), ::OpenAPI::toJsonValue(m_home_punt_net_yards));
    }
    if (m_home_punt_return_long_isSet) {
        obj.insert(QString("HomePuntReturnLong"), ::OpenAPI::toJsonValue(m_home_punt_return_long));
    }
    if (m_home_punt_return_touchdowns_isSet) {
        obj.insert(QString("HomePuntReturnTouchdowns"), ::OpenAPI::toJsonValue(m_home_punt_return_touchdowns));
    }
    if (m_home_punt_return_yards_isSet) {
        obj.insert(QString("HomePuntReturnYards"), ::OpenAPI::toJsonValue(m_home_punt_return_yards));
    }
    if (m_home_punt_returns_isSet) {
        obj.insert(QString("HomePuntReturns"), ::OpenAPI::toJsonValue(m_home_punt_returns));
    }
    if (m_home_punt_yards_isSet) {
        obj.insert(QString("HomePuntYards"), ::OpenAPI::toJsonValue(m_home_punt_yards));
    }
    if (m_home_punts_isSet) {
        obj.insert(QString("HomePunts"), ::OpenAPI::toJsonValue(m_home_punts));
    }
    if (m_home_punts_had_blocked_isSet) {
        obj.insert(QString("HomePuntsHadBlocked"), ::OpenAPI::toJsonValue(m_home_punts_had_blocked));
    }
    if (m_home_quarterback_hits_isSet) {
        obj.insert(QString("HomeQuarterbackHits"), ::OpenAPI::toJsonValue(m_home_quarterback_hits));
    }
    if (m_home_red_zone_attempts_isSet) {
        obj.insert(QString("HomeRedZoneAttempts"), ::OpenAPI::toJsonValue(m_home_red_zone_attempts));
    }
    if (m_home_red_zone_conversions_isSet) {
        obj.insert(QString("HomeRedZoneConversions"), ::OpenAPI::toJsonValue(m_home_red_zone_conversions));
    }
    if (m_home_return_yards_isSet) {
        obj.insert(QString("HomeReturnYards"), ::OpenAPI::toJsonValue(m_home_return_yards));
    }
    if (m_home_rushing_attempts_isSet) {
        obj.insert(QString("HomeRushingAttempts"), ::OpenAPI::toJsonValue(m_home_rushing_attempts));
    }
    if (m_home_rushing_touchdowns_isSet) {
        obj.insert(QString("HomeRushingTouchdowns"), ::OpenAPI::toJsonValue(m_home_rushing_touchdowns));
    }
    if (m_home_rushing_yards_isSet) {
        obj.insert(QString("HomeRushingYards"), ::OpenAPI::toJsonValue(m_home_rushing_yards));
    }
    if (m_home_rushing_yards_per_attempt_isSet) {
        obj.insert(QString("HomeRushingYardsPerAttempt"), ::OpenAPI::toJsonValue(m_home_rushing_yards_per_attempt));
    }
    if (m_home_sack_yards_isSet) {
        obj.insert(QString("HomeSackYards"), ::OpenAPI::toJsonValue(m_home_sack_yards));
    }
    if (m_home_sacks_isSet) {
        obj.insert(QString("HomeSacks"), ::OpenAPI::toJsonValue(m_home_sacks));
    }
    if (m_home_safeties_isSet) {
        obj.insert(QString("HomeSafeties"), ::OpenAPI::toJsonValue(m_home_safeties));
    }
    if (m_home_score_isSet) {
        obj.insert(QString("HomeScore"), ::OpenAPI::toJsonValue(m_home_score));
    }
    if (m_home_score_overtime_isSet) {
        obj.insert(QString("HomeScoreOvertime"), ::OpenAPI::toJsonValue(m_home_score_overtime));
    }
    if (m_home_score_quarter1_isSet) {
        obj.insert(QString("HomeScoreQuarter1"), ::OpenAPI::toJsonValue(m_home_score_quarter1));
    }
    if (m_home_score_quarter2_isSet) {
        obj.insert(QString("HomeScoreQuarter2"), ::OpenAPI::toJsonValue(m_home_score_quarter2));
    }
    if (m_home_score_quarter3_isSet) {
        obj.insert(QString("HomeScoreQuarter3"), ::OpenAPI::toJsonValue(m_home_score_quarter3));
    }
    if (m_home_score_quarter4_isSet) {
        obj.insert(QString("HomeScoreQuarter4"), ::OpenAPI::toJsonValue(m_home_score_quarter4));
    }
    if (m_home_solo_tackles_isSet) {
        obj.insert(QString("HomeSoloTackles"), ::OpenAPI::toJsonValue(m_home_solo_tackles));
    }
    if (m_home_tackles_for_loss_isSet) {
        obj.insert(QString("HomeTacklesForLoss"), ::OpenAPI::toJsonValue(m_home_tackles_for_loss));
    }
    if (m_home_takeaways_isSet) {
        obj.insert(QString("HomeTakeaways"), ::OpenAPI::toJsonValue(m_home_takeaways));
    }
    if (m_home_team_isSet) {
        obj.insert(QString("HomeTeam"), ::OpenAPI::toJsonValue(m_home_team));
    }
    if (m_home_third_down_attempts_isSet) {
        obj.insert(QString("HomeThirdDownAttempts"), ::OpenAPI::toJsonValue(m_home_third_down_attempts));
    }
    if (m_home_third_down_conversions_isSet) {
        obj.insert(QString("HomeThirdDownConversions"), ::OpenAPI::toJsonValue(m_home_third_down_conversions));
    }
    if (m_home_third_down_percentage_isSet) {
        obj.insert(QString("HomeThirdDownPercentage"), ::OpenAPI::toJsonValue(m_home_third_down_percentage));
    }
    if (m_home_time_of_possession_isSet) {
        obj.insert(QString("HomeTimeOfPossession"), ::OpenAPI::toJsonValue(m_home_time_of_possession));
    }
    if (m_home_times_sacked_isSet) {
        obj.insert(QString("HomeTimesSacked"), ::OpenAPI::toJsonValue(m_home_times_sacked));
    }
    if (m_home_times_sacked_yards_isSet) {
        obj.insert(QString("HomeTimesSackedYards"), ::OpenAPI::toJsonValue(m_home_times_sacked_yards));
    }
    if (m_home_touchdowns_isSet) {
        obj.insert(QString("HomeTouchdowns"), ::OpenAPI::toJsonValue(m_home_touchdowns));
    }
    if (m_home_turnover_differential_isSet) {
        obj.insert(QString("HomeTurnoverDifferential"), ::OpenAPI::toJsonValue(m_home_turnover_differential));
    }
    if (m_home_two_point_conversion_returns_isSet) {
        obj.insert(QString("HomeTwoPointConversionReturns"), ::OpenAPI::toJsonValue(m_home_two_point_conversion_returns));
    }
    if (m_humidity_isSet) {
        obj.insert(QString("Humidity"), ::OpenAPI::toJsonValue(m_humidity));
    }
    if (m_is_game_over_isSet) {
        obj.insert(QString("IsGameOver"), ::OpenAPI::toJsonValue(m_is_game_over));
    }
    if (m_over_under_isSet) {
        obj.insert(QString("OverUnder"), ::OpenAPI::toJsonValue(m_over_under));
    }
    if (m_playing_surface_isSet) {
        obj.insert(QString("PlayingSurface"), ::OpenAPI::toJsonValue(m_playing_surface));
    }
    if (m_point_spread_isSet) {
        obj.insert(QString("PointSpread"), ::OpenAPI::toJsonValue(m_point_spread));
    }
    if (m_score_id_isSet) {
        obj.insert(QString("ScoreID"), ::OpenAPI::toJsonValue(m_score_id));
    }
    if (m_season_isSet) {
        obj.insert(QString("Season"), ::OpenAPI::toJsonValue(m_season));
    }
    if (m_season_type_isSet) {
        obj.insert(QString("SeasonType"), ::OpenAPI::toJsonValue(m_season_type));
    }
    if (m_stadium_isSet) {
        obj.insert(QString("Stadium"), ::OpenAPI::toJsonValue(m_stadium));
    }
    if (m_stadium_details.isSet()) {
        obj.insert(QString("StadiumDetails"), ::OpenAPI::toJsonValue(m_stadium_details));
    }
    if (m_stadium_id_isSet) {
        obj.insert(QString("StadiumID"), ::OpenAPI::toJsonValue(m_stadium_id));
    }
    if (m_temperature_isSet) {
        obj.insert(QString("Temperature"), ::OpenAPI::toJsonValue(m_temperature));
    }
    if (m_total_score_isSet) {
        obj.insert(QString("TotalScore"), ::OpenAPI::toJsonValue(m_total_score));
    }
    if (m_week_isSet) {
        obj.insert(QString("Week"), ::OpenAPI::toJsonValue(m_week));
    }
    if (m_wind_speed_isSet) {
        obj.insert(QString("WindSpeed"), ::OpenAPI::toJsonValue(m_wind_speed));
    }
    return obj;
}

qint32 OAIGame::getAwayAssistedTackles() const {
    return m_away_assisted_tackles;
}
void OAIGame::setAwayAssistedTackles(const qint32 &away_assisted_tackles) {
    m_away_assisted_tackles = away_assisted_tackles;
    m_away_assisted_tackles_isSet = true;
}

bool OAIGame::is_away_assisted_tackles_Set() const{
    return m_away_assisted_tackles_isSet;
}

bool OAIGame::is_away_assisted_tackles_Valid() const{
    return m_away_assisted_tackles_isValid;
}

qint32 OAIGame::getAwayBlockedKickReturnTouchdowns() const {
    return m_away_blocked_kick_return_touchdowns;
}
void OAIGame::setAwayBlockedKickReturnTouchdowns(const qint32 &away_blocked_kick_return_touchdowns) {
    m_away_blocked_kick_return_touchdowns = away_blocked_kick_return_touchdowns;
    m_away_blocked_kick_return_touchdowns_isSet = true;
}

bool OAIGame::is_away_blocked_kick_return_touchdowns_Set() const{
    return m_away_blocked_kick_return_touchdowns_isSet;
}

bool OAIGame::is_away_blocked_kick_return_touchdowns_Valid() const{
    return m_away_blocked_kick_return_touchdowns_isValid;
}

qint32 OAIGame::getAwayBlockedKickReturnYards() const {
    return m_away_blocked_kick_return_yards;
}
void OAIGame::setAwayBlockedKickReturnYards(const qint32 &away_blocked_kick_return_yards) {
    m_away_blocked_kick_return_yards = away_blocked_kick_return_yards;
    m_away_blocked_kick_return_yards_isSet = true;
}

bool OAIGame::is_away_blocked_kick_return_yards_Set() const{
    return m_away_blocked_kick_return_yards_isSet;
}

bool OAIGame::is_away_blocked_kick_return_yards_Valid() const{
    return m_away_blocked_kick_return_yards_isValid;
}

qint32 OAIGame::getAwayBlockedKicks() const {
    return m_away_blocked_kicks;
}
void OAIGame::setAwayBlockedKicks(const qint32 &away_blocked_kicks) {
    m_away_blocked_kicks = away_blocked_kicks;
    m_away_blocked_kicks_isSet = true;
}

bool OAIGame::is_away_blocked_kicks_Set() const{
    return m_away_blocked_kicks_isSet;
}

bool OAIGame::is_away_blocked_kicks_Valid() const{
    return m_away_blocked_kicks_isValid;
}

double OAIGame::getAwayCompletionPercentage() const {
    return m_away_completion_percentage;
}
void OAIGame::setAwayCompletionPercentage(const double &away_completion_percentage) {
    m_away_completion_percentage = away_completion_percentage;
    m_away_completion_percentage_isSet = true;
}

bool OAIGame::is_away_completion_percentage_Set() const{
    return m_away_completion_percentage_isSet;
}

bool OAIGame::is_away_completion_percentage_Valid() const{
    return m_away_completion_percentage_isValid;
}

qint32 OAIGame::getAwayExtraPointKickingAttempts() const {
    return m_away_extra_point_kicking_attempts;
}
void OAIGame::setAwayExtraPointKickingAttempts(const qint32 &away_extra_point_kicking_attempts) {
    m_away_extra_point_kicking_attempts = away_extra_point_kicking_attempts;
    m_away_extra_point_kicking_attempts_isSet = true;
}

bool OAIGame::is_away_extra_point_kicking_attempts_Set() const{
    return m_away_extra_point_kicking_attempts_isSet;
}

bool OAIGame::is_away_extra_point_kicking_attempts_Valid() const{
    return m_away_extra_point_kicking_attempts_isValid;
}

qint32 OAIGame::getAwayExtraPointKickingConversions() const {
    return m_away_extra_point_kicking_conversions;
}
void OAIGame::setAwayExtraPointKickingConversions(const qint32 &away_extra_point_kicking_conversions) {
    m_away_extra_point_kicking_conversions = away_extra_point_kicking_conversions;
    m_away_extra_point_kicking_conversions_isSet = true;
}

bool OAIGame::is_away_extra_point_kicking_conversions_Set() const{
    return m_away_extra_point_kicking_conversions_isSet;
}

bool OAIGame::is_away_extra_point_kicking_conversions_Valid() const{
    return m_away_extra_point_kicking_conversions_isValid;
}

qint32 OAIGame::getAwayExtraPointPassingAttempts() const {
    return m_away_extra_point_passing_attempts;
}
void OAIGame::setAwayExtraPointPassingAttempts(const qint32 &away_extra_point_passing_attempts) {
    m_away_extra_point_passing_attempts = away_extra_point_passing_attempts;
    m_away_extra_point_passing_attempts_isSet = true;
}

bool OAIGame::is_away_extra_point_passing_attempts_Set() const{
    return m_away_extra_point_passing_attempts_isSet;
}

bool OAIGame::is_away_extra_point_passing_attempts_Valid() const{
    return m_away_extra_point_passing_attempts_isValid;
}

qint32 OAIGame::getAwayExtraPointPassingConversions() const {
    return m_away_extra_point_passing_conversions;
}
void OAIGame::setAwayExtraPointPassingConversions(const qint32 &away_extra_point_passing_conversions) {
    m_away_extra_point_passing_conversions = away_extra_point_passing_conversions;
    m_away_extra_point_passing_conversions_isSet = true;
}

bool OAIGame::is_away_extra_point_passing_conversions_Set() const{
    return m_away_extra_point_passing_conversions_isSet;
}

bool OAIGame::is_away_extra_point_passing_conversions_Valid() const{
    return m_away_extra_point_passing_conversions_isValid;
}

qint32 OAIGame::getAwayExtraPointRushingAttempts() const {
    return m_away_extra_point_rushing_attempts;
}
void OAIGame::setAwayExtraPointRushingAttempts(const qint32 &away_extra_point_rushing_attempts) {
    m_away_extra_point_rushing_attempts = away_extra_point_rushing_attempts;
    m_away_extra_point_rushing_attempts_isSet = true;
}

bool OAIGame::is_away_extra_point_rushing_attempts_Set() const{
    return m_away_extra_point_rushing_attempts_isSet;
}

bool OAIGame::is_away_extra_point_rushing_attempts_Valid() const{
    return m_away_extra_point_rushing_attempts_isValid;
}

qint32 OAIGame::getAwayExtraPointRushingConversions() const {
    return m_away_extra_point_rushing_conversions;
}
void OAIGame::setAwayExtraPointRushingConversions(const qint32 &away_extra_point_rushing_conversions) {
    m_away_extra_point_rushing_conversions = away_extra_point_rushing_conversions;
    m_away_extra_point_rushing_conversions_isSet = true;
}

bool OAIGame::is_away_extra_point_rushing_conversions_Set() const{
    return m_away_extra_point_rushing_conversions_isSet;
}

bool OAIGame::is_away_extra_point_rushing_conversions_Valid() const{
    return m_away_extra_point_rushing_conversions_isValid;
}

qint32 OAIGame::getAwayExtraPointsHadBlocked() const {
    return m_away_extra_points_had_blocked;
}
void OAIGame::setAwayExtraPointsHadBlocked(const qint32 &away_extra_points_had_blocked) {
    m_away_extra_points_had_blocked = away_extra_points_had_blocked;
    m_away_extra_points_had_blocked_isSet = true;
}

bool OAIGame::is_away_extra_points_had_blocked_Set() const{
    return m_away_extra_points_had_blocked_isSet;
}

bool OAIGame::is_away_extra_points_had_blocked_Valid() const{
    return m_away_extra_points_had_blocked_isValid;
}

qint32 OAIGame::getAwayFieldGoalAttempts() const {
    return m_away_field_goal_attempts;
}
void OAIGame::setAwayFieldGoalAttempts(const qint32 &away_field_goal_attempts) {
    m_away_field_goal_attempts = away_field_goal_attempts;
    m_away_field_goal_attempts_isSet = true;
}

bool OAIGame::is_away_field_goal_attempts_Set() const{
    return m_away_field_goal_attempts_isSet;
}

bool OAIGame::is_away_field_goal_attempts_Valid() const{
    return m_away_field_goal_attempts_isValid;
}

qint32 OAIGame::getAwayFieldGoalReturnTouchdowns() const {
    return m_away_field_goal_return_touchdowns;
}
void OAIGame::setAwayFieldGoalReturnTouchdowns(const qint32 &away_field_goal_return_touchdowns) {
    m_away_field_goal_return_touchdowns = away_field_goal_return_touchdowns;
    m_away_field_goal_return_touchdowns_isSet = true;
}

bool OAIGame::is_away_field_goal_return_touchdowns_Set() const{
    return m_away_field_goal_return_touchdowns_isSet;
}

bool OAIGame::is_away_field_goal_return_touchdowns_Valid() const{
    return m_away_field_goal_return_touchdowns_isValid;
}

qint32 OAIGame::getAwayFieldGoalReturnYards() const {
    return m_away_field_goal_return_yards;
}
void OAIGame::setAwayFieldGoalReturnYards(const qint32 &away_field_goal_return_yards) {
    m_away_field_goal_return_yards = away_field_goal_return_yards;
    m_away_field_goal_return_yards_isSet = true;
}

bool OAIGame::is_away_field_goal_return_yards_Set() const{
    return m_away_field_goal_return_yards_isSet;
}

bool OAIGame::is_away_field_goal_return_yards_Valid() const{
    return m_away_field_goal_return_yards_isValid;
}

qint32 OAIGame::getAwayFieldGoalsHadBlocked() const {
    return m_away_field_goals_had_blocked;
}
void OAIGame::setAwayFieldGoalsHadBlocked(const qint32 &away_field_goals_had_blocked) {
    m_away_field_goals_had_blocked = away_field_goals_had_blocked;
    m_away_field_goals_had_blocked_isSet = true;
}

bool OAIGame::is_away_field_goals_had_blocked_Set() const{
    return m_away_field_goals_had_blocked_isSet;
}

bool OAIGame::is_away_field_goals_had_blocked_Valid() const{
    return m_away_field_goals_had_blocked_isValid;
}

qint32 OAIGame::getAwayFieldGoalsMade() const {
    return m_away_field_goals_made;
}
void OAIGame::setAwayFieldGoalsMade(const qint32 &away_field_goals_made) {
    m_away_field_goals_made = away_field_goals_made;
    m_away_field_goals_made_isSet = true;
}

bool OAIGame::is_away_field_goals_made_Set() const{
    return m_away_field_goals_made_isSet;
}

bool OAIGame::is_away_field_goals_made_Valid() const{
    return m_away_field_goals_made_isValid;
}

qint32 OAIGame::getAwayFirstDowns() const {
    return m_away_first_downs;
}
void OAIGame::setAwayFirstDowns(const qint32 &away_first_downs) {
    m_away_first_downs = away_first_downs;
    m_away_first_downs_isSet = true;
}

bool OAIGame::is_away_first_downs_Set() const{
    return m_away_first_downs_isSet;
}

bool OAIGame::is_away_first_downs_Valid() const{
    return m_away_first_downs_isValid;
}

qint32 OAIGame::getAwayFirstDownsByPassing() const {
    return m_away_first_downs_by_passing;
}
void OAIGame::setAwayFirstDownsByPassing(const qint32 &away_first_downs_by_passing) {
    m_away_first_downs_by_passing = away_first_downs_by_passing;
    m_away_first_downs_by_passing_isSet = true;
}

bool OAIGame::is_away_first_downs_by_passing_Set() const{
    return m_away_first_downs_by_passing_isSet;
}

bool OAIGame::is_away_first_downs_by_passing_Valid() const{
    return m_away_first_downs_by_passing_isValid;
}

qint32 OAIGame::getAwayFirstDownsByPenalty() const {
    return m_away_first_downs_by_penalty;
}
void OAIGame::setAwayFirstDownsByPenalty(const qint32 &away_first_downs_by_penalty) {
    m_away_first_downs_by_penalty = away_first_downs_by_penalty;
    m_away_first_downs_by_penalty_isSet = true;
}

bool OAIGame::is_away_first_downs_by_penalty_Set() const{
    return m_away_first_downs_by_penalty_isSet;
}

bool OAIGame::is_away_first_downs_by_penalty_Valid() const{
    return m_away_first_downs_by_penalty_isValid;
}

qint32 OAIGame::getAwayFirstDownsByRushing() const {
    return m_away_first_downs_by_rushing;
}
void OAIGame::setAwayFirstDownsByRushing(const qint32 &away_first_downs_by_rushing) {
    m_away_first_downs_by_rushing = away_first_downs_by_rushing;
    m_away_first_downs_by_rushing_isSet = true;
}

bool OAIGame::is_away_first_downs_by_rushing_Set() const{
    return m_away_first_downs_by_rushing_isSet;
}

bool OAIGame::is_away_first_downs_by_rushing_Valid() const{
    return m_away_first_downs_by_rushing_isValid;
}

qint32 OAIGame::getAwayFourthDownAttempts() const {
    return m_away_fourth_down_attempts;
}
void OAIGame::setAwayFourthDownAttempts(const qint32 &away_fourth_down_attempts) {
    m_away_fourth_down_attempts = away_fourth_down_attempts;
    m_away_fourth_down_attempts_isSet = true;
}

bool OAIGame::is_away_fourth_down_attempts_Set() const{
    return m_away_fourth_down_attempts_isSet;
}

bool OAIGame::is_away_fourth_down_attempts_Valid() const{
    return m_away_fourth_down_attempts_isValid;
}

qint32 OAIGame::getAwayFourthDownConversions() const {
    return m_away_fourth_down_conversions;
}
void OAIGame::setAwayFourthDownConversions(const qint32 &away_fourth_down_conversions) {
    m_away_fourth_down_conversions = away_fourth_down_conversions;
    m_away_fourth_down_conversions_isSet = true;
}

bool OAIGame::is_away_fourth_down_conversions_Set() const{
    return m_away_fourth_down_conversions_isSet;
}

bool OAIGame::is_away_fourth_down_conversions_Valid() const{
    return m_away_fourth_down_conversions_isValid;
}

double OAIGame::getAwayFourthDownPercentage() const {
    return m_away_fourth_down_percentage;
}
void OAIGame::setAwayFourthDownPercentage(const double &away_fourth_down_percentage) {
    m_away_fourth_down_percentage = away_fourth_down_percentage;
    m_away_fourth_down_percentage_isSet = true;
}

bool OAIGame::is_away_fourth_down_percentage_Set() const{
    return m_away_fourth_down_percentage_isSet;
}

bool OAIGame::is_away_fourth_down_percentage_Valid() const{
    return m_away_fourth_down_percentage_isValid;
}

qint32 OAIGame::getAwayFumbleReturnTouchdowns() const {
    return m_away_fumble_return_touchdowns;
}
void OAIGame::setAwayFumbleReturnTouchdowns(const qint32 &away_fumble_return_touchdowns) {
    m_away_fumble_return_touchdowns = away_fumble_return_touchdowns;
    m_away_fumble_return_touchdowns_isSet = true;
}

bool OAIGame::is_away_fumble_return_touchdowns_Set() const{
    return m_away_fumble_return_touchdowns_isSet;
}

bool OAIGame::is_away_fumble_return_touchdowns_Valid() const{
    return m_away_fumble_return_touchdowns_isValid;
}

qint32 OAIGame::getAwayFumbleReturnYards() const {
    return m_away_fumble_return_yards;
}
void OAIGame::setAwayFumbleReturnYards(const qint32 &away_fumble_return_yards) {
    m_away_fumble_return_yards = away_fumble_return_yards;
    m_away_fumble_return_yards_isSet = true;
}

bool OAIGame::is_away_fumble_return_yards_Set() const{
    return m_away_fumble_return_yards_isSet;
}

bool OAIGame::is_away_fumble_return_yards_Valid() const{
    return m_away_fumble_return_yards_isValid;
}

qint32 OAIGame::getAwayFumbles() const {
    return m_away_fumbles;
}
void OAIGame::setAwayFumbles(const qint32 &away_fumbles) {
    m_away_fumbles = away_fumbles;
    m_away_fumbles_isSet = true;
}

bool OAIGame::is_away_fumbles_Set() const{
    return m_away_fumbles_isSet;
}

bool OAIGame::is_away_fumbles_Valid() const{
    return m_away_fumbles_isValid;
}

qint32 OAIGame::getAwayFumblesForced() const {
    return m_away_fumbles_forced;
}
void OAIGame::setAwayFumblesForced(const qint32 &away_fumbles_forced) {
    m_away_fumbles_forced = away_fumbles_forced;
    m_away_fumbles_forced_isSet = true;
}

bool OAIGame::is_away_fumbles_forced_Set() const{
    return m_away_fumbles_forced_isSet;
}

bool OAIGame::is_away_fumbles_forced_Valid() const{
    return m_away_fumbles_forced_isValid;
}

qint32 OAIGame::getAwayFumblesLost() const {
    return m_away_fumbles_lost;
}
void OAIGame::setAwayFumblesLost(const qint32 &away_fumbles_lost) {
    m_away_fumbles_lost = away_fumbles_lost;
    m_away_fumbles_lost_isSet = true;
}

bool OAIGame::is_away_fumbles_lost_Set() const{
    return m_away_fumbles_lost_isSet;
}

bool OAIGame::is_away_fumbles_lost_Valid() const{
    return m_away_fumbles_lost_isValid;
}

qint32 OAIGame::getAwayFumblesRecovered() const {
    return m_away_fumbles_recovered;
}
void OAIGame::setAwayFumblesRecovered(const qint32 &away_fumbles_recovered) {
    m_away_fumbles_recovered = away_fumbles_recovered;
    m_away_fumbles_recovered_isSet = true;
}

bool OAIGame::is_away_fumbles_recovered_Set() const{
    return m_away_fumbles_recovered_isSet;
}

bool OAIGame::is_away_fumbles_recovered_Valid() const{
    return m_away_fumbles_recovered_isValid;
}

qint32 OAIGame::getAwayGiveaways() const {
    return m_away_giveaways;
}
void OAIGame::setAwayGiveaways(const qint32 &away_giveaways) {
    m_away_giveaways = away_giveaways;
    m_away_giveaways_isSet = true;
}

bool OAIGame::is_away_giveaways_Set() const{
    return m_away_giveaways_isSet;
}

bool OAIGame::is_away_giveaways_Valid() const{
    return m_away_giveaways_isValid;
}

qint32 OAIGame::getAwayGoalToGoAttempts() const {
    return m_away_goal_to_go_attempts;
}
void OAIGame::setAwayGoalToGoAttempts(const qint32 &away_goal_to_go_attempts) {
    m_away_goal_to_go_attempts = away_goal_to_go_attempts;
    m_away_goal_to_go_attempts_isSet = true;
}

bool OAIGame::is_away_goal_to_go_attempts_Set() const{
    return m_away_goal_to_go_attempts_isSet;
}

bool OAIGame::is_away_goal_to_go_attempts_Valid() const{
    return m_away_goal_to_go_attempts_isValid;
}

qint32 OAIGame::getAwayGoalToGoConversions() const {
    return m_away_goal_to_go_conversions;
}
void OAIGame::setAwayGoalToGoConversions(const qint32 &away_goal_to_go_conversions) {
    m_away_goal_to_go_conversions = away_goal_to_go_conversions;
    m_away_goal_to_go_conversions_isSet = true;
}

bool OAIGame::is_away_goal_to_go_conversions_Set() const{
    return m_away_goal_to_go_conversions_isSet;
}

bool OAIGame::is_away_goal_to_go_conversions_Valid() const{
    return m_away_goal_to_go_conversions_isValid;
}

qint32 OAIGame::getAwayInterceptionReturnTouchdowns() const {
    return m_away_interception_return_touchdowns;
}
void OAIGame::setAwayInterceptionReturnTouchdowns(const qint32 &away_interception_return_touchdowns) {
    m_away_interception_return_touchdowns = away_interception_return_touchdowns;
    m_away_interception_return_touchdowns_isSet = true;
}

bool OAIGame::is_away_interception_return_touchdowns_Set() const{
    return m_away_interception_return_touchdowns_isSet;
}

bool OAIGame::is_away_interception_return_touchdowns_Valid() const{
    return m_away_interception_return_touchdowns_isValid;
}

qint32 OAIGame::getAwayInterceptionReturnYards() const {
    return m_away_interception_return_yards;
}
void OAIGame::setAwayInterceptionReturnYards(const qint32 &away_interception_return_yards) {
    m_away_interception_return_yards = away_interception_return_yards;
    m_away_interception_return_yards_isSet = true;
}

bool OAIGame::is_away_interception_return_yards_Set() const{
    return m_away_interception_return_yards_isSet;
}

bool OAIGame::is_away_interception_return_yards_Valid() const{
    return m_away_interception_return_yards_isValid;
}

qint32 OAIGame::getAwayInterceptionReturns() const {
    return m_away_interception_returns;
}
void OAIGame::setAwayInterceptionReturns(const qint32 &away_interception_returns) {
    m_away_interception_returns = away_interception_returns;
    m_away_interception_returns_isSet = true;
}

bool OAIGame::is_away_interception_returns_Set() const{
    return m_away_interception_returns_isSet;
}

bool OAIGame::is_away_interception_returns_Valid() const{
    return m_away_interception_returns_isValid;
}

qint32 OAIGame::getAwayKickReturnLong() const {
    return m_away_kick_return_long;
}
void OAIGame::setAwayKickReturnLong(const qint32 &away_kick_return_long) {
    m_away_kick_return_long = away_kick_return_long;
    m_away_kick_return_long_isSet = true;
}

bool OAIGame::is_away_kick_return_long_Set() const{
    return m_away_kick_return_long_isSet;
}

bool OAIGame::is_away_kick_return_long_Valid() const{
    return m_away_kick_return_long_isValid;
}

qint32 OAIGame::getAwayKickReturnTouchdowns() const {
    return m_away_kick_return_touchdowns;
}
void OAIGame::setAwayKickReturnTouchdowns(const qint32 &away_kick_return_touchdowns) {
    m_away_kick_return_touchdowns = away_kick_return_touchdowns;
    m_away_kick_return_touchdowns_isSet = true;
}

bool OAIGame::is_away_kick_return_touchdowns_Set() const{
    return m_away_kick_return_touchdowns_isSet;
}

bool OAIGame::is_away_kick_return_touchdowns_Valid() const{
    return m_away_kick_return_touchdowns_isValid;
}

qint32 OAIGame::getAwayKickReturnYards() const {
    return m_away_kick_return_yards;
}
void OAIGame::setAwayKickReturnYards(const qint32 &away_kick_return_yards) {
    m_away_kick_return_yards = away_kick_return_yards;
    m_away_kick_return_yards_isSet = true;
}

bool OAIGame::is_away_kick_return_yards_Set() const{
    return m_away_kick_return_yards_isSet;
}

bool OAIGame::is_away_kick_return_yards_Valid() const{
    return m_away_kick_return_yards_isValid;
}

qint32 OAIGame::getAwayKickReturns() const {
    return m_away_kick_returns;
}
void OAIGame::setAwayKickReturns(const qint32 &away_kick_returns) {
    m_away_kick_returns = away_kick_returns;
    m_away_kick_returns_isSet = true;
}

bool OAIGame::is_away_kick_returns_Set() const{
    return m_away_kick_returns_isSet;
}

bool OAIGame::is_away_kick_returns_Valid() const{
    return m_away_kick_returns_isValid;
}

qint32 OAIGame::getAwayKickoffTouchbacks() const {
    return m_away_kickoff_touchbacks;
}
void OAIGame::setAwayKickoffTouchbacks(const qint32 &away_kickoff_touchbacks) {
    m_away_kickoff_touchbacks = away_kickoff_touchbacks;
    m_away_kickoff_touchbacks_isSet = true;
}

bool OAIGame::is_away_kickoff_touchbacks_Set() const{
    return m_away_kickoff_touchbacks_isSet;
}

bool OAIGame::is_away_kickoff_touchbacks_Valid() const{
    return m_away_kickoff_touchbacks_isValid;
}

qint32 OAIGame::getAwayKickoffs() const {
    return m_away_kickoffs;
}
void OAIGame::setAwayKickoffs(const qint32 &away_kickoffs) {
    m_away_kickoffs = away_kickoffs;
    m_away_kickoffs_isSet = true;
}

bool OAIGame::is_away_kickoffs_Set() const{
    return m_away_kickoffs_isSet;
}

bool OAIGame::is_away_kickoffs_Valid() const{
    return m_away_kickoffs_isValid;
}

qint32 OAIGame::getAwayKickoffsInEndZone() const {
    return m_away_kickoffs_in_end_zone;
}
void OAIGame::setAwayKickoffsInEndZone(const qint32 &away_kickoffs_in_end_zone) {
    m_away_kickoffs_in_end_zone = away_kickoffs_in_end_zone;
    m_away_kickoffs_in_end_zone_isSet = true;
}

bool OAIGame::is_away_kickoffs_in_end_zone_Set() const{
    return m_away_kickoffs_in_end_zone_isSet;
}

bool OAIGame::is_away_kickoffs_in_end_zone_Valid() const{
    return m_away_kickoffs_in_end_zone_isValid;
}

qint32 OAIGame::getAwayOffensivePlays() const {
    return m_away_offensive_plays;
}
void OAIGame::setAwayOffensivePlays(const qint32 &away_offensive_plays) {
    m_away_offensive_plays = away_offensive_plays;
    m_away_offensive_plays_isSet = true;
}

bool OAIGame::is_away_offensive_plays_Set() const{
    return m_away_offensive_plays_isSet;
}

bool OAIGame::is_away_offensive_plays_Valid() const{
    return m_away_offensive_plays_isValid;
}

qint32 OAIGame::getAwayOffensiveYards() const {
    return m_away_offensive_yards;
}
void OAIGame::setAwayOffensiveYards(const qint32 &away_offensive_yards) {
    m_away_offensive_yards = away_offensive_yards;
    m_away_offensive_yards_isSet = true;
}

bool OAIGame::is_away_offensive_yards_Set() const{
    return m_away_offensive_yards_isSet;
}

bool OAIGame::is_away_offensive_yards_Valid() const{
    return m_away_offensive_yards_isValid;
}

double OAIGame::getAwayOffensiveYardsPerPlay() const {
    return m_away_offensive_yards_per_play;
}
void OAIGame::setAwayOffensiveYardsPerPlay(const double &away_offensive_yards_per_play) {
    m_away_offensive_yards_per_play = away_offensive_yards_per_play;
    m_away_offensive_yards_per_play_isSet = true;
}

bool OAIGame::is_away_offensive_yards_per_play_Set() const{
    return m_away_offensive_yards_per_play_isSet;
}

bool OAIGame::is_away_offensive_yards_per_play_Valid() const{
    return m_away_offensive_yards_per_play_isValid;
}

double OAIGame::getAwayPasserRating() const {
    return m_away_passer_rating;
}
void OAIGame::setAwayPasserRating(const double &away_passer_rating) {
    m_away_passer_rating = away_passer_rating;
    m_away_passer_rating_isSet = true;
}

bool OAIGame::is_away_passer_rating_Set() const{
    return m_away_passer_rating_isSet;
}

bool OAIGame::is_away_passer_rating_Valid() const{
    return m_away_passer_rating_isValid;
}

qint32 OAIGame::getAwayPassesDefended() const {
    return m_away_passes_defended;
}
void OAIGame::setAwayPassesDefended(const qint32 &away_passes_defended) {
    m_away_passes_defended = away_passes_defended;
    m_away_passes_defended_isSet = true;
}

bool OAIGame::is_away_passes_defended_Set() const{
    return m_away_passes_defended_isSet;
}

bool OAIGame::is_away_passes_defended_Valid() const{
    return m_away_passes_defended_isValid;
}

qint32 OAIGame::getAwayPassingAttempts() const {
    return m_away_passing_attempts;
}
void OAIGame::setAwayPassingAttempts(const qint32 &away_passing_attempts) {
    m_away_passing_attempts = away_passing_attempts;
    m_away_passing_attempts_isSet = true;
}

bool OAIGame::is_away_passing_attempts_Set() const{
    return m_away_passing_attempts_isSet;
}

bool OAIGame::is_away_passing_attempts_Valid() const{
    return m_away_passing_attempts_isValid;
}

qint32 OAIGame::getAwayPassingCompletions() const {
    return m_away_passing_completions;
}
void OAIGame::setAwayPassingCompletions(const qint32 &away_passing_completions) {
    m_away_passing_completions = away_passing_completions;
    m_away_passing_completions_isSet = true;
}

bool OAIGame::is_away_passing_completions_Set() const{
    return m_away_passing_completions_isSet;
}

bool OAIGame::is_away_passing_completions_Valid() const{
    return m_away_passing_completions_isValid;
}

qint32 OAIGame::getAwayPassingInterceptions() const {
    return m_away_passing_interceptions;
}
void OAIGame::setAwayPassingInterceptions(const qint32 &away_passing_interceptions) {
    m_away_passing_interceptions = away_passing_interceptions;
    m_away_passing_interceptions_isSet = true;
}

bool OAIGame::is_away_passing_interceptions_Set() const{
    return m_away_passing_interceptions_isSet;
}

bool OAIGame::is_away_passing_interceptions_Valid() const{
    return m_away_passing_interceptions_isValid;
}

qint32 OAIGame::getAwayPassingTouchdowns() const {
    return m_away_passing_touchdowns;
}
void OAIGame::setAwayPassingTouchdowns(const qint32 &away_passing_touchdowns) {
    m_away_passing_touchdowns = away_passing_touchdowns;
    m_away_passing_touchdowns_isSet = true;
}

bool OAIGame::is_away_passing_touchdowns_Set() const{
    return m_away_passing_touchdowns_isSet;
}

bool OAIGame::is_away_passing_touchdowns_Valid() const{
    return m_away_passing_touchdowns_isValid;
}

qint32 OAIGame::getAwayPassingYards() const {
    return m_away_passing_yards;
}
void OAIGame::setAwayPassingYards(const qint32 &away_passing_yards) {
    m_away_passing_yards = away_passing_yards;
    m_away_passing_yards_isSet = true;
}

bool OAIGame::is_away_passing_yards_Set() const{
    return m_away_passing_yards_isSet;
}

bool OAIGame::is_away_passing_yards_Valid() const{
    return m_away_passing_yards_isValid;
}

double OAIGame::getAwayPassingYardsPerAttempt() const {
    return m_away_passing_yards_per_attempt;
}
void OAIGame::setAwayPassingYardsPerAttempt(const double &away_passing_yards_per_attempt) {
    m_away_passing_yards_per_attempt = away_passing_yards_per_attempt;
    m_away_passing_yards_per_attempt_isSet = true;
}

bool OAIGame::is_away_passing_yards_per_attempt_Set() const{
    return m_away_passing_yards_per_attempt_isSet;
}

bool OAIGame::is_away_passing_yards_per_attempt_Valid() const{
    return m_away_passing_yards_per_attempt_isValid;
}

double OAIGame::getAwayPassingYardsPerCompletion() const {
    return m_away_passing_yards_per_completion;
}
void OAIGame::setAwayPassingYardsPerCompletion(const double &away_passing_yards_per_completion) {
    m_away_passing_yards_per_completion = away_passing_yards_per_completion;
    m_away_passing_yards_per_completion_isSet = true;
}

bool OAIGame::is_away_passing_yards_per_completion_Set() const{
    return m_away_passing_yards_per_completion_isSet;
}

bool OAIGame::is_away_passing_yards_per_completion_Valid() const{
    return m_away_passing_yards_per_completion_isValid;
}

qint32 OAIGame::getAwayPenalties() const {
    return m_away_penalties;
}
void OAIGame::setAwayPenalties(const qint32 &away_penalties) {
    m_away_penalties = away_penalties;
    m_away_penalties_isSet = true;
}

bool OAIGame::is_away_penalties_Set() const{
    return m_away_penalties_isSet;
}

bool OAIGame::is_away_penalties_Valid() const{
    return m_away_penalties_isValid;
}

qint32 OAIGame::getAwayPenaltyYards() const {
    return m_away_penalty_yards;
}
void OAIGame::setAwayPenaltyYards(const qint32 &away_penalty_yards) {
    m_away_penalty_yards = away_penalty_yards;
    m_away_penalty_yards_isSet = true;
}

bool OAIGame::is_away_penalty_yards_Set() const{
    return m_away_penalty_yards_isSet;
}

bool OAIGame::is_away_penalty_yards_Valid() const{
    return m_away_penalty_yards_isValid;
}

double OAIGame::getAwayPuntAverage() const {
    return m_away_punt_average;
}
void OAIGame::setAwayPuntAverage(const double &away_punt_average) {
    m_away_punt_average = away_punt_average;
    m_away_punt_average_isSet = true;
}

bool OAIGame::is_away_punt_average_Set() const{
    return m_away_punt_average_isSet;
}

bool OAIGame::is_away_punt_average_Valid() const{
    return m_away_punt_average_isValid;
}

double OAIGame::getAwayPuntNetAverage() const {
    return m_away_punt_net_average;
}
void OAIGame::setAwayPuntNetAverage(const double &away_punt_net_average) {
    m_away_punt_net_average = away_punt_net_average;
    m_away_punt_net_average_isSet = true;
}

bool OAIGame::is_away_punt_net_average_Set() const{
    return m_away_punt_net_average_isSet;
}

bool OAIGame::is_away_punt_net_average_Valid() const{
    return m_away_punt_net_average_isValid;
}

qint32 OAIGame::getAwayPuntNetYards() const {
    return m_away_punt_net_yards;
}
void OAIGame::setAwayPuntNetYards(const qint32 &away_punt_net_yards) {
    m_away_punt_net_yards = away_punt_net_yards;
    m_away_punt_net_yards_isSet = true;
}

bool OAIGame::is_away_punt_net_yards_Set() const{
    return m_away_punt_net_yards_isSet;
}

bool OAIGame::is_away_punt_net_yards_Valid() const{
    return m_away_punt_net_yards_isValid;
}

qint32 OAIGame::getAwayPuntReturnLong() const {
    return m_away_punt_return_long;
}
void OAIGame::setAwayPuntReturnLong(const qint32 &away_punt_return_long) {
    m_away_punt_return_long = away_punt_return_long;
    m_away_punt_return_long_isSet = true;
}

bool OAIGame::is_away_punt_return_long_Set() const{
    return m_away_punt_return_long_isSet;
}

bool OAIGame::is_away_punt_return_long_Valid() const{
    return m_away_punt_return_long_isValid;
}

qint32 OAIGame::getAwayPuntReturnTouchdowns() const {
    return m_away_punt_return_touchdowns;
}
void OAIGame::setAwayPuntReturnTouchdowns(const qint32 &away_punt_return_touchdowns) {
    m_away_punt_return_touchdowns = away_punt_return_touchdowns;
    m_away_punt_return_touchdowns_isSet = true;
}

bool OAIGame::is_away_punt_return_touchdowns_Set() const{
    return m_away_punt_return_touchdowns_isSet;
}

bool OAIGame::is_away_punt_return_touchdowns_Valid() const{
    return m_away_punt_return_touchdowns_isValid;
}

qint32 OAIGame::getAwayPuntReturnYards() const {
    return m_away_punt_return_yards;
}
void OAIGame::setAwayPuntReturnYards(const qint32 &away_punt_return_yards) {
    m_away_punt_return_yards = away_punt_return_yards;
    m_away_punt_return_yards_isSet = true;
}

bool OAIGame::is_away_punt_return_yards_Set() const{
    return m_away_punt_return_yards_isSet;
}

bool OAIGame::is_away_punt_return_yards_Valid() const{
    return m_away_punt_return_yards_isValid;
}

qint32 OAIGame::getAwayPuntReturns() const {
    return m_away_punt_returns;
}
void OAIGame::setAwayPuntReturns(const qint32 &away_punt_returns) {
    m_away_punt_returns = away_punt_returns;
    m_away_punt_returns_isSet = true;
}

bool OAIGame::is_away_punt_returns_Set() const{
    return m_away_punt_returns_isSet;
}

bool OAIGame::is_away_punt_returns_Valid() const{
    return m_away_punt_returns_isValid;
}

qint32 OAIGame::getAwayPuntYards() const {
    return m_away_punt_yards;
}
void OAIGame::setAwayPuntYards(const qint32 &away_punt_yards) {
    m_away_punt_yards = away_punt_yards;
    m_away_punt_yards_isSet = true;
}

bool OAIGame::is_away_punt_yards_Set() const{
    return m_away_punt_yards_isSet;
}

bool OAIGame::is_away_punt_yards_Valid() const{
    return m_away_punt_yards_isValid;
}

qint32 OAIGame::getAwayPunts() const {
    return m_away_punts;
}
void OAIGame::setAwayPunts(const qint32 &away_punts) {
    m_away_punts = away_punts;
    m_away_punts_isSet = true;
}

bool OAIGame::is_away_punts_Set() const{
    return m_away_punts_isSet;
}

bool OAIGame::is_away_punts_Valid() const{
    return m_away_punts_isValid;
}

qint32 OAIGame::getAwayPuntsHadBlocked() const {
    return m_away_punts_had_blocked;
}
void OAIGame::setAwayPuntsHadBlocked(const qint32 &away_punts_had_blocked) {
    m_away_punts_had_blocked = away_punts_had_blocked;
    m_away_punts_had_blocked_isSet = true;
}

bool OAIGame::is_away_punts_had_blocked_Set() const{
    return m_away_punts_had_blocked_isSet;
}

bool OAIGame::is_away_punts_had_blocked_Valid() const{
    return m_away_punts_had_blocked_isValid;
}

qint32 OAIGame::getAwayQuarterbackHits() const {
    return m_away_quarterback_hits;
}
void OAIGame::setAwayQuarterbackHits(const qint32 &away_quarterback_hits) {
    m_away_quarterback_hits = away_quarterback_hits;
    m_away_quarterback_hits_isSet = true;
}

bool OAIGame::is_away_quarterback_hits_Set() const{
    return m_away_quarterback_hits_isSet;
}

bool OAIGame::is_away_quarterback_hits_Valid() const{
    return m_away_quarterback_hits_isValid;
}

qint32 OAIGame::getAwayRedZoneAttempts() const {
    return m_away_red_zone_attempts;
}
void OAIGame::setAwayRedZoneAttempts(const qint32 &away_red_zone_attempts) {
    m_away_red_zone_attempts = away_red_zone_attempts;
    m_away_red_zone_attempts_isSet = true;
}

bool OAIGame::is_away_red_zone_attempts_Set() const{
    return m_away_red_zone_attempts_isSet;
}

bool OAIGame::is_away_red_zone_attempts_Valid() const{
    return m_away_red_zone_attempts_isValid;
}

qint32 OAIGame::getAwayRedZoneConversions() const {
    return m_away_red_zone_conversions;
}
void OAIGame::setAwayRedZoneConversions(const qint32 &away_red_zone_conversions) {
    m_away_red_zone_conversions = away_red_zone_conversions;
    m_away_red_zone_conversions_isSet = true;
}

bool OAIGame::is_away_red_zone_conversions_Set() const{
    return m_away_red_zone_conversions_isSet;
}

bool OAIGame::is_away_red_zone_conversions_Valid() const{
    return m_away_red_zone_conversions_isValid;
}

qint32 OAIGame::getAwayReturnYards() const {
    return m_away_return_yards;
}
void OAIGame::setAwayReturnYards(const qint32 &away_return_yards) {
    m_away_return_yards = away_return_yards;
    m_away_return_yards_isSet = true;
}

bool OAIGame::is_away_return_yards_Set() const{
    return m_away_return_yards_isSet;
}

bool OAIGame::is_away_return_yards_Valid() const{
    return m_away_return_yards_isValid;
}

qint32 OAIGame::getAwayRushingAttempts() const {
    return m_away_rushing_attempts;
}
void OAIGame::setAwayRushingAttempts(const qint32 &away_rushing_attempts) {
    m_away_rushing_attempts = away_rushing_attempts;
    m_away_rushing_attempts_isSet = true;
}

bool OAIGame::is_away_rushing_attempts_Set() const{
    return m_away_rushing_attempts_isSet;
}

bool OAIGame::is_away_rushing_attempts_Valid() const{
    return m_away_rushing_attempts_isValid;
}

qint32 OAIGame::getAwayRushingTouchdowns() const {
    return m_away_rushing_touchdowns;
}
void OAIGame::setAwayRushingTouchdowns(const qint32 &away_rushing_touchdowns) {
    m_away_rushing_touchdowns = away_rushing_touchdowns;
    m_away_rushing_touchdowns_isSet = true;
}

bool OAIGame::is_away_rushing_touchdowns_Set() const{
    return m_away_rushing_touchdowns_isSet;
}

bool OAIGame::is_away_rushing_touchdowns_Valid() const{
    return m_away_rushing_touchdowns_isValid;
}

qint32 OAIGame::getAwayRushingYards() const {
    return m_away_rushing_yards;
}
void OAIGame::setAwayRushingYards(const qint32 &away_rushing_yards) {
    m_away_rushing_yards = away_rushing_yards;
    m_away_rushing_yards_isSet = true;
}

bool OAIGame::is_away_rushing_yards_Set() const{
    return m_away_rushing_yards_isSet;
}

bool OAIGame::is_away_rushing_yards_Valid() const{
    return m_away_rushing_yards_isValid;
}

double OAIGame::getAwayRushingYardsPerAttempt() const {
    return m_away_rushing_yards_per_attempt;
}
void OAIGame::setAwayRushingYardsPerAttempt(const double &away_rushing_yards_per_attempt) {
    m_away_rushing_yards_per_attempt = away_rushing_yards_per_attempt;
    m_away_rushing_yards_per_attempt_isSet = true;
}

bool OAIGame::is_away_rushing_yards_per_attempt_Set() const{
    return m_away_rushing_yards_per_attempt_isSet;
}

bool OAIGame::is_away_rushing_yards_per_attempt_Valid() const{
    return m_away_rushing_yards_per_attempt_isValid;
}

qint32 OAIGame::getAwaySackYards() const {
    return m_away_sack_yards;
}
void OAIGame::setAwaySackYards(const qint32 &away_sack_yards) {
    m_away_sack_yards = away_sack_yards;
    m_away_sack_yards_isSet = true;
}

bool OAIGame::is_away_sack_yards_Set() const{
    return m_away_sack_yards_isSet;
}

bool OAIGame::is_away_sack_yards_Valid() const{
    return m_away_sack_yards_isValid;
}

qint32 OAIGame::getAwaySacks() const {
    return m_away_sacks;
}
void OAIGame::setAwaySacks(const qint32 &away_sacks) {
    m_away_sacks = away_sacks;
    m_away_sacks_isSet = true;
}

bool OAIGame::is_away_sacks_Set() const{
    return m_away_sacks_isSet;
}

bool OAIGame::is_away_sacks_Valid() const{
    return m_away_sacks_isValid;
}

qint32 OAIGame::getAwaySafeties() const {
    return m_away_safeties;
}
void OAIGame::setAwaySafeties(const qint32 &away_safeties) {
    m_away_safeties = away_safeties;
    m_away_safeties_isSet = true;
}

bool OAIGame::is_away_safeties_Set() const{
    return m_away_safeties_isSet;
}

bool OAIGame::is_away_safeties_Valid() const{
    return m_away_safeties_isValid;
}

qint32 OAIGame::getAwayScore() const {
    return m_away_score;
}
void OAIGame::setAwayScore(const qint32 &away_score) {
    m_away_score = away_score;
    m_away_score_isSet = true;
}

bool OAIGame::is_away_score_Set() const{
    return m_away_score_isSet;
}

bool OAIGame::is_away_score_Valid() const{
    return m_away_score_isValid;
}

qint32 OAIGame::getAwayScoreOvertime() const {
    return m_away_score_overtime;
}
void OAIGame::setAwayScoreOvertime(const qint32 &away_score_overtime) {
    m_away_score_overtime = away_score_overtime;
    m_away_score_overtime_isSet = true;
}

bool OAIGame::is_away_score_overtime_Set() const{
    return m_away_score_overtime_isSet;
}

bool OAIGame::is_away_score_overtime_Valid() const{
    return m_away_score_overtime_isValid;
}

qint32 OAIGame::getAwayScoreQuarter1() const {
    return m_away_score_quarter1;
}
void OAIGame::setAwayScoreQuarter1(const qint32 &away_score_quarter1) {
    m_away_score_quarter1 = away_score_quarter1;
    m_away_score_quarter1_isSet = true;
}

bool OAIGame::is_away_score_quarter1_Set() const{
    return m_away_score_quarter1_isSet;
}

bool OAIGame::is_away_score_quarter1_Valid() const{
    return m_away_score_quarter1_isValid;
}

qint32 OAIGame::getAwayScoreQuarter2() const {
    return m_away_score_quarter2;
}
void OAIGame::setAwayScoreQuarter2(const qint32 &away_score_quarter2) {
    m_away_score_quarter2 = away_score_quarter2;
    m_away_score_quarter2_isSet = true;
}

bool OAIGame::is_away_score_quarter2_Set() const{
    return m_away_score_quarter2_isSet;
}

bool OAIGame::is_away_score_quarter2_Valid() const{
    return m_away_score_quarter2_isValid;
}

qint32 OAIGame::getAwayScoreQuarter3() const {
    return m_away_score_quarter3;
}
void OAIGame::setAwayScoreQuarter3(const qint32 &away_score_quarter3) {
    m_away_score_quarter3 = away_score_quarter3;
    m_away_score_quarter3_isSet = true;
}

bool OAIGame::is_away_score_quarter3_Set() const{
    return m_away_score_quarter3_isSet;
}

bool OAIGame::is_away_score_quarter3_Valid() const{
    return m_away_score_quarter3_isValid;
}

qint32 OAIGame::getAwayScoreQuarter4() const {
    return m_away_score_quarter4;
}
void OAIGame::setAwayScoreQuarter4(const qint32 &away_score_quarter4) {
    m_away_score_quarter4 = away_score_quarter4;
    m_away_score_quarter4_isSet = true;
}

bool OAIGame::is_away_score_quarter4_Set() const{
    return m_away_score_quarter4_isSet;
}

bool OAIGame::is_away_score_quarter4_Valid() const{
    return m_away_score_quarter4_isValid;
}

qint32 OAIGame::getAwaySoloTackles() const {
    return m_away_solo_tackles;
}
void OAIGame::setAwaySoloTackles(const qint32 &away_solo_tackles) {
    m_away_solo_tackles = away_solo_tackles;
    m_away_solo_tackles_isSet = true;
}

bool OAIGame::is_away_solo_tackles_Set() const{
    return m_away_solo_tackles_isSet;
}

bool OAIGame::is_away_solo_tackles_Valid() const{
    return m_away_solo_tackles_isValid;
}

qint32 OAIGame::getAwayTacklesForLoss() const {
    return m_away_tackles_for_loss;
}
void OAIGame::setAwayTacklesForLoss(const qint32 &away_tackles_for_loss) {
    m_away_tackles_for_loss = away_tackles_for_loss;
    m_away_tackles_for_loss_isSet = true;
}

bool OAIGame::is_away_tackles_for_loss_Set() const{
    return m_away_tackles_for_loss_isSet;
}

bool OAIGame::is_away_tackles_for_loss_Valid() const{
    return m_away_tackles_for_loss_isValid;
}

qint32 OAIGame::getAwayTakeaways() const {
    return m_away_takeaways;
}
void OAIGame::setAwayTakeaways(const qint32 &away_takeaways) {
    m_away_takeaways = away_takeaways;
    m_away_takeaways_isSet = true;
}

bool OAIGame::is_away_takeaways_Set() const{
    return m_away_takeaways_isSet;
}

bool OAIGame::is_away_takeaways_Valid() const{
    return m_away_takeaways_isValid;
}

QString OAIGame::getAwayTeam() const {
    return m_away_team;
}
void OAIGame::setAwayTeam(const QString &away_team) {
    m_away_team = away_team;
    m_away_team_isSet = true;
}

bool OAIGame::is_away_team_Set() const{
    return m_away_team_isSet;
}

bool OAIGame::is_away_team_Valid() const{
    return m_away_team_isValid;
}

qint32 OAIGame::getAwayThirdDownAttempts() const {
    return m_away_third_down_attempts;
}
void OAIGame::setAwayThirdDownAttempts(const qint32 &away_third_down_attempts) {
    m_away_third_down_attempts = away_third_down_attempts;
    m_away_third_down_attempts_isSet = true;
}

bool OAIGame::is_away_third_down_attempts_Set() const{
    return m_away_third_down_attempts_isSet;
}

bool OAIGame::is_away_third_down_attempts_Valid() const{
    return m_away_third_down_attempts_isValid;
}

qint32 OAIGame::getAwayThirdDownConversions() const {
    return m_away_third_down_conversions;
}
void OAIGame::setAwayThirdDownConversions(const qint32 &away_third_down_conversions) {
    m_away_third_down_conversions = away_third_down_conversions;
    m_away_third_down_conversions_isSet = true;
}

bool OAIGame::is_away_third_down_conversions_Set() const{
    return m_away_third_down_conversions_isSet;
}

bool OAIGame::is_away_third_down_conversions_Valid() const{
    return m_away_third_down_conversions_isValid;
}

double OAIGame::getAwayThirdDownPercentage() const {
    return m_away_third_down_percentage;
}
void OAIGame::setAwayThirdDownPercentage(const double &away_third_down_percentage) {
    m_away_third_down_percentage = away_third_down_percentage;
    m_away_third_down_percentage_isSet = true;
}

bool OAIGame::is_away_third_down_percentage_Set() const{
    return m_away_third_down_percentage_isSet;
}

bool OAIGame::is_away_third_down_percentage_Valid() const{
    return m_away_third_down_percentage_isValid;
}

QString OAIGame::getAwayTimeOfPossession() const {
    return m_away_time_of_possession;
}
void OAIGame::setAwayTimeOfPossession(const QString &away_time_of_possession) {
    m_away_time_of_possession = away_time_of_possession;
    m_away_time_of_possession_isSet = true;
}

bool OAIGame::is_away_time_of_possession_Set() const{
    return m_away_time_of_possession_isSet;
}

bool OAIGame::is_away_time_of_possession_Valid() const{
    return m_away_time_of_possession_isValid;
}

qint32 OAIGame::getAwayTimesSacked() const {
    return m_away_times_sacked;
}
void OAIGame::setAwayTimesSacked(const qint32 &away_times_sacked) {
    m_away_times_sacked = away_times_sacked;
    m_away_times_sacked_isSet = true;
}

bool OAIGame::is_away_times_sacked_Set() const{
    return m_away_times_sacked_isSet;
}

bool OAIGame::is_away_times_sacked_Valid() const{
    return m_away_times_sacked_isValid;
}

qint32 OAIGame::getAwayTimesSackedYards() const {
    return m_away_times_sacked_yards;
}
void OAIGame::setAwayTimesSackedYards(const qint32 &away_times_sacked_yards) {
    m_away_times_sacked_yards = away_times_sacked_yards;
    m_away_times_sacked_yards_isSet = true;
}

bool OAIGame::is_away_times_sacked_yards_Set() const{
    return m_away_times_sacked_yards_isSet;
}

bool OAIGame::is_away_times_sacked_yards_Valid() const{
    return m_away_times_sacked_yards_isValid;
}

qint32 OAIGame::getAwayTouchdowns() const {
    return m_away_touchdowns;
}
void OAIGame::setAwayTouchdowns(const qint32 &away_touchdowns) {
    m_away_touchdowns = away_touchdowns;
    m_away_touchdowns_isSet = true;
}

bool OAIGame::is_away_touchdowns_Set() const{
    return m_away_touchdowns_isSet;
}

bool OAIGame::is_away_touchdowns_Valid() const{
    return m_away_touchdowns_isValid;
}

qint32 OAIGame::getAwayTurnoverDifferential() const {
    return m_away_turnover_differential;
}
void OAIGame::setAwayTurnoverDifferential(const qint32 &away_turnover_differential) {
    m_away_turnover_differential = away_turnover_differential;
    m_away_turnover_differential_isSet = true;
}

bool OAIGame::is_away_turnover_differential_Set() const{
    return m_away_turnover_differential_isSet;
}

bool OAIGame::is_away_turnover_differential_Valid() const{
    return m_away_turnover_differential_isValid;
}

qint32 OAIGame::getAwayTwoPointConversionReturns() const {
    return m_away_two_point_conversion_returns;
}
void OAIGame::setAwayTwoPointConversionReturns(const qint32 &away_two_point_conversion_returns) {
    m_away_two_point_conversion_returns = away_two_point_conversion_returns;
    m_away_two_point_conversion_returns_isSet = true;
}

bool OAIGame::is_away_two_point_conversion_returns_Set() const{
    return m_away_two_point_conversion_returns_isSet;
}

bool OAIGame::is_away_two_point_conversion_returns_Valid() const{
    return m_away_two_point_conversion_returns_isValid;
}

QString OAIGame::getDate() const {
    return m_date;
}
void OAIGame::setDate(const QString &date) {
    m_date = date;
    m_date_isSet = true;
}

bool OAIGame::is_date_Set() const{
    return m_date_isSet;
}

bool OAIGame::is_date_Valid() const{
    return m_date_isValid;
}

qint32 OAIGame::getGameId() const {
    return m_game_id;
}
void OAIGame::setGameId(const qint32 &game_id) {
    m_game_id = game_id;
    m_game_id_isSet = true;
}

bool OAIGame::is_game_id_Set() const{
    return m_game_id_isSet;
}

bool OAIGame::is_game_id_Valid() const{
    return m_game_id_isValid;
}

QString OAIGame::getGameKey() const {
    return m_game_key;
}
void OAIGame::setGameKey(const QString &game_key) {
    m_game_key = game_key;
    m_game_key_isSet = true;
}

bool OAIGame::is_game_key_Set() const{
    return m_game_key_isSet;
}

bool OAIGame::is_game_key_Valid() const{
    return m_game_key_isValid;
}

qint32 OAIGame::getHomeAssistedTackles() const {
    return m_home_assisted_tackles;
}
void OAIGame::setHomeAssistedTackles(const qint32 &home_assisted_tackles) {
    m_home_assisted_tackles = home_assisted_tackles;
    m_home_assisted_tackles_isSet = true;
}

bool OAIGame::is_home_assisted_tackles_Set() const{
    return m_home_assisted_tackles_isSet;
}

bool OAIGame::is_home_assisted_tackles_Valid() const{
    return m_home_assisted_tackles_isValid;
}

qint32 OAIGame::getHomeBlockedKickReturnTouchdowns() const {
    return m_home_blocked_kick_return_touchdowns;
}
void OAIGame::setHomeBlockedKickReturnTouchdowns(const qint32 &home_blocked_kick_return_touchdowns) {
    m_home_blocked_kick_return_touchdowns = home_blocked_kick_return_touchdowns;
    m_home_blocked_kick_return_touchdowns_isSet = true;
}

bool OAIGame::is_home_blocked_kick_return_touchdowns_Set() const{
    return m_home_blocked_kick_return_touchdowns_isSet;
}

bool OAIGame::is_home_blocked_kick_return_touchdowns_Valid() const{
    return m_home_blocked_kick_return_touchdowns_isValid;
}

qint32 OAIGame::getHomeBlockedKickReturnYards() const {
    return m_home_blocked_kick_return_yards;
}
void OAIGame::setHomeBlockedKickReturnYards(const qint32 &home_blocked_kick_return_yards) {
    m_home_blocked_kick_return_yards = home_blocked_kick_return_yards;
    m_home_blocked_kick_return_yards_isSet = true;
}

bool OAIGame::is_home_blocked_kick_return_yards_Set() const{
    return m_home_blocked_kick_return_yards_isSet;
}

bool OAIGame::is_home_blocked_kick_return_yards_Valid() const{
    return m_home_blocked_kick_return_yards_isValid;
}

qint32 OAIGame::getHomeBlockedKicks() const {
    return m_home_blocked_kicks;
}
void OAIGame::setHomeBlockedKicks(const qint32 &home_blocked_kicks) {
    m_home_blocked_kicks = home_blocked_kicks;
    m_home_blocked_kicks_isSet = true;
}

bool OAIGame::is_home_blocked_kicks_Set() const{
    return m_home_blocked_kicks_isSet;
}

bool OAIGame::is_home_blocked_kicks_Valid() const{
    return m_home_blocked_kicks_isValid;
}

double OAIGame::getHomeCompletionPercentage() const {
    return m_home_completion_percentage;
}
void OAIGame::setHomeCompletionPercentage(const double &home_completion_percentage) {
    m_home_completion_percentage = home_completion_percentage;
    m_home_completion_percentage_isSet = true;
}

bool OAIGame::is_home_completion_percentage_Set() const{
    return m_home_completion_percentage_isSet;
}

bool OAIGame::is_home_completion_percentage_Valid() const{
    return m_home_completion_percentage_isValid;
}

qint32 OAIGame::getHomeExtraPointKickingAttempts() const {
    return m_home_extra_point_kicking_attempts;
}
void OAIGame::setHomeExtraPointKickingAttempts(const qint32 &home_extra_point_kicking_attempts) {
    m_home_extra_point_kicking_attempts = home_extra_point_kicking_attempts;
    m_home_extra_point_kicking_attempts_isSet = true;
}

bool OAIGame::is_home_extra_point_kicking_attempts_Set() const{
    return m_home_extra_point_kicking_attempts_isSet;
}

bool OAIGame::is_home_extra_point_kicking_attempts_Valid() const{
    return m_home_extra_point_kicking_attempts_isValid;
}

qint32 OAIGame::getHomeExtraPointKickingConversions() const {
    return m_home_extra_point_kicking_conversions;
}
void OAIGame::setHomeExtraPointKickingConversions(const qint32 &home_extra_point_kicking_conversions) {
    m_home_extra_point_kicking_conversions = home_extra_point_kicking_conversions;
    m_home_extra_point_kicking_conversions_isSet = true;
}

bool OAIGame::is_home_extra_point_kicking_conversions_Set() const{
    return m_home_extra_point_kicking_conversions_isSet;
}

bool OAIGame::is_home_extra_point_kicking_conversions_Valid() const{
    return m_home_extra_point_kicking_conversions_isValid;
}

qint32 OAIGame::getHomeExtraPointPassingAttempts() const {
    return m_home_extra_point_passing_attempts;
}
void OAIGame::setHomeExtraPointPassingAttempts(const qint32 &home_extra_point_passing_attempts) {
    m_home_extra_point_passing_attempts = home_extra_point_passing_attempts;
    m_home_extra_point_passing_attempts_isSet = true;
}

bool OAIGame::is_home_extra_point_passing_attempts_Set() const{
    return m_home_extra_point_passing_attempts_isSet;
}

bool OAIGame::is_home_extra_point_passing_attempts_Valid() const{
    return m_home_extra_point_passing_attempts_isValid;
}

qint32 OAIGame::getHomeExtraPointPassingConversions() const {
    return m_home_extra_point_passing_conversions;
}
void OAIGame::setHomeExtraPointPassingConversions(const qint32 &home_extra_point_passing_conversions) {
    m_home_extra_point_passing_conversions = home_extra_point_passing_conversions;
    m_home_extra_point_passing_conversions_isSet = true;
}

bool OAIGame::is_home_extra_point_passing_conversions_Set() const{
    return m_home_extra_point_passing_conversions_isSet;
}

bool OAIGame::is_home_extra_point_passing_conversions_Valid() const{
    return m_home_extra_point_passing_conversions_isValid;
}

qint32 OAIGame::getHomeExtraPointRushingAttempts() const {
    return m_home_extra_point_rushing_attempts;
}
void OAIGame::setHomeExtraPointRushingAttempts(const qint32 &home_extra_point_rushing_attempts) {
    m_home_extra_point_rushing_attempts = home_extra_point_rushing_attempts;
    m_home_extra_point_rushing_attempts_isSet = true;
}

bool OAIGame::is_home_extra_point_rushing_attempts_Set() const{
    return m_home_extra_point_rushing_attempts_isSet;
}

bool OAIGame::is_home_extra_point_rushing_attempts_Valid() const{
    return m_home_extra_point_rushing_attempts_isValid;
}

qint32 OAIGame::getHomeExtraPointRushingConversions() const {
    return m_home_extra_point_rushing_conversions;
}
void OAIGame::setHomeExtraPointRushingConversions(const qint32 &home_extra_point_rushing_conversions) {
    m_home_extra_point_rushing_conversions = home_extra_point_rushing_conversions;
    m_home_extra_point_rushing_conversions_isSet = true;
}

bool OAIGame::is_home_extra_point_rushing_conversions_Set() const{
    return m_home_extra_point_rushing_conversions_isSet;
}

bool OAIGame::is_home_extra_point_rushing_conversions_Valid() const{
    return m_home_extra_point_rushing_conversions_isValid;
}

qint32 OAIGame::getHomeExtraPointsHadBlocked() const {
    return m_home_extra_points_had_blocked;
}
void OAIGame::setHomeExtraPointsHadBlocked(const qint32 &home_extra_points_had_blocked) {
    m_home_extra_points_had_blocked = home_extra_points_had_blocked;
    m_home_extra_points_had_blocked_isSet = true;
}

bool OAIGame::is_home_extra_points_had_blocked_Set() const{
    return m_home_extra_points_had_blocked_isSet;
}

bool OAIGame::is_home_extra_points_had_blocked_Valid() const{
    return m_home_extra_points_had_blocked_isValid;
}

qint32 OAIGame::getHomeFieldGoalAttempts() const {
    return m_home_field_goal_attempts;
}
void OAIGame::setHomeFieldGoalAttempts(const qint32 &home_field_goal_attempts) {
    m_home_field_goal_attempts = home_field_goal_attempts;
    m_home_field_goal_attempts_isSet = true;
}

bool OAIGame::is_home_field_goal_attempts_Set() const{
    return m_home_field_goal_attempts_isSet;
}

bool OAIGame::is_home_field_goal_attempts_Valid() const{
    return m_home_field_goal_attempts_isValid;
}

qint32 OAIGame::getHomeFieldGoalReturnTouchdowns() const {
    return m_home_field_goal_return_touchdowns;
}
void OAIGame::setHomeFieldGoalReturnTouchdowns(const qint32 &home_field_goal_return_touchdowns) {
    m_home_field_goal_return_touchdowns = home_field_goal_return_touchdowns;
    m_home_field_goal_return_touchdowns_isSet = true;
}

bool OAIGame::is_home_field_goal_return_touchdowns_Set() const{
    return m_home_field_goal_return_touchdowns_isSet;
}

bool OAIGame::is_home_field_goal_return_touchdowns_Valid() const{
    return m_home_field_goal_return_touchdowns_isValid;
}

qint32 OAIGame::getHomeFieldGoalReturnYards() const {
    return m_home_field_goal_return_yards;
}
void OAIGame::setHomeFieldGoalReturnYards(const qint32 &home_field_goal_return_yards) {
    m_home_field_goal_return_yards = home_field_goal_return_yards;
    m_home_field_goal_return_yards_isSet = true;
}

bool OAIGame::is_home_field_goal_return_yards_Set() const{
    return m_home_field_goal_return_yards_isSet;
}

bool OAIGame::is_home_field_goal_return_yards_Valid() const{
    return m_home_field_goal_return_yards_isValid;
}

qint32 OAIGame::getHomeFieldGoalsHadBlocked() const {
    return m_home_field_goals_had_blocked;
}
void OAIGame::setHomeFieldGoalsHadBlocked(const qint32 &home_field_goals_had_blocked) {
    m_home_field_goals_had_blocked = home_field_goals_had_blocked;
    m_home_field_goals_had_blocked_isSet = true;
}

bool OAIGame::is_home_field_goals_had_blocked_Set() const{
    return m_home_field_goals_had_blocked_isSet;
}

bool OAIGame::is_home_field_goals_had_blocked_Valid() const{
    return m_home_field_goals_had_blocked_isValid;
}

qint32 OAIGame::getHomeFieldGoalsMade() const {
    return m_home_field_goals_made;
}
void OAIGame::setHomeFieldGoalsMade(const qint32 &home_field_goals_made) {
    m_home_field_goals_made = home_field_goals_made;
    m_home_field_goals_made_isSet = true;
}

bool OAIGame::is_home_field_goals_made_Set() const{
    return m_home_field_goals_made_isSet;
}

bool OAIGame::is_home_field_goals_made_Valid() const{
    return m_home_field_goals_made_isValid;
}

qint32 OAIGame::getHomeFirstDowns() const {
    return m_home_first_downs;
}
void OAIGame::setHomeFirstDowns(const qint32 &home_first_downs) {
    m_home_first_downs = home_first_downs;
    m_home_first_downs_isSet = true;
}

bool OAIGame::is_home_first_downs_Set() const{
    return m_home_first_downs_isSet;
}

bool OAIGame::is_home_first_downs_Valid() const{
    return m_home_first_downs_isValid;
}

qint32 OAIGame::getHomeFirstDownsByPassing() const {
    return m_home_first_downs_by_passing;
}
void OAIGame::setHomeFirstDownsByPassing(const qint32 &home_first_downs_by_passing) {
    m_home_first_downs_by_passing = home_first_downs_by_passing;
    m_home_first_downs_by_passing_isSet = true;
}

bool OAIGame::is_home_first_downs_by_passing_Set() const{
    return m_home_first_downs_by_passing_isSet;
}

bool OAIGame::is_home_first_downs_by_passing_Valid() const{
    return m_home_first_downs_by_passing_isValid;
}

qint32 OAIGame::getHomeFirstDownsByPenalty() const {
    return m_home_first_downs_by_penalty;
}
void OAIGame::setHomeFirstDownsByPenalty(const qint32 &home_first_downs_by_penalty) {
    m_home_first_downs_by_penalty = home_first_downs_by_penalty;
    m_home_first_downs_by_penalty_isSet = true;
}

bool OAIGame::is_home_first_downs_by_penalty_Set() const{
    return m_home_first_downs_by_penalty_isSet;
}

bool OAIGame::is_home_first_downs_by_penalty_Valid() const{
    return m_home_first_downs_by_penalty_isValid;
}

qint32 OAIGame::getHomeFirstDownsByRushing() const {
    return m_home_first_downs_by_rushing;
}
void OAIGame::setHomeFirstDownsByRushing(const qint32 &home_first_downs_by_rushing) {
    m_home_first_downs_by_rushing = home_first_downs_by_rushing;
    m_home_first_downs_by_rushing_isSet = true;
}

bool OAIGame::is_home_first_downs_by_rushing_Set() const{
    return m_home_first_downs_by_rushing_isSet;
}

bool OAIGame::is_home_first_downs_by_rushing_Valid() const{
    return m_home_first_downs_by_rushing_isValid;
}

qint32 OAIGame::getHomeFourthDownAttempts() const {
    return m_home_fourth_down_attempts;
}
void OAIGame::setHomeFourthDownAttempts(const qint32 &home_fourth_down_attempts) {
    m_home_fourth_down_attempts = home_fourth_down_attempts;
    m_home_fourth_down_attempts_isSet = true;
}

bool OAIGame::is_home_fourth_down_attempts_Set() const{
    return m_home_fourth_down_attempts_isSet;
}

bool OAIGame::is_home_fourth_down_attempts_Valid() const{
    return m_home_fourth_down_attempts_isValid;
}

qint32 OAIGame::getHomeFourthDownConversions() const {
    return m_home_fourth_down_conversions;
}
void OAIGame::setHomeFourthDownConversions(const qint32 &home_fourth_down_conversions) {
    m_home_fourth_down_conversions = home_fourth_down_conversions;
    m_home_fourth_down_conversions_isSet = true;
}

bool OAIGame::is_home_fourth_down_conversions_Set() const{
    return m_home_fourth_down_conversions_isSet;
}

bool OAIGame::is_home_fourth_down_conversions_Valid() const{
    return m_home_fourth_down_conversions_isValid;
}

double OAIGame::getHomeFourthDownPercentage() const {
    return m_home_fourth_down_percentage;
}
void OAIGame::setHomeFourthDownPercentage(const double &home_fourth_down_percentage) {
    m_home_fourth_down_percentage = home_fourth_down_percentage;
    m_home_fourth_down_percentage_isSet = true;
}

bool OAIGame::is_home_fourth_down_percentage_Set() const{
    return m_home_fourth_down_percentage_isSet;
}

bool OAIGame::is_home_fourth_down_percentage_Valid() const{
    return m_home_fourth_down_percentage_isValid;
}

qint32 OAIGame::getHomeFumbleReturnTouchdowns() const {
    return m_home_fumble_return_touchdowns;
}
void OAIGame::setHomeFumbleReturnTouchdowns(const qint32 &home_fumble_return_touchdowns) {
    m_home_fumble_return_touchdowns = home_fumble_return_touchdowns;
    m_home_fumble_return_touchdowns_isSet = true;
}

bool OAIGame::is_home_fumble_return_touchdowns_Set() const{
    return m_home_fumble_return_touchdowns_isSet;
}

bool OAIGame::is_home_fumble_return_touchdowns_Valid() const{
    return m_home_fumble_return_touchdowns_isValid;
}

qint32 OAIGame::getHomeFumbleReturnYards() const {
    return m_home_fumble_return_yards;
}
void OAIGame::setHomeFumbleReturnYards(const qint32 &home_fumble_return_yards) {
    m_home_fumble_return_yards = home_fumble_return_yards;
    m_home_fumble_return_yards_isSet = true;
}

bool OAIGame::is_home_fumble_return_yards_Set() const{
    return m_home_fumble_return_yards_isSet;
}

bool OAIGame::is_home_fumble_return_yards_Valid() const{
    return m_home_fumble_return_yards_isValid;
}

qint32 OAIGame::getHomeFumbles() const {
    return m_home_fumbles;
}
void OAIGame::setHomeFumbles(const qint32 &home_fumbles) {
    m_home_fumbles = home_fumbles;
    m_home_fumbles_isSet = true;
}

bool OAIGame::is_home_fumbles_Set() const{
    return m_home_fumbles_isSet;
}

bool OAIGame::is_home_fumbles_Valid() const{
    return m_home_fumbles_isValid;
}

qint32 OAIGame::getHomeFumblesForced() const {
    return m_home_fumbles_forced;
}
void OAIGame::setHomeFumblesForced(const qint32 &home_fumbles_forced) {
    m_home_fumbles_forced = home_fumbles_forced;
    m_home_fumbles_forced_isSet = true;
}

bool OAIGame::is_home_fumbles_forced_Set() const{
    return m_home_fumbles_forced_isSet;
}

bool OAIGame::is_home_fumbles_forced_Valid() const{
    return m_home_fumbles_forced_isValid;
}

qint32 OAIGame::getHomeFumblesLost() const {
    return m_home_fumbles_lost;
}
void OAIGame::setHomeFumblesLost(const qint32 &home_fumbles_lost) {
    m_home_fumbles_lost = home_fumbles_lost;
    m_home_fumbles_lost_isSet = true;
}

bool OAIGame::is_home_fumbles_lost_Set() const{
    return m_home_fumbles_lost_isSet;
}

bool OAIGame::is_home_fumbles_lost_Valid() const{
    return m_home_fumbles_lost_isValid;
}

qint32 OAIGame::getHomeFumblesRecovered() const {
    return m_home_fumbles_recovered;
}
void OAIGame::setHomeFumblesRecovered(const qint32 &home_fumbles_recovered) {
    m_home_fumbles_recovered = home_fumbles_recovered;
    m_home_fumbles_recovered_isSet = true;
}

bool OAIGame::is_home_fumbles_recovered_Set() const{
    return m_home_fumbles_recovered_isSet;
}

bool OAIGame::is_home_fumbles_recovered_Valid() const{
    return m_home_fumbles_recovered_isValid;
}

qint32 OAIGame::getHomeGiveaways() const {
    return m_home_giveaways;
}
void OAIGame::setHomeGiveaways(const qint32 &home_giveaways) {
    m_home_giveaways = home_giveaways;
    m_home_giveaways_isSet = true;
}

bool OAIGame::is_home_giveaways_Set() const{
    return m_home_giveaways_isSet;
}

bool OAIGame::is_home_giveaways_Valid() const{
    return m_home_giveaways_isValid;
}

qint32 OAIGame::getHomeGoalToGoAttempts() const {
    return m_home_goal_to_go_attempts;
}
void OAIGame::setHomeGoalToGoAttempts(const qint32 &home_goal_to_go_attempts) {
    m_home_goal_to_go_attempts = home_goal_to_go_attempts;
    m_home_goal_to_go_attempts_isSet = true;
}

bool OAIGame::is_home_goal_to_go_attempts_Set() const{
    return m_home_goal_to_go_attempts_isSet;
}

bool OAIGame::is_home_goal_to_go_attempts_Valid() const{
    return m_home_goal_to_go_attempts_isValid;
}

qint32 OAIGame::getHomeGoalToGoConversions() const {
    return m_home_goal_to_go_conversions;
}
void OAIGame::setHomeGoalToGoConversions(const qint32 &home_goal_to_go_conversions) {
    m_home_goal_to_go_conversions = home_goal_to_go_conversions;
    m_home_goal_to_go_conversions_isSet = true;
}

bool OAIGame::is_home_goal_to_go_conversions_Set() const{
    return m_home_goal_to_go_conversions_isSet;
}

bool OAIGame::is_home_goal_to_go_conversions_Valid() const{
    return m_home_goal_to_go_conversions_isValid;
}

qint32 OAIGame::getHomeInterceptionReturnTouchdowns() const {
    return m_home_interception_return_touchdowns;
}
void OAIGame::setHomeInterceptionReturnTouchdowns(const qint32 &home_interception_return_touchdowns) {
    m_home_interception_return_touchdowns = home_interception_return_touchdowns;
    m_home_interception_return_touchdowns_isSet = true;
}

bool OAIGame::is_home_interception_return_touchdowns_Set() const{
    return m_home_interception_return_touchdowns_isSet;
}

bool OAIGame::is_home_interception_return_touchdowns_Valid() const{
    return m_home_interception_return_touchdowns_isValid;
}

qint32 OAIGame::getHomeInterceptionReturnYards() const {
    return m_home_interception_return_yards;
}
void OAIGame::setHomeInterceptionReturnYards(const qint32 &home_interception_return_yards) {
    m_home_interception_return_yards = home_interception_return_yards;
    m_home_interception_return_yards_isSet = true;
}

bool OAIGame::is_home_interception_return_yards_Set() const{
    return m_home_interception_return_yards_isSet;
}

bool OAIGame::is_home_interception_return_yards_Valid() const{
    return m_home_interception_return_yards_isValid;
}

qint32 OAIGame::getHomeInterceptionReturns() const {
    return m_home_interception_returns;
}
void OAIGame::setHomeInterceptionReturns(const qint32 &home_interception_returns) {
    m_home_interception_returns = home_interception_returns;
    m_home_interception_returns_isSet = true;
}

bool OAIGame::is_home_interception_returns_Set() const{
    return m_home_interception_returns_isSet;
}

bool OAIGame::is_home_interception_returns_Valid() const{
    return m_home_interception_returns_isValid;
}

qint32 OAIGame::getHomeKickReturnLong() const {
    return m_home_kick_return_long;
}
void OAIGame::setHomeKickReturnLong(const qint32 &home_kick_return_long) {
    m_home_kick_return_long = home_kick_return_long;
    m_home_kick_return_long_isSet = true;
}

bool OAIGame::is_home_kick_return_long_Set() const{
    return m_home_kick_return_long_isSet;
}

bool OAIGame::is_home_kick_return_long_Valid() const{
    return m_home_kick_return_long_isValid;
}

qint32 OAIGame::getHomeKickReturnTouchdowns() const {
    return m_home_kick_return_touchdowns;
}
void OAIGame::setHomeKickReturnTouchdowns(const qint32 &home_kick_return_touchdowns) {
    m_home_kick_return_touchdowns = home_kick_return_touchdowns;
    m_home_kick_return_touchdowns_isSet = true;
}

bool OAIGame::is_home_kick_return_touchdowns_Set() const{
    return m_home_kick_return_touchdowns_isSet;
}

bool OAIGame::is_home_kick_return_touchdowns_Valid() const{
    return m_home_kick_return_touchdowns_isValid;
}

qint32 OAIGame::getHomeKickReturnYards() const {
    return m_home_kick_return_yards;
}
void OAIGame::setHomeKickReturnYards(const qint32 &home_kick_return_yards) {
    m_home_kick_return_yards = home_kick_return_yards;
    m_home_kick_return_yards_isSet = true;
}

bool OAIGame::is_home_kick_return_yards_Set() const{
    return m_home_kick_return_yards_isSet;
}

bool OAIGame::is_home_kick_return_yards_Valid() const{
    return m_home_kick_return_yards_isValid;
}

qint32 OAIGame::getHomeKickReturns() const {
    return m_home_kick_returns;
}
void OAIGame::setHomeKickReturns(const qint32 &home_kick_returns) {
    m_home_kick_returns = home_kick_returns;
    m_home_kick_returns_isSet = true;
}

bool OAIGame::is_home_kick_returns_Set() const{
    return m_home_kick_returns_isSet;
}

bool OAIGame::is_home_kick_returns_Valid() const{
    return m_home_kick_returns_isValid;
}

qint32 OAIGame::getHomeKickoffTouchbacks() const {
    return m_home_kickoff_touchbacks;
}
void OAIGame::setHomeKickoffTouchbacks(const qint32 &home_kickoff_touchbacks) {
    m_home_kickoff_touchbacks = home_kickoff_touchbacks;
    m_home_kickoff_touchbacks_isSet = true;
}

bool OAIGame::is_home_kickoff_touchbacks_Set() const{
    return m_home_kickoff_touchbacks_isSet;
}

bool OAIGame::is_home_kickoff_touchbacks_Valid() const{
    return m_home_kickoff_touchbacks_isValid;
}

qint32 OAIGame::getHomeKickoffs() const {
    return m_home_kickoffs;
}
void OAIGame::setHomeKickoffs(const qint32 &home_kickoffs) {
    m_home_kickoffs = home_kickoffs;
    m_home_kickoffs_isSet = true;
}

bool OAIGame::is_home_kickoffs_Set() const{
    return m_home_kickoffs_isSet;
}

bool OAIGame::is_home_kickoffs_Valid() const{
    return m_home_kickoffs_isValid;
}

qint32 OAIGame::getHomeKickoffsInEndZone() const {
    return m_home_kickoffs_in_end_zone;
}
void OAIGame::setHomeKickoffsInEndZone(const qint32 &home_kickoffs_in_end_zone) {
    m_home_kickoffs_in_end_zone = home_kickoffs_in_end_zone;
    m_home_kickoffs_in_end_zone_isSet = true;
}

bool OAIGame::is_home_kickoffs_in_end_zone_Set() const{
    return m_home_kickoffs_in_end_zone_isSet;
}

bool OAIGame::is_home_kickoffs_in_end_zone_Valid() const{
    return m_home_kickoffs_in_end_zone_isValid;
}

qint32 OAIGame::getHomeOffensivePlays() const {
    return m_home_offensive_plays;
}
void OAIGame::setHomeOffensivePlays(const qint32 &home_offensive_plays) {
    m_home_offensive_plays = home_offensive_plays;
    m_home_offensive_plays_isSet = true;
}

bool OAIGame::is_home_offensive_plays_Set() const{
    return m_home_offensive_plays_isSet;
}

bool OAIGame::is_home_offensive_plays_Valid() const{
    return m_home_offensive_plays_isValid;
}

qint32 OAIGame::getHomeOffensiveYards() const {
    return m_home_offensive_yards;
}
void OAIGame::setHomeOffensiveYards(const qint32 &home_offensive_yards) {
    m_home_offensive_yards = home_offensive_yards;
    m_home_offensive_yards_isSet = true;
}

bool OAIGame::is_home_offensive_yards_Set() const{
    return m_home_offensive_yards_isSet;
}

bool OAIGame::is_home_offensive_yards_Valid() const{
    return m_home_offensive_yards_isValid;
}

double OAIGame::getHomeOffensiveYardsPerPlay() const {
    return m_home_offensive_yards_per_play;
}
void OAIGame::setHomeOffensiveYardsPerPlay(const double &home_offensive_yards_per_play) {
    m_home_offensive_yards_per_play = home_offensive_yards_per_play;
    m_home_offensive_yards_per_play_isSet = true;
}

bool OAIGame::is_home_offensive_yards_per_play_Set() const{
    return m_home_offensive_yards_per_play_isSet;
}

bool OAIGame::is_home_offensive_yards_per_play_Valid() const{
    return m_home_offensive_yards_per_play_isValid;
}

double OAIGame::getHomePasserRating() const {
    return m_home_passer_rating;
}
void OAIGame::setHomePasserRating(const double &home_passer_rating) {
    m_home_passer_rating = home_passer_rating;
    m_home_passer_rating_isSet = true;
}

bool OAIGame::is_home_passer_rating_Set() const{
    return m_home_passer_rating_isSet;
}

bool OAIGame::is_home_passer_rating_Valid() const{
    return m_home_passer_rating_isValid;
}

qint32 OAIGame::getHomePassesDefended() const {
    return m_home_passes_defended;
}
void OAIGame::setHomePassesDefended(const qint32 &home_passes_defended) {
    m_home_passes_defended = home_passes_defended;
    m_home_passes_defended_isSet = true;
}

bool OAIGame::is_home_passes_defended_Set() const{
    return m_home_passes_defended_isSet;
}

bool OAIGame::is_home_passes_defended_Valid() const{
    return m_home_passes_defended_isValid;
}

qint32 OAIGame::getHomePassingAttempts() const {
    return m_home_passing_attempts;
}
void OAIGame::setHomePassingAttempts(const qint32 &home_passing_attempts) {
    m_home_passing_attempts = home_passing_attempts;
    m_home_passing_attempts_isSet = true;
}

bool OAIGame::is_home_passing_attempts_Set() const{
    return m_home_passing_attempts_isSet;
}

bool OAIGame::is_home_passing_attempts_Valid() const{
    return m_home_passing_attempts_isValid;
}

qint32 OAIGame::getHomePassingCompletions() const {
    return m_home_passing_completions;
}
void OAIGame::setHomePassingCompletions(const qint32 &home_passing_completions) {
    m_home_passing_completions = home_passing_completions;
    m_home_passing_completions_isSet = true;
}

bool OAIGame::is_home_passing_completions_Set() const{
    return m_home_passing_completions_isSet;
}

bool OAIGame::is_home_passing_completions_Valid() const{
    return m_home_passing_completions_isValid;
}

qint32 OAIGame::getHomePassingInterceptions() const {
    return m_home_passing_interceptions;
}
void OAIGame::setHomePassingInterceptions(const qint32 &home_passing_interceptions) {
    m_home_passing_interceptions = home_passing_interceptions;
    m_home_passing_interceptions_isSet = true;
}

bool OAIGame::is_home_passing_interceptions_Set() const{
    return m_home_passing_interceptions_isSet;
}

bool OAIGame::is_home_passing_interceptions_Valid() const{
    return m_home_passing_interceptions_isValid;
}

qint32 OAIGame::getHomePassingTouchdowns() const {
    return m_home_passing_touchdowns;
}
void OAIGame::setHomePassingTouchdowns(const qint32 &home_passing_touchdowns) {
    m_home_passing_touchdowns = home_passing_touchdowns;
    m_home_passing_touchdowns_isSet = true;
}

bool OAIGame::is_home_passing_touchdowns_Set() const{
    return m_home_passing_touchdowns_isSet;
}

bool OAIGame::is_home_passing_touchdowns_Valid() const{
    return m_home_passing_touchdowns_isValid;
}

qint32 OAIGame::getHomePassingYards() const {
    return m_home_passing_yards;
}
void OAIGame::setHomePassingYards(const qint32 &home_passing_yards) {
    m_home_passing_yards = home_passing_yards;
    m_home_passing_yards_isSet = true;
}

bool OAIGame::is_home_passing_yards_Set() const{
    return m_home_passing_yards_isSet;
}

bool OAIGame::is_home_passing_yards_Valid() const{
    return m_home_passing_yards_isValid;
}

double OAIGame::getHomePassingYardsPerAttempt() const {
    return m_home_passing_yards_per_attempt;
}
void OAIGame::setHomePassingYardsPerAttempt(const double &home_passing_yards_per_attempt) {
    m_home_passing_yards_per_attempt = home_passing_yards_per_attempt;
    m_home_passing_yards_per_attempt_isSet = true;
}

bool OAIGame::is_home_passing_yards_per_attempt_Set() const{
    return m_home_passing_yards_per_attempt_isSet;
}

bool OAIGame::is_home_passing_yards_per_attempt_Valid() const{
    return m_home_passing_yards_per_attempt_isValid;
}

double OAIGame::getHomePassingYardsPerCompletion() const {
    return m_home_passing_yards_per_completion;
}
void OAIGame::setHomePassingYardsPerCompletion(const double &home_passing_yards_per_completion) {
    m_home_passing_yards_per_completion = home_passing_yards_per_completion;
    m_home_passing_yards_per_completion_isSet = true;
}

bool OAIGame::is_home_passing_yards_per_completion_Set() const{
    return m_home_passing_yards_per_completion_isSet;
}

bool OAIGame::is_home_passing_yards_per_completion_Valid() const{
    return m_home_passing_yards_per_completion_isValid;
}

qint32 OAIGame::getHomePenalties() const {
    return m_home_penalties;
}
void OAIGame::setHomePenalties(const qint32 &home_penalties) {
    m_home_penalties = home_penalties;
    m_home_penalties_isSet = true;
}

bool OAIGame::is_home_penalties_Set() const{
    return m_home_penalties_isSet;
}

bool OAIGame::is_home_penalties_Valid() const{
    return m_home_penalties_isValid;
}

qint32 OAIGame::getHomePenaltyYards() const {
    return m_home_penalty_yards;
}
void OAIGame::setHomePenaltyYards(const qint32 &home_penalty_yards) {
    m_home_penalty_yards = home_penalty_yards;
    m_home_penalty_yards_isSet = true;
}

bool OAIGame::is_home_penalty_yards_Set() const{
    return m_home_penalty_yards_isSet;
}

bool OAIGame::is_home_penalty_yards_Valid() const{
    return m_home_penalty_yards_isValid;
}

double OAIGame::getHomePuntAverage() const {
    return m_home_punt_average;
}
void OAIGame::setHomePuntAverage(const double &home_punt_average) {
    m_home_punt_average = home_punt_average;
    m_home_punt_average_isSet = true;
}

bool OAIGame::is_home_punt_average_Set() const{
    return m_home_punt_average_isSet;
}

bool OAIGame::is_home_punt_average_Valid() const{
    return m_home_punt_average_isValid;
}

double OAIGame::getHomePuntNetAverage() const {
    return m_home_punt_net_average;
}
void OAIGame::setHomePuntNetAverage(const double &home_punt_net_average) {
    m_home_punt_net_average = home_punt_net_average;
    m_home_punt_net_average_isSet = true;
}

bool OAIGame::is_home_punt_net_average_Set() const{
    return m_home_punt_net_average_isSet;
}

bool OAIGame::is_home_punt_net_average_Valid() const{
    return m_home_punt_net_average_isValid;
}

qint32 OAIGame::getHomePuntNetYards() const {
    return m_home_punt_net_yards;
}
void OAIGame::setHomePuntNetYards(const qint32 &home_punt_net_yards) {
    m_home_punt_net_yards = home_punt_net_yards;
    m_home_punt_net_yards_isSet = true;
}

bool OAIGame::is_home_punt_net_yards_Set() const{
    return m_home_punt_net_yards_isSet;
}

bool OAIGame::is_home_punt_net_yards_Valid() const{
    return m_home_punt_net_yards_isValid;
}

qint32 OAIGame::getHomePuntReturnLong() const {
    return m_home_punt_return_long;
}
void OAIGame::setHomePuntReturnLong(const qint32 &home_punt_return_long) {
    m_home_punt_return_long = home_punt_return_long;
    m_home_punt_return_long_isSet = true;
}

bool OAIGame::is_home_punt_return_long_Set() const{
    return m_home_punt_return_long_isSet;
}

bool OAIGame::is_home_punt_return_long_Valid() const{
    return m_home_punt_return_long_isValid;
}

qint32 OAIGame::getHomePuntReturnTouchdowns() const {
    return m_home_punt_return_touchdowns;
}
void OAIGame::setHomePuntReturnTouchdowns(const qint32 &home_punt_return_touchdowns) {
    m_home_punt_return_touchdowns = home_punt_return_touchdowns;
    m_home_punt_return_touchdowns_isSet = true;
}

bool OAIGame::is_home_punt_return_touchdowns_Set() const{
    return m_home_punt_return_touchdowns_isSet;
}

bool OAIGame::is_home_punt_return_touchdowns_Valid() const{
    return m_home_punt_return_touchdowns_isValid;
}

qint32 OAIGame::getHomePuntReturnYards() const {
    return m_home_punt_return_yards;
}
void OAIGame::setHomePuntReturnYards(const qint32 &home_punt_return_yards) {
    m_home_punt_return_yards = home_punt_return_yards;
    m_home_punt_return_yards_isSet = true;
}

bool OAIGame::is_home_punt_return_yards_Set() const{
    return m_home_punt_return_yards_isSet;
}

bool OAIGame::is_home_punt_return_yards_Valid() const{
    return m_home_punt_return_yards_isValid;
}

qint32 OAIGame::getHomePuntReturns() const {
    return m_home_punt_returns;
}
void OAIGame::setHomePuntReturns(const qint32 &home_punt_returns) {
    m_home_punt_returns = home_punt_returns;
    m_home_punt_returns_isSet = true;
}

bool OAIGame::is_home_punt_returns_Set() const{
    return m_home_punt_returns_isSet;
}

bool OAIGame::is_home_punt_returns_Valid() const{
    return m_home_punt_returns_isValid;
}

qint32 OAIGame::getHomePuntYards() const {
    return m_home_punt_yards;
}
void OAIGame::setHomePuntYards(const qint32 &home_punt_yards) {
    m_home_punt_yards = home_punt_yards;
    m_home_punt_yards_isSet = true;
}

bool OAIGame::is_home_punt_yards_Set() const{
    return m_home_punt_yards_isSet;
}

bool OAIGame::is_home_punt_yards_Valid() const{
    return m_home_punt_yards_isValid;
}

qint32 OAIGame::getHomePunts() const {
    return m_home_punts;
}
void OAIGame::setHomePunts(const qint32 &home_punts) {
    m_home_punts = home_punts;
    m_home_punts_isSet = true;
}

bool OAIGame::is_home_punts_Set() const{
    return m_home_punts_isSet;
}

bool OAIGame::is_home_punts_Valid() const{
    return m_home_punts_isValid;
}

qint32 OAIGame::getHomePuntsHadBlocked() const {
    return m_home_punts_had_blocked;
}
void OAIGame::setHomePuntsHadBlocked(const qint32 &home_punts_had_blocked) {
    m_home_punts_had_blocked = home_punts_had_blocked;
    m_home_punts_had_blocked_isSet = true;
}

bool OAIGame::is_home_punts_had_blocked_Set() const{
    return m_home_punts_had_blocked_isSet;
}

bool OAIGame::is_home_punts_had_blocked_Valid() const{
    return m_home_punts_had_blocked_isValid;
}

qint32 OAIGame::getHomeQuarterbackHits() const {
    return m_home_quarterback_hits;
}
void OAIGame::setHomeQuarterbackHits(const qint32 &home_quarterback_hits) {
    m_home_quarterback_hits = home_quarterback_hits;
    m_home_quarterback_hits_isSet = true;
}

bool OAIGame::is_home_quarterback_hits_Set() const{
    return m_home_quarterback_hits_isSet;
}

bool OAIGame::is_home_quarterback_hits_Valid() const{
    return m_home_quarterback_hits_isValid;
}

qint32 OAIGame::getHomeRedZoneAttempts() const {
    return m_home_red_zone_attempts;
}
void OAIGame::setHomeRedZoneAttempts(const qint32 &home_red_zone_attempts) {
    m_home_red_zone_attempts = home_red_zone_attempts;
    m_home_red_zone_attempts_isSet = true;
}

bool OAIGame::is_home_red_zone_attempts_Set() const{
    return m_home_red_zone_attempts_isSet;
}

bool OAIGame::is_home_red_zone_attempts_Valid() const{
    return m_home_red_zone_attempts_isValid;
}

qint32 OAIGame::getHomeRedZoneConversions() const {
    return m_home_red_zone_conversions;
}
void OAIGame::setHomeRedZoneConversions(const qint32 &home_red_zone_conversions) {
    m_home_red_zone_conversions = home_red_zone_conversions;
    m_home_red_zone_conversions_isSet = true;
}

bool OAIGame::is_home_red_zone_conversions_Set() const{
    return m_home_red_zone_conversions_isSet;
}

bool OAIGame::is_home_red_zone_conversions_Valid() const{
    return m_home_red_zone_conversions_isValid;
}

qint32 OAIGame::getHomeReturnYards() const {
    return m_home_return_yards;
}
void OAIGame::setHomeReturnYards(const qint32 &home_return_yards) {
    m_home_return_yards = home_return_yards;
    m_home_return_yards_isSet = true;
}

bool OAIGame::is_home_return_yards_Set() const{
    return m_home_return_yards_isSet;
}

bool OAIGame::is_home_return_yards_Valid() const{
    return m_home_return_yards_isValid;
}

qint32 OAIGame::getHomeRushingAttempts() const {
    return m_home_rushing_attempts;
}
void OAIGame::setHomeRushingAttempts(const qint32 &home_rushing_attempts) {
    m_home_rushing_attempts = home_rushing_attempts;
    m_home_rushing_attempts_isSet = true;
}

bool OAIGame::is_home_rushing_attempts_Set() const{
    return m_home_rushing_attempts_isSet;
}

bool OAIGame::is_home_rushing_attempts_Valid() const{
    return m_home_rushing_attempts_isValid;
}

qint32 OAIGame::getHomeRushingTouchdowns() const {
    return m_home_rushing_touchdowns;
}
void OAIGame::setHomeRushingTouchdowns(const qint32 &home_rushing_touchdowns) {
    m_home_rushing_touchdowns = home_rushing_touchdowns;
    m_home_rushing_touchdowns_isSet = true;
}

bool OAIGame::is_home_rushing_touchdowns_Set() const{
    return m_home_rushing_touchdowns_isSet;
}

bool OAIGame::is_home_rushing_touchdowns_Valid() const{
    return m_home_rushing_touchdowns_isValid;
}

qint32 OAIGame::getHomeRushingYards() const {
    return m_home_rushing_yards;
}
void OAIGame::setHomeRushingYards(const qint32 &home_rushing_yards) {
    m_home_rushing_yards = home_rushing_yards;
    m_home_rushing_yards_isSet = true;
}

bool OAIGame::is_home_rushing_yards_Set() const{
    return m_home_rushing_yards_isSet;
}

bool OAIGame::is_home_rushing_yards_Valid() const{
    return m_home_rushing_yards_isValid;
}

double OAIGame::getHomeRushingYardsPerAttempt() const {
    return m_home_rushing_yards_per_attempt;
}
void OAIGame::setHomeRushingYardsPerAttempt(const double &home_rushing_yards_per_attempt) {
    m_home_rushing_yards_per_attempt = home_rushing_yards_per_attempt;
    m_home_rushing_yards_per_attempt_isSet = true;
}

bool OAIGame::is_home_rushing_yards_per_attempt_Set() const{
    return m_home_rushing_yards_per_attempt_isSet;
}

bool OAIGame::is_home_rushing_yards_per_attempt_Valid() const{
    return m_home_rushing_yards_per_attempt_isValid;
}

qint32 OAIGame::getHomeSackYards() const {
    return m_home_sack_yards;
}
void OAIGame::setHomeSackYards(const qint32 &home_sack_yards) {
    m_home_sack_yards = home_sack_yards;
    m_home_sack_yards_isSet = true;
}

bool OAIGame::is_home_sack_yards_Set() const{
    return m_home_sack_yards_isSet;
}

bool OAIGame::is_home_sack_yards_Valid() const{
    return m_home_sack_yards_isValid;
}

qint32 OAIGame::getHomeSacks() const {
    return m_home_sacks;
}
void OAIGame::setHomeSacks(const qint32 &home_sacks) {
    m_home_sacks = home_sacks;
    m_home_sacks_isSet = true;
}

bool OAIGame::is_home_sacks_Set() const{
    return m_home_sacks_isSet;
}

bool OAIGame::is_home_sacks_Valid() const{
    return m_home_sacks_isValid;
}

qint32 OAIGame::getHomeSafeties() const {
    return m_home_safeties;
}
void OAIGame::setHomeSafeties(const qint32 &home_safeties) {
    m_home_safeties = home_safeties;
    m_home_safeties_isSet = true;
}

bool OAIGame::is_home_safeties_Set() const{
    return m_home_safeties_isSet;
}

bool OAIGame::is_home_safeties_Valid() const{
    return m_home_safeties_isValid;
}

qint32 OAIGame::getHomeScore() const {
    return m_home_score;
}
void OAIGame::setHomeScore(const qint32 &home_score) {
    m_home_score = home_score;
    m_home_score_isSet = true;
}

bool OAIGame::is_home_score_Set() const{
    return m_home_score_isSet;
}

bool OAIGame::is_home_score_Valid() const{
    return m_home_score_isValid;
}

qint32 OAIGame::getHomeScoreOvertime() const {
    return m_home_score_overtime;
}
void OAIGame::setHomeScoreOvertime(const qint32 &home_score_overtime) {
    m_home_score_overtime = home_score_overtime;
    m_home_score_overtime_isSet = true;
}

bool OAIGame::is_home_score_overtime_Set() const{
    return m_home_score_overtime_isSet;
}

bool OAIGame::is_home_score_overtime_Valid() const{
    return m_home_score_overtime_isValid;
}

qint32 OAIGame::getHomeScoreQuarter1() const {
    return m_home_score_quarter1;
}
void OAIGame::setHomeScoreQuarter1(const qint32 &home_score_quarter1) {
    m_home_score_quarter1 = home_score_quarter1;
    m_home_score_quarter1_isSet = true;
}

bool OAIGame::is_home_score_quarter1_Set() const{
    return m_home_score_quarter1_isSet;
}

bool OAIGame::is_home_score_quarter1_Valid() const{
    return m_home_score_quarter1_isValid;
}

qint32 OAIGame::getHomeScoreQuarter2() const {
    return m_home_score_quarter2;
}
void OAIGame::setHomeScoreQuarter2(const qint32 &home_score_quarter2) {
    m_home_score_quarter2 = home_score_quarter2;
    m_home_score_quarter2_isSet = true;
}

bool OAIGame::is_home_score_quarter2_Set() const{
    return m_home_score_quarter2_isSet;
}

bool OAIGame::is_home_score_quarter2_Valid() const{
    return m_home_score_quarter2_isValid;
}

qint32 OAIGame::getHomeScoreQuarter3() const {
    return m_home_score_quarter3;
}
void OAIGame::setHomeScoreQuarter3(const qint32 &home_score_quarter3) {
    m_home_score_quarter3 = home_score_quarter3;
    m_home_score_quarter3_isSet = true;
}

bool OAIGame::is_home_score_quarter3_Set() const{
    return m_home_score_quarter3_isSet;
}

bool OAIGame::is_home_score_quarter3_Valid() const{
    return m_home_score_quarter3_isValid;
}

qint32 OAIGame::getHomeScoreQuarter4() const {
    return m_home_score_quarter4;
}
void OAIGame::setHomeScoreQuarter4(const qint32 &home_score_quarter4) {
    m_home_score_quarter4 = home_score_quarter4;
    m_home_score_quarter4_isSet = true;
}

bool OAIGame::is_home_score_quarter4_Set() const{
    return m_home_score_quarter4_isSet;
}

bool OAIGame::is_home_score_quarter4_Valid() const{
    return m_home_score_quarter4_isValid;
}

qint32 OAIGame::getHomeSoloTackles() const {
    return m_home_solo_tackles;
}
void OAIGame::setHomeSoloTackles(const qint32 &home_solo_tackles) {
    m_home_solo_tackles = home_solo_tackles;
    m_home_solo_tackles_isSet = true;
}

bool OAIGame::is_home_solo_tackles_Set() const{
    return m_home_solo_tackles_isSet;
}

bool OAIGame::is_home_solo_tackles_Valid() const{
    return m_home_solo_tackles_isValid;
}

qint32 OAIGame::getHomeTacklesForLoss() const {
    return m_home_tackles_for_loss;
}
void OAIGame::setHomeTacklesForLoss(const qint32 &home_tackles_for_loss) {
    m_home_tackles_for_loss = home_tackles_for_loss;
    m_home_tackles_for_loss_isSet = true;
}

bool OAIGame::is_home_tackles_for_loss_Set() const{
    return m_home_tackles_for_loss_isSet;
}

bool OAIGame::is_home_tackles_for_loss_Valid() const{
    return m_home_tackles_for_loss_isValid;
}

qint32 OAIGame::getHomeTakeaways() const {
    return m_home_takeaways;
}
void OAIGame::setHomeTakeaways(const qint32 &home_takeaways) {
    m_home_takeaways = home_takeaways;
    m_home_takeaways_isSet = true;
}

bool OAIGame::is_home_takeaways_Set() const{
    return m_home_takeaways_isSet;
}

bool OAIGame::is_home_takeaways_Valid() const{
    return m_home_takeaways_isValid;
}

QString OAIGame::getHomeTeam() const {
    return m_home_team;
}
void OAIGame::setHomeTeam(const QString &home_team) {
    m_home_team = home_team;
    m_home_team_isSet = true;
}

bool OAIGame::is_home_team_Set() const{
    return m_home_team_isSet;
}

bool OAIGame::is_home_team_Valid() const{
    return m_home_team_isValid;
}

qint32 OAIGame::getHomeThirdDownAttempts() const {
    return m_home_third_down_attempts;
}
void OAIGame::setHomeThirdDownAttempts(const qint32 &home_third_down_attempts) {
    m_home_third_down_attempts = home_third_down_attempts;
    m_home_third_down_attempts_isSet = true;
}

bool OAIGame::is_home_third_down_attempts_Set() const{
    return m_home_third_down_attempts_isSet;
}

bool OAIGame::is_home_third_down_attempts_Valid() const{
    return m_home_third_down_attempts_isValid;
}

qint32 OAIGame::getHomeThirdDownConversions() const {
    return m_home_third_down_conversions;
}
void OAIGame::setHomeThirdDownConversions(const qint32 &home_third_down_conversions) {
    m_home_third_down_conversions = home_third_down_conversions;
    m_home_third_down_conversions_isSet = true;
}

bool OAIGame::is_home_third_down_conversions_Set() const{
    return m_home_third_down_conversions_isSet;
}

bool OAIGame::is_home_third_down_conversions_Valid() const{
    return m_home_third_down_conversions_isValid;
}

double OAIGame::getHomeThirdDownPercentage() const {
    return m_home_third_down_percentage;
}
void OAIGame::setHomeThirdDownPercentage(const double &home_third_down_percentage) {
    m_home_third_down_percentage = home_third_down_percentage;
    m_home_third_down_percentage_isSet = true;
}

bool OAIGame::is_home_third_down_percentage_Set() const{
    return m_home_third_down_percentage_isSet;
}

bool OAIGame::is_home_third_down_percentage_Valid() const{
    return m_home_third_down_percentage_isValid;
}

QString OAIGame::getHomeTimeOfPossession() const {
    return m_home_time_of_possession;
}
void OAIGame::setHomeTimeOfPossession(const QString &home_time_of_possession) {
    m_home_time_of_possession = home_time_of_possession;
    m_home_time_of_possession_isSet = true;
}

bool OAIGame::is_home_time_of_possession_Set() const{
    return m_home_time_of_possession_isSet;
}

bool OAIGame::is_home_time_of_possession_Valid() const{
    return m_home_time_of_possession_isValid;
}

qint32 OAIGame::getHomeTimesSacked() const {
    return m_home_times_sacked;
}
void OAIGame::setHomeTimesSacked(const qint32 &home_times_sacked) {
    m_home_times_sacked = home_times_sacked;
    m_home_times_sacked_isSet = true;
}

bool OAIGame::is_home_times_sacked_Set() const{
    return m_home_times_sacked_isSet;
}

bool OAIGame::is_home_times_sacked_Valid() const{
    return m_home_times_sacked_isValid;
}

qint32 OAIGame::getHomeTimesSackedYards() const {
    return m_home_times_sacked_yards;
}
void OAIGame::setHomeTimesSackedYards(const qint32 &home_times_sacked_yards) {
    m_home_times_sacked_yards = home_times_sacked_yards;
    m_home_times_sacked_yards_isSet = true;
}

bool OAIGame::is_home_times_sacked_yards_Set() const{
    return m_home_times_sacked_yards_isSet;
}

bool OAIGame::is_home_times_sacked_yards_Valid() const{
    return m_home_times_sacked_yards_isValid;
}

qint32 OAIGame::getHomeTouchdowns() const {
    return m_home_touchdowns;
}
void OAIGame::setHomeTouchdowns(const qint32 &home_touchdowns) {
    m_home_touchdowns = home_touchdowns;
    m_home_touchdowns_isSet = true;
}

bool OAIGame::is_home_touchdowns_Set() const{
    return m_home_touchdowns_isSet;
}

bool OAIGame::is_home_touchdowns_Valid() const{
    return m_home_touchdowns_isValid;
}

qint32 OAIGame::getHomeTurnoverDifferential() const {
    return m_home_turnover_differential;
}
void OAIGame::setHomeTurnoverDifferential(const qint32 &home_turnover_differential) {
    m_home_turnover_differential = home_turnover_differential;
    m_home_turnover_differential_isSet = true;
}

bool OAIGame::is_home_turnover_differential_Set() const{
    return m_home_turnover_differential_isSet;
}

bool OAIGame::is_home_turnover_differential_Valid() const{
    return m_home_turnover_differential_isValid;
}

qint32 OAIGame::getHomeTwoPointConversionReturns() const {
    return m_home_two_point_conversion_returns;
}
void OAIGame::setHomeTwoPointConversionReturns(const qint32 &home_two_point_conversion_returns) {
    m_home_two_point_conversion_returns = home_two_point_conversion_returns;
    m_home_two_point_conversion_returns_isSet = true;
}

bool OAIGame::is_home_two_point_conversion_returns_Set() const{
    return m_home_two_point_conversion_returns_isSet;
}

bool OAIGame::is_home_two_point_conversion_returns_Valid() const{
    return m_home_two_point_conversion_returns_isValid;
}

qint32 OAIGame::getHumidity() const {
    return m_humidity;
}
void OAIGame::setHumidity(const qint32 &humidity) {
    m_humidity = humidity;
    m_humidity_isSet = true;
}

bool OAIGame::is_humidity_Set() const{
    return m_humidity_isSet;
}

bool OAIGame::is_humidity_Valid() const{
    return m_humidity_isValid;
}

bool OAIGame::isIsGameOver() const {
    return m_is_game_over;
}
void OAIGame::setIsGameOver(const bool &is_game_over) {
    m_is_game_over = is_game_over;
    m_is_game_over_isSet = true;
}

bool OAIGame::is_is_game_over_Set() const{
    return m_is_game_over_isSet;
}

bool OAIGame::is_is_game_over_Valid() const{
    return m_is_game_over_isValid;
}

double OAIGame::getOverUnder() const {
    return m_over_under;
}
void OAIGame::setOverUnder(const double &over_under) {
    m_over_under = over_under;
    m_over_under_isSet = true;
}

bool OAIGame::is_over_under_Set() const{
    return m_over_under_isSet;
}

bool OAIGame::is_over_under_Valid() const{
    return m_over_under_isValid;
}

QString OAIGame::getPlayingSurface() const {
    return m_playing_surface;
}
void OAIGame::setPlayingSurface(const QString &playing_surface) {
    m_playing_surface = playing_surface;
    m_playing_surface_isSet = true;
}

bool OAIGame::is_playing_surface_Set() const{
    return m_playing_surface_isSet;
}

bool OAIGame::is_playing_surface_Valid() const{
    return m_playing_surface_isValid;
}

double OAIGame::getPointSpread() const {
    return m_point_spread;
}
void OAIGame::setPointSpread(const double &point_spread) {
    m_point_spread = point_spread;
    m_point_spread_isSet = true;
}

bool OAIGame::is_point_spread_Set() const{
    return m_point_spread_isSet;
}

bool OAIGame::is_point_spread_Valid() const{
    return m_point_spread_isValid;
}

qint32 OAIGame::getScoreId() const {
    return m_score_id;
}
void OAIGame::setScoreId(const qint32 &score_id) {
    m_score_id = score_id;
    m_score_id_isSet = true;
}

bool OAIGame::is_score_id_Set() const{
    return m_score_id_isSet;
}

bool OAIGame::is_score_id_Valid() const{
    return m_score_id_isValid;
}

qint32 OAIGame::getSeason() const {
    return m_season;
}
void OAIGame::setSeason(const qint32 &season) {
    m_season = season;
    m_season_isSet = true;
}

bool OAIGame::is_season_Set() const{
    return m_season_isSet;
}

bool OAIGame::is_season_Valid() const{
    return m_season_isValid;
}

qint32 OAIGame::getSeasonType() const {
    return m_season_type;
}
void OAIGame::setSeasonType(const qint32 &season_type) {
    m_season_type = season_type;
    m_season_type_isSet = true;
}

bool OAIGame::is_season_type_Set() const{
    return m_season_type_isSet;
}

bool OAIGame::is_season_type_Valid() const{
    return m_season_type_isValid;
}

QString OAIGame::getStadium() const {
    return m_stadium;
}
void OAIGame::setStadium(const QString &stadium) {
    m_stadium = stadium;
    m_stadium_isSet = true;
}

bool OAIGame::is_stadium_Set() const{
    return m_stadium_isSet;
}

bool OAIGame::is_stadium_Valid() const{
    return m_stadium_isValid;
}

OAIStadium OAIGame::getStadiumDetails() const {
    return m_stadium_details;
}
void OAIGame::setStadiumDetails(const OAIStadium &stadium_details) {
    m_stadium_details = stadium_details;
    m_stadium_details_isSet = true;
}

bool OAIGame::is_stadium_details_Set() const{
    return m_stadium_details_isSet;
}

bool OAIGame::is_stadium_details_Valid() const{
    return m_stadium_details_isValid;
}

qint32 OAIGame::getStadiumId() const {
    return m_stadium_id;
}
void OAIGame::setStadiumId(const qint32 &stadium_id) {
    m_stadium_id = stadium_id;
    m_stadium_id_isSet = true;
}

bool OAIGame::is_stadium_id_Set() const{
    return m_stadium_id_isSet;
}

bool OAIGame::is_stadium_id_Valid() const{
    return m_stadium_id_isValid;
}

qint32 OAIGame::getTemperature() const {
    return m_temperature;
}
void OAIGame::setTemperature(const qint32 &temperature) {
    m_temperature = temperature;
    m_temperature_isSet = true;
}

bool OAIGame::is_temperature_Set() const{
    return m_temperature_isSet;
}

bool OAIGame::is_temperature_Valid() const{
    return m_temperature_isValid;
}

qint32 OAIGame::getTotalScore() const {
    return m_total_score;
}
void OAIGame::setTotalScore(const qint32 &total_score) {
    m_total_score = total_score;
    m_total_score_isSet = true;
}

bool OAIGame::is_total_score_Set() const{
    return m_total_score_isSet;
}

bool OAIGame::is_total_score_Valid() const{
    return m_total_score_isValid;
}

qint32 OAIGame::getWeek() const {
    return m_week;
}
void OAIGame::setWeek(const qint32 &week) {
    m_week = week;
    m_week_isSet = true;
}

bool OAIGame::is_week_Set() const{
    return m_week_isSet;
}

bool OAIGame::is_week_Valid() const{
    return m_week_isValid;
}

qint32 OAIGame::getWindSpeed() const {
    return m_wind_speed;
}
void OAIGame::setWindSpeed(const qint32 &wind_speed) {
    m_wind_speed = wind_speed;
    m_wind_speed_isSet = true;
}

bool OAIGame::is_wind_speed_Set() const{
    return m_wind_speed_isSet;
}

bool OAIGame::is_wind_speed_Valid() const{
    return m_wind_speed_isValid;
}

bool OAIGame::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_away_assisted_tackles_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_blocked_kick_return_touchdowns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_blocked_kick_return_yards_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_blocked_kicks_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_completion_percentage_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_extra_point_kicking_attempts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_extra_point_kicking_conversions_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_extra_point_passing_attempts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_extra_point_passing_conversions_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_extra_point_rushing_attempts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_extra_point_rushing_conversions_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_extra_points_had_blocked_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_field_goal_attempts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_field_goal_return_touchdowns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_field_goal_return_yards_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_field_goals_had_blocked_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_field_goals_made_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_first_downs_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_first_downs_by_passing_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_first_downs_by_penalty_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_first_downs_by_rushing_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_fourth_down_attempts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_fourth_down_conversions_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_fourth_down_percentage_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_fumble_return_touchdowns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_fumble_return_yards_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_fumbles_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_fumbles_forced_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_fumbles_lost_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_fumbles_recovered_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_giveaways_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_goal_to_go_attempts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_goal_to_go_conversions_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_interception_return_touchdowns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_interception_return_yards_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_interception_returns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_kick_return_long_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_kick_return_touchdowns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_kick_return_yards_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_kick_returns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_kickoff_touchbacks_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_kickoffs_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_kickoffs_in_end_zone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_offensive_plays_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_offensive_yards_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_offensive_yards_per_play_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_passer_rating_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_passes_defended_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_passing_attempts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_passing_completions_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_passing_interceptions_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_passing_touchdowns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_passing_yards_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_passing_yards_per_attempt_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_passing_yards_per_completion_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_penalties_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_penalty_yards_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_punt_average_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_punt_net_average_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_punt_net_yards_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_punt_return_long_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_punt_return_touchdowns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_punt_return_yards_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_punt_returns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_punt_yards_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_punts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_punts_had_blocked_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_quarterback_hits_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_red_zone_attempts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_red_zone_conversions_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_return_yards_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_rushing_attempts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_rushing_touchdowns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_rushing_yards_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_rushing_yards_per_attempt_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_sack_yards_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_sacks_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_safeties_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_score_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_score_overtime_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_score_quarter1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_score_quarter2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_score_quarter3_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_score_quarter4_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_solo_tackles_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_tackles_for_loss_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_takeaways_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_team_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_third_down_attempts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_third_down_conversions_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_third_down_percentage_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_time_of_possession_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_times_sacked_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_times_sacked_yards_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_touchdowns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_turnover_differential_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_away_two_point_conversion_returns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_game_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_game_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_assisted_tackles_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_blocked_kick_return_touchdowns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_blocked_kick_return_yards_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_blocked_kicks_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_completion_percentage_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_extra_point_kicking_attempts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_extra_point_kicking_conversions_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_extra_point_passing_attempts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_extra_point_passing_conversions_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_extra_point_rushing_attempts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_extra_point_rushing_conversions_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_extra_points_had_blocked_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_field_goal_attempts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_field_goal_return_touchdowns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_field_goal_return_yards_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_field_goals_had_blocked_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_field_goals_made_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_first_downs_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_first_downs_by_passing_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_first_downs_by_penalty_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_first_downs_by_rushing_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_fourth_down_attempts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_fourth_down_conversions_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_fourth_down_percentage_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_fumble_return_touchdowns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_fumble_return_yards_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_fumbles_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_fumbles_forced_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_fumbles_lost_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_fumbles_recovered_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_giveaways_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_goal_to_go_attempts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_goal_to_go_conversions_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_interception_return_touchdowns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_interception_return_yards_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_interception_returns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_kick_return_long_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_kick_return_touchdowns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_kick_return_yards_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_kick_returns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_kickoff_touchbacks_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_kickoffs_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_kickoffs_in_end_zone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_offensive_plays_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_offensive_yards_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_offensive_yards_per_play_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_passer_rating_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_passes_defended_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_passing_attempts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_passing_completions_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_passing_interceptions_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_passing_touchdowns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_passing_yards_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_passing_yards_per_attempt_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_passing_yards_per_completion_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_penalties_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_penalty_yards_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_punt_average_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_punt_net_average_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_punt_net_yards_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_punt_return_long_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_punt_return_touchdowns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_punt_return_yards_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_punt_returns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_punt_yards_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_punts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_punts_had_blocked_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_quarterback_hits_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_red_zone_attempts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_red_zone_conversions_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_return_yards_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_rushing_attempts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_rushing_touchdowns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_rushing_yards_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_rushing_yards_per_attempt_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_sack_yards_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_sacks_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_safeties_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_score_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_score_overtime_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_score_quarter1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_score_quarter2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_score_quarter3_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_score_quarter4_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_solo_tackles_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_tackles_for_loss_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_takeaways_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_team_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_third_down_attempts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_third_down_conversions_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_third_down_percentage_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_time_of_possession_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_times_sacked_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_times_sacked_yards_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_touchdowns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_turnover_differential_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_two_point_conversion_returns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_humidity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_game_over_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_over_under_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_playing_surface_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_point_spread_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_score_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_season_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_season_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stadium_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stadium_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_stadium_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_temperature_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_score_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_week_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_wind_speed_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGame::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
