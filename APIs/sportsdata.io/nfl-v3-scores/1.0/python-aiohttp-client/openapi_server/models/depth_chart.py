# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DepthChart(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, depth_chart_id: int=None, depth_order: int=None, name: str=None, player_id: int=None, position: str=None, position_category: str=None, team_id: int=None, updated: str=None):
        """DepthChart - a model defined in OpenAPI

        :param depth_chart_id: The depth_chart_id of this DepthChart.
        :param depth_order: The depth_order of this DepthChart.
        :param name: The name of this DepthChart.
        :param player_id: The player_id of this DepthChart.
        :param position: The position of this DepthChart.
        :param position_category: The position_category of this DepthChart.
        :param team_id: The team_id of this DepthChart.
        :param updated: The updated of this DepthChart.
        """
        self.openapi_types = {
            'depth_chart_id': int,
            'depth_order': int,
            'name': str,
            'player_id': int,
            'position': str,
            'position_category': str,
            'team_id': int,
            'updated': str
        }

        self.attribute_map = {
            'depth_chart_id': 'DepthChartID',
            'depth_order': 'DepthOrder',
            'name': 'Name',
            'player_id': 'PlayerID',
            'position': 'Position',
            'position_category': 'PositionCategory',
            'team_id': 'TeamID',
            'updated': 'Updated'
        }

        self._depth_chart_id = depth_chart_id
        self._depth_order = depth_order
        self._name = name
        self._player_id = player_id
        self._position = position
        self._position_category = position_category
        self._team_id = team_id
        self._updated = updated

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DepthChart':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DepthChart of this DepthChart.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def depth_chart_id(self):
        """Gets the depth_chart_id of this DepthChart.


        :return: The depth_chart_id of this DepthChart.
        :rtype: int
        """
        return self._depth_chart_id

    @depth_chart_id.setter
    def depth_chart_id(self, depth_chart_id):
        """Sets the depth_chart_id of this DepthChart.


        :param depth_chart_id: The depth_chart_id of this DepthChart.
        :type depth_chart_id: int
        """

        self._depth_chart_id = depth_chart_id

    @property
    def depth_order(self):
        """Gets the depth_order of this DepthChart.


        :return: The depth_order of this DepthChart.
        :rtype: int
        """
        return self._depth_order

    @depth_order.setter
    def depth_order(self, depth_order):
        """Sets the depth_order of this DepthChart.


        :param depth_order: The depth_order of this DepthChart.
        :type depth_order: int
        """

        self._depth_order = depth_order

    @property
    def name(self):
        """Gets the name of this DepthChart.


        :return: The name of this DepthChart.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DepthChart.


        :param name: The name of this DepthChart.
        :type name: str
        """

        self._name = name

    @property
    def player_id(self):
        """Gets the player_id of this DepthChart.


        :return: The player_id of this DepthChart.
        :rtype: int
        """
        return self._player_id

    @player_id.setter
    def player_id(self, player_id):
        """Sets the player_id of this DepthChart.


        :param player_id: The player_id of this DepthChart.
        :type player_id: int
        """

        self._player_id = player_id

    @property
    def position(self):
        """Gets the position of this DepthChart.


        :return: The position of this DepthChart.
        :rtype: str
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this DepthChart.


        :param position: The position of this DepthChart.
        :type position: str
        """

        self._position = position

    @property
    def position_category(self):
        """Gets the position_category of this DepthChart.


        :return: The position_category of this DepthChart.
        :rtype: str
        """
        return self._position_category

    @position_category.setter
    def position_category(self, position_category):
        """Sets the position_category of this DepthChart.


        :param position_category: The position_category of this DepthChart.
        :type position_category: str
        """

        self._position_category = position_category

    @property
    def team_id(self):
        """Gets the team_id of this DepthChart.


        :return: The team_id of this DepthChart.
        :rtype: int
        """
        return self._team_id

    @team_id.setter
    def team_id(self, team_id):
        """Sets the team_id of this DepthChart.


        :param team_id: The team_id of this DepthChart.
        :type team_id: int
        """

        self._team_id = team_id

    @property
    def updated(self):
        """Gets the updated of this DepthChart.


        :return: The updated of this DepthChart.
        :rtype: str
        """
        return self._updated

    @updated.setter
    def updated(self, updated):
        """Sets the updated of this DepthChart.


        :param updated: The updated of this DepthChart.
        :type updated: str
        """

        self._updated = updated
