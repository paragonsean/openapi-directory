# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Referee(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, college: str=None, experience: int=None, name: str=None, number: int=None, position: str=None, referee_id: int=None):
        """Referee - a model defined in OpenAPI

        :param college: The college of this Referee.
        :param experience: The experience of this Referee.
        :param name: The name of this Referee.
        :param number: The number of this Referee.
        :param position: The position of this Referee.
        :param referee_id: The referee_id of this Referee.
        """
        self.openapi_types = {
            'college': str,
            'experience': int,
            'name': str,
            'number': int,
            'position': str,
            'referee_id': int
        }

        self.attribute_map = {
            'college': 'College',
            'experience': 'Experience',
            'name': 'Name',
            'number': 'Number',
            'position': 'Position',
            'referee_id': 'RefereeID'
        }

        self._college = college
        self._experience = experience
        self._name = name
        self._number = number
        self._position = position
        self._referee_id = referee_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Referee':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Referee of this Referee.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def college(self):
        """Gets the college of this Referee.


        :return: The college of this Referee.
        :rtype: str
        """
        return self._college

    @college.setter
    def college(self, college):
        """Sets the college of this Referee.


        :param college: The college of this Referee.
        :type college: str
        """

        self._college = college

    @property
    def experience(self):
        """Gets the experience of this Referee.


        :return: The experience of this Referee.
        :rtype: int
        """
        return self._experience

    @experience.setter
    def experience(self, experience):
        """Sets the experience of this Referee.


        :param experience: The experience of this Referee.
        :type experience: int
        """

        self._experience = experience

    @property
    def name(self):
        """Gets the name of this Referee.


        :return: The name of this Referee.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Referee.


        :param name: The name of this Referee.
        :type name: str
        """

        self._name = name

    @property
    def number(self):
        """Gets the number of this Referee.


        :return: The number of this Referee.
        :rtype: int
        """
        return self._number

    @number.setter
    def number(self, number):
        """Sets the number of this Referee.


        :param number: The number of this Referee.
        :type number: int
        """

        self._number = number

    @property
    def position(self):
        """Gets the position of this Referee.


        :return: The position of this Referee.
        :rtype: str
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this Referee.


        :param position: The position of this Referee.
        :type position: str
        """

        self._position = position

    @property
    def referee_id(self):
        """Gets the referee_id of this Referee.


        :return: The referee_id of this Referee.
        :rtype: int
        """
        return self._referee_id

    @referee_id.setter
    def referee_id(self, referee_id):
        """Sets the referee_id of this Referee.


        :param referee_id: The referee_id of this Referee.
        :type referee_id: int
        """

        self._referee_id = referee_id
