# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.stadium import Stadium
from openapi_server import util


class Score(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attendance: int=None, away_rotation_number: int=None, away_score: int=None, away_score_overtime: int=None, away_score_quarter1: int=None, away_score_quarter2: int=None, away_score_quarter3: int=None, away_score_quarter4: int=None, away_team: str=None, away_team_id: int=None, away_team_money_line: int=None, away_timeouts: int=None, canceled: bool=None, channel: str=None, closed: bool=None, _date: str=None, date_time: str=None, date_time_utc: str=None, day: str=None, distance: str=None, down: int=None, down_and_distance: str=None, forecast_description: str=None, forecast_temp_high: int=None, forecast_temp_low: int=None, forecast_wind_chill: int=None, forecast_wind_speed: int=None, game_end_date_time: str=None, game_key: str=None, geo_lat: float=None, geo_long: float=None, global_away_team_id: int=None, global_game_id: int=None, global_home_team_id: int=None, has1st_quarter_started: bool=None, has2nd_quarter_started: bool=None, has3rd_quarter_started: bool=None, has4th_quarter_started: bool=None, has_started: bool=None, home_rotation_number: int=None, home_score: int=None, home_score_overtime: int=None, home_score_quarter1: int=None, home_score_quarter2: int=None, home_score_quarter3: int=None, home_score_quarter4: int=None, home_team: str=None, home_team_id: int=None, home_team_money_line: int=None, home_timeouts: int=None, is_in_progress: bool=None, is_over: bool=None, is_overtime: bool=None, last_play: str=None, last_updated: str=None, neutral_venue: bool=None, over_payout: int=None, over_under: float=None, point_spread: float=None, point_spread_away_team_money_line: int=None, point_spread_home_team_money_line: int=None, possession: str=None, quarter: str=None, quarter_description: str=None, red_zone: str=None, referee_id: int=None, score_id: int=None, season: int=None, season_type: int=None, stadium_details: Stadium=None, stadium_id: int=None, status: str=None, time_remaining: str=None, under_payout: int=None, week: int=None, yard_line: int=None, yard_line_territory: str=None):
        """Score - a model defined in OpenAPI

        :param attendance: The attendance of this Score.
        :param away_rotation_number: The away_rotation_number of this Score.
        :param away_score: The away_score of this Score.
        :param away_score_overtime: The away_score_overtime of this Score.
        :param away_score_quarter1: The away_score_quarter1 of this Score.
        :param away_score_quarter2: The away_score_quarter2 of this Score.
        :param away_score_quarter3: The away_score_quarter3 of this Score.
        :param away_score_quarter4: The away_score_quarter4 of this Score.
        :param away_team: The away_team of this Score.
        :param away_team_id: The away_team_id of this Score.
        :param away_team_money_line: The away_team_money_line of this Score.
        :param away_timeouts: The away_timeouts of this Score.
        :param canceled: The canceled of this Score.
        :param channel: The channel of this Score.
        :param closed: The closed of this Score.
        :param _date: The _date of this Score.
        :param date_time: The date_time of this Score.
        :param date_time_utc: The date_time_utc of this Score.
        :param day: The day of this Score.
        :param distance: The distance of this Score.
        :param down: The down of this Score.
        :param down_and_distance: The down_and_distance of this Score.
        :param forecast_description: The forecast_description of this Score.
        :param forecast_temp_high: The forecast_temp_high of this Score.
        :param forecast_temp_low: The forecast_temp_low of this Score.
        :param forecast_wind_chill: The forecast_wind_chill of this Score.
        :param forecast_wind_speed: The forecast_wind_speed of this Score.
        :param game_end_date_time: The game_end_date_time of this Score.
        :param game_key: The game_key of this Score.
        :param geo_lat: The geo_lat of this Score.
        :param geo_long: The geo_long of this Score.
        :param global_away_team_id: The global_away_team_id of this Score.
        :param global_game_id: The global_game_id of this Score.
        :param global_home_team_id: The global_home_team_id of this Score.
        :param has1st_quarter_started: The has1st_quarter_started of this Score.
        :param has2nd_quarter_started: The has2nd_quarter_started of this Score.
        :param has3rd_quarter_started: The has3rd_quarter_started of this Score.
        :param has4th_quarter_started: The has4th_quarter_started of this Score.
        :param has_started: The has_started of this Score.
        :param home_rotation_number: The home_rotation_number of this Score.
        :param home_score: The home_score of this Score.
        :param home_score_overtime: The home_score_overtime of this Score.
        :param home_score_quarter1: The home_score_quarter1 of this Score.
        :param home_score_quarter2: The home_score_quarter2 of this Score.
        :param home_score_quarter3: The home_score_quarter3 of this Score.
        :param home_score_quarter4: The home_score_quarter4 of this Score.
        :param home_team: The home_team of this Score.
        :param home_team_id: The home_team_id of this Score.
        :param home_team_money_line: The home_team_money_line of this Score.
        :param home_timeouts: The home_timeouts of this Score.
        :param is_in_progress: The is_in_progress of this Score.
        :param is_over: The is_over of this Score.
        :param is_overtime: The is_overtime of this Score.
        :param last_play: The last_play of this Score.
        :param last_updated: The last_updated of this Score.
        :param neutral_venue: The neutral_venue of this Score.
        :param over_payout: The over_payout of this Score.
        :param over_under: The over_under of this Score.
        :param point_spread: The point_spread of this Score.
        :param point_spread_away_team_money_line: The point_spread_away_team_money_line of this Score.
        :param point_spread_home_team_money_line: The point_spread_home_team_money_line of this Score.
        :param possession: The possession of this Score.
        :param quarter: The quarter of this Score.
        :param quarter_description: The quarter_description of this Score.
        :param red_zone: The red_zone of this Score.
        :param referee_id: The referee_id of this Score.
        :param score_id: The score_id of this Score.
        :param season: The season of this Score.
        :param season_type: The season_type of this Score.
        :param stadium_details: The stadium_details of this Score.
        :param stadium_id: The stadium_id of this Score.
        :param status: The status of this Score.
        :param time_remaining: The time_remaining of this Score.
        :param under_payout: The under_payout of this Score.
        :param week: The week of this Score.
        :param yard_line: The yard_line of this Score.
        :param yard_line_territory: The yard_line_territory of this Score.
        """
        self.openapi_types = {
            'attendance': int,
            'away_rotation_number': int,
            'away_score': int,
            'away_score_overtime': int,
            'away_score_quarter1': int,
            'away_score_quarter2': int,
            'away_score_quarter3': int,
            'away_score_quarter4': int,
            'away_team': str,
            'away_team_id': int,
            'away_team_money_line': int,
            'away_timeouts': int,
            'canceled': bool,
            'channel': str,
            'closed': bool,
            '_date': str,
            'date_time': str,
            'date_time_utc': str,
            'day': str,
            'distance': str,
            'down': int,
            'down_and_distance': str,
            'forecast_description': str,
            'forecast_temp_high': int,
            'forecast_temp_low': int,
            'forecast_wind_chill': int,
            'forecast_wind_speed': int,
            'game_end_date_time': str,
            'game_key': str,
            'geo_lat': float,
            'geo_long': float,
            'global_away_team_id': int,
            'global_game_id': int,
            'global_home_team_id': int,
            'has1st_quarter_started': bool,
            'has2nd_quarter_started': bool,
            'has3rd_quarter_started': bool,
            'has4th_quarter_started': bool,
            'has_started': bool,
            'home_rotation_number': int,
            'home_score': int,
            'home_score_overtime': int,
            'home_score_quarter1': int,
            'home_score_quarter2': int,
            'home_score_quarter3': int,
            'home_score_quarter4': int,
            'home_team': str,
            'home_team_id': int,
            'home_team_money_line': int,
            'home_timeouts': int,
            'is_in_progress': bool,
            'is_over': bool,
            'is_overtime': bool,
            'last_play': str,
            'last_updated': str,
            'neutral_venue': bool,
            'over_payout': int,
            'over_under': float,
            'point_spread': float,
            'point_spread_away_team_money_line': int,
            'point_spread_home_team_money_line': int,
            'possession': str,
            'quarter': str,
            'quarter_description': str,
            'red_zone': str,
            'referee_id': int,
            'score_id': int,
            'season': int,
            'season_type': int,
            'stadium_details': Stadium,
            'stadium_id': int,
            'status': str,
            'time_remaining': str,
            'under_payout': int,
            'week': int,
            'yard_line': int,
            'yard_line_territory': str
        }

        self.attribute_map = {
            'attendance': 'Attendance',
            'away_rotation_number': 'AwayRotationNumber',
            'away_score': 'AwayScore',
            'away_score_overtime': 'AwayScoreOvertime',
            'away_score_quarter1': 'AwayScoreQuarter1',
            'away_score_quarter2': 'AwayScoreQuarter2',
            'away_score_quarter3': 'AwayScoreQuarter3',
            'away_score_quarter4': 'AwayScoreQuarter4',
            'away_team': 'AwayTeam',
            'away_team_id': 'AwayTeamID',
            'away_team_money_line': 'AwayTeamMoneyLine',
            'away_timeouts': 'AwayTimeouts',
            'canceled': 'Canceled',
            'channel': 'Channel',
            'closed': 'Closed',
            '_date': 'Date',
            'date_time': 'DateTime',
            'date_time_utc': 'DateTimeUTC',
            'day': 'Day',
            'distance': 'Distance',
            'down': 'Down',
            'down_and_distance': 'DownAndDistance',
            'forecast_description': 'ForecastDescription',
            'forecast_temp_high': 'ForecastTempHigh',
            'forecast_temp_low': 'ForecastTempLow',
            'forecast_wind_chill': 'ForecastWindChill',
            'forecast_wind_speed': 'ForecastWindSpeed',
            'game_end_date_time': 'GameEndDateTime',
            'game_key': 'GameKey',
            'geo_lat': 'GeoLat',
            'geo_long': 'GeoLong',
            'global_away_team_id': 'GlobalAwayTeamID',
            'global_game_id': 'GlobalGameID',
            'global_home_team_id': 'GlobalHomeTeamID',
            'has1st_quarter_started': 'Has1stQuarterStarted',
            'has2nd_quarter_started': 'Has2ndQuarterStarted',
            'has3rd_quarter_started': 'Has3rdQuarterStarted',
            'has4th_quarter_started': 'Has4thQuarterStarted',
            'has_started': 'HasStarted',
            'home_rotation_number': 'HomeRotationNumber',
            'home_score': 'HomeScore',
            'home_score_overtime': 'HomeScoreOvertime',
            'home_score_quarter1': 'HomeScoreQuarter1',
            'home_score_quarter2': 'HomeScoreQuarter2',
            'home_score_quarter3': 'HomeScoreQuarter3',
            'home_score_quarter4': 'HomeScoreQuarter4',
            'home_team': 'HomeTeam',
            'home_team_id': 'HomeTeamID',
            'home_team_money_line': 'HomeTeamMoneyLine',
            'home_timeouts': 'HomeTimeouts',
            'is_in_progress': 'IsInProgress',
            'is_over': 'IsOver',
            'is_overtime': 'IsOvertime',
            'last_play': 'LastPlay',
            'last_updated': 'LastUpdated',
            'neutral_venue': 'NeutralVenue',
            'over_payout': 'OverPayout',
            'over_under': 'OverUnder',
            'point_spread': 'PointSpread',
            'point_spread_away_team_money_line': 'PointSpreadAwayTeamMoneyLine',
            'point_spread_home_team_money_line': 'PointSpreadHomeTeamMoneyLine',
            'possession': 'Possession',
            'quarter': 'Quarter',
            'quarter_description': 'QuarterDescription',
            'red_zone': 'RedZone',
            'referee_id': 'RefereeID',
            'score_id': 'ScoreID',
            'season': 'Season',
            'season_type': 'SeasonType',
            'stadium_details': 'StadiumDetails',
            'stadium_id': 'StadiumID',
            'status': 'Status',
            'time_remaining': 'TimeRemaining',
            'under_payout': 'UnderPayout',
            'week': 'Week',
            'yard_line': 'YardLine',
            'yard_line_territory': 'YardLineTerritory'
        }

        self._attendance = attendance
        self._away_rotation_number = away_rotation_number
        self._away_score = away_score
        self._away_score_overtime = away_score_overtime
        self._away_score_quarter1 = away_score_quarter1
        self._away_score_quarter2 = away_score_quarter2
        self._away_score_quarter3 = away_score_quarter3
        self._away_score_quarter4 = away_score_quarter4
        self._away_team = away_team
        self._away_team_id = away_team_id
        self._away_team_money_line = away_team_money_line
        self._away_timeouts = away_timeouts
        self._canceled = canceled
        self._channel = channel
        self._closed = closed
        self.__date = _date
        self._date_time = date_time
        self._date_time_utc = date_time_utc
        self._day = day
        self._distance = distance
        self._down = down
        self._down_and_distance = down_and_distance
        self._forecast_description = forecast_description
        self._forecast_temp_high = forecast_temp_high
        self._forecast_temp_low = forecast_temp_low
        self._forecast_wind_chill = forecast_wind_chill
        self._forecast_wind_speed = forecast_wind_speed
        self._game_end_date_time = game_end_date_time
        self._game_key = game_key
        self._geo_lat = geo_lat
        self._geo_long = geo_long
        self._global_away_team_id = global_away_team_id
        self._global_game_id = global_game_id
        self._global_home_team_id = global_home_team_id
        self._has1st_quarter_started = has1st_quarter_started
        self._has2nd_quarter_started = has2nd_quarter_started
        self._has3rd_quarter_started = has3rd_quarter_started
        self._has4th_quarter_started = has4th_quarter_started
        self._has_started = has_started
        self._home_rotation_number = home_rotation_number
        self._home_score = home_score
        self._home_score_overtime = home_score_overtime
        self._home_score_quarter1 = home_score_quarter1
        self._home_score_quarter2 = home_score_quarter2
        self._home_score_quarter3 = home_score_quarter3
        self._home_score_quarter4 = home_score_quarter4
        self._home_team = home_team
        self._home_team_id = home_team_id
        self._home_team_money_line = home_team_money_line
        self._home_timeouts = home_timeouts
        self._is_in_progress = is_in_progress
        self._is_over = is_over
        self._is_overtime = is_overtime
        self._last_play = last_play
        self._last_updated = last_updated
        self._neutral_venue = neutral_venue
        self._over_payout = over_payout
        self._over_under = over_under
        self._point_spread = point_spread
        self._point_spread_away_team_money_line = point_spread_away_team_money_line
        self._point_spread_home_team_money_line = point_spread_home_team_money_line
        self._possession = possession
        self._quarter = quarter
        self._quarter_description = quarter_description
        self._red_zone = red_zone
        self._referee_id = referee_id
        self._score_id = score_id
        self._season = season
        self._season_type = season_type
        self._stadium_details = stadium_details
        self._stadium_id = stadium_id
        self._status = status
        self._time_remaining = time_remaining
        self._under_payout = under_payout
        self._week = week
        self._yard_line = yard_line
        self._yard_line_territory = yard_line_territory

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Score':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Score of this Score.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attendance(self):
        """Gets the attendance of this Score.


        :return: The attendance of this Score.
        :rtype: int
        """
        return self._attendance

    @attendance.setter
    def attendance(self, attendance):
        """Sets the attendance of this Score.


        :param attendance: The attendance of this Score.
        :type attendance: int
        """

        self._attendance = attendance

    @property
    def away_rotation_number(self):
        """Gets the away_rotation_number of this Score.


        :return: The away_rotation_number of this Score.
        :rtype: int
        """
        return self._away_rotation_number

    @away_rotation_number.setter
    def away_rotation_number(self, away_rotation_number):
        """Sets the away_rotation_number of this Score.


        :param away_rotation_number: The away_rotation_number of this Score.
        :type away_rotation_number: int
        """

        self._away_rotation_number = away_rotation_number

    @property
    def away_score(self):
        """Gets the away_score of this Score.


        :return: The away_score of this Score.
        :rtype: int
        """
        return self._away_score

    @away_score.setter
    def away_score(self, away_score):
        """Sets the away_score of this Score.


        :param away_score: The away_score of this Score.
        :type away_score: int
        """

        self._away_score = away_score

    @property
    def away_score_overtime(self):
        """Gets the away_score_overtime of this Score.


        :return: The away_score_overtime of this Score.
        :rtype: int
        """
        return self._away_score_overtime

    @away_score_overtime.setter
    def away_score_overtime(self, away_score_overtime):
        """Sets the away_score_overtime of this Score.


        :param away_score_overtime: The away_score_overtime of this Score.
        :type away_score_overtime: int
        """

        self._away_score_overtime = away_score_overtime

    @property
    def away_score_quarter1(self):
        """Gets the away_score_quarter1 of this Score.


        :return: The away_score_quarter1 of this Score.
        :rtype: int
        """
        return self._away_score_quarter1

    @away_score_quarter1.setter
    def away_score_quarter1(self, away_score_quarter1):
        """Sets the away_score_quarter1 of this Score.


        :param away_score_quarter1: The away_score_quarter1 of this Score.
        :type away_score_quarter1: int
        """

        self._away_score_quarter1 = away_score_quarter1

    @property
    def away_score_quarter2(self):
        """Gets the away_score_quarter2 of this Score.


        :return: The away_score_quarter2 of this Score.
        :rtype: int
        """
        return self._away_score_quarter2

    @away_score_quarter2.setter
    def away_score_quarter2(self, away_score_quarter2):
        """Sets the away_score_quarter2 of this Score.


        :param away_score_quarter2: The away_score_quarter2 of this Score.
        :type away_score_quarter2: int
        """

        self._away_score_quarter2 = away_score_quarter2

    @property
    def away_score_quarter3(self):
        """Gets the away_score_quarter3 of this Score.


        :return: The away_score_quarter3 of this Score.
        :rtype: int
        """
        return self._away_score_quarter3

    @away_score_quarter3.setter
    def away_score_quarter3(self, away_score_quarter3):
        """Sets the away_score_quarter3 of this Score.


        :param away_score_quarter3: The away_score_quarter3 of this Score.
        :type away_score_quarter3: int
        """

        self._away_score_quarter3 = away_score_quarter3

    @property
    def away_score_quarter4(self):
        """Gets the away_score_quarter4 of this Score.


        :return: The away_score_quarter4 of this Score.
        :rtype: int
        """
        return self._away_score_quarter4

    @away_score_quarter4.setter
    def away_score_quarter4(self, away_score_quarter4):
        """Sets the away_score_quarter4 of this Score.


        :param away_score_quarter4: The away_score_quarter4 of this Score.
        :type away_score_quarter4: int
        """

        self._away_score_quarter4 = away_score_quarter4

    @property
    def away_team(self):
        """Gets the away_team of this Score.


        :return: The away_team of this Score.
        :rtype: str
        """
        return self._away_team

    @away_team.setter
    def away_team(self, away_team):
        """Sets the away_team of this Score.


        :param away_team: The away_team of this Score.
        :type away_team: str
        """

        self._away_team = away_team

    @property
    def away_team_id(self):
        """Gets the away_team_id of this Score.


        :return: The away_team_id of this Score.
        :rtype: int
        """
        return self._away_team_id

    @away_team_id.setter
    def away_team_id(self, away_team_id):
        """Sets the away_team_id of this Score.


        :param away_team_id: The away_team_id of this Score.
        :type away_team_id: int
        """

        self._away_team_id = away_team_id

    @property
    def away_team_money_line(self):
        """Gets the away_team_money_line of this Score.


        :return: The away_team_money_line of this Score.
        :rtype: int
        """
        return self._away_team_money_line

    @away_team_money_line.setter
    def away_team_money_line(self, away_team_money_line):
        """Sets the away_team_money_line of this Score.


        :param away_team_money_line: The away_team_money_line of this Score.
        :type away_team_money_line: int
        """

        self._away_team_money_line = away_team_money_line

    @property
    def away_timeouts(self):
        """Gets the away_timeouts of this Score.


        :return: The away_timeouts of this Score.
        :rtype: int
        """
        return self._away_timeouts

    @away_timeouts.setter
    def away_timeouts(self, away_timeouts):
        """Sets the away_timeouts of this Score.


        :param away_timeouts: The away_timeouts of this Score.
        :type away_timeouts: int
        """

        self._away_timeouts = away_timeouts

    @property
    def canceled(self):
        """Gets the canceled of this Score.


        :return: The canceled of this Score.
        :rtype: bool
        """
        return self._canceled

    @canceled.setter
    def canceled(self, canceled):
        """Sets the canceled of this Score.


        :param canceled: The canceled of this Score.
        :type canceled: bool
        """

        self._canceled = canceled

    @property
    def channel(self):
        """Gets the channel of this Score.


        :return: The channel of this Score.
        :rtype: str
        """
        return self._channel

    @channel.setter
    def channel(self, channel):
        """Sets the channel of this Score.


        :param channel: The channel of this Score.
        :type channel: str
        """

        self._channel = channel

    @property
    def closed(self):
        """Gets the closed of this Score.


        :return: The closed of this Score.
        :rtype: bool
        """
        return self._closed

    @closed.setter
    def closed(self, closed):
        """Sets the closed of this Score.


        :param closed: The closed of this Score.
        :type closed: bool
        """

        self._closed = closed

    @property
    def _date(self):
        """Gets the _date of this Score.


        :return: The _date of this Score.
        :rtype: str
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this Score.


        :param _date: The _date of this Score.
        :type _date: str
        """

        self.__date = _date

    @property
    def date_time(self):
        """Gets the date_time of this Score.


        :return: The date_time of this Score.
        :rtype: str
        """
        return self._date_time

    @date_time.setter
    def date_time(self, date_time):
        """Sets the date_time of this Score.


        :param date_time: The date_time of this Score.
        :type date_time: str
        """

        self._date_time = date_time

    @property
    def date_time_utc(self):
        """Gets the date_time_utc of this Score.


        :return: The date_time_utc of this Score.
        :rtype: str
        """
        return self._date_time_utc

    @date_time_utc.setter
    def date_time_utc(self, date_time_utc):
        """Sets the date_time_utc of this Score.


        :param date_time_utc: The date_time_utc of this Score.
        :type date_time_utc: str
        """

        self._date_time_utc = date_time_utc

    @property
    def day(self):
        """Gets the day of this Score.


        :return: The day of this Score.
        :rtype: str
        """
        return self._day

    @day.setter
    def day(self, day):
        """Sets the day of this Score.


        :param day: The day of this Score.
        :type day: str
        """

        self._day = day

    @property
    def distance(self):
        """Gets the distance of this Score.


        :return: The distance of this Score.
        :rtype: str
        """
        return self._distance

    @distance.setter
    def distance(self, distance):
        """Sets the distance of this Score.


        :param distance: The distance of this Score.
        :type distance: str
        """

        self._distance = distance

    @property
    def down(self):
        """Gets the down of this Score.


        :return: The down of this Score.
        :rtype: int
        """
        return self._down

    @down.setter
    def down(self, down):
        """Sets the down of this Score.


        :param down: The down of this Score.
        :type down: int
        """

        self._down = down

    @property
    def down_and_distance(self):
        """Gets the down_and_distance of this Score.


        :return: The down_and_distance of this Score.
        :rtype: str
        """
        return self._down_and_distance

    @down_and_distance.setter
    def down_and_distance(self, down_and_distance):
        """Sets the down_and_distance of this Score.


        :param down_and_distance: The down_and_distance of this Score.
        :type down_and_distance: str
        """

        self._down_and_distance = down_and_distance

    @property
    def forecast_description(self):
        """Gets the forecast_description of this Score.


        :return: The forecast_description of this Score.
        :rtype: str
        """
        return self._forecast_description

    @forecast_description.setter
    def forecast_description(self, forecast_description):
        """Sets the forecast_description of this Score.


        :param forecast_description: The forecast_description of this Score.
        :type forecast_description: str
        """

        self._forecast_description = forecast_description

    @property
    def forecast_temp_high(self):
        """Gets the forecast_temp_high of this Score.


        :return: The forecast_temp_high of this Score.
        :rtype: int
        """
        return self._forecast_temp_high

    @forecast_temp_high.setter
    def forecast_temp_high(self, forecast_temp_high):
        """Sets the forecast_temp_high of this Score.


        :param forecast_temp_high: The forecast_temp_high of this Score.
        :type forecast_temp_high: int
        """

        self._forecast_temp_high = forecast_temp_high

    @property
    def forecast_temp_low(self):
        """Gets the forecast_temp_low of this Score.


        :return: The forecast_temp_low of this Score.
        :rtype: int
        """
        return self._forecast_temp_low

    @forecast_temp_low.setter
    def forecast_temp_low(self, forecast_temp_low):
        """Sets the forecast_temp_low of this Score.


        :param forecast_temp_low: The forecast_temp_low of this Score.
        :type forecast_temp_low: int
        """

        self._forecast_temp_low = forecast_temp_low

    @property
    def forecast_wind_chill(self):
        """Gets the forecast_wind_chill of this Score.


        :return: The forecast_wind_chill of this Score.
        :rtype: int
        """
        return self._forecast_wind_chill

    @forecast_wind_chill.setter
    def forecast_wind_chill(self, forecast_wind_chill):
        """Sets the forecast_wind_chill of this Score.


        :param forecast_wind_chill: The forecast_wind_chill of this Score.
        :type forecast_wind_chill: int
        """

        self._forecast_wind_chill = forecast_wind_chill

    @property
    def forecast_wind_speed(self):
        """Gets the forecast_wind_speed of this Score.


        :return: The forecast_wind_speed of this Score.
        :rtype: int
        """
        return self._forecast_wind_speed

    @forecast_wind_speed.setter
    def forecast_wind_speed(self, forecast_wind_speed):
        """Sets the forecast_wind_speed of this Score.


        :param forecast_wind_speed: The forecast_wind_speed of this Score.
        :type forecast_wind_speed: int
        """

        self._forecast_wind_speed = forecast_wind_speed

    @property
    def game_end_date_time(self):
        """Gets the game_end_date_time of this Score.


        :return: The game_end_date_time of this Score.
        :rtype: str
        """
        return self._game_end_date_time

    @game_end_date_time.setter
    def game_end_date_time(self, game_end_date_time):
        """Sets the game_end_date_time of this Score.


        :param game_end_date_time: The game_end_date_time of this Score.
        :type game_end_date_time: str
        """

        self._game_end_date_time = game_end_date_time

    @property
    def game_key(self):
        """Gets the game_key of this Score.


        :return: The game_key of this Score.
        :rtype: str
        """
        return self._game_key

    @game_key.setter
    def game_key(self, game_key):
        """Sets the game_key of this Score.


        :param game_key: The game_key of this Score.
        :type game_key: str
        """

        self._game_key = game_key

    @property
    def geo_lat(self):
        """Gets the geo_lat of this Score.


        :return: The geo_lat of this Score.
        :rtype: float
        """
        return self._geo_lat

    @geo_lat.setter
    def geo_lat(self, geo_lat):
        """Sets the geo_lat of this Score.


        :param geo_lat: The geo_lat of this Score.
        :type geo_lat: float
        """

        self._geo_lat = geo_lat

    @property
    def geo_long(self):
        """Gets the geo_long of this Score.


        :return: The geo_long of this Score.
        :rtype: float
        """
        return self._geo_long

    @geo_long.setter
    def geo_long(self, geo_long):
        """Sets the geo_long of this Score.


        :param geo_long: The geo_long of this Score.
        :type geo_long: float
        """

        self._geo_long = geo_long

    @property
    def global_away_team_id(self):
        """Gets the global_away_team_id of this Score.


        :return: The global_away_team_id of this Score.
        :rtype: int
        """
        return self._global_away_team_id

    @global_away_team_id.setter
    def global_away_team_id(self, global_away_team_id):
        """Sets the global_away_team_id of this Score.


        :param global_away_team_id: The global_away_team_id of this Score.
        :type global_away_team_id: int
        """

        self._global_away_team_id = global_away_team_id

    @property
    def global_game_id(self):
        """Gets the global_game_id of this Score.


        :return: The global_game_id of this Score.
        :rtype: int
        """
        return self._global_game_id

    @global_game_id.setter
    def global_game_id(self, global_game_id):
        """Sets the global_game_id of this Score.


        :param global_game_id: The global_game_id of this Score.
        :type global_game_id: int
        """

        self._global_game_id = global_game_id

    @property
    def global_home_team_id(self):
        """Gets the global_home_team_id of this Score.


        :return: The global_home_team_id of this Score.
        :rtype: int
        """
        return self._global_home_team_id

    @global_home_team_id.setter
    def global_home_team_id(self, global_home_team_id):
        """Sets the global_home_team_id of this Score.


        :param global_home_team_id: The global_home_team_id of this Score.
        :type global_home_team_id: int
        """

        self._global_home_team_id = global_home_team_id

    @property
    def has1st_quarter_started(self):
        """Gets the has1st_quarter_started of this Score.


        :return: The has1st_quarter_started of this Score.
        :rtype: bool
        """
        return self._has1st_quarter_started

    @has1st_quarter_started.setter
    def has1st_quarter_started(self, has1st_quarter_started):
        """Sets the has1st_quarter_started of this Score.


        :param has1st_quarter_started: The has1st_quarter_started of this Score.
        :type has1st_quarter_started: bool
        """

        self._has1st_quarter_started = has1st_quarter_started

    @property
    def has2nd_quarter_started(self):
        """Gets the has2nd_quarter_started of this Score.


        :return: The has2nd_quarter_started of this Score.
        :rtype: bool
        """
        return self._has2nd_quarter_started

    @has2nd_quarter_started.setter
    def has2nd_quarter_started(self, has2nd_quarter_started):
        """Sets the has2nd_quarter_started of this Score.


        :param has2nd_quarter_started: The has2nd_quarter_started of this Score.
        :type has2nd_quarter_started: bool
        """

        self._has2nd_quarter_started = has2nd_quarter_started

    @property
    def has3rd_quarter_started(self):
        """Gets the has3rd_quarter_started of this Score.


        :return: The has3rd_quarter_started of this Score.
        :rtype: bool
        """
        return self._has3rd_quarter_started

    @has3rd_quarter_started.setter
    def has3rd_quarter_started(self, has3rd_quarter_started):
        """Sets the has3rd_quarter_started of this Score.


        :param has3rd_quarter_started: The has3rd_quarter_started of this Score.
        :type has3rd_quarter_started: bool
        """

        self._has3rd_quarter_started = has3rd_quarter_started

    @property
    def has4th_quarter_started(self):
        """Gets the has4th_quarter_started of this Score.


        :return: The has4th_quarter_started of this Score.
        :rtype: bool
        """
        return self._has4th_quarter_started

    @has4th_quarter_started.setter
    def has4th_quarter_started(self, has4th_quarter_started):
        """Sets the has4th_quarter_started of this Score.


        :param has4th_quarter_started: The has4th_quarter_started of this Score.
        :type has4th_quarter_started: bool
        """

        self._has4th_quarter_started = has4th_quarter_started

    @property
    def has_started(self):
        """Gets the has_started of this Score.


        :return: The has_started of this Score.
        :rtype: bool
        """
        return self._has_started

    @has_started.setter
    def has_started(self, has_started):
        """Sets the has_started of this Score.


        :param has_started: The has_started of this Score.
        :type has_started: bool
        """

        self._has_started = has_started

    @property
    def home_rotation_number(self):
        """Gets the home_rotation_number of this Score.


        :return: The home_rotation_number of this Score.
        :rtype: int
        """
        return self._home_rotation_number

    @home_rotation_number.setter
    def home_rotation_number(self, home_rotation_number):
        """Sets the home_rotation_number of this Score.


        :param home_rotation_number: The home_rotation_number of this Score.
        :type home_rotation_number: int
        """

        self._home_rotation_number = home_rotation_number

    @property
    def home_score(self):
        """Gets the home_score of this Score.


        :return: The home_score of this Score.
        :rtype: int
        """
        return self._home_score

    @home_score.setter
    def home_score(self, home_score):
        """Sets the home_score of this Score.


        :param home_score: The home_score of this Score.
        :type home_score: int
        """

        self._home_score = home_score

    @property
    def home_score_overtime(self):
        """Gets the home_score_overtime of this Score.


        :return: The home_score_overtime of this Score.
        :rtype: int
        """
        return self._home_score_overtime

    @home_score_overtime.setter
    def home_score_overtime(self, home_score_overtime):
        """Sets the home_score_overtime of this Score.


        :param home_score_overtime: The home_score_overtime of this Score.
        :type home_score_overtime: int
        """

        self._home_score_overtime = home_score_overtime

    @property
    def home_score_quarter1(self):
        """Gets the home_score_quarter1 of this Score.


        :return: The home_score_quarter1 of this Score.
        :rtype: int
        """
        return self._home_score_quarter1

    @home_score_quarter1.setter
    def home_score_quarter1(self, home_score_quarter1):
        """Sets the home_score_quarter1 of this Score.


        :param home_score_quarter1: The home_score_quarter1 of this Score.
        :type home_score_quarter1: int
        """

        self._home_score_quarter1 = home_score_quarter1

    @property
    def home_score_quarter2(self):
        """Gets the home_score_quarter2 of this Score.


        :return: The home_score_quarter2 of this Score.
        :rtype: int
        """
        return self._home_score_quarter2

    @home_score_quarter2.setter
    def home_score_quarter2(self, home_score_quarter2):
        """Sets the home_score_quarter2 of this Score.


        :param home_score_quarter2: The home_score_quarter2 of this Score.
        :type home_score_quarter2: int
        """

        self._home_score_quarter2 = home_score_quarter2

    @property
    def home_score_quarter3(self):
        """Gets the home_score_quarter3 of this Score.


        :return: The home_score_quarter3 of this Score.
        :rtype: int
        """
        return self._home_score_quarter3

    @home_score_quarter3.setter
    def home_score_quarter3(self, home_score_quarter3):
        """Sets the home_score_quarter3 of this Score.


        :param home_score_quarter3: The home_score_quarter3 of this Score.
        :type home_score_quarter3: int
        """

        self._home_score_quarter3 = home_score_quarter3

    @property
    def home_score_quarter4(self):
        """Gets the home_score_quarter4 of this Score.


        :return: The home_score_quarter4 of this Score.
        :rtype: int
        """
        return self._home_score_quarter4

    @home_score_quarter4.setter
    def home_score_quarter4(self, home_score_quarter4):
        """Sets the home_score_quarter4 of this Score.


        :param home_score_quarter4: The home_score_quarter4 of this Score.
        :type home_score_quarter4: int
        """

        self._home_score_quarter4 = home_score_quarter4

    @property
    def home_team(self):
        """Gets the home_team of this Score.


        :return: The home_team of this Score.
        :rtype: str
        """
        return self._home_team

    @home_team.setter
    def home_team(self, home_team):
        """Sets the home_team of this Score.


        :param home_team: The home_team of this Score.
        :type home_team: str
        """

        self._home_team = home_team

    @property
    def home_team_id(self):
        """Gets the home_team_id of this Score.


        :return: The home_team_id of this Score.
        :rtype: int
        """
        return self._home_team_id

    @home_team_id.setter
    def home_team_id(self, home_team_id):
        """Sets the home_team_id of this Score.


        :param home_team_id: The home_team_id of this Score.
        :type home_team_id: int
        """

        self._home_team_id = home_team_id

    @property
    def home_team_money_line(self):
        """Gets the home_team_money_line of this Score.


        :return: The home_team_money_line of this Score.
        :rtype: int
        """
        return self._home_team_money_line

    @home_team_money_line.setter
    def home_team_money_line(self, home_team_money_line):
        """Sets the home_team_money_line of this Score.


        :param home_team_money_line: The home_team_money_line of this Score.
        :type home_team_money_line: int
        """

        self._home_team_money_line = home_team_money_line

    @property
    def home_timeouts(self):
        """Gets the home_timeouts of this Score.


        :return: The home_timeouts of this Score.
        :rtype: int
        """
        return self._home_timeouts

    @home_timeouts.setter
    def home_timeouts(self, home_timeouts):
        """Sets the home_timeouts of this Score.


        :param home_timeouts: The home_timeouts of this Score.
        :type home_timeouts: int
        """

        self._home_timeouts = home_timeouts

    @property
    def is_in_progress(self):
        """Gets the is_in_progress of this Score.


        :return: The is_in_progress of this Score.
        :rtype: bool
        """
        return self._is_in_progress

    @is_in_progress.setter
    def is_in_progress(self, is_in_progress):
        """Sets the is_in_progress of this Score.


        :param is_in_progress: The is_in_progress of this Score.
        :type is_in_progress: bool
        """

        self._is_in_progress = is_in_progress

    @property
    def is_over(self):
        """Gets the is_over of this Score.


        :return: The is_over of this Score.
        :rtype: bool
        """
        return self._is_over

    @is_over.setter
    def is_over(self, is_over):
        """Sets the is_over of this Score.


        :param is_over: The is_over of this Score.
        :type is_over: bool
        """

        self._is_over = is_over

    @property
    def is_overtime(self):
        """Gets the is_overtime of this Score.


        :return: The is_overtime of this Score.
        :rtype: bool
        """
        return self._is_overtime

    @is_overtime.setter
    def is_overtime(self, is_overtime):
        """Sets the is_overtime of this Score.


        :param is_overtime: The is_overtime of this Score.
        :type is_overtime: bool
        """

        self._is_overtime = is_overtime

    @property
    def last_play(self):
        """Gets the last_play of this Score.


        :return: The last_play of this Score.
        :rtype: str
        """
        return self._last_play

    @last_play.setter
    def last_play(self, last_play):
        """Sets the last_play of this Score.


        :param last_play: The last_play of this Score.
        :type last_play: str
        """

        self._last_play = last_play

    @property
    def last_updated(self):
        """Gets the last_updated of this Score.


        :return: The last_updated of this Score.
        :rtype: str
        """
        return self._last_updated

    @last_updated.setter
    def last_updated(self, last_updated):
        """Sets the last_updated of this Score.


        :param last_updated: The last_updated of this Score.
        :type last_updated: str
        """

        self._last_updated = last_updated

    @property
    def neutral_venue(self):
        """Gets the neutral_venue of this Score.


        :return: The neutral_venue of this Score.
        :rtype: bool
        """
        return self._neutral_venue

    @neutral_venue.setter
    def neutral_venue(self, neutral_venue):
        """Sets the neutral_venue of this Score.


        :param neutral_venue: The neutral_venue of this Score.
        :type neutral_venue: bool
        """

        self._neutral_venue = neutral_venue

    @property
    def over_payout(self):
        """Gets the over_payout of this Score.


        :return: The over_payout of this Score.
        :rtype: int
        """
        return self._over_payout

    @over_payout.setter
    def over_payout(self, over_payout):
        """Sets the over_payout of this Score.


        :param over_payout: The over_payout of this Score.
        :type over_payout: int
        """

        self._over_payout = over_payout

    @property
    def over_under(self):
        """Gets the over_under of this Score.


        :return: The over_under of this Score.
        :rtype: float
        """
        return self._over_under

    @over_under.setter
    def over_under(self, over_under):
        """Sets the over_under of this Score.


        :param over_under: The over_under of this Score.
        :type over_under: float
        """

        self._over_under = over_under

    @property
    def point_spread(self):
        """Gets the point_spread of this Score.


        :return: The point_spread of this Score.
        :rtype: float
        """
        return self._point_spread

    @point_spread.setter
    def point_spread(self, point_spread):
        """Sets the point_spread of this Score.


        :param point_spread: The point_spread of this Score.
        :type point_spread: float
        """

        self._point_spread = point_spread

    @property
    def point_spread_away_team_money_line(self):
        """Gets the point_spread_away_team_money_line of this Score.


        :return: The point_spread_away_team_money_line of this Score.
        :rtype: int
        """
        return self._point_spread_away_team_money_line

    @point_spread_away_team_money_line.setter
    def point_spread_away_team_money_line(self, point_spread_away_team_money_line):
        """Sets the point_spread_away_team_money_line of this Score.


        :param point_spread_away_team_money_line: The point_spread_away_team_money_line of this Score.
        :type point_spread_away_team_money_line: int
        """

        self._point_spread_away_team_money_line = point_spread_away_team_money_line

    @property
    def point_spread_home_team_money_line(self):
        """Gets the point_spread_home_team_money_line of this Score.


        :return: The point_spread_home_team_money_line of this Score.
        :rtype: int
        """
        return self._point_spread_home_team_money_line

    @point_spread_home_team_money_line.setter
    def point_spread_home_team_money_line(self, point_spread_home_team_money_line):
        """Sets the point_spread_home_team_money_line of this Score.


        :param point_spread_home_team_money_line: The point_spread_home_team_money_line of this Score.
        :type point_spread_home_team_money_line: int
        """

        self._point_spread_home_team_money_line = point_spread_home_team_money_line

    @property
    def possession(self):
        """Gets the possession of this Score.


        :return: The possession of this Score.
        :rtype: str
        """
        return self._possession

    @possession.setter
    def possession(self, possession):
        """Sets the possession of this Score.


        :param possession: The possession of this Score.
        :type possession: str
        """

        self._possession = possession

    @property
    def quarter(self):
        """Gets the quarter of this Score.


        :return: The quarter of this Score.
        :rtype: str
        """
        return self._quarter

    @quarter.setter
    def quarter(self, quarter):
        """Sets the quarter of this Score.


        :param quarter: The quarter of this Score.
        :type quarter: str
        """

        self._quarter = quarter

    @property
    def quarter_description(self):
        """Gets the quarter_description of this Score.


        :return: The quarter_description of this Score.
        :rtype: str
        """
        return self._quarter_description

    @quarter_description.setter
    def quarter_description(self, quarter_description):
        """Sets the quarter_description of this Score.


        :param quarter_description: The quarter_description of this Score.
        :type quarter_description: str
        """

        self._quarter_description = quarter_description

    @property
    def red_zone(self):
        """Gets the red_zone of this Score.


        :return: The red_zone of this Score.
        :rtype: str
        """
        return self._red_zone

    @red_zone.setter
    def red_zone(self, red_zone):
        """Sets the red_zone of this Score.


        :param red_zone: The red_zone of this Score.
        :type red_zone: str
        """

        self._red_zone = red_zone

    @property
    def referee_id(self):
        """Gets the referee_id of this Score.


        :return: The referee_id of this Score.
        :rtype: int
        """
        return self._referee_id

    @referee_id.setter
    def referee_id(self, referee_id):
        """Sets the referee_id of this Score.


        :param referee_id: The referee_id of this Score.
        :type referee_id: int
        """

        self._referee_id = referee_id

    @property
    def score_id(self):
        """Gets the score_id of this Score.


        :return: The score_id of this Score.
        :rtype: int
        """
        return self._score_id

    @score_id.setter
    def score_id(self, score_id):
        """Sets the score_id of this Score.


        :param score_id: The score_id of this Score.
        :type score_id: int
        """

        self._score_id = score_id

    @property
    def season(self):
        """Gets the season of this Score.


        :return: The season of this Score.
        :rtype: int
        """
        return self._season

    @season.setter
    def season(self, season):
        """Sets the season of this Score.


        :param season: The season of this Score.
        :type season: int
        """

        self._season = season

    @property
    def season_type(self):
        """Gets the season_type of this Score.


        :return: The season_type of this Score.
        :rtype: int
        """
        return self._season_type

    @season_type.setter
    def season_type(self, season_type):
        """Sets the season_type of this Score.


        :param season_type: The season_type of this Score.
        :type season_type: int
        """

        self._season_type = season_type

    @property
    def stadium_details(self):
        """Gets the stadium_details of this Score.


        :return: The stadium_details of this Score.
        :rtype: Stadium
        """
        return self._stadium_details

    @stadium_details.setter
    def stadium_details(self, stadium_details):
        """Sets the stadium_details of this Score.


        :param stadium_details: The stadium_details of this Score.
        :type stadium_details: Stadium
        """

        self._stadium_details = stadium_details

    @property
    def stadium_id(self):
        """Gets the stadium_id of this Score.


        :return: The stadium_id of this Score.
        :rtype: int
        """
        return self._stadium_id

    @stadium_id.setter
    def stadium_id(self, stadium_id):
        """Sets the stadium_id of this Score.


        :param stadium_id: The stadium_id of this Score.
        :type stadium_id: int
        """

        self._stadium_id = stadium_id

    @property
    def status(self):
        """Gets the status of this Score.


        :return: The status of this Score.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Score.


        :param status: The status of this Score.
        :type status: str
        """

        self._status = status

    @property
    def time_remaining(self):
        """Gets the time_remaining of this Score.


        :return: The time_remaining of this Score.
        :rtype: str
        """
        return self._time_remaining

    @time_remaining.setter
    def time_remaining(self, time_remaining):
        """Sets the time_remaining of this Score.


        :param time_remaining: The time_remaining of this Score.
        :type time_remaining: str
        """

        self._time_remaining = time_remaining

    @property
    def under_payout(self):
        """Gets the under_payout of this Score.


        :return: The under_payout of this Score.
        :rtype: int
        """
        return self._under_payout

    @under_payout.setter
    def under_payout(self, under_payout):
        """Sets the under_payout of this Score.


        :param under_payout: The under_payout of this Score.
        :type under_payout: int
        """

        self._under_payout = under_payout

    @property
    def week(self):
        """Gets the week of this Score.


        :return: The week of this Score.
        :rtype: int
        """
        return self._week

    @week.setter
    def week(self, week):
        """Sets the week of this Score.


        :param week: The week of this Score.
        :type week: int
        """

        self._week = week

    @property
    def yard_line(self):
        """Gets the yard_line of this Score.


        :return: The yard_line of this Score.
        :rtype: int
        """
        return self._yard_line

    @yard_line.setter
    def yard_line(self, yard_line):
        """Sets the yard_line of this Score.


        :param yard_line: The yard_line of this Score.
        :type yard_line: int
        """

        self._yard_line = yard_line

    @property
    def yard_line_territory(self):
        """Gets the yard_line_territory of this Score.


        :return: The yard_line_territory of this Score.
        :rtype: str
        """
        return self._yard_line_territory

    @yard_line_territory.setter
    def yard_line_territory(self, yard_line_territory):
        """Sets the yard_line_territory of this Score.


        :param yard_line_territory: The yard_line_territory of this Score.
        :type yard_line_territory: str
        """

        self._yard_line_territory = yard_line_territory
