/**
 * NFL v3 Scores
 * NFL schedules, scores, odds, weather, and news API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NflV3Scores);
  }
}(this, function(expect, NflV3Scores) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NflV3Scores.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('areGamesInProgress', function() {
      it('should call areGamesInProgress successfully', function(done) {
        //uncomment below and update the code to test areGamesInProgress
        //instance.areGamesInProgress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('byeWeeks', function() {
      it('should call byeWeeks successfully', function(done) {
        //uncomment below and update the code to test byeWeeks
        //instance.byeWeeks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('depthCharts', function() {
      it('should call depthCharts successfully', function(done) {
        //uncomment below and update the code to test depthCharts
        //instance.depthCharts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameStatsBySeasonDeprecatedUseTeamGameStatsInstead', function() {
      it('should call gameStatsBySeasonDeprecatedUseTeamGameStatsInstead successfully', function(done) {
        //uncomment below and update the code to test gameStatsBySeasonDeprecatedUseTeamGameStatsInstead
        //instance.gameStatsBySeasonDeprecatedUseTeamGameStatsInstead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameStatsByWeekDeprecatedUseTeamGameStatsInstead', function() {
      it('should call gameStatsByWeekDeprecatedUseTeamGameStatsInstead successfully', function(done) {
        //uncomment below and update the code to test gameStatsByWeekDeprecatedUseTeamGameStatsInstead
        //instance.gameStatsByWeekDeprecatedUseTeamGameStatsInstead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('news', function() {
      it('should call news successfully', function(done) {
        //uncomment below and update the code to test news
        //instance.news(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('newsByDate', function() {
      it('should call newsByDate successfully', function(done) {
        //uncomment below and update the code to test newsByDate
        //instance.newsByDate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('newsByPlayer', function() {
      it('should call newsByPlayer successfully', function(done) {
        //uncomment below and update the code to test newsByPlayer
        //instance.newsByPlayer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('newsByTeam', function() {
      it('should call newsByTeam successfully', function(done) {
        //uncomment below and update the code to test newsByTeam
        //instance.newsByTeam(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('playerDetailsByAvailable', function() {
      it('should call playerDetailsByAvailable successfully', function(done) {
        //uncomment below and update the code to test playerDetailsByAvailable
        //instance.playerDetailsByAvailable(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('playerDetailsByFreeAgents', function() {
      it('should call playerDetailsByFreeAgents successfully', function(done) {
        //uncomment below and update the code to test playerDetailsByFreeAgents
        //instance.playerDetailsByFreeAgents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('playerDetailsByPlayer', function() {
      it('should call playerDetailsByPlayer successfully', function(done) {
        //uncomment below and update the code to test playerDetailsByPlayer
        //instance.playerDetailsByPlayer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('playerDetailsByRookieDraftYear', function() {
      it('should call playerDetailsByRookieDraftYear successfully', function(done) {
        //uncomment below and update the code to test playerDetailsByRookieDraftYear
        //instance.playerDetailsByRookieDraftYear(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('playerDetailsByTeam', function() {
      it('should call playerDetailsByTeam successfully', function(done) {
        //uncomment below and update the code to test playerDetailsByTeam
        //instance.playerDetailsByTeam(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('playersByTeamBasic', function() {
      it('should call playersByTeamBasic successfully', function(done) {
        //uncomment below and update the code to test playersByTeamBasic
        //instance.playersByTeamBasic(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('referees', function() {
      it('should call referees successfully', function(done) {
        //uncomment below and update the code to test referees
        //instance.referees(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('schedule', function() {
      it('should call schedule successfully', function(done) {
        //uncomment below and update the code to test schedule
        //instance.schedule(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('scheduleBasic', function() {
      it('should call scheduleBasic successfully', function(done) {
        //uncomment below and update the code to test scheduleBasic
        //instance.scheduleBasic(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('scoresByDate', function() {
      it('should call scoresByDate successfully', function(done) {
        //uncomment below and update the code to test scoresByDate
        //instance.scoresByDate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('scoresBySeason', function() {
      it('should call scoresBySeason successfully', function(done) {
        //uncomment below and update the code to test scoresBySeason
        //instance.scoresBySeason(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('scoresByWeek', function() {
      it('should call scoresByWeek successfully', function(done) {
        //uncomment below and update the code to test scoresByWeek
        //instance.scoresByWeek(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('scoresByWeekBasic', function() {
      it('should call scoresByWeekBasic successfully', function(done) {
        //uncomment below and update the code to test scoresByWeekBasic
        //instance.scoresByWeekBasic(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('scoresByWeekSimulation', function() {
      it('should call scoresByWeekSimulation successfully', function(done) {
        //uncomment below and update the code to test scoresByWeekSimulation
        //instance.scoresByWeekSimulation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('seasonCurrent', function() {
      it('should call seasonCurrent successfully', function(done) {
        //uncomment below and update the code to test seasonCurrent
        //instance.seasonCurrent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('seasonLastCompleted', function() {
      it('should call seasonLastCompleted successfully', function(done) {
        //uncomment below and update the code to test seasonLastCompleted
        //instance.seasonLastCompleted(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('seasonUpcoming', function() {
      it('should call seasonUpcoming successfully', function(done) {
        //uncomment below and update the code to test seasonUpcoming
        //instance.seasonUpcoming(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stadiums', function() {
      it('should call stadiums successfully', function(done) {
        //uncomment below and update the code to test stadiums
        //instance.stadiums(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('standings', function() {
      it('should call standings successfully', function(done) {
        //uncomment below and update the code to test standings
        //instance.standings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('teamGameLogsBySeason', function() {
      it('should call teamGameLogsBySeason successfully', function(done) {
        //uncomment below and update the code to test teamGameLogsBySeason
        //instance.teamGameLogsBySeason(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('teamGameStats', function() {
      it('should call teamGameStats successfully', function(done) {
        //uncomment below and update the code to test teamGameStats
        //instance.teamGameStats(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('teamSeasonStats', function() {
      it('should call teamSeasonStats successfully', function(done) {
        //uncomment below and update the code to test teamSeasonStats
        //instance.teamSeasonStats(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('teamsActive', function() {
      it('should call teamsActive successfully', function(done) {
        //uncomment below and update the code to test teamsActive
        //instance.teamsActive(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('teamsAll', function() {
      it('should call teamsAll successfully', function(done) {
        //uncomment below and update the code to test teamsAll
        //instance.teamsAll(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('teamsBasic', function() {
      it('should call teamsBasic successfully', function(done) {
        //uncomment below and update the code to test teamsBasic
        //instance.teamsBasic(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('teamsBySeason', function() {
      it('should call teamsBySeason successfully', function(done) {
        //uncomment below and update the code to test teamsBySeason
        //instance.teamsBySeason(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('timeframes', function() {
      it('should call timeframes successfully', function(done) {
        //uncomment below and update the code to test timeframes
        //instance.timeframes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('weekCurrent', function() {
      it('should call weekCurrent successfully', function(done) {
        //uncomment below and update the code to test weekCurrent
        //instance.weekCurrent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('weekLastCompleted', function() {
      it('should call weekLastCompleted successfully', function(done) {
        //uncomment below and update the code to test weekLastCompleted
        //instance.weekLastCompleted(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('weekUpcoming', function() {
      it('should call weekUpcoming successfully', function(done) {
        //uncomment below and update the code to test weekUpcoming
        //instance.weekUpcoming(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('xPing', function() {
      it('should call xPing successfully', function(done) {
        //uncomment below and update the code to test xPing
        //instance.xPing(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
