/**
 * NFL v3 Scores
 * NFL schedules, scores, odds, weather, and news API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Timeframe model module.
 * @module model/Timeframe
 * @version 1.0
 */
class Timeframe {
    /**
     * Constructs a new <code>Timeframe</code>.
     * @alias module:model/Timeframe
     */
    constructor() { 
        
        Timeframe.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Timeframe</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Timeframe} obj Optional instance to populate.
     * @return {module:model/Timeframe} The populated <code>Timeframe</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Timeframe();

            if (data.hasOwnProperty('ApiSeason')) {
                obj['ApiSeason'] = ApiClient.convertToType(data['ApiSeason'], 'String');
            }
            if (data.hasOwnProperty('ApiWeek')) {
                obj['ApiWeek'] = ApiClient.convertToType(data['ApiWeek'], 'String');
            }
            if (data.hasOwnProperty('EndDate')) {
                obj['EndDate'] = ApiClient.convertToType(data['EndDate'], 'String');
            }
            if (data.hasOwnProperty('FirstGameEnd')) {
                obj['FirstGameEnd'] = ApiClient.convertToType(data['FirstGameEnd'], 'String');
            }
            if (data.hasOwnProperty('FirstGameStart')) {
                obj['FirstGameStart'] = ApiClient.convertToType(data['FirstGameStart'], 'String');
            }
            if (data.hasOwnProperty('HasEnded')) {
                obj['HasEnded'] = ApiClient.convertToType(data['HasEnded'], 'Boolean');
            }
            if (data.hasOwnProperty('HasFirstGameEnded')) {
                obj['HasFirstGameEnded'] = ApiClient.convertToType(data['HasFirstGameEnded'], 'Boolean');
            }
            if (data.hasOwnProperty('HasFirstGameStarted')) {
                obj['HasFirstGameStarted'] = ApiClient.convertToType(data['HasFirstGameStarted'], 'Boolean');
            }
            if (data.hasOwnProperty('HasGames')) {
                obj['HasGames'] = ApiClient.convertToType(data['HasGames'], 'Boolean');
            }
            if (data.hasOwnProperty('HasLastGameEnded')) {
                obj['HasLastGameEnded'] = ApiClient.convertToType(data['HasLastGameEnded'], 'Boolean');
            }
            if (data.hasOwnProperty('HasStarted')) {
                obj['HasStarted'] = ApiClient.convertToType(data['HasStarted'], 'Boolean');
            }
            if (data.hasOwnProperty('LastGameEnd')) {
                obj['LastGameEnd'] = ApiClient.convertToType(data['LastGameEnd'], 'String');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Season')) {
                obj['Season'] = ApiClient.convertToType(data['Season'], 'Number');
            }
            if (data.hasOwnProperty('SeasonType')) {
                obj['SeasonType'] = ApiClient.convertToType(data['SeasonType'], 'Number');
            }
            if (data.hasOwnProperty('ShortName')) {
                obj['ShortName'] = ApiClient.convertToType(data['ShortName'], 'String');
            }
            if (data.hasOwnProperty('StartDate')) {
                obj['StartDate'] = ApiClient.convertToType(data['StartDate'], 'String');
            }
            if (data.hasOwnProperty('Week')) {
                obj['Week'] = ApiClient.convertToType(data['Week'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Timeframe</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Timeframe</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ApiSeason'] && !(typeof data['ApiSeason'] === 'string' || data['ApiSeason'] instanceof String)) {
            throw new Error("Expected the field `ApiSeason` to be a primitive type in the JSON string but got " + data['ApiSeason']);
        }
        // ensure the json data is a string
        if (data['ApiWeek'] && !(typeof data['ApiWeek'] === 'string' || data['ApiWeek'] instanceof String)) {
            throw new Error("Expected the field `ApiWeek` to be a primitive type in the JSON string but got " + data['ApiWeek']);
        }
        // ensure the json data is a string
        if (data['EndDate'] && !(typeof data['EndDate'] === 'string' || data['EndDate'] instanceof String)) {
            throw new Error("Expected the field `EndDate` to be a primitive type in the JSON string but got " + data['EndDate']);
        }
        // ensure the json data is a string
        if (data['FirstGameEnd'] && !(typeof data['FirstGameEnd'] === 'string' || data['FirstGameEnd'] instanceof String)) {
            throw new Error("Expected the field `FirstGameEnd` to be a primitive type in the JSON string but got " + data['FirstGameEnd']);
        }
        // ensure the json data is a string
        if (data['FirstGameStart'] && !(typeof data['FirstGameStart'] === 'string' || data['FirstGameStart'] instanceof String)) {
            throw new Error("Expected the field `FirstGameStart` to be a primitive type in the JSON string but got " + data['FirstGameStart']);
        }
        // ensure the json data is a string
        if (data['LastGameEnd'] && !(typeof data['LastGameEnd'] === 'string' || data['LastGameEnd'] instanceof String)) {
            throw new Error("Expected the field `LastGameEnd` to be a primitive type in the JSON string but got " + data['LastGameEnd']);
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // ensure the json data is a string
        if (data['ShortName'] && !(typeof data['ShortName'] === 'string' || data['ShortName'] instanceof String)) {
            throw new Error("Expected the field `ShortName` to be a primitive type in the JSON string but got " + data['ShortName']);
        }
        // ensure the json data is a string
        if (data['StartDate'] && !(typeof data['StartDate'] === 'string' || data['StartDate'] instanceof String)) {
            throw new Error("Expected the field `StartDate` to be a primitive type in the JSON string but got " + data['StartDate']);
        }

        return true;
    }


}



/**
 * @member {String} ApiSeason
 */
Timeframe.prototype['ApiSeason'] = undefined;

/**
 * @member {String} ApiWeek
 */
Timeframe.prototype['ApiWeek'] = undefined;

/**
 * @member {String} EndDate
 */
Timeframe.prototype['EndDate'] = undefined;

/**
 * @member {String} FirstGameEnd
 */
Timeframe.prototype['FirstGameEnd'] = undefined;

/**
 * @member {String} FirstGameStart
 */
Timeframe.prototype['FirstGameStart'] = undefined;

/**
 * @member {Boolean} HasEnded
 */
Timeframe.prototype['HasEnded'] = undefined;

/**
 * @member {Boolean} HasFirstGameEnded
 */
Timeframe.prototype['HasFirstGameEnded'] = undefined;

/**
 * @member {Boolean} HasFirstGameStarted
 */
Timeframe.prototype['HasFirstGameStarted'] = undefined;

/**
 * @member {Boolean} HasGames
 */
Timeframe.prototype['HasGames'] = undefined;

/**
 * @member {Boolean} HasLastGameEnded
 */
Timeframe.prototype['HasLastGameEnded'] = undefined;

/**
 * @member {Boolean} HasStarted
 */
Timeframe.prototype['HasStarted'] = undefined;

/**
 * @member {String} LastGameEnd
 */
Timeframe.prototype['LastGameEnd'] = undefined;

/**
 * @member {String} Name
 */
Timeframe.prototype['Name'] = undefined;

/**
 * @member {Number} Season
 */
Timeframe.prototype['Season'] = undefined;

/**
 * @member {Number} SeasonType
 */
Timeframe.prototype['SeasonType'] = undefined;

/**
 * @member {String} ShortName
 */
Timeframe.prototype['ShortName'] = undefined;

/**
 * @member {String} StartDate
 */
Timeframe.prototype['StartDate'] = undefined;

/**
 * @member {Number} Week
 */
Timeframe.prototype['Week'] = undefined;






export default Timeframe;

