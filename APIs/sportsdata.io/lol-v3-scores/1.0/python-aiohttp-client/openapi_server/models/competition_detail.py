# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.game import Game
from openapi_server.models.season import Season
from openapi_server.models.team_detail import TeamDetail
from openapi_server import util


class CompetitionDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, area_id: int=None, area_name: str=None, competition_id: int=None, current_season: Season=None, format: str=None, games: List[Game]=None, gender: str=None, name: str=None, player_stats_coverage: bool=None, seasons: List[Season]=None, teams: List[TeamDetail]=None, type: str=None):
        """CompetitionDetail - a model defined in OpenAPI

        :param area_id: The area_id of this CompetitionDetail.
        :param area_name: The area_name of this CompetitionDetail.
        :param competition_id: The competition_id of this CompetitionDetail.
        :param current_season: The current_season of this CompetitionDetail.
        :param format: The format of this CompetitionDetail.
        :param games: The games of this CompetitionDetail.
        :param gender: The gender of this CompetitionDetail.
        :param name: The name of this CompetitionDetail.
        :param player_stats_coverage: The player_stats_coverage of this CompetitionDetail.
        :param seasons: The seasons of this CompetitionDetail.
        :param teams: The teams of this CompetitionDetail.
        :param type: The type of this CompetitionDetail.
        """
        self.openapi_types = {
            'area_id': int,
            'area_name': str,
            'competition_id': int,
            'current_season': Season,
            'format': str,
            'games': List[Game],
            'gender': str,
            'name': str,
            'player_stats_coverage': bool,
            'seasons': List[Season],
            'teams': List[TeamDetail],
            'type': str
        }

        self.attribute_map = {
            'area_id': 'AreaId',
            'area_name': 'AreaName',
            'competition_id': 'CompetitionId',
            'current_season': 'CurrentSeason',
            'format': 'Format',
            'games': 'Games',
            'gender': 'Gender',
            'name': 'Name',
            'player_stats_coverage': 'PlayerStatsCoverage',
            'seasons': 'Seasons',
            'teams': 'Teams',
            'type': 'Type'
        }

        self._area_id = area_id
        self._area_name = area_name
        self._competition_id = competition_id
        self._current_season = current_season
        self._format = format
        self._games = games
        self._gender = gender
        self._name = name
        self._player_stats_coverage = player_stats_coverage
        self._seasons = seasons
        self._teams = teams
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CompetitionDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CompetitionDetail of this CompetitionDetail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def area_id(self):
        """Gets the area_id of this CompetitionDetail.


        :return: The area_id of this CompetitionDetail.
        :rtype: int
        """
        return self._area_id

    @area_id.setter
    def area_id(self, area_id):
        """Sets the area_id of this CompetitionDetail.


        :param area_id: The area_id of this CompetitionDetail.
        :type area_id: int
        """

        self._area_id = area_id

    @property
    def area_name(self):
        """Gets the area_name of this CompetitionDetail.


        :return: The area_name of this CompetitionDetail.
        :rtype: str
        """
        return self._area_name

    @area_name.setter
    def area_name(self, area_name):
        """Sets the area_name of this CompetitionDetail.


        :param area_name: The area_name of this CompetitionDetail.
        :type area_name: str
        """

        self._area_name = area_name

    @property
    def competition_id(self):
        """Gets the competition_id of this CompetitionDetail.


        :return: The competition_id of this CompetitionDetail.
        :rtype: int
        """
        return self._competition_id

    @competition_id.setter
    def competition_id(self, competition_id):
        """Sets the competition_id of this CompetitionDetail.


        :param competition_id: The competition_id of this CompetitionDetail.
        :type competition_id: int
        """

        self._competition_id = competition_id

    @property
    def current_season(self):
        """Gets the current_season of this CompetitionDetail.


        :return: The current_season of this CompetitionDetail.
        :rtype: Season
        """
        return self._current_season

    @current_season.setter
    def current_season(self, current_season):
        """Sets the current_season of this CompetitionDetail.


        :param current_season: The current_season of this CompetitionDetail.
        :type current_season: Season
        """

        self._current_season = current_season

    @property
    def format(self):
        """Gets the format of this CompetitionDetail.


        :return: The format of this CompetitionDetail.
        :rtype: str
        """
        return self._format

    @format.setter
    def format(self, format):
        """Sets the format of this CompetitionDetail.


        :param format: The format of this CompetitionDetail.
        :type format: str
        """

        self._format = format

    @property
    def games(self):
        """Gets the games of this CompetitionDetail.


        :return: The games of this CompetitionDetail.
        :rtype: List[Game]
        """
        return self._games

    @games.setter
    def games(self, games):
        """Sets the games of this CompetitionDetail.


        :param games: The games of this CompetitionDetail.
        :type games: List[Game]
        """

        self._games = games

    @property
    def gender(self):
        """Gets the gender of this CompetitionDetail.


        :return: The gender of this CompetitionDetail.
        :rtype: str
        """
        return self._gender

    @gender.setter
    def gender(self, gender):
        """Sets the gender of this CompetitionDetail.


        :param gender: The gender of this CompetitionDetail.
        :type gender: str
        """

        self._gender = gender

    @property
    def name(self):
        """Gets the name of this CompetitionDetail.


        :return: The name of this CompetitionDetail.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CompetitionDetail.


        :param name: The name of this CompetitionDetail.
        :type name: str
        """

        self._name = name

    @property
    def player_stats_coverage(self):
        """Gets the player_stats_coverage of this CompetitionDetail.


        :return: The player_stats_coverage of this CompetitionDetail.
        :rtype: bool
        """
        return self._player_stats_coverage

    @player_stats_coverage.setter
    def player_stats_coverage(self, player_stats_coverage):
        """Sets the player_stats_coverage of this CompetitionDetail.


        :param player_stats_coverage: The player_stats_coverage of this CompetitionDetail.
        :type player_stats_coverage: bool
        """

        self._player_stats_coverage = player_stats_coverage

    @property
    def seasons(self):
        """Gets the seasons of this CompetitionDetail.


        :return: The seasons of this CompetitionDetail.
        :rtype: List[Season]
        """
        return self._seasons

    @seasons.setter
    def seasons(self, seasons):
        """Sets the seasons of this CompetitionDetail.


        :param seasons: The seasons of this CompetitionDetail.
        :type seasons: List[Season]
        """

        self._seasons = seasons

    @property
    def teams(self):
        """Gets the teams of this CompetitionDetail.


        :return: The teams of this CompetitionDetail.
        :rtype: List[TeamDetail]
        """
        return self._teams

    @teams.setter
    def teams(self, teams):
        """Sets the teams of this CompetitionDetail.


        :param teams: The teams of this CompetitionDetail.
        :type teams: List[TeamDetail]
        """

        self._teams = teams

    @property
    def type(self):
        """Gets the type of this CompetitionDetail.


        :return: The type of this CompetitionDetail.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this CompetitionDetail.


        :param type: The type of this CompetitionDetail.
        :type type: str
        """

        self._type = type
