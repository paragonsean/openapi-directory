/**
 * CFB v3 Scores
 * CFB schedules, scores, team stats, odds, weather, and news API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CfbV3Scores);
  }
}(this, function(expect, CfbV3Scores) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CfbV3Scores.Team();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Team', function() {
    it('should create an instance of Team', function() {
      // uncomment below and update the code to test Team
      //var instance = new CfbV3Scores.Team();
      //expect(instance).to.be.a(CfbV3Scores.Team);
    });

    it('should have the property active (base name: "Active")', function() {
      // uncomment below and update the code to test the property active
      //var instance = new CfbV3Scores.Team();
      //expect(instance).to.be();
    });

    it('should have the property apRank (base name: "ApRank")', function() {
      // uncomment below and update the code to test the property apRank
      //var instance = new CfbV3Scores.Team();
      //expect(instance).to.be();
    });

    it('should have the property coachesRank (base name: "CoachesRank")', function() {
      // uncomment below and update the code to test the property coachesRank
      //var instance = new CfbV3Scores.Team();
      //expect(instance).to.be();
    });

    it('should have the property conference (base name: "Conference")', function() {
      // uncomment below and update the code to test the property conference
      //var instance = new CfbV3Scores.Team();
      //expect(instance).to.be();
    });

    it('should have the property conferenceID (base name: "ConferenceID")', function() {
      // uncomment below and update the code to test the property conferenceID
      //var instance = new CfbV3Scores.Team();
      //expect(instance).to.be();
    });

    it('should have the property conferenceLosses (base name: "ConferenceLosses")', function() {
      // uncomment below and update the code to test the property conferenceLosses
      //var instance = new CfbV3Scores.Team();
      //expect(instance).to.be();
    });

    it('should have the property conferenceWins (base name: "ConferenceWins")', function() {
      // uncomment below and update the code to test the property conferenceWins
      //var instance = new CfbV3Scores.Team();
      //expect(instance).to.be();
    });

    it('should have the property globalTeamID (base name: "GlobalTeamID")', function() {
      // uncomment below and update the code to test the property globalTeamID
      //var instance = new CfbV3Scores.Team();
      //expect(instance).to.be();
    });

    it('should have the property key (base name: "Key")', function() {
      // uncomment below and update the code to test the property key
      //var instance = new CfbV3Scores.Team();
      //expect(instance).to.be();
    });

    it('should have the property losses (base name: "Losses")', function() {
      // uncomment below and update the code to test the property losses
      //var instance = new CfbV3Scores.Team();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "Name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new CfbV3Scores.Team();
      //expect(instance).to.be();
    });

    it('should have the property playoffRank (base name: "PlayoffRank")', function() {
      // uncomment below and update the code to test the property playoffRank
      //var instance = new CfbV3Scores.Team();
      //expect(instance).to.be();
    });

    it('should have the property rankSeason (base name: "RankSeason")', function() {
      // uncomment below and update the code to test the property rankSeason
      //var instance = new CfbV3Scores.Team();
      //expect(instance).to.be();
    });

    it('should have the property rankSeasonType (base name: "RankSeasonType")', function() {
      // uncomment below and update the code to test the property rankSeasonType
      //var instance = new CfbV3Scores.Team();
      //expect(instance).to.be();
    });

    it('should have the property rankWeek (base name: "RankWeek")', function() {
      // uncomment below and update the code to test the property rankWeek
      //var instance = new CfbV3Scores.Team();
      //expect(instance).to.be();
    });

    it('should have the property school (base name: "School")', function() {
      // uncomment below and update the code to test the property school
      //var instance = new CfbV3Scores.Team();
      //expect(instance).to.be();
    });

    it('should have the property shortDisplayName (base name: "ShortDisplayName")', function() {
      // uncomment below and update the code to test the property shortDisplayName
      //var instance = new CfbV3Scores.Team();
      //expect(instance).to.be();
    });

    it('should have the property stadiumID (base name: "StadiumID")', function() {
      // uncomment below and update the code to test the property stadiumID
      //var instance = new CfbV3Scores.Team();
      //expect(instance).to.be();
    });

    it('should have the property teamID (base name: "TeamID")', function() {
      // uncomment below and update the code to test the property teamID
      //var instance = new CfbV3Scores.Team();
      //expect(instance).to.be();
    });

    it('should have the property teamLogoUrl (base name: "TeamLogoUrl")', function() {
      // uncomment below and update the code to test the property teamLogoUrl
      //var instance = new CfbV3Scores.Team();
      //expect(instance).to.be();
    });

    it('should have the property wins (base name: "Wins")', function() {
      // uncomment below and update the code to test the property wins
      //var instance = new CfbV3Scores.Team();
      //expect(instance).to.be();
    });

  });

}));
