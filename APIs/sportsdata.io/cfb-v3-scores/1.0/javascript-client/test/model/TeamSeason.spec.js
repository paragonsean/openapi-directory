/**
 * CFB v3 Scores
 * CFB schedules, scores, team stats, odds, weather, and news API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CfbV3Scores);
  }
}(this, function(expect, CfbV3Scores) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CfbV3Scores.TeamSeason();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TeamSeason', function() {
    it('should create an instance of TeamSeason', function() {
      // uncomment below and update the code to test TeamSeason
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be.a(CfbV3Scores.TeamSeason);
    });

    it('should have the property assistedTackles (base name: "AssistedTackles")', function() {
      // uncomment below and update the code to test the property assistedTackles
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property conferenceLosses (base name: "ConferenceLosses")', function() {
      // uncomment below and update the code to test the property conferenceLosses
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property conferencePointsAgainst (base name: "ConferencePointsAgainst")', function() {
      // uncomment below and update the code to test the property conferencePointsAgainst
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property conferencePointsFor (base name: "ConferencePointsFor")', function() {
      // uncomment below and update the code to test the property conferencePointsFor
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property conferenceRank (base name: "ConferenceRank")', function() {
      // uncomment below and update the code to test the property conferenceRank
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property conferenceWins (base name: "ConferenceWins")', function() {
      // uncomment below and update the code to test the property conferenceWins
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property created (base name: "Created")', function() {
      // uncomment below and update the code to test the property created
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property divisionRank (base name: "DivisionRank")', function() {
      // uncomment below and update the code to test the property divisionRank
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property extraPointsAttempted (base name: "ExtraPointsAttempted")', function() {
      // uncomment below and update the code to test the property extraPointsAttempted
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property extraPointsMade (base name: "ExtraPointsMade")', function() {
      // uncomment below and update the code to test the property extraPointsMade
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property fantasyPoints (base name: "FantasyPoints")', function() {
      // uncomment below and update the code to test the property fantasyPoints
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property fieldGoalPercentage (base name: "FieldGoalPercentage")', function() {
      // uncomment below and update the code to test the property fieldGoalPercentage
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property fieldGoalsAttempted (base name: "FieldGoalsAttempted")', function() {
      // uncomment below and update the code to test the property fieldGoalsAttempted
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property fieldGoalsLongestMade (base name: "FieldGoalsLongestMade")', function() {
      // uncomment below and update the code to test the property fieldGoalsLongestMade
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property fieldGoalsMade (base name: "FieldGoalsMade")', function() {
      // uncomment below and update the code to test the property fieldGoalsMade
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property firstDowns (base name: "FirstDowns")', function() {
      // uncomment below and update the code to test the property firstDowns
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property fourthDownAttempts (base name: "FourthDownAttempts")', function() {
      // uncomment below and update the code to test the property fourthDownAttempts
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property fourthDownConversions (base name: "FourthDownConversions")', function() {
      // uncomment below and update the code to test the property fourthDownConversions
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property fumbleReturnTouchdowns (base name: "FumbleReturnTouchdowns")', function() {
      // uncomment below and update the code to test the property fumbleReturnTouchdowns
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property fumbles (base name: "Fumbles")', function() {
      // uncomment below and update the code to test the property fumbles
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property fumblesLost (base name: "FumblesLost")', function() {
      // uncomment below and update the code to test the property fumblesLost
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property fumblesRecovered (base name: "FumblesRecovered")', function() {
      // uncomment below and update the code to test the property fumblesRecovered
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property games (base name: "Games")', function() {
      // uncomment below and update the code to test the property games
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property globalTeamID (base name: "GlobalTeamID")', function() {
      // uncomment below and update the code to test the property globalTeamID
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property homeLosses (base name: "HomeLosses")', function() {
      // uncomment below and update the code to test the property homeLosses
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property homeWins (base name: "HomeWins")', function() {
      // uncomment below and update the code to test the property homeWins
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property interceptionReturnTouchdowns (base name: "InterceptionReturnTouchdowns")', function() {
      // uncomment below and update the code to test the property interceptionReturnTouchdowns
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property interceptionReturnYards (base name: "InterceptionReturnYards")', function() {
      // uncomment below and update the code to test the property interceptionReturnYards
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property interceptions (base name: "Interceptions")', function() {
      // uncomment below and update the code to test the property interceptions
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property kickReturnLong (base name: "KickReturnLong")', function() {
      // uncomment below and update the code to test the property kickReturnLong
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property kickReturnTouchdowns (base name: "KickReturnTouchdowns")', function() {
      // uncomment below and update the code to test the property kickReturnTouchdowns
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property kickReturnYards (base name: "KickReturnYards")', function() {
      // uncomment below and update the code to test the property kickReturnYards
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property kickReturnYardsPerAttempt (base name: "KickReturnYardsPerAttempt")', function() {
      // uncomment below and update the code to test the property kickReturnYardsPerAttempt
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property kickReturns (base name: "KickReturns")', function() {
      // uncomment below and update the code to test the property kickReturns
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property losses (base name: "Losses")', function() {
      // uncomment below and update the code to test the property losses
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "Name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property opponentScore (base name: "OpponentScore")', function() {
      // uncomment below and update the code to test the property opponentScore
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property passesDefended (base name: "PassesDefended")', function() {
      // uncomment below and update the code to test the property passesDefended
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property passingAttempts (base name: "PassingAttempts")', function() {
      // uncomment below and update the code to test the property passingAttempts
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property passingCompletionPercentage (base name: "PassingCompletionPercentage")', function() {
      // uncomment below and update the code to test the property passingCompletionPercentage
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property passingCompletions (base name: "PassingCompletions")', function() {
      // uncomment below and update the code to test the property passingCompletions
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property passingInterceptions (base name: "PassingInterceptions")', function() {
      // uncomment below and update the code to test the property passingInterceptions
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property passingRating (base name: "PassingRating")', function() {
      // uncomment below and update the code to test the property passingRating
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property passingTouchdowns (base name: "PassingTouchdowns")', function() {
      // uncomment below and update the code to test the property passingTouchdowns
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property passingYards (base name: "PassingYards")', function() {
      // uncomment below and update the code to test the property passingYards
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property passingYardsPerAttempt (base name: "PassingYardsPerAttempt")', function() {
      // uncomment below and update the code to test the property passingYardsPerAttempt
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property passingYardsPerCompletion (base name: "PassingYardsPerCompletion")', function() {
      // uncomment below and update the code to test the property passingYardsPerCompletion
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property penalties (base name: "Penalties")', function() {
      // uncomment below and update the code to test the property penalties
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property penaltyYards (base name: "PenaltyYards")', function() {
      // uncomment below and update the code to test the property penaltyYards
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property pointsAgainst (base name: "PointsAgainst")', function() {
      // uncomment below and update the code to test the property pointsAgainst
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property pointsFor (base name: "PointsFor")', function() {
      // uncomment below and update the code to test the property pointsFor
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property puntAverage (base name: "PuntAverage")', function() {
      // uncomment below and update the code to test the property puntAverage
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property puntLong (base name: "PuntLong")', function() {
      // uncomment below and update the code to test the property puntLong
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property puntReturnLong (base name: "PuntReturnLong")', function() {
      // uncomment below and update the code to test the property puntReturnLong
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property puntReturnTouchdowns (base name: "PuntReturnTouchdowns")', function() {
      // uncomment below and update the code to test the property puntReturnTouchdowns
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property puntReturnYards (base name: "PuntReturnYards")', function() {
      // uncomment below and update the code to test the property puntReturnYards
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property puntReturnYardsPerAttempt (base name: "PuntReturnYardsPerAttempt")', function() {
      // uncomment below and update the code to test the property puntReturnYardsPerAttempt
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property puntReturns (base name: "PuntReturns")', function() {
      // uncomment below and update the code to test the property puntReturns
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property puntYards (base name: "PuntYards")', function() {
      // uncomment below and update the code to test the property puntYards
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property punts (base name: "Punts")', function() {
      // uncomment below and update the code to test the property punts
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property quarterbackHurries (base name: "QuarterbackHurries")', function() {
      // uncomment below and update the code to test the property quarterbackHurries
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property receivingLong (base name: "ReceivingLong")', function() {
      // uncomment below and update the code to test the property receivingLong
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property receivingTouchdowns (base name: "ReceivingTouchdowns")', function() {
      // uncomment below and update the code to test the property receivingTouchdowns
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property receivingYards (base name: "ReceivingYards")', function() {
      // uncomment below and update the code to test the property receivingYards
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property receivingYardsPerReception (base name: "ReceivingYardsPerReception")', function() {
      // uncomment below and update the code to test the property receivingYardsPerReception
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property receptions (base name: "Receptions")', function() {
      // uncomment below and update the code to test the property receptions
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property roadLosses (base name: "RoadLosses")', function() {
      // uncomment below and update the code to test the property roadLosses
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property roadWins (base name: "RoadWins")', function() {
      // uncomment below and update the code to test the property roadWins
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property rushingAttempts (base name: "RushingAttempts")', function() {
      // uncomment below and update the code to test the property rushingAttempts
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property rushingLong (base name: "RushingLong")', function() {
      // uncomment below and update the code to test the property rushingLong
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property rushingTouchdowns (base name: "RushingTouchdowns")', function() {
      // uncomment below and update the code to test the property rushingTouchdowns
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property rushingYards (base name: "RushingYards")', function() {
      // uncomment below and update the code to test the property rushingYards
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property rushingYardsPerAttempt (base name: "RushingYardsPerAttempt")', function() {
      // uncomment below and update the code to test the property rushingYardsPerAttempt
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property sacks (base name: "Sacks")', function() {
      // uncomment below and update the code to test the property sacks
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property score (base name: "Score")', function() {
      // uncomment below and update the code to test the property score
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property season (base name: "Season")', function() {
      // uncomment below and update the code to test the property season
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property seasonType (base name: "SeasonType")', function() {
      // uncomment below and update the code to test the property seasonType
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property soloTackles (base name: "SoloTackles")', function() {
      // uncomment below and update the code to test the property soloTackles
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property statID (base name: "StatID")', function() {
      // uncomment below and update the code to test the property statID
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property streak (base name: "Streak")', function() {
      // uncomment below and update the code to test the property streak
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property tacklesForLoss (base name: "TacklesForLoss")', function() {
      // uncomment below and update the code to test the property tacklesForLoss
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property team (base name: "Team")', function() {
      // uncomment below and update the code to test the property team
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property teamID (base name: "TeamID")', function() {
      // uncomment below and update the code to test the property teamID
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property thirdDownAttempts (base name: "ThirdDownAttempts")', function() {
      // uncomment below and update the code to test the property thirdDownAttempts
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property thirdDownConversions (base name: "ThirdDownConversions")', function() {
      // uncomment below and update the code to test the property thirdDownConversions
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property timeOfPossessionMinutes (base name: "TimeOfPossessionMinutes")', function() {
      // uncomment below and update the code to test the property timeOfPossessionMinutes
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property timeOfPossessionSeconds (base name: "TimeOfPossessionSeconds")', function() {
      // uncomment below and update the code to test the property timeOfPossessionSeconds
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property updated (base name: "Updated")', function() {
      // uncomment below and update the code to test the property updated
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

    it('should have the property wins (base name: "Wins")', function() {
      // uncomment below and update the code to test the property wins
      //var instance = new CfbV3Scores.TeamSeason();
      //expect(instance).to.be();
    });

  });

}));
