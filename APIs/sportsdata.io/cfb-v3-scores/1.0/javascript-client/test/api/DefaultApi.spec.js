/**
 * CFB v3 Scores
 * CFB schedules, scores, team stats, odds, weather, and news API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CfbV3Scores);
  }
}(this, function(expect, CfbV3Scores) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CfbV3Scores.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('areGamesInProgress', function() {
      it('should call areGamesInProgress successfully', function(done) {
        //uncomment below and update the code to test areGamesInProgress
        //instance.areGamesInProgress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('conferenceHierarchyWithTeams', function() {
      it('should call conferenceHierarchyWithTeams successfully', function(done) {
        //uncomment below and update the code to test conferenceHierarchyWithTeams
        //instance.conferenceHierarchyWithTeams(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('currentSeason', function() {
      it('should call currentSeason successfully', function(done) {
        //uncomment below and update the code to test currentSeason
        //instance.currentSeason(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('currentSeasonDetails', function() {
      it('should call currentSeasonDetails successfully', function(done) {
        //uncomment below and update the code to test currentSeasonDetails
        //instance.currentSeasonDetails(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('currentSeasontype', function() {
      it('should call currentSeasontype successfully', function(done) {
        //uncomment below and update the code to test currentSeasontype
        //instance.currentSeasontype(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('currentWeek', function() {
      it('should call currentWeek successfully', function(done) {
        //uncomment below and update the code to test currentWeek
        //instance.currentWeek(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gamesByDate', function() {
      it('should call gamesByDate successfully', function(done) {
        //uncomment below and update the code to test gamesByDate
        //instance.gamesByDate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gamesByWeek', function() {
      it('should call gamesByWeek successfully', function(done) {
        //uncomment below and update the code to test gamesByWeek
        //instance.gamesByWeek(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gamesByWeekBasic', function() {
      it('should call gamesByWeekBasic successfully', function(done) {
        //uncomment below and update the code to test gamesByWeekBasic
        //instance.gamesByWeekBasic(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('injuredPlayers', function() {
      it('should call injuredPlayers successfully', function(done) {
        //uncomment below and update the code to test injuredPlayers
        //instance.injuredPlayers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('playerDetailsByActive', function() {
      it('should call playerDetailsByActive successfully', function(done) {
        //uncomment below and update the code to test playerDetailsByActive
        //instance.playerDetailsByActive(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('playerDetailsByPlayer', function() {
      it('should call playerDetailsByPlayer successfully', function(done) {
        //uncomment below and update the code to test playerDetailsByPlayer
        //instance.playerDetailsByPlayer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('playerDetailsByTeam', function() {
      it('should call playerDetailsByTeam successfully', function(done) {
        //uncomment below and update the code to test playerDetailsByTeam
        //instance.playerDetailsByTeam(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('playersByTeamBasic', function() {
      it('should call playersByTeamBasic successfully', function(done) {
        //uncomment below and update the code to test playersByTeamBasic
        //instance.playersByTeamBasic(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('schedules', function() {
      it('should call schedules successfully', function(done) {
        //uncomment below and update the code to test schedules
        //instance.schedules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('schedulesBasic', function() {
      it('should call schedulesBasic successfully', function(done) {
        //uncomment below and update the code to test schedulesBasic
        //instance.schedulesBasic(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stadiums', function() {
      it('should call stadiums successfully', function(done) {
        //uncomment below and update the code to test stadiums
        //instance.stadiums(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('teamGameLogsBySeason', function() {
      it('should call teamGameLogsBySeason successfully', function(done) {
        //uncomment below and update the code to test teamGameLogsBySeason
        //instance.teamGameLogsBySeason(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('teamGameStatsByWeek', function() {
      it('should call teamGameStatsByWeek successfully', function(done) {
        //uncomment below and update the code to test teamGameStatsByWeek
        //instance.teamGameStatsByWeek(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('teamSeasonStatsStandings', function() {
      it('should call teamSeasonStatsStandings successfully', function(done) {
        //uncomment below and update the code to test teamSeasonStatsStandings
        //instance.teamSeasonStatsStandings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('teams', function() {
      it('should call teams successfully', function(done) {
        //uncomment below and update the code to test teams
        //instance.teams(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('teamsBasic', function() {
      it('should call teamsBasic successfully', function(done) {
        //uncomment below and update the code to test teamsBasic
        //instance.teamsBasic(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
