/**
 * CFB v3 Scores
 * CFB schedules, scores, team stats, odds, weather, and news API.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITeam.h
 *
 * 
 */

#ifndef OAITeam_H
#define OAITeam_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITeam : public OAIObject {
public:
    OAITeam();
    OAITeam(QString json);
    ~OAITeam() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isActive() const;
    void setActive(const bool &active);
    bool is_active_Set() const;
    bool is_active_Valid() const;

    qint32 getApRank() const;
    void setApRank(const qint32 &ap_rank);
    bool is_ap_rank_Set() const;
    bool is_ap_rank_Valid() const;

    qint32 getCoachesRank() const;
    void setCoachesRank(const qint32 &coaches_rank);
    bool is_coaches_rank_Set() const;
    bool is_coaches_rank_Valid() const;

    QString getConference() const;
    void setConference(const QString &conference);
    bool is_conference_Set() const;
    bool is_conference_Valid() const;

    qint32 getConferenceId() const;
    void setConferenceId(const qint32 &conference_id);
    bool is_conference_id_Set() const;
    bool is_conference_id_Valid() const;

    qint32 getConferenceLosses() const;
    void setConferenceLosses(const qint32 &conference_losses);
    bool is_conference_losses_Set() const;
    bool is_conference_losses_Valid() const;

    qint32 getConferenceWins() const;
    void setConferenceWins(const qint32 &conference_wins);
    bool is_conference_wins_Set() const;
    bool is_conference_wins_Valid() const;

    qint32 getGlobalTeamId() const;
    void setGlobalTeamId(const qint32 &global_team_id);
    bool is_global_team_id_Set() const;
    bool is_global_team_id_Valid() const;

    QString getKey() const;
    void setKey(const QString &key);
    bool is_key_Set() const;
    bool is_key_Valid() const;

    qint32 getLosses() const;
    void setLosses(const qint32 &losses);
    bool is_losses_Set() const;
    bool is_losses_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getPlayoffRank() const;
    void setPlayoffRank(const qint32 &playoff_rank);
    bool is_playoff_rank_Set() const;
    bool is_playoff_rank_Valid() const;

    qint32 getRankSeason() const;
    void setRankSeason(const qint32 &rank_season);
    bool is_rank_season_Set() const;
    bool is_rank_season_Valid() const;

    qint32 getRankSeasonType() const;
    void setRankSeasonType(const qint32 &rank_season_type);
    bool is_rank_season_type_Set() const;
    bool is_rank_season_type_Valid() const;

    qint32 getRankWeek() const;
    void setRankWeek(const qint32 &rank_week);
    bool is_rank_week_Set() const;
    bool is_rank_week_Valid() const;

    QString getSchool() const;
    void setSchool(const QString &school);
    bool is_school_Set() const;
    bool is_school_Valid() const;

    QString getShortDisplayName() const;
    void setShortDisplayName(const QString &short_display_name);
    bool is_short_display_name_Set() const;
    bool is_short_display_name_Valid() const;

    qint32 getStadiumId() const;
    void setStadiumId(const qint32 &stadium_id);
    bool is_stadium_id_Set() const;
    bool is_stadium_id_Valid() const;

    qint32 getTeamId() const;
    void setTeamId(const qint32 &team_id);
    bool is_team_id_Set() const;
    bool is_team_id_Valid() const;

    QString getTeamLogoUrl() const;
    void setTeamLogoUrl(const QString &team_logo_url);
    bool is_team_logo_url_Set() const;
    bool is_team_logo_url_Valid() const;

    qint32 getWins() const;
    void setWins(const qint32 &wins);
    bool is_wins_Set() const;
    bool is_wins_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_active;
    bool m_active_isSet;
    bool m_active_isValid;

    qint32 m_ap_rank;
    bool m_ap_rank_isSet;
    bool m_ap_rank_isValid;

    qint32 m_coaches_rank;
    bool m_coaches_rank_isSet;
    bool m_coaches_rank_isValid;

    QString m_conference;
    bool m_conference_isSet;
    bool m_conference_isValid;

    qint32 m_conference_id;
    bool m_conference_id_isSet;
    bool m_conference_id_isValid;

    qint32 m_conference_losses;
    bool m_conference_losses_isSet;
    bool m_conference_losses_isValid;

    qint32 m_conference_wins;
    bool m_conference_wins_isSet;
    bool m_conference_wins_isValid;

    qint32 m_global_team_id;
    bool m_global_team_id_isSet;
    bool m_global_team_id_isValid;

    QString m_key;
    bool m_key_isSet;
    bool m_key_isValid;

    qint32 m_losses;
    bool m_losses_isSet;
    bool m_losses_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_playoff_rank;
    bool m_playoff_rank_isSet;
    bool m_playoff_rank_isValid;

    qint32 m_rank_season;
    bool m_rank_season_isSet;
    bool m_rank_season_isValid;

    qint32 m_rank_season_type;
    bool m_rank_season_type_isSet;
    bool m_rank_season_type_isValid;

    qint32 m_rank_week;
    bool m_rank_week_isSet;
    bool m_rank_week_isValid;

    QString m_school;
    bool m_school_isSet;
    bool m_school_isValid;

    QString m_short_display_name;
    bool m_short_display_name_isSet;
    bool m_short_display_name_isValid;

    qint32 m_stadium_id;
    bool m_stadium_id_isSet;
    bool m_stadium_id_isValid;

    qint32 m_team_id;
    bool m_team_id_isSet;
    bool m_team_id_isValid;

    QString m_team_logo_url;
    bool m_team_logo_url_isSet;
    bool m_team_logo_url_isValid;

    qint32 m_wins;
    bool m_wins_isSet;
    bool m_wins_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITeam)

#endif // OAITeam_H
