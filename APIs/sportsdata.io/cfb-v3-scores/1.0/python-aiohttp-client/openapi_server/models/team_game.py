# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TeamGame(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, assisted_tackles: float=None, created: str=None, date_time: str=None, day: str=None, extra_points_attempted: float=None, extra_points_made: float=None, fantasy_points: float=None, field_goal_percentage: float=None, field_goals_attempted: float=None, field_goals_longest_made: float=None, field_goals_made: float=None, first_downs: int=None, fourth_down_attempts: int=None, fourth_down_conversions: int=None, fumble_return_touchdowns: float=None, fumbles: float=None, fumbles_lost: float=None, fumbles_recovered: float=None, game_id: int=None, games: int=None, global_game_id: int=None, global_opponent_id: int=None, global_team_id: int=None, home_or_away: str=None, interception_return_touchdowns: float=None, interception_return_yards: float=None, interceptions: float=None, is_game_over: bool=None, kick_return_long: float=None, kick_return_touchdowns: float=None, kick_return_yards: float=None, kick_return_yards_per_attempt: float=None, kick_returns: float=None, name: str=None, opponent: str=None, opponent_id: int=None, opponent_score: int=None, passes_defended: float=None, passing_attempts: float=None, passing_completion_percentage: float=None, passing_completions: float=None, passing_interceptions: float=None, passing_rating: float=None, passing_touchdowns: float=None, passing_yards: float=None, passing_yards_per_attempt: float=None, passing_yards_per_completion: float=None, penalties: int=None, penalty_yards: int=None, punt_average: float=None, punt_long: float=None, punt_return_long: float=None, punt_return_touchdowns: float=None, punt_return_yards: float=None, punt_return_yards_per_attempt: float=None, punt_returns: float=None, punt_yards: float=None, punts: float=None, quarterback_hurries: float=None, receiving_long: float=None, receiving_touchdowns: float=None, receiving_yards: float=None, receiving_yards_per_reception: float=None, receptions: float=None, rushing_attempts: float=None, rushing_long: float=None, rushing_touchdowns: float=None, rushing_yards: float=None, rushing_yards_per_attempt: float=None, sacks: float=None, score: int=None, season: int=None, season_type: int=None, solo_tackles: float=None, stat_id: int=None, tackles_for_loss: float=None, team: str=None, team_id: int=None, third_down_attempts: int=None, third_down_conversions: int=None, time_of_possession_minutes: int=None, time_of_possession_seconds: int=None, updated: str=None, week: int=None):
        """TeamGame - a model defined in OpenAPI

        :param assisted_tackles: The assisted_tackles of this TeamGame.
        :param created: The created of this TeamGame.
        :param date_time: The date_time of this TeamGame.
        :param day: The day of this TeamGame.
        :param extra_points_attempted: The extra_points_attempted of this TeamGame.
        :param extra_points_made: The extra_points_made of this TeamGame.
        :param fantasy_points: The fantasy_points of this TeamGame.
        :param field_goal_percentage: The field_goal_percentage of this TeamGame.
        :param field_goals_attempted: The field_goals_attempted of this TeamGame.
        :param field_goals_longest_made: The field_goals_longest_made of this TeamGame.
        :param field_goals_made: The field_goals_made of this TeamGame.
        :param first_downs: The first_downs of this TeamGame.
        :param fourth_down_attempts: The fourth_down_attempts of this TeamGame.
        :param fourth_down_conversions: The fourth_down_conversions of this TeamGame.
        :param fumble_return_touchdowns: The fumble_return_touchdowns of this TeamGame.
        :param fumbles: The fumbles of this TeamGame.
        :param fumbles_lost: The fumbles_lost of this TeamGame.
        :param fumbles_recovered: The fumbles_recovered of this TeamGame.
        :param game_id: The game_id of this TeamGame.
        :param games: The games of this TeamGame.
        :param global_game_id: The global_game_id of this TeamGame.
        :param global_opponent_id: The global_opponent_id of this TeamGame.
        :param global_team_id: The global_team_id of this TeamGame.
        :param home_or_away: The home_or_away of this TeamGame.
        :param interception_return_touchdowns: The interception_return_touchdowns of this TeamGame.
        :param interception_return_yards: The interception_return_yards of this TeamGame.
        :param interceptions: The interceptions of this TeamGame.
        :param is_game_over: The is_game_over of this TeamGame.
        :param kick_return_long: The kick_return_long of this TeamGame.
        :param kick_return_touchdowns: The kick_return_touchdowns of this TeamGame.
        :param kick_return_yards: The kick_return_yards of this TeamGame.
        :param kick_return_yards_per_attempt: The kick_return_yards_per_attempt of this TeamGame.
        :param kick_returns: The kick_returns of this TeamGame.
        :param name: The name of this TeamGame.
        :param opponent: The opponent of this TeamGame.
        :param opponent_id: The opponent_id of this TeamGame.
        :param opponent_score: The opponent_score of this TeamGame.
        :param passes_defended: The passes_defended of this TeamGame.
        :param passing_attempts: The passing_attempts of this TeamGame.
        :param passing_completion_percentage: The passing_completion_percentage of this TeamGame.
        :param passing_completions: The passing_completions of this TeamGame.
        :param passing_interceptions: The passing_interceptions of this TeamGame.
        :param passing_rating: The passing_rating of this TeamGame.
        :param passing_touchdowns: The passing_touchdowns of this TeamGame.
        :param passing_yards: The passing_yards of this TeamGame.
        :param passing_yards_per_attempt: The passing_yards_per_attempt of this TeamGame.
        :param passing_yards_per_completion: The passing_yards_per_completion of this TeamGame.
        :param penalties: The penalties of this TeamGame.
        :param penalty_yards: The penalty_yards of this TeamGame.
        :param punt_average: The punt_average of this TeamGame.
        :param punt_long: The punt_long of this TeamGame.
        :param punt_return_long: The punt_return_long of this TeamGame.
        :param punt_return_touchdowns: The punt_return_touchdowns of this TeamGame.
        :param punt_return_yards: The punt_return_yards of this TeamGame.
        :param punt_return_yards_per_attempt: The punt_return_yards_per_attempt of this TeamGame.
        :param punt_returns: The punt_returns of this TeamGame.
        :param punt_yards: The punt_yards of this TeamGame.
        :param punts: The punts of this TeamGame.
        :param quarterback_hurries: The quarterback_hurries of this TeamGame.
        :param receiving_long: The receiving_long of this TeamGame.
        :param receiving_touchdowns: The receiving_touchdowns of this TeamGame.
        :param receiving_yards: The receiving_yards of this TeamGame.
        :param receiving_yards_per_reception: The receiving_yards_per_reception of this TeamGame.
        :param receptions: The receptions of this TeamGame.
        :param rushing_attempts: The rushing_attempts of this TeamGame.
        :param rushing_long: The rushing_long of this TeamGame.
        :param rushing_touchdowns: The rushing_touchdowns of this TeamGame.
        :param rushing_yards: The rushing_yards of this TeamGame.
        :param rushing_yards_per_attempt: The rushing_yards_per_attempt of this TeamGame.
        :param sacks: The sacks of this TeamGame.
        :param score: The score of this TeamGame.
        :param season: The season of this TeamGame.
        :param season_type: The season_type of this TeamGame.
        :param solo_tackles: The solo_tackles of this TeamGame.
        :param stat_id: The stat_id of this TeamGame.
        :param tackles_for_loss: The tackles_for_loss of this TeamGame.
        :param team: The team of this TeamGame.
        :param team_id: The team_id of this TeamGame.
        :param third_down_attempts: The third_down_attempts of this TeamGame.
        :param third_down_conversions: The third_down_conversions of this TeamGame.
        :param time_of_possession_minutes: The time_of_possession_minutes of this TeamGame.
        :param time_of_possession_seconds: The time_of_possession_seconds of this TeamGame.
        :param updated: The updated of this TeamGame.
        :param week: The week of this TeamGame.
        """
        self.openapi_types = {
            'assisted_tackles': float,
            'created': str,
            'date_time': str,
            'day': str,
            'extra_points_attempted': float,
            'extra_points_made': float,
            'fantasy_points': float,
            'field_goal_percentage': float,
            'field_goals_attempted': float,
            'field_goals_longest_made': float,
            'field_goals_made': float,
            'first_downs': int,
            'fourth_down_attempts': int,
            'fourth_down_conversions': int,
            'fumble_return_touchdowns': float,
            'fumbles': float,
            'fumbles_lost': float,
            'fumbles_recovered': float,
            'game_id': int,
            'games': int,
            'global_game_id': int,
            'global_opponent_id': int,
            'global_team_id': int,
            'home_or_away': str,
            'interception_return_touchdowns': float,
            'interception_return_yards': float,
            'interceptions': float,
            'is_game_over': bool,
            'kick_return_long': float,
            'kick_return_touchdowns': float,
            'kick_return_yards': float,
            'kick_return_yards_per_attempt': float,
            'kick_returns': float,
            'name': str,
            'opponent': str,
            'opponent_id': int,
            'opponent_score': int,
            'passes_defended': float,
            'passing_attempts': float,
            'passing_completion_percentage': float,
            'passing_completions': float,
            'passing_interceptions': float,
            'passing_rating': float,
            'passing_touchdowns': float,
            'passing_yards': float,
            'passing_yards_per_attempt': float,
            'passing_yards_per_completion': float,
            'penalties': int,
            'penalty_yards': int,
            'punt_average': float,
            'punt_long': float,
            'punt_return_long': float,
            'punt_return_touchdowns': float,
            'punt_return_yards': float,
            'punt_return_yards_per_attempt': float,
            'punt_returns': float,
            'punt_yards': float,
            'punts': float,
            'quarterback_hurries': float,
            'receiving_long': float,
            'receiving_touchdowns': float,
            'receiving_yards': float,
            'receiving_yards_per_reception': float,
            'receptions': float,
            'rushing_attempts': float,
            'rushing_long': float,
            'rushing_touchdowns': float,
            'rushing_yards': float,
            'rushing_yards_per_attempt': float,
            'sacks': float,
            'score': int,
            'season': int,
            'season_type': int,
            'solo_tackles': float,
            'stat_id': int,
            'tackles_for_loss': float,
            'team': str,
            'team_id': int,
            'third_down_attempts': int,
            'third_down_conversions': int,
            'time_of_possession_minutes': int,
            'time_of_possession_seconds': int,
            'updated': str,
            'week': int
        }

        self.attribute_map = {
            'assisted_tackles': 'AssistedTackles',
            'created': 'Created',
            'date_time': 'DateTime',
            'day': 'Day',
            'extra_points_attempted': 'ExtraPointsAttempted',
            'extra_points_made': 'ExtraPointsMade',
            'fantasy_points': 'FantasyPoints',
            'field_goal_percentage': 'FieldGoalPercentage',
            'field_goals_attempted': 'FieldGoalsAttempted',
            'field_goals_longest_made': 'FieldGoalsLongestMade',
            'field_goals_made': 'FieldGoalsMade',
            'first_downs': 'FirstDowns',
            'fourth_down_attempts': 'FourthDownAttempts',
            'fourth_down_conversions': 'FourthDownConversions',
            'fumble_return_touchdowns': 'FumbleReturnTouchdowns',
            'fumbles': 'Fumbles',
            'fumbles_lost': 'FumblesLost',
            'fumbles_recovered': 'FumblesRecovered',
            'game_id': 'GameID',
            'games': 'Games',
            'global_game_id': 'GlobalGameID',
            'global_opponent_id': 'GlobalOpponentID',
            'global_team_id': 'GlobalTeamID',
            'home_or_away': 'HomeOrAway',
            'interception_return_touchdowns': 'InterceptionReturnTouchdowns',
            'interception_return_yards': 'InterceptionReturnYards',
            'interceptions': 'Interceptions',
            'is_game_over': 'IsGameOver',
            'kick_return_long': 'KickReturnLong',
            'kick_return_touchdowns': 'KickReturnTouchdowns',
            'kick_return_yards': 'KickReturnYards',
            'kick_return_yards_per_attempt': 'KickReturnYardsPerAttempt',
            'kick_returns': 'KickReturns',
            'name': 'Name',
            'opponent': 'Opponent',
            'opponent_id': 'OpponentID',
            'opponent_score': 'OpponentScore',
            'passes_defended': 'PassesDefended',
            'passing_attempts': 'PassingAttempts',
            'passing_completion_percentage': 'PassingCompletionPercentage',
            'passing_completions': 'PassingCompletions',
            'passing_interceptions': 'PassingInterceptions',
            'passing_rating': 'PassingRating',
            'passing_touchdowns': 'PassingTouchdowns',
            'passing_yards': 'PassingYards',
            'passing_yards_per_attempt': 'PassingYardsPerAttempt',
            'passing_yards_per_completion': 'PassingYardsPerCompletion',
            'penalties': 'Penalties',
            'penalty_yards': 'PenaltyYards',
            'punt_average': 'PuntAverage',
            'punt_long': 'PuntLong',
            'punt_return_long': 'PuntReturnLong',
            'punt_return_touchdowns': 'PuntReturnTouchdowns',
            'punt_return_yards': 'PuntReturnYards',
            'punt_return_yards_per_attempt': 'PuntReturnYardsPerAttempt',
            'punt_returns': 'PuntReturns',
            'punt_yards': 'PuntYards',
            'punts': 'Punts',
            'quarterback_hurries': 'QuarterbackHurries',
            'receiving_long': 'ReceivingLong',
            'receiving_touchdowns': 'ReceivingTouchdowns',
            'receiving_yards': 'ReceivingYards',
            'receiving_yards_per_reception': 'ReceivingYardsPerReception',
            'receptions': 'Receptions',
            'rushing_attempts': 'RushingAttempts',
            'rushing_long': 'RushingLong',
            'rushing_touchdowns': 'RushingTouchdowns',
            'rushing_yards': 'RushingYards',
            'rushing_yards_per_attempt': 'RushingYardsPerAttempt',
            'sacks': 'Sacks',
            'score': 'Score',
            'season': 'Season',
            'season_type': 'SeasonType',
            'solo_tackles': 'SoloTackles',
            'stat_id': 'StatID',
            'tackles_for_loss': 'TacklesForLoss',
            'team': 'Team',
            'team_id': 'TeamID',
            'third_down_attempts': 'ThirdDownAttempts',
            'third_down_conversions': 'ThirdDownConversions',
            'time_of_possession_minutes': 'TimeOfPossessionMinutes',
            'time_of_possession_seconds': 'TimeOfPossessionSeconds',
            'updated': 'Updated',
            'week': 'Week'
        }

        self._assisted_tackles = assisted_tackles
        self._created = created
        self._date_time = date_time
        self._day = day
        self._extra_points_attempted = extra_points_attempted
        self._extra_points_made = extra_points_made
        self._fantasy_points = fantasy_points
        self._field_goal_percentage = field_goal_percentage
        self._field_goals_attempted = field_goals_attempted
        self._field_goals_longest_made = field_goals_longest_made
        self._field_goals_made = field_goals_made
        self._first_downs = first_downs
        self._fourth_down_attempts = fourth_down_attempts
        self._fourth_down_conversions = fourth_down_conversions
        self._fumble_return_touchdowns = fumble_return_touchdowns
        self._fumbles = fumbles
        self._fumbles_lost = fumbles_lost
        self._fumbles_recovered = fumbles_recovered
        self._game_id = game_id
        self._games = games
        self._global_game_id = global_game_id
        self._global_opponent_id = global_opponent_id
        self._global_team_id = global_team_id
        self._home_or_away = home_or_away
        self._interception_return_touchdowns = interception_return_touchdowns
        self._interception_return_yards = interception_return_yards
        self._interceptions = interceptions
        self._is_game_over = is_game_over
        self._kick_return_long = kick_return_long
        self._kick_return_touchdowns = kick_return_touchdowns
        self._kick_return_yards = kick_return_yards
        self._kick_return_yards_per_attempt = kick_return_yards_per_attempt
        self._kick_returns = kick_returns
        self._name = name
        self._opponent = opponent
        self._opponent_id = opponent_id
        self._opponent_score = opponent_score
        self._passes_defended = passes_defended
        self._passing_attempts = passing_attempts
        self._passing_completion_percentage = passing_completion_percentage
        self._passing_completions = passing_completions
        self._passing_interceptions = passing_interceptions
        self._passing_rating = passing_rating
        self._passing_touchdowns = passing_touchdowns
        self._passing_yards = passing_yards
        self._passing_yards_per_attempt = passing_yards_per_attempt
        self._passing_yards_per_completion = passing_yards_per_completion
        self._penalties = penalties
        self._penalty_yards = penalty_yards
        self._punt_average = punt_average
        self._punt_long = punt_long
        self._punt_return_long = punt_return_long
        self._punt_return_touchdowns = punt_return_touchdowns
        self._punt_return_yards = punt_return_yards
        self._punt_return_yards_per_attempt = punt_return_yards_per_attempt
        self._punt_returns = punt_returns
        self._punt_yards = punt_yards
        self._punts = punts
        self._quarterback_hurries = quarterback_hurries
        self._receiving_long = receiving_long
        self._receiving_touchdowns = receiving_touchdowns
        self._receiving_yards = receiving_yards
        self._receiving_yards_per_reception = receiving_yards_per_reception
        self._receptions = receptions
        self._rushing_attempts = rushing_attempts
        self._rushing_long = rushing_long
        self._rushing_touchdowns = rushing_touchdowns
        self._rushing_yards = rushing_yards
        self._rushing_yards_per_attempt = rushing_yards_per_attempt
        self._sacks = sacks
        self._score = score
        self._season = season
        self._season_type = season_type
        self._solo_tackles = solo_tackles
        self._stat_id = stat_id
        self._tackles_for_loss = tackles_for_loss
        self._team = team
        self._team_id = team_id
        self._third_down_attempts = third_down_attempts
        self._third_down_conversions = third_down_conversions
        self._time_of_possession_minutes = time_of_possession_minutes
        self._time_of_possession_seconds = time_of_possession_seconds
        self._updated = updated
        self._week = week

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TeamGame':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TeamGame of this TeamGame.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def assisted_tackles(self):
        """Gets the assisted_tackles of this TeamGame.


        :return: The assisted_tackles of this TeamGame.
        :rtype: float
        """
        return self._assisted_tackles

    @assisted_tackles.setter
    def assisted_tackles(self, assisted_tackles):
        """Sets the assisted_tackles of this TeamGame.


        :param assisted_tackles: The assisted_tackles of this TeamGame.
        :type assisted_tackles: float
        """

        self._assisted_tackles = assisted_tackles

    @property
    def created(self):
        """Gets the created of this TeamGame.


        :return: The created of this TeamGame.
        :rtype: str
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this TeamGame.


        :param created: The created of this TeamGame.
        :type created: str
        """

        self._created = created

    @property
    def date_time(self):
        """Gets the date_time of this TeamGame.


        :return: The date_time of this TeamGame.
        :rtype: str
        """
        return self._date_time

    @date_time.setter
    def date_time(self, date_time):
        """Sets the date_time of this TeamGame.


        :param date_time: The date_time of this TeamGame.
        :type date_time: str
        """

        self._date_time = date_time

    @property
    def day(self):
        """Gets the day of this TeamGame.


        :return: The day of this TeamGame.
        :rtype: str
        """
        return self._day

    @day.setter
    def day(self, day):
        """Sets the day of this TeamGame.


        :param day: The day of this TeamGame.
        :type day: str
        """

        self._day = day

    @property
    def extra_points_attempted(self):
        """Gets the extra_points_attempted of this TeamGame.


        :return: The extra_points_attempted of this TeamGame.
        :rtype: float
        """
        return self._extra_points_attempted

    @extra_points_attempted.setter
    def extra_points_attempted(self, extra_points_attempted):
        """Sets the extra_points_attempted of this TeamGame.


        :param extra_points_attempted: The extra_points_attempted of this TeamGame.
        :type extra_points_attempted: float
        """

        self._extra_points_attempted = extra_points_attempted

    @property
    def extra_points_made(self):
        """Gets the extra_points_made of this TeamGame.


        :return: The extra_points_made of this TeamGame.
        :rtype: float
        """
        return self._extra_points_made

    @extra_points_made.setter
    def extra_points_made(self, extra_points_made):
        """Sets the extra_points_made of this TeamGame.


        :param extra_points_made: The extra_points_made of this TeamGame.
        :type extra_points_made: float
        """

        self._extra_points_made = extra_points_made

    @property
    def fantasy_points(self):
        """Gets the fantasy_points of this TeamGame.


        :return: The fantasy_points of this TeamGame.
        :rtype: float
        """
        return self._fantasy_points

    @fantasy_points.setter
    def fantasy_points(self, fantasy_points):
        """Sets the fantasy_points of this TeamGame.


        :param fantasy_points: The fantasy_points of this TeamGame.
        :type fantasy_points: float
        """

        self._fantasy_points = fantasy_points

    @property
    def field_goal_percentage(self):
        """Gets the field_goal_percentage of this TeamGame.


        :return: The field_goal_percentage of this TeamGame.
        :rtype: float
        """
        return self._field_goal_percentage

    @field_goal_percentage.setter
    def field_goal_percentage(self, field_goal_percentage):
        """Sets the field_goal_percentage of this TeamGame.


        :param field_goal_percentage: The field_goal_percentage of this TeamGame.
        :type field_goal_percentage: float
        """

        self._field_goal_percentage = field_goal_percentage

    @property
    def field_goals_attempted(self):
        """Gets the field_goals_attempted of this TeamGame.


        :return: The field_goals_attempted of this TeamGame.
        :rtype: float
        """
        return self._field_goals_attempted

    @field_goals_attempted.setter
    def field_goals_attempted(self, field_goals_attempted):
        """Sets the field_goals_attempted of this TeamGame.


        :param field_goals_attempted: The field_goals_attempted of this TeamGame.
        :type field_goals_attempted: float
        """

        self._field_goals_attempted = field_goals_attempted

    @property
    def field_goals_longest_made(self):
        """Gets the field_goals_longest_made of this TeamGame.


        :return: The field_goals_longest_made of this TeamGame.
        :rtype: float
        """
        return self._field_goals_longest_made

    @field_goals_longest_made.setter
    def field_goals_longest_made(self, field_goals_longest_made):
        """Sets the field_goals_longest_made of this TeamGame.


        :param field_goals_longest_made: The field_goals_longest_made of this TeamGame.
        :type field_goals_longest_made: float
        """

        self._field_goals_longest_made = field_goals_longest_made

    @property
    def field_goals_made(self):
        """Gets the field_goals_made of this TeamGame.


        :return: The field_goals_made of this TeamGame.
        :rtype: float
        """
        return self._field_goals_made

    @field_goals_made.setter
    def field_goals_made(self, field_goals_made):
        """Sets the field_goals_made of this TeamGame.


        :param field_goals_made: The field_goals_made of this TeamGame.
        :type field_goals_made: float
        """

        self._field_goals_made = field_goals_made

    @property
    def first_downs(self):
        """Gets the first_downs of this TeamGame.


        :return: The first_downs of this TeamGame.
        :rtype: int
        """
        return self._first_downs

    @first_downs.setter
    def first_downs(self, first_downs):
        """Sets the first_downs of this TeamGame.


        :param first_downs: The first_downs of this TeamGame.
        :type first_downs: int
        """

        self._first_downs = first_downs

    @property
    def fourth_down_attempts(self):
        """Gets the fourth_down_attempts of this TeamGame.


        :return: The fourth_down_attempts of this TeamGame.
        :rtype: int
        """
        return self._fourth_down_attempts

    @fourth_down_attempts.setter
    def fourth_down_attempts(self, fourth_down_attempts):
        """Sets the fourth_down_attempts of this TeamGame.


        :param fourth_down_attempts: The fourth_down_attempts of this TeamGame.
        :type fourth_down_attempts: int
        """

        self._fourth_down_attempts = fourth_down_attempts

    @property
    def fourth_down_conversions(self):
        """Gets the fourth_down_conversions of this TeamGame.


        :return: The fourth_down_conversions of this TeamGame.
        :rtype: int
        """
        return self._fourth_down_conversions

    @fourth_down_conversions.setter
    def fourth_down_conversions(self, fourth_down_conversions):
        """Sets the fourth_down_conversions of this TeamGame.


        :param fourth_down_conversions: The fourth_down_conversions of this TeamGame.
        :type fourth_down_conversions: int
        """

        self._fourth_down_conversions = fourth_down_conversions

    @property
    def fumble_return_touchdowns(self):
        """Gets the fumble_return_touchdowns of this TeamGame.


        :return: The fumble_return_touchdowns of this TeamGame.
        :rtype: float
        """
        return self._fumble_return_touchdowns

    @fumble_return_touchdowns.setter
    def fumble_return_touchdowns(self, fumble_return_touchdowns):
        """Sets the fumble_return_touchdowns of this TeamGame.


        :param fumble_return_touchdowns: The fumble_return_touchdowns of this TeamGame.
        :type fumble_return_touchdowns: float
        """

        self._fumble_return_touchdowns = fumble_return_touchdowns

    @property
    def fumbles(self):
        """Gets the fumbles of this TeamGame.


        :return: The fumbles of this TeamGame.
        :rtype: float
        """
        return self._fumbles

    @fumbles.setter
    def fumbles(self, fumbles):
        """Sets the fumbles of this TeamGame.


        :param fumbles: The fumbles of this TeamGame.
        :type fumbles: float
        """

        self._fumbles = fumbles

    @property
    def fumbles_lost(self):
        """Gets the fumbles_lost of this TeamGame.


        :return: The fumbles_lost of this TeamGame.
        :rtype: float
        """
        return self._fumbles_lost

    @fumbles_lost.setter
    def fumbles_lost(self, fumbles_lost):
        """Sets the fumbles_lost of this TeamGame.


        :param fumbles_lost: The fumbles_lost of this TeamGame.
        :type fumbles_lost: float
        """

        self._fumbles_lost = fumbles_lost

    @property
    def fumbles_recovered(self):
        """Gets the fumbles_recovered of this TeamGame.


        :return: The fumbles_recovered of this TeamGame.
        :rtype: float
        """
        return self._fumbles_recovered

    @fumbles_recovered.setter
    def fumbles_recovered(self, fumbles_recovered):
        """Sets the fumbles_recovered of this TeamGame.


        :param fumbles_recovered: The fumbles_recovered of this TeamGame.
        :type fumbles_recovered: float
        """

        self._fumbles_recovered = fumbles_recovered

    @property
    def game_id(self):
        """Gets the game_id of this TeamGame.


        :return: The game_id of this TeamGame.
        :rtype: int
        """
        return self._game_id

    @game_id.setter
    def game_id(self, game_id):
        """Sets the game_id of this TeamGame.


        :param game_id: The game_id of this TeamGame.
        :type game_id: int
        """

        self._game_id = game_id

    @property
    def games(self):
        """Gets the games of this TeamGame.


        :return: The games of this TeamGame.
        :rtype: int
        """
        return self._games

    @games.setter
    def games(self, games):
        """Sets the games of this TeamGame.


        :param games: The games of this TeamGame.
        :type games: int
        """

        self._games = games

    @property
    def global_game_id(self):
        """Gets the global_game_id of this TeamGame.


        :return: The global_game_id of this TeamGame.
        :rtype: int
        """
        return self._global_game_id

    @global_game_id.setter
    def global_game_id(self, global_game_id):
        """Sets the global_game_id of this TeamGame.


        :param global_game_id: The global_game_id of this TeamGame.
        :type global_game_id: int
        """

        self._global_game_id = global_game_id

    @property
    def global_opponent_id(self):
        """Gets the global_opponent_id of this TeamGame.


        :return: The global_opponent_id of this TeamGame.
        :rtype: int
        """
        return self._global_opponent_id

    @global_opponent_id.setter
    def global_opponent_id(self, global_opponent_id):
        """Sets the global_opponent_id of this TeamGame.


        :param global_opponent_id: The global_opponent_id of this TeamGame.
        :type global_opponent_id: int
        """

        self._global_opponent_id = global_opponent_id

    @property
    def global_team_id(self):
        """Gets the global_team_id of this TeamGame.


        :return: The global_team_id of this TeamGame.
        :rtype: int
        """
        return self._global_team_id

    @global_team_id.setter
    def global_team_id(self, global_team_id):
        """Sets the global_team_id of this TeamGame.


        :param global_team_id: The global_team_id of this TeamGame.
        :type global_team_id: int
        """

        self._global_team_id = global_team_id

    @property
    def home_or_away(self):
        """Gets the home_or_away of this TeamGame.


        :return: The home_or_away of this TeamGame.
        :rtype: str
        """
        return self._home_or_away

    @home_or_away.setter
    def home_or_away(self, home_or_away):
        """Sets the home_or_away of this TeamGame.


        :param home_or_away: The home_or_away of this TeamGame.
        :type home_or_away: str
        """

        self._home_or_away = home_or_away

    @property
    def interception_return_touchdowns(self):
        """Gets the interception_return_touchdowns of this TeamGame.


        :return: The interception_return_touchdowns of this TeamGame.
        :rtype: float
        """
        return self._interception_return_touchdowns

    @interception_return_touchdowns.setter
    def interception_return_touchdowns(self, interception_return_touchdowns):
        """Sets the interception_return_touchdowns of this TeamGame.


        :param interception_return_touchdowns: The interception_return_touchdowns of this TeamGame.
        :type interception_return_touchdowns: float
        """

        self._interception_return_touchdowns = interception_return_touchdowns

    @property
    def interception_return_yards(self):
        """Gets the interception_return_yards of this TeamGame.


        :return: The interception_return_yards of this TeamGame.
        :rtype: float
        """
        return self._interception_return_yards

    @interception_return_yards.setter
    def interception_return_yards(self, interception_return_yards):
        """Sets the interception_return_yards of this TeamGame.


        :param interception_return_yards: The interception_return_yards of this TeamGame.
        :type interception_return_yards: float
        """

        self._interception_return_yards = interception_return_yards

    @property
    def interceptions(self):
        """Gets the interceptions of this TeamGame.


        :return: The interceptions of this TeamGame.
        :rtype: float
        """
        return self._interceptions

    @interceptions.setter
    def interceptions(self, interceptions):
        """Sets the interceptions of this TeamGame.


        :param interceptions: The interceptions of this TeamGame.
        :type interceptions: float
        """

        self._interceptions = interceptions

    @property
    def is_game_over(self):
        """Gets the is_game_over of this TeamGame.


        :return: The is_game_over of this TeamGame.
        :rtype: bool
        """
        return self._is_game_over

    @is_game_over.setter
    def is_game_over(self, is_game_over):
        """Sets the is_game_over of this TeamGame.


        :param is_game_over: The is_game_over of this TeamGame.
        :type is_game_over: bool
        """

        self._is_game_over = is_game_over

    @property
    def kick_return_long(self):
        """Gets the kick_return_long of this TeamGame.


        :return: The kick_return_long of this TeamGame.
        :rtype: float
        """
        return self._kick_return_long

    @kick_return_long.setter
    def kick_return_long(self, kick_return_long):
        """Sets the kick_return_long of this TeamGame.


        :param kick_return_long: The kick_return_long of this TeamGame.
        :type kick_return_long: float
        """

        self._kick_return_long = kick_return_long

    @property
    def kick_return_touchdowns(self):
        """Gets the kick_return_touchdowns of this TeamGame.


        :return: The kick_return_touchdowns of this TeamGame.
        :rtype: float
        """
        return self._kick_return_touchdowns

    @kick_return_touchdowns.setter
    def kick_return_touchdowns(self, kick_return_touchdowns):
        """Sets the kick_return_touchdowns of this TeamGame.


        :param kick_return_touchdowns: The kick_return_touchdowns of this TeamGame.
        :type kick_return_touchdowns: float
        """

        self._kick_return_touchdowns = kick_return_touchdowns

    @property
    def kick_return_yards(self):
        """Gets the kick_return_yards of this TeamGame.


        :return: The kick_return_yards of this TeamGame.
        :rtype: float
        """
        return self._kick_return_yards

    @kick_return_yards.setter
    def kick_return_yards(self, kick_return_yards):
        """Sets the kick_return_yards of this TeamGame.


        :param kick_return_yards: The kick_return_yards of this TeamGame.
        :type kick_return_yards: float
        """

        self._kick_return_yards = kick_return_yards

    @property
    def kick_return_yards_per_attempt(self):
        """Gets the kick_return_yards_per_attempt of this TeamGame.


        :return: The kick_return_yards_per_attempt of this TeamGame.
        :rtype: float
        """
        return self._kick_return_yards_per_attempt

    @kick_return_yards_per_attempt.setter
    def kick_return_yards_per_attempt(self, kick_return_yards_per_attempt):
        """Sets the kick_return_yards_per_attempt of this TeamGame.


        :param kick_return_yards_per_attempt: The kick_return_yards_per_attempt of this TeamGame.
        :type kick_return_yards_per_attempt: float
        """

        self._kick_return_yards_per_attempt = kick_return_yards_per_attempt

    @property
    def kick_returns(self):
        """Gets the kick_returns of this TeamGame.


        :return: The kick_returns of this TeamGame.
        :rtype: float
        """
        return self._kick_returns

    @kick_returns.setter
    def kick_returns(self, kick_returns):
        """Sets the kick_returns of this TeamGame.


        :param kick_returns: The kick_returns of this TeamGame.
        :type kick_returns: float
        """

        self._kick_returns = kick_returns

    @property
    def name(self):
        """Gets the name of this TeamGame.


        :return: The name of this TeamGame.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this TeamGame.


        :param name: The name of this TeamGame.
        :type name: str
        """

        self._name = name

    @property
    def opponent(self):
        """Gets the opponent of this TeamGame.


        :return: The opponent of this TeamGame.
        :rtype: str
        """
        return self._opponent

    @opponent.setter
    def opponent(self, opponent):
        """Sets the opponent of this TeamGame.


        :param opponent: The opponent of this TeamGame.
        :type opponent: str
        """

        self._opponent = opponent

    @property
    def opponent_id(self):
        """Gets the opponent_id of this TeamGame.


        :return: The opponent_id of this TeamGame.
        :rtype: int
        """
        return self._opponent_id

    @opponent_id.setter
    def opponent_id(self, opponent_id):
        """Sets the opponent_id of this TeamGame.


        :param opponent_id: The opponent_id of this TeamGame.
        :type opponent_id: int
        """

        self._opponent_id = opponent_id

    @property
    def opponent_score(self):
        """Gets the opponent_score of this TeamGame.


        :return: The opponent_score of this TeamGame.
        :rtype: int
        """
        return self._opponent_score

    @opponent_score.setter
    def opponent_score(self, opponent_score):
        """Sets the opponent_score of this TeamGame.


        :param opponent_score: The opponent_score of this TeamGame.
        :type opponent_score: int
        """

        self._opponent_score = opponent_score

    @property
    def passes_defended(self):
        """Gets the passes_defended of this TeamGame.


        :return: The passes_defended of this TeamGame.
        :rtype: float
        """
        return self._passes_defended

    @passes_defended.setter
    def passes_defended(self, passes_defended):
        """Sets the passes_defended of this TeamGame.


        :param passes_defended: The passes_defended of this TeamGame.
        :type passes_defended: float
        """

        self._passes_defended = passes_defended

    @property
    def passing_attempts(self):
        """Gets the passing_attempts of this TeamGame.


        :return: The passing_attempts of this TeamGame.
        :rtype: float
        """
        return self._passing_attempts

    @passing_attempts.setter
    def passing_attempts(self, passing_attempts):
        """Sets the passing_attempts of this TeamGame.


        :param passing_attempts: The passing_attempts of this TeamGame.
        :type passing_attempts: float
        """

        self._passing_attempts = passing_attempts

    @property
    def passing_completion_percentage(self):
        """Gets the passing_completion_percentage of this TeamGame.


        :return: The passing_completion_percentage of this TeamGame.
        :rtype: float
        """
        return self._passing_completion_percentage

    @passing_completion_percentage.setter
    def passing_completion_percentage(self, passing_completion_percentage):
        """Sets the passing_completion_percentage of this TeamGame.


        :param passing_completion_percentage: The passing_completion_percentage of this TeamGame.
        :type passing_completion_percentage: float
        """

        self._passing_completion_percentage = passing_completion_percentage

    @property
    def passing_completions(self):
        """Gets the passing_completions of this TeamGame.


        :return: The passing_completions of this TeamGame.
        :rtype: float
        """
        return self._passing_completions

    @passing_completions.setter
    def passing_completions(self, passing_completions):
        """Sets the passing_completions of this TeamGame.


        :param passing_completions: The passing_completions of this TeamGame.
        :type passing_completions: float
        """

        self._passing_completions = passing_completions

    @property
    def passing_interceptions(self):
        """Gets the passing_interceptions of this TeamGame.


        :return: The passing_interceptions of this TeamGame.
        :rtype: float
        """
        return self._passing_interceptions

    @passing_interceptions.setter
    def passing_interceptions(self, passing_interceptions):
        """Sets the passing_interceptions of this TeamGame.


        :param passing_interceptions: The passing_interceptions of this TeamGame.
        :type passing_interceptions: float
        """

        self._passing_interceptions = passing_interceptions

    @property
    def passing_rating(self):
        """Gets the passing_rating of this TeamGame.


        :return: The passing_rating of this TeamGame.
        :rtype: float
        """
        return self._passing_rating

    @passing_rating.setter
    def passing_rating(self, passing_rating):
        """Sets the passing_rating of this TeamGame.


        :param passing_rating: The passing_rating of this TeamGame.
        :type passing_rating: float
        """

        self._passing_rating = passing_rating

    @property
    def passing_touchdowns(self):
        """Gets the passing_touchdowns of this TeamGame.


        :return: The passing_touchdowns of this TeamGame.
        :rtype: float
        """
        return self._passing_touchdowns

    @passing_touchdowns.setter
    def passing_touchdowns(self, passing_touchdowns):
        """Sets the passing_touchdowns of this TeamGame.


        :param passing_touchdowns: The passing_touchdowns of this TeamGame.
        :type passing_touchdowns: float
        """

        self._passing_touchdowns = passing_touchdowns

    @property
    def passing_yards(self):
        """Gets the passing_yards of this TeamGame.


        :return: The passing_yards of this TeamGame.
        :rtype: float
        """
        return self._passing_yards

    @passing_yards.setter
    def passing_yards(self, passing_yards):
        """Sets the passing_yards of this TeamGame.


        :param passing_yards: The passing_yards of this TeamGame.
        :type passing_yards: float
        """

        self._passing_yards = passing_yards

    @property
    def passing_yards_per_attempt(self):
        """Gets the passing_yards_per_attempt of this TeamGame.


        :return: The passing_yards_per_attempt of this TeamGame.
        :rtype: float
        """
        return self._passing_yards_per_attempt

    @passing_yards_per_attempt.setter
    def passing_yards_per_attempt(self, passing_yards_per_attempt):
        """Sets the passing_yards_per_attempt of this TeamGame.


        :param passing_yards_per_attempt: The passing_yards_per_attempt of this TeamGame.
        :type passing_yards_per_attempt: float
        """

        self._passing_yards_per_attempt = passing_yards_per_attempt

    @property
    def passing_yards_per_completion(self):
        """Gets the passing_yards_per_completion of this TeamGame.


        :return: The passing_yards_per_completion of this TeamGame.
        :rtype: float
        """
        return self._passing_yards_per_completion

    @passing_yards_per_completion.setter
    def passing_yards_per_completion(self, passing_yards_per_completion):
        """Sets the passing_yards_per_completion of this TeamGame.


        :param passing_yards_per_completion: The passing_yards_per_completion of this TeamGame.
        :type passing_yards_per_completion: float
        """

        self._passing_yards_per_completion = passing_yards_per_completion

    @property
    def penalties(self):
        """Gets the penalties of this TeamGame.


        :return: The penalties of this TeamGame.
        :rtype: int
        """
        return self._penalties

    @penalties.setter
    def penalties(self, penalties):
        """Sets the penalties of this TeamGame.


        :param penalties: The penalties of this TeamGame.
        :type penalties: int
        """

        self._penalties = penalties

    @property
    def penalty_yards(self):
        """Gets the penalty_yards of this TeamGame.


        :return: The penalty_yards of this TeamGame.
        :rtype: int
        """
        return self._penalty_yards

    @penalty_yards.setter
    def penalty_yards(self, penalty_yards):
        """Sets the penalty_yards of this TeamGame.


        :param penalty_yards: The penalty_yards of this TeamGame.
        :type penalty_yards: int
        """

        self._penalty_yards = penalty_yards

    @property
    def punt_average(self):
        """Gets the punt_average of this TeamGame.


        :return: The punt_average of this TeamGame.
        :rtype: float
        """
        return self._punt_average

    @punt_average.setter
    def punt_average(self, punt_average):
        """Sets the punt_average of this TeamGame.


        :param punt_average: The punt_average of this TeamGame.
        :type punt_average: float
        """

        self._punt_average = punt_average

    @property
    def punt_long(self):
        """Gets the punt_long of this TeamGame.


        :return: The punt_long of this TeamGame.
        :rtype: float
        """
        return self._punt_long

    @punt_long.setter
    def punt_long(self, punt_long):
        """Sets the punt_long of this TeamGame.


        :param punt_long: The punt_long of this TeamGame.
        :type punt_long: float
        """

        self._punt_long = punt_long

    @property
    def punt_return_long(self):
        """Gets the punt_return_long of this TeamGame.


        :return: The punt_return_long of this TeamGame.
        :rtype: float
        """
        return self._punt_return_long

    @punt_return_long.setter
    def punt_return_long(self, punt_return_long):
        """Sets the punt_return_long of this TeamGame.


        :param punt_return_long: The punt_return_long of this TeamGame.
        :type punt_return_long: float
        """

        self._punt_return_long = punt_return_long

    @property
    def punt_return_touchdowns(self):
        """Gets the punt_return_touchdowns of this TeamGame.


        :return: The punt_return_touchdowns of this TeamGame.
        :rtype: float
        """
        return self._punt_return_touchdowns

    @punt_return_touchdowns.setter
    def punt_return_touchdowns(self, punt_return_touchdowns):
        """Sets the punt_return_touchdowns of this TeamGame.


        :param punt_return_touchdowns: The punt_return_touchdowns of this TeamGame.
        :type punt_return_touchdowns: float
        """

        self._punt_return_touchdowns = punt_return_touchdowns

    @property
    def punt_return_yards(self):
        """Gets the punt_return_yards of this TeamGame.


        :return: The punt_return_yards of this TeamGame.
        :rtype: float
        """
        return self._punt_return_yards

    @punt_return_yards.setter
    def punt_return_yards(self, punt_return_yards):
        """Sets the punt_return_yards of this TeamGame.


        :param punt_return_yards: The punt_return_yards of this TeamGame.
        :type punt_return_yards: float
        """

        self._punt_return_yards = punt_return_yards

    @property
    def punt_return_yards_per_attempt(self):
        """Gets the punt_return_yards_per_attempt of this TeamGame.


        :return: The punt_return_yards_per_attempt of this TeamGame.
        :rtype: float
        """
        return self._punt_return_yards_per_attempt

    @punt_return_yards_per_attempt.setter
    def punt_return_yards_per_attempt(self, punt_return_yards_per_attempt):
        """Sets the punt_return_yards_per_attempt of this TeamGame.


        :param punt_return_yards_per_attempt: The punt_return_yards_per_attempt of this TeamGame.
        :type punt_return_yards_per_attempt: float
        """

        self._punt_return_yards_per_attempt = punt_return_yards_per_attempt

    @property
    def punt_returns(self):
        """Gets the punt_returns of this TeamGame.


        :return: The punt_returns of this TeamGame.
        :rtype: float
        """
        return self._punt_returns

    @punt_returns.setter
    def punt_returns(self, punt_returns):
        """Sets the punt_returns of this TeamGame.


        :param punt_returns: The punt_returns of this TeamGame.
        :type punt_returns: float
        """

        self._punt_returns = punt_returns

    @property
    def punt_yards(self):
        """Gets the punt_yards of this TeamGame.


        :return: The punt_yards of this TeamGame.
        :rtype: float
        """
        return self._punt_yards

    @punt_yards.setter
    def punt_yards(self, punt_yards):
        """Sets the punt_yards of this TeamGame.


        :param punt_yards: The punt_yards of this TeamGame.
        :type punt_yards: float
        """

        self._punt_yards = punt_yards

    @property
    def punts(self):
        """Gets the punts of this TeamGame.


        :return: The punts of this TeamGame.
        :rtype: float
        """
        return self._punts

    @punts.setter
    def punts(self, punts):
        """Sets the punts of this TeamGame.


        :param punts: The punts of this TeamGame.
        :type punts: float
        """

        self._punts = punts

    @property
    def quarterback_hurries(self):
        """Gets the quarterback_hurries of this TeamGame.


        :return: The quarterback_hurries of this TeamGame.
        :rtype: float
        """
        return self._quarterback_hurries

    @quarterback_hurries.setter
    def quarterback_hurries(self, quarterback_hurries):
        """Sets the quarterback_hurries of this TeamGame.


        :param quarterback_hurries: The quarterback_hurries of this TeamGame.
        :type quarterback_hurries: float
        """

        self._quarterback_hurries = quarterback_hurries

    @property
    def receiving_long(self):
        """Gets the receiving_long of this TeamGame.


        :return: The receiving_long of this TeamGame.
        :rtype: float
        """
        return self._receiving_long

    @receiving_long.setter
    def receiving_long(self, receiving_long):
        """Sets the receiving_long of this TeamGame.


        :param receiving_long: The receiving_long of this TeamGame.
        :type receiving_long: float
        """

        self._receiving_long = receiving_long

    @property
    def receiving_touchdowns(self):
        """Gets the receiving_touchdowns of this TeamGame.


        :return: The receiving_touchdowns of this TeamGame.
        :rtype: float
        """
        return self._receiving_touchdowns

    @receiving_touchdowns.setter
    def receiving_touchdowns(self, receiving_touchdowns):
        """Sets the receiving_touchdowns of this TeamGame.


        :param receiving_touchdowns: The receiving_touchdowns of this TeamGame.
        :type receiving_touchdowns: float
        """

        self._receiving_touchdowns = receiving_touchdowns

    @property
    def receiving_yards(self):
        """Gets the receiving_yards of this TeamGame.


        :return: The receiving_yards of this TeamGame.
        :rtype: float
        """
        return self._receiving_yards

    @receiving_yards.setter
    def receiving_yards(self, receiving_yards):
        """Sets the receiving_yards of this TeamGame.


        :param receiving_yards: The receiving_yards of this TeamGame.
        :type receiving_yards: float
        """

        self._receiving_yards = receiving_yards

    @property
    def receiving_yards_per_reception(self):
        """Gets the receiving_yards_per_reception of this TeamGame.


        :return: The receiving_yards_per_reception of this TeamGame.
        :rtype: float
        """
        return self._receiving_yards_per_reception

    @receiving_yards_per_reception.setter
    def receiving_yards_per_reception(self, receiving_yards_per_reception):
        """Sets the receiving_yards_per_reception of this TeamGame.


        :param receiving_yards_per_reception: The receiving_yards_per_reception of this TeamGame.
        :type receiving_yards_per_reception: float
        """

        self._receiving_yards_per_reception = receiving_yards_per_reception

    @property
    def receptions(self):
        """Gets the receptions of this TeamGame.


        :return: The receptions of this TeamGame.
        :rtype: float
        """
        return self._receptions

    @receptions.setter
    def receptions(self, receptions):
        """Sets the receptions of this TeamGame.


        :param receptions: The receptions of this TeamGame.
        :type receptions: float
        """

        self._receptions = receptions

    @property
    def rushing_attempts(self):
        """Gets the rushing_attempts of this TeamGame.


        :return: The rushing_attempts of this TeamGame.
        :rtype: float
        """
        return self._rushing_attempts

    @rushing_attempts.setter
    def rushing_attempts(self, rushing_attempts):
        """Sets the rushing_attempts of this TeamGame.


        :param rushing_attempts: The rushing_attempts of this TeamGame.
        :type rushing_attempts: float
        """

        self._rushing_attempts = rushing_attempts

    @property
    def rushing_long(self):
        """Gets the rushing_long of this TeamGame.


        :return: The rushing_long of this TeamGame.
        :rtype: float
        """
        return self._rushing_long

    @rushing_long.setter
    def rushing_long(self, rushing_long):
        """Sets the rushing_long of this TeamGame.


        :param rushing_long: The rushing_long of this TeamGame.
        :type rushing_long: float
        """

        self._rushing_long = rushing_long

    @property
    def rushing_touchdowns(self):
        """Gets the rushing_touchdowns of this TeamGame.


        :return: The rushing_touchdowns of this TeamGame.
        :rtype: float
        """
        return self._rushing_touchdowns

    @rushing_touchdowns.setter
    def rushing_touchdowns(self, rushing_touchdowns):
        """Sets the rushing_touchdowns of this TeamGame.


        :param rushing_touchdowns: The rushing_touchdowns of this TeamGame.
        :type rushing_touchdowns: float
        """

        self._rushing_touchdowns = rushing_touchdowns

    @property
    def rushing_yards(self):
        """Gets the rushing_yards of this TeamGame.


        :return: The rushing_yards of this TeamGame.
        :rtype: float
        """
        return self._rushing_yards

    @rushing_yards.setter
    def rushing_yards(self, rushing_yards):
        """Sets the rushing_yards of this TeamGame.


        :param rushing_yards: The rushing_yards of this TeamGame.
        :type rushing_yards: float
        """

        self._rushing_yards = rushing_yards

    @property
    def rushing_yards_per_attempt(self):
        """Gets the rushing_yards_per_attempt of this TeamGame.


        :return: The rushing_yards_per_attempt of this TeamGame.
        :rtype: float
        """
        return self._rushing_yards_per_attempt

    @rushing_yards_per_attempt.setter
    def rushing_yards_per_attempt(self, rushing_yards_per_attempt):
        """Sets the rushing_yards_per_attempt of this TeamGame.


        :param rushing_yards_per_attempt: The rushing_yards_per_attempt of this TeamGame.
        :type rushing_yards_per_attempt: float
        """

        self._rushing_yards_per_attempt = rushing_yards_per_attempt

    @property
    def sacks(self):
        """Gets the sacks of this TeamGame.


        :return: The sacks of this TeamGame.
        :rtype: float
        """
        return self._sacks

    @sacks.setter
    def sacks(self, sacks):
        """Sets the sacks of this TeamGame.


        :param sacks: The sacks of this TeamGame.
        :type sacks: float
        """

        self._sacks = sacks

    @property
    def score(self):
        """Gets the score of this TeamGame.


        :return: The score of this TeamGame.
        :rtype: int
        """
        return self._score

    @score.setter
    def score(self, score):
        """Sets the score of this TeamGame.


        :param score: The score of this TeamGame.
        :type score: int
        """

        self._score = score

    @property
    def season(self):
        """Gets the season of this TeamGame.


        :return: The season of this TeamGame.
        :rtype: int
        """
        return self._season

    @season.setter
    def season(self, season):
        """Sets the season of this TeamGame.


        :param season: The season of this TeamGame.
        :type season: int
        """

        self._season = season

    @property
    def season_type(self):
        """Gets the season_type of this TeamGame.


        :return: The season_type of this TeamGame.
        :rtype: int
        """
        return self._season_type

    @season_type.setter
    def season_type(self, season_type):
        """Sets the season_type of this TeamGame.


        :param season_type: The season_type of this TeamGame.
        :type season_type: int
        """

        self._season_type = season_type

    @property
    def solo_tackles(self):
        """Gets the solo_tackles of this TeamGame.


        :return: The solo_tackles of this TeamGame.
        :rtype: float
        """
        return self._solo_tackles

    @solo_tackles.setter
    def solo_tackles(self, solo_tackles):
        """Sets the solo_tackles of this TeamGame.


        :param solo_tackles: The solo_tackles of this TeamGame.
        :type solo_tackles: float
        """

        self._solo_tackles = solo_tackles

    @property
    def stat_id(self):
        """Gets the stat_id of this TeamGame.


        :return: The stat_id of this TeamGame.
        :rtype: int
        """
        return self._stat_id

    @stat_id.setter
    def stat_id(self, stat_id):
        """Sets the stat_id of this TeamGame.


        :param stat_id: The stat_id of this TeamGame.
        :type stat_id: int
        """

        self._stat_id = stat_id

    @property
    def tackles_for_loss(self):
        """Gets the tackles_for_loss of this TeamGame.


        :return: The tackles_for_loss of this TeamGame.
        :rtype: float
        """
        return self._tackles_for_loss

    @tackles_for_loss.setter
    def tackles_for_loss(self, tackles_for_loss):
        """Sets the tackles_for_loss of this TeamGame.


        :param tackles_for_loss: The tackles_for_loss of this TeamGame.
        :type tackles_for_loss: float
        """

        self._tackles_for_loss = tackles_for_loss

    @property
    def team(self):
        """Gets the team of this TeamGame.


        :return: The team of this TeamGame.
        :rtype: str
        """
        return self._team

    @team.setter
    def team(self, team):
        """Sets the team of this TeamGame.


        :param team: The team of this TeamGame.
        :type team: str
        """

        self._team = team

    @property
    def team_id(self):
        """Gets the team_id of this TeamGame.


        :return: The team_id of this TeamGame.
        :rtype: int
        """
        return self._team_id

    @team_id.setter
    def team_id(self, team_id):
        """Sets the team_id of this TeamGame.


        :param team_id: The team_id of this TeamGame.
        :type team_id: int
        """

        self._team_id = team_id

    @property
    def third_down_attempts(self):
        """Gets the third_down_attempts of this TeamGame.


        :return: The third_down_attempts of this TeamGame.
        :rtype: int
        """
        return self._third_down_attempts

    @third_down_attempts.setter
    def third_down_attempts(self, third_down_attempts):
        """Sets the third_down_attempts of this TeamGame.


        :param third_down_attempts: The third_down_attempts of this TeamGame.
        :type third_down_attempts: int
        """

        self._third_down_attempts = third_down_attempts

    @property
    def third_down_conversions(self):
        """Gets the third_down_conversions of this TeamGame.


        :return: The third_down_conversions of this TeamGame.
        :rtype: int
        """
        return self._third_down_conversions

    @third_down_conversions.setter
    def third_down_conversions(self, third_down_conversions):
        """Sets the third_down_conversions of this TeamGame.


        :param third_down_conversions: The third_down_conversions of this TeamGame.
        :type third_down_conversions: int
        """

        self._third_down_conversions = third_down_conversions

    @property
    def time_of_possession_minutes(self):
        """Gets the time_of_possession_minutes of this TeamGame.


        :return: The time_of_possession_minutes of this TeamGame.
        :rtype: int
        """
        return self._time_of_possession_minutes

    @time_of_possession_minutes.setter
    def time_of_possession_minutes(self, time_of_possession_minutes):
        """Sets the time_of_possession_minutes of this TeamGame.


        :param time_of_possession_minutes: The time_of_possession_minutes of this TeamGame.
        :type time_of_possession_minutes: int
        """

        self._time_of_possession_minutes = time_of_possession_minutes

    @property
    def time_of_possession_seconds(self):
        """Gets the time_of_possession_seconds of this TeamGame.


        :return: The time_of_possession_seconds of this TeamGame.
        :rtype: int
        """
        return self._time_of_possession_seconds

    @time_of_possession_seconds.setter
    def time_of_possession_seconds(self, time_of_possession_seconds):
        """Sets the time_of_possession_seconds of this TeamGame.


        :param time_of_possession_seconds: The time_of_possession_seconds of this TeamGame.
        :type time_of_possession_seconds: int
        """

        self._time_of_possession_seconds = time_of_possession_seconds

    @property
    def updated(self):
        """Gets the updated of this TeamGame.


        :return: The updated of this TeamGame.
        :rtype: str
        """
        return self._updated

    @updated.setter
    def updated(self, updated):
        """Sets the updated of this TeamGame.


        :param updated: The updated of this TeamGame.
        :type updated: str
        """

        self._updated = updated

    @property
    def week(self):
        """Gets the week of this TeamGame.


        :return: The week of this TeamGame.
        :rtype: int
        """
        return self._week

    @week.setter
    def week(self, week):
        """Sets the week of this TeamGame.


        :param week: The week of this TeamGame.
        :type week: int
        """

        self._week = week
