# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Stadium(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active: bool=None, city: str=None, dome: bool=None, geo_lat: float=None, geo_long: float=None, name: str=None, stadium_id: int=None, state: str=None):
        """Stadium - a model defined in OpenAPI

        :param active: The active of this Stadium.
        :param city: The city of this Stadium.
        :param dome: The dome of this Stadium.
        :param geo_lat: The geo_lat of this Stadium.
        :param geo_long: The geo_long of this Stadium.
        :param name: The name of this Stadium.
        :param stadium_id: The stadium_id of this Stadium.
        :param state: The state of this Stadium.
        """
        self.openapi_types = {
            'active': bool,
            'city': str,
            'dome': bool,
            'geo_lat': float,
            'geo_long': float,
            'name': str,
            'stadium_id': int,
            'state': str
        }

        self.attribute_map = {
            'active': 'Active',
            'city': 'City',
            'dome': 'Dome',
            'geo_lat': 'GeoLat',
            'geo_long': 'GeoLong',
            'name': 'Name',
            'stadium_id': 'StadiumID',
            'state': 'State'
        }

        self._active = active
        self._city = city
        self._dome = dome
        self._geo_lat = geo_lat
        self._geo_long = geo_long
        self._name = name
        self._stadium_id = stadium_id
        self._state = state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Stadium':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Stadium of this Stadium.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active(self):
        """Gets the active of this Stadium.


        :return: The active of this Stadium.
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this Stadium.


        :param active: The active of this Stadium.
        :type active: bool
        """

        self._active = active

    @property
    def city(self):
        """Gets the city of this Stadium.


        :return: The city of this Stadium.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this Stadium.


        :param city: The city of this Stadium.
        :type city: str
        """

        self._city = city

    @property
    def dome(self):
        """Gets the dome of this Stadium.


        :return: The dome of this Stadium.
        :rtype: bool
        """
        return self._dome

    @dome.setter
    def dome(self, dome):
        """Sets the dome of this Stadium.


        :param dome: The dome of this Stadium.
        :type dome: bool
        """

        self._dome = dome

    @property
    def geo_lat(self):
        """Gets the geo_lat of this Stadium.


        :return: The geo_lat of this Stadium.
        :rtype: float
        """
        return self._geo_lat

    @geo_lat.setter
    def geo_lat(self, geo_lat):
        """Sets the geo_lat of this Stadium.


        :param geo_lat: The geo_lat of this Stadium.
        :type geo_lat: float
        """

        self._geo_lat = geo_lat

    @property
    def geo_long(self):
        """Gets the geo_long of this Stadium.


        :return: The geo_long of this Stadium.
        :rtype: float
        """
        return self._geo_long

    @geo_long.setter
    def geo_long(self, geo_long):
        """Sets the geo_long of this Stadium.


        :param geo_long: The geo_long of this Stadium.
        :type geo_long: float
        """

        self._geo_long = geo_long

    @property
    def name(self):
        """Gets the name of this Stadium.


        :return: The name of this Stadium.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Stadium.


        :param name: The name of this Stadium.
        :type name: str
        """

        self._name = name

    @property
    def stadium_id(self):
        """Gets the stadium_id of this Stadium.


        :return: The stadium_id of this Stadium.
        :rtype: int
        """
        return self._stadium_id

    @stadium_id.setter
    def stadium_id(self, stadium_id):
        """Sets the stadium_id of this Stadium.


        :param stadium_id: The stadium_id of this Stadium.
        :type stadium_id: int
        """

        self._stadium_id = stadium_id

    @property
    def state(self):
        """Gets the state of this Stadium.


        :return: The state of this Stadium.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this Stadium.


        :param state: The state of this Stadium.
        :type state: str
        """

        self._state = state
