/*
 * CFB v3 Scores
 * CFB schedules, scores, team stats, odds, weather, and news API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TeamGame
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:05:39.154965-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TeamGame {
  public static final String SERIALIZED_NAME_ASSISTED_TACKLES = "AssistedTackles";
  @SerializedName(SERIALIZED_NAME_ASSISTED_TACKLES)
  private BigDecimal assistedTackles;

  public static final String SERIALIZED_NAME_CREATED = "Created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private String created;

  public static final String SERIALIZED_NAME_DATE_TIME = "DateTime";
  @SerializedName(SERIALIZED_NAME_DATE_TIME)
  private String dateTime;

  public static final String SERIALIZED_NAME_DAY = "Day";
  @SerializedName(SERIALIZED_NAME_DAY)
  private String day;

  public static final String SERIALIZED_NAME_EXTRA_POINTS_ATTEMPTED = "ExtraPointsAttempted";
  @SerializedName(SERIALIZED_NAME_EXTRA_POINTS_ATTEMPTED)
  private BigDecimal extraPointsAttempted;

  public static final String SERIALIZED_NAME_EXTRA_POINTS_MADE = "ExtraPointsMade";
  @SerializedName(SERIALIZED_NAME_EXTRA_POINTS_MADE)
  private BigDecimal extraPointsMade;

  public static final String SERIALIZED_NAME_FANTASY_POINTS = "FantasyPoints";
  @SerializedName(SERIALIZED_NAME_FANTASY_POINTS)
  private BigDecimal fantasyPoints;

  public static final String SERIALIZED_NAME_FIELD_GOAL_PERCENTAGE = "FieldGoalPercentage";
  @SerializedName(SERIALIZED_NAME_FIELD_GOAL_PERCENTAGE)
  private BigDecimal fieldGoalPercentage;

  public static final String SERIALIZED_NAME_FIELD_GOALS_ATTEMPTED = "FieldGoalsAttempted";
  @SerializedName(SERIALIZED_NAME_FIELD_GOALS_ATTEMPTED)
  private BigDecimal fieldGoalsAttempted;

  public static final String SERIALIZED_NAME_FIELD_GOALS_LONGEST_MADE = "FieldGoalsLongestMade";
  @SerializedName(SERIALIZED_NAME_FIELD_GOALS_LONGEST_MADE)
  private BigDecimal fieldGoalsLongestMade;

  public static final String SERIALIZED_NAME_FIELD_GOALS_MADE = "FieldGoalsMade";
  @SerializedName(SERIALIZED_NAME_FIELD_GOALS_MADE)
  private BigDecimal fieldGoalsMade;

  public static final String SERIALIZED_NAME_FIRST_DOWNS = "FirstDowns";
  @SerializedName(SERIALIZED_NAME_FIRST_DOWNS)
  private Integer firstDowns;

  public static final String SERIALIZED_NAME_FOURTH_DOWN_ATTEMPTS = "FourthDownAttempts";
  @SerializedName(SERIALIZED_NAME_FOURTH_DOWN_ATTEMPTS)
  private Integer fourthDownAttempts;

  public static final String SERIALIZED_NAME_FOURTH_DOWN_CONVERSIONS = "FourthDownConversions";
  @SerializedName(SERIALIZED_NAME_FOURTH_DOWN_CONVERSIONS)
  private Integer fourthDownConversions;

  public static final String SERIALIZED_NAME_FUMBLE_RETURN_TOUCHDOWNS = "FumbleReturnTouchdowns";
  @SerializedName(SERIALIZED_NAME_FUMBLE_RETURN_TOUCHDOWNS)
  private BigDecimal fumbleReturnTouchdowns;

  public static final String SERIALIZED_NAME_FUMBLES = "Fumbles";
  @SerializedName(SERIALIZED_NAME_FUMBLES)
  private BigDecimal fumbles;

  public static final String SERIALIZED_NAME_FUMBLES_LOST = "FumblesLost";
  @SerializedName(SERIALIZED_NAME_FUMBLES_LOST)
  private BigDecimal fumblesLost;

  public static final String SERIALIZED_NAME_FUMBLES_RECOVERED = "FumblesRecovered";
  @SerializedName(SERIALIZED_NAME_FUMBLES_RECOVERED)
  private BigDecimal fumblesRecovered;

  public static final String SERIALIZED_NAME_GAME_I_D = "GameID";
  @SerializedName(SERIALIZED_NAME_GAME_I_D)
  private Integer gameID;

  public static final String SERIALIZED_NAME_GAMES = "Games";
  @SerializedName(SERIALIZED_NAME_GAMES)
  private Integer games;

  public static final String SERIALIZED_NAME_GLOBAL_GAME_I_D = "GlobalGameID";
  @SerializedName(SERIALIZED_NAME_GLOBAL_GAME_I_D)
  private Integer globalGameID;

  public static final String SERIALIZED_NAME_GLOBAL_OPPONENT_I_D = "GlobalOpponentID";
  @SerializedName(SERIALIZED_NAME_GLOBAL_OPPONENT_I_D)
  private Integer globalOpponentID;

  public static final String SERIALIZED_NAME_GLOBAL_TEAM_I_D = "GlobalTeamID";
  @SerializedName(SERIALIZED_NAME_GLOBAL_TEAM_I_D)
  private Integer globalTeamID;

  public static final String SERIALIZED_NAME_HOME_OR_AWAY = "HomeOrAway";
  @SerializedName(SERIALIZED_NAME_HOME_OR_AWAY)
  private String homeOrAway;

  public static final String SERIALIZED_NAME_INTERCEPTION_RETURN_TOUCHDOWNS = "InterceptionReturnTouchdowns";
  @SerializedName(SERIALIZED_NAME_INTERCEPTION_RETURN_TOUCHDOWNS)
  private BigDecimal interceptionReturnTouchdowns;

  public static final String SERIALIZED_NAME_INTERCEPTION_RETURN_YARDS = "InterceptionReturnYards";
  @SerializedName(SERIALIZED_NAME_INTERCEPTION_RETURN_YARDS)
  private BigDecimal interceptionReturnYards;

  public static final String SERIALIZED_NAME_INTERCEPTIONS = "Interceptions";
  @SerializedName(SERIALIZED_NAME_INTERCEPTIONS)
  private BigDecimal interceptions;

  public static final String SERIALIZED_NAME_IS_GAME_OVER = "IsGameOver";
  @SerializedName(SERIALIZED_NAME_IS_GAME_OVER)
  private Boolean isGameOver;

  public static final String SERIALIZED_NAME_KICK_RETURN_LONG = "KickReturnLong";
  @SerializedName(SERIALIZED_NAME_KICK_RETURN_LONG)
  private BigDecimal kickReturnLong;

  public static final String SERIALIZED_NAME_KICK_RETURN_TOUCHDOWNS = "KickReturnTouchdowns";
  @SerializedName(SERIALIZED_NAME_KICK_RETURN_TOUCHDOWNS)
  private BigDecimal kickReturnTouchdowns;

  public static final String SERIALIZED_NAME_KICK_RETURN_YARDS = "KickReturnYards";
  @SerializedName(SERIALIZED_NAME_KICK_RETURN_YARDS)
  private BigDecimal kickReturnYards;

  public static final String SERIALIZED_NAME_KICK_RETURN_YARDS_PER_ATTEMPT = "KickReturnYardsPerAttempt";
  @SerializedName(SERIALIZED_NAME_KICK_RETURN_YARDS_PER_ATTEMPT)
  private BigDecimal kickReturnYardsPerAttempt;

  public static final String SERIALIZED_NAME_KICK_RETURNS = "KickReturns";
  @SerializedName(SERIALIZED_NAME_KICK_RETURNS)
  private BigDecimal kickReturns;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_OPPONENT = "Opponent";
  @SerializedName(SERIALIZED_NAME_OPPONENT)
  private String opponent;

  public static final String SERIALIZED_NAME_OPPONENT_I_D = "OpponentID";
  @SerializedName(SERIALIZED_NAME_OPPONENT_I_D)
  private Integer opponentID;

  public static final String SERIALIZED_NAME_OPPONENT_SCORE = "OpponentScore";
  @SerializedName(SERIALIZED_NAME_OPPONENT_SCORE)
  private Integer opponentScore;

  public static final String SERIALIZED_NAME_PASSES_DEFENDED = "PassesDefended";
  @SerializedName(SERIALIZED_NAME_PASSES_DEFENDED)
  private BigDecimal passesDefended;

  public static final String SERIALIZED_NAME_PASSING_ATTEMPTS = "PassingAttempts";
  @SerializedName(SERIALIZED_NAME_PASSING_ATTEMPTS)
  private BigDecimal passingAttempts;

  public static final String SERIALIZED_NAME_PASSING_COMPLETION_PERCENTAGE = "PassingCompletionPercentage";
  @SerializedName(SERIALIZED_NAME_PASSING_COMPLETION_PERCENTAGE)
  private BigDecimal passingCompletionPercentage;

  public static final String SERIALIZED_NAME_PASSING_COMPLETIONS = "PassingCompletions";
  @SerializedName(SERIALIZED_NAME_PASSING_COMPLETIONS)
  private BigDecimal passingCompletions;

  public static final String SERIALIZED_NAME_PASSING_INTERCEPTIONS = "PassingInterceptions";
  @SerializedName(SERIALIZED_NAME_PASSING_INTERCEPTIONS)
  private BigDecimal passingInterceptions;

  public static final String SERIALIZED_NAME_PASSING_RATING = "PassingRating";
  @SerializedName(SERIALIZED_NAME_PASSING_RATING)
  private BigDecimal passingRating;

  public static final String SERIALIZED_NAME_PASSING_TOUCHDOWNS = "PassingTouchdowns";
  @SerializedName(SERIALIZED_NAME_PASSING_TOUCHDOWNS)
  private BigDecimal passingTouchdowns;

  public static final String SERIALIZED_NAME_PASSING_YARDS = "PassingYards";
  @SerializedName(SERIALIZED_NAME_PASSING_YARDS)
  private BigDecimal passingYards;

  public static final String SERIALIZED_NAME_PASSING_YARDS_PER_ATTEMPT = "PassingYardsPerAttempt";
  @SerializedName(SERIALIZED_NAME_PASSING_YARDS_PER_ATTEMPT)
  private BigDecimal passingYardsPerAttempt;

  public static final String SERIALIZED_NAME_PASSING_YARDS_PER_COMPLETION = "PassingYardsPerCompletion";
  @SerializedName(SERIALIZED_NAME_PASSING_YARDS_PER_COMPLETION)
  private BigDecimal passingYardsPerCompletion;

  public static final String SERIALIZED_NAME_PENALTIES = "Penalties";
  @SerializedName(SERIALIZED_NAME_PENALTIES)
  private Integer penalties;

  public static final String SERIALIZED_NAME_PENALTY_YARDS = "PenaltyYards";
  @SerializedName(SERIALIZED_NAME_PENALTY_YARDS)
  private Integer penaltyYards;

  public static final String SERIALIZED_NAME_PUNT_AVERAGE = "PuntAverage";
  @SerializedName(SERIALIZED_NAME_PUNT_AVERAGE)
  private BigDecimal puntAverage;

  public static final String SERIALIZED_NAME_PUNT_LONG = "PuntLong";
  @SerializedName(SERIALIZED_NAME_PUNT_LONG)
  private BigDecimal puntLong;

  public static final String SERIALIZED_NAME_PUNT_RETURN_LONG = "PuntReturnLong";
  @SerializedName(SERIALIZED_NAME_PUNT_RETURN_LONG)
  private BigDecimal puntReturnLong;

  public static final String SERIALIZED_NAME_PUNT_RETURN_TOUCHDOWNS = "PuntReturnTouchdowns";
  @SerializedName(SERIALIZED_NAME_PUNT_RETURN_TOUCHDOWNS)
  private BigDecimal puntReturnTouchdowns;

  public static final String SERIALIZED_NAME_PUNT_RETURN_YARDS = "PuntReturnYards";
  @SerializedName(SERIALIZED_NAME_PUNT_RETURN_YARDS)
  private BigDecimal puntReturnYards;

  public static final String SERIALIZED_NAME_PUNT_RETURN_YARDS_PER_ATTEMPT = "PuntReturnYardsPerAttempt";
  @SerializedName(SERIALIZED_NAME_PUNT_RETURN_YARDS_PER_ATTEMPT)
  private BigDecimal puntReturnYardsPerAttempt;

  public static final String SERIALIZED_NAME_PUNT_RETURNS = "PuntReturns";
  @SerializedName(SERIALIZED_NAME_PUNT_RETURNS)
  private BigDecimal puntReturns;

  public static final String SERIALIZED_NAME_PUNT_YARDS = "PuntYards";
  @SerializedName(SERIALIZED_NAME_PUNT_YARDS)
  private BigDecimal puntYards;

  public static final String SERIALIZED_NAME_PUNTS = "Punts";
  @SerializedName(SERIALIZED_NAME_PUNTS)
  private BigDecimal punts;

  public static final String SERIALIZED_NAME_QUARTERBACK_HURRIES = "QuarterbackHurries";
  @SerializedName(SERIALIZED_NAME_QUARTERBACK_HURRIES)
  private BigDecimal quarterbackHurries;

  public static final String SERIALIZED_NAME_RECEIVING_LONG = "ReceivingLong";
  @SerializedName(SERIALIZED_NAME_RECEIVING_LONG)
  private BigDecimal receivingLong;

  public static final String SERIALIZED_NAME_RECEIVING_TOUCHDOWNS = "ReceivingTouchdowns";
  @SerializedName(SERIALIZED_NAME_RECEIVING_TOUCHDOWNS)
  private BigDecimal receivingTouchdowns;

  public static final String SERIALIZED_NAME_RECEIVING_YARDS = "ReceivingYards";
  @SerializedName(SERIALIZED_NAME_RECEIVING_YARDS)
  private BigDecimal receivingYards;

  public static final String SERIALIZED_NAME_RECEIVING_YARDS_PER_RECEPTION = "ReceivingYardsPerReception";
  @SerializedName(SERIALIZED_NAME_RECEIVING_YARDS_PER_RECEPTION)
  private BigDecimal receivingYardsPerReception;

  public static final String SERIALIZED_NAME_RECEPTIONS = "Receptions";
  @SerializedName(SERIALIZED_NAME_RECEPTIONS)
  private BigDecimal receptions;

  public static final String SERIALIZED_NAME_RUSHING_ATTEMPTS = "RushingAttempts";
  @SerializedName(SERIALIZED_NAME_RUSHING_ATTEMPTS)
  private BigDecimal rushingAttempts;

  public static final String SERIALIZED_NAME_RUSHING_LONG = "RushingLong";
  @SerializedName(SERIALIZED_NAME_RUSHING_LONG)
  private BigDecimal rushingLong;

  public static final String SERIALIZED_NAME_RUSHING_TOUCHDOWNS = "RushingTouchdowns";
  @SerializedName(SERIALIZED_NAME_RUSHING_TOUCHDOWNS)
  private BigDecimal rushingTouchdowns;

  public static final String SERIALIZED_NAME_RUSHING_YARDS = "RushingYards";
  @SerializedName(SERIALIZED_NAME_RUSHING_YARDS)
  private BigDecimal rushingYards;

  public static final String SERIALIZED_NAME_RUSHING_YARDS_PER_ATTEMPT = "RushingYardsPerAttempt";
  @SerializedName(SERIALIZED_NAME_RUSHING_YARDS_PER_ATTEMPT)
  private BigDecimal rushingYardsPerAttempt;

  public static final String SERIALIZED_NAME_SACKS = "Sacks";
  @SerializedName(SERIALIZED_NAME_SACKS)
  private BigDecimal sacks;

  public static final String SERIALIZED_NAME_SCORE = "Score";
  @SerializedName(SERIALIZED_NAME_SCORE)
  private Integer score;

  public static final String SERIALIZED_NAME_SEASON = "Season";
  @SerializedName(SERIALIZED_NAME_SEASON)
  private Integer season;

  public static final String SERIALIZED_NAME_SEASON_TYPE = "SeasonType";
  @SerializedName(SERIALIZED_NAME_SEASON_TYPE)
  private Integer seasonType;

  public static final String SERIALIZED_NAME_SOLO_TACKLES = "SoloTackles";
  @SerializedName(SERIALIZED_NAME_SOLO_TACKLES)
  private BigDecimal soloTackles;

  public static final String SERIALIZED_NAME_STAT_I_D = "StatID";
  @SerializedName(SERIALIZED_NAME_STAT_I_D)
  private Integer statID;

  public static final String SERIALIZED_NAME_TACKLES_FOR_LOSS = "TacklesForLoss";
  @SerializedName(SERIALIZED_NAME_TACKLES_FOR_LOSS)
  private BigDecimal tacklesForLoss;

  public static final String SERIALIZED_NAME_TEAM = "Team";
  @SerializedName(SERIALIZED_NAME_TEAM)
  private String team;

  public static final String SERIALIZED_NAME_TEAM_I_D = "TeamID";
  @SerializedName(SERIALIZED_NAME_TEAM_I_D)
  private Integer teamID;

  public static final String SERIALIZED_NAME_THIRD_DOWN_ATTEMPTS = "ThirdDownAttempts";
  @SerializedName(SERIALIZED_NAME_THIRD_DOWN_ATTEMPTS)
  private Integer thirdDownAttempts;

  public static final String SERIALIZED_NAME_THIRD_DOWN_CONVERSIONS = "ThirdDownConversions";
  @SerializedName(SERIALIZED_NAME_THIRD_DOWN_CONVERSIONS)
  private Integer thirdDownConversions;

  public static final String SERIALIZED_NAME_TIME_OF_POSSESSION_MINUTES = "TimeOfPossessionMinutes";
  @SerializedName(SERIALIZED_NAME_TIME_OF_POSSESSION_MINUTES)
  private Integer timeOfPossessionMinutes;

  public static final String SERIALIZED_NAME_TIME_OF_POSSESSION_SECONDS = "TimeOfPossessionSeconds";
  @SerializedName(SERIALIZED_NAME_TIME_OF_POSSESSION_SECONDS)
  private Integer timeOfPossessionSeconds;

  public static final String SERIALIZED_NAME_UPDATED = "Updated";
  @SerializedName(SERIALIZED_NAME_UPDATED)
  private String updated;

  public static final String SERIALIZED_NAME_WEEK = "Week";
  @SerializedName(SERIALIZED_NAME_WEEK)
  private Integer week;

  public TeamGame() {
  }

  public TeamGame assistedTackles(BigDecimal assistedTackles) {
    this.assistedTackles = assistedTackles;
    return this;
  }

  /**
   * Get assistedTackles
   * @return assistedTackles
   */
  @javax.annotation.Nullable
  public BigDecimal getAssistedTackles() {
    return assistedTackles;
  }

  public void setAssistedTackles(BigDecimal assistedTackles) {
    this.assistedTackles = assistedTackles;
  }


  public TeamGame created(String created) {
    this.created = created;
    return this;
  }

  /**
   * Get created
   * @return created
   */
  @javax.annotation.Nullable
  public String getCreated() {
    return created;
  }

  public void setCreated(String created) {
    this.created = created;
  }


  public TeamGame dateTime(String dateTime) {
    this.dateTime = dateTime;
    return this;
  }

  /**
   * Get dateTime
   * @return dateTime
   */
  @javax.annotation.Nullable
  public String getDateTime() {
    return dateTime;
  }

  public void setDateTime(String dateTime) {
    this.dateTime = dateTime;
  }


  public TeamGame day(String day) {
    this.day = day;
    return this;
  }

  /**
   * Get day
   * @return day
   */
  @javax.annotation.Nullable
  public String getDay() {
    return day;
  }

  public void setDay(String day) {
    this.day = day;
  }


  public TeamGame extraPointsAttempted(BigDecimal extraPointsAttempted) {
    this.extraPointsAttempted = extraPointsAttempted;
    return this;
  }

  /**
   * Get extraPointsAttempted
   * @return extraPointsAttempted
   */
  @javax.annotation.Nullable
  public BigDecimal getExtraPointsAttempted() {
    return extraPointsAttempted;
  }

  public void setExtraPointsAttempted(BigDecimal extraPointsAttempted) {
    this.extraPointsAttempted = extraPointsAttempted;
  }


  public TeamGame extraPointsMade(BigDecimal extraPointsMade) {
    this.extraPointsMade = extraPointsMade;
    return this;
  }

  /**
   * Get extraPointsMade
   * @return extraPointsMade
   */
  @javax.annotation.Nullable
  public BigDecimal getExtraPointsMade() {
    return extraPointsMade;
  }

  public void setExtraPointsMade(BigDecimal extraPointsMade) {
    this.extraPointsMade = extraPointsMade;
  }


  public TeamGame fantasyPoints(BigDecimal fantasyPoints) {
    this.fantasyPoints = fantasyPoints;
    return this;
  }

  /**
   * Get fantasyPoints
   * @return fantasyPoints
   */
  @javax.annotation.Nullable
  public BigDecimal getFantasyPoints() {
    return fantasyPoints;
  }

  public void setFantasyPoints(BigDecimal fantasyPoints) {
    this.fantasyPoints = fantasyPoints;
  }


  public TeamGame fieldGoalPercentage(BigDecimal fieldGoalPercentage) {
    this.fieldGoalPercentage = fieldGoalPercentage;
    return this;
  }

  /**
   * Get fieldGoalPercentage
   * @return fieldGoalPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getFieldGoalPercentage() {
    return fieldGoalPercentage;
  }

  public void setFieldGoalPercentage(BigDecimal fieldGoalPercentage) {
    this.fieldGoalPercentage = fieldGoalPercentage;
  }


  public TeamGame fieldGoalsAttempted(BigDecimal fieldGoalsAttempted) {
    this.fieldGoalsAttempted = fieldGoalsAttempted;
    return this;
  }

  /**
   * Get fieldGoalsAttempted
   * @return fieldGoalsAttempted
   */
  @javax.annotation.Nullable
  public BigDecimal getFieldGoalsAttempted() {
    return fieldGoalsAttempted;
  }

  public void setFieldGoalsAttempted(BigDecimal fieldGoalsAttempted) {
    this.fieldGoalsAttempted = fieldGoalsAttempted;
  }


  public TeamGame fieldGoalsLongestMade(BigDecimal fieldGoalsLongestMade) {
    this.fieldGoalsLongestMade = fieldGoalsLongestMade;
    return this;
  }

  /**
   * Get fieldGoalsLongestMade
   * @return fieldGoalsLongestMade
   */
  @javax.annotation.Nullable
  public BigDecimal getFieldGoalsLongestMade() {
    return fieldGoalsLongestMade;
  }

  public void setFieldGoalsLongestMade(BigDecimal fieldGoalsLongestMade) {
    this.fieldGoalsLongestMade = fieldGoalsLongestMade;
  }


  public TeamGame fieldGoalsMade(BigDecimal fieldGoalsMade) {
    this.fieldGoalsMade = fieldGoalsMade;
    return this;
  }

  /**
   * Get fieldGoalsMade
   * @return fieldGoalsMade
   */
  @javax.annotation.Nullable
  public BigDecimal getFieldGoalsMade() {
    return fieldGoalsMade;
  }

  public void setFieldGoalsMade(BigDecimal fieldGoalsMade) {
    this.fieldGoalsMade = fieldGoalsMade;
  }


  public TeamGame firstDowns(Integer firstDowns) {
    this.firstDowns = firstDowns;
    return this;
  }

  /**
   * Get firstDowns
   * @return firstDowns
   */
  @javax.annotation.Nullable
  public Integer getFirstDowns() {
    return firstDowns;
  }

  public void setFirstDowns(Integer firstDowns) {
    this.firstDowns = firstDowns;
  }


  public TeamGame fourthDownAttempts(Integer fourthDownAttempts) {
    this.fourthDownAttempts = fourthDownAttempts;
    return this;
  }

  /**
   * Get fourthDownAttempts
   * @return fourthDownAttempts
   */
  @javax.annotation.Nullable
  public Integer getFourthDownAttempts() {
    return fourthDownAttempts;
  }

  public void setFourthDownAttempts(Integer fourthDownAttempts) {
    this.fourthDownAttempts = fourthDownAttempts;
  }


  public TeamGame fourthDownConversions(Integer fourthDownConversions) {
    this.fourthDownConversions = fourthDownConversions;
    return this;
  }

  /**
   * Get fourthDownConversions
   * @return fourthDownConversions
   */
  @javax.annotation.Nullable
  public Integer getFourthDownConversions() {
    return fourthDownConversions;
  }

  public void setFourthDownConversions(Integer fourthDownConversions) {
    this.fourthDownConversions = fourthDownConversions;
  }


  public TeamGame fumbleReturnTouchdowns(BigDecimal fumbleReturnTouchdowns) {
    this.fumbleReturnTouchdowns = fumbleReturnTouchdowns;
    return this;
  }

  /**
   * Get fumbleReturnTouchdowns
   * @return fumbleReturnTouchdowns
   */
  @javax.annotation.Nullable
  public BigDecimal getFumbleReturnTouchdowns() {
    return fumbleReturnTouchdowns;
  }

  public void setFumbleReturnTouchdowns(BigDecimal fumbleReturnTouchdowns) {
    this.fumbleReturnTouchdowns = fumbleReturnTouchdowns;
  }


  public TeamGame fumbles(BigDecimal fumbles) {
    this.fumbles = fumbles;
    return this;
  }

  /**
   * Get fumbles
   * @return fumbles
   */
  @javax.annotation.Nullable
  public BigDecimal getFumbles() {
    return fumbles;
  }

  public void setFumbles(BigDecimal fumbles) {
    this.fumbles = fumbles;
  }


  public TeamGame fumblesLost(BigDecimal fumblesLost) {
    this.fumblesLost = fumblesLost;
    return this;
  }

  /**
   * Get fumblesLost
   * @return fumblesLost
   */
  @javax.annotation.Nullable
  public BigDecimal getFumblesLost() {
    return fumblesLost;
  }

  public void setFumblesLost(BigDecimal fumblesLost) {
    this.fumblesLost = fumblesLost;
  }


  public TeamGame fumblesRecovered(BigDecimal fumblesRecovered) {
    this.fumblesRecovered = fumblesRecovered;
    return this;
  }

  /**
   * Get fumblesRecovered
   * @return fumblesRecovered
   */
  @javax.annotation.Nullable
  public BigDecimal getFumblesRecovered() {
    return fumblesRecovered;
  }

  public void setFumblesRecovered(BigDecimal fumblesRecovered) {
    this.fumblesRecovered = fumblesRecovered;
  }


  public TeamGame gameID(Integer gameID) {
    this.gameID = gameID;
    return this;
  }

  /**
   * Get gameID
   * @return gameID
   */
  @javax.annotation.Nullable
  public Integer getGameID() {
    return gameID;
  }

  public void setGameID(Integer gameID) {
    this.gameID = gameID;
  }


  public TeamGame games(Integer games) {
    this.games = games;
    return this;
  }

  /**
   * Get games
   * @return games
   */
  @javax.annotation.Nullable
  public Integer getGames() {
    return games;
  }

  public void setGames(Integer games) {
    this.games = games;
  }


  public TeamGame globalGameID(Integer globalGameID) {
    this.globalGameID = globalGameID;
    return this;
  }

  /**
   * Get globalGameID
   * @return globalGameID
   */
  @javax.annotation.Nullable
  public Integer getGlobalGameID() {
    return globalGameID;
  }

  public void setGlobalGameID(Integer globalGameID) {
    this.globalGameID = globalGameID;
  }


  public TeamGame globalOpponentID(Integer globalOpponentID) {
    this.globalOpponentID = globalOpponentID;
    return this;
  }

  /**
   * Get globalOpponentID
   * @return globalOpponentID
   */
  @javax.annotation.Nullable
  public Integer getGlobalOpponentID() {
    return globalOpponentID;
  }

  public void setGlobalOpponentID(Integer globalOpponentID) {
    this.globalOpponentID = globalOpponentID;
  }


  public TeamGame globalTeamID(Integer globalTeamID) {
    this.globalTeamID = globalTeamID;
    return this;
  }

  /**
   * Get globalTeamID
   * @return globalTeamID
   */
  @javax.annotation.Nullable
  public Integer getGlobalTeamID() {
    return globalTeamID;
  }

  public void setGlobalTeamID(Integer globalTeamID) {
    this.globalTeamID = globalTeamID;
  }


  public TeamGame homeOrAway(String homeOrAway) {
    this.homeOrAway = homeOrAway;
    return this;
  }

  /**
   * Get homeOrAway
   * @return homeOrAway
   */
  @javax.annotation.Nullable
  public String getHomeOrAway() {
    return homeOrAway;
  }

  public void setHomeOrAway(String homeOrAway) {
    this.homeOrAway = homeOrAway;
  }


  public TeamGame interceptionReturnTouchdowns(BigDecimal interceptionReturnTouchdowns) {
    this.interceptionReturnTouchdowns = interceptionReturnTouchdowns;
    return this;
  }

  /**
   * Get interceptionReturnTouchdowns
   * @return interceptionReturnTouchdowns
   */
  @javax.annotation.Nullable
  public BigDecimal getInterceptionReturnTouchdowns() {
    return interceptionReturnTouchdowns;
  }

  public void setInterceptionReturnTouchdowns(BigDecimal interceptionReturnTouchdowns) {
    this.interceptionReturnTouchdowns = interceptionReturnTouchdowns;
  }


  public TeamGame interceptionReturnYards(BigDecimal interceptionReturnYards) {
    this.interceptionReturnYards = interceptionReturnYards;
    return this;
  }

  /**
   * Get interceptionReturnYards
   * @return interceptionReturnYards
   */
  @javax.annotation.Nullable
  public BigDecimal getInterceptionReturnYards() {
    return interceptionReturnYards;
  }

  public void setInterceptionReturnYards(BigDecimal interceptionReturnYards) {
    this.interceptionReturnYards = interceptionReturnYards;
  }


  public TeamGame interceptions(BigDecimal interceptions) {
    this.interceptions = interceptions;
    return this;
  }

  /**
   * Get interceptions
   * @return interceptions
   */
  @javax.annotation.Nullable
  public BigDecimal getInterceptions() {
    return interceptions;
  }

  public void setInterceptions(BigDecimal interceptions) {
    this.interceptions = interceptions;
  }


  public TeamGame isGameOver(Boolean isGameOver) {
    this.isGameOver = isGameOver;
    return this;
  }

  /**
   * Get isGameOver
   * @return isGameOver
   */
  @javax.annotation.Nullable
  public Boolean getIsGameOver() {
    return isGameOver;
  }

  public void setIsGameOver(Boolean isGameOver) {
    this.isGameOver = isGameOver;
  }


  public TeamGame kickReturnLong(BigDecimal kickReturnLong) {
    this.kickReturnLong = kickReturnLong;
    return this;
  }

  /**
   * Get kickReturnLong
   * @return kickReturnLong
   */
  @javax.annotation.Nullable
  public BigDecimal getKickReturnLong() {
    return kickReturnLong;
  }

  public void setKickReturnLong(BigDecimal kickReturnLong) {
    this.kickReturnLong = kickReturnLong;
  }


  public TeamGame kickReturnTouchdowns(BigDecimal kickReturnTouchdowns) {
    this.kickReturnTouchdowns = kickReturnTouchdowns;
    return this;
  }

  /**
   * Get kickReturnTouchdowns
   * @return kickReturnTouchdowns
   */
  @javax.annotation.Nullable
  public BigDecimal getKickReturnTouchdowns() {
    return kickReturnTouchdowns;
  }

  public void setKickReturnTouchdowns(BigDecimal kickReturnTouchdowns) {
    this.kickReturnTouchdowns = kickReturnTouchdowns;
  }


  public TeamGame kickReturnYards(BigDecimal kickReturnYards) {
    this.kickReturnYards = kickReturnYards;
    return this;
  }

  /**
   * Get kickReturnYards
   * @return kickReturnYards
   */
  @javax.annotation.Nullable
  public BigDecimal getKickReturnYards() {
    return kickReturnYards;
  }

  public void setKickReturnYards(BigDecimal kickReturnYards) {
    this.kickReturnYards = kickReturnYards;
  }


  public TeamGame kickReturnYardsPerAttempt(BigDecimal kickReturnYardsPerAttempt) {
    this.kickReturnYardsPerAttempt = kickReturnYardsPerAttempt;
    return this;
  }

  /**
   * Get kickReturnYardsPerAttempt
   * @return kickReturnYardsPerAttempt
   */
  @javax.annotation.Nullable
  public BigDecimal getKickReturnYardsPerAttempt() {
    return kickReturnYardsPerAttempt;
  }

  public void setKickReturnYardsPerAttempt(BigDecimal kickReturnYardsPerAttempt) {
    this.kickReturnYardsPerAttempt = kickReturnYardsPerAttempt;
  }


  public TeamGame kickReturns(BigDecimal kickReturns) {
    this.kickReturns = kickReturns;
    return this;
  }

  /**
   * Get kickReturns
   * @return kickReturns
   */
  @javax.annotation.Nullable
  public BigDecimal getKickReturns() {
    return kickReturns;
  }

  public void setKickReturns(BigDecimal kickReturns) {
    this.kickReturns = kickReturns;
  }


  public TeamGame name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public TeamGame opponent(String opponent) {
    this.opponent = opponent;
    return this;
  }

  /**
   * Get opponent
   * @return opponent
   */
  @javax.annotation.Nullable
  public String getOpponent() {
    return opponent;
  }

  public void setOpponent(String opponent) {
    this.opponent = opponent;
  }


  public TeamGame opponentID(Integer opponentID) {
    this.opponentID = opponentID;
    return this;
  }

  /**
   * Get opponentID
   * @return opponentID
   */
  @javax.annotation.Nullable
  public Integer getOpponentID() {
    return opponentID;
  }

  public void setOpponentID(Integer opponentID) {
    this.opponentID = opponentID;
  }


  public TeamGame opponentScore(Integer opponentScore) {
    this.opponentScore = opponentScore;
    return this;
  }

  /**
   * Get opponentScore
   * @return opponentScore
   */
  @javax.annotation.Nullable
  public Integer getOpponentScore() {
    return opponentScore;
  }

  public void setOpponentScore(Integer opponentScore) {
    this.opponentScore = opponentScore;
  }


  public TeamGame passesDefended(BigDecimal passesDefended) {
    this.passesDefended = passesDefended;
    return this;
  }

  /**
   * Get passesDefended
   * @return passesDefended
   */
  @javax.annotation.Nullable
  public BigDecimal getPassesDefended() {
    return passesDefended;
  }

  public void setPassesDefended(BigDecimal passesDefended) {
    this.passesDefended = passesDefended;
  }


  public TeamGame passingAttempts(BigDecimal passingAttempts) {
    this.passingAttempts = passingAttempts;
    return this;
  }

  /**
   * Get passingAttempts
   * @return passingAttempts
   */
  @javax.annotation.Nullable
  public BigDecimal getPassingAttempts() {
    return passingAttempts;
  }

  public void setPassingAttempts(BigDecimal passingAttempts) {
    this.passingAttempts = passingAttempts;
  }


  public TeamGame passingCompletionPercentage(BigDecimal passingCompletionPercentage) {
    this.passingCompletionPercentage = passingCompletionPercentage;
    return this;
  }

  /**
   * Get passingCompletionPercentage
   * @return passingCompletionPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getPassingCompletionPercentage() {
    return passingCompletionPercentage;
  }

  public void setPassingCompletionPercentage(BigDecimal passingCompletionPercentage) {
    this.passingCompletionPercentage = passingCompletionPercentage;
  }


  public TeamGame passingCompletions(BigDecimal passingCompletions) {
    this.passingCompletions = passingCompletions;
    return this;
  }

  /**
   * Get passingCompletions
   * @return passingCompletions
   */
  @javax.annotation.Nullable
  public BigDecimal getPassingCompletions() {
    return passingCompletions;
  }

  public void setPassingCompletions(BigDecimal passingCompletions) {
    this.passingCompletions = passingCompletions;
  }


  public TeamGame passingInterceptions(BigDecimal passingInterceptions) {
    this.passingInterceptions = passingInterceptions;
    return this;
  }

  /**
   * Get passingInterceptions
   * @return passingInterceptions
   */
  @javax.annotation.Nullable
  public BigDecimal getPassingInterceptions() {
    return passingInterceptions;
  }

  public void setPassingInterceptions(BigDecimal passingInterceptions) {
    this.passingInterceptions = passingInterceptions;
  }


  public TeamGame passingRating(BigDecimal passingRating) {
    this.passingRating = passingRating;
    return this;
  }

  /**
   * Get passingRating
   * @return passingRating
   */
  @javax.annotation.Nullable
  public BigDecimal getPassingRating() {
    return passingRating;
  }

  public void setPassingRating(BigDecimal passingRating) {
    this.passingRating = passingRating;
  }


  public TeamGame passingTouchdowns(BigDecimal passingTouchdowns) {
    this.passingTouchdowns = passingTouchdowns;
    return this;
  }

  /**
   * Get passingTouchdowns
   * @return passingTouchdowns
   */
  @javax.annotation.Nullable
  public BigDecimal getPassingTouchdowns() {
    return passingTouchdowns;
  }

  public void setPassingTouchdowns(BigDecimal passingTouchdowns) {
    this.passingTouchdowns = passingTouchdowns;
  }


  public TeamGame passingYards(BigDecimal passingYards) {
    this.passingYards = passingYards;
    return this;
  }

  /**
   * Get passingYards
   * @return passingYards
   */
  @javax.annotation.Nullable
  public BigDecimal getPassingYards() {
    return passingYards;
  }

  public void setPassingYards(BigDecimal passingYards) {
    this.passingYards = passingYards;
  }


  public TeamGame passingYardsPerAttempt(BigDecimal passingYardsPerAttempt) {
    this.passingYardsPerAttempt = passingYardsPerAttempt;
    return this;
  }

  /**
   * Get passingYardsPerAttempt
   * @return passingYardsPerAttempt
   */
  @javax.annotation.Nullable
  public BigDecimal getPassingYardsPerAttempt() {
    return passingYardsPerAttempt;
  }

  public void setPassingYardsPerAttempt(BigDecimal passingYardsPerAttempt) {
    this.passingYardsPerAttempt = passingYardsPerAttempt;
  }


  public TeamGame passingYardsPerCompletion(BigDecimal passingYardsPerCompletion) {
    this.passingYardsPerCompletion = passingYardsPerCompletion;
    return this;
  }

  /**
   * Get passingYardsPerCompletion
   * @return passingYardsPerCompletion
   */
  @javax.annotation.Nullable
  public BigDecimal getPassingYardsPerCompletion() {
    return passingYardsPerCompletion;
  }

  public void setPassingYardsPerCompletion(BigDecimal passingYardsPerCompletion) {
    this.passingYardsPerCompletion = passingYardsPerCompletion;
  }


  public TeamGame penalties(Integer penalties) {
    this.penalties = penalties;
    return this;
  }

  /**
   * Get penalties
   * @return penalties
   */
  @javax.annotation.Nullable
  public Integer getPenalties() {
    return penalties;
  }

  public void setPenalties(Integer penalties) {
    this.penalties = penalties;
  }


  public TeamGame penaltyYards(Integer penaltyYards) {
    this.penaltyYards = penaltyYards;
    return this;
  }

  /**
   * Get penaltyYards
   * @return penaltyYards
   */
  @javax.annotation.Nullable
  public Integer getPenaltyYards() {
    return penaltyYards;
  }

  public void setPenaltyYards(Integer penaltyYards) {
    this.penaltyYards = penaltyYards;
  }


  public TeamGame puntAverage(BigDecimal puntAverage) {
    this.puntAverage = puntAverage;
    return this;
  }

  /**
   * Get puntAverage
   * @return puntAverage
   */
  @javax.annotation.Nullable
  public BigDecimal getPuntAverage() {
    return puntAverage;
  }

  public void setPuntAverage(BigDecimal puntAverage) {
    this.puntAverage = puntAverage;
  }


  public TeamGame puntLong(BigDecimal puntLong) {
    this.puntLong = puntLong;
    return this;
  }

  /**
   * Get puntLong
   * @return puntLong
   */
  @javax.annotation.Nullable
  public BigDecimal getPuntLong() {
    return puntLong;
  }

  public void setPuntLong(BigDecimal puntLong) {
    this.puntLong = puntLong;
  }


  public TeamGame puntReturnLong(BigDecimal puntReturnLong) {
    this.puntReturnLong = puntReturnLong;
    return this;
  }

  /**
   * Get puntReturnLong
   * @return puntReturnLong
   */
  @javax.annotation.Nullable
  public BigDecimal getPuntReturnLong() {
    return puntReturnLong;
  }

  public void setPuntReturnLong(BigDecimal puntReturnLong) {
    this.puntReturnLong = puntReturnLong;
  }


  public TeamGame puntReturnTouchdowns(BigDecimal puntReturnTouchdowns) {
    this.puntReturnTouchdowns = puntReturnTouchdowns;
    return this;
  }

  /**
   * Get puntReturnTouchdowns
   * @return puntReturnTouchdowns
   */
  @javax.annotation.Nullable
  public BigDecimal getPuntReturnTouchdowns() {
    return puntReturnTouchdowns;
  }

  public void setPuntReturnTouchdowns(BigDecimal puntReturnTouchdowns) {
    this.puntReturnTouchdowns = puntReturnTouchdowns;
  }


  public TeamGame puntReturnYards(BigDecimal puntReturnYards) {
    this.puntReturnYards = puntReturnYards;
    return this;
  }

  /**
   * Get puntReturnYards
   * @return puntReturnYards
   */
  @javax.annotation.Nullable
  public BigDecimal getPuntReturnYards() {
    return puntReturnYards;
  }

  public void setPuntReturnYards(BigDecimal puntReturnYards) {
    this.puntReturnYards = puntReturnYards;
  }


  public TeamGame puntReturnYardsPerAttempt(BigDecimal puntReturnYardsPerAttempt) {
    this.puntReturnYardsPerAttempt = puntReturnYardsPerAttempt;
    return this;
  }

  /**
   * Get puntReturnYardsPerAttempt
   * @return puntReturnYardsPerAttempt
   */
  @javax.annotation.Nullable
  public BigDecimal getPuntReturnYardsPerAttempt() {
    return puntReturnYardsPerAttempt;
  }

  public void setPuntReturnYardsPerAttempt(BigDecimal puntReturnYardsPerAttempt) {
    this.puntReturnYardsPerAttempt = puntReturnYardsPerAttempt;
  }


  public TeamGame puntReturns(BigDecimal puntReturns) {
    this.puntReturns = puntReturns;
    return this;
  }

  /**
   * Get puntReturns
   * @return puntReturns
   */
  @javax.annotation.Nullable
  public BigDecimal getPuntReturns() {
    return puntReturns;
  }

  public void setPuntReturns(BigDecimal puntReturns) {
    this.puntReturns = puntReturns;
  }


  public TeamGame puntYards(BigDecimal puntYards) {
    this.puntYards = puntYards;
    return this;
  }

  /**
   * Get puntYards
   * @return puntYards
   */
  @javax.annotation.Nullable
  public BigDecimal getPuntYards() {
    return puntYards;
  }

  public void setPuntYards(BigDecimal puntYards) {
    this.puntYards = puntYards;
  }


  public TeamGame punts(BigDecimal punts) {
    this.punts = punts;
    return this;
  }

  /**
   * Get punts
   * @return punts
   */
  @javax.annotation.Nullable
  public BigDecimal getPunts() {
    return punts;
  }

  public void setPunts(BigDecimal punts) {
    this.punts = punts;
  }


  public TeamGame quarterbackHurries(BigDecimal quarterbackHurries) {
    this.quarterbackHurries = quarterbackHurries;
    return this;
  }

  /**
   * Get quarterbackHurries
   * @return quarterbackHurries
   */
  @javax.annotation.Nullable
  public BigDecimal getQuarterbackHurries() {
    return quarterbackHurries;
  }

  public void setQuarterbackHurries(BigDecimal quarterbackHurries) {
    this.quarterbackHurries = quarterbackHurries;
  }


  public TeamGame receivingLong(BigDecimal receivingLong) {
    this.receivingLong = receivingLong;
    return this;
  }

  /**
   * Get receivingLong
   * @return receivingLong
   */
  @javax.annotation.Nullable
  public BigDecimal getReceivingLong() {
    return receivingLong;
  }

  public void setReceivingLong(BigDecimal receivingLong) {
    this.receivingLong = receivingLong;
  }


  public TeamGame receivingTouchdowns(BigDecimal receivingTouchdowns) {
    this.receivingTouchdowns = receivingTouchdowns;
    return this;
  }

  /**
   * Get receivingTouchdowns
   * @return receivingTouchdowns
   */
  @javax.annotation.Nullable
  public BigDecimal getReceivingTouchdowns() {
    return receivingTouchdowns;
  }

  public void setReceivingTouchdowns(BigDecimal receivingTouchdowns) {
    this.receivingTouchdowns = receivingTouchdowns;
  }


  public TeamGame receivingYards(BigDecimal receivingYards) {
    this.receivingYards = receivingYards;
    return this;
  }

  /**
   * Get receivingYards
   * @return receivingYards
   */
  @javax.annotation.Nullable
  public BigDecimal getReceivingYards() {
    return receivingYards;
  }

  public void setReceivingYards(BigDecimal receivingYards) {
    this.receivingYards = receivingYards;
  }


  public TeamGame receivingYardsPerReception(BigDecimal receivingYardsPerReception) {
    this.receivingYardsPerReception = receivingYardsPerReception;
    return this;
  }

  /**
   * Get receivingYardsPerReception
   * @return receivingYardsPerReception
   */
  @javax.annotation.Nullable
  public BigDecimal getReceivingYardsPerReception() {
    return receivingYardsPerReception;
  }

  public void setReceivingYardsPerReception(BigDecimal receivingYardsPerReception) {
    this.receivingYardsPerReception = receivingYardsPerReception;
  }


  public TeamGame receptions(BigDecimal receptions) {
    this.receptions = receptions;
    return this;
  }

  /**
   * Get receptions
   * @return receptions
   */
  @javax.annotation.Nullable
  public BigDecimal getReceptions() {
    return receptions;
  }

  public void setReceptions(BigDecimal receptions) {
    this.receptions = receptions;
  }


  public TeamGame rushingAttempts(BigDecimal rushingAttempts) {
    this.rushingAttempts = rushingAttempts;
    return this;
  }

  /**
   * Get rushingAttempts
   * @return rushingAttempts
   */
  @javax.annotation.Nullable
  public BigDecimal getRushingAttempts() {
    return rushingAttempts;
  }

  public void setRushingAttempts(BigDecimal rushingAttempts) {
    this.rushingAttempts = rushingAttempts;
  }


  public TeamGame rushingLong(BigDecimal rushingLong) {
    this.rushingLong = rushingLong;
    return this;
  }

  /**
   * Get rushingLong
   * @return rushingLong
   */
  @javax.annotation.Nullable
  public BigDecimal getRushingLong() {
    return rushingLong;
  }

  public void setRushingLong(BigDecimal rushingLong) {
    this.rushingLong = rushingLong;
  }


  public TeamGame rushingTouchdowns(BigDecimal rushingTouchdowns) {
    this.rushingTouchdowns = rushingTouchdowns;
    return this;
  }

  /**
   * Get rushingTouchdowns
   * @return rushingTouchdowns
   */
  @javax.annotation.Nullable
  public BigDecimal getRushingTouchdowns() {
    return rushingTouchdowns;
  }

  public void setRushingTouchdowns(BigDecimal rushingTouchdowns) {
    this.rushingTouchdowns = rushingTouchdowns;
  }


  public TeamGame rushingYards(BigDecimal rushingYards) {
    this.rushingYards = rushingYards;
    return this;
  }

  /**
   * Get rushingYards
   * @return rushingYards
   */
  @javax.annotation.Nullable
  public BigDecimal getRushingYards() {
    return rushingYards;
  }

  public void setRushingYards(BigDecimal rushingYards) {
    this.rushingYards = rushingYards;
  }


  public TeamGame rushingYardsPerAttempt(BigDecimal rushingYardsPerAttempt) {
    this.rushingYardsPerAttempt = rushingYardsPerAttempt;
    return this;
  }

  /**
   * Get rushingYardsPerAttempt
   * @return rushingYardsPerAttempt
   */
  @javax.annotation.Nullable
  public BigDecimal getRushingYardsPerAttempt() {
    return rushingYardsPerAttempt;
  }

  public void setRushingYardsPerAttempt(BigDecimal rushingYardsPerAttempt) {
    this.rushingYardsPerAttempt = rushingYardsPerAttempt;
  }


  public TeamGame sacks(BigDecimal sacks) {
    this.sacks = sacks;
    return this;
  }

  /**
   * Get sacks
   * @return sacks
   */
  @javax.annotation.Nullable
  public BigDecimal getSacks() {
    return sacks;
  }

  public void setSacks(BigDecimal sacks) {
    this.sacks = sacks;
  }


  public TeamGame score(Integer score) {
    this.score = score;
    return this;
  }

  /**
   * Get score
   * @return score
   */
  @javax.annotation.Nullable
  public Integer getScore() {
    return score;
  }

  public void setScore(Integer score) {
    this.score = score;
  }


  public TeamGame season(Integer season) {
    this.season = season;
    return this;
  }

  /**
   * Get season
   * @return season
   */
  @javax.annotation.Nullable
  public Integer getSeason() {
    return season;
  }

  public void setSeason(Integer season) {
    this.season = season;
  }


  public TeamGame seasonType(Integer seasonType) {
    this.seasonType = seasonType;
    return this;
  }

  /**
   * Get seasonType
   * @return seasonType
   */
  @javax.annotation.Nullable
  public Integer getSeasonType() {
    return seasonType;
  }

  public void setSeasonType(Integer seasonType) {
    this.seasonType = seasonType;
  }


  public TeamGame soloTackles(BigDecimal soloTackles) {
    this.soloTackles = soloTackles;
    return this;
  }

  /**
   * Get soloTackles
   * @return soloTackles
   */
  @javax.annotation.Nullable
  public BigDecimal getSoloTackles() {
    return soloTackles;
  }

  public void setSoloTackles(BigDecimal soloTackles) {
    this.soloTackles = soloTackles;
  }


  public TeamGame statID(Integer statID) {
    this.statID = statID;
    return this;
  }

  /**
   * Get statID
   * @return statID
   */
  @javax.annotation.Nullable
  public Integer getStatID() {
    return statID;
  }

  public void setStatID(Integer statID) {
    this.statID = statID;
  }


  public TeamGame tacklesForLoss(BigDecimal tacklesForLoss) {
    this.tacklesForLoss = tacklesForLoss;
    return this;
  }

  /**
   * Get tacklesForLoss
   * @return tacklesForLoss
   */
  @javax.annotation.Nullable
  public BigDecimal getTacklesForLoss() {
    return tacklesForLoss;
  }

  public void setTacklesForLoss(BigDecimal tacklesForLoss) {
    this.tacklesForLoss = tacklesForLoss;
  }


  public TeamGame team(String team) {
    this.team = team;
    return this;
  }

  /**
   * Get team
   * @return team
   */
  @javax.annotation.Nullable
  public String getTeam() {
    return team;
  }

  public void setTeam(String team) {
    this.team = team;
  }


  public TeamGame teamID(Integer teamID) {
    this.teamID = teamID;
    return this;
  }

  /**
   * Get teamID
   * @return teamID
   */
  @javax.annotation.Nullable
  public Integer getTeamID() {
    return teamID;
  }

  public void setTeamID(Integer teamID) {
    this.teamID = teamID;
  }


  public TeamGame thirdDownAttempts(Integer thirdDownAttempts) {
    this.thirdDownAttempts = thirdDownAttempts;
    return this;
  }

  /**
   * Get thirdDownAttempts
   * @return thirdDownAttempts
   */
  @javax.annotation.Nullable
  public Integer getThirdDownAttempts() {
    return thirdDownAttempts;
  }

  public void setThirdDownAttempts(Integer thirdDownAttempts) {
    this.thirdDownAttempts = thirdDownAttempts;
  }


  public TeamGame thirdDownConversions(Integer thirdDownConversions) {
    this.thirdDownConversions = thirdDownConversions;
    return this;
  }

  /**
   * Get thirdDownConversions
   * @return thirdDownConversions
   */
  @javax.annotation.Nullable
  public Integer getThirdDownConversions() {
    return thirdDownConversions;
  }

  public void setThirdDownConversions(Integer thirdDownConversions) {
    this.thirdDownConversions = thirdDownConversions;
  }


  public TeamGame timeOfPossessionMinutes(Integer timeOfPossessionMinutes) {
    this.timeOfPossessionMinutes = timeOfPossessionMinutes;
    return this;
  }

  /**
   * Get timeOfPossessionMinutes
   * @return timeOfPossessionMinutes
   */
  @javax.annotation.Nullable
  public Integer getTimeOfPossessionMinutes() {
    return timeOfPossessionMinutes;
  }

  public void setTimeOfPossessionMinutes(Integer timeOfPossessionMinutes) {
    this.timeOfPossessionMinutes = timeOfPossessionMinutes;
  }


  public TeamGame timeOfPossessionSeconds(Integer timeOfPossessionSeconds) {
    this.timeOfPossessionSeconds = timeOfPossessionSeconds;
    return this;
  }

  /**
   * Get timeOfPossessionSeconds
   * @return timeOfPossessionSeconds
   */
  @javax.annotation.Nullable
  public Integer getTimeOfPossessionSeconds() {
    return timeOfPossessionSeconds;
  }

  public void setTimeOfPossessionSeconds(Integer timeOfPossessionSeconds) {
    this.timeOfPossessionSeconds = timeOfPossessionSeconds;
  }


  public TeamGame updated(String updated) {
    this.updated = updated;
    return this;
  }

  /**
   * Get updated
   * @return updated
   */
  @javax.annotation.Nullable
  public String getUpdated() {
    return updated;
  }

  public void setUpdated(String updated) {
    this.updated = updated;
  }


  public TeamGame week(Integer week) {
    this.week = week;
    return this;
  }

  /**
   * Get week
   * @return week
   */
  @javax.annotation.Nullable
  public Integer getWeek() {
    return week;
  }

  public void setWeek(Integer week) {
    this.week = week;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TeamGame teamGame = (TeamGame) o;
    return Objects.equals(this.assistedTackles, teamGame.assistedTackles) &&
        Objects.equals(this.created, teamGame.created) &&
        Objects.equals(this.dateTime, teamGame.dateTime) &&
        Objects.equals(this.day, teamGame.day) &&
        Objects.equals(this.extraPointsAttempted, teamGame.extraPointsAttempted) &&
        Objects.equals(this.extraPointsMade, teamGame.extraPointsMade) &&
        Objects.equals(this.fantasyPoints, teamGame.fantasyPoints) &&
        Objects.equals(this.fieldGoalPercentage, teamGame.fieldGoalPercentage) &&
        Objects.equals(this.fieldGoalsAttempted, teamGame.fieldGoalsAttempted) &&
        Objects.equals(this.fieldGoalsLongestMade, teamGame.fieldGoalsLongestMade) &&
        Objects.equals(this.fieldGoalsMade, teamGame.fieldGoalsMade) &&
        Objects.equals(this.firstDowns, teamGame.firstDowns) &&
        Objects.equals(this.fourthDownAttempts, teamGame.fourthDownAttempts) &&
        Objects.equals(this.fourthDownConversions, teamGame.fourthDownConversions) &&
        Objects.equals(this.fumbleReturnTouchdowns, teamGame.fumbleReturnTouchdowns) &&
        Objects.equals(this.fumbles, teamGame.fumbles) &&
        Objects.equals(this.fumblesLost, teamGame.fumblesLost) &&
        Objects.equals(this.fumblesRecovered, teamGame.fumblesRecovered) &&
        Objects.equals(this.gameID, teamGame.gameID) &&
        Objects.equals(this.games, teamGame.games) &&
        Objects.equals(this.globalGameID, teamGame.globalGameID) &&
        Objects.equals(this.globalOpponentID, teamGame.globalOpponentID) &&
        Objects.equals(this.globalTeamID, teamGame.globalTeamID) &&
        Objects.equals(this.homeOrAway, teamGame.homeOrAway) &&
        Objects.equals(this.interceptionReturnTouchdowns, teamGame.interceptionReturnTouchdowns) &&
        Objects.equals(this.interceptionReturnYards, teamGame.interceptionReturnYards) &&
        Objects.equals(this.interceptions, teamGame.interceptions) &&
        Objects.equals(this.isGameOver, teamGame.isGameOver) &&
        Objects.equals(this.kickReturnLong, teamGame.kickReturnLong) &&
        Objects.equals(this.kickReturnTouchdowns, teamGame.kickReturnTouchdowns) &&
        Objects.equals(this.kickReturnYards, teamGame.kickReturnYards) &&
        Objects.equals(this.kickReturnYardsPerAttempt, teamGame.kickReturnYardsPerAttempt) &&
        Objects.equals(this.kickReturns, teamGame.kickReturns) &&
        Objects.equals(this.name, teamGame.name) &&
        Objects.equals(this.opponent, teamGame.opponent) &&
        Objects.equals(this.opponentID, teamGame.opponentID) &&
        Objects.equals(this.opponentScore, teamGame.opponentScore) &&
        Objects.equals(this.passesDefended, teamGame.passesDefended) &&
        Objects.equals(this.passingAttempts, teamGame.passingAttempts) &&
        Objects.equals(this.passingCompletionPercentage, teamGame.passingCompletionPercentage) &&
        Objects.equals(this.passingCompletions, teamGame.passingCompletions) &&
        Objects.equals(this.passingInterceptions, teamGame.passingInterceptions) &&
        Objects.equals(this.passingRating, teamGame.passingRating) &&
        Objects.equals(this.passingTouchdowns, teamGame.passingTouchdowns) &&
        Objects.equals(this.passingYards, teamGame.passingYards) &&
        Objects.equals(this.passingYardsPerAttempt, teamGame.passingYardsPerAttempt) &&
        Objects.equals(this.passingYardsPerCompletion, teamGame.passingYardsPerCompletion) &&
        Objects.equals(this.penalties, teamGame.penalties) &&
        Objects.equals(this.penaltyYards, teamGame.penaltyYards) &&
        Objects.equals(this.puntAverage, teamGame.puntAverage) &&
        Objects.equals(this.puntLong, teamGame.puntLong) &&
        Objects.equals(this.puntReturnLong, teamGame.puntReturnLong) &&
        Objects.equals(this.puntReturnTouchdowns, teamGame.puntReturnTouchdowns) &&
        Objects.equals(this.puntReturnYards, teamGame.puntReturnYards) &&
        Objects.equals(this.puntReturnYardsPerAttempt, teamGame.puntReturnYardsPerAttempt) &&
        Objects.equals(this.puntReturns, teamGame.puntReturns) &&
        Objects.equals(this.puntYards, teamGame.puntYards) &&
        Objects.equals(this.punts, teamGame.punts) &&
        Objects.equals(this.quarterbackHurries, teamGame.quarterbackHurries) &&
        Objects.equals(this.receivingLong, teamGame.receivingLong) &&
        Objects.equals(this.receivingTouchdowns, teamGame.receivingTouchdowns) &&
        Objects.equals(this.receivingYards, teamGame.receivingYards) &&
        Objects.equals(this.receivingYardsPerReception, teamGame.receivingYardsPerReception) &&
        Objects.equals(this.receptions, teamGame.receptions) &&
        Objects.equals(this.rushingAttempts, teamGame.rushingAttempts) &&
        Objects.equals(this.rushingLong, teamGame.rushingLong) &&
        Objects.equals(this.rushingTouchdowns, teamGame.rushingTouchdowns) &&
        Objects.equals(this.rushingYards, teamGame.rushingYards) &&
        Objects.equals(this.rushingYardsPerAttempt, teamGame.rushingYardsPerAttempt) &&
        Objects.equals(this.sacks, teamGame.sacks) &&
        Objects.equals(this.score, teamGame.score) &&
        Objects.equals(this.season, teamGame.season) &&
        Objects.equals(this.seasonType, teamGame.seasonType) &&
        Objects.equals(this.soloTackles, teamGame.soloTackles) &&
        Objects.equals(this.statID, teamGame.statID) &&
        Objects.equals(this.tacklesForLoss, teamGame.tacklesForLoss) &&
        Objects.equals(this.team, teamGame.team) &&
        Objects.equals(this.teamID, teamGame.teamID) &&
        Objects.equals(this.thirdDownAttempts, teamGame.thirdDownAttempts) &&
        Objects.equals(this.thirdDownConversions, teamGame.thirdDownConversions) &&
        Objects.equals(this.timeOfPossessionMinutes, teamGame.timeOfPossessionMinutes) &&
        Objects.equals(this.timeOfPossessionSeconds, teamGame.timeOfPossessionSeconds) &&
        Objects.equals(this.updated, teamGame.updated) &&
        Objects.equals(this.week, teamGame.week);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(assistedTackles, created, dateTime, day, extraPointsAttempted, extraPointsMade, fantasyPoints, fieldGoalPercentage, fieldGoalsAttempted, fieldGoalsLongestMade, fieldGoalsMade, firstDowns, fourthDownAttempts, fourthDownConversions, fumbleReturnTouchdowns, fumbles, fumblesLost, fumblesRecovered, gameID, games, globalGameID, globalOpponentID, globalTeamID, homeOrAway, interceptionReturnTouchdowns, interceptionReturnYards, interceptions, isGameOver, kickReturnLong, kickReturnTouchdowns, kickReturnYards, kickReturnYardsPerAttempt, kickReturns, name, opponent, opponentID, opponentScore, passesDefended, passingAttempts, passingCompletionPercentage, passingCompletions, passingInterceptions, passingRating, passingTouchdowns, passingYards, passingYardsPerAttempt, passingYardsPerCompletion, penalties, penaltyYards, puntAverage, puntLong, puntReturnLong, puntReturnTouchdowns, puntReturnYards, puntReturnYardsPerAttempt, puntReturns, puntYards, punts, quarterbackHurries, receivingLong, receivingTouchdowns, receivingYards, receivingYardsPerReception, receptions, rushingAttempts, rushingLong, rushingTouchdowns, rushingYards, rushingYardsPerAttempt, sacks, score, season, seasonType, soloTackles, statID, tacklesForLoss, team, teamID, thirdDownAttempts, thirdDownConversions, timeOfPossessionMinutes, timeOfPossessionSeconds, updated, week);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TeamGame {\n");
    sb.append("    assistedTackles: ").append(toIndentedString(assistedTackles)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    dateTime: ").append(toIndentedString(dateTime)).append("\n");
    sb.append("    day: ").append(toIndentedString(day)).append("\n");
    sb.append("    extraPointsAttempted: ").append(toIndentedString(extraPointsAttempted)).append("\n");
    sb.append("    extraPointsMade: ").append(toIndentedString(extraPointsMade)).append("\n");
    sb.append("    fantasyPoints: ").append(toIndentedString(fantasyPoints)).append("\n");
    sb.append("    fieldGoalPercentage: ").append(toIndentedString(fieldGoalPercentage)).append("\n");
    sb.append("    fieldGoalsAttempted: ").append(toIndentedString(fieldGoalsAttempted)).append("\n");
    sb.append("    fieldGoalsLongestMade: ").append(toIndentedString(fieldGoalsLongestMade)).append("\n");
    sb.append("    fieldGoalsMade: ").append(toIndentedString(fieldGoalsMade)).append("\n");
    sb.append("    firstDowns: ").append(toIndentedString(firstDowns)).append("\n");
    sb.append("    fourthDownAttempts: ").append(toIndentedString(fourthDownAttempts)).append("\n");
    sb.append("    fourthDownConversions: ").append(toIndentedString(fourthDownConversions)).append("\n");
    sb.append("    fumbleReturnTouchdowns: ").append(toIndentedString(fumbleReturnTouchdowns)).append("\n");
    sb.append("    fumbles: ").append(toIndentedString(fumbles)).append("\n");
    sb.append("    fumblesLost: ").append(toIndentedString(fumblesLost)).append("\n");
    sb.append("    fumblesRecovered: ").append(toIndentedString(fumblesRecovered)).append("\n");
    sb.append("    gameID: ").append(toIndentedString(gameID)).append("\n");
    sb.append("    games: ").append(toIndentedString(games)).append("\n");
    sb.append("    globalGameID: ").append(toIndentedString(globalGameID)).append("\n");
    sb.append("    globalOpponentID: ").append(toIndentedString(globalOpponentID)).append("\n");
    sb.append("    globalTeamID: ").append(toIndentedString(globalTeamID)).append("\n");
    sb.append("    homeOrAway: ").append(toIndentedString(homeOrAway)).append("\n");
    sb.append("    interceptionReturnTouchdowns: ").append(toIndentedString(interceptionReturnTouchdowns)).append("\n");
    sb.append("    interceptionReturnYards: ").append(toIndentedString(interceptionReturnYards)).append("\n");
    sb.append("    interceptions: ").append(toIndentedString(interceptions)).append("\n");
    sb.append("    isGameOver: ").append(toIndentedString(isGameOver)).append("\n");
    sb.append("    kickReturnLong: ").append(toIndentedString(kickReturnLong)).append("\n");
    sb.append("    kickReturnTouchdowns: ").append(toIndentedString(kickReturnTouchdowns)).append("\n");
    sb.append("    kickReturnYards: ").append(toIndentedString(kickReturnYards)).append("\n");
    sb.append("    kickReturnYardsPerAttempt: ").append(toIndentedString(kickReturnYardsPerAttempt)).append("\n");
    sb.append("    kickReturns: ").append(toIndentedString(kickReturns)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    opponent: ").append(toIndentedString(opponent)).append("\n");
    sb.append("    opponentID: ").append(toIndentedString(opponentID)).append("\n");
    sb.append("    opponentScore: ").append(toIndentedString(opponentScore)).append("\n");
    sb.append("    passesDefended: ").append(toIndentedString(passesDefended)).append("\n");
    sb.append("    passingAttempts: ").append(toIndentedString(passingAttempts)).append("\n");
    sb.append("    passingCompletionPercentage: ").append(toIndentedString(passingCompletionPercentage)).append("\n");
    sb.append("    passingCompletions: ").append(toIndentedString(passingCompletions)).append("\n");
    sb.append("    passingInterceptions: ").append(toIndentedString(passingInterceptions)).append("\n");
    sb.append("    passingRating: ").append(toIndentedString(passingRating)).append("\n");
    sb.append("    passingTouchdowns: ").append(toIndentedString(passingTouchdowns)).append("\n");
    sb.append("    passingYards: ").append(toIndentedString(passingYards)).append("\n");
    sb.append("    passingYardsPerAttempt: ").append(toIndentedString(passingYardsPerAttempt)).append("\n");
    sb.append("    passingYardsPerCompletion: ").append(toIndentedString(passingYardsPerCompletion)).append("\n");
    sb.append("    penalties: ").append(toIndentedString(penalties)).append("\n");
    sb.append("    penaltyYards: ").append(toIndentedString(penaltyYards)).append("\n");
    sb.append("    puntAverage: ").append(toIndentedString(puntAverage)).append("\n");
    sb.append("    puntLong: ").append(toIndentedString(puntLong)).append("\n");
    sb.append("    puntReturnLong: ").append(toIndentedString(puntReturnLong)).append("\n");
    sb.append("    puntReturnTouchdowns: ").append(toIndentedString(puntReturnTouchdowns)).append("\n");
    sb.append("    puntReturnYards: ").append(toIndentedString(puntReturnYards)).append("\n");
    sb.append("    puntReturnYardsPerAttempt: ").append(toIndentedString(puntReturnYardsPerAttempt)).append("\n");
    sb.append("    puntReturns: ").append(toIndentedString(puntReturns)).append("\n");
    sb.append("    puntYards: ").append(toIndentedString(puntYards)).append("\n");
    sb.append("    punts: ").append(toIndentedString(punts)).append("\n");
    sb.append("    quarterbackHurries: ").append(toIndentedString(quarterbackHurries)).append("\n");
    sb.append("    receivingLong: ").append(toIndentedString(receivingLong)).append("\n");
    sb.append("    receivingTouchdowns: ").append(toIndentedString(receivingTouchdowns)).append("\n");
    sb.append("    receivingYards: ").append(toIndentedString(receivingYards)).append("\n");
    sb.append("    receivingYardsPerReception: ").append(toIndentedString(receivingYardsPerReception)).append("\n");
    sb.append("    receptions: ").append(toIndentedString(receptions)).append("\n");
    sb.append("    rushingAttempts: ").append(toIndentedString(rushingAttempts)).append("\n");
    sb.append("    rushingLong: ").append(toIndentedString(rushingLong)).append("\n");
    sb.append("    rushingTouchdowns: ").append(toIndentedString(rushingTouchdowns)).append("\n");
    sb.append("    rushingYards: ").append(toIndentedString(rushingYards)).append("\n");
    sb.append("    rushingYardsPerAttempt: ").append(toIndentedString(rushingYardsPerAttempt)).append("\n");
    sb.append("    sacks: ").append(toIndentedString(sacks)).append("\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("    season: ").append(toIndentedString(season)).append("\n");
    sb.append("    seasonType: ").append(toIndentedString(seasonType)).append("\n");
    sb.append("    soloTackles: ").append(toIndentedString(soloTackles)).append("\n");
    sb.append("    statID: ").append(toIndentedString(statID)).append("\n");
    sb.append("    tacklesForLoss: ").append(toIndentedString(tacklesForLoss)).append("\n");
    sb.append("    team: ").append(toIndentedString(team)).append("\n");
    sb.append("    teamID: ").append(toIndentedString(teamID)).append("\n");
    sb.append("    thirdDownAttempts: ").append(toIndentedString(thirdDownAttempts)).append("\n");
    sb.append("    thirdDownConversions: ").append(toIndentedString(thirdDownConversions)).append("\n");
    sb.append("    timeOfPossessionMinutes: ").append(toIndentedString(timeOfPossessionMinutes)).append("\n");
    sb.append("    timeOfPossessionSeconds: ").append(toIndentedString(timeOfPossessionSeconds)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    week: ").append(toIndentedString(week)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AssistedTackles");
    openapiFields.add("Created");
    openapiFields.add("DateTime");
    openapiFields.add("Day");
    openapiFields.add("ExtraPointsAttempted");
    openapiFields.add("ExtraPointsMade");
    openapiFields.add("FantasyPoints");
    openapiFields.add("FieldGoalPercentage");
    openapiFields.add("FieldGoalsAttempted");
    openapiFields.add("FieldGoalsLongestMade");
    openapiFields.add("FieldGoalsMade");
    openapiFields.add("FirstDowns");
    openapiFields.add("FourthDownAttempts");
    openapiFields.add("FourthDownConversions");
    openapiFields.add("FumbleReturnTouchdowns");
    openapiFields.add("Fumbles");
    openapiFields.add("FumblesLost");
    openapiFields.add("FumblesRecovered");
    openapiFields.add("GameID");
    openapiFields.add("Games");
    openapiFields.add("GlobalGameID");
    openapiFields.add("GlobalOpponentID");
    openapiFields.add("GlobalTeamID");
    openapiFields.add("HomeOrAway");
    openapiFields.add("InterceptionReturnTouchdowns");
    openapiFields.add("InterceptionReturnYards");
    openapiFields.add("Interceptions");
    openapiFields.add("IsGameOver");
    openapiFields.add("KickReturnLong");
    openapiFields.add("KickReturnTouchdowns");
    openapiFields.add("KickReturnYards");
    openapiFields.add("KickReturnYardsPerAttempt");
    openapiFields.add("KickReturns");
    openapiFields.add("Name");
    openapiFields.add("Opponent");
    openapiFields.add("OpponentID");
    openapiFields.add("OpponentScore");
    openapiFields.add("PassesDefended");
    openapiFields.add("PassingAttempts");
    openapiFields.add("PassingCompletionPercentage");
    openapiFields.add("PassingCompletions");
    openapiFields.add("PassingInterceptions");
    openapiFields.add("PassingRating");
    openapiFields.add("PassingTouchdowns");
    openapiFields.add("PassingYards");
    openapiFields.add("PassingYardsPerAttempt");
    openapiFields.add("PassingYardsPerCompletion");
    openapiFields.add("Penalties");
    openapiFields.add("PenaltyYards");
    openapiFields.add("PuntAverage");
    openapiFields.add("PuntLong");
    openapiFields.add("PuntReturnLong");
    openapiFields.add("PuntReturnTouchdowns");
    openapiFields.add("PuntReturnYards");
    openapiFields.add("PuntReturnYardsPerAttempt");
    openapiFields.add("PuntReturns");
    openapiFields.add("PuntYards");
    openapiFields.add("Punts");
    openapiFields.add("QuarterbackHurries");
    openapiFields.add("ReceivingLong");
    openapiFields.add("ReceivingTouchdowns");
    openapiFields.add("ReceivingYards");
    openapiFields.add("ReceivingYardsPerReception");
    openapiFields.add("Receptions");
    openapiFields.add("RushingAttempts");
    openapiFields.add("RushingLong");
    openapiFields.add("RushingTouchdowns");
    openapiFields.add("RushingYards");
    openapiFields.add("RushingYardsPerAttempt");
    openapiFields.add("Sacks");
    openapiFields.add("Score");
    openapiFields.add("Season");
    openapiFields.add("SeasonType");
    openapiFields.add("SoloTackles");
    openapiFields.add("StatID");
    openapiFields.add("TacklesForLoss");
    openapiFields.add("Team");
    openapiFields.add("TeamID");
    openapiFields.add("ThirdDownAttempts");
    openapiFields.add("ThirdDownConversions");
    openapiFields.add("TimeOfPossessionMinutes");
    openapiFields.add("TimeOfPossessionSeconds");
    openapiFields.add("Updated");
    openapiFields.add("Week");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TeamGame
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TeamGame.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TeamGame is not found in the empty JSON string", TeamGame.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TeamGame.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TeamGame` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("Created") != null && !jsonObj.get("Created").isJsonNull()) && !jsonObj.get("Created").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Created` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Created").toString()));
      }
      if ((jsonObj.get("DateTime") != null && !jsonObj.get("DateTime").isJsonNull()) && !jsonObj.get("DateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DateTime").toString()));
      }
      if ((jsonObj.get("Day") != null && !jsonObj.get("Day").isJsonNull()) && !jsonObj.get("Day").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Day` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Day").toString()));
      }
      if ((jsonObj.get("HomeOrAway") != null && !jsonObj.get("HomeOrAway").isJsonNull()) && !jsonObj.get("HomeOrAway").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `HomeOrAway` to be a primitive type in the JSON string but got `%s`", jsonObj.get("HomeOrAway").toString()));
      }
      if ((jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) && !jsonObj.get("Name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Name").toString()));
      }
      if ((jsonObj.get("Opponent") != null && !jsonObj.get("Opponent").isJsonNull()) && !jsonObj.get("Opponent").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Opponent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Opponent").toString()));
      }
      if ((jsonObj.get("Team") != null && !jsonObj.get("Team").isJsonNull()) && !jsonObj.get("Team").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Team` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Team").toString()));
      }
      if ((jsonObj.get("Updated") != null && !jsonObj.get("Updated").isJsonNull()) && !jsonObj.get("Updated").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Updated` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Updated").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TeamGame.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TeamGame' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TeamGame> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TeamGame.class));

       return (TypeAdapter<T>) new TypeAdapter<TeamGame>() {
           @Override
           public void write(JsonWriter out, TeamGame value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TeamGame read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TeamGame given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TeamGame
   * @throws IOException if the JSON string is invalid with respect to TeamGame
   */
  public static TeamGame fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TeamGame.class);
  }

  /**
   * Convert an instance of TeamGame to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

