# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Series(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, away_team_wins: int=None, game_number: int=None, home_team_wins: int=None, max_length: int=None):
        """Series - a model defined in OpenAPI

        :param away_team_wins: The away_team_wins of this Series.
        :param game_number: The game_number of this Series.
        :param home_team_wins: The home_team_wins of this Series.
        :param max_length: The max_length of this Series.
        """
        self.openapi_types = {
            'away_team_wins': int,
            'game_number': int,
            'home_team_wins': int,
            'max_length': int
        }

        self.attribute_map = {
            'away_team_wins': 'AwayTeamWins',
            'game_number': 'GameNumber',
            'home_team_wins': 'HomeTeamWins',
            'max_length': 'MaxLength'
        }

        self._away_team_wins = away_team_wins
        self._game_number = game_number
        self._home_team_wins = home_team_wins
        self._max_length = max_length

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Series':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Series of this Series.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def away_team_wins(self):
        """Gets the away_team_wins of this Series.


        :return: The away_team_wins of this Series.
        :rtype: int
        """
        return self._away_team_wins

    @away_team_wins.setter
    def away_team_wins(self, away_team_wins):
        """Sets the away_team_wins of this Series.


        :param away_team_wins: The away_team_wins of this Series.
        :type away_team_wins: int
        """

        self._away_team_wins = away_team_wins

    @property
    def game_number(self):
        """Gets the game_number of this Series.


        :return: The game_number of this Series.
        :rtype: int
        """
        return self._game_number

    @game_number.setter
    def game_number(self, game_number):
        """Sets the game_number of this Series.


        :param game_number: The game_number of this Series.
        :type game_number: int
        """

        self._game_number = game_number

    @property
    def home_team_wins(self):
        """Gets the home_team_wins of this Series.


        :return: The home_team_wins of this Series.
        :rtype: int
        """
        return self._home_team_wins

    @home_team_wins.setter
    def home_team_wins(self, home_team_wins):
        """Sets the home_team_wins of this Series.


        :param home_team_wins: The home_team_wins of this Series.
        :type home_team_wins: int
        """

        self._home_team_wins = home_team_wins

    @property
    def max_length(self):
        """Gets the max_length of this Series.


        :return: The max_length of this Series.
        :rtype: int
        """
        return self._max_length

    @max_length.setter
    def max_length(self, max_length):
        """Sets the max_length of this Series.


        :param max_length: The max_length of this Series.
        :type max_length: int
        """

        self._max_length = max_length
