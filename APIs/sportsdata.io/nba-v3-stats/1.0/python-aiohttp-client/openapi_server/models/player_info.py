# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PlayerInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, player_id: int=None, position: str=None, team: str=None, team_id: int=None):
        """PlayerInfo - a model defined in OpenAPI

        :param name: The name of this PlayerInfo.
        :param player_id: The player_id of this PlayerInfo.
        :param position: The position of this PlayerInfo.
        :param team: The team of this PlayerInfo.
        :param team_id: The team_id of this PlayerInfo.
        """
        self.openapi_types = {
            'name': str,
            'player_id': int,
            'position': str,
            'team': str,
            'team_id': int
        }

        self.attribute_map = {
            'name': 'Name',
            'player_id': 'PlayerID',
            'position': 'Position',
            'team': 'Team',
            'team_id': 'TeamID'
        }

        self._name = name
        self._player_id = player_id
        self._position = position
        self._team = team
        self._team_id = team_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PlayerInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PlayerInfo of this PlayerInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this PlayerInfo.


        :return: The name of this PlayerInfo.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PlayerInfo.


        :param name: The name of this PlayerInfo.
        :type name: str
        """

        self._name = name

    @property
    def player_id(self):
        """Gets the player_id of this PlayerInfo.


        :return: The player_id of this PlayerInfo.
        :rtype: int
        """
        return self._player_id

    @player_id.setter
    def player_id(self, player_id):
        """Sets the player_id of this PlayerInfo.


        :param player_id: The player_id of this PlayerInfo.
        :type player_id: int
        """

        self._player_id = player_id

    @property
    def position(self):
        """Gets the position of this PlayerInfo.


        :return: The position of this PlayerInfo.
        :rtype: str
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this PlayerInfo.


        :param position: The position of this PlayerInfo.
        :type position: str
        """

        self._position = position

    @property
    def team(self):
        """Gets the team of this PlayerInfo.


        :return: The team of this PlayerInfo.
        :rtype: str
        """
        return self._team

    @team.setter
    def team(self, team):
        """Sets the team of this PlayerInfo.


        :param team: The team of this PlayerInfo.
        :type team: str
        """

        self._team = team

    @property
    def team_id(self):
        """Gets the team_id of this PlayerInfo.


        :return: The team_id of this PlayerInfo.
        :rtype: int
        """
        return self._team_id

    @team_id.setter
    def team_id(self, team_id):
        """Sets the team_id of this PlayerInfo.


        :param team_id: The team_id of this PlayerInfo.
        :type team_id: int
        """

        self._team_id = team_id
