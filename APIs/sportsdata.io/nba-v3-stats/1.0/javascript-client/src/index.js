/**
 * NBA v3 Stats
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import BoxScore from './model/BoxScore';
import DfsSlate from './model/DfsSlate';
import DfsSlateGame from './model/DfsSlateGame';
import DfsSlatePlayer from './model/DfsSlatePlayer';
import Game from './model/Game';
import News from './model/News';
import OpponentSeason from './model/OpponentSeason';
import Player from './model/Player';
import PlayerGame from './model/PlayerGame';
import PlayerInfo from './model/PlayerInfo';
import PlayerSeason from './model/PlayerSeason';
import Quarter from './model/Quarter';
import Season from './model/Season';
import Series from './model/Series';
import Stadium from './model/Stadium';
import Standing from './model/Standing';
import Team from './model/Team';
import TeamGame from './model/TeamGame';
import TeamSeason from './model/TeamSeason';
import DefaultApi from './api/DefaultApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var NbaV3Stats = require('index'); // See note below*.
* var xxxSvc = new NbaV3Stats.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new NbaV3Stats.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new NbaV3Stats.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new NbaV3Stats.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The BoxScore model constructor.
     * @property {module:model/BoxScore}
     */
    BoxScore,

    /**
     * The DfsSlate model constructor.
     * @property {module:model/DfsSlate}
     */
    DfsSlate,

    /**
     * The DfsSlateGame model constructor.
     * @property {module:model/DfsSlateGame}
     */
    DfsSlateGame,

    /**
     * The DfsSlatePlayer model constructor.
     * @property {module:model/DfsSlatePlayer}
     */
    DfsSlatePlayer,

    /**
     * The Game model constructor.
     * @property {module:model/Game}
     */
    Game,

    /**
     * The News model constructor.
     * @property {module:model/News}
     */
    News,

    /**
     * The OpponentSeason model constructor.
     * @property {module:model/OpponentSeason}
     */
    OpponentSeason,

    /**
     * The Player model constructor.
     * @property {module:model/Player}
     */
    Player,

    /**
     * The PlayerGame model constructor.
     * @property {module:model/PlayerGame}
     */
    PlayerGame,

    /**
     * The PlayerInfo model constructor.
     * @property {module:model/PlayerInfo}
     */
    PlayerInfo,

    /**
     * The PlayerSeason model constructor.
     * @property {module:model/PlayerSeason}
     */
    PlayerSeason,

    /**
     * The Quarter model constructor.
     * @property {module:model/Quarter}
     */
    Quarter,

    /**
     * The Season model constructor.
     * @property {module:model/Season}
     */
    Season,

    /**
     * The Series model constructor.
     * @property {module:model/Series}
     */
    Series,

    /**
     * The Stadium model constructor.
     * @property {module:model/Stadium}
     */
    Stadium,

    /**
     * The Standing model constructor.
     * @property {module:model/Standing}
     */
    Standing,

    /**
     * The Team model constructor.
     * @property {module:model/Team}
     */
    Team,

    /**
     * The TeamGame model constructor.
     * @property {module:model/TeamGame}
     */
    TeamGame,

    /**
     * The TeamSeason model constructor.
     * @property {module:model/TeamSeason}
     */
    TeamSeason,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
