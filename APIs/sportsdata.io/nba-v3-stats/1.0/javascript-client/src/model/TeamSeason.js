/**
 * NBA v3 Stats
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OpponentSeason from './OpponentSeason';

/**
 * The TeamSeason model module.
 * @module model/TeamSeason
 * @version 1.0
 */
class TeamSeason {
    /**
     * Constructs a new <code>TeamSeason</code>.
     * @alias module:model/TeamSeason
     */
    constructor() { 
        
        TeamSeason.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TeamSeason</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TeamSeason} obj Optional instance to populate.
     * @return {module:model/TeamSeason} The populated <code>TeamSeason</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TeamSeason();

            if (data.hasOwnProperty('Assists')) {
                obj['Assists'] = ApiClient.convertToType(data['Assists'], 'Number');
            }
            if (data.hasOwnProperty('AssistsPercentage')) {
                obj['AssistsPercentage'] = ApiClient.convertToType(data['AssistsPercentage'], 'Number');
            }
            if (data.hasOwnProperty('BlockedShots')) {
                obj['BlockedShots'] = ApiClient.convertToType(data['BlockedShots'], 'Number');
            }
            if (data.hasOwnProperty('BlocksPercentage')) {
                obj['BlocksPercentage'] = ApiClient.convertToType(data['BlocksPercentage'], 'Number');
            }
            if (data.hasOwnProperty('DefensiveRebounds')) {
                obj['DefensiveRebounds'] = ApiClient.convertToType(data['DefensiveRebounds'], 'Number');
            }
            if (data.hasOwnProperty('DefensiveReboundsPercentage')) {
                obj['DefensiveReboundsPercentage'] = ApiClient.convertToType(data['DefensiveReboundsPercentage'], 'Number');
            }
            if (data.hasOwnProperty('DoubleDoubles')) {
                obj['DoubleDoubles'] = ApiClient.convertToType(data['DoubleDoubles'], 'Number');
            }
            if (data.hasOwnProperty('EffectiveFieldGoalsPercentage')) {
                obj['EffectiveFieldGoalsPercentage'] = ApiClient.convertToType(data['EffectiveFieldGoalsPercentage'], 'Number');
            }
            if (data.hasOwnProperty('FantasyPoints')) {
                obj['FantasyPoints'] = ApiClient.convertToType(data['FantasyPoints'], 'Number');
            }
            if (data.hasOwnProperty('FantasyPointsDraftKings')) {
                obj['FantasyPointsDraftKings'] = ApiClient.convertToType(data['FantasyPointsDraftKings'], 'Number');
            }
            if (data.hasOwnProperty('FantasyPointsFanDuel')) {
                obj['FantasyPointsFanDuel'] = ApiClient.convertToType(data['FantasyPointsFanDuel'], 'Number');
            }
            if (data.hasOwnProperty('FantasyPointsFantasyDraft')) {
                obj['FantasyPointsFantasyDraft'] = ApiClient.convertToType(data['FantasyPointsFantasyDraft'], 'Number');
            }
            if (data.hasOwnProperty('FantasyPointsYahoo')) {
                obj['FantasyPointsYahoo'] = ApiClient.convertToType(data['FantasyPointsYahoo'], 'Number');
            }
            if (data.hasOwnProperty('FieldGoalsAttempted')) {
                obj['FieldGoalsAttempted'] = ApiClient.convertToType(data['FieldGoalsAttempted'], 'Number');
            }
            if (data.hasOwnProperty('FieldGoalsMade')) {
                obj['FieldGoalsMade'] = ApiClient.convertToType(data['FieldGoalsMade'], 'Number');
            }
            if (data.hasOwnProperty('FieldGoalsPercentage')) {
                obj['FieldGoalsPercentage'] = ApiClient.convertToType(data['FieldGoalsPercentage'], 'Number');
            }
            if (data.hasOwnProperty('FreeThrowsAttempted')) {
                obj['FreeThrowsAttempted'] = ApiClient.convertToType(data['FreeThrowsAttempted'], 'Number');
            }
            if (data.hasOwnProperty('FreeThrowsMade')) {
                obj['FreeThrowsMade'] = ApiClient.convertToType(data['FreeThrowsMade'], 'Number');
            }
            if (data.hasOwnProperty('FreeThrowsPercentage')) {
                obj['FreeThrowsPercentage'] = ApiClient.convertToType(data['FreeThrowsPercentage'], 'Number');
            }
            if (data.hasOwnProperty('Games')) {
                obj['Games'] = ApiClient.convertToType(data['Games'], 'Number');
            }
            if (data.hasOwnProperty('GlobalTeamID')) {
                obj['GlobalTeamID'] = ApiClient.convertToType(data['GlobalTeamID'], 'Number');
            }
            if (data.hasOwnProperty('IsClosed')) {
                obj['IsClosed'] = ApiClient.convertToType(data['IsClosed'], 'Boolean');
            }
            if (data.hasOwnProperty('LineupConfirmed')) {
                obj['LineupConfirmed'] = ApiClient.convertToType(data['LineupConfirmed'], 'Boolean');
            }
            if (data.hasOwnProperty('LineupStatus')) {
                obj['LineupStatus'] = ApiClient.convertToType(data['LineupStatus'], 'String');
            }
            if (data.hasOwnProperty('Losses')) {
                obj['Losses'] = ApiClient.convertToType(data['Losses'], 'Number');
            }
            if (data.hasOwnProperty('Minutes')) {
                obj['Minutes'] = ApiClient.convertToType(data['Minutes'], 'Number');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('OffensiveRebounds')) {
                obj['OffensiveRebounds'] = ApiClient.convertToType(data['OffensiveRebounds'], 'Number');
            }
            if (data.hasOwnProperty('OffensiveReboundsPercentage')) {
                obj['OffensiveReboundsPercentage'] = ApiClient.convertToType(data['OffensiveReboundsPercentage'], 'Number');
            }
            if (data.hasOwnProperty('OpponentPosition')) {
                obj['OpponentPosition'] = ApiClient.convertToType(data['OpponentPosition'], 'String');
            }
            if (data.hasOwnProperty('OpponentStat')) {
                obj['OpponentStat'] = OpponentSeason.constructFromObject(data['OpponentStat']);
            }
            if (data.hasOwnProperty('PersonalFouls')) {
                obj['PersonalFouls'] = ApiClient.convertToType(data['PersonalFouls'], 'Number');
            }
            if (data.hasOwnProperty('PlayerEfficiencyRating')) {
                obj['PlayerEfficiencyRating'] = ApiClient.convertToType(data['PlayerEfficiencyRating'], 'Number');
            }
            if (data.hasOwnProperty('PlusMinus')) {
                obj['PlusMinus'] = ApiClient.convertToType(data['PlusMinus'], 'Number');
            }
            if (data.hasOwnProperty('Points')) {
                obj['Points'] = ApiClient.convertToType(data['Points'], 'Number');
            }
            if (data.hasOwnProperty('Possessions')) {
                obj['Possessions'] = ApiClient.convertToType(data['Possessions'], 'Number');
            }
            if (data.hasOwnProperty('Rebounds')) {
                obj['Rebounds'] = ApiClient.convertToType(data['Rebounds'], 'Number');
            }
            if (data.hasOwnProperty('Season')) {
                obj['Season'] = ApiClient.convertToType(data['Season'], 'Number');
            }
            if (data.hasOwnProperty('SeasonType')) {
                obj['SeasonType'] = ApiClient.convertToType(data['SeasonType'], 'Number');
            }
            if (data.hasOwnProperty('Seconds')) {
                obj['Seconds'] = ApiClient.convertToType(data['Seconds'], 'Number');
            }
            if (data.hasOwnProperty('StatID')) {
                obj['StatID'] = ApiClient.convertToType(data['StatID'], 'Number');
            }
            if (data.hasOwnProperty('Steals')) {
                obj['Steals'] = ApiClient.convertToType(data['Steals'], 'Number');
            }
            if (data.hasOwnProperty('StealsPercentage')) {
                obj['StealsPercentage'] = ApiClient.convertToType(data['StealsPercentage'], 'Number');
            }
            if (data.hasOwnProperty('Team')) {
                obj['Team'] = ApiClient.convertToType(data['Team'], 'String');
            }
            if (data.hasOwnProperty('TeamID')) {
                obj['TeamID'] = ApiClient.convertToType(data['TeamID'], 'Number');
            }
            if (data.hasOwnProperty('ThreePointersAttempted')) {
                obj['ThreePointersAttempted'] = ApiClient.convertToType(data['ThreePointersAttempted'], 'Number');
            }
            if (data.hasOwnProperty('ThreePointersMade')) {
                obj['ThreePointersMade'] = ApiClient.convertToType(data['ThreePointersMade'], 'Number');
            }
            if (data.hasOwnProperty('ThreePointersPercentage')) {
                obj['ThreePointersPercentage'] = ApiClient.convertToType(data['ThreePointersPercentage'], 'Number');
            }
            if (data.hasOwnProperty('TotalReboundsPercentage')) {
                obj['TotalReboundsPercentage'] = ApiClient.convertToType(data['TotalReboundsPercentage'], 'Number');
            }
            if (data.hasOwnProperty('TripleDoubles')) {
                obj['TripleDoubles'] = ApiClient.convertToType(data['TripleDoubles'], 'Number');
            }
            if (data.hasOwnProperty('TrueShootingAttempts')) {
                obj['TrueShootingAttempts'] = ApiClient.convertToType(data['TrueShootingAttempts'], 'Number');
            }
            if (data.hasOwnProperty('TrueShootingPercentage')) {
                obj['TrueShootingPercentage'] = ApiClient.convertToType(data['TrueShootingPercentage'], 'Number');
            }
            if (data.hasOwnProperty('TurnOversPercentage')) {
                obj['TurnOversPercentage'] = ApiClient.convertToType(data['TurnOversPercentage'], 'Number');
            }
            if (data.hasOwnProperty('Turnovers')) {
                obj['Turnovers'] = ApiClient.convertToType(data['Turnovers'], 'Number');
            }
            if (data.hasOwnProperty('TwoPointersAttempted')) {
                obj['TwoPointersAttempted'] = ApiClient.convertToType(data['TwoPointersAttempted'], 'Number');
            }
            if (data.hasOwnProperty('TwoPointersMade')) {
                obj['TwoPointersMade'] = ApiClient.convertToType(data['TwoPointersMade'], 'Number');
            }
            if (data.hasOwnProperty('TwoPointersPercentage')) {
                obj['TwoPointersPercentage'] = ApiClient.convertToType(data['TwoPointersPercentage'], 'Number');
            }
            if (data.hasOwnProperty('Updated')) {
                obj['Updated'] = ApiClient.convertToType(data['Updated'], 'String');
            }
            if (data.hasOwnProperty('UsageRatePercentage')) {
                obj['UsageRatePercentage'] = ApiClient.convertToType(data['UsageRatePercentage'], 'Number');
            }
            if (data.hasOwnProperty('Wins')) {
                obj['Wins'] = ApiClient.convertToType(data['Wins'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TeamSeason</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TeamSeason</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['LineupStatus'] && !(typeof data['LineupStatus'] === 'string' || data['LineupStatus'] instanceof String)) {
            throw new Error("Expected the field `LineupStatus` to be a primitive type in the JSON string but got " + data['LineupStatus']);
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // ensure the json data is a string
        if (data['OpponentPosition'] && !(typeof data['OpponentPosition'] === 'string' || data['OpponentPosition'] instanceof String)) {
            throw new Error("Expected the field `OpponentPosition` to be a primitive type in the JSON string but got " + data['OpponentPosition']);
        }
        // validate the optional field `OpponentStat`
        if (data['OpponentStat']) { // data not null
          OpponentSeason.validateJSON(data['OpponentStat']);
        }
        // ensure the json data is a string
        if (data['Team'] && !(typeof data['Team'] === 'string' || data['Team'] instanceof String)) {
            throw new Error("Expected the field `Team` to be a primitive type in the JSON string but got " + data['Team']);
        }
        // ensure the json data is a string
        if (data['Updated'] && !(typeof data['Updated'] === 'string' || data['Updated'] instanceof String)) {
            throw new Error("Expected the field `Updated` to be a primitive type in the JSON string but got " + data['Updated']);
        }

        return true;
    }


}



/**
 * @member {Number} Assists
 */
TeamSeason.prototype['Assists'] = undefined;

/**
 * @member {Number} AssistsPercentage
 */
TeamSeason.prototype['AssistsPercentage'] = undefined;

/**
 * @member {Number} BlockedShots
 */
TeamSeason.prototype['BlockedShots'] = undefined;

/**
 * @member {Number} BlocksPercentage
 */
TeamSeason.prototype['BlocksPercentage'] = undefined;

/**
 * @member {Number} DefensiveRebounds
 */
TeamSeason.prototype['DefensiveRebounds'] = undefined;

/**
 * @member {Number} DefensiveReboundsPercentage
 */
TeamSeason.prototype['DefensiveReboundsPercentage'] = undefined;

/**
 * @member {Number} DoubleDoubles
 */
TeamSeason.prototype['DoubleDoubles'] = undefined;

/**
 * @member {Number} EffectiveFieldGoalsPercentage
 */
TeamSeason.prototype['EffectiveFieldGoalsPercentage'] = undefined;

/**
 * @member {Number} FantasyPoints
 */
TeamSeason.prototype['FantasyPoints'] = undefined;

/**
 * @member {Number} FantasyPointsDraftKings
 */
TeamSeason.prototype['FantasyPointsDraftKings'] = undefined;

/**
 * @member {Number} FantasyPointsFanDuel
 */
TeamSeason.prototype['FantasyPointsFanDuel'] = undefined;

/**
 * @member {Number} FantasyPointsFantasyDraft
 */
TeamSeason.prototype['FantasyPointsFantasyDraft'] = undefined;

/**
 * @member {Number} FantasyPointsYahoo
 */
TeamSeason.prototype['FantasyPointsYahoo'] = undefined;

/**
 * @member {Number} FieldGoalsAttempted
 */
TeamSeason.prototype['FieldGoalsAttempted'] = undefined;

/**
 * @member {Number} FieldGoalsMade
 */
TeamSeason.prototype['FieldGoalsMade'] = undefined;

/**
 * @member {Number} FieldGoalsPercentage
 */
TeamSeason.prototype['FieldGoalsPercentage'] = undefined;

/**
 * @member {Number} FreeThrowsAttempted
 */
TeamSeason.prototype['FreeThrowsAttempted'] = undefined;

/**
 * @member {Number} FreeThrowsMade
 */
TeamSeason.prototype['FreeThrowsMade'] = undefined;

/**
 * @member {Number} FreeThrowsPercentage
 */
TeamSeason.prototype['FreeThrowsPercentage'] = undefined;

/**
 * @member {Number} Games
 */
TeamSeason.prototype['Games'] = undefined;

/**
 * @member {Number} GlobalTeamID
 */
TeamSeason.prototype['GlobalTeamID'] = undefined;

/**
 * @member {Boolean} IsClosed
 */
TeamSeason.prototype['IsClosed'] = undefined;

/**
 * @member {Boolean} LineupConfirmed
 */
TeamSeason.prototype['LineupConfirmed'] = undefined;

/**
 * @member {String} LineupStatus
 */
TeamSeason.prototype['LineupStatus'] = undefined;

/**
 * @member {Number} Losses
 */
TeamSeason.prototype['Losses'] = undefined;

/**
 * @member {Number} Minutes
 */
TeamSeason.prototype['Minutes'] = undefined;

/**
 * @member {String} Name
 */
TeamSeason.prototype['Name'] = undefined;

/**
 * @member {Number} OffensiveRebounds
 */
TeamSeason.prototype['OffensiveRebounds'] = undefined;

/**
 * @member {Number} OffensiveReboundsPercentage
 */
TeamSeason.prototype['OffensiveReboundsPercentage'] = undefined;

/**
 * @member {String} OpponentPosition
 */
TeamSeason.prototype['OpponentPosition'] = undefined;

/**
 * @member {module:model/OpponentSeason} OpponentStat
 */
TeamSeason.prototype['OpponentStat'] = undefined;

/**
 * @member {Number} PersonalFouls
 */
TeamSeason.prototype['PersonalFouls'] = undefined;

/**
 * @member {Number} PlayerEfficiencyRating
 */
TeamSeason.prototype['PlayerEfficiencyRating'] = undefined;

/**
 * @member {Number} PlusMinus
 */
TeamSeason.prototype['PlusMinus'] = undefined;

/**
 * @member {Number} Points
 */
TeamSeason.prototype['Points'] = undefined;

/**
 * @member {Number} Possessions
 */
TeamSeason.prototype['Possessions'] = undefined;

/**
 * @member {Number} Rebounds
 */
TeamSeason.prototype['Rebounds'] = undefined;

/**
 * @member {Number} Season
 */
TeamSeason.prototype['Season'] = undefined;

/**
 * @member {Number} SeasonType
 */
TeamSeason.prototype['SeasonType'] = undefined;

/**
 * @member {Number} Seconds
 */
TeamSeason.prototype['Seconds'] = undefined;

/**
 * @member {Number} StatID
 */
TeamSeason.prototype['StatID'] = undefined;

/**
 * @member {Number} Steals
 */
TeamSeason.prototype['Steals'] = undefined;

/**
 * @member {Number} StealsPercentage
 */
TeamSeason.prototype['StealsPercentage'] = undefined;

/**
 * @member {String} Team
 */
TeamSeason.prototype['Team'] = undefined;

/**
 * @member {Number} TeamID
 */
TeamSeason.prototype['TeamID'] = undefined;

/**
 * @member {Number} ThreePointersAttempted
 */
TeamSeason.prototype['ThreePointersAttempted'] = undefined;

/**
 * @member {Number} ThreePointersMade
 */
TeamSeason.prototype['ThreePointersMade'] = undefined;

/**
 * @member {Number} ThreePointersPercentage
 */
TeamSeason.prototype['ThreePointersPercentage'] = undefined;

/**
 * @member {Number} TotalReboundsPercentage
 */
TeamSeason.prototype['TotalReboundsPercentage'] = undefined;

/**
 * @member {Number} TripleDoubles
 */
TeamSeason.prototype['TripleDoubles'] = undefined;

/**
 * @member {Number} TrueShootingAttempts
 */
TeamSeason.prototype['TrueShootingAttempts'] = undefined;

/**
 * @member {Number} TrueShootingPercentage
 */
TeamSeason.prototype['TrueShootingPercentage'] = undefined;

/**
 * @member {Number} TurnOversPercentage
 */
TeamSeason.prototype['TurnOversPercentage'] = undefined;

/**
 * @member {Number} Turnovers
 */
TeamSeason.prototype['Turnovers'] = undefined;

/**
 * @member {Number} TwoPointersAttempted
 */
TeamSeason.prototype['TwoPointersAttempted'] = undefined;

/**
 * @member {Number} TwoPointersMade
 */
TeamSeason.prototype['TwoPointersMade'] = undefined;

/**
 * @member {Number} TwoPointersPercentage
 */
TeamSeason.prototype['TwoPointersPercentage'] = undefined;

/**
 * @member {String} Updated
 */
TeamSeason.prototype['Updated'] = undefined;

/**
 * @member {Number} UsageRatePercentage
 */
TeamSeason.prototype['UsageRatePercentage'] = undefined;

/**
 * @member {Number} Wins
 */
TeamSeason.prototype['Wins'] = undefined;






export default TeamSeason;

