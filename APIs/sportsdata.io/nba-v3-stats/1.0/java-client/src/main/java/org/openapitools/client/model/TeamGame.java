/*
 * NBA v3 Stats
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TeamGame
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:04:43.661436-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TeamGame {
  public static final String SERIALIZED_NAME_ASSISTS = "Assists";
  @SerializedName(SERIALIZED_NAME_ASSISTS)
  private BigDecimal assists;

  public static final String SERIALIZED_NAME_ASSISTS_PERCENTAGE = "AssistsPercentage";
  @SerializedName(SERIALIZED_NAME_ASSISTS_PERCENTAGE)
  private BigDecimal assistsPercentage;

  public static final String SERIALIZED_NAME_BLOCKED_SHOTS = "BlockedShots";
  @SerializedName(SERIALIZED_NAME_BLOCKED_SHOTS)
  private BigDecimal blockedShots;

  public static final String SERIALIZED_NAME_BLOCKS_PERCENTAGE = "BlocksPercentage";
  @SerializedName(SERIALIZED_NAME_BLOCKS_PERCENTAGE)
  private BigDecimal blocksPercentage;

  public static final String SERIALIZED_NAME_DATE_TIME = "DateTime";
  @SerializedName(SERIALIZED_NAME_DATE_TIME)
  private String dateTime;

  public static final String SERIALIZED_NAME_DAY = "Day";
  @SerializedName(SERIALIZED_NAME_DAY)
  private String day;

  public static final String SERIALIZED_NAME_DEFENSIVE_REBOUNDS = "DefensiveRebounds";
  @SerializedName(SERIALIZED_NAME_DEFENSIVE_REBOUNDS)
  private BigDecimal defensiveRebounds;

  public static final String SERIALIZED_NAME_DEFENSIVE_REBOUNDS_PERCENTAGE = "DefensiveReboundsPercentage";
  @SerializedName(SERIALIZED_NAME_DEFENSIVE_REBOUNDS_PERCENTAGE)
  private BigDecimal defensiveReboundsPercentage;

  public static final String SERIALIZED_NAME_DOUBLE_DOUBLES = "DoubleDoubles";
  @SerializedName(SERIALIZED_NAME_DOUBLE_DOUBLES)
  private BigDecimal doubleDoubles;

  public static final String SERIALIZED_NAME_EFFECTIVE_FIELD_GOALS_PERCENTAGE = "EffectiveFieldGoalsPercentage";
  @SerializedName(SERIALIZED_NAME_EFFECTIVE_FIELD_GOALS_PERCENTAGE)
  private BigDecimal effectiveFieldGoalsPercentage;

  public static final String SERIALIZED_NAME_FANTASY_POINTS = "FantasyPoints";
  @SerializedName(SERIALIZED_NAME_FANTASY_POINTS)
  private BigDecimal fantasyPoints;

  public static final String SERIALIZED_NAME_FANTASY_POINTS_DRAFT_KINGS = "FantasyPointsDraftKings";
  @SerializedName(SERIALIZED_NAME_FANTASY_POINTS_DRAFT_KINGS)
  private BigDecimal fantasyPointsDraftKings;

  public static final String SERIALIZED_NAME_FANTASY_POINTS_FAN_DUEL = "FantasyPointsFanDuel";
  @SerializedName(SERIALIZED_NAME_FANTASY_POINTS_FAN_DUEL)
  private BigDecimal fantasyPointsFanDuel;

  public static final String SERIALIZED_NAME_FANTASY_POINTS_FANTASY_DRAFT = "FantasyPointsFantasyDraft";
  @SerializedName(SERIALIZED_NAME_FANTASY_POINTS_FANTASY_DRAFT)
  private BigDecimal fantasyPointsFantasyDraft;

  public static final String SERIALIZED_NAME_FANTASY_POINTS_YAHOO = "FantasyPointsYahoo";
  @SerializedName(SERIALIZED_NAME_FANTASY_POINTS_YAHOO)
  private BigDecimal fantasyPointsYahoo;

  public static final String SERIALIZED_NAME_FIELD_GOALS_ATTEMPTED = "FieldGoalsAttempted";
  @SerializedName(SERIALIZED_NAME_FIELD_GOALS_ATTEMPTED)
  private BigDecimal fieldGoalsAttempted;

  public static final String SERIALIZED_NAME_FIELD_GOALS_MADE = "FieldGoalsMade";
  @SerializedName(SERIALIZED_NAME_FIELD_GOALS_MADE)
  private BigDecimal fieldGoalsMade;

  public static final String SERIALIZED_NAME_FIELD_GOALS_PERCENTAGE = "FieldGoalsPercentage";
  @SerializedName(SERIALIZED_NAME_FIELD_GOALS_PERCENTAGE)
  private BigDecimal fieldGoalsPercentage;

  public static final String SERIALIZED_NAME_FREE_THROWS_ATTEMPTED = "FreeThrowsAttempted";
  @SerializedName(SERIALIZED_NAME_FREE_THROWS_ATTEMPTED)
  private BigDecimal freeThrowsAttempted;

  public static final String SERIALIZED_NAME_FREE_THROWS_MADE = "FreeThrowsMade";
  @SerializedName(SERIALIZED_NAME_FREE_THROWS_MADE)
  private BigDecimal freeThrowsMade;

  public static final String SERIALIZED_NAME_FREE_THROWS_PERCENTAGE = "FreeThrowsPercentage";
  @SerializedName(SERIALIZED_NAME_FREE_THROWS_PERCENTAGE)
  private BigDecimal freeThrowsPercentage;

  public static final String SERIALIZED_NAME_GAME_I_D = "GameID";
  @SerializedName(SERIALIZED_NAME_GAME_I_D)
  private Integer gameID;

  public static final String SERIALIZED_NAME_GAMES = "Games";
  @SerializedName(SERIALIZED_NAME_GAMES)
  private Integer games;

  public static final String SERIALIZED_NAME_GLOBAL_GAME_I_D = "GlobalGameID";
  @SerializedName(SERIALIZED_NAME_GLOBAL_GAME_I_D)
  private Integer globalGameID;

  public static final String SERIALIZED_NAME_GLOBAL_OPPONENT_I_D = "GlobalOpponentID";
  @SerializedName(SERIALIZED_NAME_GLOBAL_OPPONENT_I_D)
  private Integer globalOpponentID;

  public static final String SERIALIZED_NAME_GLOBAL_TEAM_I_D = "GlobalTeamID";
  @SerializedName(SERIALIZED_NAME_GLOBAL_TEAM_I_D)
  private Integer globalTeamID;

  public static final String SERIALIZED_NAME_HOME_OR_AWAY = "HomeOrAway";
  @SerializedName(SERIALIZED_NAME_HOME_OR_AWAY)
  private String homeOrAway;

  public static final String SERIALIZED_NAME_IS_CLOSED = "IsClosed";
  @SerializedName(SERIALIZED_NAME_IS_CLOSED)
  private Boolean isClosed;

  public static final String SERIALIZED_NAME_IS_GAME_OVER = "IsGameOver";
  @SerializedName(SERIALIZED_NAME_IS_GAME_OVER)
  private Boolean isGameOver;

  public static final String SERIALIZED_NAME_LINEUP_CONFIRMED = "LineupConfirmed";
  @SerializedName(SERIALIZED_NAME_LINEUP_CONFIRMED)
  private Boolean lineupConfirmed;

  public static final String SERIALIZED_NAME_LINEUP_STATUS = "LineupStatus";
  @SerializedName(SERIALIZED_NAME_LINEUP_STATUS)
  private String lineupStatus;

  public static final String SERIALIZED_NAME_LOSSES = "Losses";
  @SerializedName(SERIALIZED_NAME_LOSSES)
  private Integer losses;

  public static final String SERIALIZED_NAME_MINUTES = "Minutes";
  @SerializedName(SERIALIZED_NAME_MINUTES)
  private Integer minutes;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_OFFENSIVE_REBOUNDS = "OffensiveRebounds";
  @SerializedName(SERIALIZED_NAME_OFFENSIVE_REBOUNDS)
  private BigDecimal offensiveRebounds;

  public static final String SERIALIZED_NAME_OFFENSIVE_REBOUNDS_PERCENTAGE = "OffensiveReboundsPercentage";
  @SerializedName(SERIALIZED_NAME_OFFENSIVE_REBOUNDS_PERCENTAGE)
  private BigDecimal offensiveReboundsPercentage;

  public static final String SERIALIZED_NAME_OPPONENT = "Opponent";
  @SerializedName(SERIALIZED_NAME_OPPONENT)
  private String opponent;

  public static final String SERIALIZED_NAME_OPPONENT_I_D = "OpponentID";
  @SerializedName(SERIALIZED_NAME_OPPONENT_I_D)
  private Integer opponentID;

  public static final String SERIALIZED_NAME_PERSONAL_FOULS = "PersonalFouls";
  @SerializedName(SERIALIZED_NAME_PERSONAL_FOULS)
  private BigDecimal personalFouls;

  public static final String SERIALIZED_NAME_PLAYER_EFFICIENCY_RATING = "PlayerEfficiencyRating";
  @SerializedName(SERIALIZED_NAME_PLAYER_EFFICIENCY_RATING)
  private BigDecimal playerEfficiencyRating;

  public static final String SERIALIZED_NAME_PLUS_MINUS = "PlusMinus";
  @SerializedName(SERIALIZED_NAME_PLUS_MINUS)
  private BigDecimal plusMinus;

  public static final String SERIALIZED_NAME_POINTS = "Points";
  @SerializedName(SERIALIZED_NAME_POINTS)
  private BigDecimal points;

  public static final String SERIALIZED_NAME_POSSESSIONS = "Possessions";
  @SerializedName(SERIALIZED_NAME_POSSESSIONS)
  private BigDecimal possessions;

  public static final String SERIALIZED_NAME_REBOUNDS = "Rebounds";
  @SerializedName(SERIALIZED_NAME_REBOUNDS)
  private BigDecimal rebounds;

  public static final String SERIALIZED_NAME_SEASON = "Season";
  @SerializedName(SERIALIZED_NAME_SEASON)
  private Integer season;

  public static final String SERIALIZED_NAME_SEASON_TYPE = "SeasonType";
  @SerializedName(SERIALIZED_NAME_SEASON_TYPE)
  private Integer seasonType;

  public static final String SERIALIZED_NAME_SECONDS = "Seconds";
  @SerializedName(SERIALIZED_NAME_SECONDS)
  private Integer seconds;

  public static final String SERIALIZED_NAME_STAT_I_D = "StatID";
  @SerializedName(SERIALIZED_NAME_STAT_I_D)
  private Integer statID;

  public static final String SERIALIZED_NAME_STEALS = "Steals";
  @SerializedName(SERIALIZED_NAME_STEALS)
  private BigDecimal steals;

  public static final String SERIALIZED_NAME_STEALS_PERCENTAGE = "StealsPercentage";
  @SerializedName(SERIALIZED_NAME_STEALS_PERCENTAGE)
  private BigDecimal stealsPercentage;

  public static final String SERIALIZED_NAME_TEAM = "Team";
  @SerializedName(SERIALIZED_NAME_TEAM)
  private String team;

  public static final String SERIALIZED_NAME_TEAM_I_D = "TeamID";
  @SerializedName(SERIALIZED_NAME_TEAM_I_D)
  private Integer teamID;

  public static final String SERIALIZED_NAME_THREE_POINTERS_ATTEMPTED = "ThreePointersAttempted";
  @SerializedName(SERIALIZED_NAME_THREE_POINTERS_ATTEMPTED)
  private BigDecimal threePointersAttempted;

  public static final String SERIALIZED_NAME_THREE_POINTERS_MADE = "ThreePointersMade";
  @SerializedName(SERIALIZED_NAME_THREE_POINTERS_MADE)
  private BigDecimal threePointersMade;

  public static final String SERIALIZED_NAME_THREE_POINTERS_PERCENTAGE = "ThreePointersPercentage";
  @SerializedName(SERIALIZED_NAME_THREE_POINTERS_PERCENTAGE)
  private BigDecimal threePointersPercentage;

  public static final String SERIALIZED_NAME_TOTAL_REBOUNDS_PERCENTAGE = "TotalReboundsPercentage";
  @SerializedName(SERIALIZED_NAME_TOTAL_REBOUNDS_PERCENTAGE)
  private BigDecimal totalReboundsPercentage;

  public static final String SERIALIZED_NAME_TRIPLE_DOUBLES = "TripleDoubles";
  @SerializedName(SERIALIZED_NAME_TRIPLE_DOUBLES)
  private BigDecimal tripleDoubles;

  public static final String SERIALIZED_NAME_TRUE_SHOOTING_ATTEMPTS = "TrueShootingAttempts";
  @SerializedName(SERIALIZED_NAME_TRUE_SHOOTING_ATTEMPTS)
  private BigDecimal trueShootingAttempts;

  public static final String SERIALIZED_NAME_TRUE_SHOOTING_PERCENTAGE = "TrueShootingPercentage";
  @SerializedName(SERIALIZED_NAME_TRUE_SHOOTING_PERCENTAGE)
  private BigDecimal trueShootingPercentage;

  public static final String SERIALIZED_NAME_TURN_OVERS_PERCENTAGE = "TurnOversPercentage";
  @SerializedName(SERIALIZED_NAME_TURN_OVERS_PERCENTAGE)
  private BigDecimal turnOversPercentage;

  public static final String SERIALIZED_NAME_TURNOVERS = "Turnovers";
  @SerializedName(SERIALIZED_NAME_TURNOVERS)
  private BigDecimal turnovers;

  public static final String SERIALIZED_NAME_TWO_POINTERS_ATTEMPTED = "TwoPointersAttempted";
  @SerializedName(SERIALIZED_NAME_TWO_POINTERS_ATTEMPTED)
  private BigDecimal twoPointersAttempted;

  public static final String SERIALIZED_NAME_TWO_POINTERS_MADE = "TwoPointersMade";
  @SerializedName(SERIALIZED_NAME_TWO_POINTERS_MADE)
  private BigDecimal twoPointersMade;

  public static final String SERIALIZED_NAME_TWO_POINTERS_PERCENTAGE = "TwoPointersPercentage";
  @SerializedName(SERIALIZED_NAME_TWO_POINTERS_PERCENTAGE)
  private BigDecimal twoPointersPercentage;

  public static final String SERIALIZED_NAME_UPDATED = "Updated";
  @SerializedName(SERIALIZED_NAME_UPDATED)
  private String updated;

  public static final String SERIALIZED_NAME_USAGE_RATE_PERCENTAGE = "UsageRatePercentage";
  @SerializedName(SERIALIZED_NAME_USAGE_RATE_PERCENTAGE)
  private BigDecimal usageRatePercentage;

  public static final String SERIALIZED_NAME_WINS = "Wins";
  @SerializedName(SERIALIZED_NAME_WINS)
  private Integer wins;

  public TeamGame() {
  }

  public TeamGame assists(BigDecimal assists) {
    this.assists = assists;
    return this;
  }

  /**
   * Get assists
   * @return assists
   */
  @javax.annotation.Nullable
  public BigDecimal getAssists() {
    return assists;
  }

  public void setAssists(BigDecimal assists) {
    this.assists = assists;
  }


  public TeamGame assistsPercentage(BigDecimal assistsPercentage) {
    this.assistsPercentage = assistsPercentage;
    return this;
  }

  /**
   * Get assistsPercentage
   * @return assistsPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getAssistsPercentage() {
    return assistsPercentage;
  }

  public void setAssistsPercentage(BigDecimal assistsPercentage) {
    this.assistsPercentage = assistsPercentage;
  }


  public TeamGame blockedShots(BigDecimal blockedShots) {
    this.blockedShots = blockedShots;
    return this;
  }

  /**
   * Get blockedShots
   * @return blockedShots
   */
  @javax.annotation.Nullable
  public BigDecimal getBlockedShots() {
    return blockedShots;
  }

  public void setBlockedShots(BigDecimal blockedShots) {
    this.blockedShots = blockedShots;
  }


  public TeamGame blocksPercentage(BigDecimal blocksPercentage) {
    this.blocksPercentage = blocksPercentage;
    return this;
  }

  /**
   * Get blocksPercentage
   * @return blocksPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getBlocksPercentage() {
    return blocksPercentage;
  }

  public void setBlocksPercentage(BigDecimal blocksPercentage) {
    this.blocksPercentage = blocksPercentage;
  }


  public TeamGame dateTime(String dateTime) {
    this.dateTime = dateTime;
    return this;
  }

  /**
   * Get dateTime
   * @return dateTime
   */
  @javax.annotation.Nullable
  public String getDateTime() {
    return dateTime;
  }

  public void setDateTime(String dateTime) {
    this.dateTime = dateTime;
  }


  public TeamGame day(String day) {
    this.day = day;
    return this;
  }

  /**
   * Get day
   * @return day
   */
  @javax.annotation.Nullable
  public String getDay() {
    return day;
  }

  public void setDay(String day) {
    this.day = day;
  }


  public TeamGame defensiveRebounds(BigDecimal defensiveRebounds) {
    this.defensiveRebounds = defensiveRebounds;
    return this;
  }

  /**
   * Get defensiveRebounds
   * @return defensiveRebounds
   */
  @javax.annotation.Nullable
  public BigDecimal getDefensiveRebounds() {
    return defensiveRebounds;
  }

  public void setDefensiveRebounds(BigDecimal defensiveRebounds) {
    this.defensiveRebounds = defensiveRebounds;
  }


  public TeamGame defensiveReboundsPercentage(BigDecimal defensiveReboundsPercentage) {
    this.defensiveReboundsPercentage = defensiveReboundsPercentage;
    return this;
  }

  /**
   * Get defensiveReboundsPercentage
   * @return defensiveReboundsPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getDefensiveReboundsPercentage() {
    return defensiveReboundsPercentage;
  }

  public void setDefensiveReboundsPercentage(BigDecimal defensiveReboundsPercentage) {
    this.defensiveReboundsPercentage = defensiveReboundsPercentage;
  }


  public TeamGame doubleDoubles(BigDecimal doubleDoubles) {
    this.doubleDoubles = doubleDoubles;
    return this;
  }

  /**
   * Get doubleDoubles
   * @return doubleDoubles
   */
  @javax.annotation.Nullable
  public BigDecimal getDoubleDoubles() {
    return doubleDoubles;
  }

  public void setDoubleDoubles(BigDecimal doubleDoubles) {
    this.doubleDoubles = doubleDoubles;
  }


  public TeamGame effectiveFieldGoalsPercentage(BigDecimal effectiveFieldGoalsPercentage) {
    this.effectiveFieldGoalsPercentage = effectiveFieldGoalsPercentage;
    return this;
  }

  /**
   * Get effectiveFieldGoalsPercentage
   * @return effectiveFieldGoalsPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getEffectiveFieldGoalsPercentage() {
    return effectiveFieldGoalsPercentage;
  }

  public void setEffectiveFieldGoalsPercentage(BigDecimal effectiveFieldGoalsPercentage) {
    this.effectiveFieldGoalsPercentage = effectiveFieldGoalsPercentage;
  }


  public TeamGame fantasyPoints(BigDecimal fantasyPoints) {
    this.fantasyPoints = fantasyPoints;
    return this;
  }

  /**
   * Get fantasyPoints
   * @return fantasyPoints
   */
  @javax.annotation.Nullable
  public BigDecimal getFantasyPoints() {
    return fantasyPoints;
  }

  public void setFantasyPoints(BigDecimal fantasyPoints) {
    this.fantasyPoints = fantasyPoints;
  }


  public TeamGame fantasyPointsDraftKings(BigDecimal fantasyPointsDraftKings) {
    this.fantasyPointsDraftKings = fantasyPointsDraftKings;
    return this;
  }

  /**
   * Get fantasyPointsDraftKings
   * @return fantasyPointsDraftKings
   */
  @javax.annotation.Nullable
  public BigDecimal getFantasyPointsDraftKings() {
    return fantasyPointsDraftKings;
  }

  public void setFantasyPointsDraftKings(BigDecimal fantasyPointsDraftKings) {
    this.fantasyPointsDraftKings = fantasyPointsDraftKings;
  }


  public TeamGame fantasyPointsFanDuel(BigDecimal fantasyPointsFanDuel) {
    this.fantasyPointsFanDuel = fantasyPointsFanDuel;
    return this;
  }

  /**
   * Get fantasyPointsFanDuel
   * @return fantasyPointsFanDuel
   */
  @javax.annotation.Nullable
  public BigDecimal getFantasyPointsFanDuel() {
    return fantasyPointsFanDuel;
  }

  public void setFantasyPointsFanDuel(BigDecimal fantasyPointsFanDuel) {
    this.fantasyPointsFanDuel = fantasyPointsFanDuel;
  }


  public TeamGame fantasyPointsFantasyDraft(BigDecimal fantasyPointsFantasyDraft) {
    this.fantasyPointsFantasyDraft = fantasyPointsFantasyDraft;
    return this;
  }

  /**
   * Get fantasyPointsFantasyDraft
   * @return fantasyPointsFantasyDraft
   */
  @javax.annotation.Nullable
  public BigDecimal getFantasyPointsFantasyDraft() {
    return fantasyPointsFantasyDraft;
  }

  public void setFantasyPointsFantasyDraft(BigDecimal fantasyPointsFantasyDraft) {
    this.fantasyPointsFantasyDraft = fantasyPointsFantasyDraft;
  }


  public TeamGame fantasyPointsYahoo(BigDecimal fantasyPointsYahoo) {
    this.fantasyPointsYahoo = fantasyPointsYahoo;
    return this;
  }

  /**
   * Get fantasyPointsYahoo
   * @return fantasyPointsYahoo
   */
  @javax.annotation.Nullable
  public BigDecimal getFantasyPointsYahoo() {
    return fantasyPointsYahoo;
  }

  public void setFantasyPointsYahoo(BigDecimal fantasyPointsYahoo) {
    this.fantasyPointsYahoo = fantasyPointsYahoo;
  }


  public TeamGame fieldGoalsAttempted(BigDecimal fieldGoalsAttempted) {
    this.fieldGoalsAttempted = fieldGoalsAttempted;
    return this;
  }

  /**
   * Get fieldGoalsAttempted
   * @return fieldGoalsAttempted
   */
  @javax.annotation.Nullable
  public BigDecimal getFieldGoalsAttempted() {
    return fieldGoalsAttempted;
  }

  public void setFieldGoalsAttempted(BigDecimal fieldGoalsAttempted) {
    this.fieldGoalsAttempted = fieldGoalsAttempted;
  }


  public TeamGame fieldGoalsMade(BigDecimal fieldGoalsMade) {
    this.fieldGoalsMade = fieldGoalsMade;
    return this;
  }

  /**
   * Get fieldGoalsMade
   * @return fieldGoalsMade
   */
  @javax.annotation.Nullable
  public BigDecimal getFieldGoalsMade() {
    return fieldGoalsMade;
  }

  public void setFieldGoalsMade(BigDecimal fieldGoalsMade) {
    this.fieldGoalsMade = fieldGoalsMade;
  }


  public TeamGame fieldGoalsPercentage(BigDecimal fieldGoalsPercentage) {
    this.fieldGoalsPercentage = fieldGoalsPercentage;
    return this;
  }

  /**
   * Get fieldGoalsPercentage
   * @return fieldGoalsPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getFieldGoalsPercentage() {
    return fieldGoalsPercentage;
  }

  public void setFieldGoalsPercentage(BigDecimal fieldGoalsPercentage) {
    this.fieldGoalsPercentage = fieldGoalsPercentage;
  }


  public TeamGame freeThrowsAttempted(BigDecimal freeThrowsAttempted) {
    this.freeThrowsAttempted = freeThrowsAttempted;
    return this;
  }

  /**
   * Get freeThrowsAttempted
   * @return freeThrowsAttempted
   */
  @javax.annotation.Nullable
  public BigDecimal getFreeThrowsAttempted() {
    return freeThrowsAttempted;
  }

  public void setFreeThrowsAttempted(BigDecimal freeThrowsAttempted) {
    this.freeThrowsAttempted = freeThrowsAttempted;
  }


  public TeamGame freeThrowsMade(BigDecimal freeThrowsMade) {
    this.freeThrowsMade = freeThrowsMade;
    return this;
  }

  /**
   * Get freeThrowsMade
   * @return freeThrowsMade
   */
  @javax.annotation.Nullable
  public BigDecimal getFreeThrowsMade() {
    return freeThrowsMade;
  }

  public void setFreeThrowsMade(BigDecimal freeThrowsMade) {
    this.freeThrowsMade = freeThrowsMade;
  }


  public TeamGame freeThrowsPercentage(BigDecimal freeThrowsPercentage) {
    this.freeThrowsPercentage = freeThrowsPercentage;
    return this;
  }

  /**
   * Get freeThrowsPercentage
   * @return freeThrowsPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getFreeThrowsPercentage() {
    return freeThrowsPercentage;
  }

  public void setFreeThrowsPercentage(BigDecimal freeThrowsPercentage) {
    this.freeThrowsPercentage = freeThrowsPercentage;
  }


  public TeamGame gameID(Integer gameID) {
    this.gameID = gameID;
    return this;
  }

  /**
   * Get gameID
   * @return gameID
   */
  @javax.annotation.Nullable
  public Integer getGameID() {
    return gameID;
  }

  public void setGameID(Integer gameID) {
    this.gameID = gameID;
  }


  public TeamGame games(Integer games) {
    this.games = games;
    return this;
  }

  /**
   * Get games
   * @return games
   */
  @javax.annotation.Nullable
  public Integer getGames() {
    return games;
  }

  public void setGames(Integer games) {
    this.games = games;
  }


  public TeamGame globalGameID(Integer globalGameID) {
    this.globalGameID = globalGameID;
    return this;
  }

  /**
   * Get globalGameID
   * @return globalGameID
   */
  @javax.annotation.Nullable
  public Integer getGlobalGameID() {
    return globalGameID;
  }

  public void setGlobalGameID(Integer globalGameID) {
    this.globalGameID = globalGameID;
  }


  public TeamGame globalOpponentID(Integer globalOpponentID) {
    this.globalOpponentID = globalOpponentID;
    return this;
  }

  /**
   * Get globalOpponentID
   * @return globalOpponentID
   */
  @javax.annotation.Nullable
  public Integer getGlobalOpponentID() {
    return globalOpponentID;
  }

  public void setGlobalOpponentID(Integer globalOpponentID) {
    this.globalOpponentID = globalOpponentID;
  }


  public TeamGame globalTeamID(Integer globalTeamID) {
    this.globalTeamID = globalTeamID;
    return this;
  }

  /**
   * Get globalTeamID
   * @return globalTeamID
   */
  @javax.annotation.Nullable
  public Integer getGlobalTeamID() {
    return globalTeamID;
  }

  public void setGlobalTeamID(Integer globalTeamID) {
    this.globalTeamID = globalTeamID;
  }


  public TeamGame homeOrAway(String homeOrAway) {
    this.homeOrAway = homeOrAway;
    return this;
  }

  /**
   * Get homeOrAway
   * @return homeOrAway
   */
  @javax.annotation.Nullable
  public String getHomeOrAway() {
    return homeOrAway;
  }

  public void setHomeOrAway(String homeOrAway) {
    this.homeOrAway = homeOrAway;
  }


  public TeamGame isClosed(Boolean isClosed) {
    this.isClosed = isClosed;
    return this;
  }

  /**
   * Get isClosed
   * @return isClosed
   */
  @javax.annotation.Nullable
  public Boolean getIsClosed() {
    return isClosed;
  }

  public void setIsClosed(Boolean isClosed) {
    this.isClosed = isClosed;
  }


  public TeamGame isGameOver(Boolean isGameOver) {
    this.isGameOver = isGameOver;
    return this;
  }

  /**
   * Get isGameOver
   * @return isGameOver
   */
  @javax.annotation.Nullable
  public Boolean getIsGameOver() {
    return isGameOver;
  }

  public void setIsGameOver(Boolean isGameOver) {
    this.isGameOver = isGameOver;
  }


  public TeamGame lineupConfirmed(Boolean lineupConfirmed) {
    this.lineupConfirmed = lineupConfirmed;
    return this;
  }

  /**
   * Get lineupConfirmed
   * @return lineupConfirmed
   */
  @javax.annotation.Nullable
  public Boolean getLineupConfirmed() {
    return lineupConfirmed;
  }

  public void setLineupConfirmed(Boolean lineupConfirmed) {
    this.lineupConfirmed = lineupConfirmed;
  }


  public TeamGame lineupStatus(String lineupStatus) {
    this.lineupStatus = lineupStatus;
    return this;
  }

  /**
   * Get lineupStatus
   * @return lineupStatus
   */
  @javax.annotation.Nullable
  public String getLineupStatus() {
    return lineupStatus;
  }

  public void setLineupStatus(String lineupStatus) {
    this.lineupStatus = lineupStatus;
  }


  public TeamGame losses(Integer losses) {
    this.losses = losses;
    return this;
  }

  /**
   * Get losses
   * @return losses
   */
  @javax.annotation.Nullable
  public Integer getLosses() {
    return losses;
  }

  public void setLosses(Integer losses) {
    this.losses = losses;
  }


  public TeamGame minutes(Integer minutes) {
    this.minutes = minutes;
    return this;
  }

  /**
   * Get minutes
   * @return minutes
   */
  @javax.annotation.Nullable
  public Integer getMinutes() {
    return minutes;
  }

  public void setMinutes(Integer minutes) {
    this.minutes = minutes;
  }


  public TeamGame name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public TeamGame offensiveRebounds(BigDecimal offensiveRebounds) {
    this.offensiveRebounds = offensiveRebounds;
    return this;
  }

  /**
   * Get offensiveRebounds
   * @return offensiveRebounds
   */
  @javax.annotation.Nullable
  public BigDecimal getOffensiveRebounds() {
    return offensiveRebounds;
  }

  public void setOffensiveRebounds(BigDecimal offensiveRebounds) {
    this.offensiveRebounds = offensiveRebounds;
  }


  public TeamGame offensiveReboundsPercentage(BigDecimal offensiveReboundsPercentage) {
    this.offensiveReboundsPercentage = offensiveReboundsPercentage;
    return this;
  }

  /**
   * Get offensiveReboundsPercentage
   * @return offensiveReboundsPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getOffensiveReboundsPercentage() {
    return offensiveReboundsPercentage;
  }

  public void setOffensiveReboundsPercentage(BigDecimal offensiveReboundsPercentage) {
    this.offensiveReboundsPercentage = offensiveReboundsPercentage;
  }


  public TeamGame opponent(String opponent) {
    this.opponent = opponent;
    return this;
  }

  /**
   * Get opponent
   * @return opponent
   */
  @javax.annotation.Nullable
  public String getOpponent() {
    return opponent;
  }

  public void setOpponent(String opponent) {
    this.opponent = opponent;
  }


  public TeamGame opponentID(Integer opponentID) {
    this.opponentID = opponentID;
    return this;
  }

  /**
   * Get opponentID
   * @return opponentID
   */
  @javax.annotation.Nullable
  public Integer getOpponentID() {
    return opponentID;
  }

  public void setOpponentID(Integer opponentID) {
    this.opponentID = opponentID;
  }


  public TeamGame personalFouls(BigDecimal personalFouls) {
    this.personalFouls = personalFouls;
    return this;
  }

  /**
   * Get personalFouls
   * @return personalFouls
   */
  @javax.annotation.Nullable
  public BigDecimal getPersonalFouls() {
    return personalFouls;
  }

  public void setPersonalFouls(BigDecimal personalFouls) {
    this.personalFouls = personalFouls;
  }


  public TeamGame playerEfficiencyRating(BigDecimal playerEfficiencyRating) {
    this.playerEfficiencyRating = playerEfficiencyRating;
    return this;
  }

  /**
   * Get playerEfficiencyRating
   * @return playerEfficiencyRating
   */
  @javax.annotation.Nullable
  public BigDecimal getPlayerEfficiencyRating() {
    return playerEfficiencyRating;
  }

  public void setPlayerEfficiencyRating(BigDecimal playerEfficiencyRating) {
    this.playerEfficiencyRating = playerEfficiencyRating;
  }


  public TeamGame plusMinus(BigDecimal plusMinus) {
    this.plusMinus = plusMinus;
    return this;
  }

  /**
   * Get plusMinus
   * @return plusMinus
   */
  @javax.annotation.Nullable
  public BigDecimal getPlusMinus() {
    return plusMinus;
  }

  public void setPlusMinus(BigDecimal plusMinus) {
    this.plusMinus = plusMinus;
  }


  public TeamGame points(BigDecimal points) {
    this.points = points;
    return this;
  }

  /**
   * Get points
   * @return points
   */
  @javax.annotation.Nullable
  public BigDecimal getPoints() {
    return points;
  }

  public void setPoints(BigDecimal points) {
    this.points = points;
  }


  public TeamGame possessions(BigDecimal possessions) {
    this.possessions = possessions;
    return this;
  }

  /**
   * Get possessions
   * @return possessions
   */
  @javax.annotation.Nullable
  public BigDecimal getPossessions() {
    return possessions;
  }

  public void setPossessions(BigDecimal possessions) {
    this.possessions = possessions;
  }


  public TeamGame rebounds(BigDecimal rebounds) {
    this.rebounds = rebounds;
    return this;
  }

  /**
   * Get rebounds
   * @return rebounds
   */
  @javax.annotation.Nullable
  public BigDecimal getRebounds() {
    return rebounds;
  }

  public void setRebounds(BigDecimal rebounds) {
    this.rebounds = rebounds;
  }


  public TeamGame season(Integer season) {
    this.season = season;
    return this;
  }

  /**
   * Get season
   * @return season
   */
  @javax.annotation.Nullable
  public Integer getSeason() {
    return season;
  }

  public void setSeason(Integer season) {
    this.season = season;
  }


  public TeamGame seasonType(Integer seasonType) {
    this.seasonType = seasonType;
    return this;
  }

  /**
   * Get seasonType
   * @return seasonType
   */
  @javax.annotation.Nullable
  public Integer getSeasonType() {
    return seasonType;
  }

  public void setSeasonType(Integer seasonType) {
    this.seasonType = seasonType;
  }


  public TeamGame seconds(Integer seconds) {
    this.seconds = seconds;
    return this;
  }

  /**
   * Get seconds
   * @return seconds
   */
  @javax.annotation.Nullable
  public Integer getSeconds() {
    return seconds;
  }

  public void setSeconds(Integer seconds) {
    this.seconds = seconds;
  }


  public TeamGame statID(Integer statID) {
    this.statID = statID;
    return this;
  }

  /**
   * Get statID
   * @return statID
   */
  @javax.annotation.Nullable
  public Integer getStatID() {
    return statID;
  }

  public void setStatID(Integer statID) {
    this.statID = statID;
  }


  public TeamGame steals(BigDecimal steals) {
    this.steals = steals;
    return this;
  }

  /**
   * Get steals
   * @return steals
   */
  @javax.annotation.Nullable
  public BigDecimal getSteals() {
    return steals;
  }

  public void setSteals(BigDecimal steals) {
    this.steals = steals;
  }


  public TeamGame stealsPercentage(BigDecimal stealsPercentage) {
    this.stealsPercentage = stealsPercentage;
    return this;
  }

  /**
   * Get stealsPercentage
   * @return stealsPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getStealsPercentage() {
    return stealsPercentage;
  }

  public void setStealsPercentage(BigDecimal stealsPercentage) {
    this.stealsPercentage = stealsPercentage;
  }


  public TeamGame team(String team) {
    this.team = team;
    return this;
  }

  /**
   * Get team
   * @return team
   */
  @javax.annotation.Nullable
  public String getTeam() {
    return team;
  }

  public void setTeam(String team) {
    this.team = team;
  }


  public TeamGame teamID(Integer teamID) {
    this.teamID = teamID;
    return this;
  }

  /**
   * Get teamID
   * @return teamID
   */
  @javax.annotation.Nullable
  public Integer getTeamID() {
    return teamID;
  }

  public void setTeamID(Integer teamID) {
    this.teamID = teamID;
  }


  public TeamGame threePointersAttempted(BigDecimal threePointersAttempted) {
    this.threePointersAttempted = threePointersAttempted;
    return this;
  }

  /**
   * Get threePointersAttempted
   * @return threePointersAttempted
   */
  @javax.annotation.Nullable
  public BigDecimal getThreePointersAttempted() {
    return threePointersAttempted;
  }

  public void setThreePointersAttempted(BigDecimal threePointersAttempted) {
    this.threePointersAttempted = threePointersAttempted;
  }


  public TeamGame threePointersMade(BigDecimal threePointersMade) {
    this.threePointersMade = threePointersMade;
    return this;
  }

  /**
   * Get threePointersMade
   * @return threePointersMade
   */
  @javax.annotation.Nullable
  public BigDecimal getThreePointersMade() {
    return threePointersMade;
  }

  public void setThreePointersMade(BigDecimal threePointersMade) {
    this.threePointersMade = threePointersMade;
  }


  public TeamGame threePointersPercentage(BigDecimal threePointersPercentage) {
    this.threePointersPercentage = threePointersPercentage;
    return this;
  }

  /**
   * Get threePointersPercentage
   * @return threePointersPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getThreePointersPercentage() {
    return threePointersPercentage;
  }

  public void setThreePointersPercentage(BigDecimal threePointersPercentage) {
    this.threePointersPercentage = threePointersPercentage;
  }


  public TeamGame totalReboundsPercentage(BigDecimal totalReboundsPercentage) {
    this.totalReboundsPercentage = totalReboundsPercentage;
    return this;
  }

  /**
   * Get totalReboundsPercentage
   * @return totalReboundsPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getTotalReboundsPercentage() {
    return totalReboundsPercentage;
  }

  public void setTotalReboundsPercentage(BigDecimal totalReboundsPercentage) {
    this.totalReboundsPercentage = totalReboundsPercentage;
  }


  public TeamGame tripleDoubles(BigDecimal tripleDoubles) {
    this.tripleDoubles = tripleDoubles;
    return this;
  }

  /**
   * Get tripleDoubles
   * @return tripleDoubles
   */
  @javax.annotation.Nullable
  public BigDecimal getTripleDoubles() {
    return tripleDoubles;
  }

  public void setTripleDoubles(BigDecimal tripleDoubles) {
    this.tripleDoubles = tripleDoubles;
  }


  public TeamGame trueShootingAttempts(BigDecimal trueShootingAttempts) {
    this.trueShootingAttempts = trueShootingAttempts;
    return this;
  }

  /**
   * Get trueShootingAttempts
   * @return trueShootingAttempts
   */
  @javax.annotation.Nullable
  public BigDecimal getTrueShootingAttempts() {
    return trueShootingAttempts;
  }

  public void setTrueShootingAttempts(BigDecimal trueShootingAttempts) {
    this.trueShootingAttempts = trueShootingAttempts;
  }


  public TeamGame trueShootingPercentage(BigDecimal trueShootingPercentage) {
    this.trueShootingPercentage = trueShootingPercentage;
    return this;
  }

  /**
   * Get trueShootingPercentage
   * @return trueShootingPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getTrueShootingPercentage() {
    return trueShootingPercentage;
  }

  public void setTrueShootingPercentage(BigDecimal trueShootingPercentage) {
    this.trueShootingPercentage = trueShootingPercentage;
  }


  public TeamGame turnOversPercentage(BigDecimal turnOversPercentage) {
    this.turnOversPercentage = turnOversPercentage;
    return this;
  }

  /**
   * Get turnOversPercentage
   * @return turnOversPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getTurnOversPercentage() {
    return turnOversPercentage;
  }

  public void setTurnOversPercentage(BigDecimal turnOversPercentage) {
    this.turnOversPercentage = turnOversPercentage;
  }


  public TeamGame turnovers(BigDecimal turnovers) {
    this.turnovers = turnovers;
    return this;
  }

  /**
   * Get turnovers
   * @return turnovers
   */
  @javax.annotation.Nullable
  public BigDecimal getTurnovers() {
    return turnovers;
  }

  public void setTurnovers(BigDecimal turnovers) {
    this.turnovers = turnovers;
  }


  public TeamGame twoPointersAttempted(BigDecimal twoPointersAttempted) {
    this.twoPointersAttempted = twoPointersAttempted;
    return this;
  }

  /**
   * Get twoPointersAttempted
   * @return twoPointersAttempted
   */
  @javax.annotation.Nullable
  public BigDecimal getTwoPointersAttempted() {
    return twoPointersAttempted;
  }

  public void setTwoPointersAttempted(BigDecimal twoPointersAttempted) {
    this.twoPointersAttempted = twoPointersAttempted;
  }


  public TeamGame twoPointersMade(BigDecimal twoPointersMade) {
    this.twoPointersMade = twoPointersMade;
    return this;
  }

  /**
   * Get twoPointersMade
   * @return twoPointersMade
   */
  @javax.annotation.Nullable
  public BigDecimal getTwoPointersMade() {
    return twoPointersMade;
  }

  public void setTwoPointersMade(BigDecimal twoPointersMade) {
    this.twoPointersMade = twoPointersMade;
  }


  public TeamGame twoPointersPercentage(BigDecimal twoPointersPercentage) {
    this.twoPointersPercentage = twoPointersPercentage;
    return this;
  }

  /**
   * Get twoPointersPercentage
   * @return twoPointersPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getTwoPointersPercentage() {
    return twoPointersPercentage;
  }

  public void setTwoPointersPercentage(BigDecimal twoPointersPercentage) {
    this.twoPointersPercentage = twoPointersPercentage;
  }


  public TeamGame updated(String updated) {
    this.updated = updated;
    return this;
  }

  /**
   * Get updated
   * @return updated
   */
  @javax.annotation.Nullable
  public String getUpdated() {
    return updated;
  }

  public void setUpdated(String updated) {
    this.updated = updated;
  }


  public TeamGame usageRatePercentage(BigDecimal usageRatePercentage) {
    this.usageRatePercentage = usageRatePercentage;
    return this;
  }

  /**
   * Get usageRatePercentage
   * @return usageRatePercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getUsageRatePercentage() {
    return usageRatePercentage;
  }

  public void setUsageRatePercentage(BigDecimal usageRatePercentage) {
    this.usageRatePercentage = usageRatePercentage;
  }


  public TeamGame wins(Integer wins) {
    this.wins = wins;
    return this;
  }

  /**
   * Get wins
   * @return wins
   */
  @javax.annotation.Nullable
  public Integer getWins() {
    return wins;
  }

  public void setWins(Integer wins) {
    this.wins = wins;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TeamGame teamGame = (TeamGame) o;
    return Objects.equals(this.assists, teamGame.assists) &&
        Objects.equals(this.assistsPercentage, teamGame.assistsPercentage) &&
        Objects.equals(this.blockedShots, teamGame.blockedShots) &&
        Objects.equals(this.blocksPercentage, teamGame.blocksPercentage) &&
        Objects.equals(this.dateTime, teamGame.dateTime) &&
        Objects.equals(this.day, teamGame.day) &&
        Objects.equals(this.defensiveRebounds, teamGame.defensiveRebounds) &&
        Objects.equals(this.defensiveReboundsPercentage, teamGame.defensiveReboundsPercentage) &&
        Objects.equals(this.doubleDoubles, teamGame.doubleDoubles) &&
        Objects.equals(this.effectiveFieldGoalsPercentage, teamGame.effectiveFieldGoalsPercentage) &&
        Objects.equals(this.fantasyPoints, teamGame.fantasyPoints) &&
        Objects.equals(this.fantasyPointsDraftKings, teamGame.fantasyPointsDraftKings) &&
        Objects.equals(this.fantasyPointsFanDuel, teamGame.fantasyPointsFanDuel) &&
        Objects.equals(this.fantasyPointsFantasyDraft, teamGame.fantasyPointsFantasyDraft) &&
        Objects.equals(this.fantasyPointsYahoo, teamGame.fantasyPointsYahoo) &&
        Objects.equals(this.fieldGoalsAttempted, teamGame.fieldGoalsAttempted) &&
        Objects.equals(this.fieldGoalsMade, teamGame.fieldGoalsMade) &&
        Objects.equals(this.fieldGoalsPercentage, teamGame.fieldGoalsPercentage) &&
        Objects.equals(this.freeThrowsAttempted, teamGame.freeThrowsAttempted) &&
        Objects.equals(this.freeThrowsMade, teamGame.freeThrowsMade) &&
        Objects.equals(this.freeThrowsPercentage, teamGame.freeThrowsPercentage) &&
        Objects.equals(this.gameID, teamGame.gameID) &&
        Objects.equals(this.games, teamGame.games) &&
        Objects.equals(this.globalGameID, teamGame.globalGameID) &&
        Objects.equals(this.globalOpponentID, teamGame.globalOpponentID) &&
        Objects.equals(this.globalTeamID, teamGame.globalTeamID) &&
        Objects.equals(this.homeOrAway, teamGame.homeOrAway) &&
        Objects.equals(this.isClosed, teamGame.isClosed) &&
        Objects.equals(this.isGameOver, teamGame.isGameOver) &&
        Objects.equals(this.lineupConfirmed, teamGame.lineupConfirmed) &&
        Objects.equals(this.lineupStatus, teamGame.lineupStatus) &&
        Objects.equals(this.losses, teamGame.losses) &&
        Objects.equals(this.minutes, teamGame.minutes) &&
        Objects.equals(this.name, teamGame.name) &&
        Objects.equals(this.offensiveRebounds, teamGame.offensiveRebounds) &&
        Objects.equals(this.offensiveReboundsPercentage, teamGame.offensiveReboundsPercentage) &&
        Objects.equals(this.opponent, teamGame.opponent) &&
        Objects.equals(this.opponentID, teamGame.opponentID) &&
        Objects.equals(this.personalFouls, teamGame.personalFouls) &&
        Objects.equals(this.playerEfficiencyRating, teamGame.playerEfficiencyRating) &&
        Objects.equals(this.plusMinus, teamGame.plusMinus) &&
        Objects.equals(this.points, teamGame.points) &&
        Objects.equals(this.possessions, teamGame.possessions) &&
        Objects.equals(this.rebounds, teamGame.rebounds) &&
        Objects.equals(this.season, teamGame.season) &&
        Objects.equals(this.seasonType, teamGame.seasonType) &&
        Objects.equals(this.seconds, teamGame.seconds) &&
        Objects.equals(this.statID, teamGame.statID) &&
        Objects.equals(this.steals, teamGame.steals) &&
        Objects.equals(this.stealsPercentage, teamGame.stealsPercentage) &&
        Objects.equals(this.team, teamGame.team) &&
        Objects.equals(this.teamID, teamGame.teamID) &&
        Objects.equals(this.threePointersAttempted, teamGame.threePointersAttempted) &&
        Objects.equals(this.threePointersMade, teamGame.threePointersMade) &&
        Objects.equals(this.threePointersPercentage, teamGame.threePointersPercentage) &&
        Objects.equals(this.totalReboundsPercentage, teamGame.totalReboundsPercentage) &&
        Objects.equals(this.tripleDoubles, teamGame.tripleDoubles) &&
        Objects.equals(this.trueShootingAttempts, teamGame.trueShootingAttempts) &&
        Objects.equals(this.trueShootingPercentage, teamGame.trueShootingPercentage) &&
        Objects.equals(this.turnOversPercentage, teamGame.turnOversPercentage) &&
        Objects.equals(this.turnovers, teamGame.turnovers) &&
        Objects.equals(this.twoPointersAttempted, teamGame.twoPointersAttempted) &&
        Objects.equals(this.twoPointersMade, teamGame.twoPointersMade) &&
        Objects.equals(this.twoPointersPercentage, teamGame.twoPointersPercentage) &&
        Objects.equals(this.updated, teamGame.updated) &&
        Objects.equals(this.usageRatePercentage, teamGame.usageRatePercentage) &&
        Objects.equals(this.wins, teamGame.wins);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(assists, assistsPercentage, blockedShots, blocksPercentage, dateTime, day, defensiveRebounds, defensiveReboundsPercentage, doubleDoubles, effectiveFieldGoalsPercentage, fantasyPoints, fantasyPointsDraftKings, fantasyPointsFanDuel, fantasyPointsFantasyDraft, fantasyPointsYahoo, fieldGoalsAttempted, fieldGoalsMade, fieldGoalsPercentage, freeThrowsAttempted, freeThrowsMade, freeThrowsPercentage, gameID, games, globalGameID, globalOpponentID, globalTeamID, homeOrAway, isClosed, isGameOver, lineupConfirmed, lineupStatus, losses, minutes, name, offensiveRebounds, offensiveReboundsPercentage, opponent, opponentID, personalFouls, playerEfficiencyRating, plusMinus, points, possessions, rebounds, season, seasonType, seconds, statID, steals, stealsPercentage, team, teamID, threePointersAttempted, threePointersMade, threePointersPercentage, totalReboundsPercentage, tripleDoubles, trueShootingAttempts, trueShootingPercentage, turnOversPercentage, turnovers, twoPointersAttempted, twoPointersMade, twoPointersPercentage, updated, usageRatePercentage, wins);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TeamGame {\n");
    sb.append("    assists: ").append(toIndentedString(assists)).append("\n");
    sb.append("    assistsPercentage: ").append(toIndentedString(assistsPercentage)).append("\n");
    sb.append("    blockedShots: ").append(toIndentedString(blockedShots)).append("\n");
    sb.append("    blocksPercentage: ").append(toIndentedString(blocksPercentage)).append("\n");
    sb.append("    dateTime: ").append(toIndentedString(dateTime)).append("\n");
    sb.append("    day: ").append(toIndentedString(day)).append("\n");
    sb.append("    defensiveRebounds: ").append(toIndentedString(defensiveRebounds)).append("\n");
    sb.append("    defensiveReboundsPercentage: ").append(toIndentedString(defensiveReboundsPercentage)).append("\n");
    sb.append("    doubleDoubles: ").append(toIndentedString(doubleDoubles)).append("\n");
    sb.append("    effectiveFieldGoalsPercentage: ").append(toIndentedString(effectiveFieldGoalsPercentage)).append("\n");
    sb.append("    fantasyPoints: ").append(toIndentedString(fantasyPoints)).append("\n");
    sb.append("    fantasyPointsDraftKings: ").append(toIndentedString(fantasyPointsDraftKings)).append("\n");
    sb.append("    fantasyPointsFanDuel: ").append(toIndentedString(fantasyPointsFanDuel)).append("\n");
    sb.append("    fantasyPointsFantasyDraft: ").append(toIndentedString(fantasyPointsFantasyDraft)).append("\n");
    sb.append("    fantasyPointsYahoo: ").append(toIndentedString(fantasyPointsYahoo)).append("\n");
    sb.append("    fieldGoalsAttempted: ").append(toIndentedString(fieldGoalsAttempted)).append("\n");
    sb.append("    fieldGoalsMade: ").append(toIndentedString(fieldGoalsMade)).append("\n");
    sb.append("    fieldGoalsPercentage: ").append(toIndentedString(fieldGoalsPercentage)).append("\n");
    sb.append("    freeThrowsAttempted: ").append(toIndentedString(freeThrowsAttempted)).append("\n");
    sb.append("    freeThrowsMade: ").append(toIndentedString(freeThrowsMade)).append("\n");
    sb.append("    freeThrowsPercentage: ").append(toIndentedString(freeThrowsPercentage)).append("\n");
    sb.append("    gameID: ").append(toIndentedString(gameID)).append("\n");
    sb.append("    games: ").append(toIndentedString(games)).append("\n");
    sb.append("    globalGameID: ").append(toIndentedString(globalGameID)).append("\n");
    sb.append("    globalOpponentID: ").append(toIndentedString(globalOpponentID)).append("\n");
    sb.append("    globalTeamID: ").append(toIndentedString(globalTeamID)).append("\n");
    sb.append("    homeOrAway: ").append(toIndentedString(homeOrAway)).append("\n");
    sb.append("    isClosed: ").append(toIndentedString(isClosed)).append("\n");
    sb.append("    isGameOver: ").append(toIndentedString(isGameOver)).append("\n");
    sb.append("    lineupConfirmed: ").append(toIndentedString(lineupConfirmed)).append("\n");
    sb.append("    lineupStatus: ").append(toIndentedString(lineupStatus)).append("\n");
    sb.append("    losses: ").append(toIndentedString(losses)).append("\n");
    sb.append("    minutes: ").append(toIndentedString(minutes)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    offensiveRebounds: ").append(toIndentedString(offensiveRebounds)).append("\n");
    sb.append("    offensiveReboundsPercentage: ").append(toIndentedString(offensiveReboundsPercentage)).append("\n");
    sb.append("    opponent: ").append(toIndentedString(opponent)).append("\n");
    sb.append("    opponentID: ").append(toIndentedString(opponentID)).append("\n");
    sb.append("    personalFouls: ").append(toIndentedString(personalFouls)).append("\n");
    sb.append("    playerEfficiencyRating: ").append(toIndentedString(playerEfficiencyRating)).append("\n");
    sb.append("    plusMinus: ").append(toIndentedString(plusMinus)).append("\n");
    sb.append("    points: ").append(toIndentedString(points)).append("\n");
    sb.append("    possessions: ").append(toIndentedString(possessions)).append("\n");
    sb.append("    rebounds: ").append(toIndentedString(rebounds)).append("\n");
    sb.append("    season: ").append(toIndentedString(season)).append("\n");
    sb.append("    seasonType: ").append(toIndentedString(seasonType)).append("\n");
    sb.append("    seconds: ").append(toIndentedString(seconds)).append("\n");
    sb.append("    statID: ").append(toIndentedString(statID)).append("\n");
    sb.append("    steals: ").append(toIndentedString(steals)).append("\n");
    sb.append("    stealsPercentage: ").append(toIndentedString(stealsPercentage)).append("\n");
    sb.append("    team: ").append(toIndentedString(team)).append("\n");
    sb.append("    teamID: ").append(toIndentedString(teamID)).append("\n");
    sb.append("    threePointersAttempted: ").append(toIndentedString(threePointersAttempted)).append("\n");
    sb.append("    threePointersMade: ").append(toIndentedString(threePointersMade)).append("\n");
    sb.append("    threePointersPercentage: ").append(toIndentedString(threePointersPercentage)).append("\n");
    sb.append("    totalReboundsPercentage: ").append(toIndentedString(totalReboundsPercentage)).append("\n");
    sb.append("    tripleDoubles: ").append(toIndentedString(tripleDoubles)).append("\n");
    sb.append("    trueShootingAttempts: ").append(toIndentedString(trueShootingAttempts)).append("\n");
    sb.append("    trueShootingPercentage: ").append(toIndentedString(trueShootingPercentage)).append("\n");
    sb.append("    turnOversPercentage: ").append(toIndentedString(turnOversPercentage)).append("\n");
    sb.append("    turnovers: ").append(toIndentedString(turnovers)).append("\n");
    sb.append("    twoPointersAttempted: ").append(toIndentedString(twoPointersAttempted)).append("\n");
    sb.append("    twoPointersMade: ").append(toIndentedString(twoPointersMade)).append("\n");
    sb.append("    twoPointersPercentage: ").append(toIndentedString(twoPointersPercentage)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    usageRatePercentage: ").append(toIndentedString(usageRatePercentage)).append("\n");
    sb.append("    wins: ").append(toIndentedString(wins)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Assists");
    openapiFields.add("AssistsPercentage");
    openapiFields.add("BlockedShots");
    openapiFields.add("BlocksPercentage");
    openapiFields.add("DateTime");
    openapiFields.add("Day");
    openapiFields.add("DefensiveRebounds");
    openapiFields.add("DefensiveReboundsPercentage");
    openapiFields.add("DoubleDoubles");
    openapiFields.add("EffectiveFieldGoalsPercentage");
    openapiFields.add("FantasyPoints");
    openapiFields.add("FantasyPointsDraftKings");
    openapiFields.add("FantasyPointsFanDuel");
    openapiFields.add("FantasyPointsFantasyDraft");
    openapiFields.add("FantasyPointsYahoo");
    openapiFields.add("FieldGoalsAttempted");
    openapiFields.add("FieldGoalsMade");
    openapiFields.add("FieldGoalsPercentage");
    openapiFields.add("FreeThrowsAttempted");
    openapiFields.add("FreeThrowsMade");
    openapiFields.add("FreeThrowsPercentage");
    openapiFields.add("GameID");
    openapiFields.add("Games");
    openapiFields.add("GlobalGameID");
    openapiFields.add("GlobalOpponentID");
    openapiFields.add("GlobalTeamID");
    openapiFields.add("HomeOrAway");
    openapiFields.add("IsClosed");
    openapiFields.add("IsGameOver");
    openapiFields.add("LineupConfirmed");
    openapiFields.add("LineupStatus");
    openapiFields.add("Losses");
    openapiFields.add("Minutes");
    openapiFields.add("Name");
    openapiFields.add("OffensiveRebounds");
    openapiFields.add("OffensiveReboundsPercentage");
    openapiFields.add("Opponent");
    openapiFields.add("OpponentID");
    openapiFields.add("PersonalFouls");
    openapiFields.add("PlayerEfficiencyRating");
    openapiFields.add("PlusMinus");
    openapiFields.add("Points");
    openapiFields.add("Possessions");
    openapiFields.add("Rebounds");
    openapiFields.add("Season");
    openapiFields.add("SeasonType");
    openapiFields.add("Seconds");
    openapiFields.add("StatID");
    openapiFields.add("Steals");
    openapiFields.add("StealsPercentage");
    openapiFields.add("Team");
    openapiFields.add("TeamID");
    openapiFields.add("ThreePointersAttempted");
    openapiFields.add("ThreePointersMade");
    openapiFields.add("ThreePointersPercentage");
    openapiFields.add("TotalReboundsPercentage");
    openapiFields.add("TripleDoubles");
    openapiFields.add("TrueShootingAttempts");
    openapiFields.add("TrueShootingPercentage");
    openapiFields.add("TurnOversPercentage");
    openapiFields.add("Turnovers");
    openapiFields.add("TwoPointersAttempted");
    openapiFields.add("TwoPointersMade");
    openapiFields.add("TwoPointersPercentage");
    openapiFields.add("Updated");
    openapiFields.add("UsageRatePercentage");
    openapiFields.add("Wins");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TeamGame
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TeamGame.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TeamGame is not found in the empty JSON string", TeamGame.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TeamGame.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TeamGame` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("DateTime") != null && !jsonObj.get("DateTime").isJsonNull()) && !jsonObj.get("DateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DateTime").toString()));
      }
      if ((jsonObj.get("Day") != null && !jsonObj.get("Day").isJsonNull()) && !jsonObj.get("Day").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Day` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Day").toString()));
      }
      if ((jsonObj.get("HomeOrAway") != null && !jsonObj.get("HomeOrAway").isJsonNull()) && !jsonObj.get("HomeOrAway").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `HomeOrAway` to be a primitive type in the JSON string but got `%s`", jsonObj.get("HomeOrAway").toString()));
      }
      if ((jsonObj.get("LineupStatus") != null && !jsonObj.get("LineupStatus").isJsonNull()) && !jsonObj.get("LineupStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `LineupStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("LineupStatus").toString()));
      }
      if ((jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) && !jsonObj.get("Name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Name").toString()));
      }
      if ((jsonObj.get("Opponent") != null && !jsonObj.get("Opponent").isJsonNull()) && !jsonObj.get("Opponent").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Opponent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Opponent").toString()));
      }
      if ((jsonObj.get("Team") != null && !jsonObj.get("Team").isJsonNull()) && !jsonObj.get("Team").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Team` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Team").toString()));
      }
      if ((jsonObj.get("Updated") != null && !jsonObj.get("Updated").isJsonNull()) && !jsonObj.get("Updated").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Updated` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Updated").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TeamGame.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TeamGame' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TeamGame> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TeamGame.class));

       return (TypeAdapter<T>) new TypeAdapter<TeamGame>() {
           @Override
           public void write(JsonWriter out, TeamGame value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TeamGame read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TeamGame given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TeamGame
   * @throws IOException if the JSON string is invalid with respect to TeamGame
   */
  public static TeamGame fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TeamGame.class);
  }

  /**
   * Convert an instance of TeamGame to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

