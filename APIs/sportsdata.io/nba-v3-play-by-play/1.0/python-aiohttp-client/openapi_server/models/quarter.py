# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Quarter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, away_score: int=None, game_id: int=None, home_score: int=None, name: str=None, number: int=None, quarter_id: int=None):
        """Quarter - a model defined in OpenAPI

        :param away_score: The away_score of this Quarter.
        :param game_id: The game_id of this Quarter.
        :param home_score: The home_score of this Quarter.
        :param name: The name of this Quarter.
        :param number: The number of this Quarter.
        :param quarter_id: The quarter_id of this Quarter.
        """
        self.openapi_types = {
            'away_score': int,
            'game_id': int,
            'home_score': int,
            'name': str,
            'number': int,
            'quarter_id': int
        }

        self.attribute_map = {
            'away_score': 'AwayScore',
            'game_id': 'GameID',
            'home_score': 'HomeScore',
            'name': 'Name',
            'number': 'Number',
            'quarter_id': 'QuarterID'
        }

        self._away_score = away_score
        self._game_id = game_id
        self._home_score = home_score
        self._name = name
        self._number = number
        self._quarter_id = quarter_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Quarter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Quarter of this Quarter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def away_score(self):
        """Gets the away_score of this Quarter.


        :return: The away_score of this Quarter.
        :rtype: int
        """
        return self._away_score

    @away_score.setter
    def away_score(self, away_score):
        """Sets the away_score of this Quarter.


        :param away_score: The away_score of this Quarter.
        :type away_score: int
        """

        self._away_score = away_score

    @property
    def game_id(self):
        """Gets the game_id of this Quarter.


        :return: The game_id of this Quarter.
        :rtype: int
        """
        return self._game_id

    @game_id.setter
    def game_id(self, game_id):
        """Sets the game_id of this Quarter.


        :param game_id: The game_id of this Quarter.
        :type game_id: int
        """

        self._game_id = game_id

    @property
    def home_score(self):
        """Gets the home_score of this Quarter.


        :return: The home_score of this Quarter.
        :rtype: int
        """
        return self._home_score

    @home_score.setter
    def home_score(self, home_score):
        """Sets the home_score of this Quarter.


        :param home_score: The home_score of this Quarter.
        :type home_score: int
        """

        self._home_score = home_score

    @property
    def name(self):
        """Gets the name of this Quarter.


        :return: The name of this Quarter.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Quarter.


        :param name: The name of this Quarter.
        :type name: str
        """

        self._name = name

    @property
    def number(self):
        """Gets the number of this Quarter.


        :return: The number of this Quarter.
        :rtype: int
        """
        return self._number

    @number.setter
    def number(self, number):
        """Sets the number of this Quarter.


        :param number: The number of this Quarter.
        :type number: int
        """

        self._number = number

    @property
    def quarter_id(self):
        """Gets the quarter_id of this Quarter.


        :return: The quarter_id of this Quarter.
        :rtype: int
        """
        return self._quarter_id

    @quarter_id.setter
    def quarter_id(self, quarter_id):
        """Sets the quarter_id of this Quarter.


        :param quarter_id: The quarter_id of this Quarter.
        :type quarter_id: int
        """

        self._quarter_id = quarter_id
