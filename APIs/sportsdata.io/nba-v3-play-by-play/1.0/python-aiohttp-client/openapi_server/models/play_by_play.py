# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.game import Game
from openapi_server.models.play import Play
from openapi_server.models.quarter import Quarter
from openapi_server import util


class PlayByPlay(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, game: Game=None, plays: List[Play]=None, quarters: List[Quarter]=None):
        """PlayByPlay - a model defined in OpenAPI

        :param game: The game of this PlayByPlay.
        :param plays: The plays of this PlayByPlay.
        :param quarters: The quarters of this PlayByPlay.
        """
        self.openapi_types = {
            'game': Game,
            'plays': List[Play],
            'quarters': List[Quarter]
        }

        self.attribute_map = {
            'game': 'Game',
            'plays': 'Plays',
            'quarters': 'Quarters'
        }

        self._game = game
        self._plays = plays
        self._quarters = quarters

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PlayByPlay':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PlayByPlay of this PlayByPlay.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def game(self):
        """Gets the game of this PlayByPlay.


        :return: The game of this PlayByPlay.
        :rtype: Game
        """
        return self._game

    @game.setter
    def game(self, game):
        """Sets the game of this PlayByPlay.


        :param game: The game of this PlayByPlay.
        :type game: Game
        """

        self._game = game

    @property
    def plays(self):
        """Gets the plays of this PlayByPlay.


        :return: The plays of this PlayByPlay.
        :rtype: List[Play]
        """
        return self._plays

    @plays.setter
    def plays(self, plays):
        """Sets the plays of this PlayByPlay.


        :param plays: The plays of this PlayByPlay.
        :type plays: List[Play]
        """

        self._plays = plays

    @property
    def quarters(self):
        """Gets the quarters of this PlayByPlay.


        :return: The quarters of this PlayByPlay.
        :rtype: List[Quarter]
        """
        return self._quarters

    @quarters.setter
    def quarters(self, quarters):
        """Sets the quarters of this PlayByPlay.


        :param quarters: The quarters of this PlayByPlay.
        :type quarters: List[Quarter]
        """

        self._quarters = quarters
