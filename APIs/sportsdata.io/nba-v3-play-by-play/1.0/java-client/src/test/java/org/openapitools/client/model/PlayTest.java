/*
 * NBA v3 Play-by-Play
 * NBA play-by-play API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Play
 */
public class PlayTest {
    private final Play model = new Play();

    /**
     * Model tests for Play
     */
    @Test
    public void testPlay() {
        // TODO: test Play
    }

    /**
     * Test the property 'assistedByPlayerID'
     */
    @Test
    public void assistedByPlayerIDTest() {
        // TODO: test assistedByPlayerID
    }

    /**
     * Test the property 'awayPlayerID'
     */
    @Test
    public void awayPlayerIDTest() {
        // TODO: test awayPlayerID
    }

    /**
     * Test the property 'awayTeamScore'
     */
    @Test
    public void awayTeamScoreTest() {
        // TODO: test awayTeamScore
    }

    /**
     * Test the property 'baselineOffsetPercentage'
     */
    @Test
    public void baselineOffsetPercentageTest() {
        // TODO: test baselineOffsetPercentage
    }

    /**
     * Test the property 'blockedByPlayerID'
     */
    @Test
    public void blockedByPlayerIDTest() {
        // TODO: test blockedByPlayerID
    }

    /**
     * Test the property 'category'
     */
    @Test
    public void categoryTest() {
        // TODO: test category
    }

    /**
     * Test the property 'coordinates'
     */
    @Test
    public void coordinatesTest() {
        // TODO: test coordinates
    }

    /**
     * Test the property 'created'
     */
    @Test
    public void createdTest() {
        // TODO: test created
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'fastBreak'
     */
    @Test
    public void fastBreakTest() {
        // TODO: test fastBreak
    }

    /**
     * Test the property 'homePlayerID'
     */
    @Test
    public void homePlayerIDTest() {
        // TODO: test homePlayerID
    }

    /**
     * Test the property 'homeTeamScore'
     */
    @Test
    public void homeTeamScoreTest() {
        // TODO: test homeTeamScore
    }

    /**
     * Test the property 'opponent'
     */
    @Test
    public void opponentTest() {
        // TODO: test opponent
    }

    /**
     * Test the property 'opponentID'
     */
    @Test
    public void opponentIDTest() {
        // TODO: test opponentID
    }

    /**
     * Test the property 'playID'
     */
    @Test
    public void playIDTest() {
        // TODO: test playID
    }

    /**
     * Test the property 'playerID'
     */
    @Test
    public void playerIDTest() {
        // TODO: test playerID
    }

    /**
     * Test the property 'points'
     */
    @Test
    public void pointsTest() {
        // TODO: test points
    }

    /**
     * Test the property 'potentialPoints'
     */
    @Test
    public void potentialPointsTest() {
        // TODO: test potentialPoints
    }

    /**
     * Test the property 'quarterID'
     */
    @Test
    public void quarterIDTest() {
        // TODO: test quarterID
    }

    /**
     * Test the property 'quarterName'
     */
    @Test
    public void quarterNameTest() {
        // TODO: test quarterName
    }

    /**
     * Test the property 'receivingPlayerID'
     */
    @Test
    public void receivingPlayerIDTest() {
        // TODO: test receivingPlayerID
    }

    /**
     * Test the property 'receivingTeam'
     */
    @Test
    public void receivingTeamTest() {
        // TODO: test receivingTeam
    }

    /**
     * Test the property 'receivingTeamID'
     */
    @Test
    public void receivingTeamIDTest() {
        // TODO: test receivingTeamID
    }

    /**
     * Test the property 'sequence'
     */
    @Test
    public void sequenceTest() {
        // TODO: test sequence
    }

    /**
     * Test the property 'shotMade'
     */
    @Test
    public void shotMadeTest() {
        // TODO: test shotMade
    }

    /**
     * Test the property 'sideOfBasket'
     */
    @Test
    public void sideOfBasketTest() {
        // TODO: test sideOfBasket
    }

    /**
     * Test the property 'sidelineOffsetPercentage'
     */
    @Test
    public void sidelineOffsetPercentageTest() {
        // TODO: test sidelineOffsetPercentage
    }

    /**
     * Test the property 'stolenByPlayerID'
     */
    @Test
    public void stolenByPlayerIDTest() {
        // TODO: test stolenByPlayerID
    }

    /**
     * Test the property 'substituteInPlayerID'
     */
    @Test
    public void substituteInPlayerIDTest() {
        // TODO: test substituteInPlayerID
    }

    /**
     * Test the property 'substituteOutPlayerID'
     */
    @Test
    public void substituteOutPlayerIDTest() {
        // TODO: test substituteOutPlayerID
    }

    /**
     * Test the property 'team'
     */
    @Test
    public void teamTest() {
        // TODO: test team
    }

    /**
     * Test the property 'teamID'
     */
    @Test
    public void teamIDTest() {
        // TODO: test teamID
    }

    /**
     * Test the property 'timeRemainingMinutes'
     */
    @Test
    public void timeRemainingMinutesTest() {
        // TODO: test timeRemainingMinutes
    }

    /**
     * Test the property 'timeRemainingSeconds'
     */
    @Test
    public void timeRemainingSecondsTest() {
        // TODO: test timeRemainingSeconds
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'updated'
     */
    @Test
    public void updatedTest() {
        // TODO: test updated
    }

}
