/**
 * NBA v3 Play-by-Play
 * NBA play-by-play API.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPlay.h
 *
 * 
 */

#ifndef OAIPlay_H
#define OAIPlay_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPlay : public OAIObject {
public:
    OAIPlay();
    OAIPlay(QString json);
    ~OAIPlay() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAssistedByPlayerId() const;
    void setAssistedByPlayerId(const qint32 &assisted_by_player_id);
    bool is_assisted_by_player_id_Set() const;
    bool is_assisted_by_player_id_Valid() const;

    qint32 getAwayPlayerId() const;
    void setAwayPlayerId(const qint32 &away_player_id);
    bool is_away_player_id_Set() const;
    bool is_away_player_id_Valid() const;

    qint32 getAwayTeamScore() const;
    void setAwayTeamScore(const qint32 &away_team_score);
    bool is_away_team_score_Set() const;
    bool is_away_team_score_Valid() const;

    double getBaselineOffsetPercentage() const;
    void setBaselineOffsetPercentage(const double &baseline_offset_percentage);
    bool is_baseline_offset_percentage_Set() const;
    bool is_baseline_offset_percentage_Valid() const;

    qint32 getBlockedByPlayerId() const;
    void setBlockedByPlayerId(const qint32 &blocked_by_player_id);
    bool is_blocked_by_player_id_Set() const;
    bool is_blocked_by_player_id_Valid() const;

    QString getCategory() const;
    void setCategory(const QString &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    QString getCoordinates() const;
    void setCoordinates(const QString &coordinates);
    bool is_coordinates_Set() const;
    bool is_coordinates_Valid() const;

    QString getCreated() const;
    void setCreated(const QString &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    bool isFastBreak() const;
    void setFastBreak(const bool &fast_break);
    bool is_fast_break_Set() const;
    bool is_fast_break_Valid() const;

    qint32 getHomePlayerId() const;
    void setHomePlayerId(const qint32 &home_player_id);
    bool is_home_player_id_Set() const;
    bool is_home_player_id_Valid() const;

    qint32 getHomeTeamScore() const;
    void setHomeTeamScore(const qint32 &home_team_score);
    bool is_home_team_score_Set() const;
    bool is_home_team_score_Valid() const;

    QString getOpponent() const;
    void setOpponent(const QString &opponent);
    bool is_opponent_Set() const;
    bool is_opponent_Valid() const;

    qint32 getOpponentId() const;
    void setOpponentId(const qint32 &opponent_id);
    bool is_opponent_id_Set() const;
    bool is_opponent_id_Valid() const;

    qint32 getPlayId() const;
    void setPlayId(const qint32 &play_id);
    bool is_play_id_Set() const;
    bool is_play_id_Valid() const;

    qint32 getPlayerId() const;
    void setPlayerId(const qint32 &player_id);
    bool is_player_id_Set() const;
    bool is_player_id_Valid() const;

    qint32 getPoints() const;
    void setPoints(const qint32 &points);
    bool is_points_Set() const;
    bool is_points_Valid() const;

    qint32 getPotentialPoints() const;
    void setPotentialPoints(const qint32 &potential_points);
    bool is_potential_points_Set() const;
    bool is_potential_points_Valid() const;

    qint32 getQuarterId() const;
    void setQuarterId(const qint32 &quarter_id);
    bool is_quarter_id_Set() const;
    bool is_quarter_id_Valid() const;

    QString getQuarterName() const;
    void setQuarterName(const QString &quarter_name);
    bool is_quarter_name_Set() const;
    bool is_quarter_name_Valid() const;

    qint32 getReceivingPlayerId() const;
    void setReceivingPlayerId(const qint32 &receiving_player_id);
    bool is_receiving_player_id_Set() const;
    bool is_receiving_player_id_Valid() const;

    QString getReceivingTeam() const;
    void setReceivingTeam(const QString &receiving_team);
    bool is_receiving_team_Set() const;
    bool is_receiving_team_Valid() const;

    qint32 getReceivingTeamId() const;
    void setReceivingTeamId(const qint32 &receiving_team_id);
    bool is_receiving_team_id_Set() const;
    bool is_receiving_team_id_Valid() const;

    qint32 getSequence() const;
    void setSequence(const qint32 &sequence);
    bool is_sequence_Set() const;
    bool is_sequence_Valid() const;

    bool isShotMade() const;
    void setShotMade(const bool &shot_made);
    bool is_shot_made_Set() const;
    bool is_shot_made_Valid() const;

    QString getSideOfBasket() const;
    void setSideOfBasket(const QString &side_of_basket);
    bool is_side_of_basket_Set() const;
    bool is_side_of_basket_Valid() const;

    double getSidelineOffsetPercentage() const;
    void setSidelineOffsetPercentage(const double &sideline_offset_percentage);
    bool is_sideline_offset_percentage_Set() const;
    bool is_sideline_offset_percentage_Valid() const;

    qint32 getStolenByPlayerId() const;
    void setStolenByPlayerId(const qint32 &stolen_by_player_id);
    bool is_stolen_by_player_id_Set() const;
    bool is_stolen_by_player_id_Valid() const;

    qint32 getSubstituteInPlayerId() const;
    void setSubstituteInPlayerId(const qint32 &substitute_in_player_id);
    bool is_substitute_in_player_id_Set() const;
    bool is_substitute_in_player_id_Valid() const;

    qint32 getSubstituteOutPlayerId() const;
    void setSubstituteOutPlayerId(const qint32 &substitute_out_player_id);
    bool is_substitute_out_player_id_Set() const;
    bool is_substitute_out_player_id_Valid() const;

    QString getTeam() const;
    void setTeam(const QString &team);
    bool is_team_Set() const;
    bool is_team_Valid() const;

    qint32 getTeamId() const;
    void setTeamId(const qint32 &team_id);
    bool is_team_id_Set() const;
    bool is_team_id_Valid() const;

    qint32 getTimeRemainingMinutes() const;
    void setTimeRemainingMinutes(const qint32 &time_remaining_minutes);
    bool is_time_remaining_minutes_Set() const;
    bool is_time_remaining_minutes_Valid() const;

    qint32 getTimeRemainingSeconds() const;
    void setTimeRemainingSeconds(const qint32 &time_remaining_seconds);
    bool is_time_remaining_seconds_Set() const;
    bool is_time_remaining_seconds_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUpdated() const;
    void setUpdated(const QString &updated);
    bool is_updated_Set() const;
    bool is_updated_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_assisted_by_player_id;
    bool m_assisted_by_player_id_isSet;
    bool m_assisted_by_player_id_isValid;

    qint32 m_away_player_id;
    bool m_away_player_id_isSet;
    bool m_away_player_id_isValid;

    qint32 m_away_team_score;
    bool m_away_team_score_isSet;
    bool m_away_team_score_isValid;

    double m_baseline_offset_percentage;
    bool m_baseline_offset_percentage_isSet;
    bool m_baseline_offset_percentage_isValid;

    qint32 m_blocked_by_player_id;
    bool m_blocked_by_player_id_isSet;
    bool m_blocked_by_player_id_isValid;

    QString m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    QString m_coordinates;
    bool m_coordinates_isSet;
    bool m_coordinates_isValid;

    QString m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    bool m_fast_break;
    bool m_fast_break_isSet;
    bool m_fast_break_isValid;

    qint32 m_home_player_id;
    bool m_home_player_id_isSet;
    bool m_home_player_id_isValid;

    qint32 m_home_team_score;
    bool m_home_team_score_isSet;
    bool m_home_team_score_isValid;

    QString m_opponent;
    bool m_opponent_isSet;
    bool m_opponent_isValid;

    qint32 m_opponent_id;
    bool m_opponent_id_isSet;
    bool m_opponent_id_isValid;

    qint32 m_play_id;
    bool m_play_id_isSet;
    bool m_play_id_isValid;

    qint32 m_player_id;
    bool m_player_id_isSet;
    bool m_player_id_isValid;

    qint32 m_points;
    bool m_points_isSet;
    bool m_points_isValid;

    qint32 m_potential_points;
    bool m_potential_points_isSet;
    bool m_potential_points_isValid;

    qint32 m_quarter_id;
    bool m_quarter_id_isSet;
    bool m_quarter_id_isValid;

    QString m_quarter_name;
    bool m_quarter_name_isSet;
    bool m_quarter_name_isValid;

    qint32 m_receiving_player_id;
    bool m_receiving_player_id_isSet;
    bool m_receiving_player_id_isValid;

    QString m_receiving_team;
    bool m_receiving_team_isSet;
    bool m_receiving_team_isValid;

    qint32 m_receiving_team_id;
    bool m_receiving_team_id_isSet;
    bool m_receiving_team_id_isValid;

    qint32 m_sequence;
    bool m_sequence_isSet;
    bool m_sequence_isValid;

    bool m_shot_made;
    bool m_shot_made_isSet;
    bool m_shot_made_isValid;

    QString m_side_of_basket;
    bool m_side_of_basket_isSet;
    bool m_side_of_basket_isValid;

    double m_sideline_offset_percentage;
    bool m_sideline_offset_percentage_isSet;
    bool m_sideline_offset_percentage_isValid;

    qint32 m_stolen_by_player_id;
    bool m_stolen_by_player_id_isSet;
    bool m_stolen_by_player_id_isValid;

    qint32 m_substitute_in_player_id;
    bool m_substitute_in_player_id_isSet;
    bool m_substitute_in_player_id_isValid;

    qint32 m_substitute_out_player_id;
    bool m_substitute_out_player_id_isSet;
    bool m_substitute_out_player_id_isValid;

    QString m_team;
    bool m_team_isSet;
    bool m_team_isValid;

    qint32 m_team_id;
    bool m_team_id_isSet;
    bool m_team_id_isValid;

    qint32 m_time_remaining_minutes;
    bool m_time_remaining_minutes_isSet;
    bool m_time_remaining_minutes_isValid;

    qint32 m_time_remaining_seconds;
    bool m_time_remaining_seconds_isSet;
    bool m_time_remaining_seconds_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_updated;
    bool m_updated_isSet;
    bool m_updated_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPlay)

#endif // OAIPlay_H
