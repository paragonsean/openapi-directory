/**
 * NBA v3 Play-by-Play
 * NBA play-by-play API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Quarter model module.
 * @module model/Quarter
 * @version 1.0
 */
class Quarter {
    /**
     * Constructs a new <code>Quarter</code>.
     * @alias module:model/Quarter
     */
    constructor() { 
        
        Quarter.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Quarter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Quarter} obj Optional instance to populate.
     * @return {module:model/Quarter} The populated <code>Quarter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Quarter();

            if (data.hasOwnProperty('AwayScore')) {
                obj['AwayScore'] = ApiClient.convertToType(data['AwayScore'], 'Number');
            }
            if (data.hasOwnProperty('GameID')) {
                obj['GameID'] = ApiClient.convertToType(data['GameID'], 'Number');
            }
            if (data.hasOwnProperty('HomeScore')) {
                obj['HomeScore'] = ApiClient.convertToType(data['HomeScore'], 'Number');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Number')) {
                obj['Number'] = ApiClient.convertToType(data['Number'], 'Number');
            }
            if (data.hasOwnProperty('QuarterID')) {
                obj['QuarterID'] = ApiClient.convertToType(data['QuarterID'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Quarter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Quarter</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }

        return true;
    }


}



/**
 * @member {Number} AwayScore
 */
Quarter.prototype['AwayScore'] = undefined;

/**
 * @member {Number} GameID
 */
Quarter.prototype['GameID'] = undefined;

/**
 * @member {Number} HomeScore
 */
Quarter.prototype['HomeScore'] = undefined;

/**
 * @member {String} Name
 */
Quarter.prototype['Name'] = undefined;

/**
 * @member {Number} Number
 */
Quarter.prototype['Number'] = undefined;

/**
 * @member {Number} QuarterID
 */
Quarter.prototype['QuarterID'] = undefined;






export default Quarter;

