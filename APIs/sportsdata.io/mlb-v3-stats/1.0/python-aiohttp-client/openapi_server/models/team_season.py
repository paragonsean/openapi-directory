# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TeamSeason(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, at_bats: float=None, balls_in_play: float=None, batting_average: float=None, batting_average_on_balls_in_play: float=None, batting_order_confirmed: bool=None, caught_stealing: float=None, double_plays: float=None, doubles: float=None, earned_run_average: float=None, errors: float=None, fantasy_points: float=None, fantasy_points_batting: float=None, fantasy_points_draft_kings: float=None, fantasy_points_fan_duel: float=None, fantasy_points_fantasy_draft: float=None, fantasy_points_pitching: float=None, fantasy_points_yahoo: float=None, fielding_independent_pitching: float=None, fly_outs: float=None, games: int=None, global_team_id: int=None, grand_slams: float=None, ground_into_double_play: float=None, ground_outs: float=None, hit_by_pitch: float=None, hits: float=None, home_runs: float=None, innings_pitched_decimal: float=None, innings_pitched_full: float=None, innings_pitched_outs: float=None, intentional_walks: float=None, isolated_power: float=None, left_on_base: float=None, line_outs: float=None, losses: float=None, name: str=None, on_base_percentage: float=None, on_base_plus_slugging: float=None, outs: float=None, pitches_seen: float=None, pitches_thrown: float=None, pitches_thrown_strikes: float=None, pitching_balls_in_play: float=None, pitching_batting_average_against: float=None, pitching_batting_average_on_balls_in_play: float=None, pitching_blown_saves: float=None, pitching_catchers_interference: float=None, pitching_complete_games: float=None, pitching_double_plays: float=None, pitching_doubles: float=None, pitching_earned_runs: float=None, pitching_fly_outs: float=None, pitching_grand_slams: float=None, pitching_ground_into_double_play: float=None, pitching_ground_outs: float=None, pitching_hit_by_pitch: float=None, pitching_hits: float=None, pitching_holds: float=None, pitching_home_runs: float=None, pitching_inning_started: int=None, pitching_intentional_walks: float=None, pitching_line_outs: float=None, pitching_no_hitters: float=None, pitching_on_base_percentage: float=None, pitching_on_base_plus_slugging: float=None, pitching_perfect_games: float=None, pitching_plate_appearances: float=None, pitching_pop_outs: float=None, pitching_quality_starts: float=None, pitching_reached_on_error: float=None, pitching_runs: float=None, pitching_sacrifice_flies: float=None, pitching_sacrifices: float=None, pitching_shut_outs: float=None, pitching_singles: float=None, pitching_slugging_percentage: float=None, pitching_strikeouts: float=None, pitching_strikeouts_per_nine_innings: float=None, pitching_total_bases: float=None, pitching_triples: float=None, pitching_walks: float=None, pitching_walks_per_nine_innings: float=None, pitching_weighted_on_base_percentage: float=None, plate_appearances: float=None, pop_outs: float=None, reached_on_error: float=None, runs: float=None, runs_batted_in: float=None, sacrifice_flies: float=None, sacrifices: float=None, saves: float=None, season: int=None, season_type: int=None, singles: float=None, slugging_percentage: float=None, stat_id: int=None, stolen_bases: float=None, strikeouts: float=None, substitute_batting_order: int=None, substitute_batting_order_sequence: int=None, team: str=None, team_id: int=None, total_bases: float=None, total_outs_pitched: float=None, triples: float=None, updated: str=None, walks: float=None, walks_hits_per_innings_pitched: float=None, weighted_on_base_percentage: float=None, wins: float=None):
        """TeamSeason - a model defined in OpenAPI

        :param at_bats: The at_bats of this TeamSeason.
        :param balls_in_play: The balls_in_play of this TeamSeason.
        :param batting_average: The batting_average of this TeamSeason.
        :param batting_average_on_balls_in_play: The batting_average_on_balls_in_play of this TeamSeason.
        :param batting_order_confirmed: The batting_order_confirmed of this TeamSeason.
        :param caught_stealing: The caught_stealing of this TeamSeason.
        :param double_plays: The double_plays of this TeamSeason.
        :param doubles: The doubles of this TeamSeason.
        :param earned_run_average: The earned_run_average of this TeamSeason.
        :param errors: The errors of this TeamSeason.
        :param fantasy_points: The fantasy_points of this TeamSeason.
        :param fantasy_points_batting: The fantasy_points_batting of this TeamSeason.
        :param fantasy_points_draft_kings: The fantasy_points_draft_kings of this TeamSeason.
        :param fantasy_points_fan_duel: The fantasy_points_fan_duel of this TeamSeason.
        :param fantasy_points_fantasy_draft: The fantasy_points_fantasy_draft of this TeamSeason.
        :param fantasy_points_pitching: The fantasy_points_pitching of this TeamSeason.
        :param fantasy_points_yahoo: The fantasy_points_yahoo of this TeamSeason.
        :param fielding_independent_pitching: The fielding_independent_pitching of this TeamSeason.
        :param fly_outs: The fly_outs of this TeamSeason.
        :param games: The games of this TeamSeason.
        :param global_team_id: The global_team_id of this TeamSeason.
        :param grand_slams: The grand_slams of this TeamSeason.
        :param ground_into_double_play: The ground_into_double_play of this TeamSeason.
        :param ground_outs: The ground_outs of this TeamSeason.
        :param hit_by_pitch: The hit_by_pitch of this TeamSeason.
        :param hits: The hits of this TeamSeason.
        :param home_runs: The home_runs of this TeamSeason.
        :param innings_pitched_decimal: The innings_pitched_decimal of this TeamSeason.
        :param innings_pitched_full: The innings_pitched_full of this TeamSeason.
        :param innings_pitched_outs: The innings_pitched_outs of this TeamSeason.
        :param intentional_walks: The intentional_walks of this TeamSeason.
        :param isolated_power: The isolated_power of this TeamSeason.
        :param left_on_base: The left_on_base of this TeamSeason.
        :param line_outs: The line_outs of this TeamSeason.
        :param losses: The losses of this TeamSeason.
        :param name: The name of this TeamSeason.
        :param on_base_percentage: The on_base_percentage of this TeamSeason.
        :param on_base_plus_slugging: The on_base_plus_slugging of this TeamSeason.
        :param outs: The outs of this TeamSeason.
        :param pitches_seen: The pitches_seen of this TeamSeason.
        :param pitches_thrown: The pitches_thrown of this TeamSeason.
        :param pitches_thrown_strikes: The pitches_thrown_strikes of this TeamSeason.
        :param pitching_balls_in_play: The pitching_balls_in_play of this TeamSeason.
        :param pitching_batting_average_against: The pitching_batting_average_against of this TeamSeason.
        :param pitching_batting_average_on_balls_in_play: The pitching_batting_average_on_balls_in_play of this TeamSeason.
        :param pitching_blown_saves: The pitching_blown_saves of this TeamSeason.
        :param pitching_catchers_interference: The pitching_catchers_interference of this TeamSeason.
        :param pitching_complete_games: The pitching_complete_games of this TeamSeason.
        :param pitching_double_plays: The pitching_double_plays of this TeamSeason.
        :param pitching_doubles: The pitching_doubles of this TeamSeason.
        :param pitching_earned_runs: The pitching_earned_runs of this TeamSeason.
        :param pitching_fly_outs: The pitching_fly_outs of this TeamSeason.
        :param pitching_grand_slams: The pitching_grand_slams of this TeamSeason.
        :param pitching_ground_into_double_play: The pitching_ground_into_double_play of this TeamSeason.
        :param pitching_ground_outs: The pitching_ground_outs of this TeamSeason.
        :param pitching_hit_by_pitch: The pitching_hit_by_pitch of this TeamSeason.
        :param pitching_hits: The pitching_hits of this TeamSeason.
        :param pitching_holds: The pitching_holds of this TeamSeason.
        :param pitching_home_runs: The pitching_home_runs of this TeamSeason.
        :param pitching_inning_started: The pitching_inning_started of this TeamSeason.
        :param pitching_intentional_walks: The pitching_intentional_walks of this TeamSeason.
        :param pitching_line_outs: The pitching_line_outs of this TeamSeason.
        :param pitching_no_hitters: The pitching_no_hitters of this TeamSeason.
        :param pitching_on_base_percentage: The pitching_on_base_percentage of this TeamSeason.
        :param pitching_on_base_plus_slugging: The pitching_on_base_plus_slugging of this TeamSeason.
        :param pitching_perfect_games: The pitching_perfect_games of this TeamSeason.
        :param pitching_plate_appearances: The pitching_plate_appearances of this TeamSeason.
        :param pitching_pop_outs: The pitching_pop_outs of this TeamSeason.
        :param pitching_quality_starts: The pitching_quality_starts of this TeamSeason.
        :param pitching_reached_on_error: The pitching_reached_on_error of this TeamSeason.
        :param pitching_runs: The pitching_runs of this TeamSeason.
        :param pitching_sacrifice_flies: The pitching_sacrifice_flies of this TeamSeason.
        :param pitching_sacrifices: The pitching_sacrifices of this TeamSeason.
        :param pitching_shut_outs: The pitching_shut_outs of this TeamSeason.
        :param pitching_singles: The pitching_singles of this TeamSeason.
        :param pitching_slugging_percentage: The pitching_slugging_percentage of this TeamSeason.
        :param pitching_strikeouts: The pitching_strikeouts of this TeamSeason.
        :param pitching_strikeouts_per_nine_innings: The pitching_strikeouts_per_nine_innings of this TeamSeason.
        :param pitching_total_bases: The pitching_total_bases of this TeamSeason.
        :param pitching_triples: The pitching_triples of this TeamSeason.
        :param pitching_walks: The pitching_walks of this TeamSeason.
        :param pitching_walks_per_nine_innings: The pitching_walks_per_nine_innings of this TeamSeason.
        :param pitching_weighted_on_base_percentage: The pitching_weighted_on_base_percentage of this TeamSeason.
        :param plate_appearances: The plate_appearances of this TeamSeason.
        :param pop_outs: The pop_outs of this TeamSeason.
        :param reached_on_error: The reached_on_error of this TeamSeason.
        :param runs: The runs of this TeamSeason.
        :param runs_batted_in: The runs_batted_in of this TeamSeason.
        :param sacrifice_flies: The sacrifice_flies of this TeamSeason.
        :param sacrifices: The sacrifices of this TeamSeason.
        :param saves: The saves of this TeamSeason.
        :param season: The season of this TeamSeason.
        :param season_type: The season_type of this TeamSeason.
        :param singles: The singles of this TeamSeason.
        :param slugging_percentage: The slugging_percentage of this TeamSeason.
        :param stat_id: The stat_id of this TeamSeason.
        :param stolen_bases: The stolen_bases of this TeamSeason.
        :param strikeouts: The strikeouts of this TeamSeason.
        :param substitute_batting_order: The substitute_batting_order of this TeamSeason.
        :param substitute_batting_order_sequence: The substitute_batting_order_sequence of this TeamSeason.
        :param team: The team of this TeamSeason.
        :param team_id: The team_id of this TeamSeason.
        :param total_bases: The total_bases of this TeamSeason.
        :param total_outs_pitched: The total_outs_pitched of this TeamSeason.
        :param triples: The triples of this TeamSeason.
        :param updated: The updated of this TeamSeason.
        :param walks: The walks of this TeamSeason.
        :param walks_hits_per_innings_pitched: The walks_hits_per_innings_pitched of this TeamSeason.
        :param weighted_on_base_percentage: The weighted_on_base_percentage of this TeamSeason.
        :param wins: The wins of this TeamSeason.
        """
        self.openapi_types = {
            'at_bats': float,
            'balls_in_play': float,
            'batting_average': float,
            'batting_average_on_balls_in_play': float,
            'batting_order_confirmed': bool,
            'caught_stealing': float,
            'double_plays': float,
            'doubles': float,
            'earned_run_average': float,
            'errors': float,
            'fantasy_points': float,
            'fantasy_points_batting': float,
            'fantasy_points_draft_kings': float,
            'fantasy_points_fan_duel': float,
            'fantasy_points_fantasy_draft': float,
            'fantasy_points_pitching': float,
            'fantasy_points_yahoo': float,
            'fielding_independent_pitching': float,
            'fly_outs': float,
            'games': int,
            'global_team_id': int,
            'grand_slams': float,
            'ground_into_double_play': float,
            'ground_outs': float,
            'hit_by_pitch': float,
            'hits': float,
            'home_runs': float,
            'innings_pitched_decimal': float,
            'innings_pitched_full': float,
            'innings_pitched_outs': float,
            'intentional_walks': float,
            'isolated_power': float,
            'left_on_base': float,
            'line_outs': float,
            'losses': float,
            'name': str,
            'on_base_percentage': float,
            'on_base_plus_slugging': float,
            'outs': float,
            'pitches_seen': float,
            'pitches_thrown': float,
            'pitches_thrown_strikes': float,
            'pitching_balls_in_play': float,
            'pitching_batting_average_against': float,
            'pitching_batting_average_on_balls_in_play': float,
            'pitching_blown_saves': float,
            'pitching_catchers_interference': float,
            'pitching_complete_games': float,
            'pitching_double_plays': float,
            'pitching_doubles': float,
            'pitching_earned_runs': float,
            'pitching_fly_outs': float,
            'pitching_grand_slams': float,
            'pitching_ground_into_double_play': float,
            'pitching_ground_outs': float,
            'pitching_hit_by_pitch': float,
            'pitching_hits': float,
            'pitching_holds': float,
            'pitching_home_runs': float,
            'pitching_inning_started': int,
            'pitching_intentional_walks': float,
            'pitching_line_outs': float,
            'pitching_no_hitters': float,
            'pitching_on_base_percentage': float,
            'pitching_on_base_plus_slugging': float,
            'pitching_perfect_games': float,
            'pitching_plate_appearances': float,
            'pitching_pop_outs': float,
            'pitching_quality_starts': float,
            'pitching_reached_on_error': float,
            'pitching_runs': float,
            'pitching_sacrifice_flies': float,
            'pitching_sacrifices': float,
            'pitching_shut_outs': float,
            'pitching_singles': float,
            'pitching_slugging_percentage': float,
            'pitching_strikeouts': float,
            'pitching_strikeouts_per_nine_innings': float,
            'pitching_total_bases': float,
            'pitching_triples': float,
            'pitching_walks': float,
            'pitching_walks_per_nine_innings': float,
            'pitching_weighted_on_base_percentage': float,
            'plate_appearances': float,
            'pop_outs': float,
            'reached_on_error': float,
            'runs': float,
            'runs_batted_in': float,
            'sacrifice_flies': float,
            'sacrifices': float,
            'saves': float,
            'season': int,
            'season_type': int,
            'singles': float,
            'slugging_percentage': float,
            'stat_id': int,
            'stolen_bases': float,
            'strikeouts': float,
            'substitute_batting_order': int,
            'substitute_batting_order_sequence': int,
            'team': str,
            'team_id': int,
            'total_bases': float,
            'total_outs_pitched': float,
            'triples': float,
            'updated': str,
            'walks': float,
            'walks_hits_per_innings_pitched': float,
            'weighted_on_base_percentage': float,
            'wins': float
        }

        self.attribute_map = {
            'at_bats': 'AtBats',
            'balls_in_play': 'BallsInPlay',
            'batting_average': 'BattingAverage',
            'batting_average_on_balls_in_play': 'BattingAverageOnBallsInPlay',
            'batting_order_confirmed': 'BattingOrderConfirmed',
            'caught_stealing': 'CaughtStealing',
            'double_plays': 'DoublePlays',
            'doubles': 'Doubles',
            'earned_run_average': 'EarnedRunAverage',
            'errors': 'Errors',
            'fantasy_points': 'FantasyPoints',
            'fantasy_points_batting': 'FantasyPointsBatting',
            'fantasy_points_draft_kings': 'FantasyPointsDraftKings',
            'fantasy_points_fan_duel': 'FantasyPointsFanDuel',
            'fantasy_points_fantasy_draft': 'FantasyPointsFantasyDraft',
            'fantasy_points_pitching': 'FantasyPointsPitching',
            'fantasy_points_yahoo': 'FantasyPointsYahoo',
            'fielding_independent_pitching': 'FieldingIndependentPitching',
            'fly_outs': 'FlyOuts',
            'games': 'Games',
            'global_team_id': 'GlobalTeamID',
            'grand_slams': 'GrandSlams',
            'ground_into_double_play': 'GroundIntoDoublePlay',
            'ground_outs': 'GroundOuts',
            'hit_by_pitch': 'HitByPitch',
            'hits': 'Hits',
            'home_runs': 'HomeRuns',
            'innings_pitched_decimal': 'InningsPitchedDecimal',
            'innings_pitched_full': 'InningsPitchedFull',
            'innings_pitched_outs': 'InningsPitchedOuts',
            'intentional_walks': 'IntentionalWalks',
            'isolated_power': 'IsolatedPower',
            'left_on_base': 'LeftOnBase',
            'line_outs': 'LineOuts',
            'losses': 'Losses',
            'name': 'Name',
            'on_base_percentage': 'OnBasePercentage',
            'on_base_plus_slugging': 'OnBasePlusSlugging',
            'outs': 'Outs',
            'pitches_seen': 'PitchesSeen',
            'pitches_thrown': 'PitchesThrown',
            'pitches_thrown_strikes': 'PitchesThrownStrikes',
            'pitching_balls_in_play': 'PitchingBallsInPlay',
            'pitching_batting_average_against': 'PitchingBattingAverageAgainst',
            'pitching_batting_average_on_balls_in_play': 'PitchingBattingAverageOnBallsInPlay',
            'pitching_blown_saves': 'PitchingBlownSaves',
            'pitching_catchers_interference': 'PitchingCatchersInterference',
            'pitching_complete_games': 'PitchingCompleteGames',
            'pitching_double_plays': 'PitchingDoublePlays',
            'pitching_doubles': 'PitchingDoubles',
            'pitching_earned_runs': 'PitchingEarnedRuns',
            'pitching_fly_outs': 'PitchingFlyOuts',
            'pitching_grand_slams': 'PitchingGrandSlams',
            'pitching_ground_into_double_play': 'PitchingGroundIntoDoublePlay',
            'pitching_ground_outs': 'PitchingGroundOuts',
            'pitching_hit_by_pitch': 'PitchingHitByPitch',
            'pitching_hits': 'PitchingHits',
            'pitching_holds': 'PitchingHolds',
            'pitching_home_runs': 'PitchingHomeRuns',
            'pitching_inning_started': 'PitchingInningStarted',
            'pitching_intentional_walks': 'PitchingIntentionalWalks',
            'pitching_line_outs': 'PitchingLineOuts',
            'pitching_no_hitters': 'PitchingNoHitters',
            'pitching_on_base_percentage': 'PitchingOnBasePercentage',
            'pitching_on_base_plus_slugging': 'PitchingOnBasePlusSlugging',
            'pitching_perfect_games': 'PitchingPerfectGames',
            'pitching_plate_appearances': 'PitchingPlateAppearances',
            'pitching_pop_outs': 'PitchingPopOuts',
            'pitching_quality_starts': 'PitchingQualityStarts',
            'pitching_reached_on_error': 'PitchingReachedOnError',
            'pitching_runs': 'PitchingRuns',
            'pitching_sacrifice_flies': 'PitchingSacrificeFlies',
            'pitching_sacrifices': 'PitchingSacrifices',
            'pitching_shut_outs': 'PitchingShutOuts',
            'pitching_singles': 'PitchingSingles',
            'pitching_slugging_percentage': 'PitchingSluggingPercentage',
            'pitching_strikeouts': 'PitchingStrikeouts',
            'pitching_strikeouts_per_nine_innings': 'PitchingStrikeoutsPerNineInnings',
            'pitching_total_bases': 'PitchingTotalBases',
            'pitching_triples': 'PitchingTriples',
            'pitching_walks': 'PitchingWalks',
            'pitching_walks_per_nine_innings': 'PitchingWalksPerNineInnings',
            'pitching_weighted_on_base_percentage': 'PitchingWeightedOnBasePercentage',
            'plate_appearances': 'PlateAppearances',
            'pop_outs': 'PopOuts',
            'reached_on_error': 'ReachedOnError',
            'runs': 'Runs',
            'runs_batted_in': 'RunsBattedIn',
            'sacrifice_flies': 'SacrificeFlies',
            'sacrifices': 'Sacrifices',
            'saves': 'Saves',
            'season': 'Season',
            'season_type': 'SeasonType',
            'singles': 'Singles',
            'slugging_percentage': 'SluggingPercentage',
            'stat_id': 'StatID',
            'stolen_bases': 'StolenBases',
            'strikeouts': 'Strikeouts',
            'substitute_batting_order': 'SubstituteBattingOrder',
            'substitute_batting_order_sequence': 'SubstituteBattingOrderSequence',
            'team': 'Team',
            'team_id': 'TeamID',
            'total_bases': 'TotalBases',
            'total_outs_pitched': 'TotalOutsPitched',
            'triples': 'Triples',
            'updated': 'Updated',
            'walks': 'Walks',
            'walks_hits_per_innings_pitched': 'WalksHitsPerInningsPitched',
            'weighted_on_base_percentage': 'WeightedOnBasePercentage',
            'wins': 'Wins'
        }

        self._at_bats = at_bats
        self._balls_in_play = balls_in_play
        self._batting_average = batting_average
        self._batting_average_on_balls_in_play = batting_average_on_balls_in_play
        self._batting_order_confirmed = batting_order_confirmed
        self._caught_stealing = caught_stealing
        self._double_plays = double_plays
        self._doubles = doubles
        self._earned_run_average = earned_run_average
        self._errors = errors
        self._fantasy_points = fantasy_points
        self._fantasy_points_batting = fantasy_points_batting
        self._fantasy_points_draft_kings = fantasy_points_draft_kings
        self._fantasy_points_fan_duel = fantasy_points_fan_duel
        self._fantasy_points_fantasy_draft = fantasy_points_fantasy_draft
        self._fantasy_points_pitching = fantasy_points_pitching
        self._fantasy_points_yahoo = fantasy_points_yahoo
        self._fielding_independent_pitching = fielding_independent_pitching
        self._fly_outs = fly_outs
        self._games = games
        self._global_team_id = global_team_id
        self._grand_slams = grand_slams
        self._ground_into_double_play = ground_into_double_play
        self._ground_outs = ground_outs
        self._hit_by_pitch = hit_by_pitch
        self._hits = hits
        self._home_runs = home_runs
        self._innings_pitched_decimal = innings_pitched_decimal
        self._innings_pitched_full = innings_pitched_full
        self._innings_pitched_outs = innings_pitched_outs
        self._intentional_walks = intentional_walks
        self._isolated_power = isolated_power
        self._left_on_base = left_on_base
        self._line_outs = line_outs
        self._losses = losses
        self._name = name
        self._on_base_percentage = on_base_percentage
        self._on_base_plus_slugging = on_base_plus_slugging
        self._outs = outs
        self._pitches_seen = pitches_seen
        self._pitches_thrown = pitches_thrown
        self._pitches_thrown_strikes = pitches_thrown_strikes
        self._pitching_balls_in_play = pitching_balls_in_play
        self._pitching_batting_average_against = pitching_batting_average_against
        self._pitching_batting_average_on_balls_in_play = pitching_batting_average_on_balls_in_play
        self._pitching_blown_saves = pitching_blown_saves
        self._pitching_catchers_interference = pitching_catchers_interference
        self._pitching_complete_games = pitching_complete_games
        self._pitching_double_plays = pitching_double_plays
        self._pitching_doubles = pitching_doubles
        self._pitching_earned_runs = pitching_earned_runs
        self._pitching_fly_outs = pitching_fly_outs
        self._pitching_grand_slams = pitching_grand_slams
        self._pitching_ground_into_double_play = pitching_ground_into_double_play
        self._pitching_ground_outs = pitching_ground_outs
        self._pitching_hit_by_pitch = pitching_hit_by_pitch
        self._pitching_hits = pitching_hits
        self._pitching_holds = pitching_holds
        self._pitching_home_runs = pitching_home_runs
        self._pitching_inning_started = pitching_inning_started
        self._pitching_intentional_walks = pitching_intentional_walks
        self._pitching_line_outs = pitching_line_outs
        self._pitching_no_hitters = pitching_no_hitters
        self._pitching_on_base_percentage = pitching_on_base_percentage
        self._pitching_on_base_plus_slugging = pitching_on_base_plus_slugging
        self._pitching_perfect_games = pitching_perfect_games
        self._pitching_plate_appearances = pitching_plate_appearances
        self._pitching_pop_outs = pitching_pop_outs
        self._pitching_quality_starts = pitching_quality_starts
        self._pitching_reached_on_error = pitching_reached_on_error
        self._pitching_runs = pitching_runs
        self._pitching_sacrifice_flies = pitching_sacrifice_flies
        self._pitching_sacrifices = pitching_sacrifices
        self._pitching_shut_outs = pitching_shut_outs
        self._pitching_singles = pitching_singles
        self._pitching_slugging_percentage = pitching_slugging_percentage
        self._pitching_strikeouts = pitching_strikeouts
        self._pitching_strikeouts_per_nine_innings = pitching_strikeouts_per_nine_innings
        self._pitching_total_bases = pitching_total_bases
        self._pitching_triples = pitching_triples
        self._pitching_walks = pitching_walks
        self._pitching_walks_per_nine_innings = pitching_walks_per_nine_innings
        self._pitching_weighted_on_base_percentage = pitching_weighted_on_base_percentage
        self._plate_appearances = plate_appearances
        self._pop_outs = pop_outs
        self._reached_on_error = reached_on_error
        self._runs = runs
        self._runs_batted_in = runs_batted_in
        self._sacrifice_flies = sacrifice_flies
        self._sacrifices = sacrifices
        self._saves = saves
        self._season = season
        self._season_type = season_type
        self._singles = singles
        self._slugging_percentage = slugging_percentage
        self._stat_id = stat_id
        self._stolen_bases = stolen_bases
        self._strikeouts = strikeouts
        self._substitute_batting_order = substitute_batting_order
        self._substitute_batting_order_sequence = substitute_batting_order_sequence
        self._team = team
        self._team_id = team_id
        self._total_bases = total_bases
        self._total_outs_pitched = total_outs_pitched
        self._triples = triples
        self._updated = updated
        self._walks = walks
        self._walks_hits_per_innings_pitched = walks_hits_per_innings_pitched
        self._weighted_on_base_percentage = weighted_on_base_percentage
        self._wins = wins

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TeamSeason':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TeamSeason of this TeamSeason.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def at_bats(self):
        """Gets the at_bats of this TeamSeason.


        :return: The at_bats of this TeamSeason.
        :rtype: float
        """
        return self._at_bats

    @at_bats.setter
    def at_bats(self, at_bats):
        """Sets the at_bats of this TeamSeason.


        :param at_bats: The at_bats of this TeamSeason.
        :type at_bats: float
        """

        self._at_bats = at_bats

    @property
    def balls_in_play(self):
        """Gets the balls_in_play of this TeamSeason.


        :return: The balls_in_play of this TeamSeason.
        :rtype: float
        """
        return self._balls_in_play

    @balls_in_play.setter
    def balls_in_play(self, balls_in_play):
        """Sets the balls_in_play of this TeamSeason.


        :param balls_in_play: The balls_in_play of this TeamSeason.
        :type balls_in_play: float
        """

        self._balls_in_play = balls_in_play

    @property
    def batting_average(self):
        """Gets the batting_average of this TeamSeason.


        :return: The batting_average of this TeamSeason.
        :rtype: float
        """
        return self._batting_average

    @batting_average.setter
    def batting_average(self, batting_average):
        """Sets the batting_average of this TeamSeason.


        :param batting_average: The batting_average of this TeamSeason.
        :type batting_average: float
        """

        self._batting_average = batting_average

    @property
    def batting_average_on_balls_in_play(self):
        """Gets the batting_average_on_balls_in_play of this TeamSeason.


        :return: The batting_average_on_balls_in_play of this TeamSeason.
        :rtype: float
        """
        return self._batting_average_on_balls_in_play

    @batting_average_on_balls_in_play.setter
    def batting_average_on_balls_in_play(self, batting_average_on_balls_in_play):
        """Sets the batting_average_on_balls_in_play of this TeamSeason.


        :param batting_average_on_balls_in_play: The batting_average_on_balls_in_play of this TeamSeason.
        :type batting_average_on_balls_in_play: float
        """

        self._batting_average_on_balls_in_play = batting_average_on_balls_in_play

    @property
    def batting_order_confirmed(self):
        """Gets the batting_order_confirmed of this TeamSeason.


        :return: The batting_order_confirmed of this TeamSeason.
        :rtype: bool
        """
        return self._batting_order_confirmed

    @batting_order_confirmed.setter
    def batting_order_confirmed(self, batting_order_confirmed):
        """Sets the batting_order_confirmed of this TeamSeason.


        :param batting_order_confirmed: The batting_order_confirmed of this TeamSeason.
        :type batting_order_confirmed: bool
        """

        self._batting_order_confirmed = batting_order_confirmed

    @property
    def caught_stealing(self):
        """Gets the caught_stealing of this TeamSeason.


        :return: The caught_stealing of this TeamSeason.
        :rtype: float
        """
        return self._caught_stealing

    @caught_stealing.setter
    def caught_stealing(self, caught_stealing):
        """Sets the caught_stealing of this TeamSeason.


        :param caught_stealing: The caught_stealing of this TeamSeason.
        :type caught_stealing: float
        """

        self._caught_stealing = caught_stealing

    @property
    def double_plays(self):
        """Gets the double_plays of this TeamSeason.


        :return: The double_plays of this TeamSeason.
        :rtype: float
        """
        return self._double_plays

    @double_plays.setter
    def double_plays(self, double_plays):
        """Sets the double_plays of this TeamSeason.


        :param double_plays: The double_plays of this TeamSeason.
        :type double_plays: float
        """

        self._double_plays = double_plays

    @property
    def doubles(self):
        """Gets the doubles of this TeamSeason.


        :return: The doubles of this TeamSeason.
        :rtype: float
        """
        return self._doubles

    @doubles.setter
    def doubles(self, doubles):
        """Sets the doubles of this TeamSeason.


        :param doubles: The doubles of this TeamSeason.
        :type doubles: float
        """

        self._doubles = doubles

    @property
    def earned_run_average(self):
        """Gets the earned_run_average of this TeamSeason.


        :return: The earned_run_average of this TeamSeason.
        :rtype: float
        """
        return self._earned_run_average

    @earned_run_average.setter
    def earned_run_average(self, earned_run_average):
        """Sets the earned_run_average of this TeamSeason.


        :param earned_run_average: The earned_run_average of this TeamSeason.
        :type earned_run_average: float
        """

        self._earned_run_average = earned_run_average

    @property
    def errors(self):
        """Gets the errors of this TeamSeason.


        :return: The errors of this TeamSeason.
        :rtype: float
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this TeamSeason.


        :param errors: The errors of this TeamSeason.
        :type errors: float
        """

        self._errors = errors

    @property
    def fantasy_points(self):
        """Gets the fantasy_points of this TeamSeason.


        :return: The fantasy_points of this TeamSeason.
        :rtype: float
        """
        return self._fantasy_points

    @fantasy_points.setter
    def fantasy_points(self, fantasy_points):
        """Sets the fantasy_points of this TeamSeason.


        :param fantasy_points: The fantasy_points of this TeamSeason.
        :type fantasy_points: float
        """

        self._fantasy_points = fantasy_points

    @property
    def fantasy_points_batting(self):
        """Gets the fantasy_points_batting of this TeamSeason.


        :return: The fantasy_points_batting of this TeamSeason.
        :rtype: float
        """
        return self._fantasy_points_batting

    @fantasy_points_batting.setter
    def fantasy_points_batting(self, fantasy_points_batting):
        """Sets the fantasy_points_batting of this TeamSeason.


        :param fantasy_points_batting: The fantasy_points_batting of this TeamSeason.
        :type fantasy_points_batting: float
        """

        self._fantasy_points_batting = fantasy_points_batting

    @property
    def fantasy_points_draft_kings(self):
        """Gets the fantasy_points_draft_kings of this TeamSeason.


        :return: The fantasy_points_draft_kings of this TeamSeason.
        :rtype: float
        """
        return self._fantasy_points_draft_kings

    @fantasy_points_draft_kings.setter
    def fantasy_points_draft_kings(self, fantasy_points_draft_kings):
        """Sets the fantasy_points_draft_kings of this TeamSeason.


        :param fantasy_points_draft_kings: The fantasy_points_draft_kings of this TeamSeason.
        :type fantasy_points_draft_kings: float
        """

        self._fantasy_points_draft_kings = fantasy_points_draft_kings

    @property
    def fantasy_points_fan_duel(self):
        """Gets the fantasy_points_fan_duel of this TeamSeason.


        :return: The fantasy_points_fan_duel of this TeamSeason.
        :rtype: float
        """
        return self._fantasy_points_fan_duel

    @fantasy_points_fan_duel.setter
    def fantasy_points_fan_duel(self, fantasy_points_fan_duel):
        """Sets the fantasy_points_fan_duel of this TeamSeason.


        :param fantasy_points_fan_duel: The fantasy_points_fan_duel of this TeamSeason.
        :type fantasy_points_fan_duel: float
        """

        self._fantasy_points_fan_duel = fantasy_points_fan_duel

    @property
    def fantasy_points_fantasy_draft(self):
        """Gets the fantasy_points_fantasy_draft of this TeamSeason.


        :return: The fantasy_points_fantasy_draft of this TeamSeason.
        :rtype: float
        """
        return self._fantasy_points_fantasy_draft

    @fantasy_points_fantasy_draft.setter
    def fantasy_points_fantasy_draft(self, fantasy_points_fantasy_draft):
        """Sets the fantasy_points_fantasy_draft of this TeamSeason.


        :param fantasy_points_fantasy_draft: The fantasy_points_fantasy_draft of this TeamSeason.
        :type fantasy_points_fantasy_draft: float
        """

        self._fantasy_points_fantasy_draft = fantasy_points_fantasy_draft

    @property
    def fantasy_points_pitching(self):
        """Gets the fantasy_points_pitching of this TeamSeason.


        :return: The fantasy_points_pitching of this TeamSeason.
        :rtype: float
        """
        return self._fantasy_points_pitching

    @fantasy_points_pitching.setter
    def fantasy_points_pitching(self, fantasy_points_pitching):
        """Sets the fantasy_points_pitching of this TeamSeason.


        :param fantasy_points_pitching: The fantasy_points_pitching of this TeamSeason.
        :type fantasy_points_pitching: float
        """

        self._fantasy_points_pitching = fantasy_points_pitching

    @property
    def fantasy_points_yahoo(self):
        """Gets the fantasy_points_yahoo of this TeamSeason.


        :return: The fantasy_points_yahoo of this TeamSeason.
        :rtype: float
        """
        return self._fantasy_points_yahoo

    @fantasy_points_yahoo.setter
    def fantasy_points_yahoo(self, fantasy_points_yahoo):
        """Sets the fantasy_points_yahoo of this TeamSeason.


        :param fantasy_points_yahoo: The fantasy_points_yahoo of this TeamSeason.
        :type fantasy_points_yahoo: float
        """

        self._fantasy_points_yahoo = fantasy_points_yahoo

    @property
    def fielding_independent_pitching(self):
        """Gets the fielding_independent_pitching of this TeamSeason.


        :return: The fielding_independent_pitching of this TeamSeason.
        :rtype: float
        """
        return self._fielding_independent_pitching

    @fielding_independent_pitching.setter
    def fielding_independent_pitching(self, fielding_independent_pitching):
        """Sets the fielding_independent_pitching of this TeamSeason.


        :param fielding_independent_pitching: The fielding_independent_pitching of this TeamSeason.
        :type fielding_independent_pitching: float
        """

        self._fielding_independent_pitching = fielding_independent_pitching

    @property
    def fly_outs(self):
        """Gets the fly_outs of this TeamSeason.


        :return: The fly_outs of this TeamSeason.
        :rtype: float
        """
        return self._fly_outs

    @fly_outs.setter
    def fly_outs(self, fly_outs):
        """Sets the fly_outs of this TeamSeason.


        :param fly_outs: The fly_outs of this TeamSeason.
        :type fly_outs: float
        """

        self._fly_outs = fly_outs

    @property
    def games(self):
        """Gets the games of this TeamSeason.


        :return: The games of this TeamSeason.
        :rtype: int
        """
        return self._games

    @games.setter
    def games(self, games):
        """Sets the games of this TeamSeason.


        :param games: The games of this TeamSeason.
        :type games: int
        """

        self._games = games

    @property
    def global_team_id(self):
        """Gets the global_team_id of this TeamSeason.


        :return: The global_team_id of this TeamSeason.
        :rtype: int
        """
        return self._global_team_id

    @global_team_id.setter
    def global_team_id(self, global_team_id):
        """Sets the global_team_id of this TeamSeason.


        :param global_team_id: The global_team_id of this TeamSeason.
        :type global_team_id: int
        """

        self._global_team_id = global_team_id

    @property
    def grand_slams(self):
        """Gets the grand_slams of this TeamSeason.


        :return: The grand_slams of this TeamSeason.
        :rtype: float
        """
        return self._grand_slams

    @grand_slams.setter
    def grand_slams(self, grand_slams):
        """Sets the grand_slams of this TeamSeason.


        :param grand_slams: The grand_slams of this TeamSeason.
        :type grand_slams: float
        """

        self._grand_slams = grand_slams

    @property
    def ground_into_double_play(self):
        """Gets the ground_into_double_play of this TeamSeason.


        :return: The ground_into_double_play of this TeamSeason.
        :rtype: float
        """
        return self._ground_into_double_play

    @ground_into_double_play.setter
    def ground_into_double_play(self, ground_into_double_play):
        """Sets the ground_into_double_play of this TeamSeason.


        :param ground_into_double_play: The ground_into_double_play of this TeamSeason.
        :type ground_into_double_play: float
        """

        self._ground_into_double_play = ground_into_double_play

    @property
    def ground_outs(self):
        """Gets the ground_outs of this TeamSeason.


        :return: The ground_outs of this TeamSeason.
        :rtype: float
        """
        return self._ground_outs

    @ground_outs.setter
    def ground_outs(self, ground_outs):
        """Sets the ground_outs of this TeamSeason.


        :param ground_outs: The ground_outs of this TeamSeason.
        :type ground_outs: float
        """

        self._ground_outs = ground_outs

    @property
    def hit_by_pitch(self):
        """Gets the hit_by_pitch of this TeamSeason.


        :return: The hit_by_pitch of this TeamSeason.
        :rtype: float
        """
        return self._hit_by_pitch

    @hit_by_pitch.setter
    def hit_by_pitch(self, hit_by_pitch):
        """Sets the hit_by_pitch of this TeamSeason.


        :param hit_by_pitch: The hit_by_pitch of this TeamSeason.
        :type hit_by_pitch: float
        """

        self._hit_by_pitch = hit_by_pitch

    @property
    def hits(self):
        """Gets the hits of this TeamSeason.


        :return: The hits of this TeamSeason.
        :rtype: float
        """
        return self._hits

    @hits.setter
    def hits(self, hits):
        """Sets the hits of this TeamSeason.


        :param hits: The hits of this TeamSeason.
        :type hits: float
        """

        self._hits = hits

    @property
    def home_runs(self):
        """Gets the home_runs of this TeamSeason.


        :return: The home_runs of this TeamSeason.
        :rtype: float
        """
        return self._home_runs

    @home_runs.setter
    def home_runs(self, home_runs):
        """Sets the home_runs of this TeamSeason.


        :param home_runs: The home_runs of this TeamSeason.
        :type home_runs: float
        """

        self._home_runs = home_runs

    @property
    def innings_pitched_decimal(self):
        """Gets the innings_pitched_decimal of this TeamSeason.


        :return: The innings_pitched_decimal of this TeamSeason.
        :rtype: float
        """
        return self._innings_pitched_decimal

    @innings_pitched_decimal.setter
    def innings_pitched_decimal(self, innings_pitched_decimal):
        """Sets the innings_pitched_decimal of this TeamSeason.


        :param innings_pitched_decimal: The innings_pitched_decimal of this TeamSeason.
        :type innings_pitched_decimal: float
        """

        self._innings_pitched_decimal = innings_pitched_decimal

    @property
    def innings_pitched_full(self):
        """Gets the innings_pitched_full of this TeamSeason.


        :return: The innings_pitched_full of this TeamSeason.
        :rtype: float
        """
        return self._innings_pitched_full

    @innings_pitched_full.setter
    def innings_pitched_full(self, innings_pitched_full):
        """Sets the innings_pitched_full of this TeamSeason.


        :param innings_pitched_full: The innings_pitched_full of this TeamSeason.
        :type innings_pitched_full: float
        """

        self._innings_pitched_full = innings_pitched_full

    @property
    def innings_pitched_outs(self):
        """Gets the innings_pitched_outs of this TeamSeason.


        :return: The innings_pitched_outs of this TeamSeason.
        :rtype: float
        """
        return self._innings_pitched_outs

    @innings_pitched_outs.setter
    def innings_pitched_outs(self, innings_pitched_outs):
        """Sets the innings_pitched_outs of this TeamSeason.


        :param innings_pitched_outs: The innings_pitched_outs of this TeamSeason.
        :type innings_pitched_outs: float
        """

        self._innings_pitched_outs = innings_pitched_outs

    @property
    def intentional_walks(self):
        """Gets the intentional_walks of this TeamSeason.


        :return: The intentional_walks of this TeamSeason.
        :rtype: float
        """
        return self._intentional_walks

    @intentional_walks.setter
    def intentional_walks(self, intentional_walks):
        """Sets the intentional_walks of this TeamSeason.


        :param intentional_walks: The intentional_walks of this TeamSeason.
        :type intentional_walks: float
        """

        self._intentional_walks = intentional_walks

    @property
    def isolated_power(self):
        """Gets the isolated_power of this TeamSeason.


        :return: The isolated_power of this TeamSeason.
        :rtype: float
        """
        return self._isolated_power

    @isolated_power.setter
    def isolated_power(self, isolated_power):
        """Sets the isolated_power of this TeamSeason.


        :param isolated_power: The isolated_power of this TeamSeason.
        :type isolated_power: float
        """

        self._isolated_power = isolated_power

    @property
    def left_on_base(self):
        """Gets the left_on_base of this TeamSeason.


        :return: The left_on_base of this TeamSeason.
        :rtype: float
        """
        return self._left_on_base

    @left_on_base.setter
    def left_on_base(self, left_on_base):
        """Sets the left_on_base of this TeamSeason.


        :param left_on_base: The left_on_base of this TeamSeason.
        :type left_on_base: float
        """

        self._left_on_base = left_on_base

    @property
    def line_outs(self):
        """Gets the line_outs of this TeamSeason.


        :return: The line_outs of this TeamSeason.
        :rtype: float
        """
        return self._line_outs

    @line_outs.setter
    def line_outs(self, line_outs):
        """Sets the line_outs of this TeamSeason.


        :param line_outs: The line_outs of this TeamSeason.
        :type line_outs: float
        """

        self._line_outs = line_outs

    @property
    def losses(self):
        """Gets the losses of this TeamSeason.


        :return: The losses of this TeamSeason.
        :rtype: float
        """
        return self._losses

    @losses.setter
    def losses(self, losses):
        """Sets the losses of this TeamSeason.


        :param losses: The losses of this TeamSeason.
        :type losses: float
        """

        self._losses = losses

    @property
    def name(self):
        """Gets the name of this TeamSeason.


        :return: The name of this TeamSeason.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this TeamSeason.


        :param name: The name of this TeamSeason.
        :type name: str
        """

        self._name = name

    @property
    def on_base_percentage(self):
        """Gets the on_base_percentage of this TeamSeason.


        :return: The on_base_percentage of this TeamSeason.
        :rtype: float
        """
        return self._on_base_percentage

    @on_base_percentage.setter
    def on_base_percentage(self, on_base_percentage):
        """Sets the on_base_percentage of this TeamSeason.


        :param on_base_percentage: The on_base_percentage of this TeamSeason.
        :type on_base_percentage: float
        """

        self._on_base_percentage = on_base_percentage

    @property
    def on_base_plus_slugging(self):
        """Gets the on_base_plus_slugging of this TeamSeason.


        :return: The on_base_plus_slugging of this TeamSeason.
        :rtype: float
        """
        return self._on_base_plus_slugging

    @on_base_plus_slugging.setter
    def on_base_plus_slugging(self, on_base_plus_slugging):
        """Sets the on_base_plus_slugging of this TeamSeason.


        :param on_base_plus_slugging: The on_base_plus_slugging of this TeamSeason.
        :type on_base_plus_slugging: float
        """

        self._on_base_plus_slugging = on_base_plus_slugging

    @property
    def outs(self):
        """Gets the outs of this TeamSeason.


        :return: The outs of this TeamSeason.
        :rtype: float
        """
        return self._outs

    @outs.setter
    def outs(self, outs):
        """Sets the outs of this TeamSeason.


        :param outs: The outs of this TeamSeason.
        :type outs: float
        """

        self._outs = outs

    @property
    def pitches_seen(self):
        """Gets the pitches_seen of this TeamSeason.


        :return: The pitches_seen of this TeamSeason.
        :rtype: float
        """
        return self._pitches_seen

    @pitches_seen.setter
    def pitches_seen(self, pitches_seen):
        """Sets the pitches_seen of this TeamSeason.


        :param pitches_seen: The pitches_seen of this TeamSeason.
        :type pitches_seen: float
        """

        self._pitches_seen = pitches_seen

    @property
    def pitches_thrown(self):
        """Gets the pitches_thrown of this TeamSeason.


        :return: The pitches_thrown of this TeamSeason.
        :rtype: float
        """
        return self._pitches_thrown

    @pitches_thrown.setter
    def pitches_thrown(self, pitches_thrown):
        """Sets the pitches_thrown of this TeamSeason.


        :param pitches_thrown: The pitches_thrown of this TeamSeason.
        :type pitches_thrown: float
        """

        self._pitches_thrown = pitches_thrown

    @property
    def pitches_thrown_strikes(self):
        """Gets the pitches_thrown_strikes of this TeamSeason.


        :return: The pitches_thrown_strikes of this TeamSeason.
        :rtype: float
        """
        return self._pitches_thrown_strikes

    @pitches_thrown_strikes.setter
    def pitches_thrown_strikes(self, pitches_thrown_strikes):
        """Sets the pitches_thrown_strikes of this TeamSeason.


        :param pitches_thrown_strikes: The pitches_thrown_strikes of this TeamSeason.
        :type pitches_thrown_strikes: float
        """

        self._pitches_thrown_strikes = pitches_thrown_strikes

    @property
    def pitching_balls_in_play(self):
        """Gets the pitching_balls_in_play of this TeamSeason.


        :return: The pitching_balls_in_play of this TeamSeason.
        :rtype: float
        """
        return self._pitching_balls_in_play

    @pitching_balls_in_play.setter
    def pitching_balls_in_play(self, pitching_balls_in_play):
        """Sets the pitching_balls_in_play of this TeamSeason.


        :param pitching_balls_in_play: The pitching_balls_in_play of this TeamSeason.
        :type pitching_balls_in_play: float
        """

        self._pitching_balls_in_play = pitching_balls_in_play

    @property
    def pitching_batting_average_against(self):
        """Gets the pitching_batting_average_against of this TeamSeason.


        :return: The pitching_batting_average_against of this TeamSeason.
        :rtype: float
        """
        return self._pitching_batting_average_against

    @pitching_batting_average_against.setter
    def pitching_batting_average_against(self, pitching_batting_average_against):
        """Sets the pitching_batting_average_against of this TeamSeason.


        :param pitching_batting_average_against: The pitching_batting_average_against of this TeamSeason.
        :type pitching_batting_average_against: float
        """

        self._pitching_batting_average_against = pitching_batting_average_against

    @property
    def pitching_batting_average_on_balls_in_play(self):
        """Gets the pitching_batting_average_on_balls_in_play of this TeamSeason.


        :return: The pitching_batting_average_on_balls_in_play of this TeamSeason.
        :rtype: float
        """
        return self._pitching_batting_average_on_balls_in_play

    @pitching_batting_average_on_balls_in_play.setter
    def pitching_batting_average_on_balls_in_play(self, pitching_batting_average_on_balls_in_play):
        """Sets the pitching_batting_average_on_balls_in_play of this TeamSeason.


        :param pitching_batting_average_on_balls_in_play: The pitching_batting_average_on_balls_in_play of this TeamSeason.
        :type pitching_batting_average_on_balls_in_play: float
        """

        self._pitching_batting_average_on_balls_in_play = pitching_batting_average_on_balls_in_play

    @property
    def pitching_blown_saves(self):
        """Gets the pitching_blown_saves of this TeamSeason.


        :return: The pitching_blown_saves of this TeamSeason.
        :rtype: float
        """
        return self._pitching_blown_saves

    @pitching_blown_saves.setter
    def pitching_blown_saves(self, pitching_blown_saves):
        """Sets the pitching_blown_saves of this TeamSeason.


        :param pitching_blown_saves: The pitching_blown_saves of this TeamSeason.
        :type pitching_blown_saves: float
        """

        self._pitching_blown_saves = pitching_blown_saves

    @property
    def pitching_catchers_interference(self):
        """Gets the pitching_catchers_interference of this TeamSeason.


        :return: The pitching_catchers_interference of this TeamSeason.
        :rtype: float
        """
        return self._pitching_catchers_interference

    @pitching_catchers_interference.setter
    def pitching_catchers_interference(self, pitching_catchers_interference):
        """Sets the pitching_catchers_interference of this TeamSeason.


        :param pitching_catchers_interference: The pitching_catchers_interference of this TeamSeason.
        :type pitching_catchers_interference: float
        """

        self._pitching_catchers_interference = pitching_catchers_interference

    @property
    def pitching_complete_games(self):
        """Gets the pitching_complete_games of this TeamSeason.


        :return: The pitching_complete_games of this TeamSeason.
        :rtype: float
        """
        return self._pitching_complete_games

    @pitching_complete_games.setter
    def pitching_complete_games(self, pitching_complete_games):
        """Sets the pitching_complete_games of this TeamSeason.


        :param pitching_complete_games: The pitching_complete_games of this TeamSeason.
        :type pitching_complete_games: float
        """

        self._pitching_complete_games = pitching_complete_games

    @property
    def pitching_double_plays(self):
        """Gets the pitching_double_plays of this TeamSeason.


        :return: The pitching_double_plays of this TeamSeason.
        :rtype: float
        """
        return self._pitching_double_plays

    @pitching_double_plays.setter
    def pitching_double_plays(self, pitching_double_plays):
        """Sets the pitching_double_plays of this TeamSeason.


        :param pitching_double_plays: The pitching_double_plays of this TeamSeason.
        :type pitching_double_plays: float
        """

        self._pitching_double_plays = pitching_double_plays

    @property
    def pitching_doubles(self):
        """Gets the pitching_doubles of this TeamSeason.


        :return: The pitching_doubles of this TeamSeason.
        :rtype: float
        """
        return self._pitching_doubles

    @pitching_doubles.setter
    def pitching_doubles(self, pitching_doubles):
        """Sets the pitching_doubles of this TeamSeason.


        :param pitching_doubles: The pitching_doubles of this TeamSeason.
        :type pitching_doubles: float
        """

        self._pitching_doubles = pitching_doubles

    @property
    def pitching_earned_runs(self):
        """Gets the pitching_earned_runs of this TeamSeason.


        :return: The pitching_earned_runs of this TeamSeason.
        :rtype: float
        """
        return self._pitching_earned_runs

    @pitching_earned_runs.setter
    def pitching_earned_runs(self, pitching_earned_runs):
        """Sets the pitching_earned_runs of this TeamSeason.


        :param pitching_earned_runs: The pitching_earned_runs of this TeamSeason.
        :type pitching_earned_runs: float
        """

        self._pitching_earned_runs = pitching_earned_runs

    @property
    def pitching_fly_outs(self):
        """Gets the pitching_fly_outs of this TeamSeason.


        :return: The pitching_fly_outs of this TeamSeason.
        :rtype: float
        """
        return self._pitching_fly_outs

    @pitching_fly_outs.setter
    def pitching_fly_outs(self, pitching_fly_outs):
        """Sets the pitching_fly_outs of this TeamSeason.


        :param pitching_fly_outs: The pitching_fly_outs of this TeamSeason.
        :type pitching_fly_outs: float
        """

        self._pitching_fly_outs = pitching_fly_outs

    @property
    def pitching_grand_slams(self):
        """Gets the pitching_grand_slams of this TeamSeason.


        :return: The pitching_grand_slams of this TeamSeason.
        :rtype: float
        """
        return self._pitching_grand_slams

    @pitching_grand_slams.setter
    def pitching_grand_slams(self, pitching_grand_slams):
        """Sets the pitching_grand_slams of this TeamSeason.


        :param pitching_grand_slams: The pitching_grand_slams of this TeamSeason.
        :type pitching_grand_slams: float
        """

        self._pitching_grand_slams = pitching_grand_slams

    @property
    def pitching_ground_into_double_play(self):
        """Gets the pitching_ground_into_double_play of this TeamSeason.


        :return: The pitching_ground_into_double_play of this TeamSeason.
        :rtype: float
        """
        return self._pitching_ground_into_double_play

    @pitching_ground_into_double_play.setter
    def pitching_ground_into_double_play(self, pitching_ground_into_double_play):
        """Sets the pitching_ground_into_double_play of this TeamSeason.


        :param pitching_ground_into_double_play: The pitching_ground_into_double_play of this TeamSeason.
        :type pitching_ground_into_double_play: float
        """

        self._pitching_ground_into_double_play = pitching_ground_into_double_play

    @property
    def pitching_ground_outs(self):
        """Gets the pitching_ground_outs of this TeamSeason.


        :return: The pitching_ground_outs of this TeamSeason.
        :rtype: float
        """
        return self._pitching_ground_outs

    @pitching_ground_outs.setter
    def pitching_ground_outs(self, pitching_ground_outs):
        """Sets the pitching_ground_outs of this TeamSeason.


        :param pitching_ground_outs: The pitching_ground_outs of this TeamSeason.
        :type pitching_ground_outs: float
        """

        self._pitching_ground_outs = pitching_ground_outs

    @property
    def pitching_hit_by_pitch(self):
        """Gets the pitching_hit_by_pitch of this TeamSeason.


        :return: The pitching_hit_by_pitch of this TeamSeason.
        :rtype: float
        """
        return self._pitching_hit_by_pitch

    @pitching_hit_by_pitch.setter
    def pitching_hit_by_pitch(self, pitching_hit_by_pitch):
        """Sets the pitching_hit_by_pitch of this TeamSeason.


        :param pitching_hit_by_pitch: The pitching_hit_by_pitch of this TeamSeason.
        :type pitching_hit_by_pitch: float
        """

        self._pitching_hit_by_pitch = pitching_hit_by_pitch

    @property
    def pitching_hits(self):
        """Gets the pitching_hits of this TeamSeason.


        :return: The pitching_hits of this TeamSeason.
        :rtype: float
        """
        return self._pitching_hits

    @pitching_hits.setter
    def pitching_hits(self, pitching_hits):
        """Sets the pitching_hits of this TeamSeason.


        :param pitching_hits: The pitching_hits of this TeamSeason.
        :type pitching_hits: float
        """

        self._pitching_hits = pitching_hits

    @property
    def pitching_holds(self):
        """Gets the pitching_holds of this TeamSeason.


        :return: The pitching_holds of this TeamSeason.
        :rtype: float
        """
        return self._pitching_holds

    @pitching_holds.setter
    def pitching_holds(self, pitching_holds):
        """Sets the pitching_holds of this TeamSeason.


        :param pitching_holds: The pitching_holds of this TeamSeason.
        :type pitching_holds: float
        """

        self._pitching_holds = pitching_holds

    @property
    def pitching_home_runs(self):
        """Gets the pitching_home_runs of this TeamSeason.


        :return: The pitching_home_runs of this TeamSeason.
        :rtype: float
        """
        return self._pitching_home_runs

    @pitching_home_runs.setter
    def pitching_home_runs(self, pitching_home_runs):
        """Sets the pitching_home_runs of this TeamSeason.


        :param pitching_home_runs: The pitching_home_runs of this TeamSeason.
        :type pitching_home_runs: float
        """

        self._pitching_home_runs = pitching_home_runs

    @property
    def pitching_inning_started(self):
        """Gets the pitching_inning_started of this TeamSeason.


        :return: The pitching_inning_started of this TeamSeason.
        :rtype: int
        """
        return self._pitching_inning_started

    @pitching_inning_started.setter
    def pitching_inning_started(self, pitching_inning_started):
        """Sets the pitching_inning_started of this TeamSeason.


        :param pitching_inning_started: The pitching_inning_started of this TeamSeason.
        :type pitching_inning_started: int
        """

        self._pitching_inning_started = pitching_inning_started

    @property
    def pitching_intentional_walks(self):
        """Gets the pitching_intentional_walks of this TeamSeason.


        :return: The pitching_intentional_walks of this TeamSeason.
        :rtype: float
        """
        return self._pitching_intentional_walks

    @pitching_intentional_walks.setter
    def pitching_intentional_walks(self, pitching_intentional_walks):
        """Sets the pitching_intentional_walks of this TeamSeason.


        :param pitching_intentional_walks: The pitching_intentional_walks of this TeamSeason.
        :type pitching_intentional_walks: float
        """

        self._pitching_intentional_walks = pitching_intentional_walks

    @property
    def pitching_line_outs(self):
        """Gets the pitching_line_outs of this TeamSeason.


        :return: The pitching_line_outs of this TeamSeason.
        :rtype: float
        """
        return self._pitching_line_outs

    @pitching_line_outs.setter
    def pitching_line_outs(self, pitching_line_outs):
        """Sets the pitching_line_outs of this TeamSeason.


        :param pitching_line_outs: The pitching_line_outs of this TeamSeason.
        :type pitching_line_outs: float
        """

        self._pitching_line_outs = pitching_line_outs

    @property
    def pitching_no_hitters(self):
        """Gets the pitching_no_hitters of this TeamSeason.


        :return: The pitching_no_hitters of this TeamSeason.
        :rtype: float
        """
        return self._pitching_no_hitters

    @pitching_no_hitters.setter
    def pitching_no_hitters(self, pitching_no_hitters):
        """Sets the pitching_no_hitters of this TeamSeason.


        :param pitching_no_hitters: The pitching_no_hitters of this TeamSeason.
        :type pitching_no_hitters: float
        """

        self._pitching_no_hitters = pitching_no_hitters

    @property
    def pitching_on_base_percentage(self):
        """Gets the pitching_on_base_percentage of this TeamSeason.


        :return: The pitching_on_base_percentage of this TeamSeason.
        :rtype: float
        """
        return self._pitching_on_base_percentage

    @pitching_on_base_percentage.setter
    def pitching_on_base_percentage(self, pitching_on_base_percentage):
        """Sets the pitching_on_base_percentage of this TeamSeason.


        :param pitching_on_base_percentage: The pitching_on_base_percentage of this TeamSeason.
        :type pitching_on_base_percentage: float
        """

        self._pitching_on_base_percentage = pitching_on_base_percentage

    @property
    def pitching_on_base_plus_slugging(self):
        """Gets the pitching_on_base_plus_slugging of this TeamSeason.


        :return: The pitching_on_base_plus_slugging of this TeamSeason.
        :rtype: float
        """
        return self._pitching_on_base_plus_slugging

    @pitching_on_base_plus_slugging.setter
    def pitching_on_base_plus_slugging(self, pitching_on_base_plus_slugging):
        """Sets the pitching_on_base_plus_slugging of this TeamSeason.


        :param pitching_on_base_plus_slugging: The pitching_on_base_plus_slugging of this TeamSeason.
        :type pitching_on_base_plus_slugging: float
        """

        self._pitching_on_base_plus_slugging = pitching_on_base_plus_slugging

    @property
    def pitching_perfect_games(self):
        """Gets the pitching_perfect_games of this TeamSeason.


        :return: The pitching_perfect_games of this TeamSeason.
        :rtype: float
        """
        return self._pitching_perfect_games

    @pitching_perfect_games.setter
    def pitching_perfect_games(self, pitching_perfect_games):
        """Sets the pitching_perfect_games of this TeamSeason.


        :param pitching_perfect_games: The pitching_perfect_games of this TeamSeason.
        :type pitching_perfect_games: float
        """

        self._pitching_perfect_games = pitching_perfect_games

    @property
    def pitching_plate_appearances(self):
        """Gets the pitching_plate_appearances of this TeamSeason.


        :return: The pitching_plate_appearances of this TeamSeason.
        :rtype: float
        """
        return self._pitching_plate_appearances

    @pitching_plate_appearances.setter
    def pitching_plate_appearances(self, pitching_plate_appearances):
        """Sets the pitching_plate_appearances of this TeamSeason.


        :param pitching_plate_appearances: The pitching_plate_appearances of this TeamSeason.
        :type pitching_plate_appearances: float
        """

        self._pitching_plate_appearances = pitching_plate_appearances

    @property
    def pitching_pop_outs(self):
        """Gets the pitching_pop_outs of this TeamSeason.


        :return: The pitching_pop_outs of this TeamSeason.
        :rtype: float
        """
        return self._pitching_pop_outs

    @pitching_pop_outs.setter
    def pitching_pop_outs(self, pitching_pop_outs):
        """Sets the pitching_pop_outs of this TeamSeason.


        :param pitching_pop_outs: The pitching_pop_outs of this TeamSeason.
        :type pitching_pop_outs: float
        """

        self._pitching_pop_outs = pitching_pop_outs

    @property
    def pitching_quality_starts(self):
        """Gets the pitching_quality_starts of this TeamSeason.


        :return: The pitching_quality_starts of this TeamSeason.
        :rtype: float
        """
        return self._pitching_quality_starts

    @pitching_quality_starts.setter
    def pitching_quality_starts(self, pitching_quality_starts):
        """Sets the pitching_quality_starts of this TeamSeason.


        :param pitching_quality_starts: The pitching_quality_starts of this TeamSeason.
        :type pitching_quality_starts: float
        """

        self._pitching_quality_starts = pitching_quality_starts

    @property
    def pitching_reached_on_error(self):
        """Gets the pitching_reached_on_error of this TeamSeason.


        :return: The pitching_reached_on_error of this TeamSeason.
        :rtype: float
        """
        return self._pitching_reached_on_error

    @pitching_reached_on_error.setter
    def pitching_reached_on_error(self, pitching_reached_on_error):
        """Sets the pitching_reached_on_error of this TeamSeason.


        :param pitching_reached_on_error: The pitching_reached_on_error of this TeamSeason.
        :type pitching_reached_on_error: float
        """

        self._pitching_reached_on_error = pitching_reached_on_error

    @property
    def pitching_runs(self):
        """Gets the pitching_runs of this TeamSeason.


        :return: The pitching_runs of this TeamSeason.
        :rtype: float
        """
        return self._pitching_runs

    @pitching_runs.setter
    def pitching_runs(self, pitching_runs):
        """Sets the pitching_runs of this TeamSeason.


        :param pitching_runs: The pitching_runs of this TeamSeason.
        :type pitching_runs: float
        """

        self._pitching_runs = pitching_runs

    @property
    def pitching_sacrifice_flies(self):
        """Gets the pitching_sacrifice_flies of this TeamSeason.


        :return: The pitching_sacrifice_flies of this TeamSeason.
        :rtype: float
        """
        return self._pitching_sacrifice_flies

    @pitching_sacrifice_flies.setter
    def pitching_sacrifice_flies(self, pitching_sacrifice_flies):
        """Sets the pitching_sacrifice_flies of this TeamSeason.


        :param pitching_sacrifice_flies: The pitching_sacrifice_flies of this TeamSeason.
        :type pitching_sacrifice_flies: float
        """

        self._pitching_sacrifice_flies = pitching_sacrifice_flies

    @property
    def pitching_sacrifices(self):
        """Gets the pitching_sacrifices of this TeamSeason.


        :return: The pitching_sacrifices of this TeamSeason.
        :rtype: float
        """
        return self._pitching_sacrifices

    @pitching_sacrifices.setter
    def pitching_sacrifices(self, pitching_sacrifices):
        """Sets the pitching_sacrifices of this TeamSeason.


        :param pitching_sacrifices: The pitching_sacrifices of this TeamSeason.
        :type pitching_sacrifices: float
        """

        self._pitching_sacrifices = pitching_sacrifices

    @property
    def pitching_shut_outs(self):
        """Gets the pitching_shut_outs of this TeamSeason.


        :return: The pitching_shut_outs of this TeamSeason.
        :rtype: float
        """
        return self._pitching_shut_outs

    @pitching_shut_outs.setter
    def pitching_shut_outs(self, pitching_shut_outs):
        """Sets the pitching_shut_outs of this TeamSeason.


        :param pitching_shut_outs: The pitching_shut_outs of this TeamSeason.
        :type pitching_shut_outs: float
        """

        self._pitching_shut_outs = pitching_shut_outs

    @property
    def pitching_singles(self):
        """Gets the pitching_singles of this TeamSeason.


        :return: The pitching_singles of this TeamSeason.
        :rtype: float
        """
        return self._pitching_singles

    @pitching_singles.setter
    def pitching_singles(self, pitching_singles):
        """Sets the pitching_singles of this TeamSeason.


        :param pitching_singles: The pitching_singles of this TeamSeason.
        :type pitching_singles: float
        """

        self._pitching_singles = pitching_singles

    @property
    def pitching_slugging_percentage(self):
        """Gets the pitching_slugging_percentage of this TeamSeason.


        :return: The pitching_slugging_percentage of this TeamSeason.
        :rtype: float
        """
        return self._pitching_slugging_percentage

    @pitching_slugging_percentage.setter
    def pitching_slugging_percentage(self, pitching_slugging_percentage):
        """Sets the pitching_slugging_percentage of this TeamSeason.


        :param pitching_slugging_percentage: The pitching_slugging_percentage of this TeamSeason.
        :type pitching_slugging_percentage: float
        """

        self._pitching_slugging_percentage = pitching_slugging_percentage

    @property
    def pitching_strikeouts(self):
        """Gets the pitching_strikeouts of this TeamSeason.


        :return: The pitching_strikeouts of this TeamSeason.
        :rtype: float
        """
        return self._pitching_strikeouts

    @pitching_strikeouts.setter
    def pitching_strikeouts(self, pitching_strikeouts):
        """Sets the pitching_strikeouts of this TeamSeason.


        :param pitching_strikeouts: The pitching_strikeouts of this TeamSeason.
        :type pitching_strikeouts: float
        """

        self._pitching_strikeouts = pitching_strikeouts

    @property
    def pitching_strikeouts_per_nine_innings(self):
        """Gets the pitching_strikeouts_per_nine_innings of this TeamSeason.


        :return: The pitching_strikeouts_per_nine_innings of this TeamSeason.
        :rtype: float
        """
        return self._pitching_strikeouts_per_nine_innings

    @pitching_strikeouts_per_nine_innings.setter
    def pitching_strikeouts_per_nine_innings(self, pitching_strikeouts_per_nine_innings):
        """Sets the pitching_strikeouts_per_nine_innings of this TeamSeason.


        :param pitching_strikeouts_per_nine_innings: The pitching_strikeouts_per_nine_innings of this TeamSeason.
        :type pitching_strikeouts_per_nine_innings: float
        """

        self._pitching_strikeouts_per_nine_innings = pitching_strikeouts_per_nine_innings

    @property
    def pitching_total_bases(self):
        """Gets the pitching_total_bases of this TeamSeason.


        :return: The pitching_total_bases of this TeamSeason.
        :rtype: float
        """
        return self._pitching_total_bases

    @pitching_total_bases.setter
    def pitching_total_bases(self, pitching_total_bases):
        """Sets the pitching_total_bases of this TeamSeason.


        :param pitching_total_bases: The pitching_total_bases of this TeamSeason.
        :type pitching_total_bases: float
        """

        self._pitching_total_bases = pitching_total_bases

    @property
    def pitching_triples(self):
        """Gets the pitching_triples of this TeamSeason.


        :return: The pitching_triples of this TeamSeason.
        :rtype: float
        """
        return self._pitching_triples

    @pitching_triples.setter
    def pitching_triples(self, pitching_triples):
        """Sets the pitching_triples of this TeamSeason.


        :param pitching_triples: The pitching_triples of this TeamSeason.
        :type pitching_triples: float
        """

        self._pitching_triples = pitching_triples

    @property
    def pitching_walks(self):
        """Gets the pitching_walks of this TeamSeason.


        :return: The pitching_walks of this TeamSeason.
        :rtype: float
        """
        return self._pitching_walks

    @pitching_walks.setter
    def pitching_walks(self, pitching_walks):
        """Sets the pitching_walks of this TeamSeason.


        :param pitching_walks: The pitching_walks of this TeamSeason.
        :type pitching_walks: float
        """

        self._pitching_walks = pitching_walks

    @property
    def pitching_walks_per_nine_innings(self):
        """Gets the pitching_walks_per_nine_innings of this TeamSeason.


        :return: The pitching_walks_per_nine_innings of this TeamSeason.
        :rtype: float
        """
        return self._pitching_walks_per_nine_innings

    @pitching_walks_per_nine_innings.setter
    def pitching_walks_per_nine_innings(self, pitching_walks_per_nine_innings):
        """Sets the pitching_walks_per_nine_innings of this TeamSeason.


        :param pitching_walks_per_nine_innings: The pitching_walks_per_nine_innings of this TeamSeason.
        :type pitching_walks_per_nine_innings: float
        """

        self._pitching_walks_per_nine_innings = pitching_walks_per_nine_innings

    @property
    def pitching_weighted_on_base_percentage(self):
        """Gets the pitching_weighted_on_base_percentage of this TeamSeason.


        :return: The pitching_weighted_on_base_percentage of this TeamSeason.
        :rtype: float
        """
        return self._pitching_weighted_on_base_percentage

    @pitching_weighted_on_base_percentage.setter
    def pitching_weighted_on_base_percentage(self, pitching_weighted_on_base_percentage):
        """Sets the pitching_weighted_on_base_percentage of this TeamSeason.


        :param pitching_weighted_on_base_percentage: The pitching_weighted_on_base_percentage of this TeamSeason.
        :type pitching_weighted_on_base_percentage: float
        """

        self._pitching_weighted_on_base_percentage = pitching_weighted_on_base_percentage

    @property
    def plate_appearances(self):
        """Gets the plate_appearances of this TeamSeason.


        :return: The plate_appearances of this TeamSeason.
        :rtype: float
        """
        return self._plate_appearances

    @plate_appearances.setter
    def plate_appearances(self, plate_appearances):
        """Sets the plate_appearances of this TeamSeason.


        :param plate_appearances: The plate_appearances of this TeamSeason.
        :type plate_appearances: float
        """

        self._plate_appearances = plate_appearances

    @property
    def pop_outs(self):
        """Gets the pop_outs of this TeamSeason.


        :return: The pop_outs of this TeamSeason.
        :rtype: float
        """
        return self._pop_outs

    @pop_outs.setter
    def pop_outs(self, pop_outs):
        """Sets the pop_outs of this TeamSeason.


        :param pop_outs: The pop_outs of this TeamSeason.
        :type pop_outs: float
        """

        self._pop_outs = pop_outs

    @property
    def reached_on_error(self):
        """Gets the reached_on_error of this TeamSeason.


        :return: The reached_on_error of this TeamSeason.
        :rtype: float
        """
        return self._reached_on_error

    @reached_on_error.setter
    def reached_on_error(self, reached_on_error):
        """Sets the reached_on_error of this TeamSeason.


        :param reached_on_error: The reached_on_error of this TeamSeason.
        :type reached_on_error: float
        """

        self._reached_on_error = reached_on_error

    @property
    def runs(self):
        """Gets the runs of this TeamSeason.


        :return: The runs of this TeamSeason.
        :rtype: float
        """
        return self._runs

    @runs.setter
    def runs(self, runs):
        """Sets the runs of this TeamSeason.


        :param runs: The runs of this TeamSeason.
        :type runs: float
        """

        self._runs = runs

    @property
    def runs_batted_in(self):
        """Gets the runs_batted_in of this TeamSeason.


        :return: The runs_batted_in of this TeamSeason.
        :rtype: float
        """
        return self._runs_batted_in

    @runs_batted_in.setter
    def runs_batted_in(self, runs_batted_in):
        """Sets the runs_batted_in of this TeamSeason.


        :param runs_batted_in: The runs_batted_in of this TeamSeason.
        :type runs_batted_in: float
        """

        self._runs_batted_in = runs_batted_in

    @property
    def sacrifice_flies(self):
        """Gets the sacrifice_flies of this TeamSeason.


        :return: The sacrifice_flies of this TeamSeason.
        :rtype: float
        """
        return self._sacrifice_flies

    @sacrifice_flies.setter
    def sacrifice_flies(self, sacrifice_flies):
        """Sets the sacrifice_flies of this TeamSeason.


        :param sacrifice_flies: The sacrifice_flies of this TeamSeason.
        :type sacrifice_flies: float
        """

        self._sacrifice_flies = sacrifice_flies

    @property
    def sacrifices(self):
        """Gets the sacrifices of this TeamSeason.


        :return: The sacrifices of this TeamSeason.
        :rtype: float
        """
        return self._sacrifices

    @sacrifices.setter
    def sacrifices(self, sacrifices):
        """Sets the sacrifices of this TeamSeason.


        :param sacrifices: The sacrifices of this TeamSeason.
        :type sacrifices: float
        """

        self._sacrifices = sacrifices

    @property
    def saves(self):
        """Gets the saves of this TeamSeason.


        :return: The saves of this TeamSeason.
        :rtype: float
        """
        return self._saves

    @saves.setter
    def saves(self, saves):
        """Sets the saves of this TeamSeason.


        :param saves: The saves of this TeamSeason.
        :type saves: float
        """

        self._saves = saves

    @property
    def season(self):
        """Gets the season of this TeamSeason.


        :return: The season of this TeamSeason.
        :rtype: int
        """
        return self._season

    @season.setter
    def season(self, season):
        """Sets the season of this TeamSeason.


        :param season: The season of this TeamSeason.
        :type season: int
        """

        self._season = season

    @property
    def season_type(self):
        """Gets the season_type of this TeamSeason.


        :return: The season_type of this TeamSeason.
        :rtype: int
        """
        return self._season_type

    @season_type.setter
    def season_type(self, season_type):
        """Sets the season_type of this TeamSeason.


        :param season_type: The season_type of this TeamSeason.
        :type season_type: int
        """

        self._season_type = season_type

    @property
    def singles(self):
        """Gets the singles of this TeamSeason.


        :return: The singles of this TeamSeason.
        :rtype: float
        """
        return self._singles

    @singles.setter
    def singles(self, singles):
        """Sets the singles of this TeamSeason.


        :param singles: The singles of this TeamSeason.
        :type singles: float
        """

        self._singles = singles

    @property
    def slugging_percentage(self):
        """Gets the slugging_percentage of this TeamSeason.


        :return: The slugging_percentage of this TeamSeason.
        :rtype: float
        """
        return self._slugging_percentage

    @slugging_percentage.setter
    def slugging_percentage(self, slugging_percentage):
        """Sets the slugging_percentage of this TeamSeason.


        :param slugging_percentage: The slugging_percentage of this TeamSeason.
        :type slugging_percentage: float
        """

        self._slugging_percentage = slugging_percentage

    @property
    def stat_id(self):
        """Gets the stat_id of this TeamSeason.


        :return: The stat_id of this TeamSeason.
        :rtype: int
        """
        return self._stat_id

    @stat_id.setter
    def stat_id(self, stat_id):
        """Sets the stat_id of this TeamSeason.


        :param stat_id: The stat_id of this TeamSeason.
        :type stat_id: int
        """

        self._stat_id = stat_id

    @property
    def stolen_bases(self):
        """Gets the stolen_bases of this TeamSeason.


        :return: The stolen_bases of this TeamSeason.
        :rtype: float
        """
        return self._stolen_bases

    @stolen_bases.setter
    def stolen_bases(self, stolen_bases):
        """Sets the stolen_bases of this TeamSeason.


        :param stolen_bases: The stolen_bases of this TeamSeason.
        :type stolen_bases: float
        """

        self._stolen_bases = stolen_bases

    @property
    def strikeouts(self):
        """Gets the strikeouts of this TeamSeason.


        :return: The strikeouts of this TeamSeason.
        :rtype: float
        """
        return self._strikeouts

    @strikeouts.setter
    def strikeouts(self, strikeouts):
        """Sets the strikeouts of this TeamSeason.


        :param strikeouts: The strikeouts of this TeamSeason.
        :type strikeouts: float
        """

        self._strikeouts = strikeouts

    @property
    def substitute_batting_order(self):
        """Gets the substitute_batting_order of this TeamSeason.


        :return: The substitute_batting_order of this TeamSeason.
        :rtype: int
        """
        return self._substitute_batting_order

    @substitute_batting_order.setter
    def substitute_batting_order(self, substitute_batting_order):
        """Sets the substitute_batting_order of this TeamSeason.


        :param substitute_batting_order: The substitute_batting_order of this TeamSeason.
        :type substitute_batting_order: int
        """

        self._substitute_batting_order = substitute_batting_order

    @property
    def substitute_batting_order_sequence(self):
        """Gets the substitute_batting_order_sequence of this TeamSeason.


        :return: The substitute_batting_order_sequence of this TeamSeason.
        :rtype: int
        """
        return self._substitute_batting_order_sequence

    @substitute_batting_order_sequence.setter
    def substitute_batting_order_sequence(self, substitute_batting_order_sequence):
        """Sets the substitute_batting_order_sequence of this TeamSeason.


        :param substitute_batting_order_sequence: The substitute_batting_order_sequence of this TeamSeason.
        :type substitute_batting_order_sequence: int
        """

        self._substitute_batting_order_sequence = substitute_batting_order_sequence

    @property
    def team(self):
        """Gets the team of this TeamSeason.


        :return: The team of this TeamSeason.
        :rtype: str
        """
        return self._team

    @team.setter
    def team(self, team):
        """Sets the team of this TeamSeason.


        :param team: The team of this TeamSeason.
        :type team: str
        """

        self._team = team

    @property
    def team_id(self):
        """Gets the team_id of this TeamSeason.


        :return: The team_id of this TeamSeason.
        :rtype: int
        """
        return self._team_id

    @team_id.setter
    def team_id(self, team_id):
        """Sets the team_id of this TeamSeason.


        :param team_id: The team_id of this TeamSeason.
        :type team_id: int
        """

        self._team_id = team_id

    @property
    def total_bases(self):
        """Gets the total_bases of this TeamSeason.


        :return: The total_bases of this TeamSeason.
        :rtype: float
        """
        return self._total_bases

    @total_bases.setter
    def total_bases(self, total_bases):
        """Sets the total_bases of this TeamSeason.


        :param total_bases: The total_bases of this TeamSeason.
        :type total_bases: float
        """

        self._total_bases = total_bases

    @property
    def total_outs_pitched(self):
        """Gets the total_outs_pitched of this TeamSeason.


        :return: The total_outs_pitched of this TeamSeason.
        :rtype: float
        """
        return self._total_outs_pitched

    @total_outs_pitched.setter
    def total_outs_pitched(self, total_outs_pitched):
        """Sets the total_outs_pitched of this TeamSeason.


        :param total_outs_pitched: The total_outs_pitched of this TeamSeason.
        :type total_outs_pitched: float
        """

        self._total_outs_pitched = total_outs_pitched

    @property
    def triples(self):
        """Gets the triples of this TeamSeason.


        :return: The triples of this TeamSeason.
        :rtype: float
        """
        return self._triples

    @triples.setter
    def triples(self, triples):
        """Sets the triples of this TeamSeason.


        :param triples: The triples of this TeamSeason.
        :type triples: float
        """

        self._triples = triples

    @property
    def updated(self):
        """Gets the updated of this TeamSeason.


        :return: The updated of this TeamSeason.
        :rtype: str
        """
        return self._updated

    @updated.setter
    def updated(self, updated):
        """Sets the updated of this TeamSeason.


        :param updated: The updated of this TeamSeason.
        :type updated: str
        """

        self._updated = updated

    @property
    def walks(self):
        """Gets the walks of this TeamSeason.


        :return: The walks of this TeamSeason.
        :rtype: float
        """
        return self._walks

    @walks.setter
    def walks(self, walks):
        """Sets the walks of this TeamSeason.


        :param walks: The walks of this TeamSeason.
        :type walks: float
        """

        self._walks = walks

    @property
    def walks_hits_per_innings_pitched(self):
        """Gets the walks_hits_per_innings_pitched of this TeamSeason.


        :return: The walks_hits_per_innings_pitched of this TeamSeason.
        :rtype: float
        """
        return self._walks_hits_per_innings_pitched

    @walks_hits_per_innings_pitched.setter
    def walks_hits_per_innings_pitched(self, walks_hits_per_innings_pitched):
        """Sets the walks_hits_per_innings_pitched of this TeamSeason.


        :param walks_hits_per_innings_pitched: The walks_hits_per_innings_pitched of this TeamSeason.
        :type walks_hits_per_innings_pitched: float
        """

        self._walks_hits_per_innings_pitched = walks_hits_per_innings_pitched

    @property
    def weighted_on_base_percentage(self):
        """Gets the weighted_on_base_percentage of this TeamSeason.


        :return: The weighted_on_base_percentage of this TeamSeason.
        :rtype: float
        """
        return self._weighted_on_base_percentage

    @weighted_on_base_percentage.setter
    def weighted_on_base_percentage(self, weighted_on_base_percentage):
        """Sets the weighted_on_base_percentage of this TeamSeason.


        :param weighted_on_base_percentage: The weighted_on_base_percentage of this TeamSeason.
        :type weighted_on_base_percentage: float
        """

        self._weighted_on_base_percentage = weighted_on_base_percentage

    @property
    def wins(self):
        """Gets the wins of this TeamSeason.


        :return: The wins of this TeamSeason.
        :rtype: float
        """
        return self._wins

    @wins.setter
    def wins(self, wins):
        """Sets the wins of this TeamSeason.


        :param wins: The wins of this TeamSeason.
        :type wins: float
        """

        self._wins = wins
