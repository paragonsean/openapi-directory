# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.game import Game
from openapi_server.models.inning import Inning
from openapi_server.models.player_game import PlayerGame
from openapi_server.models.team_game import TeamGame
from openapi_server import util


class BoxScore(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, game: Game=None, innings: List[Inning]=None, player_games: List[PlayerGame]=None, team_games: List[TeamGame]=None):
        """BoxScore - a model defined in OpenAPI

        :param game: The game of this BoxScore.
        :param innings: The innings of this BoxScore.
        :param player_games: The player_games of this BoxScore.
        :param team_games: The team_games of this BoxScore.
        """
        self.openapi_types = {
            'game': Game,
            'innings': List[Inning],
            'player_games': List[PlayerGame],
            'team_games': List[TeamGame]
        }

        self.attribute_map = {
            'game': 'Game',
            'innings': 'Innings',
            'player_games': 'PlayerGames',
            'team_games': 'TeamGames'
        }

        self._game = game
        self._innings = innings
        self._player_games = player_games
        self._team_games = team_games

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BoxScore':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BoxScore of this BoxScore.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def game(self):
        """Gets the game of this BoxScore.


        :return: The game of this BoxScore.
        :rtype: Game
        """
        return self._game

    @game.setter
    def game(self, game):
        """Sets the game of this BoxScore.


        :param game: The game of this BoxScore.
        :type game: Game
        """

        self._game = game

    @property
    def innings(self):
        """Gets the innings of this BoxScore.


        :return: The innings of this BoxScore.
        :rtype: List[Inning]
        """
        return self._innings

    @innings.setter
    def innings(self, innings):
        """Sets the innings of this BoxScore.


        :param innings: The innings of this BoxScore.
        :type innings: List[Inning]
        """

        self._innings = innings

    @property
    def player_games(self):
        """Gets the player_games of this BoxScore.


        :return: The player_games of this BoxScore.
        :rtype: List[PlayerGame]
        """
        return self._player_games

    @player_games.setter
    def player_games(self, player_games):
        """Sets the player_games of this BoxScore.


        :param player_games: The player_games of this BoxScore.
        :type player_games: List[PlayerGame]
        """

        self._player_games = player_games

    @property
    def team_games(self):
        """Gets the team_games of this BoxScore.


        :return: The team_games of this BoxScore.
        :rtype: List[TeamGame]
        """
        return self._team_games

    @team_games.setter
    def team_games(self, team_games):
        """Sets the team_games of this BoxScore.


        :param team_games: The team_games of this BoxScore.
        :type team_games: List[TeamGame]
        """

        self._team_games = team_games
