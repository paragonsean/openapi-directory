/**
 * MLB v3 Stats
 * MLB scores, stats, and news API.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStadium.h
 *
 * 
 */

#ifndef OAIStadium_H
#define OAIStadium_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIStadium : public OAIObject {
public:
    OAIStadium();
    OAIStadium(QString json);
    ~OAIStadium() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isActive() const;
    void setActive(const bool &active);
    bool is_active_Set() const;
    bool is_active_Valid() const;

    qint32 getAltitude() const;
    void setAltitude(const qint32 &altitude);
    bool is_altitude_Set() const;
    bool is_altitude_Valid() const;

    qint32 getCapacity() const;
    void setCapacity(const qint32 &capacity);
    bool is_capacity_Set() const;
    bool is_capacity_Valid() const;

    qint32 getCenterField() const;
    void setCenterField(const qint32 &center_field);
    bool is_center_field_Set() const;
    bool is_center_field_Valid() const;

    QString getCity() const;
    void setCity(const QString &city);
    bool is_city_Set() const;
    bool is_city_Valid() const;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    double getGeoLat() const;
    void setGeoLat(const double &geo_lat);
    bool is_geo_lat_Set() const;
    bool is_geo_lat_Valid() const;

    double getGeoLong() const;
    void setGeoLong(const double &geo_long);
    bool is_geo_long_Set() const;
    bool is_geo_long_Valid() const;

    qint32 getHomePlateDirection() const;
    void setHomePlateDirection(const qint32 &home_plate_direction);
    bool is_home_plate_direction_Set() const;
    bool is_home_plate_direction_Valid() const;

    qint32 getLeftCenterField() const;
    void setLeftCenterField(const qint32 &left_center_field);
    bool is_left_center_field_Set() const;
    bool is_left_center_field_Valid() const;

    qint32 getLeftField() const;
    void setLeftField(const qint32 &left_field);
    bool is_left_field_Set() const;
    bool is_left_field_Valid() const;

    qint32 getMidLeftCenterField() const;
    void setMidLeftCenterField(const qint32 &mid_left_center_field);
    bool is_mid_left_center_field_Set() const;
    bool is_mid_left_center_field_Valid() const;

    qint32 getMidLeftField() const;
    void setMidLeftField(const qint32 &mid_left_field);
    bool is_mid_left_field_Set() const;
    bool is_mid_left_field_Valid() const;

    qint32 getMidRightCenterField() const;
    void setMidRightCenterField(const qint32 &mid_right_center_field);
    bool is_mid_right_center_field_Set() const;
    bool is_mid_right_center_field_Valid() const;

    qint32 getMidRightField() const;
    void setMidRightField(const qint32 &mid_right_field);
    bool is_mid_right_field_Set() const;
    bool is_mid_right_field_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getRightCenterField() const;
    void setRightCenterField(const qint32 &right_center_field);
    bool is_right_center_field_Set() const;
    bool is_right_center_field_Valid() const;

    qint32 getRightField() const;
    void setRightField(const qint32 &right_field);
    bool is_right_field_Set() const;
    bool is_right_field_Valid() const;

    qint32 getStadiumId() const;
    void setStadiumId(const qint32 &stadium_id);
    bool is_stadium_id_Set() const;
    bool is_stadium_id_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getSurface() const;
    void setSurface(const QString &surface);
    bool is_surface_Set() const;
    bool is_surface_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_active;
    bool m_active_isSet;
    bool m_active_isValid;

    qint32 m_altitude;
    bool m_altitude_isSet;
    bool m_altitude_isValid;

    qint32 m_capacity;
    bool m_capacity_isSet;
    bool m_capacity_isValid;

    qint32 m_center_field;
    bool m_center_field_isSet;
    bool m_center_field_isValid;

    QString m_city;
    bool m_city_isSet;
    bool m_city_isValid;

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    double m_geo_lat;
    bool m_geo_lat_isSet;
    bool m_geo_lat_isValid;

    double m_geo_long;
    bool m_geo_long_isSet;
    bool m_geo_long_isValid;

    qint32 m_home_plate_direction;
    bool m_home_plate_direction_isSet;
    bool m_home_plate_direction_isValid;

    qint32 m_left_center_field;
    bool m_left_center_field_isSet;
    bool m_left_center_field_isValid;

    qint32 m_left_field;
    bool m_left_field_isSet;
    bool m_left_field_isValid;

    qint32 m_mid_left_center_field;
    bool m_mid_left_center_field_isSet;
    bool m_mid_left_center_field_isValid;

    qint32 m_mid_left_field;
    bool m_mid_left_field_isSet;
    bool m_mid_left_field_isValid;

    qint32 m_mid_right_center_field;
    bool m_mid_right_center_field_isSet;
    bool m_mid_right_center_field_isValid;

    qint32 m_mid_right_field;
    bool m_mid_right_field_isSet;
    bool m_mid_right_field_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_right_center_field;
    bool m_right_center_field_isSet;
    bool m_right_center_field_isValid;

    qint32 m_right_field;
    bool m_right_field_isSet;
    bool m_right_field_isValid;

    qint32 m_stadium_id;
    bool m_stadium_id_isSet;
    bool m_stadium_id_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_surface;
    bool m_surface_isSet;
    bool m_surface_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStadium)

#endif // OAIStadium_H
