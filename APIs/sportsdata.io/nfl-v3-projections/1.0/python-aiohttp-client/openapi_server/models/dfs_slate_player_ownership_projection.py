# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DfsSlatePlayerOwnershipProjection(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fantasy_defense_player_id: int=None, is_captain: bool=None, player_id: int=None, projected_ownership_percentage: float=None, slate_id: int=None):
        """DfsSlatePlayerOwnershipProjection - a model defined in OpenAPI

        :param fantasy_defense_player_id: The fantasy_defense_player_id of this DfsSlatePlayerOwnershipProjection.
        :param is_captain: The is_captain of this DfsSlatePlayerOwnershipProjection.
        :param player_id: The player_id of this DfsSlatePlayerOwnershipProjection.
        :param projected_ownership_percentage: The projected_ownership_percentage of this DfsSlatePlayerOwnershipProjection.
        :param slate_id: The slate_id of this DfsSlatePlayerOwnershipProjection.
        """
        self.openapi_types = {
            'fantasy_defense_player_id': int,
            'is_captain': bool,
            'player_id': int,
            'projected_ownership_percentage': float,
            'slate_id': int
        }

        self.attribute_map = {
            'fantasy_defense_player_id': 'FantasyDefensePlayerID',
            'is_captain': 'IsCaptain',
            'player_id': 'PlayerID',
            'projected_ownership_percentage': 'ProjectedOwnershipPercentage',
            'slate_id': 'SlateID'
        }

        self._fantasy_defense_player_id = fantasy_defense_player_id
        self._is_captain = is_captain
        self._player_id = player_id
        self._projected_ownership_percentage = projected_ownership_percentage
        self._slate_id = slate_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DfsSlatePlayerOwnershipProjection':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DfsSlatePlayerOwnershipProjection of this DfsSlatePlayerOwnershipProjection.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fantasy_defense_player_id(self):
        """Gets the fantasy_defense_player_id of this DfsSlatePlayerOwnershipProjection.


        :return: The fantasy_defense_player_id of this DfsSlatePlayerOwnershipProjection.
        :rtype: int
        """
        return self._fantasy_defense_player_id

    @fantasy_defense_player_id.setter
    def fantasy_defense_player_id(self, fantasy_defense_player_id):
        """Sets the fantasy_defense_player_id of this DfsSlatePlayerOwnershipProjection.


        :param fantasy_defense_player_id: The fantasy_defense_player_id of this DfsSlatePlayerOwnershipProjection.
        :type fantasy_defense_player_id: int
        """

        self._fantasy_defense_player_id = fantasy_defense_player_id

    @property
    def is_captain(self):
        """Gets the is_captain of this DfsSlatePlayerOwnershipProjection.


        :return: The is_captain of this DfsSlatePlayerOwnershipProjection.
        :rtype: bool
        """
        return self._is_captain

    @is_captain.setter
    def is_captain(self, is_captain):
        """Sets the is_captain of this DfsSlatePlayerOwnershipProjection.


        :param is_captain: The is_captain of this DfsSlatePlayerOwnershipProjection.
        :type is_captain: bool
        """

        self._is_captain = is_captain

    @property
    def player_id(self):
        """Gets the player_id of this DfsSlatePlayerOwnershipProjection.


        :return: The player_id of this DfsSlatePlayerOwnershipProjection.
        :rtype: int
        """
        return self._player_id

    @player_id.setter
    def player_id(self, player_id):
        """Sets the player_id of this DfsSlatePlayerOwnershipProjection.


        :param player_id: The player_id of this DfsSlatePlayerOwnershipProjection.
        :type player_id: int
        """

        self._player_id = player_id

    @property
    def projected_ownership_percentage(self):
        """Gets the projected_ownership_percentage of this DfsSlatePlayerOwnershipProjection.


        :return: The projected_ownership_percentage of this DfsSlatePlayerOwnershipProjection.
        :rtype: float
        """
        return self._projected_ownership_percentage

    @projected_ownership_percentage.setter
    def projected_ownership_percentage(self, projected_ownership_percentage):
        """Sets the projected_ownership_percentage of this DfsSlatePlayerOwnershipProjection.


        :param projected_ownership_percentage: The projected_ownership_percentage of this DfsSlatePlayerOwnershipProjection.
        :type projected_ownership_percentage: float
        """

        self._projected_ownership_percentage = projected_ownership_percentage

    @property
    def slate_id(self):
        """Gets the slate_id of this DfsSlatePlayerOwnershipProjection.


        :return: The slate_id of this DfsSlatePlayerOwnershipProjection.
        :rtype: int
        """
        return self._slate_id

    @slate_id.setter
    def slate_id(self, slate_id):
        """Sets the slate_id of this DfsSlatePlayerOwnershipProjection.


        :param slate_id: The slate_id of this DfsSlatePlayerOwnershipProjection.
        :type slate_id: int
        """

        self._slate_id = slate_id
