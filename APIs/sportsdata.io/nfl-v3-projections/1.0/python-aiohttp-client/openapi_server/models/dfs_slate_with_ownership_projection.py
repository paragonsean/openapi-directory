# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dfs_slate_player_ownership_projection import DfsSlatePlayerOwnershipProjection
from openapi_server import util


class DfsSlateWithOwnershipProjection(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, operator: str=None, operator_day: str=None, operator_name: str=None, operator_slate_id: int=None, operator_start_time: str=None, slate_id: int=None, slate_ownership_projections: List[DfsSlatePlayerOwnershipProjection]=None):
        """DfsSlateWithOwnershipProjection - a model defined in OpenAPI

        :param operator: The operator of this DfsSlateWithOwnershipProjection.
        :param operator_day: The operator_day of this DfsSlateWithOwnershipProjection.
        :param operator_name: The operator_name of this DfsSlateWithOwnershipProjection.
        :param operator_slate_id: The operator_slate_id of this DfsSlateWithOwnershipProjection.
        :param operator_start_time: The operator_start_time of this DfsSlateWithOwnershipProjection.
        :param slate_id: The slate_id of this DfsSlateWithOwnershipProjection.
        :param slate_ownership_projections: The slate_ownership_projections of this DfsSlateWithOwnershipProjection.
        """
        self.openapi_types = {
            'operator': str,
            'operator_day': str,
            'operator_name': str,
            'operator_slate_id': int,
            'operator_start_time': str,
            'slate_id': int,
            'slate_ownership_projections': List[DfsSlatePlayerOwnershipProjection]
        }

        self.attribute_map = {
            'operator': 'Operator',
            'operator_day': 'OperatorDay',
            'operator_name': 'OperatorName',
            'operator_slate_id': 'OperatorSlateID',
            'operator_start_time': 'OperatorStartTime',
            'slate_id': 'SlateID',
            'slate_ownership_projections': 'SlateOwnershipProjections'
        }

        self._operator = operator
        self._operator_day = operator_day
        self._operator_name = operator_name
        self._operator_slate_id = operator_slate_id
        self._operator_start_time = operator_start_time
        self._slate_id = slate_id
        self._slate_ownership_projections = slate_ownership_projections

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DfsSlateWithOwnershipProjection':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DfsSlateWithOwnershipProjection of this DfsSlateWithOwnershipProjection.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def operator(self):
        """Gets the operator of this DfsSlateWithOwnershipProjection.


        :return: The operator of this DfsSlateWithOwnershipProjection.
        :rtype: str
        """
        return self._operator

    @operator.setter
    def operator(self, operator):
        """Sets the operator of this DfsSlateWithOwnershipProjection.


        :param operator: The operator of this DfsSlateWithOwnershipProjection.
        :type operator: str
        """

        self._operator = operator

    @property
    def operator_day(self):
        """Gets the operator_day of this DfsSlateWithOwnershipProjection.


        :return: The operator_day of this DfsSlateWithOwnershipProjection.
        :rtype: str
        """
        return self._operator_day

    @operator_day.setter
    def operator_day(self, operator_day):
        """Sets the operator_day of this DfsSlateWithOwnershipProjection.


        :param operator_day: The operator_day of this DfsSlateWithOwnershipProjection.
        :type operator_day: str
        """

        self._operator_day = operator_day

    @property
    def operator_name(self):
        """Gets the operator_name of this DfsSlateWithOwnershipProjection.


        :return: The operator_name of this DfsSlateWithOwnershipProjection.
        :rtype: str
        """
        return self._operator_name

    @operator_name.setter
    def operator_name(self, operator_name):
        """Sets the operator_name of this DfsSlateWithOwnershipProjection.


        :param operator_name: The operator_name of this DfsSlateWithOwnershipProjection.
        :type operator_name: str
        """

        self._operator_name = operator_name

    @property
    def operator_slate_id(self):
        """Gets the operator_slate_id of this DfsSlateWithOwnershipProjection.


        :return: The operator_slate_id of this DfsSlateWithOwnershipProjection.
        :rtype: int
        """
        return self._operator_slate_id

    @operator_slate_id.setter
    def operator_slate_id(self, operator_slate_id):
        """Sets the operator_slate_id of this DfsSlateWithOwnershipProjection.


        :param operator_slate_id: The operator_slate_id of this DfsSlateWithOwnershipProjection.
        :type operator_slate_id: int
        """

        self._operator_slate_id = operator_slate_id

    @property
    def operator_start_time(self):
        """Gets the operator_start_time of this DfsSlateWithOwnershipProjection.


        :return: The operator_start_time of this DfsSlateWithOwnershipProjection.
        :rtype: str
        """
        return self._operator_start_time

    @operator_start_time.setter
    def operator_start_time(self, operator_start_time):
        """Sets the operator_start_time of this DfsSlateWithOwnershipProjection.


        :param operator_start_time: The operator_start_time of this DfsSlateWithOwnershipProjection.
        :type operator_start_time: str
        """

        self._operator_start_time = operator_start_time

    @property
    def slate_id(self):
        """Gets the slate_id of this DfsSlateWithOwnershipProjection.


        :return: The slate_id of this DfsSlateWithOwnershipProjection.
        :rtype: int
        """
        return self._slate_id

    @slate_id.setter
    def slate_id(self, slate_id):
        """Sets the slate_id of this DfsSlateWithOwnershipProjection.


        :param slate_id: The slate_id of this DfsSlateWithOwnershipProjection.
        :type slate_id: int
        """

        self._slate_id = slate_id

    @property
    def slate_ownership_projections(self):
        """Gets the slate_ownership_projections of this DfsSlateWithOwnershipProjection.


        :return: The slate_ownership_projections of this DfsSlateWithOwnershipProjection.
        :rtype: List[DfsSlatePlayerOwnershipProjection]
        """
        return self._slate_ownership_projections

    @slate_ownership_projections.setter
    def slate_ownership_projections(self, slate_ownership_projections):
        """Sets the slate_ownership_projections of this DfsSlateWithOwnershipProjection.


        :param slate_ownership_projections: The slate_ownership_projections of this DfsSlateWithOwnershipProjection.
        :type slate_ownership_projections: List[DfsSlatePlayerOwnershipProjection]
        """

        self._slate_ownership_projections = slate_ownership_projections
