/**
 * NFL v3 Projections
 * NFL projected stats API.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISchedule.h
 *
 * 
 */

#ifndef OAISchedule_H
#define OAISchedule_H

#include <QJsonObject>

#include "OAIStadium.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStadium;

class OAISchedule : public OAIObject {
public:
    OAISchedule();
    OAISchedule(QString json);
    ~OAISchedule() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAwayTeam() const;
    void setAwayTeam(const QString &away_team);
    bool is_away_team_Set() const;
    bool is_away_team_Valid() const;

    qint32 getAwayTeamMoneyLine() const;
    void setAwayTeamMoneyLine(const qint32 &away_team_money_line);
    bool is_away_team_money_line_Set() const;
    bool is_away_team_money_line_Valid() const;

    bool isCanceled() const;
    void setCanceled(const bool &canceled);
    bool is_canceled_Set() const;
    bool is_canceled_Valid() const;

    QString getChannel() const;
    void setChannel(const QString &channel);
    bool is_channel_Set() const;
    bool is_channel_Valid() const;

    QString getDate() const;
    void setDate(const QString &date);
    bool is_date_Set() const;
    bool is_date_Valid() const;

    QString getDateTime() const;
    void setDateTime(const QString &date_time);
    bool is_date_time_Set() const;
    bool is_date_time_Valid() const;

    QString getDay() const;
    void setDay(const QString &day);
    bool is_day_Set() const;
    bool is_day_Valid() const;

    QString getForecastDescription() const;
    void setForecastDescription(const QString &forecast_description);
    bool is_forecast_description_Set() const;
    bool is_forecast_description_Valid() const;

    qint32 getForecastTempHigh() const;
    void setForecastTempHigh(const qint32 &forecast_temp_high);
    bool is_forecast_temp_high_Set() const;
    bool is_forecast_temp_high_Valid() const;

    qint32 getForecastTempLow() const;
    void setForecastTempLow(const qint32 &forecast_temp_low);
    bool is_forecast_temp_low_Set() const;
    bool is_forecast_temp_low_Valid() const;

    qint32 getForecastWindChill() const;
    void setForecastWindChill(const qint32 &forecast_wind_chill);
    bool is_forecast_wind_chill_Set() const;
    bool is_forecast_wind_chill_Valid() const;

    qint32 getForecastWindSpeed() const;
    void setForecastWindSpeed(const qint32 &forecast_wind_speed);
    bool is_forecast_wind_speed_Set() const;
    bool is_forecast_wind_speed_Valid() const;

    QString getGameKey() const;
    void setGameKey(const QString &game_key);
    bool is_game_key_Set() const;
    bool is_game_key_Valid() const;

    double getGeoLat() const;
    void setGeoLat(const double &geo_lat);
    bool is_geo_lat_Set() const;
    bool is_geo_lat_Valid() const;

    double getGeoLong() const;
    void setGeoLong(const double &geo_long);
    bool is_geo_long_Set() const;
    bool is_geo_long_Valid() const;

    qint32 getGlobalAwayTeamId() const;
    void setGlobalAwayTeamId(const qint32 &global_away_team_id);
    bool is_global_away_team_id_Set() const;
    bool is_global_away_team_id_Valid() const;

    qint32 getGlobalGameId() const;
    void setGlobalGameId(const qint32 &global_game_id);
    bool is_global_game_id_Set() const;
    bool is_global_game_id_Valid() const;

    qint32 getGlobalHomeTeamId() const;
    void setGlobalHomeTeamId(const qint32 &global_home_team_id);
    bool is_global_home_team_id_Set() const;
    bool is_global_home_team_id_Valid() const;

    QString getHomeTeam() const;
    void setHomeTeam(const QString &home_team);
    bool is_home_team_Set() const;
    bool is_home_team_Valid() const;

    qint32 getHomeTeamMoneyLine() const;
    void setHomeTeamMoneyLine(const qint32 &home_team_money_line);
    bool is_home_team_money_line_Set() const;
    bool is_home_team_money_line_Valid() const;

    double getOverUnder() const;
    void setOverUnder(const double &over_under);
    bool is_over_under_Set() const;
    bool is_over_under_Valid() const;

    double getPointSpread() const;
    void setPointSpread(const double &point_spread);
    bool is_point_spread_Set() const;
    bool is_point_spread_Valid() const;

    qint32 getScoreId() const;
    void setScoreId(const qint32 &score_id);
    bool is_score_id_Set() const;
    bool is_score_id_Valid() const;

    qint32 getSeason() const;
    void setSeason(const qint32 &season);
    bool is_season_Set() const;
    bool is_season_Valid() const;

    qint32 getSeasonType() const;
    void setSeasonType(const qint32 &season_type);
    bool is_season_type_Set() const;
    bool is_season_type_Valid() const;

    OAIStadium getStadiumDetails() const;
    void setStadiumDetails(const OAIStadium &stadium_details);
    bool is_stadium_details_Set() const;
    bool is_stadium_details_Valid() const;

    qint32 getStadiumId() const;
    void setStadiumId(const qint32 &stadium_id);
    bool is_stadium_id_Set() const;
    bool is_stadium_id_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    qint32 getWeek() const;
    void setWeek(const qint32 &week);
    bool is_week_Set() const;
    bool is_week_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_away_team;
    bool m_away_team_isSet;
    bool m_away_team_isValid;

    qint32 m_away_team_money_line;
    bool m_away_team_money_line_isSet;
    bool m_away_team_money_line_isValid;

    bool m_canceled;
    bool m_canceled_isSet;
    bool m_canceled_isValid;

    QString m_channel;
    bool m_channel_isSet;
    bool m_channel_isValid;

    QString m_date;
    bool m_date_isSet;
    bool m_date_isValid;

    QString m_date_time;
    bool m_date_time_isSet;
    bool m_date_time_isValid;

    QString m_day;
    bool m_day_isSet;
    bool m_day_isValid;

    QString m_forecast_description;
    bool m_forecast_description_isSet;
    bool m_forecast_description_isValid;

    qint32 m_forecast_temp_high;
    bool m_forecast_temp_high_isSet;
    bool m_forecast_temp_high_isValid;

    qint32 m_forecast_temp_low;
    bool m_forecast_temp_low_isSet;
    bool m_forecast_temp_low_isValid;

    qint32 m_forecast_wind_chill;
    bool m_forecast_wind_chill_isSet;
    bool m_forecast_wind_chill_isValid;

    qint32 m_forecast_wind_speed;
    bool m_forecast_wind_speed_isSet;
    bool m_forecast_wind_speed_isValid;

    QString m_game_key;
    bool m_game_key_isSet;
    bool m_game_key_isValid;

    double m_geo_lat;
    bool m_geo_lat_isSet;
    bool m_geo_lat_isValid;

    double m_geo_long;
    bool m_geo_long_isSet;
    bool m_geo_long_isValid;

    qint32 m_global_away_team_id;
    bool m_global_away_team_id_isSet;
    bool m_global_away_team_id_isValid;

    qint32 m_global_game_id;
    bool m_global_game_id_isSet;
    bool m_global_game_id_isValid;

    qint32 m_global_home_team_id;
    bool m_global_home_team_id_isSet;
    bool m_global_home_team_id_isValid;

    QString m_home_team;
    bool m_home_team_isSet;
    bool m_home_team_isValid;

    qint32 m_home_team_money_line;
    bool m_home_team_money_line_isSet;
    bool m_home_team_money_line_isValid;

    double m_over_under;
    bool m_over_under_isSet;
    bool m_over_under_isValid;

    double m_point_spread;
    bool m_point_spread_isSet;
    bool m_point_spread_isValid;

    qint32 m_score_id;
    bool m_score_id_isSet;
    bool m_score_id_isValid;

    qint32 m_season;
    bool m_season_isSet;
    bool m_season_isValid;

    qint32 m_season_type;
    bool m_season_type_isSet;
    bool m_season_type_isValid;

    OAIStadium m_stadium_details;
    bool m_stadium_details_isSet;
    bool m_stadium_details_isValid;

    qint32 m_stadium_id;
    bool m_stadium_id_isSet;
    bool m_stadium_id_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    qint32 m_week;
    bool m_week_isSet;
    bool m_week_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISchedule)

#endif // OAISchedule_H
