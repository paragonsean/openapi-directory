/**
 * NFL v3 Projections
 * NFL projected stats API.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDfsSlateWithOwnershipProjection.h
 *
 * 
 */

#ifndef OAIDfsSlateWithOwnershipProjection_H
#define OAIDfsSlateWithOwnershipProjection_H

#include <QJsonObject>

#include "OAIDfsSlatePlayerOwnershipProjection.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDfsSlatePlayerOwnershipProjection;

class OAIDfsSlateWithOwnershipProjection : public OAIObject {
public:
    OAIDfsSlateWithOwnershipProjection();
    OAIDfsSlateWithOwnershipProjection(QString json);
    ~OAIDfsSlateWithOwnershipProjection() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getROperator() const;
    void setROperator(const QString &r_operator);
    bool is_r_operator_Set() const;
    bool is_r_operator_Valid() const;

    QString getOperatorDay() const;
    void setOperatorDay(const QString &operator_day);
    bool is_operator_day_Set() const;
    bool is_operator_day_Valid() const;

    QString getOperatorName() const;
    void setOperatorName(const QString &operator_name);
    bool is_operator_name_Set() const;
    bool is_operator_name_Valid() const;

    qint32 getOperatorSlateId() const;
    void setOperatorSlateId(const qint32 &operator_slate_id);
    bool is_operator_slate_id_Set() const;
    bool is_operator_slate_id_Valid() const;

    QString getOperatorStartTime() const;
    void setOperatorStartTime(const QString &operator_start_time);
    bool is_operator_start_time_Set() const;
    bool is_operator_start_time_Valid() const;

    qint32 getSlateId() const;
    void setSlateId(const qint32 &slate_id);
    bool is_slate_id_Set() const;
    bool is_slate_id_Valid() const;

    QList<OAIDfsSlatePlayerOwnershipProjection> getSlateOwnershipProjections() const;
    void setSlateOwnershipProjections(const QList<OAIDfsSlatePlayerOwnershipProjection> &slate_ownership_projections);
    bool is_slate_ownership_projections_Set() const;
    bool is_slate_ownership_projections_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_r_operator;
    bool m_r_operator_isSet;
    bool m_r_operator_isValid;

    QString m_operator_day;
    bool m_operator_day_isSet;
    bool m_operator_day_isValid;

    QString m_operator_name;
    bool m_operator_name_isSet;
    bool m_operator_name_isValid;

    qint32 m_operator_slate_id;
    bool m_operator_slate_id_isSet;
    bool m_operator_slate_id_isValid;

    QString m_operator_start_time;
    bool m_operator_start_time_isSet;
    bool m_operator_start_time_isValid;

    qint32 m_slate_id;
    bool m_slate_id_isSet;
    bool m_slate_id_isValid;

    QList<OAIDfsSlatePlayerOwnershipProjection> m_slate_ownership_projections;
    bool m_slate_ownership_projections_isSet;
    bool m_slate_ownership_projections_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDfsSlateWithOwnershipProjection)

#endif // OAIDfsSlateWithOwnershipProjection_H
