/**
 * NFL v3 Projections
 * NFL projected stats API.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDfsSlatePlayerOwnershipProjection.h
 *
 * 
 */

#ifndef OAIDfsSlatePlayerOwnershipProjection_H
#define OAIDfsSlatePlayerOwnershipProjection_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDfsSlatePlayerOwnershipProjection : public OAIObject {
public:
    OAIDfsSlatePlayerOwnershipProjection();
    OAIDfsSlatePlayerOwnershipProjection(QString json);
    ~OAIDfsSlatePlayerOwnershipProjection() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getFantasyDefensePlayerId() const;
    void setFantasyDefensePlayerId(const qint32 &fantasy_defense_player_id);
    bool is_fantasy_defense_player_id_Set() const;
    bool is_fantasy_defense_player_id_Valid() const;

    bool isIsCaptain() const;
    void setIsCaptain(const bool &is_captain);
    bool is_is_captain_Set() const;
    bool is_is_captain_Valid() const;

    qint32 getPlayerId() const;
    void setPlayerId(const qint32 &player_id);
    bool is_player_id_Set() const;
    bool is_player_id_Valid() const;

    double getProjectedOwnershipPercentage() const;
    void setProjectedOwnershipPercentage(const double &projected_ownership_percentage);
    bool is_projected_ownership_percentage_Set() const;
    bool is_projected_ownership_percentage_Valid() const;

    qint32 getSlateId() const;
    void setSlateId(const qint32 &slate_id);
    bool is_slate_id_Set() const;
    bool is_slate_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_fantasy_defense_player_id;
    bool m_fantasy_defense_player_id_isSet;
    bool m_fantasy_defense_player_id_isValid;

    bool m_is_captain;
    bool m_is_captain_isSet;
    bool m_is_captain_isValid;

    qint32 m_player_id;
    bool m_player_id_isSet;
    bool m_player_id_isValid;

    double m_projected_ownership_percentage;
    bool m_projected_ownership_percentage_isSet;
    bool m_projected_ownership_percentage_isValid;

    qint32 m_slate_id;
    bool m_slate_id_isSet;
    bool m_slate_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDfsSlatePlayerOwnershipProjection)

#endif // OAIDfsSlatePlayerOwnershipProjection_H
