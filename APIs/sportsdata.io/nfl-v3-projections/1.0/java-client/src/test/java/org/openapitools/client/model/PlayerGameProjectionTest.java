/*
 * NFL v3 Projections
 * NFL projected stats API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ScoringDetail;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for PlayerGameProjection
 */
public class PlayerGameProjectionTest {
    private final PlayerGameProjection model = new PlayerGameProjection();

    /**
     * Model tests for PlayerGameProjection
     */
    @Test
    public void testPlayerGameProjection() {
        // TODO: test PlayerGameProjection
    }

    /**
     * Test the property 'activated'
     */
    @Test
    public void activatedTest() {
        // TODO: test activated
    }

    /**
     * Test the property 'assistedTackles'
     */
    @Test
    public void assistedTacklesTest() {
        // TODO: test assistedTackles
    }

    /**
     * Test the property 'blockedKickReturnTouchdowns'
     */
    @Test
    public void blockedKickReturnTouchdownsTest() {
        // TODO: test blockedKickReturnTouchdowns
    }

    /**
     * Test the property 'blockedKickReturnYards'
     */
    @Test
    public void blockedKickReturnYardsTest() {
        // TODO: test blockedKickReturnYards
    }

    /**
     * Test the property 'blockedKicks'
     */
    @Test
    public void blockedKicksTest() {
        // TODO: test blockedKicks
    }

    /**
     * Test the property 'dateTime'
     */
    @Test
    public void dateTimeTest() {
        // TODO: test dateTime
    }

    /**
     * Test the property 'day'
     */
    @Test
    public void dayTest() {
        // TODO: test day
    }

    /**
     * Test the property 'declaredInactive'
     */
    @Test
    public void declaredInactiveTest() {
        // TODO: test declaredInactive
    }

    /**
     * Test the property 'defensiveSnapsPlayed'
     */
    @Test
    public void defensiveSnapsPlayedTest() {
        // TODO: test defensiveSnapsPlayed
    }

    /**
     * Test the property 'defensiveTeamSnaps'
     */
    @Test
    public void defensiveTeamSnapsTest() {
        // TODO: test defensiveTeamSnaps
    }

    /**
     * Test the property 'defensiveTouchdowns'
     */
    @Test
    public void defensiveTouchdownsTest() {
        // TODO: test defensiveTouchdowns
    }

    /**
     * Test the property 'draftKingsPosition'
     */
    @Test
    public void draftKingsPositionTest() {
        // TODO: test draftKingsPosition
    }

    /**
     * Test the property 'draftKingsSalary'
     */
    @Test
    public void draftKingsSalaryTest() {
        // TODO: test draftKingsSalary
    }

    /**
     * Test the property 'extraPointsAttempted'
     */
    @Test
    public void extraPointsAttemptedTest() {
        // TODO: test extraPointsAttempted
    }

    /**
     * Test the property 'extraPointsHadBlocked'
     */
    @Test
    public void extraPointsHadBlockedTest() {
        // TODO: test extraPointsHadBlocked
    }

    /**
     * Test the property 'extraPointsMade'
     */
    @Test
    public void extraPointsMadeTest() {
        // TODO: test extraPointsMade
    }

    /**
     * Test the property 'fanDuelPosition'
     */
    @Test
    public void fanDuelPositionTest() {
        // TODO: test fanDuelPosition
    }

    /**
     * Test the property 'fanDuelSalary'
     */
    @Test
    public void fanDuelSalaryTest() {
        // TODO: test fanDuelSalary
    }

    /**
     * Test the property 'fantasyDataSalary'
     */
    @Test
    public void fantasyDataSalaryTest() {
        // TODO: test fantasyDataSalary
    }

    /**
     * Test the property 'fantasyDraftPosition'
     */
    @Test
    public void fantasyDraftPositionTest() {
        // TODO: test fantasyDraftPosition
    }

    /**
     * Test the property 'fantasyDraftSalary'
     */
    @Test
    public void fantasyDraftSalaryTest() {
        // TODO: test fantasyDraftSalary
    }

    /**
     * Test the property 'fantasyPoints'
     */
    @Test
    public void fantasyPointsTest() {
        // TODO: test fantasyPoints
    }

    /**
     * Test the property 'fantasyPointsDraftKings'
     */
    @Test
    public void fantasyPointsDraftKingsTest() {
        // TODO: test fantasyPointsDraftKings
    }

    /**
     * Test the property 'fantasyPointsFanDuel'
     */
    @Test
    public void fantasyPointsFanDuelTest() {
        // TODO: test fantasyPointsFanDuel
    }

    /**
     * Test the property 'fantasyPointsFantasyDraft'
     */
    @Test
    public void fantasyPointsFantasyDraftTest() {
        // TODO: test fantasyPointsFantasyDraft
    }

    /**
     * Test the property 'fantasyPointsPPR'
     */
    @Test
    public void fantasyPointsPPRTest() {
        // TODO: test fantasyPointsPPR
    }

    /**
     * Test the property 'fantasyPointsYahoo'
     */
    @Test
    public void fantasyPointsYahooTest() {
        // TODO: test fantasyPointsYahoo
    }

    /**
     * Test the property 'fantasyPosition'
     */
    @Test
    public void fantasyPositionTest() {
        // TODO: test fantasyPosition
    }

    /**
     * Test the property 'fieldGoalPercentage'
     */
    @Test
    public void fieldGoalPercentageTest() {
        // TODO: test fieldGoalPercentage
    }

    /**
     * Test the property 'fieldGoalReturnTouchdowns'
     */
    @Test
    public void fieldGoalReturnTouchdownsTest() {
        // TODO: test fieldGoalReturnTouchdowns
    }

    /**
     * Test the property 'fieldGoalReturnYards'
     */
    @Test
    public void fieldGoalReturnYardsTest() {
        // TODO: test fieldGoalReturnYards
    }

    /**
     * Test the property 'fieldGoalsAttempted'
     */
    @Test
    public void fieldGoalsAttemptedTest() {
        // TODO: test fieldGoalsAttempted
    }

    /**
     * Test the property 'fieldGoalsHadBlocked'
     */
    @Test
    public void fieldGoalsHadBlockedTest() {
        // TODO: test fieldGoalsHadBlocked
    }

    /**
     * Test the property 'fieldGoalsLongestMade'
     */
    @Test
    public void fieldGoalsLongestMadeTest() {
        // TODO: test fieldGoalsLongestMade
    }

    /**
     * Test the property 'fieldGoalsMade'
     */
    @Test
    public void fieldGoalsMadeTest() {
        // TODO: test fieldGoalsMade
    }

    /**
     * Test the property 'fieldGoalsMade0to19'
     */
    @Test
    public void fieldGoalsMade0to19Test() {
        // TODO: test fieldGoalsMade0to19
    }

    /**
     * Test the property 'fieldGoalsMade20to29'
     */
    @Test
    public void fieldGoalsMade20to29Test() {
        // TODO: test fieldGoalsMade20to29
    }

    /**
     * Test the property 'fieldGoalsMade30to39'
     */
    @Test
    public void fieldGoalsMade30to39Test() {
        // TODO: test fieldGoalsMade30to39
    }

    /**
     * Test the property 'fieldGoalsMade40to49'
     */
    @Test
    public void fieldGoalsMade40to49Test() {
        // TODO: test fieldGoalsMade40to49
    }

    /**
     * Test the property 'fieldGoalsMade50Plus'
     */
    @Test
    public void fieldGoalsMade50PlusTest() {
        // TODO: test fieldGoalsMade50Plus
    }

    /**
     * Test the property 'fumbleReturnTouchdowns'
     */
    @Test
    public void fumbleReturnTouchdownsTest() {
        // TODO: test fumbleReturnTouchdowns
    }

    /**
     * Test the property 'fumbleReturnYards'
     */
    @Test
    public void fumbleReturnYardsTest() {
        // TODO: test fumbleReturnYards
    }

    /**
     * Test the property 'fumbles'
     */
    @Test
    public void fumblesTest() {
        // TODO: test fumbles
    }

    /**
     * Test the property 'fumblesForced'
     */
    @Test
    public void fumblesForcedTest() {
        // TODO: test fumblesForced
    }

    /**
     * Test the property 'fumblesLost'
     */
    @Test
    public void fumblesLostTest() {
        // TODO: test fumblesLost
    }

    /**
     * Test the property 'fumblesOutOfBounds'
     */
    @Test
    public void fumblesOutOfBoundsTest() {
        // TODO: test fumblesOutOfBounds
    }

    /**
     * Test the property 'fumblesOwnRecoveries'
     */
    @Test
    public void fumblesOwnRecoveriesTest() {
        // TODO: test fumblesOwnRecoveries
    }

    /**
     * Test the property 'fumblesRecovered'
     */
    @Test
    public void fumblesRecoveredTest() {
        // TODO: test fumblesRecovered
    }

    /**
     * Test the property 'gameDate'
     */
    @Test
    public void gameDateTest() {
        // TODO: test gameDate
    }

    /**
     * Test the property 'gameKey'
     */
    @Test
    public void gameKeyTest() {
        // TODO: test gameKey
    }

    /**
     * Test the property 'globalGameID'
     */
    @Test
    public void globalGameIDTest() {
        // TODO: test globalGameID
    }

    /**
     * Test the property 'globalOpponentID'
     */
    @Test
    public void globalOpponentIDTest() {
        // TODO: test globalOpponentID
    }

    /**
     * Test the property 'globalTeamID'
     */
    @Test
    public void globalTeamIDTest() {
        // TODO: test globalTeamID
    }

    /**
     * Test the property 'homeOrAway'
     */
    @Test
    public void homeOrAwayTest() {
        // TODO: test homeOrAway
    }

    /**
     * Test the property 'humidity'
     */
    @Test
    public void humidityTest() {
        // TODO: test humidity
    }

    /**
     * Test the property 'injuryBodyPart'
     */
    @Test
    public void injuryBodyPartTest() {
        // TODO: test injuryBodyPart
    }

    /**
     * Test the property 'injuryNotes'
     */
    @Test
    public void injuryNotesTest() {
        // TODO: test injuryNotes
    }

    /**
     * Test the property 'injuryPractice'
     */
    @Test
    public void injuryPracticeTest() {
        // TODO: test injuryPractice
    }

    /**
     * Test the property 'injuryPracticeDescription'
     */
    @Test
    public void injuryPracticeDescriptionTest() {
        // TODO: test injuryPracticeDescription
    }

    /**
     * Test the property 'injuryStartDate'
     */
    @Test
    public void injuryStartDateTest() {
        // TODO: test injuryStartDate
    }

    /**
     * Test the property 'injuryStatus'
     */
    @Test
    public void injuryStatusTest() {
        // TODO: test injuryStatus
    }

    /**
     * Test the property 'interceptionReturnTouchdowns'
     */
    @Test
    public void interceptionReturnTouchdownsTest() {
        // TODO: test interceptionReturnTouchdowns
    }

    /**
     * Test the property 'interceptionReturnYards'
     */
    @Test
    public void interceptionReturnYardsTest() {
        // TODO: test interceptionReturnYards
    }

    /**
     * Test the property 'interceptions'
     */
    @Test
    public void interceptionsTest() {
        // TODO: test interceptions
    }

    /**
     * Test the property 'isGameOver'
     */
    @Test
    public void isGameOverTest() {
        // TODO: test isGameOver
    }

    /**
     * Test the property 'kickReturnFairCatches'
     */
    @Test
    public void kickReturnFairCatchesTest() {
        // TODO: test kickReturnFairCatches
    }

    /**
     * Test the property 'kickReturnLong'
     */
    @Test
    public void kickReturnLongTest() {
        // TODO: test kickReturnLong
    }

    /**
     * Test the property 'kickReturnTouchdowns'
     */
    @Test
    public void kickReturnTouchdownsTest() {
        // TODO: test kickReturnTouchdowns
    }

    /**
     * Test the property 'kickReturnYards'
     */
    @Test
    public void kickReturnYardsTest() {
        // TODO: test kickReturnYards
    }

    /**
     * Test the property 'kickReturnYardsPerAttempt'
     */
    @Test
    public void kickReturnYardsPerAttemptTest() {
        // TODO: test kickReturnYardsPerAttempt
    }

    /**
     * Test the property 'kickReturns'
     */
    @Test
    public void kickReturnsTest() {
        // TODO: test kickReturns
    }

    /**
     * Test the property 'miscAssistedTackles'
     */
    @Test
    public void miscAssistedTacklesTest() {
        // TODO: test miscAssistedTackles
    }

    /**
     * Test the property 'miscFumblesForced'
     */
    @Test
    public void miscFumblesForcedTest() {
        // TODO: test miscFumblesForced
    }

    /**
     * Test the property 'miscFumblesRecovered'
     */
    @Test
    public void miscFumblesRecoveredTest() {
        // TODO: test miscFumblesRecovered
    }

    /**
     * Test the property 'miscSoloTackles'
     */
    @Test
    public void miscSoloTacklesTest() {
        // TODO: test miscSoloTackles
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'number'
     */
    @Test
    public void numberTest() {
        // TODO: test number
    }

    /**
     * Test the property 'offensiveFumbleRecoveryTouchdowns'
     */
    @Test
    public void offensiveFumbleRecoveryTouchdownsTest() {
        // TODO: test offensiveFumbleRecoveryTouchdowns
    }

    /**
     * Test the property 'offensiveSnapsPlayed'
     */
    @Test
    public void offensiveSnapsPlayedTest() {
        // TODO: test offensiveSnapsPlayed
    }

    /**
     * Test the property 'offensiveTeamSnaps'
     */
    @Test
    public void offensiveTeamSnapsTest() {
        // TODO: test offensiveTeamSnaps
    }

    /**
     * Test the property 'offensiveTouchdowns'
     */
    @Test
    public void offensiveTouchdownsTest() {
        // TODO: test offensiveTouchdowns
    }

    /**
     * Test the property 'opponent'
     */
    @Test
    public void opponentTest() {
        // TODO: test opponent
    }

    /**
     * Test the property 'opponentID'
     */
    @Test
    public void opponentIDTest() {
        // TODO: test opponentID
    }

    /**
     * Test the property 'opponentPositionRank'
     */
    @Test
    public void opponentPositionRankTest() {
        // TODO: test opponentPositionRank
    }

    /**
     * Test the property 'opponentRank'
     */
    @Test
    public void opponentRankTest() {
        // TODO: test opponentRank
    }

    /**
     * Test the property 'passesDefended'
     */
    @Test
    public void passesDefendedTest() {
        // TODO: test passesDefended
    }

    /**
     * Test the property 'passingAttempts'
     */
    @Test
    public void passingAttemptsTest() {
        // TODO: test passingAttempts
    }

    /**
     * Test the property 'passingCompletionPercentage'
     */
    @Test
    public void passingCompletionPercentageTest() {
        // TODO: test passingCompletionPercentage
    }

    /**
     * Test the property 'passingCompletions'
     */
    @Test
    public void passingCompletionsTest() {
        // TODO: test passingCompletions
    }

    /**
     * Test the property 'passingInterceptions'
     */
    @Test
    public void passingInterceptionsTest() {
        // TODO: test passingInterceptions
    }

    /**
     * Test the property 'passingLong'
     */
    @Test
    public void passingLongTest() {
        // TODO: test passingLong
    }

    /**
     * Test the property 'passingRating'
     */
    @Test
    public void passingRatingTest() {
        // TODO: test passingRating
    }

    /**
     * Test the property 'passingSackYards'
     */
    @Test
    public void passingSackYardsTest() {
        // TODO: test passingSackYards
    }

    /**
     * Test the property 'passingSacks'
     */
    @Test
    public void passingSacksTest() {
        // TODO: test passingSacks
    }

    /**
     * Test the property 'passingTouchdowns'
     */
    @Test
    public void passingTouchdownsTest() {
        // TODO: test passingTouchdowns
    }

    /**
     * Test the property 'passingYards'
     */
    @Test
    public void passingYardsTest() {
        // TODO: test passingYards
    }

    /**
     * Test the property 'passingYardsPerAttempt'
     */
    @Test
    public void passingYardsPerAttemptTest() {
        // TODO: test passingYardsPerAttempt
    }

    /**
     * Test the property 'passingYardsPerCompletion'
     */
    @Test
    public void passingYardsPerCompletionTest() {
        // TODO: test passingYardsPerCompletion
    }

    /**
     * Test the property 'played'
     */
    @Test
    public void playedTest() {
        // TODO: test played
    }

    /**
     * Test the property 'playerGameID'
     */
    @Test
    public void playerGameIDTest() {
        // TODO: test playerGameID
    }

    /**
     * Test the property 'playerID'
     */
    @Test
    public void playerIDTest() {
        // TODO: test playerID
    }

    /**
     * Test the property 'playingSurface'
     */
    @Test
    public void playingSurfaceTest() {
        // TODO: test playingSurface
    }

    /**
     * Test the property 'position'
     */
    @Test
    public void positionTest() {
        // TODO: test position
    }

    /**
     * Test the property 'positionCategory'
     */
    @Test
    public void positionCategoryTest() {
        // TODO: test positionCategory
    }

    /**
     * Test the property 'puntAverage'
     */
    @Test
    public void puntAverageTest() {
        // TODO: test puntAverage
    }

    /**
     * Test the property 'puntInside20'
     */
    @Test
    public void puntInside20Test() {
        // TODO: test puntInside20
    }

    /**
     * Test the property 'puntLong'
     */
    @Test
    public void puntLongTest() {
        // TODO: test puntLong
    }

    /**
     * Test the property 'puntNetAverage'
     */
    @Test
    public void puntNetAverageTest() {
        // TODO: test puntNetAverage
    }

    /**
     * Test the property 'puntNetYards'
     */
    @Test
    public void puntNetYardsTest() {
        // TODO: test puntNetYards
    }

    /**
     * Test the property 'puntReturnFairCatches'
     */
    @Test
    public void puntReturnFairCatchesTest() {
        // TODO: test puntReturnFairCatches
    }

    /**
     * Test the property 'puntReturnLong'
     */
    @Test
    public void puntReturnLongTest() {
        // TODO: test puntReturnLong
    }

    /**
     * Test the property 'puntReturnTouchdowns'
     */
    @Test
    public void puntReturnTouchdownsTest() {
        // TODO: test puntReturnTouchdowns
    }

    /**
     * Test the property 'puntReturnYards'
     */
    @Test
    public void puntReturnYardsTest() {
        // TODO: test puntReturnYards
    }

    /**
     * Test the property 'puntReturnYardsPerAttempt'
     */
    @Test
    public void puntReturnYardsPerAttemptTest() {
        // TODO: test puntReturnYardsPerAttempt
    }

    /**
     * Test the property 'puntReturns'
     */
    @Test
    public void puntReturnsTest() {
        // TODO: test puntReturns
    }

    /**
     * Test the property 'puntTouchbacks'
     */
    @Test
    public void puntTouchbacksTest() {
        // TODO: test puntTouchbacks
    }

    /**
     * Test the property 'puntYards'
     */
    @Test
    public void puntYardsTest() {
        // TODO: test puntYards
    }

    /**
     * Test the property 'punts'
     */
    @Test
    public void puntsTest() {
        // TODO: test punts
    }

    /**
     * Test the property 'puntsHadBlocked'
     */
    @Test
    public void puntsHadBlockedTest() {
        // TODO: test puntsHadBlocked
    }

    /**
     * Test the property 'quarterbackHits'
     */
    @Test
    public void quarterbackHitsTest() {
        // TODO: test quarterbackHits
    }

    /**
     * Test the property 'receivingLong'
     */
    @Test
    public void receivingLongTest() {
        // TODO: test receivingLong
    }

    /**
     * Test the property 'receivingTargets'
     */
    @Test
    public void receivingTargetsTest() {
        // TODO: test receivingTargets
    }

    /**
     * Test the property 'receivingTouchdowns'
     */
    @Test
    public void receivingTouchdownsTest() {
        // TODO: test receivingTouchdowns
    }

    /**
     * Test the property 'receivingYards'
     */
    @Test
    public void receivingYardsTest() {
        // TODO: test receivingYards
    }

    /**
     * Test the property 'receivingYardsPerReception'
     */
    @Test
    public void receivingYardsPerReceptionTest() {
        // TODO: test receivingYardsPerReception
    }

    /**
     * Test the property 'receivingYardsPerTarget'
     */
    @Test
    public void receivingYardsPerTargetTest() {
        // TODO: test receivingYardsPerTarget
    }

    /**
     * Test the property 'receptionPercentage'
     */
    @Test
    public void receptionPercentageTest() {
        // TODO: test receptionPercentage
    }

    /**
     * Test the property 'receptions'
     */
    @Test
    public void receptionsTest() {
        // TODO: test receptions
    }

    /**
     * Test the property 'rushingAttempts'
     */
    @Test
    public void rushingAttemptsTest() {
        // TODO: test rushingAttempts
    }

    /**
     * Test the property 'rushingLong'
     */
    @Test
    public void rushingLongTest() {
        // TODO: test rushingLong
    }

    /**
     * Test the property 'rushingTouchdowns'
     */
    @Test
    public void rushingTouchdownsTest() {
        // TODO: test rushingTouchdowns
    }

    /**
     * Test the property 'rushingYards'
     */
    @Test
    public void rushingYardsTest() {
        // TODO: test rushingYards
    }

    /**
     * Test the property 'rushingYardsPerAttempt'
     */
    @Test
    public void rushingYardsPerAttemptTest() {
        // TODO: test rushingYardsPerAttempt
    }

    /**
     * Test the property 'sackYards'
     */
    @Test
    public void sackYardsTest() {
        // TODO: test sackYards
    }

    /**
     * Test the property 'sacks'
     */
    @Test
    public void sacksTest() {
        // TODO: test sacks
    }

    /**
     * Test the property 'safeties'
     */
    @Test
    public void safetiesTest() {
        // TODO: test safeties
    }

    /**
     * Test the property 'safetiesAllowed'
     */
    @Test
    public void safetiesAllowedTest() {
        // TODO: test safetiesAllowed
    }

    /**
     * Test the property 'scoreID'
     */
    @Test
    public void scoreIDTest() {
        // TODO: test scoreID
    }

    /**
     * Test the property 'scoringDetails'
     */
    @Test
    public void scoringDetailsTest() {
        // TODO: test scoringDetails
    }

    /**
     * Test the property 'season'
     */
    @Test
    public void seasonTest() {
        // TODO: test season
    }

    /**
     * Test the property 'seasonType'
     */
    @Test
    public void seasonTypeTest() {
        // TODO: test seasonType
    }

    /**
     * Test the property 'shortName'
     */
    @Test
    public void shortNameTest() {
        // TODO: test shortName
    }

    /**
     * Test the property 'snapCountsConfirmed'
     */
    @Test
    public void snapCountsConfirmedTest() {
        // TODO: test snapCountsConfirmed
    }

    /**
     * Test the property 'soloTackles'
     */
    @Test
    public void soloTacklesTest() {
        // TODO: test soloTackles
    }

    /**
     * Test the property 'specialTeamsAssistedTackles'
     */
    @Test
    public void specialTeamsAssistedTacklesTest() {
        // TODO: test specialTeamsAssistedTackles
    }

    /**
     * Test the property 'specialTeamsFumblesForced'
     */
    @Test
    public void specialTeamsFumblesForcedTest() {
        // TODO: test specialTeamsFumblesForced
    }

    /**
     * Test the property 'specialTeamsFumblesRecovered'
     */
    @Test
    public void specialTeamsFumblesRecoveredTest() {
        // TODO: test specialTeamsFumblesRecovered
    }

    /**
     * Test the property 'specialTeamsSnapsPlayed'
     */
    @Test
    public void specialTeamsSnapsPlayedTest() {
        // TODO: test specialTeamsSnapsPlayed
    }

    /**
     * Test the property 'specialTeamsSoloTackles'
     */
    @Test
    public void specialTeamsSoloTacklesTest() {
        // TODO: test specialTeamsSoloTackles
    }

    /**
     * Test the property 'specialTeamsTeamSnaps'
     */
    @Test
    public void specialTeamsTeamSnapsTest() {
        // TODO: test specialTeamsTeamSnaps
    }

    /**
     * Test the property 'specialTeamsTouchdowns'
     */
    @Test
    public void specialTeamsTouchdownsTest() {
        // TODO: test specialTeamsTouchdowns
    }

    /**
     * Test the property 'stadium'
     */
    @Test
    public void stadiumTest() {
        // TODO: test stadium
    }

    /**
     * Test the property 'started'
     */
    @Test
    public void startedTest() {
        // TODO: test started
    }

    /**
     * Test the property 'tackles'
     */
    @Test
    public void tacklesTest() {
        // TODO: test tackles
    }

    /**
     * Test the property 'tacklesForLoss'
     */
    @Test
    public void tacklesForLossTest() {
        // TODO: test tacklesForLoss
    }

    /**
     * Test the property 'team'
     */
    @Test
    public void teamTest() {
        // TODO: test team
    }

    /**
     * Test the property 'teamID'
     */
    @Test
    public void teamIDTest() {
        // TODO: test teamID
    }

    /**
     * Test the property 'temperature'
     */
    @Test
    public void temperatureTest() {
        // TODO: test temperature
    }

    /**
     * Test the property 'touchdowns'
     */
    @Test
    public void touchdownsTest() {
        // TODO: test touchdowns
    }

    /**
     * Test the property 'twoPointConversionPasses'
     */
    @Test
    public void twoPointConversionPassesTest() {
        // TODO: test twoPointConversionPasses
    }

    /**
     * Test the property 'twoPointConversionReceptions'
     */
    @Test
    public void twoPointConversionReceptionsTest() {
        // TODO: test twoPointConversionReceptions
    }

    /**
     * Test the property 'twoPointConversionReturns'
     */
    @Test
    public void twoPointConversionReturnsTest() {
        // TODO: test twoPointConversionReturns
    }

    /**
     * Test the property 'twoPointConversionRuns'
     */
    @Test
    public void twoPointConversionRunsTest() {
        // TODO: test twoPointConversionRuns
    }

    /**
     * Test the property 'victivSalary'
     */
    @Test
    public void victivSalaryTest() {
        // TODO: test victivSalary
    }

    /**
     * Test the property 'week'
     */
    @Test
    public void weekTest() {
        // TODO: test week
    }

    /**
     * Test the property 'windSpeed'
     */
    @Test
    public void windSpeedTest() {
        // TODO: test windSpeed
    }

    /**
     * Test the property 'yahooPosition'
     */
    @Test
    public void yahooPositionTest() {
        // TODO: test yahooPosition
    }

    /**
     * Test the property 'yahooSalary'
     */
    @Test
    public void yahooSalaryTest() {
        // TODO: test yahooSalary
    }

}
