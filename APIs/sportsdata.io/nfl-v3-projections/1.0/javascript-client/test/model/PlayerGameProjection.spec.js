/**
 * NFL v3 Projections
 * NFL projected stats API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NflV3Projections);
  }
}(this, function(expect, NflV3Projections) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NflV3Projections.PlayerGameProjection();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PlayerGameProjection', function() {
    it('should create an instance of PlayerGameProjection', function() {
      // uncomment below and update the code to test PlayerGameProjection
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be.a(NflV3Projections.PlayerGameProjection);
    });

    it('should have the property activated (base name: "Activated")', function() {
      // uncomment below and update the code to test the property activated
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property assistedTackles (base name: "AssistedTackles")', function() {
      // uncomment below and update the code to test the property assistedTackles
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property blockedKickReturnTouchdowns (base name: "BlockedKickReturnTouchdowns")', function() {
      // uncomment below and update the code to test the property blockedKickReturnTouchdowns
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property blockedKickReturnYards (base name: "BlockedKickReturnYards")', function() {
      // uncomment below and update the code to test the property blockedKickReturnYards
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property blockedKicks (base name: "BlockedKicks")', function() {
      // uncomment below and update the code to test the property blockedKicks
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property dateTime (base name: "DateTime")', function() {
      // uncomment below and update the code to test the property dateTime
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property day (base name: "Day")', function() {
      // uncomment below and update the code to test the property day
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property declaredInactive (base name: "DeclaredInactive")', function() {
      // uncomment below and update the code to test the property declaredInactive
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property defensiveSnapsPlayed (base name: "DefensiveSnapsPlayed")', function() {
      // uncomment below and update the code to test the property defensiveSnapsPlayed
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property defensiveTeamSnaps (base name: "DefensiveTeamSnaps")', function() {
      // uncomment below and update the code to test the property defensiveTeamSnaps
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property defensiveTouchdowns (base name: "DefensiveTouchdowns")', function() {
      // uncomment below and update the code to test the property defensiveTouchdowns
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property draftKingsPosition (base name: "DraftKingsPosition")', function() {
      // uncomment below and update the code to test the property draftKingsPosition
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property draftKingsSalary (base name: "DraftKingsSalary")', function() {
      // uncomment below and update the code to test the property draftKingsSalary
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property extraPointsAttempted (base name: "ExtraPointsAttempted")', function() {
      // uncomment below and update the code to test the property extraPointsAttempted
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property extraPointsHadBlocked (base name: "ExtraPointsHadBlocked")', function() {
      // uncomment below and update the code to test the property extraPointsHadBlocked
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property extraPointsMade (base name: "ExtraPointsMade")', function() {
      // uncomment below and update the code to test the property extraPointsMade
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property fanDuelPosition (base name: "FanDuelPosition")', function() {
      // uncomment below and update the code to test the property fanDuelPosition
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property fanDuelSalary (base name: "FanDuelSalary")', function() {
      // uncomment below and update the code to test the property fanDuelSalary
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property fantasyDataSalary (base name: "FantasyDataSalary")', function() {
      // uncomment below and update the code to test the property fantasyDataSalary
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property fantasyDraftPosition (base name: "FantasyDraftPosition")', function() {
      // uncomment below and update the code to test the property fantasyDraftPosition
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property fantasyDraftSalary (base name: "FantasyDraftSalary")', function() {
      // uncomment below and update the code to test the property fantasyDraftSalary
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property fantasyPoints (base name: "FantasyPoints")', function() {
      // uncomment below and update the code to test the property fantasyPoints
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property fantasyPointsDraftKings (base name: "FantasyPointsDraftKings")', function() {
      // uncomment below and update the code to test the property fantasyPointsDraftKings
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property fantasyPointsFanDuel (base name: "FantasyPointsFanDuel")', function() {
      // uncomment below and update the code to test the property fantasyPointsFanDuel
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property fantasyPointsFantasyDraft (base name: "FantasyPointsFantasyDraft")', function() {
      // uncomment below and update the code to test the property fantasyPointsFantasyDraft
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property fantasyPointsPPR (base name: "FantasyPointsPPR")', function() {
      // uncomment below and update the code to test the property fantasyPointsPPR
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property fantasyPointsYahoo (base name: "FantasyPointsYahoo")', function() {
      // uncomment below and update the code to test the property fantasyPointsYahoo
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property fantasyPosition (base name: "FantasyPosition")', function() {
      // uncomment below and update the code to test the property fantasyPosition
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property fieldGoalPercentage (base name: "FieldGoalPercentage")', function() {
      // uncomment below and update the code to test the property fieldGoalPercentage
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property fieldGoalReturnTouchdowns (base name: "FieldGoalReturnTouchdowns")', function() {
      // uncomment below and update the code to test the property fieldGoalReturnTouchdowns
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property fieldGoalReturnYards (base name: "FieldGoalReturnYards")', function() {
      // uncomment below and update the code to test the property fieldGoalReturnYards
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property fieldGoalsAttempted (base name: "FieldGoalsAttempted")', function() {
      // uncomment below and update the code to test the property fieldGoalsAttempted
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property fieldGoalsHadBlocked (base name: "FieldGoalsHadBlocked")', function() {
      // uncomment below and update the code to test the property fieldGoalsHadBlocked
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property fieldGoalsLongestMade (base name: "FieldGoalsLongestMade")', function() {
      // uncomment below and update the code to test the property fieldGoalsLongestMade
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property fieldGoalsMade (base name: "FieldGoalsMade")', function() {
      // uncomment below and update the code to test the property fieldGoalsMade
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property fieldGoalsMade0to19 (base name: "FieldGoalsMade0to19")', function() {
      // uncomment below and update the code to test the property fieldGoalsMade0to19
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property fieldGoalsMade20to29 (base name: "FieldGoalsMade20to29")', function() {
      // uncomment below and update the code to test the property fieldGoalsMade20to29
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property fieldGoalsMade30to39 (base name: "FieldGoalsMade30to39")', function() {
      // uncomment below and update the code to test the property fieldGoalsMade30to39
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property fieldGoalsMade40to49 (base name: "FieldGoalsMade40to49")', function() {
      // uncomment below and update the code to test the property fieldGoalsMade40to49
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property fieldGoalsMade50Plus (base name: "FieldGoalsMade50Plus")', function() {
      // uncomment below and update the code to test the property fieldGoalsMade50Plus
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property fumbleReturnTouchdowns (base name: "FumbleReturnTouchdowns")', function() {
      // uncomment below and update the code to test the property fumbleReturnTouchdowns
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property fumbleReturnYards (base name: "FumbleReturnYards")', function() {
      // uncomment below and update the code to test the property fumbleReturnYards
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property fumbles (base name: "Fumbles")', function() {
      // uncomment below and update the code to test the property fumbles
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property fumblesForced (base name: "FumblesForced")', function() {
      // uncomment below and update the code to test the property fumblesForced
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property fumblesLost (base name: "FumblesLost")', function() {
      // uncomment below and update the code to test the property fumblesLost
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property fumblesOutOfBounds (base name: "FumblesOutOfBounds")', function() {
      // uncomment below and update the code to test the property fumblesOutOfBounds
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property fumblesOwnRecoveries (base name: "FumblesOwnRecoveries")', function() {
      // uncomment below and update the code to test the property fumblesOwnRecoveries
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property fumblesRecovered (base name: "FumblesRecovered")', function() {
      // uncomment below and update the code to test the property fumblesRecovered
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property gameDate (base name: "GameDate")', function() {
      // uncomment below and update the code to test the property gameDate
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property gameKey (base name: "GameKey")', function() {
      // uncomment below and update the code to test the property gameKey
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property globalGameID (base name: "GlobalGameID")', function() {
      // uncomment below and update the code to test the property globalGameID
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property globalOpponentID (base name: "GlobalOpponentID")', function() {
      // uncomment below and update the code to test the property globalOpponentID
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property globalTeamID (base name: "GlobalTeamID")', function() {
      // uncomment below and update the code to test the property globalTeamID
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property homeOrAway (base name: "HomeOrAway")', function() {
      // uncomment below and update the code to test the property homeOrAway
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property humidity (base name: "Humidity")', function() {
      // uncomment below and update the code to test the property humidity
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property injuryBodyPart (base name: "InjuryBodyPart")', function() {
      // uncomment below and update the code to test the property injuryBodyPart
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property injuryNotes (base name: "InjuryNotes")', function() {
      // uncomment below and update the code to test the property injuryNotes
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property injuryPractice (base name: "InjuryPractice")', function() {
      // uncomment below and update the code to test the property injuryPractice
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property injuryPracticeDescription (base name: "InjuryPracticeDescription")', function() {
      // uncomment below and update the code to test the property injuryPracticeDescription
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property injuryStartDate (base name: "InjuryStartDate")', function() {
      // uncomment below and update the code to test the property injuryStartDate
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property injuryStatus (base name: "InjuryStatus")', function() {
      // uncomment below and update the code to test the property injuryStatus
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property interceptionReturnTouchdowns (base name: "InterceptionReturnTouchdowns")', function() {
      // uncomment below and update the code to test the property interceptionReturnTouchdowns
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property interceptionReturnYards (base name: "InterceptionReturnYards")', function() {
      // uncomment below and update the code to test the property interceptionReturnYards
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property interceptions (base name: "Interceptions")', function() {
      // uncomment below and update the code to test the property interceptions
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property isGameOver (base name: "IsGameOver")', function() {
      // uncomment below and update the code to test the property isGameOver
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property kickReturnFairCatches (base name: "KickReturnFairCatches")', function() {
      // uncomment below and update the code to test the property kickReturnFairCatches
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property kickReturnLong (base name: "KickReturnLong")', function() {
      // uncomment below and update the code to test the property kickReturnLong
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property kickReturnTouchdowns (base name: "KickReturnTouchdowns")', function() {
      // uncomment below and update the code to test the property kickReturnTouchdowns
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property kickReturnYards (base name: "KickReturnYards")', function() {
      // uncomment below and update the code to test the property kickReturnYards
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property kickReturnYardsPerAttempt (base name: "KickReturnYardsPerAttempt")', function() {
      // uncomment below and update the code to test the property kickReturnYardsPerAttempt
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property kickReturns (base name: "KickReturns")', function() {
      // uncomment below and update the code to test the property kickReturns
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property miscAssistedTackles (base name: "MiscAssistedTackles")', function() {
      // uncomment below and update the code to test the property miscAssistedTackles
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property miscFumblesForced (base name: "MiscFumblesForced")', function() {
      // uncomment below and update the code to test the property miscFumblesForced
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property miscFumblesRecovered (base name: "MiscFumblesRecovered")', function() {
      // uncomment below and update the code to test the property miscFumblesRecovered
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property miscSoloTackles (base name: "MiscSoloTackles")', function() {
      // uncomment below and update the code to test the property miscSoloTackles
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "Name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property number (base name: "Number")', function() {
      // uncomment below and update the code to test the property number
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property offensiveFumbleRecoveryTouchdowns (base name: "OffensiveFumbleRecoveryTouchdowns")', function() {
      // uncomment below and update the code to test the property offensiveFumbleRecoveryTouchdowns
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property offensiveSnapsPlayed (base name: "OffensiveSnapsPlayed")', function() {
      // uncomment below and update the code to test the property offensiveSnapsPlayed
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property offensiveTeamSnaps (base name: "OffensiveTeamSnaps")', function() {
      // uncomment below and update the code to test the property offensiveTeamSnaps
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property offensiveTouchdowns (base name: "OffensiveTouchdowns")', function() {
      // uncomment below and update the code to test the property offensiveTouchdowns
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property opponent (base name: "Opponent")', function() {
      // uncomment below and update the code to test the property opponent
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property opponentID (base name: "OpponentID")', function() {
      // uncomment below and update the code to test the property opponentID
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property opponentPositionRank (base name: "OpponentPositionRank")', function() {
      // uncomment below and update the code to test the property opponentPositionRank
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property opponentRank (base name: "OpponentRank")', function() {
      // uncomment below and update the code to test the property opponentRank
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property passesDefended (base name: "PassesDefended")', function() {
      // uncomment below and update the code to test the property passesDefended
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property passingAttempts (base name: "PassingAttempts")', function() {
      // uncomment below and update the code to test the property passingAttempts
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property passingCompletionPercentage (base name: "PassingCompletionPercentage")', function() {
      // uncomment below and update the code to test the property passingCompletionPercentage
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property passingCompletions (base name: "PassingCompletions")', function() {
      // uncomment below and update the code to test the property passingCompletions
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property passingInterceptions (base name: "PassingInterceptions")', function() {
      // uncomment below and update the code to test the property passingInterceptions
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property passingLong (base name: "PassingLong")', function() {
      // uncomment below and update the code to test the property passingLong
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property passingRating (base name: "PassingRating")', function() {
      // uncomment below and update the code to test the property passingRating
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property passingSackYards (base name: "PassingSackYards")', function() {
      // uncomment below and update the code to test the property passingSackYards
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property passingSacks (base name: "PassingSacks")', function() {
      // uncomment below and update the code to test the property passingSacks
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property passingTouchdowns (base name: "PassingTouchdowns")', function() {
      // uncomment below and update the code to test the property passingTouchdowns
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property passingYards (base name: "PassingYards")', function() {
      // uncomment below and update the code to test the property passingYards
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property passingYardsPerAttempt (base name: "PassingYardsPerAttempt")', function() {
      // uncomment below and update the code to test the property passingYardsPerAttempt
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property passingYardsPerCompletion (base name: "PassingYardsPerCompletion")', function() {
      // uncomment below and update the code to test the property passingYardsPerCompletion
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property played (base name: "Played")', function() {
      // uncomment below and update the code to test the property played
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property playerGameID (base name: "PlayerGameID")', function() {
      // uncomment below and update the code to test the property playerGameID
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property playerID (base name: "PlayerID")', function() {
      // uncomment below and update the code to test the property playerID
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property playingSurface (base name: "PlayingSurface")', function() {
      // uncomment below and update the code to test the property playingSurface
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property position (base name: "Position")', function() {
      // uncomment below and update the code to test the property position
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property positionCategory (base name: "PositionCategory")', function() {
      // uncomment below and update the code to test the property positionCategory
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property puntAverage (base name: "PuntAverage")', function() {
      // uncomment below and update the code to test the property puntAverage
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property puntInside20 (base name: "PuntInside20")', function() {
      // uncomment below and update the code to test the property puntInside20
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property puntLong (base name: "PuntLong")', function() {
      // uncomment below and update the code to test the property puntLong
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property puntNetAverage (base name: "PuntNetAverage")', function() {
      // uncomment below and update the code to test the property puntNetAverage
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property puntNetYards (base name: "PuntNetYards")', function() {
      // uncomment below and update the code to test the property puntNetYards
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property puntReturnFairCatches (base name: "PuntReturnFairCatches")', function() {
      // uncomment below and update the code to test the property puntReturnFairCatches
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property puntReturnLong (base name: "PuntReturnLong")', function() {
      // uncomment below and update the code to test the property puntReturnLong
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property puntReturnTouchdowns (base name: "PuntReturnTouchdowns")', function() {
      // uncomment below and update the code to test the property puntReturnTouchdowns
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property puntReturnYards (base name: "PuntReturnYards")', function() {
      // uncomment below and update the code to test the property puntReturnYards
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property puntReturnYardsPerAttempt (base name: "PuntReturnYardsPerAttempt")', function() {
      // uncomment below and update the code to test the property puntReturnYardsPerAttempt
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property puntReturns (base name: "PuntReturns")', function() {
      // uncomment below and update the code to test the property puntReturns
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property puntTouchbacks (base name: "PuntTouchbacks")', function() {
      // uncomment below and update the code to test the property puntTouchbacks
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property puntYards (base name: "PuntYards")', function() {
      // uncomment below and update the code to test the property puntYards
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property punts (base name: "Punts")', function() {
      // uncomment below and update the code to test the property punts
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property puntsHadBlocked (base name: "PuntsHadBlocked")', function() {
      // uncomment below and update the code to test the property puntsHadBlocked
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property quarterbackHits (base name: "QuarterbackHits")', function() {
      // uncomment below and update the code to test the property quarterbackHits
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property receivingLong (base name: "ReceivingLong")', function() {
      // uncomment below and update the code to test the property receivingLong
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property receivingTargets (base name: "ReceivingTargets")', function() {
      // uncomment below and update the code to test the property receivingTargets
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property receivingTouchdowns (base name: "ReceivingTouchdowns")', function() {
      // uncomment below and update the code to test the property receivingTouchdowns
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property receivingYards (base name: "ReceivingYards")', function() {
      // uncomment below and update the code to test the property receivingYards
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property receivingYardsPerReception (base name: "ReceivingYardsPerReception")', function() {
      // uncomment below and update the code to test the property receivingYardsPerReception
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property receivingYardsPerTarget (base name: "ReceivingYardsPerTarget")', function() {
      // uncomment below and update the code to test the property receivingYardsPerTarget
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property receptionPercentage (base name: "ReceptionPercentage")', function() {
      // uncomment below and update the code to test the property receptionPercentage
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property receptions (base name: "Receptions")', function() {
      // uncomment below and update the code to test the property receptions
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property rushingAttempts (base name: "RushingAttempts")', function() {
      // uncomment below and update the code to test the property rushingAttempts
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property rushingLong (base name: "RushingLong")', function() {
      // uncomment below and update the code to test the property rushingLong
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property rushingTouchdowns (base name: "RushingTouchdowns")', function() {
      // uncomment below and update the code to test the property rushingTouchdowns
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property rushingYards (base name: "RushingYards")', function() {
      // uncomment below and update the code to test the property rushingYards
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property rushingYardsPerAttempt (base name: "RushingYardsPerAttempt")', function() {
      // uncomment below and update the code to test the property rushingYardsPerAttempt
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property sackYards (base name: "SackYards")', function() {
      // uncomment below and update the code to test the property sackYards
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property sacks (base name: "Sacks")', function() {
      // uncomment below and update the code to test the property sacks
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property safeties (base name: "Safeties")', function() {
      // uncomment below and update the code to test the property safeties
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property safetiesAllowed (base name: "SafetiesAllowed")', function() {
      // uncomment below and update the code to test the property safetiesAllowed
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property scoreID (base name: "ScoreID")', function() {
      // uncomment below and update the code to test the property scoreID
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property scoringDetails (base name: "ScoringDetails")', function() {
      // uncomment below and update the code to test the property scoringDetails
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property season (base name: "Season")', function() {
      // uncomment below and update the code to test the property season
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property seasonType (base name: "SeasonType")', function() {
      // uncomment below and update the code to test the property seasonType
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property shortName (base name: "ShortName")', function() {
      // uncomment below and update the code to test the property shortName
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property snapCountsConfirmed (base name: "SnapCountsConfirmed")', function() {
      // uncomment below and update the code to test the property snapCountsConfirmed
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property soloTackles (base name: "SoloTackles")', function() {
      // uncomment below and update the code to test the property soloTackles
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property specialTeamsAssistedTackles (base name: "SpecialTeamsAssistedTackles")', function() {
      // uncomment below and update the code to test the property specialTeamsAssistedTackles
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property specialTeamsFumblesForced (base name: "SpecialTeamsFumblesForced")', function() {
      // uncomment below and update the code to test the property specialTeamsFumblesForced
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property specialTeamsFumblesRecovered (base name: "SpecialTeamsFumblesRecovered")', function() {
      // uncomment below and update the code to test the property specialTeamsFumblesRecovered
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property specialTeamsSnapsPlayed (base name: "SpecialTeamsSnapsPlayed")', function() {
      // uncomment below and update the code to test the property specialTeamsSnapsPlayed
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property specialTeamsSoloTackles (base name: "SpecialTeamsSoloTackles")', function() {
      // uncomment below and update the code to test the property specialTeamsSoloTackles
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property specialTeamsTeamSnaps (base name: "SpecialTeamsTeamSnaps")', function() {
      // uncomment below and update the code to test the property specialTeamsTeamSnaps
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property specialTeamsTouchdowns (base name: "SpecialTeamsTouchdowns")', function() {
      // uncomment below and update the code to test the property specialTeamsTouchdowns
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property stadium (base name: "Stadium")', function() {
      // uncomment below and update the code to test the property stadium
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property started (base name: "Started")', function() {
      // uncomment below and update the code to test the property started
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property tackles (base name: "Tackles")', function() {
      // uncomment below and update the code to test the property tackles
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property tacklesForLoss (base name: "TacklesForLoss")', function() {
      // uncomment below and update the code to test the property tacklesForLoss
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property team (base name: "Team")', function() {
      // uncomment below and update the code to test the property team
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property teamID (base name: "TeamID")', function() {
      // uncomment below and update the code to test the property teamID
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property temperature (base name: "Temperature")', function() {
      // uncomment below and update the code to test the property temperature
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property touchdowns (base name: "Touchdowns")', function() {
      // uncomment below and update the code to test the property touchdowns
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property twoPointConversionPasses (base name: "TwoPointConversionPasses")', function() {
      // uncomment below and update the code to test the property twoPointConversionPasses
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property twoPointConversionReceptions (base name: "TwoPointConversionReceptions")', function() {
      // uncomment below and update the code to test the property twoPointConversionReceptions
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property twoPointConversionReturns (base name: "TwoPointConversionReturns")', function() {
      // uncomment below and update the code to test the property twoPointConversionReturns
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property twoPointConversionRuns (base name: "TwoPointConversionRuns")', function() {
      // uncomment below and update the code to test the property twoPointConversionRuns
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property victivSalary (base name: "VictivSalary")', function() {
      // uncomment below and update the code to test the property victivSalary
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property week (base name: "Week")', function() {
      // uncomment below and update the code to test the property week
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property windSpeed (base name: "WindSpeed")', function() {
      // uncomment below and update the code to test the property windSpeed
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property yahooPosition (base name: "YahooPosition")', function() {
      // uncomment below and update the code to test the property yahooPosition
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

    it('should have the property yahooSalary (base name: "YahooSalary")', function() {
      // uncomment below and update the code to test the property yahooSalary
      //var instance = new NflV3Projections.PlayerGameProjection();
      //expect(instance).to.be();
    });

  });

}));
