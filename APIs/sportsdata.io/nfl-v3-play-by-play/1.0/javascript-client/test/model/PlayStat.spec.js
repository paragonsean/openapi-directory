/**
 * NFL v3 Play-by-Play
 * NFL play-by-play API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NflV3PlayByPlay);
  }
}(this, function(expect, NflV3PlayByPlay) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NflV3PlayByPlay.PlayStat();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PlayStat', function() {
    it('should create an instance of PlayStat', function() {
      // uncomment below and update the code to test PlayStat
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be.a(NflV3PlayByPlay.PlayStat);
    });

    it('should have the property assistedTackles (base name: "AssistedTackles")', function() {
      // uncomment below and update the code to test the property assistedTackles
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property blockedKickReturnTouchdowns (base name: "BlockedKickReturnTouchdowns")', function() {
      // uncomment below and update the code to test the property blockedKickReturnTouchdowns
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property blockedKickReturnYards (base name: "BlockedKickReturnYards")', function() {
      // uncomment below and update the code to test the property blockedKickReturnYards
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property blockedKickReturns (base name: "BlockedKickReturns")', function() {
      // uncomment below and update the code to test the property blockedKickReturns
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property blockedKicks (base name: "BlockedKicks")', function() {
      // uncomment below and update the code to test the property blockedKicks
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property created (base name: "Created")', function() {
      // uncomment below and update the code to test the property created
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property direction (base name: "Direction")', function() {
      // uncomment below and update the code to test the property direction
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property extraPointsAttempted (base name: "ExtraPointsAttempted")', function() {
      // uncomment below and update the code to test the property extraPointsAttempted
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property extraPointsHadBlocked (base name: "ExtraPointsHadBlocked")', function() {
      // uncomment below and update the code to test the property extraPointsHadBlocked
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property extraPointsMade (base name: "ExtraPointsMade")', function() {
      // uncomment below and update the code to test the property extraPointsMade
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property fieldGoalReturnTouchdowns (base name: "FieldGoalReturnTouchdowns")', function() {
      // uncomment below and update the code to test the property fieldGoalReturnTouchdowns
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property fieldGoalReturnYards (base name: "FieldGoalReturnYards")', function() {
      // uncomment below and update the code to test the property fieldGoalReturnYards
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property fieldGoalReturns (base name: "FieldGoalReturns")', function() {
      // uncomment below and update the code to test the property fieldGoalReturns
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property fieldGoalsAttempted (base name: "FieldGoalsAttempted")', function() {
      // uncomment below and update the code to test the property fieldGoalsAttempted
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property fieldGoalsHadBlocked (base name: "FieldGoalsHadBlocked")', function() {
      // uncomment below and update the code to test the property fieldGoalsHadBlocked
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property fieldGoalsMade (base name: "FieldGoalsMade")', function() {
      // uncomment below and update the code to test the property fieldGoalsMade
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property fieldGoalsYards (base name: "FieldGoalsYards")', function() {
      // uncomment below and update the code to test the property fieldGoalsYards
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property fumbleReturnTouchdowns (base name: "FumbleReturnTouchdowns")', function() {
      // uncomment below and update the code to test the property fumbleReturnTouchdowns
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property fumbleReturnYards (base name: "FumbleReturnYards")', function() {
      // uncomment below and update the code to test the property fumbleReturnYards
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property fumbles (base name: "Fumbles")', function() {
      // uncomment below and update the code to test the property fumbles
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property fumblesForced (base name: "FumblesForced")', function() {
      // uncomment below and update the code to test the property fumblesForced
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property fumblesLost (base name: "FumblesLost")', function() {
      // uncomment below and update the code to test the property fumblesLost
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property fumblesRecovered (base name: "FumblesRecovered")', function() {
      // uncomment below and update the code to test the property fumblesRecovered
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property homeOrAway (base name: "HomeOrAway")', function() {
      // uncomment below and update the code to test the property homeOrAway
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property interceptionReturnTouchdowns (base name: "InterceptionReturnTouchdowns")', function() {
      // uncomment below and update the code to test the property interceptionReturnTouchdowns
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property interceptionReturnYards (base name: "InterceptionReturnYards")', function() {
      // uncomment below and update the code to test the property interceptionReturnYards
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property interceptions (base name: "Interceptions")', function() {
      // uncomment below and update the code to test the property interceptions
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property kickReturnTouchdowns (base name: "KickReturnTouchdowns")', function() {
      // uncomment below and update the code to test the property kickReturnTouchdowns
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property kickReturnYards (base name: "KickReturnYards")', function() {
      // uncomment below and update the code to test the property kickReturnYards
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property kickReturns (base name: "KickReturns")', function() {
      // uncomment below and update the code to test the property kickReturns
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property kickoffTouchbacks (base name: "KickoffTouchbacks")', function() {
      // uncomment below and update the code to test the property kickoffTouchbacks
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property kickoffYards (base name: "KickoffYards")', function() {
      // uncomment below and update the code to test the property kickoffYards
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property kickoffs (base name: "Kickoffs")', function() {
      // uncomment below and update the code to test the property kickoffs
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "Name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property opponent (base name: "Opponent")', function() {
      // uncomment below and update the code to test the property opponent
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property passesDefended (base name: "PassesDefended")', function() {
      // uncomment below and update the code to test the property passesDefended
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property passingAttempts (base name: "PassingAttempts")', function() {
      // uncomment below and update the code to test the property passingAttempts
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property passingCompletions (base name: "PassingCompletions")', function() {
      // uncomment below and update the code to test the property passingCompletions
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property passingInterceptions (base name: "PassingInterceptions")', function() {
      // uncomment below and update the code to test the property passingInterceptions
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property passingSackYards (base name: "PassingSackYards")', function() {
      // uncomment below and update the code to test the property passingSackYards
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property passingSacks (base name: "PassingSacks")', function() {
      // uncomment below and update the code to test the property passingSacks
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property passingTouchdowns (base name: "PassingTouchdowns")', function() {
      // uncomment below and update the code to test the property passingTouchdowns
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property passingYards (base name: "PassingYards")', function() {
      // uncomment below and update the code to test the property passingYards
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property penalties (base name: "Penalties")', function() {
      // uncomment below and update the code to test the property penalties
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property penaltyYards (base name: "PenaltyYards")', function() {
      // uncomment below and update the code to test the property penaltyYards
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property playID (base name: "PlayID")', function() {
      // uncomment below and update the code to test the property playID
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property playStatID (base name: "PlayStatID")', function() {
      // uncomment below and update the code to test the property playStatID
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property playerID (base name: "PlayerID")', function() {
      // uncomment below and update the code to test the property playerID
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property puntReturnTouchdowns (base name: "PuntReturnTouchdowns")', function() {
      // uncomment below and update the code to test the property puntReturnTouchdowns
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property puntReturnYards (base name: "PuntReturnYards")', function() {
      // uncomment below and update the code to test the property puntReturnYards
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property puntReturns (base name: "PuntReturns")', function() {
      // uncomment below and update the code to test the property puntReturns
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property puntTouchbacks (base name: "PuntTouchbacks")', function() {
      // uncomment below and update the code to test the property puntTouchbacks
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property puntYards (base name: "PuntYards")', function() {
      // uncomment below and update the code to test the property puntYards
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property punts (base name: "Punts")', function() {
      // uncomment below and update the code to test the property punts
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property puntsHadBlocked (base name: "PuntsHadBlocked")', function() {
      // uncomment below and update the code to test the property puntsHadBlocked
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property receivingTargets (base name: "ReceivingTargets")', function() {
      // uncomment below and update the code to test the property receivingTargets
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property receivingTouchdowns (base name: "ReceivingTouchdowns")', function() {
      // uncomment below and update the code to test the property receivingTouchdowns
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property receivingYards (base name: "ReceivingYards")', function() {
      // uncomment below and update the code to test the property receivingYards
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property receptions (base name: "Receptions")', function() {
      // uncomment below and update the code to test the property receptions
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property rushingAttempts (base name: "RushingAttempts")', function() {
      // uncomment below and update the code to test the property rushingAttempts
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property rushingTouchdowns (base name: "RushingTouchdowns")', function() {
      // uncomment below and update the code to test the property rushingTouchdowns
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property rushingYards (base name: "RushingYards")', function() {
      // uncomment below and update the code to test the property rushingYards
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property sackYards (base name: "SackYards")', function() {
      // uncomment below and update the code to test the property sackYards
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property sacks (base name: "Sacks")', function() {
      // uncomment below and update the code to test the property sacks
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property safeties (base name: "Safeties")', function() {
      // uncomment below and update the code to test the property safeties
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property sequence (base name: "Sequence")', function() {
      // uncomment below and update the code to test the property sequence
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property soloTackles (base name: "SoloTackles")', function() {
      // uncomment below and update the code to test the property soloTackles
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property tacklesForLoss (base name: "TacklesForLoss")', function() {
      // uncomment below and update the code to test the property tacklesForLoss
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property team (base name: "Team")', function() {
      // uncomment below and update the code to test the property team
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property twoPointConversionAttempts (base name: "TwoPointConversionAttempts")', function() {
      // uncomment below and update the code to test the property twoPointConversionAttempts
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property twoPointConversionPasses (base name: "TwoPointConversionPasses")', function() {
      // uncomment below and update the code to test the property twoPointConversionPasses
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property twoPointConversionReceptions (base name: "TwoPointConversionReceptions")', function() {
      // uncomment below and update the code to test the property twoPointConversionReceptions
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property twoPointConversionReturns (base name: "TwoPointConversionReturns")', function() {
      // uncomment below and update the code to test the property twoPointConversionReturns
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property twoPointConversionRuns (base name: "TwoPointConversionRuns")', function() {
      // uncomment below and update the code to test the property twoPointConversionRuns
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

    it('should have the property updated (base name: "Updated")', function() {
      // uncomment below and update the code to test the property updated
      //var instance = new NflV3PlayByPlay.PlayStat();
      //expect(instance).to.be();
    });

  });

}));
