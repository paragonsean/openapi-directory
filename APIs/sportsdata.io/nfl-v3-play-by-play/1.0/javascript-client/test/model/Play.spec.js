/**
 * NFL v3 Play-by-Play
 * NFL play-by-play API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NflV3PlayByPlay);
  }
}(this, function(expect, NflV3PlayByPlay) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NflV3PlayByPlay.Play();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Play', function() {
    it('should create an instance of Play', function() {
      // uncomment below and update the code to test Play
      //var instance = new NflV3PlayByPlay.Play();
      //expect(instance).to.be.a(NflV3PlayByPlay.Play);
    });

    it('should have the property created (base name: "Created")', function() {
      // uncomment below and update the code to test the property created
      //var instance = new NflV3PlayByPlay.Play();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "Description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new NflV3PlayByPlay.Play();
      //expect(instance).to.be();
    });

    it('should have the property distance (base name: "Distance")', function() {
      // uncomment below and update the code to test the property distance
      //var instance = new NflV3PlayByPlay.Play();
      //expect(instance).to.be();
    });

    it('should have the property down (base name: "Down")', function() {
      // uncomment below and update the code to test the property down
      //var instance = new NflV3PlayByPlay.Play();
      //expect(instance).to.be();
    });

    it('should have the property isScoringPlay (base name: "IsScoringPlay")', function() {
      // uncomment below and update the code to test the property isScoringPlay
      //var instance = new NflV3PlayByPlay.Play();
      //expect(instance).to.be();
    });

    it('should have the property opponent (base name: "Opponent")', function() {
      // uncomment below and update the code to test the property opponent
      //var instance = new NflV3PlayByPlay.Play();
      //expect(instance).to.be();
    });

    it('should have the property playID (base name: "PlayID")', function() {
      // uncomment below and update the code to test the property playID
      //var instance = new NflV3PlayByPlay.Play();
      //expect(instance).to.be();
    });

    it('should have the property playStats (base name: "PlayStats")', function() {
      // uncomment below and update the code to test the property playStats
      //var instance = new NflV3PlayByPlay.Play();
      //expect(instance).to.be();
    });

    it('should have the property playTime (base name: "PlayTime")', function() {
      // uncomment below and update the code to test the property playTime
      //var instance = new NflV3PlayByPlay.Play();
      //expect(instance).to.be();
    });

    it('should have the property quarterID (base name: "QuarterID")', function() {
      // uncomment below and update the code to test the property quarterID
      //var instance = new NflV3PlayByPlay.Play();
      //expect(instance).to.be();
    });

    it('should have the property quarterName (base name: "QuarterName")', function() {
      // uncomment below and update the code to test the property quarterName
      //var instance = new NflV3PlayByPlay.Play();
      //expect(instance).to.be();
    });

    it('should have the property scoringPlay (base name: "ScoringPlay")', function() {
      // uncomment below and update the code to test the property scoringPlay
      //var instance = new NflV3PlayByPlay.Play();
      //expect(instance).to.be();
    });

    it('should have the property sequence (base name: "Sequence")', function() {
      // uncomment below and update the code to test the property sequence
      //var instance = new NflV3PlayByPlay.Play();
      //expect(instance).to.be();
    });

    it('should have the property team (base name: "Team")', function() {
      // uncomment below and update the code to test the property team
      //var instance = new NflV3PlayByPlay.Play();
      //expect(instance).to.be();
    });

    it('should have the property timeRemainingMinutes (base name: "TimeRemainingMinutes")', function() {
      // uncomment below and update the code to test the property timeRemainingMinutes
      //var instance = new NflV3PlayByPlay.Play();
      //expect(instance).to.be();
    });

    it('should have the property timeRemainingSeconds (base name: "TimeRemainingSeconds")', function() {
      // uncomment below and update the code to test the property timeRemainingSeconds
      //var instance = new NflV3PlayByPlay.Play();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "Type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new NflV3PlayByPlay.Play();
      //expect(instance).to.be();
    });

    it('should have the property updated (base name: "Updated")', function() {
      // uncomment below and update the code to test the property updated
      //var instance = new NflV3PlayByPlay.Play();
      //expect(instance).to.be();
    });

    it('should have the property yardLine (base name: "YardLine")', function() {
      // uncomment below and update the code to test the property yardLine
      //var instance = new NflV3PlayByPlay.Play();
      //expect(instance).to.be();
    });

    it('should have the property yardLineTerritory (base name: "YardLineTerritory")', function() {
      // uncomment below and update the code to test the property yardLineTerritory
      //var instance = new NflV3PlayByPlay.Play();
      //expect(instance).to.be();
    });

    it('should have the property yardsGained (base name: "YardsGained")', function() {
      // uncomment below and update the code to test the property yardsGained
      //var instance = new NflV3PlayByPlay.Play();
      //expect(instance).to.be();
    });

    it('should have the property yardsToEndZone (base name: "YardsToEndZone")', function() {
      // uncomment below and update the code to test the property yardsToEndZone
      //var instance = new NflV3PlayByPlay.Play();
      //expect(instance).to.be();
    });

  });

}));
