# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ScoringPlay(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, away_score: int=None, away_team: str=None, _date: str=None, game_key: str=None, home_score: int=None, home_team: str=None, play_description: str=None, quarter: str=None, score_id: int=None, scoring_play_id: int=None, season: int=None, season_type: int=None, sequence: int=None, team: str=None, time_remaining: str=None, week: int=None):
        """ScoringPlay - a model defined in OpenAPI

        :param away_score: The away_score of this ScoringPlay.
        :param away_team: The away_team of this ScoringPlay.
        :param _date: The _date of this ScoringPlay.
        :param game_key: The game_key of this ScoringPlay.
        :param home_score: The home_score of this ScoringPlay.
        :param home_team: The home_team of this ScoringPlay.
        :param play_description: The play_description of this ScoringPlay.
        :param quarter: The quarter of this ScoringPlay.
        :param score_id: The score_id of this ScoringPlay.
        :param scoring_play_id: The scoring_play_id of this ScoringPlay.
        :param season: The season of this ScoringPlay.
        :param season_type: The season_type of this ScoringPlay.
        :param sequence: The sequence of this ScoringPlay.
        :param team: The team of this ScoringPlay.
        :param time_remaining: The time_remaining of this ScoringPlay.
        :param week: The week of this ScoringPlay.
        """
        self.openapi_types = {
            'away_score': int,
            'away_team': str,
            '_date': str,
            'game_key': str,
            'home_score': int,
            'home_team': str,
            'play_description': str,
            'quarter': str,
            'score_id': int,
            'scoring_play_id': int,
            'season': int,
            'season_type': int,
            'sequence': int,
            'team': str,
            'time_remaining': str,
            'week': int
        }

        self.attribute_map = {
            'away_score': 'AwayScore',
            'away_team': 'AwayTeam',
            '_date': 'Date',
            'game_key': 'GameKey',
            'home_score': 'HomeScore',
            'home_team': 'HomeTeam',
            'play_description': 'PlayDescription',
            'quarter': 'Quarter',
            'score_id': 'ScoreID',
            'scoring_play_id': 'ScoringPlayID',
            'season': 'Season',
            'season_type': 'SeasonType',
            'sequence': 'Sequence',
            'team': 'Team',
            'time_remaining': 'TimeRemaining',
            'week': 'Week'
        }

        self._away_score = away_score
        self._away_team = away_team
        self.__date = _date
        self._game_key = game_key
        self._home_score = home_score
        self._home_team = home_team
        self._play_description = play_description
        self._quarter = quarter
        self._score_id = score_id
        self._scoring_play_id = scoring_play_id
        self._season = season
        self._season_type = season_type
        self._sequence = sequence
        self._team = team
        self._time_remaining = time_remaining
        self._week = week

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScoringPlay':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ScoringPlay of this ScoringPlay.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def away_score(self):
        """Gets the away_score of this ScoringPlay.


        :return: The away_score of this ScoringPlay.
        :rtype: int
        """
        return self._away_score

    @away_score.setter
    def away_score(self, away_score):
        """Sets the away_score of this ScoringPlay.


        :param away_score: The away_score of this ScoringPlay.
        :type away_score: int
        """

        self._away_score = away_score

    @property
    def away_team(self):
        """Gets the away_team of this ScoringPlay.


        :return: The away_team of this ScoringPlay.
        :rtype: str
        """
        return self._away_team

    @away_team.setter
    def away_team(self, away_team):
        """Sets the away_team of this ScoringPlay.


        :param away_team: The away_team of this ScoringPlay.
        :type away_team: str
        """

        self._away_team = away_team

    @property
    def _date(self):
        """Gets the _date of this ScoringPlay.


        :return: The _date of this ScoringPlay.
        :rtype: str
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this ScoringPlay.


        :param _date: The _date of this ScoringPlay.
        :type _date: str
        """

        self.__date = _date

    @property
    def game_key(self):
        """Gets the game_key of this ScoringPlay.


        :return: The game_key of this ScoringPlay.
        :rtype: str
        """
        return self._game_key

    @game_key.setter
    def game_key(self, game_key):
        """Sets the game_key of this ScoringPlay.


        :param game_key: The game_key of this ScoringPlay.
        :type game_key: str
        """

        self._game_key = game_key

    @property
    def home_score(self):
        """Gets the home_score of this ScoringPlay.


        :return: The home_score of this ScoringPlay.
        :rtype: int
        """
        return self._home_score

    @home_score.setter
    def home_score(self, home_score):
        """Sets the home_score of this ScoringPlay.


        :param home_score: The home_score of this ScoringPlay.
        :type home_score: int
        """

        self._home_score = home_score

    @property
    def home_team(self):
        """Gets the home_team of this ScoringPlay.


        :return: The home_team of this ScoringPlay.
        :rtype: str
        """
        return self._home_team

    @home_team.setter
    def home_team(self, home_team):
        """Sets the home_team of this ScoringPlay.


        :param home_team: The home_team of this ScoringPlay.
        :type home_team: str
        """

        self._home_team = home_team

    @property
    def play_description(self):
        """Gets the play_description of this ScoringPlay.


        :return: The play_description of this ScoringPlay.
        :rtype: str
        """
        return self._play_description

    @play_description.setter
    def play_description(self, play_description):
        """Sets the play_description of this ScoringPlay.


        :param play_description: The play_description of this ScoringPlay.
        :type play_description: str
        """

        self._play_description = play_description

    @property
    def quarter(self):
        """Gets the quarter of this ScoringPlay.


        :return: The quarter of this ScoringPlay.
        :rtype: str
        """
        return self._quarter

    @quarter.setter
    def quarter(self, quarter):
        """Sets the quarter of this ScoringPlay.


        :param quarter: The quarter of this ScoringPlay.
        :type quarter: str
        """

        self._quarter = quarter

    @property
    def score_id(self):
        """Gets the score_id of this ScoringPlay.


        :return: The score_id of this ScoringPlay.
        :rtype: int
        """
        return self._score_id

    @score_id.setter
    def score_id(self, score_id):
        """Sets the score_id of this ScoringPlay.


        :param score_id: The score_id of this ScoringPlay.
        :type score_id: int
        """

        self._score_id = score_id

    @property
    def scoring_play_id(self):
        """Gets the scoring_play_id of this ScoringPlay.


        :return: The scoring_play_id of this ScoringPlay.
        :rtype: int
        """
        return self._scoring_play_id

    @scoring_play_id.setter
    def scoring_play_id(self, scoring_play_id):
        """Sets the scoring_play_id of this ScoringPlay.


        :param scoring_play_id: The scoring_play_id of this ScoringPlay.
        :type scoring_play_id: int
        """

        self._scoring_play_id = scoring_play_id

    @property
    def season(self):
        """Gets the season of this ScoringPlay.


        :return: The season of this ScoringPlay.
        :rtype: int
        """
        return self._season

    @season.setter
    def season(self, season):
        """Sets the season of this ScoringPlay.


        :param season: The season of this ScoringPlay.
        :type season: int
        """

        self._season = season

    @property
    def season_type(self):
        """Gets the season_type of this ScoringPlay.


        :return: The season_type of this ScoringPlay.
        :rtype: int
        """
        return self._season_type

    @season_type.setter
    def season_type(self, season_type):
        """Sets the season_type of this ScoringPlay.


        :param season_type: The season_type of this ScoringPlay.
        :type season_type: int
        """

        self._season_type = season_type

    @property
    def sequence(self):
        """Gets the sequence of this ScoringPlay.


        :return: The sequence of this ScoringPlay.
        :rtype: int
        """
        return self._sequence

    @sequence.setter
    def sequence(self, sequence):
        """Sets the sequence of this ScoringPlay.


        :param sequence: The sequence of this ScoringPlay.
        :type sequence: int
        """

        self._sequence = sequence

    @property
    def team(self):
        """Gets the team of this ScoringPlay.


        :return: The team of this ScoringPlay.
        :rtype: str
        """
        return self._team

    @team.setter
    def team(self, team):
        """Sets the team of this ScoringPlay.


        :param team: The team of this ScoringPlay.
        :type team: str
        """

        self._team = team

    @property
    def time_remaining(self):
        """Gets the time_remaining of this ScoringPlay.


        :return: The time_remaining of this ScoringPlay.
        :rtype: str
        """
        return self._time_remaining

    @time_remaining.setter
    def time_remaining(self, time_remaining):
        """Sets the time_remaining of this ScoringPlay.


        :param time_remaining: The time_remaining of this ScoringPlay.
        :type time_remaining: str
        """

        self._time_remaining = time_remaining

    @property
    def week(self):
        """Gets the week of this ScoringPlay.


        :return: The week of this ScoringPlay.
        :rtype: int
        """
        return self._week

    @week.setter
    def week(self, week):
        """Sets the week of this ScoringPlay.


        :param week: The week of this ScoringPlay.
        :type week: int
        """

        self._week = week
