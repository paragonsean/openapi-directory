# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.play_stat import PlayStat
from openapi_server.models.scoring_play import ScoringPlay
from openapi_server import util


class Play(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created: str=None, description: str=None, distance: int=None, down: int=None, is_scoring_play: bool=None, opponent: str=None, play_id: int=None, play_stats: List[PlayStat]=None, play_time: str=None, quarter_id: int=None, quarter_name: str=None, scoring_play: ScoringPlay=None, sequence: int=None, team: str=None, time_remaining_minutes: int=None, time_remaining_seconds: int=None, type: str=None, updated: str=None, yard_line: int=None, yard_line_territory: str=None, yards_gained: int=None, yards_to_end_zone: int=None):
        """Play - a model defined in OpenAPI

        :param created: The created of this Play.
        :param description: The description of this Play.
        :param distance: The distance of this Play.
        :param down: The down of this Play.
        :param is_scoring_play: The is_scoring_play of this Play.
        :param opponent: The opponent of this Play.
        :param play_id: The play_id of this Play.
        :param play_stats: The play_stats of this Play.
        :param play_time: The play_time of this Play.
        :param quarter_id: The quarter_id of this Play.
        :param quarter_name: The quarter_name of this Play.
        :param scoring_play: The scoring_play of this Play.
        :param sequence: The sequence of this Play.
        :param team: The team of this Play.
        :param time_remaining_minutes: The time_remaining_minutes of this Play.
        :param time_remaining_seconds: The time_remaining_seconds of this Play.
        :param type: The type of this Play.
        :param updated: The updated of this Play.
        :param yard_line: The yard_line of this Play.
        :param yard_line_territory: The yard_line_territory of this Play.
        :param yards_gained: The yards_gained of this Play.
        :param yards_to_end_zone: The yards_to_end_zone of this Play.
        """
        self.openapi_types = {
            'created': str,
            'description': str,
            'distance': int,
            'down': int,
            'is_scoring_play': bool,
            'opponent': str,
            'play_id': int,
            'play_stats': List[PlayStat],
            'play_time': str,
            'quarter_id': int,
            'quarter_name': str,
            'scoring_play': ScoringPlay,
            'sequence': int,
            'team': str,
            'time_remaining_minutes': int,
            'time_remaining_seconds': int,
            'type': str,
            'updated': str,
            'yard_line': int,
            'yard_line_territory': str,
            'yards_gained': int,
            'yards_to_end_zone': int
        }

        self.attribute_map = {
            'created': 'Created',
            'description': 'Description',
            'distance': 'Distance',
            'down': 'Down',
            'is_scoring_play': 'IsScoringPlay',
            'opponent': 'Opponent',
            'play_id': 'PlayID',
            'play_stats': 'PlayStats',
            'play_time': 'PlayTime',
            'quarter_id': 'QuarterID',
            'quarter_name': 'QuarterName',
            'scoring_play': 'ScoringPlay',
            'sequence': 'Sequence',
            'team': 'Team',
            'time_remaining_minutes': 'TimeRemainingMinutes',
            'time_remaining_seconds': 'TimeRemainingSeconds',
            'type': 'Type',
            'updated': 'Updated',
            'yard_line': 'YardLine',
            'yard_line_territory': 'YardLineTerritory',
            'yards_gained': 'YardsGained',
            'yards_to_end_zone': 'YardsToEndZone'
        }

        self._created = created
        self._description = description
        self._distance = distance
        self._down = down
        self._is_scoring_play = is_scoring_play
        self._opponent = opponent
        self._play_id = play_id
        self._play_stats = play_stats
        self._play_time = play_time
        self._quarter_id = quarter_id
        self._quarter_name = quarter_name
        self._scoring_play = scoring_play
        self._sequence = sequence
        self._team = team
        self._time_remaining_minutes = time_remaining_minutes
        self._time_remaining_seconds = time_remaining_seconds
        self._type = type
        self._updated = updated
        self._yard_line = yard_line
        self._yard_line_territory = yard_line_territory
        self._yards_gained = yards_gained
        self._yards_to_end_zone = yards_to_end_zone

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Play':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Play of this Play.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created(self):
        """Gets the created of this Play.


        :return: The created of this Play.
        :rtype: str
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this Play.


        :param created: The created of this Play.
        :type created: str
        """

        self._created = created

    @property
    def description(self):
        """Gets the description of this Play.


        :return: The description of this Play.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Play.


        :param description: The description of this Play.
        :type description: str
        """

        self._description = description

    @property
    def distance(self):
        """Gets the distance of this Play.


        :return: The distance of this Play.
        :rtype: int
        """
        return self._distance

    @distance.setter
    def distance(self, distance):
        """Sets the distance of this Play.


        :param distance: The distance of this Play.
        :type distance: int
        """

        self._distance = distance

    @property
    def down(self):
        """Gets the down of this Play.


        :return: The down of this Play.
        :rtype: int
        """
        return self._down

    @down.setter
    def down(self, down):
        """Sets the down of this Play.


        :param down: The down of this Play.
        :type down: int
        """

        self._down = down

    @property
    def is_scoring_play(self):
        """Gets the is_scoring_play of this Play.


        :return: The is_scoring_play of this Play.
        :rtype: bool
        """
        return self._is_scoring_play

    @is_scoring_play.setter
    def is_scoring_play(self, is_scoring_play):
        """Sets the is_scoring_play of this Play.


        :param is_scoring_play: The is_scoring_play of this Play.
        :type is_scoring_play: bool
        """

        self._is_scoring_play = is_scoring_play

    @property
    def opponent(self):
        """Gets the opponent of this Play.


        :return: The opponent of this Play.
        :rtype: str
        """
        return self._opponent

    @opponent.setter
    def opponent(self, opponent):
        """Sets the opponent of this Play.


        :param opponent: The opponent of this Play.
        :type opponent: str
        """

        self._opponent = opponent

    @property
    def play_id(self):
        """Gets the play_id of this Play.


        :return: The play_id of this Play.
        :rtype: int
        """
        return self._play_id

    @play_id.setter
    def play_id(self, play_id):
        """Sets the play_id of this Play.


        :param play_id: The play_id of this Play.
        :type play_id: int
        """

        self._play_id = play_id

    @property
    def play_stats(self):
        """Gets the play_stats of this Play.


        :return: The play_stats of this Play.
        :rtype: List[PlayStat]
        """
        return self._play_stats

    @play_stats.setter
    def play_stats(self, play_stats):
        """Sets the play_stats of this Play.


        :param play_stats: The play_stats of this Play.
        :type play_stats: List[PlayStat]
        """

        self._play_stats = play_stats

    @property
    def play_time(self):
        """Gets the play_time of this Play.


        :return: The play_time of this Play.
        :rtype: str
        """
        return self._play_time

    @play_time.setter
    def play_time(self, play_time):
        """Sets the play_time of this Play.


        :param play_time: The play_time of this Play.
        :type play_time: str
        """

        self._play_time = play_time

    @property
    def quarter_id(self):
        """Gets the quarter_id of this Play.


        :return: The quarter_id of this Play.
        :rtype: int
        """
        return self._quarter_id

    @quarter_id.setter
    def quarter_id(self, quarter_id):
        """Sets the quarter_id of this Play.


        :param quarter_id: The quarter_id of this Play.
        :type quarter_id: int
        """

        self._quarter_id = quarter_id

    @property
    def quarter_name(self):
        """Gets the quarter_name of this Play.


        :return: The quarter_name of this Play.
        :rtype: str
        """
        return self._quarter_name

    @quarter_name.setter
    def quarter_name(self, quarter_name):
        """Sets the quarter_name of this Play.


        :param quarter_name: The quarter_name of this Play.
        :type quarter_name: str
        """

        self._quarter_name = quarter_name

    @property
    def scoring_play(self):
        """Gets the scoring_play of this Play.


        :return: The scoring_play of this Play.
        :rtype: ScoringPlay
        """
        return self._scoring_play

    @scoring_play.setter
    def scoring_play(self, scoring_play):
        """Sets the scoring_play of this Play.


        :param scoring_play: The scoring_play of this Play.
        :type scoring_play: ScoringPlay
        """

        self._scoring_play = scoring_play

    @property
    def sequence(self):
        """Gets the sequence of this Play.


        :return: The sequence of this Play.
        :rtype: int
        """
        return self._sequence

    @sequence.setter
    def sequence(self, sequence):
        """Sets the sequence of this Play.


        :param sequence: The sequence of this Play.
        :type sequence: int
        """

        self._sequence = sequence

    @property
    def team(self):
        """Gets the team of this Play.


        :return: The team of this Play.
        :rtype: str
        """
        return self._team

    @team.setter
    def team(self, team):
        """Sets the team of this Play.


        :param team: The team of this Play.
        :type team: str
        """

        self._team = team

    @property
    def time_remaining_minutes(self):
        """Gets the time_remaining_minutes of this Play.


        :return: The time_remaining_minutes of this Play.
        :rtype: int
        """
        return self._time_remaining_minutes

    @time_remaining_minutes.setter
    def time_remaining_minutes(self, time_remaining_minutes):
        """Sets the time_remaining_minutes of this Play.


        :param time_remaining_minutes: The time_remaining_minutes of this Play.
        :type time_remaining_minutes: int
        """

        self._time_remaining_minutes = time_remaining_minutes

    @property
    def time_remaining_seconds(self):
        """Gets the time_remaining_seconds of this Play.


        :return: The time_remaining_seconds of this Play.
        :rtype: int
        """
        return self._time_remaining_seconds

    @time_remaining_seconds.setter
    def time_remaining_seconds(self, time_remaining_seconds):
        """Sets the time_remaining_seconds of this Play.


        :param time_remaining_seconds: The time_remaining_seconds of this Play.
        :type time_remaining_seconds: int
        """

        self._time_remaining_seconds = time_remaining_seconds

    @property
    def type(self):
        """Gets the type of this Play.


        :return: The type of this Play.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Play.


        :param type: The type of this Play.
        :type type: str
        """

        self._type = type

    @property
    def updated(self):
        """Gets the updated of this Play.


        :return: The updated of this Play.
        :rtype: str
        """
        return self._updated

    @updated.setter
    def updated(self, updated):
        """Sets the updated of this Play.


        :param updated: The updated of this Play.
        :type updated: str
        """

        self._updated = updated

    @property
    def yard_line(self):
        """Gets the yard_line of this Play.


        :return: The yard_line of this Play.
        :rtype: int
        """
        return self._yard_line

    @yard_line.setter
    def yard_line(self, yard_line):
        """Sets the yard_line of this Play.


        :param yard_line: The yard_line of this Play.
        :type yard_line: int
        """

        self._yard_line = yard_line

    @property
    def yard_line_territory(self):
        """Gets the yard_line_territory of this Play.


        :return: The yard_line_territory of this Play.
        :rtype: str
        """
        return self._yard_line_territory

    @yard_line_territory.setter
    def yard_line_territory(self, yard_line_territory):
        """Sets the yard_line_territory of this Play.


        :param yard_line_territory: The yard_line_territory of this Play.
        :type yard_line_territory: str
        """

        self._yard_line_territory = yard_line_territory

    @property
    def yards_gained(self):
        """Gets the yards_gained of this Play.


        :return: The yards_gained of this Play.
        :rtype: int
        """
        return self._yards_gained

    @yards_gained.setter
    def yards_gained(self, yards_gained):
        """Sets the yards_gained of this Play.


        :param yards_gained: The yards_gained of this Play.
        :type yards_gained: int
        """

        self._yards_gained = yards_gained

    @property
    def yards_to_end_zone(self):
        """Gets the yards_to_end_zone of this Play.


        :return: The yards_to_end_zone of this Play.
        :rtype: int
        """
        return self._yards_to_end_zone

    @yards_to_end_zone.setter
    def yards_to_end_zone(self, yards_to_end_zone):
        """Sets the yards_to_end_zone of this Play.


        :param yards_to_end_zone: The yards_to_end_zone of this Play.
        :type yards_to_end_zone: int
        """

        self._yards_to_end_zone = yards_to_end_zone
