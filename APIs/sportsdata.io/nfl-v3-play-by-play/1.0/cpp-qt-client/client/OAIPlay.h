/**
 * NFL v3 Play-by-Play
 * NFL play-by-play API.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPlay.h
 *
 * 
 */

#ifndef OAIPlay_H
#define OAIPlay_H

#include <QJsonObject>

#include "OAIPlayStat.h"
#include "OAIScoringPlay.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPlayStat;
class OAIScoringPlay;

class OAIPlay : public OAIObject {
public:
    OAIPlay();
    OAIPlay(QString json);
    ~OAIPlay() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCreated() const;
    void setCreated(const QString &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    qint32 getDistance() const;
    void setDistance(const qint32 &distance);
    bool is_distance_Set() const;
    bool is_distance_Valid() const;

    qint32 getDown() const;
    void setDown(const qint32 &down);
    bool is_down_Set() const;
    bool is_down_Valid() const;

    bool isIsScoringPlay() const;
    void setIsScoringPlay(const bool &is_scoring_play);
    bool is_is_scoring_play_Set() const;
    bool is_is_scoring_play_Valid() const;

    QString getOpponent() const;
    void setOpponent(const QString &opponent);
    bool is_opponent_Set() const;
    bool is_opponent_Valid() const;

    qint32 getPlayId() const;
    void setPlayId(const qint32 &play_id);
    bool is_play_id_Set() const;
    bool is_play_id_Valid() const;

    QList<OAIPlayStat> getPlayStats() const;
    void setPlayStats(const QList<OAIPlayStat> &play_stats);
    bool is_play_stats_Set() const;
    bool is_play_stats_Valid() const;

    QString getPlayTime() const;
    void setPlayTime(const QString &play_time);
    bool is_play_time_Set() const;
    bool is_play_time_Valid() const;

    qint32 getQuarterId() const;
    void setQuarterId(const qint32 &quarter_id);
    bool is_quarter_id_Set() const;
    bool is_quarter_id_Valid() const;

    QString getQuarterName() const;
    void setQuarterName(const QString &quarter_name);
    bool is_quarter_name_Set() const;
    bool is_quarter_name_Valid() const;

    OAIScoringPlay getScoringPlay() const;
    void setScoringPlay(const OAIScoringPlay &scoring_play);
    bool is_scoring_play_Set() const;
    bool is_scoring_play_Valid() const;

    qint32 getSequence() const;
    void setSequence(const qint32 &sequence);
    bool is_sequence_Set() const;
    bool is_sequence_Valid() const;

    QString getTeam() const;
    void setTeam(const QString &team);
    bool is_team_Set() const;
    bool is_team_Valid() const;

    qint32 getTimeRemainingMinutes() const;
    void setTimeRemainingMinutes(const qint32 &time_remaining_minutes);
    bool is_time_remaining_minutes_Set() const;
    bool is_time_remaining_minutes_Valid() const;

    qint32 getTimeRemainingSeconds() const;
    void setTimeRemainingSeconds(const qint32 &time_remaining_seconds);
    bool is_time_remaining_seconds_Set() const;
    bool is_time_remaining_seconds_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUpdated() const;
    void setUpdated(const QString &updated);
    bool is_updated_Set() const;
    bool is_updated_Valid() const;

    qint32 getYardLine() const;
    void setYardLine(const qint32 &yard_line);
    bool is_yard_line_Set() const;
    bool is_yard_line_Valid() const;

    QString getYardLineTerritory() const;
    void setYardLineTerritory(const QString &yard_line_territory);
    bool is_yard_line_territory_Set() const;
    bool is_yard_line_territory_Valid() const;

    qint32 getYardsGained() const;
    void setYardsGained(const qint32 &yards_gained);
    bool is_yards_gained_Set() const;
    bool is_yards_gained_Valid() const;

    qint32 getYardsToEndZone() const;
    void setYardsToEndZone(const qint32 &yards_to_end_zone);
    bool is_yards_to_end_zone_Set() const;
    bool is_yards_to_end_zone_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    qint32 m_distance;
    bool m_distance_isSet;
    bool m_distance_isValid;

    qint32 m_down;
    bool m_down_isSet;
    bool m_down_isValid;

    bool m_is_scoring_play;
    bool m_is_scoring_play_isSet;
    bool m_is_scoring_play_isValid;

    QString m_opponent;
    bool m_opponent_isSet;
    bool m_opponent_isValid;

    qint32 m_play_id;
    bool m_play_id_isSet;
    bool m_play_id_isValid;

    QList<OAIPlayStat> m_play_stats;
    bool m_play_stats_isSet;
    bool m_play_stats_isValid;

    QString m_play_time;
    bool m_play_time_isSet;
    bool m_play_time_isValid;

    qint32 m_quarter_id;
    bool m_quarter_id_isSet;
    bool m_quarter_id_isValid;

    QString m_quarter_name;
    bool m_quarter_name_isSet;
    bool m_quarter_name_isValid;

    OAIScoringPlay m_scoring_play;
    bool m_scoring_play_isSet;
    bool m_scoring_play_isValid;

    qint32 m_sequence;
    bool m_sequence_isSet;
    bool m_sequence_isValid;

    QString m_team;
    bool m_team_isSet;
    bool m_team_isValid;

    qint32 m_time_remaining_minutes;
    bool m_time_remaining_minutes_isSet;
    bool m_time_remaining_minutes_isValid;

    qint32 m_time_remaining_seconds;
    bool m_time_remaining_seconds_isSet;
    bool m_time_remaining_seconds_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_updated;
    bool m_updated_isSet;
    bool m_updated_isValid;

    qint32 m_yard_line;
    bool m_yard_line_isSet;
    bool m_yard_line_isValid;

    QString m_yard_line_territory;
    bool m_yard_line_territory_isSet;
    bool m_yard_line_territory_isValid;

    qint32 m_yards_gained;
    bool m_yards_gained_isSet;
    bool m_yards_gained_isValid;

    qint32 m_yards_to_end_zone;
    bool m_yards_to_end_zone_isSet;
    bool m_yards_to_end_zone_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPlay)

#endif // OAIPlay_H
