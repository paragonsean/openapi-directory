/**
 * CS:GO v3 Stats
 * CS:GO v3 Stats
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Leaderboard from './Leaderboard';

/**
 * The Map model module.
 * @module model/Map
 * @version 1.0
 */
class Map {
    /**
     * Constructs a new <code>Map</code>.
     * @alias module:model/Map
     */
    constructor() { 
        
        Map.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Map</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Map} obj Optional instance to populate.
     * @return {module:model/Map} The populated <code>Map</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Map();

            if (data.hasOwnProperty('CurrentRound')) {
                obj['CurrentRound'] = ApiClient.convertToType(data['CurrentRound'], 'Number');
            }
            if (data.hasOwnProperty('Leaderboards')) {
                obj['Leaderboards'] = ApiClient.convertToType(data['Leaderboards'], [Leaderboard]);
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Number')) {
                obj['Number'] = ApiClient.convertToType(data['Number'], 'Number');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], 'String');
            }
            if (data.hasOwnProperty('TeamAScore')) {
                obj['TeamAScore'] = ApiClient.convertToType(data['TeamAScore'], 'Number');
            }
            if (data.hasOwnProperty('TeamBScore')) {
                obj['TeamBScore'] = ApiClient.convertToType(data['TeamBScore'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Map</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Map</code>.
     */
    static validateJSON(data) {
        if (data['Leaderboards']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Leaderboards'])) {
                throw new Error("Expected the field `Leaderboards` to be an array in the JSON data but got " + data['Leaderboards']);
            }
            // validate the optional field `Leaderboards` (array)
            for (const item of data['Leaderboards']) {
                Leaderboard.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // ensure the json data is a string
        if (data['Status'] && !(typeof data['Status'] === 'string' || data['Status'] instanceof String)) {
            throw new Error("Expected the field `Status` to be a primitive type in the JSON string but got " + data['Status']);
        }

        return true;
    }


}



/**
 * @member {Number} CurrentRound
 */
Map.prototype['CurrentRound'] = undefined;

/**
 * @member {Array.<module:model/Leaderboard>} Leaderboards
 */
Map.prototype['Leaderboards'] = undefined;

/**
 * @member {String} Name
 */
Map.prototype['Name'] = undefined;

/**
 * @member {Number} Number
 */
Map.prototype['Number'] = undefined;

/**
 * @member {String} Status
 */
Map.prototype['Status'] = undefined;

/**
 * @member {Number} TeamAScore
 */
Map.prototype['TeamAScore'] = undefined;

/**
 * @member {Number} TeamBScore
 */
Map.prototype['TeamBScore'] = undefined;






export default Map;

