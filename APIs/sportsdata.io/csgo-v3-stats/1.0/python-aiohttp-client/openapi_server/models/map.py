# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.leaderboard import Leaderboard
from openapi_server import util


class Map(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, current_round: int=None, leaderboards: List[Leaderboard]=None, name: str=None, number: int=None, status: str=None, team_a_score: int=None, team_b_score: int=None):
        """Map - a model defined in OpenAPI

        :param current_round: The current_round of this Map.
        :param leaderboards: The leaderboards of this Map.
        :param name: The name of this Map.
        :param number: The number of this Map.
        :param status: The status of this Map.
        :param team_a_score: The team_a_score of this Map.
        :param team_b_score: The team_b_score of this Map.
        """
        self.openapi_types = {
            'current_round': int,
            'leaderboards': List[Leaderboard],
            'name': str,
            'number': int,
            'status': str,
            'team_a_score': int,
            'team_b_score': int
        }

        self.attribute_map = {
            'current_round': 'CurrentRound',
            'leaderboards': 'Leaderboards',
            'name': 'Name',
            'number': 'Number',
            'status': 'Status',
            'team_a_score': 'TeamAScore',
            'team_b_score': 'TeamBScore'
        }

        self._current_round = current_round
        self._leaderboards = leaderboards
        self._name = name
        self._number = number
        self._status = status
        self._team_a_score = team_a_score
        self._team_b_score = team_b_score

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Map':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Map of this Map.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def current_round(self):
        """Gets the current_round of this Map.


        :return: The current_round of this Map.
        :rtype: int
        """
        return self._current_round

    @current_round.setter
    def current_round(self, current_round):
        """Sets the current_round of this Map.


        :param current_round: The current_round of this Map.
        :type current_round: int
        """

        self._current_round = current_round

    @property
    def leaderboards(self):
        """Gets the leaderboards of this Map.


        :return: The leaderboards of this Map.
        :rtype: List[Leaderboard]
        """
        return self._leaderboards

    @leaderboards.setter
    def leaderboards(self, leaderboards):
        """Sets the leaderboards of this Map.


        :param leaderboards: The leaderboards of this Map.
        :type leaderboards: List[Leaderboard]
        """

        self._leaderboards = leaderboards

    @property
    def name(self):
        """Gets the name of this Map.


        :return: The name of this Map.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Map.


        :param name: The name of this Map.
        :type name: str
        """

        self._name = name

    @property
    def number(self):
        """Gets the number of this Map.


        :return: The number of this Map.
        :rtype: int
        """
        return self._number

    @number.setter
    def number(self, number):
        """Sets the number of this Map.


        :param number: The number of this Map.
        :type number: int
        """

        self._number = number

    @property
    def status(self):
        """Gets the status of this Map.


        :return: The status of this Map.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Map.


        :param status: The status of this Map.
        :type status: str
        """

        self._status = status

    @property
    def team_a_score(self):
        """Gets the team_a_score of this Map.


        :return: The team_a_score of this Map.
        :rtype: int
        """
        return self._team_a_score

    @team_a_score.setter
    def team_a_score(self, team_a_score):
        """Sets the team_a_score of this Map.


        :param team_a_score: The team_a_score of this Map.
        :type team_a_score: int
        """

        self._team_a_score = team_a_score

    @property
    def team_b_score(self):
        """Gets the team_b_score of this Map.


        :return: The team_b_score of this Map.
        :rtype: int
        """
        return self._team_b_score

    @team_b_score.setter
    def team_b_score(self, team_b_score):
        """Sets the team_b_score of this Map.


        :param team_b_score: The team_b_score of this Map.
        :type team_b_score: int
        """

        self._team_b_score = team_b_score
