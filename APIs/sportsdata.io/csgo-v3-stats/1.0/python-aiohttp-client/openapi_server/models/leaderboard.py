# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Leaderboard(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, aces: float=None, assists: float=None, average_damage_per_round: float=None, clutch1v2s: float=None, clutch1v3s: float=None, clutch1v4s: float=None, clutch1v5s: float=None, date_time: str=None, day: str=None, deaths: float=None, entry_kills: float=None, fantasy_points: float=None, game_id: int=None, games: int=None, headshots: float=None, is_closed: bool=None, kast: float=None, kills: float=None, maps: float=None, match_name: str=None, name: str=None, opponent: str=None, opponent_id: int=None, player_id: int=None, quad_kills: float=None, rating: float=None, team: str=None, team_id: int=None, updated: str=None, updated_utc: str=None):
        """Leaderboard - a model defined in OpenAPI

        :param aces: The aces of this Leaderboard.
        :param assists: The assists of this Leaderboard.
        :param average_damage_per_round: The average_damage_per_round of this Leaderboard.
        :param clutch1v2s: The clutch1v2s of this Leaderboard.
        :param clutch1v3s: The clutch1v3s of this Leaderboard.
        :param clutch1v4s: The clutch1v4s of this Leaderboard.
        :param clutch1v5s: The clutch1v5s of this Leaderboard.
        :param date_time: The date_time of this Leaderboard.
        :param day: The day of this Leaderboard.
        :param deaths: The deaths of this Leaderboard.
        :param entry_kills: The entry_kills of this Leaderboard.
        :param fantasy_points: The fantasy_points of this Leaderboard.
        :param game_id: The game_id of this Leaderboard.
        :param games: The games of this Leaderboard.
        :param headshots: The headshots of this Leaderboard.
        :param is_closed: The is_closed of this Leaderboard.
        :param kast: The kast of this Leaderboard.
        :param kills: The kills of this Leaderboard.
        :param maps: The maps of this Leaderboard.
        :param match_name: The match_name of this Leaderboard.
        :param name: The name of this Leaderboard.
        :param opponent: The opponent of this Leaderboard.
        :param opponent_id: The opponent_id of this Leaderboard.
        :param player_id: The player_id of this Leaderboard.
        :param quad_kills: The quad_kills of this Leaderboard.
        :param rating: The rating of this Leaderboard.
        :param team: The team of this Leaderboard.
        :param team_id: The team_id of this Leaderboard.
        :param updated: The updated of this Leaderboard.
        :param updated_utc: The updated_utc of this Leaderboard.
        """
        self.openapi_types = {
            'aces': float,
            'assists': float,
            'average_damage_per_round': float,
            'clutch1v2s': float,
            'clutch1v3s': float,
            'clutch1v4s': float,
            'clutch1v5s': float,
            'date_time': str,
            'day': str,
            'deaths': float,
            'entry_kills': float,
            'fantasy_points': float,
            'game_id': int,
            'games': int,
            'headshots': float,
            'is_closed': bool,
            'kast': float,
            'kills': float,
            'maps': float,
            'match_name': str,
            'name': str,
            'opponent': str,
            'opponent_id': int,
            'player_id': int,
            'quad_kills': float,
            'rating': float,
            'team': str,
            'team_id': int,
            'updated': str,
            'updated_utc': str
        }

        self.attribute_map = {
            'aces': 'Aces',
            'assists': 'Assists',
            'average_damage_per_round': 'AverageDamagePerRound',
            'clutch1v2s': 'Clutch1v2s',
            'clutch1v3s': 'Clutch1v3s',
            'clutch1v4s': 'Clutch1v4s',
            'clutch1v5s': 'Clutch1v5s',
            'date_time': 'DateTime',
            'day': 'Day',
            'deaths': 'Deaths',
            'entry_kills': 'EntryKills',
            'fantasy_points': 'FantasyPoints',
            'game_id': 'GameId',
            'games': 'Games',
            'headshots': 'Headshots',
            'is_closed': 'IsClosed',
            'kast': 'Kast',
            'kills': 'Kills',
            'maps': 'Maps',
            'match_name': 'MatchName',
            'name': 'Name',
            'opponent': 'Opponent',
            'opponent_id': 'OpponentId',
            'player_id': 'PlayerId',
            'quad_kills': 'QuadKills',
            'rating': 'Rating',
            'team': 'Team',
            'team_id': 'TeamId',
            'updated': 'Updated',
            'updated_utc': 'UpdatedUtc'
        }

        self._aces = aces
        self._assists = assists
        self._average_damage_per_round = average_damage_per_round
        self._clutch1v2s = clutch1v2s
        self._clutch1v3s = clutch1v3s
        self._clutch1v4s = clutch1v4s
        self._clutch1v5s = clutch1v5s
        self._date_time = date_time
        self._day = day
        self._deaths = deaths
        self._entry_kills = entry_kills
        self._fantasy_points = fantasy_points
        self._game_id = game_id
        self._games = games
        self._headshots = headshots
        self._is_closed = is_closed
        self._kast = kast
        self._kills = kills
        self._maps = maps
        self._match_name = match_name
        self._name = name
        self._opponent = opponent
        self._opponent_id = opponent_id
        self._player_id = player_id
        self._quad_kills = quad_kills
        self._rating = rating
        self._team = team
        self._team_id = team_id
        self._updated = updated
        self._updated_utc = updated_utc

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Leaderboard':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Leaderboard of this Leaderboard.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aces(self):
        """Gets the aces of this Leaderboard.


        :return: The aces of this Leaderboard.
        :rtype: float
        """
        return self._aces

    @aces.setter
    def aces(self, aces):
        """Sets the aces of this Leaderboard.


        :param aces: The aces of this Leaderboard.
        :type aces: float
        """

        self._aces = aces

    @property
    def assists(self):
        """Gets the assists of this Leaderboard.


        :return: The assists of this Leaderboard.
        :rtype: float
        """
        return self._assists

    @assists.setter
    def assists(self, assists):
        """Sets the assists of this Leaderboard.


        :param assists: The assists of this Leaderboard.
        :type assists: float
        """

        self._assists = assists

    @property
    def average_damage_per_round(self):
        """Gets the average_damage_per_round of this Leaderboard.


        :return: The average_damage_per_round of this Leaderboard.
        :rtype: float
        """
        return self._average_damage_per_round

    @average_damage_per_round.setter
    def average_damage_per_round(self, average_damage_per_round):
        """Sets the average_damage_per_round of this Leaderboard.


        :param average_damage_per_round: The average_damage_per_round of this Leaderboard.
        :type average_damage_per_round: float
        """

        self._average_damage_per_round = average_damage_per_round

    @property
    def clutch1v2s(self):
        """Gets the clutch1v2s of this Leaderboard.


        :return: The clutch1v2s of this Leaderboard.
        :rtype: float
        """
        return self._clutch1v2s

    @clutch1v2s.setter
    def clutch1v2s(self, clutch1v2s):
        """Sets the clutch1v2s of this Leaderboard.


        :param clutch1v2s: The clutch1v2s of this Leaderboard.
        :type clutch1v2s: float
        """

        self._clutch1v2s = clutch1v2s

    @property
    def clutch1v3s(self):
        """Gets the clutch1v3s of this Leaderboard.


        :return: The clutch1v3s of this Leaderboard.
        :rtype: float
        """
        return self._clutch1v3s

    @clutch1v3s.setter
    def clutch1v3s(self, clutch1v3s):
        """Sets the clutch1v3s of this Leaderboard.


        :param clutch1v3s: The clutch1v3s of this Leaderboard.
        :type clutch1v3s: float
        """

        self._clutch1v3s = clutch1v3s

    @property
    def clutch1v4s(self):
        """Gets the clutch1v4s of this Leaderboard.


        :return: The clutch1v4s of this Leaderboard.
        :rtype: float
        """
        return self._clutch1v4s

    @clutch1v4s.setter
    def clutch1v4s(self, clutch1v4s):
        """Sets the clutch1v4s of this Leaderboard.


        :param clutch1v4s: The clutch1v4s of this Leaderboard.
        :type clutch1v4s: float
        """

        self._clutch1v4s = clutch1v4s

    @property
    def clutch1v5s(self):
        """Gets the clutch1v5s of this Leaderboard.


        :return: The clutch1v5s of this Leaderboard.
        :rtype: float
        """
        return self._clutch1v5s

    @clutch1v5s.setter
    def clutch1v5s(self, clutch1v5s):
        """Sets the clutch1v5s of this Leaderboard.


        :param clutch1v5s: The clutch1v5s of this Leaderboard.
        :type clutch1v5s: float
        """

        self._clutch1v5s = clutch1v5s

    @property
    def date_time(self):
        """Gets the date_time of this Leaderboard.


        :return: The date_time of this Leaderboard.
        :rtype: str
        """
        return self._date_time

    @date_time.setter
    def date_time(self, date_time):
        """Sets the date_time of this Leaderboard.


        :param date_time: The date_time of this Leaderboard.
        :type date_time: str
        """

        self._date_time = date_time

    @property
    def day(self):
        """Gets the day of this Leaderboard.


        :return: The day of this Leaderboard.
        :rtype: str
        """
        return self._day

    @day.setter
    def day(self, day):
        """Sets the day of this Leaderboard.


        :param day: The day of this Leaderboard.
        :type day: str
        """

        self._day = day

    @property
    def deaths(self):
        """Gets the deaths of this Leaderboard.


        :return: The deaths of this Leaderboard.
        :rtype: float
        """
        return self._deaths

    @deaths.setter
    def deaths(self, deaths):
        """Sets the deaths of this Leaderboard.


        :param deaths: The deaths of this Leaderboard.
        :type deaths: float
        """

        self._deaths = deaths

    @property
    def entry_kills(self):
        """Gets the entry_kills of this Leaderboard.


        :return: The entry_kills of this Leaderboard.
        :rtype: float
        """
        return self._entry_kills

    @entry_kills.setter
    def entry_kills(self, entry_kills):
        """Sets the entry_kills of this Leaderboard.


        :param entry_kills: The entry_kills of this Leaderboard.
        :type entry_kills: float
        """

        self._entry_kills = entry_kills

    @property
    def fantasy_points(self):
        """Gets the fantasy_points of this Leaderboard.


        :return: The fantasy_points of this Leaderboard.
        :rtype: float
        """
        return self._fantasy_points

    @fantasy_points.setter
    def fantasy_points(self, fantasy_points):
        """Sets the fantasy_points of this Leaderboard.


        :param fantasy_points: The fantasy_points of this Leaderboard.
        :type fantasy_points: float
        """

        self._fantasy_points = fantasy_points

    @property
    def game_id(self):
        """Gets the game_id of this Leaderboard.


        :return: The game_id of this Leaderboard.
        :rtype: int
        """
        return self._game_id

    @game_id.setter
    def game_id(self, game_id):
        """Sets the game_id of this Leaderboard.


        :param game_id: The game_id of this Leaderboard.
        :type game_id: int
        """

        self._game_id = game_id

    @property
    def games(self):
        """Gets the games of this Leaderboard.


        :return: The games of this Leaderboard.
        :rtype: int
        """
        return self._games

    @games.setter
    def games(self, games):
        """Sets the games of this Leaderboard.


        :param games: The games of this Leaderboard.
        :type games: int
        """

        self._games = games

    @property
    def headshots(self):
        """Gets the headshots of this Leaderboard.


        :return: The headshots of this Leaderboard.
        :rtype: float
        """
        return self._headshots

    @headshots.setter
    def headshots(self, headshots):
        """Sets the headshots of this Leaderboard.


        :param headshots: The headshots of this Leaderboard.
        :type headshots: float
        """

        self._headshots = headshots

    @property
    def is_closed(self):
        """Gets the is_closed of this Leaderboard.


        :return: The is_closed of this Leaderboard.
        :rtype: bool
        """
        return self._is_closed

    @is_closed.setter
    def is_closed(self, is_closed):
        """Sets the is_closed of this Leaderboard.


        :param is_closed: The is_closed of this Leaderboard.
        :type is_closed: bool
        """

        self._is_closed = is_closed

    @property
    def kast(self):
        """Gets the kast of this Leaderboard.


        :return: The kast of this Leaderboard.
        :rtype: float
        """
        return self._kast

    @kast.setter
    def kast(self, kast):
        """Sets the kast of this Leaderboard.


        :param kast: The kast of this Leaderboard.
        :type kast: float
        """

        self._kast = kast

    @property
    def kills(self):
        """Gets the kills of this Leaderboard.


        :return: The kills of this Leaderboard.
        :rtype: float
        """
        return self._kills

    @kills.setter
    def kills(self, kills):
        """Sets the kills of this Leaderboard.


        :param kills: The kills of this Leaderboard.
        :type kills: float
        """

        self._kills = kills

    @property
    def maps(self):
        """Gets the maps of this Leaderboard.


        :return: The maps of this Leaderboard.
        :rtype: float
        """
        return self._maps

    @maps.setter
    def maps(self, maps):
        """Sets the maps of this Leaderboard.


        :param maps: The maps of this Leaderboard.
        :type maps: float
        """

        self._maps = maps

    @property
    def match_name(self):
        """Gets the match_name of this Leaderboard.


        :return: The match_name of this Leaderboard.
        :rtype: str
        """
        return self._match_name

    @match_name.setter
    def match_name(self, match_name):
        """Sets the match_name of this Leaderboard.


        :param match_name: The match_name of this Leaderboard.
        :type match_name: str
        """

        self._match_name = match_name

    @property
    def name(self):
        """Gets the name of this Leaderboard.


        :return: The name of this Leaderboard.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Leaderboard.


        :param name: The name of this Leaderboard.
        :type name: str
        """

        self._name = name

    @property
    def opponent(self):
        """Gets the opponent of this Leaderboard.


        :return: The opponent of this Leaderboard.
        :rtype: str
        """
        return self._opponent

    @opponent.setter
    def opponent(self, opponent):
        """Sets the opponent of this Leaderboard.


        :param opponent: The opponent of this Leaderboard.
        :type opponent: str
        """

        self._opponent = opponent

    @property
    def opponent_id(self):
        """Gets the opponent_id of this Leaderboard.


        :return: The opponent_id of this Leaderboard.
        :rtype: int
        """
        return self._opponent_id

    @opponent_id.setter
    def opponent_id(self, opponent_id):
        """Sets the opponent_id of this Leaderboard.


        :param opponent_id: The opponent_id of this Leaderboard.
        :type opponent_id: int
        """

        self._opponent_id = opponent_id

    @property
    def player_id(self):
        """Gets the player_id of this Leaderboard.


        :return: The player_id of this Leaderboard.
        :rtype: int
        """
        return self._player_id

    @player_id.setter
    def player_id(self, player_id):
        """Sets the player_id of this Leaderboard.


        :param player_id: The player_id of this Leaderboard.
        :type player_id: int
        """

        self._player_id = player_id

    @property
    def quad_kills(self):
        """Gets the quad_kills of this Leaderboard.


        :return: The quad_kills of this Leaderboard.
        :rtype: float
        """
        return self._quad_kills

    @quad_kills.setter
    def quad_kills(self, quad_kills):
        """Sets the quad_kills of this Leaderboard.


        :param quad_kills: The quad_kills of this Leaderboard.
        :type quad_kills: float
        """

        self._quad_kills = quad_kills

    @property
    def rating(self):
        """Gets the rating of this Leaderboard.


        :return: The rating of this Leaderboard.
        :rtype: float
        """
        return self._rating

    @rating.setter
    def rating(self, rating):
        """Sets the rating of this Leaderboard.


        :param rating: The rating of this Leaderboard.
        :type rating: float
        """

        self._rating = rating

    @property
    def team(self):
        """Gets the team of this Leaderboard.


        :return: The team of this Leaderboard.
        :rtype: str
        """
        return self._team

    @team.setter
    def team(self, team):
        """Sets the team of this Leaderboard.


        :param team: The team of this Leaderboard.
        :type team: str
        """

        self._team = team

    @property
    def team_id(self):
        """Gets the team_id of this Leaderboard.


        :return: The team_id of this Leaderboard.
        :rtype: int
        """
        return self._team_id

    @team_id.setter
    def team_id(self, team_id):
        """Sets the team_id of this Leaderboard.


        :param team_id: The team_id of this Leaderboard.
        :type team_id: int
        """

        self._team_id = team_id

    @property
    def updated(self):
        """Gets the updated of this Leaderboard.


        :return: The updated of this Leaderboard.
        :rtype: str
        """
        return self._updated

    @updated.setter
    def updated(self, updated):
        """Sets the updated of this Leaderboard.


        :param updated: The updated of this Leaderboard.
        :type updated: str
        """

        self._updated = updated

    @property
    def updated_utc(self):
        """Gets the updated_utc of this Leaderboard.


        :return: The updated_utc of this Leaderboard.
        :rtype: str
        """
        return self._updated_utc

    @updated_utc.setter
    def updated_utc(self, updated_utc):
        """Sets the updated_utc of this Leaderboard.


        :param updated_utc: The updated_utc of this Leaderboard.
        :type updated_utc: str
        """

        self._updated_utc = updated_utc
