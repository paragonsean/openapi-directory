# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.game import Game
from openapi_server import util


class DfsSlateGame(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, game: Game=None, game_id: int=None, operator_game_id: int=None, removed_by_operator: bool=None, slate_game_id: int=None, slate_id: int=None):
        """DfsSlateGame - a model defined in OpenAPI

        :param game: The game of this DfsSlateGame.
        :param game_id: The game_id of this DfsSlateGame.
        :param operator_game_id: The operator_game_id of this DfsSlateGame.
        :param removed_by_operator: The removed_by_operator of this DfsSlateGame.
        :param slate_game_id: The slate_game_id of this DfsSlateGame.
        :param slate_id: The slate_id of this DfsSlateGame.
        """
        self.openapi_types = {
            'game': Game,
            'game_id': int,
            'operator_game_id': int,
            'removed_by_operator': bool,
            'slate_game_id': int,
            'slate_id': int
        }

        self.attribute_map = {
            'game': 'Game',
            'game_id': 'GameID',
            'operator_game_id': 'OperatorGameID',
            'removed_by_operator': 'RemovedByOperator',
            'slate_game_id': 'SlateGameID',
            'slate_id': 'SlateID'
        }

        self._game = game
        self._game_id = game_id
        self._operator_game_id = operator_game_id
        self._removed_by_operator = removed_by_operator
        self._slate_game_id = slate_game_id
        self._slate_id = slate_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DfsSlateGame':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DfsSlateGame of this DfsSlateGame.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def game(self):
        """Gets the game of this DfsSlateGame.


        :return: The game of this DfsSlateGame.
        :rtype: Game
        """
        return self._game

    @game.setter
    def game(self, game):
        """Sets the game of this DfsSlateGame.


        :param game: The game of this DfsSlateGame.
        :type game: Game
        """

        self._game = game

    @property
    def game_id(self):
        """Gets the game_id of this DfsSlateGame.


        :return: The game_id of this DfsSlateGame.
        :rtype: int
        """
        return self._game_id

    @game_id.setter
    def game_id(self, game_id):
        """Sets the game_id of this DfsSlateGame.


        :param game_id: The game_id of this DfsSlateGame.
        :type game_id: int
        """

        self._game_id = game_id

    @property
    def operator_game_id(self):
        """Gets the operator_game_id of this DfsSlateGame.


        :return: The operator_game_id of this DfsSlateGame.
        :rtype: int
        """
        return self._operator_game_id

    @operator_game_id.setter
    def operator_game_id(self, operator_game_id):
        """Sets the operator_game_id of this DfsSlateGame.


        :param operator_game_id: The operator_game_id of this DfsSlateGame.
        :type operator_game_id: int
        """

        self._operator_game_id = operator_game_id

    @property
    def removed_by_operator(self):
        """Gets the removed_by_operator of this DfsSlateGame.


        :return: The removed_by_operator of this DfsSlateGame.
        :rtype: bool
        """
        return self._removed_by_operator

    @removed_by_operator.setter
    def removed_by_operator(self, removed_by_operator):
        """Sets the removed_by_operator of this DfsSlateGame.


        :param removed_by_operator: The removed_by_operator of this DfsSlateGame.
        :type removed_by_operator: bool
        """

        self._removed_by_operator = removed_by_operator

    @property
    def slate_game_id(self):
        """Gets the slate_game_id of this DfsSlateGame.


        :return: The slate_game_id of this DfsSlateGame.
        :rtype: int
        """
        return self._slate_game_id

    @slate_game_id.setter
    def slate_game_id(self, slate_game_id):
        """Sets the slate_game_id of this DfsSlateGame.


        :param slate_game_id: The slate_game_id of this DfsSlateGame.
        :type slate_game_id: int
        """

        self._slate_game_id = slate_game_id

    @property
    def slate_id(self):
        """Gets the slate_id of this DfsSlateGame.


        :return: The slate_id of this DfsSlateGame.
        :rtype: int
        """
        return self._slate_id

    @slate_id.setter
    def slate_id(self, slate_id):
        """Sets the slate_id of this DfsSlateGame.


        :param slate_id: The slate_id of this DfsSlateGame.
        :type slate_id: int
        """

        self._slate_id = slate_id
