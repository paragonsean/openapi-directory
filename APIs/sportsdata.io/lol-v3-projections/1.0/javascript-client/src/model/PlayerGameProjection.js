/**
 * LoL v3 Projections
 * LoL v3 Projections
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PlayerGameProjection model module.
 * @module model/PlayerGameProjection
 * @version 1.0
 */
class PlayerGameProjection {
    /**
     * Constructs a new <code>PlayerGameProjection</code>.
     * @alias module:model/PlayerGameProjection
     */
    constructor() { 
        
        PlayerGameProjection.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PlayerGameProjection</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PlayerGameProjection} obj Optional instance to populate.
     * @return {module:model/PlayerGameProjection} The populated <code>PlayerGameProjection</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PlayerGameProjection();

            if (data.hasOwnProperty('Assists')) {
                obj['Assists'] = ApiClient.convertToType(data['Assists'], 'Number');
            }
            if (data.hasOwnProperty('CombatPlayerScore')) {
                obj['CombatPlayerScore'] = ApiClient.convertToType(data['CombatPlayerScore'], 'Number');
            }
            if (data.hasOwnProperty('DateTime')) {
                obj['DateTime'] = ApiClient.convertToType(data['DateTime'], 'String');
            }
            if (data.hasOwnProperty('Day')) {
                obj['Day'] = ApiClient.convertToType(data['Day'], 'String');
            }
            if (data.hasOwnProperty('Deaths')) {
                obj['Deaths'] = ApiClient.convertToType(data['Deaths'], 'Number');
            }
            if (data.hasOwnProperty('DoubleKills')) {
                obj['DoubleKills'] = ApiClient.convertToType(data['DoubleKills'], 'Number');
            }
            if (data.hasOwnProperty('FantasyPoints')) {
                obj['FantasyPoints'] = ApiClient.convertToType(data['FantasyPoints'], 'Number');
            }
            if (data.hasOwnProperty('GameId')) {
                obj['GameId'] = ApiClient.convertToType(data['GameId'], 'Number');
            }
            if (data.hasOwnProperty('Games')) {
                obj['Games'] = ApiClient.convertToType(data['Games'], 'Number');
            }
            if (data.hasOwnProperty('GoldEarned')) {
                obj['GoldEarned'] = ApiClient.convertToType(data['GoldEarned'], 'Number');
            }
            if (data.hasOwnProperty('GoldSpent')) {
                obj['GoldSpent'] = ApiClient.convertToType(data['GoldSpent'], 'Number');
            }
            if (data.hasOwnProperty('InhibitorKills')) {
                obj['InhibitorKills'] = ApiClient.convertToType(data['InhibitorKills'], 'Number');
            }
            if (data.hasOwnProperty('IsClosed')) {
                obj['IsClosed'] = ApiClient.convertToType(data['IsClosed'], 'Boolean');
            }
            if (data.hasOwnProperty('KillingSpree')) {
                obj['KillingSpree'] = ApiClient.convertToType(data['KillingSpree'], 'Number');
            }
            if (data.hasOwnProperty('Kills')) {
                obj['Kills'] = ApiClient.convertToType(data['Kills'], 'Number');
            }
            if (data.hasOwnProperty('LargestCriticalStrike')) {
                obj['LargestCriticalStrike'] = ApiClient.convertToType(data['LargestCriticalStrike'], 'Number');
            }
            if (data.hasOwnProperty('LargestKillingSpree')) {
                obj['LargestKillingSpree'] = ApiClient.convertToType(data['LargestKillingSpree'], 'Number');
            }
            if (data.hasOwnProperty('LargestMultiKill')) {
                obj['LargestMultiKill'] = ApiClient.convertToType(data['LargestMultiKill'], 'Number');
            }
            if (data.hasOwnProperty('LongestTimeSpentLiving')) {
                obj['LongestTimeSpentLiving'] = ApiClient.convertToType(data['LongestTimeSpentLiving'], 'Number');
            }
            if (data.hasOwnProperty('MagicDamageDealt')) {
                obj['MagicDamageDealt'] = ApiClient.convertToType(data['MagicDamageDealt'], 'Number');
            }
            if (data.hasOwnProperty('MagicDamageDealtToChampions')) {
                obj['MagicDamageDealtToChampions'] = ApiClient.convertToType(data['MagicDamageDealtToChampions'], 'Number');
            }
            if (data.hasOwnProperty('MagicDamageTaken')) {
                obj['MagicDamageTaken'] = ApiClient.convertToType(data['MagicDamageTaken'], 'Number');
            }
            if (data.hasOwnProperty('MatchName')) {
                obj['MatchName'] = ApiClient.convertToType(data['MatchName'], 'String');
            }
            if (data.hasOwnProperty('Matches')) {
                obj['Matches'] = ApiClient.convertToType(data['Matches'], 'Number');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('NeutralMinionsKIlled')) {
                obj['NeutralMinionsKIlled'] = ApiClient.convertToType(data['NeutralMinionsKIlled'], 'Number');
            }
            if (data.hasOwnProperty('NeutralMinionsKIlledTeamJungle')) {
                obj['NeutralMinionsKIlledTeamJungle'] = ApiClient.convertToType(data['NeutralMinionsKIlledTeamJungle'], 'Number');
            }
            if (data.hasOwnProperty('NeutralMinionsKilledEnemyJungle')) {
                obj['NeutralMinionsKilledEnemyJungle'] = ApiClient.convertToType(data['NeutralMinionsKilledEnemyJungle'], 'Number');
            }
            if (data.hasOwnProperty('ObjectivePlayerScore')) {
                obj['ObjectivePlayerScore'] = ApiClient.convertToType(data['ObjectivePlayerScore'], 'Number');
            }
            if (data.hasOwnProperty('Opponent')) {
                obj['Opponent'] = ApiClient.convertToType(data['Opponent'], 'String');
            }
            if (data.hasOwnProperty('OpponentId')) {
                obj['OpponentId'] = ApiClient.convertToType(data['OpponentId'], 'Number');
            }
            if (data.hasOwnProperty('PentaKills')) {
                obj['PentaKills'] = ApiClient.convertToType(data['PentaKills'], 'Number');
            }
            if (data.hasOwnProperty('PhysicalDamageDealt')) {
                obj['PhysicalDamageDealt'] = ApiClient.convertToType(data['PhysicalDamageDealt'], 'Number');
            }
            if (data.hasOwnProperty('PhysicalDamageDealtToChampions')) {
                obj['PhysicalDamageDealtToChampions'] = ApiClient.convertToType(data['PhysicalDamageDealtToChampions'], 'Number');
            }
            if (data.hasOwnProperty('PhysicalDamageTaken')) {
                obj['PhysicalDamageTaken'] = ApiClient.convertToType(data['PhysicalDamageTaken'], 'Number');
            }
            if (data.hasOwnProperty('PlayerId')) {
                obj['PlayerId'] = ApiClient.convertToType(data['PlayerId'], 'Number');
            }
            if (data.hasOwnProperty('Position')) {
                obj['Position'] = ApiClient.convertToType(data['Position'], 'String');
            }
            if (data.hasOwnProperty('QuadraKills')) {
                obj['QuadraKills'] = ApiClient.convertToType(data['QuadraKills'], 'Number');
            }
            if (data.hasOwnProperty('SightWardsBoughtInGame')) {
                obj['SightWardsBoughtInGame'] = ApiClient.convertToType(data['SightWardsBoughtInGame'], 'Number');
            }
            if (data.hasOwnProperty('Team')) {
                obj['Team'] = ApiClient.convertToType(data['Team'], 'String');
            }
            if (data.hasOwnProperty('TeamId')) {
                obj['TeamId'] = ApiClient.convertToType(data['TeamId'], 'Number');
            }
            if (data.hasOwnProperty('TenKillsOrAssists')) {
                obj['TenKillsOrAssists'] = ApiClient.convertToType(data['TenKillsOrAssists'], 'Number');
            }
            if (data.hasOwnProperty('TotalDamageDealt')) {
                obj['TotalDamageDealt'] = ApiClient.convertToType(data['TotalDamageDealt'], 'Number');
            }
            if (data.hasOwnProperty('TotalDamageDealtToChampions')) {
                obj['TotalDamageDealtToChampions'] = ApiClient.convertToType(data['TotalDamageDealtToChampions'], 'Number');
            }
            if (data.hasOwnProperty('TotalDamageTaken')) {
                obj['TotalDamageTaken'] = ApiClient.convertToType(data['TotalDamageTaken'], 'Number');
            }
            if (data.hasOwnProperty('TotalHeal')) {
                obj['TotalHeal'] = ApiClient.convertToType(data['TotalHeal'], 'Number');
            }
            if (data.hasOwnProperty('TotalMinionsKilled')) {
                obj['TotalMinionsKilled'] = ApiClient.convertToType(data['TotalMinionsKilled'], 'Number');
            }
            if (data.hasOwnProperty('TotalPlayerScore')) {
                obj['TotalPlayerScore'] = ApiClient.convertToType(data['TotalPlayerScore'], 'Number');
            }
            if (data.hasOwnProperty('TotalTimeCrowdControlDealt')) {
                obj['TotalTimeCrowdControlDealt'] = ApiClient.convertToType(data['TotalTimeCrowdControlDealt'], 'Number');
            }
            if (data.hasOwnProperty('TotalUnitsHealed')) {
                obj['TotalUnitsHealed'] = ApiClient.convertToType(data['TotalUnitsHealed'], 'Number');
            }
            if (data.hasOwnProperty('TripleKills')) {
                obj['TripleKills'] = ApiClient.convertToType(data['TripleKills'], 'Number');
            }
            if (data.hasOwnProperty('TrueDamageDealt')) {
                obj['TrueDamageDealt'] = ApiClient.convertToType(data['TrueDamageDealt'], 'Number');
            }
            if (data.hasOwnProperty('TrueDamageDealtToChampions')) {
                obj['TrueDamageDealtToChampions'] = ApiClient.convertToType(data['TrueDamageDealtToChampions'], 'Number');
            }
            if (data.hasOwnProperty('TrueDamageTaken')) {
                obj['TrueDamageTaken'] = ApiClient.convertToType(data['TrueDamageTaken'], 'Number');
            }
            if (data.hasOwnProperty('TurretKills')) {
                obj['TurretKills'] = ApiClient.convertToType(data['TurretKills'], 'Number');
            }
            if (data.hasOwnProperty('UnrealKills')) {
                obj['UnrealKills'] = ApiClient.convertToType(data['UnrealKills'], 'Number');
            }
            if (data.hasOwnProperty('Updated')) {
                obj['Updated'] = ApiClient.convertToType(data['Updated'], 'String');
            }
            if (data.hasOwnProperty('VisionWardsBoughtInGame')) {
                obj['VisionWardsBoughtInGame'] = ApiClient.convertToType(data['VisionWardsBoughtInGame'], 'Number');
            }
            if (data.hasOwnProperty('WardsKilled')) {
                obj['WardsKilled'] = ApiClient.convertToType(data['WardsKilled'], 'Number');
            }
            if (data.hasOwnProperty('WardsPlaced')) {
                obj['WardsPlaced'] = ApiClient.convertToType(data['WardsPlaced'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PlayerGameProjection</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PlayerGameProjection</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['DateTime'] && !(typeof data['DateTime'] === 'string' || data['DateTime'] instanceof String)) {
            throw new Error("Expected the field `DateTime` to be a primitive type in the JSON string but got " + data['DateTime']);
        }
        // ensure the json data is a string
        if (data['Day'] && !(typeof data['Day'] === 'string' || data['Day'] instanceof String)) {
            throw new Error("Expected the field `Day` to be a primitive type in the JSON string but got " + data['Day']);
        }
        // ensure the json data is a string
        if (data['MatchName'] && !(typeof data['MatchName'] === 'string' || data['MatchName'] instanceof String)) {
            throw new Error("Expected the field `MatchName` to be a primitive type in the JSON string but got " + data['MatchName']);
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // ensure the json data is a string
        if (data['Opponent'] && !(typeof data['Opponent'] === 'string' || data['Opponent'] instanceof String)) {
            throw new Error("Expected the field `Opponent` to be a primitive type in the JSON string but got " + data['Opponent']);
        }
        // ensure the json data is a string
        if (data['Position'] && !(typeof data['Position'] === 'string' || data['Position'] instanceof String)) {
            throw new Error("Expected the field `Position` to be a primitive type in the JSON string but got " + data['Position']);
        }
        // ensure the json data is a string
        if (data['Team'] && !(typeof data['Team'] === 'string' || data['Team'] instanceof String)) {
            throw new Error("Expected the field `Team` to be a primitive type in the JSON string but got " + data['Team']);
        }
        // ensure the json data is a string
        if (data['Updated'] && !(typeof data['Updated'] === 'string' || data['Updated'] instanceof String)) {
            throw new Error("Expected the field `Updated` to be a primitive type in the JSON string but got " + data['Updated']);
        }

        return true;
    }


}



/**
 * @member {Number} Assists
 */
PlayerGameProjection.prototype['Assists'] = undefined;

/**
 * @member {Number} CombatPlayerScore
 */
PlayerGameProjection.prototype['CombatPlayerScore'] = undefined;

/**
 * @member {String} DateTime
 */
PlayerGameProjection.prototype['DateTime'] = undefined;

/**
 * @member {String} Day
 */
PlayerGameProjection.prototype['Day'] = undefined;

/**
 * @member {Number} Deaths
 */
PlayerGameProjection.prototype['Deaths'] = undefined;

/**
 * @member {Number} DoubleKills
 */
PlayerGameProjection.prototype['DoubleKills'] = undefined;

/**
 * @member {Number} FantasyPoints
 */
PlayerGameProjection.prototype['FantasyPoints'] = undefined;

/**
 * @member {Number} GameId
 */
PlayerGameProjection.prototype['GameId'] = undefined;

/**
 * @member {Number} Games
 */
PlayerGameProjection.prototype['Games'] = undefined;

/**
 * @member {Number} GoldEarned
 */
PlayerGameProjection.prototype['GoldEarned'] = undefined;

/**
 * @member {Number} GoldSpent
 */
PlayerGameProjection.prototype['GoldSpent'] = undefined;

/**
 * @member {Number} InhibitorKills
 */
PlayerGameProjection.prototype['InhibitorKills'] = undefined;

/**
 * @member {Boolean} IsClosed
 */
PlayerGameProjection.prototype['IsClosed'] = undefined;

/**
 * @member {Number} KillingSpree
 */
PlayerGameProjection.prototype['KillingSpree'] = undefined;

/**
 * @member {Number} Kills
 */
PlayerGameProjection.prototype['Kills'] = undefined;

/**
 * @member {Number} LargestCriticalStrike
 */
PlayerGameProjection.prototype['LargestCriticalStrike'] = undefined;

/**
 * @member {Number} LargestKillingSpree
 */
PlayerGameProjection.prototype['LargestKillingSpree'] = undefined;

/**
 * @member {Number} LargestMultiKill
 */
PlayerGameProjection.prototype['LargestMultiKill'] = undefined;

/**
 * @member {Number} LongestTimeSpentLiving
 */
PlayerGameProjection.prototype['LongestTimeSpentLiving'] = undefined;

/**
 * @member {Number} MagicDamageDealt
 */
PlayerGameProjection.prototype['MagicDamageDealt'] = undefined;

/**
 * @member {Number} MagicDamageDealtToChampions
 */
PlayerGameProjection.prototype['MagicDamageDealtToChampions'] = undefined;

/**
 * @member {Number} MagicDamageTaken
 */
PlayerGameProjection.prototype['MagicDamageTaken'] = undefined;

/**
 * @member {String} MatchName
 */
PlayerGameProjection.prototype['MatchName'] = undefined;

/**
 * @member {Number} Matches
 */
PlayerGameProjection.prototype['Matches'] = undefined;

/**
 * @member {String} Name
 */
PlayerGameProjection.prototype['Name'] = undefined;

/**
 * @member {Number} NeutralMinionsKIlled
 */
PlayerGameProjection.prototype['NeutralMinionsKIlled'] = undefined;

/**
 * @member {Number} NeutralMinionsKIlledTeamJungle
 */
PlayerGameProjection.prototype['NeutralMinionsKIlledTeamJungle'] = undefined;

/**
 * @member {Number} NeutralMinionsKilledEnemyJungle
 */
PlayerGameProjection.prototype['NeutralMinionsKilledEnemyJungle'] = undefined;

/**
 * @member {Number} ObjectivePlayerScore
 */
PlayerGameProjection.prototype['ObjectivePlayerScore'] = undefined;

/**
 * @member {String} Opponent
 */
PlayerGameProjection.prototype['Opponent'] = undefined;

/**
 * @member {Number} OpponentId
 */
PlayerGameProjection.prototype['OpponentId'] = undefined;

/**
 * @member {Number} PentaKills
 */
PlayerGameProjection.prototype['PentaKills'] = undefined;

/**
 * @member {Number} PhysicalDamageDealt
 */
PlayerGameProjection.prototype['PhysicalDamageDealt'] = undefined;

/**
 * @member {Number} PhysicalDamageDealtToChampions
 */
PlayerGameProjection.prototype['PhysicalDamageDealtToChampions'] = undefined;

/**
 * @member {Number} PhysicalDamageTaken
 */
PlayerGameProjection.prototype['PhysicalDamageTaken'] = undefined;

/**
 * @member {Number} PlayerId
 */
PlayerGameProjection.prototype['PlayerId'] = undefined;

/**
 * @member {String} Position
 */
PlayerGameProjection.prototype['Position'] = undefined;

/**
 * @member {Number} QuadraKills
 */
PlayerGameProjection.prototype['QuadraKills'] = undefined;

/**
 * @member {Number} SightWardsBoughtInGame
 */
PlayerGameProjection.prototype['SightWardsBoughtInGame'] = undefined;

/**
 * @member {String} Team
 */
PlayerGameProjection.prototype['Team'] = undefined;

/**
 * @member {Number} TeamId
 */
PlayerGameProjection.prototype['TeamId'] = undefined;

/**
 * @member {Number} TenKillsOrAssists
 */
PlayerGameProjection.prototype['TenKillsOrAssists'] = undefined;

/**
 * @member {Number} TotalDamageDealt
 */
PlayerGameProjection.prototype['TotalDamageDealt'] = undefined;

/**
 * @member {Number} TotalDamageDealtToChampions
 */
PlayerGameProjection.prototype['TotalDamageDealtToChampions'] = undefined;

/**
 * @member {Number} TotalDamageTaken
 */
PlayerGameProjection.prototype['TotalDamageTaken'] = undefined;

/**
 * @member {Number} TotalHeal
 */
PlayerGameProjection.prototype['TotalHeal'] = undefined;

/**
 * @member {Number} TotalMinionsKilled
 */
PlayerGameProjection.prototype['TotalMinionsKilled'] = undefined;

/**
 * @member {Number} TotalPlayerScore
 */
PlayerGameProjection.prototype['TotalPlayerScore'] = undefined;

/**
 * @member {Number} TotalTimeCrowdControlDealt
 */
PlayerGameProjection.prototype['TotalTimeCrowdControlDealt'] = undefined;

/**
 * @member {Number} TotalUnitsHealed
 */
PlayerGameProjection.prototype['TotalUnitsHealed'] = undefined;

/**
 * @member {Number} TripleKills
 */
PlayerGameProjection.prototype['TripleKills'] = undefined;

/**
 * @member {Number} TrueDamageDealt
 */
PlayerGameProjection.prototype['TrueDamageDealt'] = undefined;

/**
 * @member {Number} TrueDamageDealtToChampions
 */
PlayerGameProjection.prototype['TrueDamageDealtToChampions'] = undefined;

/**
 * @member {Number} TrueDamageTaken
 */
PlayerGameProjection.prototype['TrueDamageTaken'] = undefined;

/**
 * @member {Number} TurretKills
 */
PlayerGameProjection.prototype['TurretKills'] = undefined;

/**
 * @member {Number} UnrealKills
 */
PlayerGameProjection.prototype['UnrealKills'] = undefined;

/**
 * @member {String} Updated
 */
PlayerGameProjection.prototype['Updated'] = undefined;

/**
 * @member {Number} VisionWardsBoughtInGame
 */
PlayerGameProjection.prototype['VisionWardsBoughtInGame'] = undefined;

/**
 * @member {Number} WardsKilled
 */
PlayerGameProjection.prototype['WardsKilled'] = undefined;

/**
 * @member {Number} WardsPlaced
 */
PlayerGameProjection.prototype['WardsPlaced'] = undefined;






export default PlayerGameProjection;

