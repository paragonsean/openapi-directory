/**
 * NHL v3 Projections
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoaltender.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoaltender::OAIGoaltender(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoaltender::OAIGoaltender() {
    this->initializeModel();
}

OAIGoaltender::~OAIGoaltender() {}

void OAIGoaltender::initializeModel() {

    m_confirmed_isSet = false;
    m_confirmed_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_jersey_isSet = false;
    m_jersey_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_player_id_isSet = false;
    m_player_id_isValid = false;

    m_team_isSet = false;
    m_team_isValid = false;

    m_team_id_isSet = false;
    m_team_id_isValid = false;
}

void OAIGoaltender::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoaltender::fromJsonObject(QJsonObject json) {

    m_confirmed_isValid = ::OpenAPI::fromJsonValue(m_confirmed, json[QString("Confirmed")]);
    m_confirmed_isSet = !json[QString("Confirmed")].isNull() && m_confirmed_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("FirstName")]);
    m_first_name_isSet = !json[QString("FirstName")].isNull() && m_first_name_isValid;

    m_jersey_isValid = ::OpenAPI::fromJsonValue(m_jersey, json[QString("Jersey")]);
    m_jersey_isSet = !json[QString("Jersey")].isNull() && m_jersey_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("LastName")]);
    m_last_name_isSet = !json[QString("LastName")].isNull() && m_last_name_isValid;

    m_player_id_isValid = ::OpenAPI::fromJsonValue(m_player_id, json[QString("PlayerID")]);
    m_player_id_isSet = !json[QString("PlayerID")].isNull() && m_player_id_isValid;

    m_team_isValid = ::OpenAPI::fromJsonValue(m_team, json[QString("Team")]);
    m_team_isSet = !json[QString("Team")].isNull() && m_team_isValid;

    m_team_id_isValid = ::OpenAPI::fromJsonValue(m_team_id, json[QString("TeamID")]);
    m_team_id_isSet = !json[QString("TeamID")].isNull() && m_team_id_isValid;
}

QString OAIGoaltender::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoaltender::asJsonObject() const {
    QJsonObject obj;
    if (m_confirmed_isSet) {
        obj.insert(QString("Confirmed"), ::OpenAPI::toJsonValue(m_confirmed));
    }
    if (m_first_name_isSet) {
        obj.insert(QString("FirstName"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_jersey_isSet) {
        obj.insert(QString("Jersey"), ::OpenAPI::toJsonValue(m_jersey));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("LastName"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_player_id_isSet) {
        obj.insert(QString("PlayerID"), ::OpenAPI::toJsonValue(m_player_id));
    }
    if (m_team_isSet) {
        obj.insert(QString("Team"), ::OpenAPI::toJsonValue(m_team));
    }
    if (m_team_id_isSet) {
        obj.insert(QString("TeamID"), ::OpenAPI::toJsonValue(m_team_id));
    }
    return obj;
}

bool OAIGoaltender::isConfirmed() const {
    return m_confirmed;
}
void OAIGoaltender::setConfirmed(const bool &confirmed) {
    m_confirmed = confirmed;
    m_confirmed_isSet = true;
}

bool OAIGoaltender::is_confirmed_Set() const{
    return m_confirmed_isSet;
}

bool OAIGoaltender::is_confirmed_Valid() const{
    return m_confirmed_isValid;
}

QString OAIGoaltender::getFirstName() const {
    return m_first_name;
}
void OAIGoaltender::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAIGoaltender::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAIGoaltender::is_first_name_Valid() const{
    return m_first_name_isValid;
}

qint32 OAIGoaltender::getJersey() const {
    return m_jersey;
}
void OAIGoaltender::setJersey(const qint32 &jersey) {
    m_jersey = jersey;
    m_jersey_isSet = true;
}

bool OAIGoaltender::is_jersey_Set() const{
    return m_jersey_isSet;
}

bool OAIGoaltender::is_jersey_Valid() const{
    return m_jersey_isValid;
}

QString OAIGoaltender::getLastName() const {
    return m_last_name;
}
void OAIGoaltender::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAIGoaltender::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAIGoaltender::is_last_name_Valid() const{
    return m_last_name_isValid;
}

qint32 OAIGoaltender::getPlayerId() const {
    return m_player_id;
}
void OAIGoaltender::setPlayerId(const qint32 &player_id) {
    m_player_id = player_id;
    m_player_id_isSet = true;
}

bool OAIGoaltender::is_player_id_Set() const{
    return m_player_id_isSet;
}

bool OAIGoaltender::is_player_id_Valid() const{
    return m_player_id_isValid;
}

QString OAIGoaltender::getTeam() const {
    return m_team;
}
void OAIGoaltender::setTeam(const QString &team) {
    m_team = team;
    m_team_isSet = true;
}

bool OAIGoaltender::is_team_Set() const{
    return m_team_isSet;
}

bool OAIGoaltender::is_team_Valid() const{
    return m_team_isValid;
}

qint32 OAIGoaltender::getTeamId() const {
    return m_team_id;
}
void OAIGoaltender::setTeamId(const qint32 &team_id) {
    m_team_id = team_id;
    m_team_id_isSet = true;
}

bool OAIGoaltender::is_team_id_Set() const{
    return m_team_id_isSet;
}

bool OAIGoaltender::is_team_id_Valid() const{
    return m_team_id_isValid;
}

bool OAIGoaltender::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_confirmed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_jersey_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_player_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_team_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_team_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoaltender::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
