/**
 * NHL v3 Projections
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGame.h
 *
 * 
 */

#ifndef OAIGame_H
#define OAIGame_H

#include <QJsonObject>

#include "OAIPeriod.h"
#include "OAISeries.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPeriod;
class OAISeries;

class OAIGame : public OAIObject {
public:
    OAIGame();
    OAIGame(QString json);
    ~OAIGame() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAttendance() const;
    void setAttendance(const qint32 &attendance);
    bool is_attendance_Set() const;
    bool is_attendance_Valid() const;

    qint32 getAwayRotationNumber() const;
    void setAwayRotationNumber(const qint32 &away_rotation_number);
    bool is_away_rotation_number_Set() const;
    bool is_away_rotation_number_Valid() const;

    QString getAwayTeam() const;
    void setAwayTeam(const QString &away_team);
    bool is_away_team_Set() const;
    bool is_away_team_Valid() const;

    qint32 getAwayTeamId() const;
    void setAwayTeamId(const qint32 &away_team_id);
    bool is_away_team_id_Set() const;
    bool is_away_team_id_Valid() const;

    qint32 getAwayTeamMoneyLine() const;
    void setAwayTeamMoneyLine(const qint32 &away_team_money_line);
    bool is_away_team_money_line_Set() const;
    bool is_away_team_money_line_Valid() const;

    qint32 getAwayTeamScore() const;
    void setAwayTeamScore(const qint32 &away_team_score);
    bool is_away_team_score_Set() const;
    bool is_away_team_score_Valid() const;

    QString getChannel() const;
    void setChannel(const QString &channel);
    bool is_channel_Set() const;
    bool is_channel_Valid() const;

    QString getDateTime() const;
    void setDateTime(const QString &date_time);
    bool is_date_time_Set() const;
    bool is_date_time_Valid() const;

    QString getDateTimeUtc() const;
    void setDateTimeUtc(const QString &date_time_utc);
    bool is_date_time_utc_Set() const;
    bool is_date_time_utc_Valid() const;

    QString getDay() const;
    void setDay(const QString &day);
    bool is_day_Set() const;
    bool is_day_Valid() const;

    QString getGameEndDateTime() const;
    void setGameEndDateTime(const QString &game_end_date_time);
    bool is_game_end_date_time_Set() const;
    bool is_game_end_date_time_Valid() const;

    qint32 getGameId() const;
    void setGameId(const qint32 &game_id);
    bool is_game_id_Set() const;
    bool is_game_id_Valid() const;

    qint32 getGlobalAwayTeamId() const;
    void setGlobalAwayTeamId(const qint32 &global_away_team_id);
    bool is_global_away_team_id_Set() const;
    bool is_global_away_team_id_Valid() const;

    qint32 getGlobalGameId() const;
    void setGlobalGameId(const qint32 &global_game_id);
    bool is_global_game_id_Set() const;
    bool is_global_game_id_Valid() const;

    qint32 getGlobalHomeTeamId() const;
    void setGlobalHomeTeamId(const qint32 &global_home_team_id);
    bool is_global_home_team_id_Set() const;
    bool is_global_home_team_id_Valid() const;

    qint32 getHomeRotationNumber() const;
    void setHomeRotationNumber(const qint32 &home_rotation_number);
    bool is_home_rotation_number_Set() const;
    bool is_home_rotation_number_Valid() const;

    QString getHomeTeam() const;
    void setHomeTeam(const QString &home_team);
    bool is_home_team_Set() const;
    bool is_home_team_Valid() const;

    qint32 getHomeTeamId() const;
    void setHomeTeamId(const qint32 &home_team_id);
    bool is_home_team_id_Set() const;
    bool is_home_team_id_Valid() const;

    qint32 getHomeTeamMoneyLine() const;
    void setHomeTeamMoneyLine(const qint32 &home_team_money_line);
    bool is_home_team_money_line_Set() const;
    bool is_home_team_money_line_Valid() const;

    qint32 getHomeTeamScore() const;
    void setHomeTeamScore(const qint32 &home_team_score);
    bool is_home_team_score_Set() const;
    bool is_home_team_score_Valid() const;

    bool isIsClosed() const;
    void setIsClosed(const bool &is_closed);
    bool is_is_closed_Set() const;
    bool is_is_closed_Valid() const;

    QString getLastPlay() const;
    void setLastPlay(const QString &last_play);
    bool is_last_play_Set() const;
    bool is_last_play_Valid() const;

    bool isNeutralVenue() const;
    void setNeutralVenue(const bool &neutral_venue);
    bool is_neutral_venue_Set() const;
    bool is_neutral_venue_Valid() const;

    qint32 getOverPayout() const;
    void setOverPayout(const qint32 &over_payout);
    bool is_over_payout_Set() const;
    bool is_over_payout_Valid() const;

    double getOverUnder() const;
    void setOverUnder(const double &over_under);
    bool is_over_under_Set() const;
    bool is_over_under_Valid() const;

    QString getPeriod() const;
    void setPeriod(const QString &period);
    bool is_period_Set() const;
    bool is_period_Valid() const;

    QList<OAIPeriod> getPeriods() const;
    void setPeriods(const QList<OAIPeriod> &periods);
    bool is_periods_Set() const;
    bool is_periods_Valid() const;

    double getPointSpread() const;
    void setPointSpread(const double &point_spread);
    bool is_point_spread_Set() const;
    bool is_point_spread_Valid() const;

    qint32 getPointSpreadAwayTeamMoneyLine() const;
    void setPointSpreadAwayTeamMoneyLine(const qint32 &point_spread_away_team_money_line);
    bool is_point_spread_away_team_money_line_Set() const;
    bool is_point_spread_away_team_money_line_Valid() const;

    qint32 getPointSpreadHomeTeamMoneyLine() const;
    void setPointSpreadHomeTeamMoneyLine(const qint32 &point_spread_home_team_money_line);
    bool is_point_spread_home_team_money_line_Set() const;
    bool is_point_spread_home_team_money_line_Valid() const;

    qint32 getSeason() const;
    void setSeason(const qint32 &season);
    bool is_season_Set() const;
    bool is_season_Valid() const;

    qint32 getSeasonType() const;
    void setSeasonType(const qint32 &season_type);
    bool is_season_type_Set() const;
    bool is_season_type_Valid() const;

    OAISeries getSeriesInfo() const;
    void setSeriesInfo(const OAISeries &series_info);
    bool is_series_info_Set() const;
    bool is_series_info_Valid() const;

    qint32 getStadiumId() const;
    void setStadiumId(const qint32 &stadium_id);
    bool is_stadium_id_Set() const;
    bool is_stadium_id_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    qint32 getTimeRemainingMinutes() const;
    void setTimeRemainingMinutes(const qint32 &time_remaining_minutes);
    bool is_time_remaining_minutes_Set() const;
    bool is_time_remaining_minutes_Valid() const;

    qint32 getTimeRemainingSeconds() const;
    void setTimeRemainingSeconds(const qint32 &time_remaining_seconds);
    bool is_time_remaining_seconds_Set() const;
    bool is_time_remaining_seconds_Valid() const;

    qint32 getUnderPayout() const;
    void setUnderPayout(const qint32 &under_payout);
    bool is_under_payout_Set() const;
    bool is_under_payout_Valid() const;

    QString getUpdated() const;
    void setUpdated(const QString &updated);
    bool is_updated_Set() const;
    bool is_updated_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_attendance;
    bool m_attendance_isSet;
    bool m_attendance_isValid;

    qint32 m_away_rotation_number;
    bool m_away_rotation_number_isSet;
    bool m_away_rotation_number_isValid;

    QString m_away_team;
    bool m_away_team_isSet;
    bool m_away_team_isValid;

    qint32 m_away_team_id;
    bool m_away_team_id_isSet;
    bool m_away_team_id_isValid;

    qint32 m_away_team_money_line;
    bool m_away_team_money_line_isSet;
    bool m_away_team_money_line_isValid;

    qint32 m_away_team_score;
    bool m_away_team_score_isSet;
    bool m_away_team_score_isValid;

    QString m_channel;
    bool m_channel_isSet;
    bool m_channel_isValid;

    QString m_date_time;
    bool m_date_time_isSet;
    bool m_date_time_isValid;

    QString m_date_time_utc;
    bool m_date_time_utc_isSet;
    bool m_date_time_utc_isValid;

    QString m_day;
    bool m_day_isSet;
    bool m_day_isValid;

    QString m_game_end_date_time;
    bool m_game_end_date_time_isSet;
    bool m_game_end_date_time_isValid;

    qint32 m_game_id;
    bool m_game_id_isSet;
    bool m_game_id_isValid;

    qint32 m_global_away_team_id;
    bool m_global_away_team_id_isSet;
    bool m_global_away_team_id_isValid;

    qint32 m_global_game_id;
    bool m_global_game_id_isSet;
    bool m_global_game_id_isValid;

    qint32 m_global_home_team_id;
    bool m_global_home_team_id_isSet;
    bool m_global_home_team_id_isValid;

    qint32 m_home_rotation_number;
    bool m_home_rotation_number_isSet;
    bool m_home_rotation_number_isValid;

    QString m_home_team;
    bool m_home_team_isSet;
    bool m_home_team_isValid;

    qint32 m_home_team_id;
    bool m_home_team_id_isSet;
    bool m_home_team_id_isValid;

    qint32 m_home_team_money_line;
    bool m_home_team_money_line_isSet;
    bool m_home_team_money_line_isValid;

    qint32 m_home_team_score;
    bool m_home_team_score_isSet;
    bool m_home_team_score_isValid;

    bool m_is_closed;
    bool m_is_closed_isSet;
    bool m_is_closed_isValid;

    QString m_last_play;
    bool m_last_play_isSet;
    bool m_last_play_isValid;

    bool m_neutral_venue;
    bool m_neutral_venue_isSet;
    bool m_neutral_venue_isValid;

    qint32 m_over_payout;
    bool m_over_payout_isSet;
    bool m_over_payout_isValid;

    double m_over_under;
    bool m_over_under_isSet;
    bool m_over_under_isValid;

    QString m_period;
    bool m_period_isSet;
    bool m_period_isValid;

    QList<OAIPeriod> m_periods;
    bool m_periods_isSet;
    bool m_periods_isValid;

    double m_point_spread;
    bool m_point_spread_isSet;
    bool m_point_spread_isValid;

    qint32 m_point_spread_away_team_money_line;
    bool m_point_spread_away_team_money_line_isSet;
    bool m_point_spread_away_team_money_line_isValid;

    qint32 m_point_spread_home_team_money_line;
    bool m_point_spread_home_team_money_line_isSet;
    bool m_point_spread_home_team_money_line_isValid;

    qint32 m_season;
    bool m_season_isSet;
    bool m_season_isValid;

    qint32 m_season_type;
    bool m_season_type_isSet;
    bool m_season_type_isValid;

    OAISeries m_series_info;
    bool m_series_info_isSet;
    bool m_series_info_isValid;

    qint32 m_stadium_id;
    bool m_stadium_id_isSet;
    bool m_stadium_id_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    qint32 m_time_remaining_minutes;
    bool m_time_remaining_minutes_isSet;
    bool m_time_remaining_minutes_isValid;

    qint32 m_time_remaining_seconds;
    bool m_time_remaining_seconds_isSet;
    bool m_time_remaining_seconds_isValid;

    qint32 m_under_payout;
    bool m_under_payout_isSet;
    bool m_under_payout_isValid;

    QString m_updated;
    bool m_updated_isSet;
    bool m_updated_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGame)

#endif // OAIGame_H
