# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Goaltender(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, confirmed: bool=None, first_name: str=None, jersey: int=None, last_name: str=None, player_id: int=None, team: str=None, team_id: int=None):
        """Goaltender - a model defined in OpenAPI

        :param confirmed: The confirmed of this Goaltender.
        :param first_name: The first_name of this Goaltender.
        :param jersey: The jersey of this Goaltender.
        :param last_name: The last_name of this Goaltender.
        :param player_id: The player_id of this Goaltender.
        :param team: The team of this Goaltender.
        :param team_id: The team_id of this Goaltender.
        """
        self.openapi_types = {
            'confirmed': bool,
            'first_name': str,
            'jersey': int,
            'last_name': str,
            'player_id': int,
            'team': str,
            'team_id': int
        }

        self.attribute_map = {
            'confirmed': 'Confirmed',
            'first_name': 'FirstName',
            'jersey': 'Jersey',
            'last_name': 'LastName',
            'player_id': 'PlayerID',
            'team': 'Team',
            'team_id': 'TeamID'
        }

        self._confirmed = confirmed
        self._first_name = first_name
        self._jersey = jersey
        self._last_name = last_name
        self._player_id = player_id
        self._team = team
        self._team_id = team_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Goaltender':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Goaltender of this Goaltender.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def confirmed(self):
        """Gets the confirmed of this Goaltender.


        :return: The confirmed of this Goaltender.
        :rtype: bool
        """
        return self._confirmed

    @confirmed.setter
    def confirmed(self, confirmed):
        """Sets the confirmed of this Goaltender.


        :param confirmed: The confirmed of this Goaltender.
        :type confirmed: bool
        """

        self._confirmed = confirmed

    @property
    def first_name(self):
        """Gets the first_name of this Goaltender.


        :return: The first_name of this Goaltender.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this Goaltender.


        :param first_name: The first_name of this Goaltender.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def jersey(self):
        """Gets the jersey of this Goaltender.


        :return: The jersey of this Goaltender.
        :rtype: int
        """
        return self._jersey

    @jersey.setter
    def jersey(self, jersey):
        """Sets the jersey of this Goaltender.


        :param jersey: The jersey of this Goaltender.
        :type jersey: int
        """

        self._jersey = jersey

    @property
    def last_name(self):
        """Gets the last_name of this Goaltender.


        :return: The last_name of this Goaltender.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this Goaltender.


        :param last_name: The last_name of this Goaltender.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def player_id(self):
        """Gets the player_id of this Goaltender.


        :return: The player_id of this Goaltender.
        :rtype: int
        """
        return self._player_id

    @player_id.setter
    def player_id(self, player_id):
        """Sets the player_id of this Goaltender.


        :param player_id: The player_id of this Goaltender.
        :type player_id: int
        """

        self._player_id = player_id

    @property
    def team(self):
        """Gets the team of this Goaltender.


        :return: The team of this Goaltender.
        :rtype: str
        """
        return self._team

    @team.setter
    def team(self, team):
        """Sets the team of this Goaltender.


        :param team: The team of this Goaltender.
        :type team: str
        """

        self._team = team

    @property
    def team_id(self):
        """Gets the team_id of this Goaltender.


        :return: The team_id of this Goaltender.
        :rtype: int
        """
        return self._team_id

    @team_id.setter
    def team_id(self, team_id):
        """Sets the team_id of this Goaltender.


        :param team_id: The team_id of this Goaltender.
        :type team_id: int
        """

        self._team_id = team_id
