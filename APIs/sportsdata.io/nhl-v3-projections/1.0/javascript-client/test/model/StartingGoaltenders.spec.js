/**
 * NHL v3 Projections
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NhlV3Projections);
  }
}(this, function(expect, NhlV3Projections) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NhlV3Projections.StartingGoaltenders();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('StartingGoaltenders', function() {
    it('should create an instance of StartingGoaltenders', function() {
      // uncomment below and update the code to test StartingGoaltenders
      //var instance = new NhlV3Projections.StartingGoaltenders();
      //expect(instance).to.be.a(NhlV3Projections.StartingGoaltenders);
    });

    it('should have the property awayGoaltender (base name: "AwayGoaltender")', function() {
      // uncomment below and update the code to test the property awayGoaltender
      //var instance = new NhlV3Projections.StartingGoaltenders();
      //expect(instance).to.be();
    });

    it('should have the property awayTeam (base name: "AwayTeam")', function() {
      // uncomment below and update the code to test the property awayTeam
      //var instance = new NhlV3Projections.StartingGoaltenders();
      //expect(instance).to.be();
    });

    it('should have the property awayTeamID (base name: "AwayTeamID")', function() {
      // uncomment below and update the code to test the property awayTeamID
      //var instance = new NhlV3Projections.StartingGoaltenders();
      //expect(instance).to.be();
    });

    it('should have the property dateTime (base name: "DateTime")', function() {
      // uncomment below and update the code to test the property dateTime
      //var instance = new NhlV3Projections.StartingGoaltenders();
      //expect(instance).to.be();
    });

    it('should have the property day (base name: "Day")', function() {
      // uncomment below and update the code to test the property day
      //var instance = new NhlV3Projections.StartingGoaltenders();
      //expect(instance).to.be();
    });

    it('should have the property gameID (base name: "GameID")', function() {
      // uncomment below and update the code to test the property gameID
      //var instance = new NhlV3Projections.StartingGoaltenders();
      //expect(instance).to.be();
    });

    it('should have the property homeGoaltender (base name: "HomeGoaltender")', function() {
      // uncomment below and update the code to test the property homeGoaltender
      //var instance = new NhlV3Projections.StartingGoaltenders();
      //expect(instance).to.be();
    });

    it('should have the property homeTeam (base name: "HomeTeam")', function() {
      // uncomment below and update the code to test the property homeTeam
      //var instance = new NhlV3Projections.StartingGoaltenders();
      //expect(instance).to.be();
    });

    it('should have the property homeTeamID (base name: "HomeTeamID")', function() {
      // uncomment below and update the code to test the property homeTeamID
      //var instance = new NhlV3Projections.StartingGoaltenders();
      //expect(instance).to.be();
    });

    it('should have the property season (base name: "Season")', function() {
      // uncomment below and update the code to test the property season
      //var instance = new NhlV3Projections.StartingGoaltenders();
      //expect(instance).to.be();
    });

    it('should have the property seasonType (base name: "SeasonType")', function() {
      // uncomment below and update the code to test the property seasonType
      //var instance = new NhlV3Projections.StartingGoaltenders();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "Status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new NhlV3Projections.StartingGoaltenders();
      //expect(instance).to.be();
    });

  });

}));
