/*
 * NHL v3 Projections
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DfsSlate;
import org.openapitools.client.model.Player;
import org.openapitools.client.model.PlayerGameProjection;
import org.openapitools.client.model.StartingGoaltenders;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * DFS Slates by Date
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfsSlatesByDateTest() throws ApiException {
        String format = null;
        String date = null;
        List<DfsSlate> response = api.dfsSlatesByDate(format, date);
        // TODO: test validations
    }

    /**
     * Injured Players
     *
     * This endpoint provides all currently injured NHL players, along with injury details.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void injuredPlayersTest() throws ApiException {
        String format = null;
        List<Player> response = api.injuredPlayers(format);
        // TODO: test validations
    }

    /**
     * Projected Player Game Stats by Date (w/ Injuries, DFS Salaries)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void projectedPlayerGameStatsByDateWInjuriesDfsSalariesTest() throws ApiException {
        String format = null;
        String date = null;
        List<PlayerGameProjection> response = api.projectedPlayerGameStatsByDateWInjuriesDfsSalaries(format, date);
        // TODO: test validations
    }

    /**
     * Projected Player Game Stats by Player (w/ Injuries, DFS Salaries)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void projectedPlayerGameStatsByPlayerWInjuriesDfsSalariesTest() throws ApiException {
        String format = null;
        String date = null;
        String playerid = null;
        PlayerGameProjection response = api.projectedPlayerGameStatsByPlayerWInjuriesDfsSalaries(format, date, playerid);
        // TODO: test validations
    }

    /**
     * Starting Goaltenders by Date
     *
     * This endpoint provides the projected &amp; confirmed starting goaltenders for NHL games on a given date.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void startingGoaltendersByDateTest() throws ApiException {
        String format = null;
        String date = null;
        List<StartingGoaltenders> response = api.startingGoaltendersByDate(format, date);
        // TODO: test validations
    }

}
