/*
 * NFL v3 Stats
 * NFL rosters, player stats, team stats, and fantasy stats API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for PlayerDefense
 */
public class PlayerDefenseTest {
    private final PlayerDefense model = new PlayerDefense();

    /**
     * Model tests for PlayerDefense
     */
    @Test
    public void testPlayerDefense() {
        // TODO: test PlayerDefense
    }

    /**
     * Test the property 'assistedTackles'
     */
    @Test
    public void assistedTacklesTest() {
        // TODO: test assistedTackles
    }

    /**
     * Test the property 'fantasyPoints'
     */
    @Test
    public void fantasyPointsTest() {
        // TODO: test fantasyPoints
    }

    /**
     * Test the property 'fantasyPosition'
     */
    @Test
    public void fantasyPositionTest() {
        // TODO: test fantasyPosition
    }

    /**
     * Test the property 'fumbleReturnTouchdowns'
     */
    @Test
    public void fumbleReturnTouchdownsTest() {
        // TODO: test fumbleReturnTouchdowns
    }

    /**
     * Test the property 'fumblesForced'
     */
    @Test
    public void fumblesForcedTest() {
        // TODO: test fumblesForced
    }

    /**
     * Test the property 'fumblesRecovered'
     */
    @Test
    public void fumblesRecoveredTest() {
        // TODO: test fumblesRecovered
    }

    /**
     * Test the property 'interceptionReturnTouchdowns'
     */
    @Test
    public void interceptionReturnTouchdownsTest() {
        // TODO: test interceptionReturnTouchdowns
    }

    /**
     * Test the property 'interceptionReturnYards'
     */
    @Test
    public void interceptionReturnYardsTest() {
        // TODO: test interceptionReturnYards
    }

    /**
     * Test the property 'interceptions'
     */
    @Test
    public void interceptionsTest() {
        // TODO: test interceptions
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'number'
     */
    @Test
    public void numberTest() {
        // TODO: test number
    }

    /**
     * Test the property 'passesDefended'
     */
    @Test
    public void passesDefendedTest() {
        // TODO: test passesDefended
    }

    /**
     * Test the property 'playerGameID'
     */
    @Test
    public void playerGameIDTest() {
        // TODO: test playerGameID
    }

    /**
     * Test the property 'playerID'
     */
    @Test
    public void playerIDTest() {
        // TODO: test playerID
    }

    /**
     * Test the property 'position'
     */
    @Test
    public void positionTest() {
        // TODO: test position
    }

    /**
     * Test the property 'positionCategory'
     */
    @Test
    public void positionCategoryTest() {
        // TODO: test positionCategory
    }

    /**
     * Test the property 'quarterbackHits'
     */
    @Test
    public void quarterbackHitsTest() {
        // TODO: test quarterbackHits
    }

    /**
     * Test the property 'sackYards'
     */
    @Test
    public void sackYardsTest() {
        // TODO: test sackYards
    }

    /**
     * Test the property 'sacks'
     */
    @Test
    public void sacksTest() {
        // TODO: test sacks
    }

    /**
     * Test the property 'safeties'
     */
    @Test
    public void safetiesTest() {
        // TODO: test safeties
    }

    /**
     * Test the property 'shortName'
     */
    @Test
    public void shortNameTest() {
        // TODO: test shortName
    }

    /**
     * Test the property 'soloTackles'
     */
    @Test
    public void soloTacklesTest() {
        // TODO: test soloTackles
    }

    /**
     * Test the property 'tackles'
     */
    @Test
    public void tacklesTest() {
        // TODO: test tackles
    }

    /**
     * Test the property 'tacklesForLoss'
     */
    @Test
    public void tacklesForLossTest() {
        // TODO: test tacklesForLoss
    }

    /**
     * Test the property 'team'
     */
    @Test
    public void teamTest() {
        // TODO: test team
    }

    /**
     * Test the property 'updated'
     */
    @Test
    public void updatedTest() {
        // TODO: test updated
    }

}
