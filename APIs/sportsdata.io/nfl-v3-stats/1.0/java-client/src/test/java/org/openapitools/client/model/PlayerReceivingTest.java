/*
 * NFL v3 Stats
 * NFL rosters, player stats, team stats, and fantasy stats API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for PlayerReceiving
 */
public class PlayerReceivingTest {
    private final PlayerReceiving model = new PlayerReceiving();

    /**
     * Model tests for PlayerReceiving
     */
    @Test
    public void testPlayerReceiving() {
        // TODO: test PlayerReceiving
    }

    /**
     * Test the property 'fantasyPoints'
     */
    @Test
    public void fantasyPointsTest() {
        // TODO: test fantasyPoints
    }

    /**
     * Test the property 'fantasyPosition'
     */
    @Test
    public void fantasyPositionTest() {
        // TODO: test fantasyPosition
    }

    /**
     * Test the property 'fumblesLost'
     */
    @Test
    public void fumblesLostTest() {
        // TODO: test fumblesLost
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'number'
     */
    @Test
    public void numberTest() {
        // TODO: test number
    }

    /**
     * Test the property 'playerGameID'
     */
    @Test
    public void playerGameIDTest() {
        // TODO: test playerGameID
    }

    /**
     * Test the property 'playerID'
     */
    @Test
    public void playerIDTest() {
        // TODO: test playerID
    }

    /**
     * Test the property 'position'
     */
    @Test
    public void positionTest() {
        // TODO: test position
    }

    /**
     * Test the property 'positionCategory'
     */
    @Test
    public void positionCategoryTest() {
        // TODO: test positionCategory
    }

    /**
     * Test the property 'receivingLong'
     */
    @Test
    public void receivingLongTest() {
        // TODO: test receivingLong
    }

    /**
     * Test the property 'receivingTargets'
     */
    @Test
    public void receivingTargetsTest() {
        // TODO: test receivingTargets
    }

    /**
     * Test the property 'receivingTouchdowns'
     */
    @Test
    public void receivingTouchdownsTest() {
        // TODO: test receivingTouchdowns
    }

    /**
     * Test the property 'receivingYards'
     */
    @Test
    public void receivingYardsTest() {
        // TODO: test receivingYards
    }

    /**
     * Test the property 'receivingYardsPerReception'
     */
    @Test
    public void receivingYardsPerReceptionTest() {
        // TODO: test receivingYardsPerReception
    }

    /**
     * Test the property 'receivingYardsPerTarget'
     */
    @Test
    public void receivingYardsPerTargetTest() {
        // TODO: test receivingYardsPerTarget
    }

    /**
     * Test the property 'receptionPercentage'
     */
    @Test
    public void receptionPercentageTest() {
        // TODO: test receptionPercentage
    }

    /**
     * Test the property 'receptions'
     */
    @Test
    public void receptionsTest() {
        // TODO: test receptions
    }

    /**
     * Test the property 'shortName'
     */
    @Test
    public void shortNameTest() {
        // TODO: test shortName
    }

    /**
     * Test the property 'team'
     */
    @Test
    public void teamTest() {
        // TODO: test team
    }

    /**
     * Test the property 'twoPointConversionReceptions'
     */
    @Test
    public void twoPointConversionReceptionsTest() {
        // TODO: test twoPointConversionReceptions
    }

    /**
     * Test the property 'updated'
     */
    @Test
    public void updatedTest() {
        // TODO: test updated
    }

}
