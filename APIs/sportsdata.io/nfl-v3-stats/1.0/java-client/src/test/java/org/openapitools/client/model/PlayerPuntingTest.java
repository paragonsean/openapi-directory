/*
 * NFL v3 Stats
 * NFL rosters, player stats, team stats, and fantasy stats API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for PlayerPunting
 */
public class PlayerPuntingTest {
    private final PlayerPunting model = new PlayerPunting();

    /**
     * Model tests for PlayerPunting
     */
    @Test
    public void testPlayerPunting() {
        // TODO: test PlayerPunting
    }

    /**
     * Test the property 'fantasyPoints'
     */
    @Test
    public void fantasyPointsTest() {
        // TODO: test fantasyPoints
    }

    /**
     * Test the property 'fantasyPosition'
     */
    @Test
    public void fantasyPositionTest() {
        // TODO: test fantasyPosition
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'number'
     */
    @Test
    public void numberTest() {
        // TODO: test number
    }

    /**
     * Test the property 'playerGameID'
     */
    @Test
    public void playerGameIDTest() {
        // TODO: test playerGameID
    }

    /**
     * Test the property 'playerID'
     */
    @Test
    public void playerIDTest() {
        // TODO: test playerID
    }

    /**
     * Test the property 'position'
     */
    @Test
    public void positionTest() {
        // TODO: test position
    }

    /**
     * Test the property 'positionCategory'
     */
    @Test
    public void positionCategoryTest() {
        // TODO: test positionCategory
    }

    /**
     * Test the property 'puntAverage'
     */
    @Test
    public void puntAverageTest() {
        // TODO: test puntAverage
    }

    /**
     * Test the property 'puntInside20'
     */
    @Test
    public void puntInside20Test() {
        // TODO: test puntInside20
    }

    /**
     * Test the property 'puntTouchbacks'
     */
    @Test
    public void puntTouchbacksTest() {
        // TODO: test puntTouchbacks
    }

    /**
     * Test the property 'puntYards'
     */
    @Test
    public void puntYardsTest() {
        // TODO: test puntYards
    }

    /**
     * Test the property 'punts'
     */
    @Test
    public void puntsTest() {
        // TODO: test punts
    }

    /**
     * Test the property 'shortName'
     */
    @Test
    public void shortNameTest() {
        // TODO: test shortName
    }

    /**
     * Test the property 'team'
     */
    @Test
    public void teamTest() {
        // TODO: test team
    }

    /**
     * Test the property 'updated'
     */
    @Test
    public void updatedTest() {
        // TODO: test updated
    }

}
