/*
 * NFL v3 Stats
 * NFL rosters, player stats, team stats, and fantasy stats API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ScoringDetail;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * FantasyDefenseSeason
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:05:11.789534-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class FantasyDefenseSeason {
  public static final String SERIALIZED_NAME_ASSISTED_TACKLES = "AssistedTackles";
  @SerializedName(SERIALIZED_NAME_ASSISTED_TACKLES)
  private BigDecimal assistedTackles;

  public static final String SERIALIZED_NAME_AUCTION_VALUE = "AuctionValue";
  @SerializedName(SERIALIZED_NAME_AUCTION_VALUE)
  private BigDecimal auctionValue;

  public static final String SERIALIZED_NAME_AUCTION_VALUE_P_P_R = "AuctionValuePPR";
  @SerializedName(SERIALIZED_NAME_AUCTION_VALUE_P_P_R)
  private BigDecimal auctionValuePPR;

  public static final String SERIALIZED_NAME_AVERAGE_DRAFT_POSITION = "AverageDraftPosition";
  @SerializedName(SERIALIZED_NAME_AVERAGE_DRAFT_POSITION)
  private BigDecimal averageDraftPosition;

  public static final String SERIALIZED_NAME_AVERAGE_DRAFT_POSITION2_Q_B = "AverageDraftPosition2QB";
  @SerializedName(SERIALIZED_NAME_AVERAGE_DRAFT_POSITION2_Q_B)
  private BigDecimal averageDraftPosition2QB;

  public static final String SERIALIZED_NAME_AVERAGE_DRAFT_POSITION_DYNASTY = "AverageDraftPositionDynasty";
  @SerializedName(SERIALIZED_NAME_AVERAGE_DRAFT_POSITION_DYNASTY)
  private BigDecimal averageDraftPositionDynasty;

  public static final String SERIALIZED_NAME_AVERAGE_DRAFT_POSITION_P_P_R = "AverageDraftPositionPPR";
  @SerializedName(SERIALIZED_NAME_AVERAGE_DRAFT_POSITION_P_P_R)
  private BigDecimal averageDraftPositionPPR;

  public static final String SERIALIZED_NAME_BLOCKED_KICK_RETURN_TOUCHDOWNS = "BlockedKickReturnTouchdowns";
  @SerializedName(SERIALIZED_NAME_BLOCKED_KICK_RETURN_TOUCHDOWNS)
  private BigDecimal blockedKickReturnTouchdowns;

  public static final String SERIALIZED_NAME_BLOCKED_KICK_RETURN_YARDS = "BlockedKickReturnYards";
  @SerializedName(SERIALIZED_NAME_BLOCKED_KICK_RETURN_YARDS)
  private BigDecimal blockedKickReturnYards;

  public static final String SERIALIZED_NAME_BLOCKED_KICKS = "BlockedKicks";
  @SerializedName(SERIALIZED_NAME_BLOCKED_KICKS)
  private BigDecimal blockedKicks;

  public static final String SERIALIZED_NAME_DEFENSIVE_TOUCHDOWNS = "DefensiveTouchdowns";
  @SerializedName(SERIALIZED_NAME_DEFENSIVE_TOUCHDOWNS)
  private BigDecimal defensiveTouchdowns;

  public static final String SERIALIZED_NAME_DRAFT_KINGS_FANTASY_POINTS_ALLOWED = "DraftKingsFantasyPointsAllowed";
  @SerializedName(SERIALIZED_NAME_DRAFT_KINGS_FANTASY_POINTS_ALLOWED)
  private BigDecimal draftKingsFantasyPointsAllowed;

  public static final String SERIALIZED_NAME_DRAFT_KINGS_KICKER_FANTASY_POINTS_ALLOWED = "DraftKingsKickerFantasyPointsAllowed";
  @SerializedName(SERIALIZED_NAME_DRAFT_KINGS_KICKER_FANTASY_POINTS_ALLOWED)
  private BigDecimal draftKingsKickerFantasyPointsAllowed;

  public static final String SERIALIZED_NAME_DRAFT_KINGS_QUARTERBACK_FANTASY_POINTS_ALLOWED = "DraftKingsQuarterbackFantasyPointsAllowed";
  @SerializedName(SERIALIZED_NAME_DRAFT_KINGS_QUARTERBACK_FANTASY_POINTS_ALLOWED)
  private BigDecimal draftKingsQuarterbackFantasyPointsAllowed;

  public static final String SERIALIZED_NAME_DRAFT_KINGS_RUNNINGBACK_FANTASY_POINTS_ALLOWED = "DraftKingsRunningbackFantasyPointsAllowed";
  @SerializedName(SERIALIZED_NAME_DRAFT_KINGS_RUNNINGBACK_FANTASY_POINTS_ALLOWED)
  private BigDecimal draftKingsRunningbackFantasyPointsAllowed;

  public static final String SERIALIZED_NAME_DRAFT_KINGS_TIGHT_END_FANTASY_POINTS_ALLOWED = "DraftKingsTightEndFantasyPointsAllowed";
  @SerializedName(SERIALIZED_NAME_DRAFT_KINGS_TIGHT_END_FANTASY_POINTS_ALLOWED)
  private BigDecimal draftKingsTightEndFantasyPointsAllowed;

  public static final String SERIALIZED_NAME_DRAFT_KINGS_WIDE_RECEIVER_FANTASY_POINTS_ALLOWED = "DraftKingsWideReceiverFantasyPointsAllowed";
  @SerializedName(SERIALIZED_NAME_DRAFT_KINGS_WIDE_RECEIVER_FANTASY_POINTS_ALLOWED)
  private BigDecimal draftKingsWideReceiverFantasyPointsAllowed;

  public static final String SERIALIZED_NAME_FAN_DUEL_FANTASY_POINTS_ALLOWED = "FanDuelFantasyPointsAllowed";
  @SerializedName(SERIALIZED_NAME_FAN_DUEL_FANTASY_POINTS_ALLOWED)
  private BigDecimal fanDuelFantasyPointsAllowed;

  public static final String SERIALIZED_NAME_FAN_DUEL_KICKER_FANTASY_POINTS_ALLOWED = "FanDuelKickerFantasyPointsAllowed";
  @SerializedName(SERIALIZED_NAME_FAN_DUEL_KICKER_FANTASY_POINTS_ALLOWED)
  private BigDecimal fanDuelKickerFantasyPointsAllowed;

  public static final String SERIALIZED_NAME_FAN_DUEL_QUARTERBACK_FANTASY_POINTS_ALLOWED = "FanDuelQuarterbackFantasyPointsAllowed";
  @SerializedName(SERIALIZED_NAME_FAN_DUEL_QUARTERBACK_FANTASY_POINTS_ALLOWED)
  private BigDecimal fanDuelQuarterbackFantasyPointsAllowed;

  public static final String SERIALIZED_NAME_FAN_DUEL_RUNNINGBACK_FANTASY_POINTS_ALLOWED = "FanDuelRunningbackFantasyPointsAllowed";
  @SerializedName(SERIALIZED_NAME_FAN_DUEL_RUNNINGBACK_FANTASY_POINTS_ALLOWED)
  private BigDecimal fanDuelRunningbackFantasyPointsAllowed;

  public static final String SERIALIZED_NAME_FAN_DUEL_TIGHT_END_FANTASY_POINTS_ALLOWED = "FanDuelTightEndFantasyPointsAllowed";
  @SerializedName(SERIALIZED_NAME_FAN_DUEL_TIGHT_END_FANTASY_POINTS_ALLOWED)
  private BigDecimal fanDuelTightEndFantasyPointsAllowed;

  public static final String SERIALIZED_NAME_FAN_DUEL_WIDE_RECEIVER_FANTASY_POINTS_ALLOWED = "FanDuelWideReceiverFantasyPointsAllowed";
  @SerializedName(SERIALIZED_NAME_FAN_DUEL_WIDE_RECEIVER_FANTASY_POINTS_ALLOWED)
  private BigDecimal fanDuelWideReceiverFantasyPointsAllowed;

  public static final String SERIALIZED_NAME_FANTASY_DRAFT_FANTASY_POINTS_ALLOWED = "FantasyDraftFantasyPointsAllowed";
  @SerializedName(SERIALIZED_NAME_FANTASY_DRAFT_FANTASY_POINTS_ALLOWED)
  private BigDecimal fantasyDraftFantasyPointsAllowed;

  public static final String SERIALIZED_NAME_FANTASY_DRAFT_KICKER_FANTASY_POINTS_ALLOWED = "FantasyDraftKickerFantasyPointsAllowed";
  @SerializedName(SERIALIZED_NAME_FANTASY_DRAFT_KICKER_FANTASY_POINTS_ALLOWED)
  private BigDecimal fantasyDraftKickerFantasyPointsAllowed;

  public static final String SERIALIZED_NAME_FANTASY_DRAFT_QUARTERBACK_FANTASY_POINTS_ALLOWED = "FantasyDraftQuarterbackFantasyPointsAllowed";
  @SerializedName(SERIALIZED_NAME_FANTASY_DRAFT_QUARTERBACK_FANTASY_POINTS_ALLOWED)
  private BigDecimal fantasyDraftQuarterbackFantasyPointsAllowed;

  public static final String SERIALIZED_NAME_FANTASY_DRAFT_RUNNINGBACK_FANTASY_POINTS_ALLOWED = "FantasyDraftRunningbackFantasyPointsAllowed";
  @SerializedName(SERIALIZED_NAME_FANTASY_DRAFT_RUNNINGBACK_FANTASY_POINTS_ALLOWED)
  private BigDecimal fantasyDraftRunningbackFantasyPointsAllowed;

  public static final String SERIALIZED_NAME_FANTASY_DRAFT_TIGHT_END_FANTASY_POINTS_ALLOWED = "FantasyDraftTightEndFantasyPointsAllowed";
  @SerializedName(SERIALIZED_NAME_FANTASY_DRAFT_TIGHT_END_FANTASY_POINTS_ALLOWED)
  private BigDecimal fantasyDraftTightEndFantasyPointsAllowed;

  public static final String SERIALIZED_NAME_FANTASY_DRAFT_WIDE_RECEIVER_FANTASY_POINTS_ALLOWED = "FantasyDraftWideReceiverFantasyPointsAllowed";
  @SerializedName(SERIALIZED_NAME_FANTASY_DRAFT_WIDE_RECEIVER_FANTASY_POINTS_ALLOWED)
  private BigDecimal fantasyDraftWideReceiverFantasyPointsAllowed;

  public static final String SERIALIZED_NAME_FANTASY_POINTS = "FantasyPoints";
  @SerializedName(SERIALIZED_NAME_FANTASY_POINTS)
  private BigDecimal fantasyPoints;

  public static final String SERIALIZED_NAME_FANTASY_POINTS_ALLOWED = "FantasyPointsAllowed";
  @SerializedName(SERIALIZED_NAME_FANTASY_POINTS_ALLOWED)
  private BigDecimal fantasyPointsAllowed;

  public static final String SERIALIZED_NAME_FANTASY_POINTS_DRAFT_KINGS = "FantasyPointsDraftKings";
  @SerializedName(SERIALIZED_NAME_FANTASY_POINTS_DRAFT_KINGS)
  private BigDecimal fantasyPointsDraftKings;

  public static final String SERIALIZED_NAME_FANTASY_POINTS_FAN_DUEL = "FantasyPointsFanDuel";
  @SerializedName(SERIALIZED_NAME_FANTASY_POINTS_FAN_DUEL)
  private BigDecimal fantasyPointsFanDuel;

  public static final String SERIALIZED_NAME_FANTASY_POINTS_FANTASY_DRAFT = "FantasyPointsFantasyDraft";
  @SerializedName(SERIALIZED_NAME_FANTASY_POINTS_FANTASY_DRAFT)
  private BigDecimal fantasyPointsFantasyDraft;

  public static final String SERIALIZED_NAME_FANTASY_POINTS_YAHOO = "FantasyPointsYahoo";
  @SerializedName(SERIALIZED_NAME_FANTASY_POINTS_YAHOO)
  private BigDecimal fantasyPointsYahoo;

  public static final String SERIALIZED_NAME_FIELD_GOAL_RETURN_TOUCHDOWNS = "FieldGoalReturnTouchdowns";
  @SerializedName(SERIALIZED_NAME_FIELD_GOAL_RETURN_TOUCHDOWNS)
  private BigDecimal fieldGoalReturnTouchdowns;

  public static final String SERIALIZED_NAME_FIELD_GOAL_RETURN_YARDS = "FieldGoalReturnYards";
  @SerializedName(SERIALIZED_NAME_FIELD_GOAL_RETURN_YARDS)
  private BigDecimal fieldGoalReturnYards;

  public static final String SERIALIZED_NAME_FOURTH_DOWN_ATTEMPTS = "FourthDownAttempts";
  @SerializedName(SERIALIZED_NAME_FOURTH_DOWN_ATTEMPTS)
  private BigDecimal fourthDownAttempts;

  public static final String SERIALIZED_NAME_FOURTH_DOWN_CONVERSIONS = "FourthDownConversions";
  @SerializedName(SERIALIZED_NAME_FOURTH_DOWN_CONVERSIONS)
  private BigDecimal fourthDownConversions;

  public static final String SERIALIZED_NAME_FUMBLE_RETURN_TOUCHDOWNS = "FumbleReturnTouchdowns";
  @SerializedName(SERIALIZED_NAME_FUMBLE_RETURN_TOUCHDOWNS)
  private BigDecimal fumbleReturnTouchdowns;

  public static final String SERIALIZED_NAME_FUMBLE_RETURN_YARDS = "FumbleReturnYards";
  @SerializedName(SERIALIZED_NAME_FUMBLE_RETURN_YARDS)
  private BigDecimal fumbleReturnYards;

  public static final String SERIALIZED_NAME_FUMBLES_FORCED = "FumblesForced";
  @SerializedName(SERIALIZED_NAME_FUMBLES_FORCED)
  private BigDecimal fumblesForced;

  public static final String SERIALIZED_NAME_FUMBLES_RECOVERED = "FumblesRecovered";
  @SerializedName(SERIALIZED_NAME_FUMBLES_RECOVERED)
  private BigDecimal fumblesRecovered;

  public static final String SERIALIZED_NAME_GAMES = "Games";
  @SerializedName(SERIALIZED_NAME_GAMES)
  private Integer games;

  public static final String SERIALIZED_NAME_GLOBAL_TEAM_I_D = "GlobalTeamID";
  @SerializedName(SERIALIZED_NAME_GLOBAL_TEAM_I_D)
  private Integer globalTeamID;

  public static final String SERIALIZED_NAME_HUMIDITY = "Humidity";
  @SerializedName(SERIALIZED_NAME_HUMIDITY)
  private Integer humidity;

  public static final String SERIALIZED_NAME_INTERCEPTION_RETURN_TOUCHDOWNS = "InterceptionReturnTouchdowns";
  @SerializedName(SERIALIZED_NAME_INTERCEPTION_RETURN_TOUCHDOWNS)
  private BigDecimal interceptionReturnTouchdowns;

  public static final String SERIALIZED_NAME_INTERCEPTION_RETURN_YARDS = "InterceptionReturnYards";
  @SerializedName(SERIALIZED_NAME_INTERCEPTION_RETURN_YARDS)
  private BigDecimal interceptionReturnYards;

  public static final String SERIALIZED_NAME_INTERCEPTIONS = "Interceptions";
  @SerializedName(SERIALIZED_NAME_INTERCEPTIONS)
  private BigDecimal interceptions;

  public static final String SERIALIZED_NAME_KICK_RETURN_LONG = "KickReturnLong";
  @SerializedName(SERIALIZED_NAME_KICK_RETURN_LONG)
  private BigDecimal kickReturnLong;

  public static final String SERIALIZED_NAME_KICK_RETURN_TOUCHDOWNS = "KickReturnTouchdowns";
  @SerializedName(SERIALIZED_NAME_KICK_RETURN_TOUCHDOWNS)
  private BigDecimal kickReturnTouchdowns;

  public static final String SERIALIZED_NAME_KICK_RETURN_YARDS = "KickReturnYards";
  @SerializedName(SERIALIZED_NAME_KICK_RETURN_YARDS)
  private BigDecimal kickReturnYards;

  public static final String SERIALIZED_NAME_KICK_RETURNS = "KickReturns";
  @SerializedName(SERIALIZED_NAME_KICK_RETURNS)
  private BigDecimal kickReturns;

  public static final String SERIALIZED_NAME_KICKER_FANTASY_POINTS_ALLOWED = "KickerFantasyPointsAllowed";
  @SerializedName(SERIALIZED_NAME_KICKER_FANTASY_POINTS_ALLOWED)
  private BigDecimal kickerFantasyPointsAllowed;

  public static final String SERIALIZED_NAME_OFFENSIVE_YARDS_ALLOWED = "OffensiveYardsAllowed";
  @SerializedName(SERIALIZED_NAME_OFFENSIVE_YARDS_ALLOWED)
  private BigDecimal offensiveYardsAllowed;

  public static final String SERIALIZED_NAME_PASSES_DEFENDED = "PassesDefended";
  @SerializedName(SERIALIZED_NAME_PASSES_DEFENDED)
  private BigDecimal passesDefended;

  public static final String SERIALIZED_NAME_PLAYER_I_D = "PlayerID";
  @SerializedName(SERIALIZED_NAME_PLAYER_I_D)
  private Integer playerID;

  public static final String SERIALIZED_NAME_POINTS_ALLOWED = "PointsAllowed";
  @SerializedName(SERIALIZED_NAME_POINTS_ALLOWED)
  private BigDecimal pointsAllowed;

  public static final String SERIALIZED_NAME_POINTS_ALLOWED_BY_DEFENSE_SPECIAL_TEAMS = "PointsAllowedByDefenseSpecialTeams";
  @SerializedName(SERIALIZED_NAME_POINTS_ALLOWED_BY_DEFENSE_SPECIAL_TEAMS)
  private BigDecimal pointsAllowedByDefenseSpecialTeams;

  public static final String SERIALIZED_NAME_PUNT_RETURN_LONG = "PuntReturnLong";
  @SerializedName(SERIALIZED_NAME_PUNT_RETURN_LONG)
  private BigDecimal puntReturnLong;

  public static final String SERIALIZED_NAME_PUNT_RETURN_TOUCHDOWNS = "PuntReturnTouchdowns";
  @SerializedName(SERIALIZED_NAME_PUNT_RETURN_TOUCHDOWNS)
  private BigDecimal puntReturnTouchdowns;

  public static final String SERIALIZED_NAME_PUNT_RETURN_YARDS = "PuntReturnYards";
  @SerializedName(SERIALIZED_NAME_PUNT_RETURN_YARDS)
  private BigDecimal puntReturnYards;

  public static final String SERIALIZED_NAME_PUNT_RETURNS = "PuntReturns";
  @SerializedName(SERIALIZED_NAME_PUNT_RETURNS)
  private BigDecimal puntReturns;

  public static final String SERIALIZED_NAME_QUARTERBACK_FANTASY_POINTS_ALLOWED = "QuarterbackFantasyPointsAllowed";
  @SerializedName(SERIALIZED_NAME_QUARTERBACK_FANTASY_POINTS_ALLOWED)
  private BigDecimal quarterbackFantasyPointsAllowed;

  public static final String SERIALIZED_NAME_QUARTERBACK_HITS = "QuarterbackHits";
  @SerializedName(SERIALIZED_NAME_QUARTERBACK_HITS)
  private BigDecimal quarterbackHits;

  public static final String SERIALIZED_NAME_RUNNINGBACK_FANTASY_POINTS_ALLOWED = "RunningbackFantasyPointsAllowed";
  @SerializedName(SERIALIZED_NAME_RUNNINGBACK_FANTASY_POINTS_ALLOWED)
  private BigDecimal runningbackFantasyPointsAllowed;

  public static final String SERIALIZED_NAME_SACK_YARDS = "SackYards";
  @SerializedName(SERIALIZED_NAME_SACK_YARDS)
  private BigDecimal sackYards;

  public static final String SERIALIZED_NAME_SACKS = "Sacks";
  @SerializedName(SERIALIZED_NAME_SACKS)
  private BigDecimal sacks;

  public static final String SERIALIZED_NAME_SAFETIES = "Safeties";
  @SerializedName(SERIALIZED_NAME_SAFETIES)
  private BigDecimal safeties;

  public static final String SERIALIZED_NAME_SCORING_DETAILS = "ScoringDetails";
  @SerializedName(SERIALIZED_NAME_SCORING_DETAILS)
  private List<ScoringDetail> scoringDetails = new ArrayList<>();

  public static final String SERIALIZED_NAME_SEASON = "Season";
  @SerializedName(SERIALIZED_NAME_SEASON)
  private Integer season;

  public static final String SERIALIZED_NAME_SEASON_TYPE = "SeasonType";
  @SerializedName(SERIALIZED_NAME_SEASON_TYPE)
  private Integer seasonType;

  public static final String SERIALIZED_NAME_SOLO_TACKLES = "SoloTackles";
  @SerializedName(SERIALIZED_NAME_SOLO_TACKLES)
  private BigDecimal soloTackles;

  public static final String SERIALIZED_NAME_SPECIAL_TEAMS_TOUCHDOWNS = "SpecialTeamsTouchdowns";
  @SerializedName(SERIALIZED_NAME_SPECIAL_TEAMS_TOUCHDOWNS)
  private BigDecimal specialTeamsTouchdowns;

  public static final String SERIALIZED_NAME_TACKLES_FOR_LOSS = "TacklesForLoss";
  @SerializedName(SERIALIZED_NAME_TACKLES_FOR_LOSS)
  private BigDecimal tacklesForLoss;

  public static final String SERIALIZED_NAME_TEAM = "Team";
  @SerializedName(SERIALIZED_NAME_TEAM)
  private String team;

  public static final String SERIALIZED_NAME_TEAM_I_D = "TeamID";
  @SerializedName(SERIALIZED_NAME_TEAM_I_D)
  private Integer teamID;

  public static final String SERIALIZED_NAME_TEMPERATURE = "Temperature";
  @SerializedName(SERIALIZED_NAME_TEMPERATURE)
  private Integer temperature;

  public static final String SERIALIZED_NAME_THIRD_DOWN_ATTEMPTS = "ThirdDownAttempts";
  @SerializedName(SERIALIZED_NAME_THIRD_DOWN_ATTEMPTS)
  private BigDecimal thirdDownAttempts;

  public static final String SERIALIZED_NAME_THIRD_DOWN_CONVERSIONS = "ThirdDownConversions";
  @SerializedName(SERIALIZED_NAME_THIRD_DOWN_CONVERSIONS)
  private BigDecimal thirdDownConversions;

  public static final String SERIALIZED_NAME_TIGHT_END_FANTASY_POINTS_ALLOWED = "TightEndFantasyPointsAllowed";
  @SerializedName(SERIALIZED_NAME_TIGHT_END_FANTASY_POINTS_ALLOWED)
  private BigDecimal tightEndFantasyPointsAllowed;

  public static final String SERIALIZED_NAME_TOUCHDOWNS_SCORED = "TouchdownsScored";
  @SerializedName(SERIALIZED_NAME_TOUCHDOWNS_SCORED)
  private BigDecimal touchdownsScored;

  public static final String SERIALIZED_NAME_TWO_POINT_CONVERSION_RETURNS = "TwoPointConversionReturns";
  @SerializedName(SERIALIZED_NAME_TWO_POINT_CONVERSION_RETURNS)
  private BigDecimal twoPointConversionReturns;

  public static final String SERIALIZED_NAME_WIDE_RECEIVER_FANTASY_POINTS_ALLOWED = "WideReceiverFantasyPointsAllowed";
  @SerializedName(SERIALIZED_NAME_WIDE_RECEIVER_FANTASY_POINTS_ALLOWED)
  private BigDecimal wideReceiverFantasyPointsAllowed;

  public static final String SERIALIZED_NAME_WIND_SPEED = "WindSpeed";
  @SerializedName(SERIALIZED_NAME_WIND_SPEED)
  private Integer windSpeed;

  public static final String SERIALIZED_NAME_YAHOO_FANTASY_POINTS_ALLOWED = "YahooFantasyPointsAllowed";
  @SerializedName(SERIALIZED_NAME_YAHOO_FANTASY_POINTS_ALLOWED)
  private BigDecimal yahooFantasyPointsAllowed;

  public static final String SERIALIZED_NAME_YAHOO_KICKER_FANTASY_POINTS_ALLOWED = "YahooKickerFantasyPointsAllowed";
  @SerializedName(SERIALIZED_NAME_YAHOO_KICKER_FANTASY_POINTS_ALLOWED)
  private BigDecimal yahooKickerFantasyPointsAllowed;

  public static final String SERIALIZED_NAME_YAHOO_QUARTERBACK_FANTASY_POINTS_ALLOWED = "YahooQuarterbackFantasyPointsAllowed";
  @SerializedName(SERIALIZED_NAME_YAHOO_QUARTERBACK_FANTASY_POINTS_ALLOWED)
  private BigDecimal yahooQuarterbackFantasyPointsAllowed;

  public static final String SERIALIZED_NAME_YAHOO_RUNNINGBACK_FANTASY_POINTS_ALLOWED = "YahooRunningbackFantasyPointsAllowed";
  @SerializedName(SERIALIZED_NAME_YAHOO_RUNNINGBACK_FANTASY_POINTS_ALLOWED)
  private BigDecimal yahooRunningbackFantasyPointsAllowed;

  public static final String SERIALIZED_NAME_YAHOO_TIGHT_END_FANTASY_POINTS_ALLOWED = "YahooTightEndFantasyPointsAllowed";
  @SerializedName(SERIALIZED_NAME_YAHOO_TIGHT_END_FANTASY_POINTS_ALLOWED)
  private BigDecimal yahooTightEndFantasyPointsAllowed;

  public static final String SERIALIZED_NAME_YAHOO_WIDE_RECEIVER_FANTASY_POINTS_ALLOWED = "YahooWideReceiverFantasyPointsAllowed";
  @SerializedName(SERIALIZED_NAME_YAHOO_WIDE_RECEIVER_FANTASY_POINTS_ALLOWED)
  private BigDecimal yahooWideReceiverFantasyPointsAllowed;

  public FantasyDefenseSeason() {
  }

  public FantasyDefenseSeason assistedTackles(BigDecimal assistedTackles) {
    this.assistedTackles = assistedTackles;
    return this;
  }

  /**
   * Get assistedTackles
   * @return assistedTackles
   */
  @javax.annotation.Nullable
  public BigDecimal getAssistedTackles() {
    return assistedTackles;
  }

  public void setAssistedTackles(BigDecimal assistedTackles) {
    this.assistedTackles = assistedTackles;
  }


  public FantasyDefenseSeason auctionValue(BigDecimal auctionValue) {
    this.auctionValue = auctionValue;
    return this;
  }

  /**
   * Get auctionValue
   * @return auctionValue
   */
  @javax.annotation.Nullable
  public BigDecimal getAuctionValue() {
    return auctionValue;
  }

  public void setAuctionValue(BigDecimal auctionValue) {
    this.auctionValue = auctionValue;
  }


  public FantasyDefenseSeason auctionValuePPR(BigDecimal auctionValuePPR) {
    this.auctionValuePPR = auctionValuePPR;
    return this;
  }

  /**
   * Get auctionValuePPR
   * @return auctionValuePPR
   */
  @javax.annotation.Nullable
  public BigDecimal getAuctionValuePPR() {
    return auctionValuePPR;
  }

  public void setAuctionValuePPR(BigDecimal auctionValuePPR) {
    this.auctionValuePPR = auctionValuePPR;
  }


  public FantasyDefenseSeason averageDraftPosition(BigDecimal averageDraftPosition) {
    this.averageDraftPosition = averageDraftPosition;
    return this;
  }

  /**
   * Get averageDraftPosition
   * @return averageDraftPosition
   */
  @javax.annotation.Nullable
  public BigDecimal getAverageDraftPosition() {
    return averageDraftPosition;
  }

  public void setAverageDraftPosition(BigDecimal averageDraftPosition) {
    this.averageDraftPosition = averageDraftPosition;
  }


  public FantasyDefenseSeason averageDraftPosition2QB(BigDecimal averageDraftPosition2QB) {
    this.averageDraftPosition2QB = averageDraftPosition2QB;
    return this;
  }

  /**
   * Get averageDraftPosition2QB
   * @return averageDraftPosition2QB
   */
  @javax.annotation.Nullable
  public BigDecimal getAverageDraftPosition2QB() {
    return averageDraftPosition2QB;
  }

  public void setAverageDraftPosition2QB(BigDecimal averageDraftPosition2QB) {
    this.averageDraftPosition2QB = averageDraftPosition2QB;
  }


  public FantasyDefenseSeason averageDraftPositionDynasty(BigDecimal averageDraftPositionDynasty) {
    this.averageDraftPositionDynasty = averageDraftPositionDynasty;
    return this;
  }

  /**
   * Get averageDraftPositionDynasty
   * @return averageDraftPositionDynasty
   */
  @javax.annotation.Nullable
  public BigDecimal getAverageDraftPositionDynasty() {
    return averageDraftPositionDynasty;
  }

  public void setAverageDraftPositionDynasty(BigDecimal averageDraftPositionDynasty) {
    this.averageDraftPositionDynasty = averageDraftPositionDynasty;
  }


  public FantasyDefenseSeason averageDraftPositionPPR(BigDecimal averageDraftPositionPPR) {
    this.averageDraftPositionPPR = averageDraftPositionPPR;
    return this;
  }

  /**
   * Get averageDraftPositionPPR
   * @return averageDraftPositionPPR
   */
  @javax.annotation.Nullable
  public BigDecimal getAverageDraftPositionPPR() {
    return averageDraftPositionPPR;
  }

  public void setAverageDraftPositionPPR(BigDecimal averageDraftPositionPPR) {
    this.averageDraftPositionPPR = averageDraftPositionPPR;
  }


  public FantasyDefenseSeason blockedKickReturnTouchdowns(BigDecimal blockedKickReturnTouchdowns) {
    this.blockedKickReturnTouchdowns = blockedKickReturnTouchdowns;
    return this;
  }

  /**
   * Get blockedKickReturnTouchdowns
   * @return blockedKickReturnTouchdowns
   */
  @javax.annotation.Nullable
  public BigDecimal getBlockedKickReturnTouchdowns() {
    return blockedKickReturnTouchdowns;
  }

  public void setBlockedKickReturnTouchdowns(BigDecimal blockedKickReturnTouchdowns) {
    this.blockedKickReturnTouchdowns = blockedKickReturnTouchdowns;
  }


  public FantasyDefenseSeason blockedKickReturnYards(BigDecimal blockedKickReturnYards) {
    this.blockedKickReturnYards = blockedKickReturnYards;
    return this;
  }

  /**
   * Get blockedKickReturnYards
   * @return blockedKickReturnYards
   */
  @javax.annotation.Nullable
  public BigDecimal getBlockedKickReturnYards() {
    return blockedKickReturnYards;
  }

  public void setBlockedKickReturnYards(BigDecimal blockedKickReturnYards) {
    this.blockedKickReturnYards = blockedKickReturnYards;
  }


  public FantasyDefenseSeason blockedKicks(BigDecimal blockedKicks) {
    this.blockedKicks = blockedKicks;
    return this;
  }

  /**
   * Get blockedKicks
   * @return blockedKicks
   */
  @javax.annotation.Nullable
  public BigDecimal getBlockedKicks() {
    return blockedKicks;
  }

  public void setBlockedKicks(BigDecimal blockedKicks) {
    this.blockedKicks = blockedKicks;
  }


  public FantasyDefenseSeason defensiveTouchdowns(BigDecimal defensiveTouchdowns) {
    this.defensiveTouchdowns = defensiveTouchdowns;
    return this;
  }

  /**
   * Get defensiveTouchdowns
   * @return defensiveTouchdowns
   */
  @javax.annotation.Nullable
  public BigDecimal getDefensiveTouchdowns() {
    return defensiveTouchdowns;
  }

  public void setDefensiveTouchdowns(BigDecimal defensiveTouchdowns) {
    this.defensiveTouchdowns = defensiveTouchdowns;
  }


  public FantasyDefenseSeason draftKingsFantasyPointsAllowed(BigDecimal draftKingsFantasyPointsAllowed) {
    this.draftKingsFantasyPointsAllowed = draftKingsFantasyPointsAllowed;
    return this;
  }

  /**
   * Get draftKingsFantasyPointsAllowed
   * @return draftKingsFantasyPointsAllowed
   */
  @javax.annotation.Nullable
  public BigDecimal getDraftKingsFantasyPointsAllowed() {
    return draftKingsFantasyPointsAllowed;
  }

  public void setDraftKingsFantasyPointsAllowed(BigDecimal draftKingsFantasyPointsAllowed) {
    this.draftKingsFantasyPointsAllowed = draftKingsFantasyPointsAllowed;
  }


  public FantasyDefenseSeason draftKingsKickerFantasyPointsAllowed(BigDecimal draftKingsKickerFantasyPointsAllowed) {
    this.draftKingsKickerFantasyPointsAllowed = draftKingsKickerFantasyPointsAllowed;
    return this;
  }

  /**
   * Get draftKingsKickerFantasyPointsAllowed
   * @return draftKingsKickerFantasyPointsAllowed
   */
  @javax.annotation.Nullable
  public BigDecimal getDraftKingsKickerFantasyPointsAllowed() {
    return draftKingsKickerFantasyPointsAllowed;
  }

  public void setDraftKingsKickerFantasyPointsAllowed(BigDecimal draftKingsKickerFantasyPointsAllowed) {
    this.draftKingsKickerFantasyPointsAllowed = draftKingsKickerFantasyPointsAllowed;
  }


  public FantasyDefenseSeason draftKingsQuarterbackFantasyPointsAllowed(BigDecimal draftKingsQuarterbackFantasyPointsAllowed) {
    this.draftKingsQuarterbackFantasyPointsAllowed = draftKingsQuarterbackFantasyPointsAllowed;
    return this;
  }

  /**
   * Get draftKingsQuarterbackFantasyPointsAllowed
   * @return draftKingsQuarterbackFantasyPointsAllowed
   */
  @javax.annotation.Nullable
  public BigDecimal getDraftKingsQuarterbackFantasyPointsAllowed() {
    return draftKingsQuarterbackFantasyPointsAllowed;
  }

  public void setDraftKingsQuarterbackFantasyPointsAllowed(BigDecimal draftKingsQuarterbackFantasyPointsAllowed) {
    this.draftKingsQuarterbackFantasyPointsAllowed = draftKingsQuarterbackFantasyPointsAllowed;
  }


  public FantasyDefenseSeason draftKingsRunningbackFantasyPointsAllowed(BigDecimal draftKingsRunningbackFantasyPointsAllowed) {
    this.draftKingsRunningbackFantasyPointsAllowed = draftKingsRunningbackFantasyPointsAllowed;
    return this;
  }

  /**
   * Get draftKingsRunningbackFantasyPointsAllowed
   * @return draftKingsRunningbackFantasyPointsAllowed
   */
  @javax.annotation.Nullable
  public BigDecimal getDraftKingsRunningbackFantasyPointsAllowed() {
    return draftKingsRunningbackFantasyPointsAllowed;
  }

  public void setDraftKingsRunningbackFantasyPointsAllowed(BigDecimal draftKingsRunningbackFantasyPointsAllowed) {
    this.draftKingsRunningbackFantasyPointsAllowed = draftKingsRunningbackFantasyPointsAllowed;
  }


  public FantasyDefenseSeason draftKingsTightEndFantasyPointsAllowed(BigDecimal draftKingsTightEndFantasyPointsAllowed) {
    this.draftKingsTightEndFantasyPointsAllowed = draftKingsTightEndFantasyPointsAllowed;
    return this;
  }

  /**
   * Get draftKingsTightEndFantasyPointsAllowed
   * @return draftKingsTightEndFantasyPointsAllowed
   */
  @javax.annotation.Nullable
  public BigDecimal getDraftKingsTightEndFantasyPointsAllowed() {
    return draftKingsTightEndFantasyPointsAllowed;
  }

  public void setDraftKingsTightEndFantasyPointsAllowed(BigDecimal draftKingsTightEndFantasyPointsAllowed) {
    this.draftKingsTightEndFantasyPointsAllowed = draftKingsTightEndFantasyPointsAllowed;
  }


  public FantasyDefenseSeason draftKingsWideReceiverFantasyPointsAllowed(BigDecimal draftKingsWideReceiverFantasyPointsAllowed) {
    this.draftKingsWideReceiverFantasyPointsAllowed = draftKingsWideReceiverFantasyPointsAllowed;
    return this;
  }

  /**
   * Get draftKingsWideReceiverFantasyPointsAllowed
   * @return draftKingsWideReceiverFantasyPointsAllowed
   */
  @javax.annotation.Nullable
  public BigDecimal getDraftKingsWideReceiverFantasyPointsAllowed() {
    return draftKingsWideReceiverFantasyPointsAllowed;
  }

  public void setDraftKingsWideReceiverFantasyPointsAllowed(BigDecimal draftKingsWideReceiverFantasyPointsAllowed) {
    this.draftKingsWideReceiverFantasyPointsAllowed = draftKingsWideReceiverFantasyPointsAllowed;
  }


  public FantasyDefenseSeason fanDuelFantasyPointsAllowed(BigDecimal fanDuelFantasyPointsAllowed) {
    this.fanDuelFantasyPointsAllowed = fanDuelFantasyPointsAllowed;
    return this;
  }

  /**
   * Get fanDuelFantasyPointsAllowed
   * @return fanDuelFantasyPointsAllowed
   */
  @javax.annotation.Nullable
  public BigDecimal getFanDuelFantasyPointsAllowed() {
    return fanDuelFantasyPointsAllowed;
  }

  public void setFanDuelFantasyPointsAllowed(BigDecimal fanDuelFantasyPointsAllowed) {
    this.fanDuelFantasyPointsAllowed = fanDuelFantasyPointsAllowed;
  }


  public FantasyDefenseSeason fanDuelKickerFantasyPointsAllowed(BigDecimal fanDuelKickerFantasyPointsAllowed) {
    this.fanDuelKickerFantasyPointsAllowed = fanDuelKickerFantasyPointsAllowed;
    return this;
  }

  /**
   * Get fanDuelKickerFantasyPointsAllowed
   * @return fanDuelKickerFantasyPointsAllowed
   */
  @javax.annotation.Nullable
  public BigDecimal getFanDuelKickerFantasyPointsAllowed() {
    return fanDuelKickerFantasyPointsAllowed;
  }

  public void setFanDuelKickerFantasyPointsAllowed(BigDecimal fanDuelKickerFantasyPointsAllowed) {
    this.fanDuelKickerFantasyPointsAllowed = fanDuelKickerFantasyPointsAllowed;
  }


  public FantasyDefenseSeason fanDuelQuarterbackFantasyPointsAllowed(BigDecimal fanDuelQuarterbackFantasyPointsAllowed) {
    this.fanDuelQuarterbackFantasyPointsAllowed = fanDuelQuarterbackFantasyPointsAllowed;
    return this;
  }

  /**
   * Get fanDuelQuarterbackFantasyPointsAllowed
   * @return fanDuelQuarterbackFantasyPointsAllowed
   */
  @javax.annotation.Nullable
  public BigDecimal getFanDuelQuarterbackFantasyPointsAllowed() {
    return fanDuelQuarterbackFantasyPointsAllowed;
  }

  public void setFanDuelQuarterbackFantasyPointsAllowed(BigDecimal fanDuelQuarterbackFantasyPointsAllowed) {
    this.fanDuelQuarterbackFantasyPointsAllowed = fanDuelQuarterbackFantasyPointsAllowed;
  }


  public FantasyDefenseSeason fanDuelRunningbackFantasyPointsAllowed(BigDecimal fanDuelRunningbackFantasyPointsAllowed) {
    this.fanDuelRunningbackFantasyPointsAllowed = fanDuelRunningbackFantasyPointsAllowed;
    return this;
  }

  /**
   * Get fanDuelRunningbackFantasyPointsAllowed
   * @return fanDuelRunningbackFantasyPointsAllowed
   */
  @javax.annotation.Nullable
  public BigDecimal getFanDuelRunningbackFantasyPointsAllowed() {
    return fanDuelRunningbackFantasyPointsAllowed;
  }

  public void setFanDuelRunningbackFantasyPointsAllowed(BigDecimal fanDuelRunningbackFantasyPointsAllowed) {
    this.fanDuelRunningbackFantasyPointsAllowed = fanDuelRunningbackFantasyPointsAllowed;
  }


  public FantasyDefenseSeason fanDuelTightEndFantasyPointsAllowed(BigDecimal fanDuelTightEndFantasyPointsAllowed) {
    this.fanDuelTightEndFantasyPointsAllowed = fanDuelTightEndFantasyPointsAllowed;
    return this;
  }

  /**
   * Get fanDuelTightEndFantasyPointsAllowed
   * @return fanDuelTightEndFantasyPointsAllowed
   */
  @javax.annotation.Nullable
  public BigDecimal getFanDuelTightEndFantasyPointsAllowed() {
    return fanDuelTightEndFantasyPointsAllowed;
  }

  public void setFanDuelTightEndFantasyPointsAllowed(BigDecimal fanDuelTightEndFantasyPointsAllowed) {
    this.fanDuelTightEndFantasyPointsAllowed = fanDuelTightEndFantasyPointsAllowed;
  }


  public FantasyDefenseSeason fanDuelWideReceiverFantasyPointsAllowed(BigDecimal fanDuelWideReceiverFantasyPointsAllowed) {
    this.fanDuelWideReceiverFantasyPointsAllowed = fanDuelWideReceiverFantasyPointsAllowed;
    return this;
  }

  /**
   * Get fanDuelWideReceiverFantasyPointsAllowed
   * @return fanDuelWideReceiverFantasyPointsAllowed
   */
  @javax.annotation.Nullable
  public BigDecimal getFanDuelWideReceiverFantasyPointsAllowed() {
    return fanDuelWideReceiverFantasyPointsAllowed;
  }

  public void setFanDuelWideReceiverFantasyPointsAllowed(BigDecimal fanDuelWideReceiverFantasyPointsAllowed) {
    this.fanDuelWideReceiverFantasyPointsAllowed = fanDuelWideReceiverFantasyPointsAllowed;
  }


  public FantasyDefenseSeason fantasyDraftFantasyPointsAllowed(BigDecimal fantasyDraftFantasyPointsAllowed) {
    this.fantasyDraftFantasyPointsAllowed = fantasyDraftFantasyPointsAllowed;
    return this;
  }

  /**
   * Get fantasyDraftFantasyPointsAllowed
   * @return fantasyDraftFantasyPointsAllowed
   */
  @javax.annotation.Nullable
  public BigDecimal getFantasyDraftFantasyPointsAllowed() {
    return fantasyDraftFantasyPointsAllowed;
  }

  public void setFantasyDraftFantasyPointsAllowed(BigDecimal fantasyDraftFantasyPointsAllowed) {
    this.fantasyDraftFantasyPointsAllowed = fantasyDraftFantasyPointsAllowed;
  }


  public FantasyDefenseSeason fantasyDraftKickerFantasyPointsAllowed(BigDecimal fantasyDraftKickerFantasyPointsAllowed) {
    this.fantasyDraftKickerFantasyPointsAllowed = fantasyDraftKickerFantasyPointsAllowed;
    return this;
  }

  /**
   * Get fantasyDraftKickerFantasyPointsAllowed
   * @return fantasyDraftKickerFantasyPointsAllowed
   */
  @javax.annotation.Nullable
  public BigDecimal getFantasyDraftKickerFantasyPointsAllowed() {
    return fantasyDraftKickerFantasyPointsAllowed;
  }

  public void setFantasyDraftKickerFantasyPointsAllowed(BigDecimal fantasyDraftKickerFantasyPointsAllowed) {
    this.fantasyDraftKickerFantasyPointsAllowed = fantasyDraftKickerFantasyPointsAllowed;
  }


  public FantasyDefenseSeason fantasyDraftQuarterbackFantasyPointsAllowed(BigDecimal fantasyDraftQuarterbackFantasyPointsAllowed) {
    this.fantasyDraftQuarterbackFantasyPointsAllowed = fantasyDraftQuarterbackFantasyPointsAllowed;
    return this;
  }

  /**
   * Get fantasyDraftQuarterbackFantasyPointsAllowed
   * @return fantasyDraftQuarterbackFantasyPointsAllowed
   */
  @javax.annotation.Nullable
  public BigDecimal getFantasyDraftQuarterbackFantasyPointsAllowed() {
    return fantasyDraftQuarterbackFantasyPointsAllowed;
  }

  public void setFantasyDraftQuarterbackFantasyPointsAllowed(BigDecimal fantasyDraftQuarterbackFantasyPointsAllowed) {
    this.fantasyDraftQuarterbackFantasyPointsAllowed = fantasyDraftQuarterbackFantasyPointsAllowed;
  }


  public FantasyDefenseSeason fantasyDraftRunningbackFantasyPointsAllowed(BigDecimal fantasyDraftRunningbackFantasyPointsAllowed) {
    this.fantasyDraftRunningbackFantasyPointsAllowed = fantasyDraftRunningbackFantasyPointsAllowed;
    return this;
  }

  /**
   * Get fantasyDraftRunningbackFantasyPointsAllowed
   * @return fantasyDraftRunningbackFantasyPointsAllowed
   */
  @javax.annotation.Nullable
  public BigDecimal getFantasyDraftRunningbackFantasyPointsAllowed() {
    return fantasyDraftRunningbackFantasyPointsAllowed;
  }

  public void setFantasyDraftRunningbackFantasyPointsAllowed(BigDecimal fantasyDraftRunningbackFantasyPointsAllowed) {
    this.fantasyDraftRunningbackFantasyPointsAllowed = fantasyDraftRunningbackFantasyPointsAllowed;
  }


  public FantasyDefenseSeason fantasyDraftTightEndFantasyPointsAllowed(BigDecimal fantasyDraftTightEndFantasyPointsAllowed) {
    this.fantasyDraftTightEndFantasyPointsAllowed = fantasyDraftTightEndFantasyPointsAllowed;
    return this;
  }

  /**
   * Get fantasyDraftTightEndFantasyPointsAllowed
   * @return fantasyDraftTightEndFantasyPointsAllowed
   */
  @javax.annotation.Nullable
  public BigDecimal getFantasyDraftTightEndFantasyPointsAllowed() {
    return fantasyDraftTightEndFantasyPointsAllowed;
  }

  public void setFantasyDraftTightEndFantasyPointsAllowed(BigDecimal fantasyDraftTightEndFantasyPointsAllowed) {
    this.fantasyDraftTightEndFantasyPointsAllowed = fantasyDraftTightEndFantasyPointsAllowed;
  }


  public FantasyDefenseSeason fantasyDraftWideReceiverFantasyPointsAllowed(BigDecimal fantasyDraftWideReceiverFantasyPointsAllowed) {
    this.fantasyDraftWideReceiverFantasyPointsAllowed = fantasyDraftWideReceiverFantasyPointsAllowed;
    return this;
  }

  /**
   * Get fantasyDraftWideReceiverFantasyPointsAllowed
   * @return fantasyDraftWideReceiverFantasyPointsAllowed
   */
  @javax.annotation.Nullable
  public BigDecimal getFantasyDraftWideReceiverFantasyPointsAllowed() {
    return fantasyDraftWideReceiverFantasyPointsAllowed;
  }

  public void setFantasyDraftWideReceiverFantasyPointsAllowed(BigDecimal fantasyDraftWideReceiverFantasyPointsAllowed) {
    this.fantasyDraftWideReceiverFantasyPointsAllowed = fantasyDraftWideReceiverFantasyPointsAllowed;
  }


  public FantasyDefenseSeason fantasyPoints(BigDecimal fantasyPoints) {
    this.fantasyPoints = fantasyPoints;
    return this;
  }

  /**
   * Get fantasyPoints
   * @return fantasyPoints
   */
  @javax.annotation.Nullable
  public BigDecimal getFantasyPoints() {
    return fantasyPoints;
  }

  public void setFantasyPoints(BigDecimal fantasyPoints) {
    this.fantasyPoints = fantasyPoints;
  }


  public FantasyDefenseSeason fantasyPointsAllowed(BigDecimal fantasyPointsAllowed) {
    this.fantasyPointsAllowed = fantasyPointsAllowed;
    return this;
  }

  /**
   * Get fantasyPointsAllowed
   * @return fantasyPointsAllowed
   */
  @javax.annotation.Nullable
  public BigDecimal getFantasyPointsAllowed() {
    return fantasyPointsAllowed;
  }

  public void setFantasyPointsAllowed(BigDecimal fantasyPointsAllowed) {
    this.fantasyPointsAllowed = fantasyPointsAllowed;
  }


  public FantasyDefenseSeason fantasyPointsDraftKings(BigDecimal fantasyPointsDraftKings) {
    this.fantasyPointsDraftKings = fantasyPointsDraftKings;
    return this;
  }

  /**
   * Get fantasyPointsDraftKings
   * @return fantasyPointsDraftKings
   */
  @javax.annotation.Nullable
  public BigDecimal getFantasyPointsDraftKings() {
    return fantasyPointsDraftKings;
  }

  public void setFantasyPointsDraftKings(BigDecimal fantasyPointsDraftKings) {
    this.fantasyPointsDraftKings = fantasyPointsDraftKings;
  }


  public FantasyDefenseSeason fantasyPointsFanDuel(BigDecimal fantasyPointsFanDuel) {
    this.fantasyPointsFanDuel = fantasyPointsFanDuel;
    return this;
  }

  /**
   * Get fantasyPointsFanDuel
   * @return fantasyPointsFanDuel
   */
  @javax.annotation.Nullable
  public BigDecimal getFantasyPointsFanDuel() {
    return fantasyPointsFanDuel;
  }

  public void setFantasyPointsFanDuel(BigDecimal fantasyPointsFanDuel) {
    this.fantasyPointsFanDuel = fantasyPointsFanDuel;
  }


  public FantasyDefenseSeason fantasyPointsFantasyDraft(BigDecimal fantasyPointsFantasyDraft) {
    this.fantasyPointsFantasyDraft = fantasyPointsFantasyDraft;
    return this;
  }

  /**
   * Get fantasyPointsFantasyDraft
   * @return fantasyPointsFantasyDraft
   */
  @javax.annotation.Nullable
  public BigDecimal getFantasyPointsFantasyDraft() {
    return fantasyPointsFantasyDraft;
  }

  public void setFantasyPointsFantasyDraft(BigDecimal fantasyPointsFantasyDraft) {
    this.fantasyPointsFantasyDraft = fantasyPointsFantasyDraft;
  }


  public FantasyDefenseSeason fantasyPointsYahoo(BigDecimal fantasyPointsYahoo) {
    this.fantasyPointsYahoo = fantasyPointsYahoo;
    return this;
  }

  /**
   * Get fantasyPointsYahoo
   * @return fantasyPointsYahoo
   */
  @javax.annotation.Nullable
  public BigDecimal getFantasyPointsYahoo() {
    return fantasyPointsYahoo;
  }

  public void setFantasyPointsYahoo(BigDecimal fantasyPointsYahoo) {
    this.fantasyPointsYahoo = fantasyPointsYahoo;
  }


  public FantasyDefenseSeason fieldGoalReturnTouchdowns(BigDecimal fieldGoalReturnTouchdowns) {
    this.fieldGoalReturnTouchdowns = fieldGoalReturnTouchdowns;
    return this;
  }

  /**
   * Get fieldGoalReturnTouchdowns
   * @return fieldGoalReturnTouchdowns
   */
  @javax.annotation.Nullable
  public BigDecimal getFieldGoalReturnTouchdowns() {
    return fieldGoalReturnTouchdowns;
  }

  public void setFieldGoalReturnTouchdowns(BigDecimal fieldGoalReturnTouchdowns) {
    this.fieldGoalReturnTouchdowns = fieldGoalReturnTouchdowns;
  }


  public FantasyDefenseSeason fieldGoalReturnYards(BigDecimal fieldGoalReturnYards) {
    this.fieldGoalReturnYards = fieldGoalReturnYards;
    return this;
  }

  /**
   * Get fieldGoalReturnYards
   * @return fieldGoalReturnYards
   */
  @javax.annotation.Nullable
  public BigDecimal getFieldGoalReturnYards() {
    return fieldGoalReturnYards;
  }

  public void setFieldGoalReturnYards(BigDecimal fieldGoalReturnYards) {
    this.fieldGoalReturnYards = fieldGoalReturnYards;
  }


  public FantasyDefenseSeason fourthDownAttempts(BigDecimal fourthDownAttempts) {
    this.fourthDownAttempts = fourthDownAttempts;
    return this;
  }

  /**
   * Get fourthDownAttempts
   * @return fourthDownAttempts
   */
  @javax.annotation.Nullable
  public BigDecimal getFourthDownAttempts() {
    return fourthDownAttempts;
  }

  public void setFourthDownAttempts(BigDecimal fourthDownAttempts) {
    this.fourthDownAttempts = fourthDownAttempts;
  }


  public FantasyDefenseSeason fourthDownConversions(BigDecimal fourthDownConversions) {
    this.fourthDownConversions = fourthDownConversions;
    return this;
  }

  /**
   * Get fourthDownConversions
   * @return fourthDownConversions
   */
  @javax.annotation.Nullable
  public BigDecimal getFourthDownConversions() {
    return fourthDownConversions;
  }

  public void setFourthDownConversions(BigDecimal fourthDownConversions) {
    this.fourthDownConversions = fourthDownConversions;
  }


  public FantasyDefenseSeason fumbleReturnTouchdowns(BigDecimal fumbleReturnTouchdowns) {
    this.fumbleReturnTouchdowns = fumbleReturnTouchdowns;
    return this;
  }

  /**
   * Get fumbleReturnTouchdowns
   * @return fumbleReturnTouchdowns
   */
  @javax.annotation.Nullable
  public BigDecimal getFumbleReturnTouchdowns() {
    return fumbleReturnTouchdowns;
  }

  public void setFumbleReturnTouchdowns(BigDecimal fumbleReturnTouchdowns) {
    this.fumbleReturnTouchdowns = fumbleReturnTouchdowns;
  }


  public FantasyDefenseSeason fumbleReturnYards(BigDecimal fumbleReturnYards) {
    this.fumbleReturnYards = fumbleReturnYards;
    return this;
  }

  /**
   * Get fumbleReturnYards
   * @return fumbleReturnYards
   */
  @javax.annotation.Nullable
  public BigDecimal getFumbleReturnYards() {
    return fumbleReturnYards;
  }

  public void setFumbleReturnYards(BigDecimal fumbleReturnYards) {
    this.fumbleReturnYards = fumbleReturnYards;
  }


  public FantasyDefenseSeason fumblesForced(BigDecimal fumblesForced) {
    this.fumblesForced = fumblesForced;
    return this;
  }

  /**
   * Get fumblesForced
   * @return fumblesForced
   */
  @javax.annotation.Nullable
  public BigDecimal getFumblesForced() {
    return fumblesForced;
  }

  public void setFumblesForced(BigDecimal fumblesForced) {
    this.fumblesForced = fumblesForced;
  }


  public FantasyDefenseSeason fumblesRecovered(BigDecimal fumblesRecovered) {
    this.fumblesRecovered = fumblesRecovered;
    return this;
  }

  /**
   * Get fumblesRecovered
   * @return fumblesRecovered
   */
  @javax.annotation.Nullable
  public BigDecimal getFumblesRecovered() {
    return fumblesRecovered;
  }

  public void setFumblesRecovered(BigDecimal fumblesRecovered) {
    this.fumblesRecovered = fumblesRecovered;
  }


  public FantasyDefenseSeason games(Integer games) {
    this.games = games;
    return this;
  }

  /**
   * Get games
   * @return games
   */
  @javax.annotation.Nullable
  public Integer getGames() {
    return games;
  }

  public void setGames(Integer games) {
    this.games = games;
  }


  public FantasyDefenseSeason globalTeamID(Integer globalTeamID) {
    this.globalTeamID = globalTeamID;
    return this;
  }

  /**
   * Get globalTeamID
   * @return globalTeamID
   */
  @javax.annotation.Nullable
  public Integer getGlobalTeamID() {
    return globalTeamID;
  }

  public void setGlobalTeamID(Integer globalTeamID) {
    this.globalTeamID = globalTeamID;
  }


  public FantasyDefenseSeason humidity(Integer humidity) {
    this.humidity = humidity;
    return this;
  }

  /**
   * Get humidity
   * @return humidity
   */
  @javax.annotation.Nullable
  public Integer getHumidity() {
    return humidity;
  }

  public void setHumidity(Integer humidity) {
    this.humidity = humidity;
  }


  public FantasyDefenseSeason interceptionReturnTouchdowns(BigDecimal interceptionReturnTouchdowns) {
    this.interceptionReturnTouchdowns = interceptionReturnTouchdowns;
    return this;
  }

  /**
   * Get interceptionReturnTouchdowns
   * @return interceptionReturnTouchdowns
   */
  @javax.annotation.Nullable
  public BigDecimal getInterceptionReturnTouchdowns() {
    return interceptionReturnTouchdowns;
  }

  public void setInterceptionReturnTouchdowns(BigDecimal interceptionReturnTouchdowns) {
    this.interceptionReturnTouchdowns = interceptionReturnTouchdowns;
  }


  public FantasyDefenseSeason interceptionReturnYards(BigDecimal interceptionReturnYards) {
    this.interceptionReturnYards = interceptionReturnYards;
    return this;
  }

  /**
   * Get interceptionReturnYards
   * @return interceptionReturnYards
   */
  @javax.annotation.Nullable
  public BigDecimal getInterceptionReturnYards() {
    return interceptionReturnYards;
  }

  public void setInterceptionReturnYards(BigDecimal interceptionReturnYards) {
    this.interceptionReturnYards = interceptionReturnYards;
  }


  public FantasyDefenseSeason interceptions(BigDecimal interceptions) {
    this.interceptions = interceptions;
    return this;
  }

  /**
   * Get interceptions
   * @return interceptions
   */
  @javax.annotation.Nullable
  public BigDecimal getInterceptions() {
    return interceptions;
  }

  public void setInterceptions(BigDecimal interceptions) {
    this.interceptions = interceptions;
  }


  public FantasyDefenseSeason kickReturnLong(BigDecimal kickReturnLong) {
    this.kickReturnLong = kickReturnLong;
    return this;
  }

  /**
   * Get kickReturnLong
   * @return kickReturnLong
   */
  @javax.annotation.Nullable
  public BigDecimal getKickReturnLong() {
    return kickReturnLong;
  }

  public void setKickReturnLong(BigDecimal kickReturnLong) {
    this.kickReturnLong = kickReturnLong;
  }


  public FantasyDefenseSeason kickReturnTouchdowns(BigDecimal kickReturnTouchdowns) {
    this.kickReturnTouchdowns = kickReturnTouchdowns;
    return this;
  }

  /**
   * Get kickReturnTouchdowns
   * @return kickReturnTouchdowns
   */
  @javax.annotation.Nullable
  public BigDecimal getKickReturnTouchdowns() {
    return kickReturnTouchdowns;
  }

  public void setKickReturnTouchdowns(BigDecimal kickReturnTouchdowns) {
    this.kickReturnTouchdowns = kickReturnTouchdowns;
  }


  public FantasyDefenseSeason kickReturnYards(BigDecimal kickReturnYards) {
    this.kickReturnYards = kickReturnYards;
    return this;
  }

  /**
   * Get kickReturnYards
   * @return kickReturnYards
   */
  @javax.annotation.Nullable
  public BigDecimal getKickReturnYards() {
    return kickReturnYards;
  }

  public void setKickReturnYards(BigDecimal kickReturnYards) {
    this.kickReturnYards = kickReturnYards;
  }


  public FantasyDefenseSeason kickReturns(BigDecimal kickReturns) {
    this.kickReturns = kickReturns;
    return this;
  }

  /**
   * Get kickReturns
   * @return kickReturns
   */
  @javax.annotation.Nullable
  public BigDecimal getKickReturns() {
    return kickReturns;
  }

  public void setKickReturns(BigDecimal kickReturns) {
    this.kickReturns = kickReturns;
  }


  public FantasyDefenseSeason kickerFantasyPointsAllowed(BigDecimal kickerFantasyPointsAllowed) {
    this.kickerFantasyPointsAllowed = kickerFantasyPointsAllowed;
    return this;
  }

  /**
   * Get kickerFantasyPointsAllowed
   * @return kickerFantasyPointsAllowed
   */
  @javax.annotation.Nullable
  public BigDecimal getKickerFantasyPointsAllowed() {
    return kickerFantasyPointsAllowed;
  }

  public void setKickerFantasyPointsAllowed(BigDecimal kickerFantasyPointsAllowed) {
    this.kickerFantasyPointsAllowed = kickerFantasyPointsAllowed;
  }


  public FantasyDefenseSeason offensiveYardsAllowed(BigDecimal offensiveYardsAllowed) {
    this.offensiveYardsAllowed = offensiveYardsAllowed;
    return this;
  }

  /**
   * Get offensiveYardsAllowed
   * @return offensiveYardsAllowed
   */
  @javax.annotation.Nullable
  public BigDecimal getOffensiveYardsAllowed() {
    return offensiveYardsAllowed;
  }

  public void setOffensiveYardsAllowed(BigDecimal offensiveYardsAllowed) {
    this.offensiveYardsAllowed = offensiveYardsAllowed;
  }


  public FantasyDefenseSeason passesDefended(BigDecimal passesDefended) {
    this.passesDefended = passesDefended;
    return this;
  }

  /**
   * Get passesDefended
   * @return passesDefended
   */
  @javax.annotation.Nullable
  public BigDecimal getPassesDefended() {
    return passesDefended;
  }

  public void setPassesDefended(BigDecimal passesDefended) {
    this.passesDefended = passesDefended;
  }


  public FantasyDefenseSeason playerID(Integer playerID) {
    this.playerID = playerID;
    return this;
  }

  /**
   * Get playerID
   * @return playerID
   */
  @javax.annotation.Nullable
  public Integer getPlayerID() {
    return playerID;
  }

  public void setPlayerID(Integer playerID) {
    this.playerID = playerID;
  }


  public FantasyDefenseSeason pointsAllowed(BigDecimal pointsAllowed) {
    this.pointsAllowed = pointsAllowed;
    return this;
  }

  /**
   * Get pointsAllowed
   * @return pointsAllowed
   */
  @javax.annotation.Nullable
  public BigDecimal getPointsAllowed() {
    return pointsAllowed;
  }

  public void setPointsAllowed(BigDecimal pointsAllowed) {
    this.pointsAllowed = pointsAllowed;
  }


  public FantasyDefenseSeason pointsAllowedByDefenseSpecialTeams(BigDecimal pointsAllowedByDefenseSpecialTeams) {
    this.pointsAllowedByDefenseSpecialTeams = pointsAllowedByDefenseSpecialTeams;
    return this;
  }

  /**
   * Get pointsAllowedByDefenseSpecialTeams
   * @return pointsAllowedByDefenseSpecialTeams
   */
  @javax.annotation.Nullable
  public BigDecimal getPointsAllowedByDefenseSpecialTeams() {
    return pointsAllowedByDefenseSpecialTeams;
  }

  public void setPointsAllowedByDefenseSpecialTeams(BigDecimal pointsAllowedByDefenseSpecialTeams) {
    this.pointsAllowedByDefenseSpecialTeams = pointsAllowedByDefenseSpecialTeams;
  }


  public FantasyDefenseSeason puntReturnLong(BigDecimal puntReturnLong) {
    this.puntReturnLong = puntReturnLong;
    return this;
  }

  /**
   * Get puntReturnLong
   * @return puntReturnLong
   */
  @javax.annotation.Nullable
  public BigDecimal getPuntReturnLong() {
    return puntReturnLong;
  }

  public void setPuntReturnLong(BigDecimal puntReturnLong) {
    this.puntReturnLong = puntReturnLong;
  }


  public FantasyDefenseSeason puntReturnTouchdowns(BigDecimal puntReturnTouchdowns) {
    this.puntReturnTouchdowns = puntReturnTouchdowns;
    return this;
  }

  /**
   * Get puntReturnTouchdowns
   * @return puntReturnTouchdowns
   */
  @javax.annotation.Nullable
  public BigDecimal getPuntReturnTouchdowns() {
    return puntReturnTouchdowns;
  }

  public void setPuntReturnTouchdowns(BigDecimal puntReturnTouchdowns) {
    this.puntReturnTouchdowns = puntReturnTouchdowns;
  }


  public FantasyDefenseSeason puntReturnYards(BigDecimal puntReturnYards) {
    this.puntReturnYards = puntReturnYards;
    return this;
  }

  /**
   * Get puntReturnYards
   * @return puntReturnYards
   */
  @javax.annotation.Nullable
  public BigDecimal getPuntReturnYards() {
    return puntReturnYards;
  }

  public void setPuntReturnYards(BigDecimal puntReturnYards) {
    this.puntReturnYards = puntReturnYards;
  }


  public FantasyDefenseSeason puntReturns(BigDecimal puntReturns) {
    this.puntReturns = puntReturns;
    return this;
  }

  /**
   * Get puntReturns
   * @return puntReturns
   */
  @javax.annotation.Nullable
  public BigDecimal getPuntReturns() {
    return puntReturns;
  }

  public void setPuntReturns(BigDecimal puntReturns) {
    this.puntReturns = puntReturns;
  }


  public FantasyDefenseSeason quarterbackFantasyPointsAllowed(BigDecimal quarterbackFantasyPointsAllowed) {
    this.quarterbackFantasyPointsAllowed = quarterbackFantasyPointsAllowed;
    return this;
  }

  /**
   * Get quarterbackFantasyPointsAllowed
   * @return quarterbackFantasyPointsAllowed
   */
  @javax.annotation.Nullable
  public BigDecimal getQuarterbackFantasyPointsAllowed() {
    return quarterbackFantasyPointsAllowed;
  }

  public void setQuarterbackFantasyPointsAllowed(BigDecimal quarterbackFantasyPointsAllowed) {
    this.quarterbackFantasyPointsAllowed = quarterbackFantasyPointsAllowed;
  }


  public FantasyDefenseSeason quarterbackHits(BigDecimal quarterbackHits) {
    this.quarterbackHits = quarterbackHits;
    return this;
  }

  /**
   * Get quarterbackHits
   * @return quarterbackHits
   */
  @javax.annotation.Nullable
  public BigDecimal getQuarterbackHits() {
    return quarterbackHits;
  }

  public void setQuarterbackHits(BigDecimal quarterbackHits) {
    this.quarterbackHits = quarterbackHits;
  }


  public FantasyDefenseSeason runningbackFantasyPointsAllowed(BigDecimal runningbackFantasyPointsAllowed) {
    this.runningbackFantasyPointsAllowed = runningbackFantasyPointsAllowed;
    return this;
  }

  /**
   * Get runningbackFantasyPointsAllowed
   * @return runningbackFantasyPointsAllowed
   */
  @javax.annotation.Nullable
  public BigDecimal getRunningbackFantasyPointsAllowed() {
    return runningbackFantasyPointsAllowed;
  }

  public void setRunningbackFantasyPointsAllowed(BigDecimal runningbackFantasyPointsAllowed) {
    this.runningbackFantasyPointsAllowed = runningbackFantasyPointsAllowed;
  }


  public FantasyDefenseSeason sackYards(BigDecimal sackYards) {
    this.sackYards = sackYards;
    return this;
  }

  /**
   * Get sackYards
   * @return sackYards
   */
  @javax.annotation.Nullable
  public BigDecimal getSackYards() {
    return sackYards;
  }

  public void setSackYards(BigDecimal sackYards) {
    this.sackYards = sackYards;
  }


  public FantasyDefenseSeason sacks(BigDecimal sacks) {
    this.sacks = sacks;
    return this;
  }

  /**
   * Get sacks
   * @return sacks
   */
  @javax.annotation.Nullable
  public BigDecimal getSacks() {
    return sacks;
  }

  public void setSacks(BigDecimal sacks) {
    this.sacks = sacks;
  }


  public FantasyDefenseSeason safeties(BigDecimal safeties) {
    this.safeties = safeties;
    return this;
  }

  /**
   * Get safeties
   * @return safeties
   */
  @javax.annotation.Nullable
  public BigDecimal getSafeties() {
    return safeties;
  }

  public void setSafeties(BigDecimal safeties) {
    this.safeties = safeties;
  }


  public FantasyDefenseSeason scoringDetails(List<ScoringDetail> scoringDetails) {
    this.scoringDetails = scoringDetails;
    return this;
  }

  public FantasyDefenseSeason addScoringDetailsItem(ScoringDetail scoringDetailsItem) {
    if (this.scoringDetails == null) {
      this.scoringDetails = new ArrayList<>();
    }
    this.scoringDetails.add(scoringDetailsItem);
    return this;
  }

  /**
   * Get scoringDetails
   * @return scoringDetails
   */
  @javax.annotation.Nullable
  public List<ScoringDetail> getScoringDetails() {
    return scoringDetails;
  }

  public void setScoringDetails(List<ScoringDetail> scoringDetails) {
    this.scoringDetails = scoringDetails;
  }


  public FantasyDefenseSeason season(Integer season) {
    this.season = season;
    return this;
  }

  /**
   * Get season
   * @return season
   */
  @javax.annotation.Nullable
  public Integer getSeason() {
    return season;
  }

  public void setSeason(Integer season) {
    this.season = season;
  }


  public FantasyDefenseSeason seasonType(Integer seasonType) {
    this.seasonType = seasonType;
    return this;
  }

  /**
   * Get seasonType
   * @return seasonType
   */
  @javax.annotation.Nullable
  public Integer getSeasonType() {
    return seasonType;
  }

  public void setSeasonType(Integer seasonType) {
    this.seasonType = seasonType;
  }


  public FantasyDefenseSeason soloTackles(BigDecimal soloTackles) {
    this.soloTackles = soloTackles;
    return this;
  }

  /**
   * Get soloTackles
   * @return soloTackles
   */
  @javax.annotation.Nullable
  public BigDecimal getSoloTackles() {
    return soloTackles;
  }

  public void setSoloTackles(BigDecimal soloTackles) {
    this.soloTackles = soloTackles;
  }


  public FantasyDefenseSeason specialTeamsTouchdowns(BigDecimal specialTeamsTouchdowns) {
    this.specialTeamsTouchdowns = specialTeamsTouchdowns;
    return this;
  }

  /**
   * Get specialTeamsTouchdowns
   * @return specialTeamsTouchdowns
   */
  @javax.annotation.Nullable
  public BigDecimal getSpecialTeamsTouchdowns() {
    return specialTeamsTouchdowns;
  }

  public void setSpecialTeamsTouchdowns(BigDecimal specialTeamsTouchdowns) {
    this.specialTeamsTouchdowns = specialTeamsTouchdowns;
  }


  public FantasyDefenseSeason tacklesForLoss(BigDecimal tacklesForLoss) {
    this.tacklesForLoss = tacklesForLoss;
    return this;
  }

  /**
   * Get tacklesForLoss
   * @return tacklesForLoss
   */
  @javax.annotation.Nullable
  public BigDecimal getTacklesForLoss() {
    return tacklesForLoss;
  }

  public void setTacklesForLoss(BigDecimal tacklesForLoss) {
    this.tacklesForLoss = tacklesForLoss;
  }


  public FantasyDefenseSeason team(String team) {
    this.team = team;
    return this;
  }

  /**
   * Get team
   * @return team
   */
  @javax.annotation.Nullable
  public String getTeam() {
    return team;
  }

  public void setTeam(String team) {
    this.team = team;
  }


  public FantasyDefenseSeason teamID(Integer teamID) {
    this.teamID = teamID;
    return this;
  }

  /**
   * Get teamID
   * @return teamID
   */
  @javax.annotation.Nullable
  public Integer getTeamID() {
    return teamID;
  }

  public void setTeamID(Integer teamID) {
    this.teamID = teamID;
  }


  public FantasyDefenseSeason temperature(Integer temperature) {
    this.temperature = temperature;
    return this;
  }

  /**
   * Get temperature
   * @return temperature
   */
  @javax.annotation.Nullable
  public Integer getTemperature() {
    return temperature;
  }

  public void setTemperature(Integer temperature) {
    this.temperature = temperature;
  }


  public FantasyDefenseSeason thirdDownAttempts(BigDecimal thirdDownAttempts) {
    this.thirdDownAttempts = thirdDownAttempts;
    return this;
  }

  /**
   * Get thirdDownAttempts
   * @return thirdDownAttempts
   */
  @javax.annotation.Nullable
  public BigDecimal getThirdDownAttempts() {
    return thirdDownAttempts;
  }

  public void setThirdDownAttempts(BigDecimal thirdDownAttempts) {
    this.thirdDownAttempts = thirdDownAttempts;
  }


  public FantasyDefenseSeason thirdDownConversions(BigDecimal thirdDownConversions) {
    this.thirdDownConversions = thirdDownConversions;
    return this;
  }

  /**
   * Get thirdDownConversions
   * @return thirdDownConversions
   */
  @javax.annotation.Nullable
  public BigDecimal getThirdDownConversions() {
    return thirdDownConversions;
  }

  public void setThirdDownConversions(BigDecimal thirdDownConversions) {
    this.thirdDownConversions = thirdDownConversions;
  }


  public FantasyDefenseSeason tightEndFantasyPointsAllowed(BigDecimal tightEndFantasyPointsAllowed) {
    this.tightEndFantasyPointsAllowed = tightEndFantasyPointsAllowed;
    return this;
  }

  /**
   * Get tightEndFantasyPointsAllowed
   * @return tightEndFantasyPointsAllowed
   */
  @javax.annotation.Nullable
  public BigDecimal getTightEndFantasyPointsAllowed() {
    return tightEndFantasyPointsAllowed;
  }

  public void setTightEndFantasyPointsAllowed(BigDecimal tightEndFantasyPointsAllowed) {
    this.tightEndFantasyPointsAllowed = tightEndFantasyPointsAllowed;
  }


  public FantasyDefenseSeason touchdownsScored(BigDecimal touchdownsScored) {
    this.touchdownsScored = touchdownsScored;
    return this;
  }

  /**
   * Get touchdownsScored
   * @return touchdownsScored
   */
  @javax.annotation.Nullable
  public BigDecimal getTouchdownsScored() {
    return touchdownsScored;
  }

  public void setTouchdownsScored(BigDecimal touchdownsScored) {
    this.touchdownsScored = touchdownsScored;
  }


  public FantasyDefenseSeason twoPointConversionReturns(BigDecimal twoPointConversionReturns) {
    this.twoPointConversionReturns = twoPointConversionReturns;
    return this;
  }

  /**
   * Get twoPointConversionReturns
   * @return twoPointConversionReturns
   */
  @javax.annotation.Nullable
  public BigDecimal getTwoPointConversionReturns() {
    return twoPointConversionReturns;
  }

  public void setTwoPointConversionReturns(BigDecimal twoPointConversionReturns) {
    this.twoPointConversionReturns = twoPointConversionReturns;
  }


  public FantasyDefenseSeason wideReceiverFantasyPointsAllowed(BigDecimal wideReceiverFantasyPointsAllowed) {
    this.wideReceiverFantasyPointsAllowed = wideReceiverFantasyPointsAllowed;
    return this;
  }

  /**
   * Get wideReceiverFantasyPointsAllowed
   * @return wideReceiverFantasyPointsAllowed
   */
  @javax.annotation.Nullable
  public BigDecimal getWideReceiverFantasyPointsAllowed() {
    return wideReceiverFantasyPointsAllowed;
  }

  public void setWideReceiverFantasyPointsAllowed(BigDecimal wideReceiverFantasyPointsAllowed) {
    this.wideReceiverFantasyPointsAllowed = wideReceiverFantasyPointsAllowed;
  }


  public FantasyDefenseSeason windSpeed(Integer windSpeed) {
    this.windSpeed = windSpeed;
    return this;
  }

  /**
   * Get windSpeed
   * @return windSpeed
   */
  @javax.annotation.Nullable
  public Integer getWindSpeed() {
    return windSpeed;
  }

  public void setWindSpeed(Integer windSpeed) {
    this.windSpeed = windSpeed;
  }


  public FantasyDefenseSeason yahooFantasyPointsAllowed(BigDecimal yahooFantasyPointsAllowed) {
    this.yahooFantasyPointsAllowed = yahooFantasyPointsAllowed;
    return this;
  }

  /**
   * Get yahooFantasyPointsAllowed
   * @return yahooFantasyPointsAllowed
   */
  @javax.annotation.Nullable
  public BigDecimal getYahooFantasyPointsAllowed() {
    return yahooFantasyPointsAllowed;
  }

  public void setYahooFantasyPointsAllowed(BigDecimal yahooFantasyPointsAllowed) {
    this.yahooFantasyPointsAllowed = yahooFantasyPointsAllowed;
  }


  public FantasyDefenseSeason yahooKickerFantasyPointsAllowed(BigDecimal yahooKickerFantasyPointsAllowed) {
    this.yahooKickerFantasyPointsAllowed = yahooKickerFantasyPointsAllowed;
    return this;
  }

  /**
   * Get yahooKickerFantasyPointsAllowed
   * @return yahooKickerFantasyPointsAllowed
   */
  @javax.annotation.Nullable
  public BigDecimal getYahooKickerFantasyPointsAllowed() {
    return yahooKickerFantasyPointsAllowed;
  }

  public void setYahooKickerFantasyPointsAllowed(BigDecimal yahooKickerFantasyPointsAllowed) {
    this.yahooKickerFantasyPointsAllowed = yahooKickerFantasyPointsAllowed;
  }


  public FantasyDefenseSeason yahooQuarterbackFantasyPointsAllowed(BigDecimal yahooQuarterbackFantasyPointsAllowed) {
    this.yahooQuarterbackFantasyPointsAllowed = yahooQuarterbackFantasyPointsAllowed;
    return this;
  }

  /**
   * Get yahooQuarterbackFantasyPointsAllowed
   * @return yahooQuarterbackFantasyPointsAllowed
   */
  @javax.annotation.Nullable
  public BigDecimal getYahooQuarterbackFantasyPointsAllowed() {
    return yahooQuarterbackFantasyPointsAllowed;
  }

  public void setYahooQuarterbackFantasyPointsAllowed(BigDecimal yahooQuarterbackFantasyPointsAllowed) {
    this.yahooQuarterbackFantasyPointsAllowed = yahooQuarterbackFantasyPointsAllowed;
  }


  public FantasyDefenseSeason yahooRunningbackFantasyPointsAllowed(BigDecimal yahooRunningbackFantasyPointsAllowed) {
    this.yahooRunningbackFantasyPointsAllowed = yahooRunningbackFantasyPointsAllowed;
    return this;
  }

  /**
   * Get yahooRunningbackFantasyPointsAllowed
   * @return yahooRunningbackFantasyPointsAllowed
   */
  @javax.annotation.Nullable
  public BigDecimal getYahooRunningbackFantasyPointsAllowed() {
    return yahooRunningbackFantasyPointsAllowed;
  }

  public void setYahooRunningbackFantasyPointsAllowed(BigDecimal yahooRunningbackFantasyPointsAllowed) {
    this.yahooRunningbackFantasyPointsAllowed = yahooRunningbackFantasyPointsAllowed;
  }


  public FantasyDefenseSeason yahooTightEndFantasyPointsAllowed(BigDecimal yahooTightEndFantasyPointsAllowed) {
    this.yahooTightEndFantasyPointsAllowed = yahooTightEndFantasyPointsAllowed;
    return this;
  }

  /**
   * Get yahooTightEndFantasyPointsAllowed
   * @return yahooTightEndFantasyPointsAllowed
   */
  @javax.annotation.Nullable
  public BigDecimal getYahooTightEndFantasyPointsAllowed() {
    return yahooTightEndFantasyPointsAllowed;
  }

  public void setYahooTightEndFantasyPointsAllowed(BigDecimal yahooTightEndFantasyPointsAllowed) {
    this.yahooTightEndFantasyPointsAllowed = yahooTightEndFantasyPointsAllowed;
  }


  public FantasyDefenseSeason yahooWideReceiverFantasyPointsAllowed(BigDecimal yahooWideReceiverFantasyPointsAllowed) {
    this.yahooWideReceiverFantasyPointsAllowed = yahooWideReceiverFantasyPointsAllowed;
    return this;
  }

  /**
   * Get yahooWideReceiverFantasyPointsAllowed
   * @return yahooWideReceiverFantasyPointsAllowed
   */
  @javax.annotation.Nullable
  public BigDecimal getYahooWideReceiverFantasyPointsAllowed() {
    return yahooWideReceiverFantasyPointsAllowed;
  }

  public void setYahooWideReceiverFantasyPointsAllowed(BigDecimal yahooWideReceiverFantasyPointsAllowed) {
    this.yahooWideReceiverFantasyPointsAllowed = yahooWideReceiverFantasyPointsAllowed;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FantasyDefenseSeason fantasyDefenseSeason = (FantasyDefenseSeason) o;
    return Objects.equals(this.assistedTackles, fantasyDefenseSeason.assistedTackles) &&
        Objects.equals(this.auctionValue, fantasyDefenseSeason.auctionValue) &&
        Objects.equals(this.auctionValuePPR, fantasyDefenseSeason.auctionValuePPR) &&
        Objects.equals(this.averageDraftPosition, fantasyDefenseSeason.averageDraftPosition) &&
        Objects.equals(this.averageDraftPosition2QB, fantasyDefenseSeason.averageDraftPosition2QB) &&
        Objects.equals(this.averageDraftPositionDynasty, fantasyDefenseSeason.averageDraftPositionDynasty) &&
        Objects.equals(this.averageDraftPositionPPR, fantasyDefenseSeason.averageDraftPositionPPR) &&
        Objects.equals(this.blockedKickReturnTouchdowns, fantasyDefenseSeason.blockedKickReturnTouchdowns) &&
        Objects.equals(this.blockedKickReturnYards, fantasyDefenseSeason.blockedKickReturnYards) &&
        Objects.equals(this.blockedKicks, fantasyDefenseSeason.blockedKicks) &&
        Objects.equals(this.defensiveTouchdowns, fantasyDefenseSeason.defensiveTouchdowns) &&
        Objects.equals(this.draftKingsFantasyPointsAllowed, fantasyDefenseSeason.draftKingsFantasyPointsAllowed) &&
        Objects.equals(this.draftKingsKickerFantasyPointsAllowed, fantasyDefenseSeason.draftKingsKickerFantasyPointsAllowed) &&
        Objects.equals(this.draftKingsQuarterbackFantasyPointsAllowed, fantasyDefenseSeason.draftKingsQuarterbackFantasyPointsAllowed) &&
        Objects.equals(this.draftKingsRunningbackFantasyPointsAllowed, fantasyDefenseSeason.draftKingsRunningbackFantasyPointsAllowed) &&
        Objects.equals(this.draftKingsTightEndFantasyPointsAllowed, fantasyDefenseSeason.draftKingsTightEndFantasyPointsAllowed) &&
        Objects.equals(this.draftKingsWideReceiverFantasyPointsAllowed, fantasyDefenseSeason.draftKingsWideReceiverFantasyPointsAllowed) &&
        Objects.equals(this.fanDuelFantasyPointsAllowed, fantasyDefenseSeason.fanDuelFantasyPointsAllowed) &&
        Objects.equals(this.fanDuelKickerFantasyPointsAllowed, fantasyDefenseSeason.fanDuelKickerFantasyPointsAllowed) &&
        Objects.equals(this.fanDuelQuarterbackFantasyPointsAllowed, fantasyDefenseSeason.fanDuelQuarterbackFantasyPointsAllowed) &&
        Objects.equals(this.fanDuelRunningbackFantasyPointsAllowed, fantasyDefenseSeason.fanDuelRunningbackFantasyPointsAllowed) &&
        Objects.equals(this.fanDuelTightEndFantasyPointsAllowed, fantasyDefenseSeason.fanDuelTightEndFantasyPointsAllowed) &&
        Objects.equals(this.fanDuelWideReceiverFantasyPointsAllowed, fantasyDefenseSeason.fanDuelWideReceiverFantasyPointsAllowed) &&
        Objects.equals(this.fantasyDraftFantasyPointsAllowed, fantasyDefenseSeason.fantasyDraftFantasyPointsAllowed) &&
        Objects.equals(this.fantasyDraftKickerFantasyPointsAllowed, fantasyDefenseSeason.fantasyDraftKickerFantasyPointsAllowed) &&
        Objects.equals(this.fantasyDraftQuarterbackFantasyPointsAllowed, fantasyDefenseSeason.fantasyDraftQuarterbackFantasyPointsAllowed) &&
        Objects.equals(this.fantasyDraftRunningbackFantasyPointsAllowed, fantasyDefenseSeason.fantasyDraftRunningbackFantasyPointsAllowed) &&
        Objects.equals(this.fantasyDraftTightEndFantasyPointsAllowed, fantasyDefenseSeason.fantasyDraftTightEndFantasyPointsAllowed) &&
        Objects.equals(this.fantasyDraftWideReceiverFantasyPointsAllowed, fantasyDefenseSeason.fantasyDraftWideReceiverFantasyPointsAllowed) &&
        Objects.equals(this.fantasyPoints, fantasyDefenseSeason.fantasyPoints) &&
        Objects.equals(this.fantasyPointsAllowed, fantasyDefenseSeason.fantasyPointsAllowed) &&
        Objects.equals(this.fantasyPointsDraftKings, fantasyDefenseSeason.fantasyPointsDraftKings) &&
        Objects.equals(this.fantasyPointsFanDuel, fantasyDefenseSeason.fantasyPointsFanDuel) &&
        Objects.equals(this.fantasyPointsFantasyDraft, fantasyDefenseSeason.fantasyPointsFantasyDraft) &&
        Objects.equals(this.fantasyPointsYahoo, fantasyDefenseSeason.fantasyPointsYahoo) &&
        Objects.equals(this.fieldGoalReturnTouchdowns, fantasyDefenseSeason.fieldGoalReturnTouchdowns) &&
        Objects.equals(this.fieldGoalReturnYards, fantasyDefenseSeason.fieldGoalReturnYards) &&
        Objects.equals(this.fourthDownAttempts, fantasyDefenseSeason.fourthDownAttempts) &&
        Objects.equals(this.fourthDownConversions, fantasyDefenseSeason.fourthDownConversions) &&
        Objects.equals(this.fumbleReturnTouchdowns, fantasyDefenseSeason.fumbleReturnTouchdowns) &&
        Objects.equals(this.fumbleReturnYards, fantasyDefenseSeason.fumbleReturnYards) &&
        Objects.equals(this.fumblesForced, fantasyDefenseSeason.fumblesForced) &&
        Objects.equals(this.fumblesRecovered, fantasyDefenseSeason.fumblesRecovered) &&
        Objects.equals(this.games, fantasyDefenseSeason.games) &&
        Objects.equals(this.globalTeamID, fantasyDefenseSeason.globalTeamID) &&
        Objects.equals(this.humidity, fantasyDefenseSeason.humidity) &&
        Objects.equals(this.interceptionReturnTouchdowns, fantasyDefenseSeason.interceptionReturnTouchdowns) &&
        Objects.equals(this.interceptionReturnYards, fantasyDefenseSeason.interceptionReturnYards) &&
        Objects.equals(this.interceptions, fantasyDefenseSeason.interceptions) &&
        Objects.equals(this.kickReturnLong, fantasyDefenseSeason.kickReturnLong) &&
        Objects.equals(this.kickReturnTouchdowns, fantasyDefenseSeason.kickReturnTouchdowns) &&
        Objects.equals(this.kickReturnYards, fantasyDefenseSeason.kickReturnYards) &&
        Objects.equals(this.kickReturns, fantasyDefenseSeason.kickReturns) &&
        Objects.equals(this.kickerFantasyPointsAllowed, fantasyDefenseSeason.kickerFantasyPointsAllowed) &&
        Objects.equals(this.offensiveYardsAllowed, fantasyDefenseSeason.offensiveYardsAllowed) &&
        Objects.equals(this.passesDefended, fantasyDefenseSeason.passesDefended) &&
        Objects.equals(this.playerID, fantasyDefenseSeason.playerID) &&
        Objects.equals(this.pointsAllowed, fantasyDefenseSeason.pointsAllowed) &&
        Objects.equals(this.pointsAllowedByDefenseSpecialTeams, fantasyDefenseSeason.pointsAllowedByDefenseSpecialTeams) &&
        Objects.equals(this.puntReturnLong, fantasyDefenseSeason.puntReturnLong) &&
        Objects.equals(this.puntReturnTouchdowns, fantasyDefenseSeason.puntReturnTouchdowns) &&
        Objects.equals(this.puntReturnYards, fantasyDefenseSeason.puntReturnYards) &&
        Objects.equals(this.puntReturns, fantasyDefenseSeason.puntReturns) &&
        Objects.equals(this.quarterbackFantasyPointsAllowed, fantasyDefenseSeason.quarterbackFantasyPointsAllowed) &&
        Objects.equals(this.quarterbackHits, fantasyDefenseSeason.quarterbackHits) &&
        Objects.equals(this.runningbackFantasyPointsAllowed, fantasyDefenseSeason.runningbackFantasyPointsAllowed) &&
        Objects.equals(this.sackYards, fantasyDefenseSeason.sackYards) &&
        Objects.equals(this.sacks, fantasyDefenseSeason.sacks) &&
        Objects.equals(this.safeties, fantasyDefenseSeason.safeties) &&
        Objects.equals(this.scoringDetails, fantasyDefenseSeason.scoringDetails) &&
        Objects.equals(this.season, fantasyDefenseSeason.season) &&
        Objects.equals(this.seasonType, fantasyDefenseSeason.seasonType) &&
        Objects.equals(this.soloTackles, fantasyDefenseSeason.soloTackles) &&
        Objects.equals(this.specialTeamsTouchdowns, fantasyDefenseSeason.specialTeamsTouchdowns) &&
        Objects.equals(this.tacklesForLoss, fantasyDefenseSeason.tacklesForLoss) &&
        Objects.equals(this.team, fantasyDefenseSeason.team) &&
        Objects.equals(this.teamID, fantasyDefenseSeason.teamID) &&
        Objects.equals(this.temperature, fantasyDefenseSeason.temperature) &&
        Objects.equals(this.thirdDownAttempts, fantasyDefenseSeason.thirdDownAttempts) &&
        Objects.equals(this.thirdDownConversions, fantasyDefenseSeason.thirdDownConversions) &&
        Objects.equals(this.tightEndFantasyPointsAllowed, fantasyDefenseSeason.tightEndFantasyPointsAllowed) &&
        Objects.equals(this.touchdownsScored, fantasyDefenseSeason.touchdownsScored) &&
        Objects.equals(this.twoPointConversionReturns, fantasyDefenseSeason.twoPointConversionReturns) &&
        Objects.equals(this.wideReceiverFantasyPointsAllowed, fantasyDefenseSeason.wideReceiverFantasyPointsAllowed) &&
        Objects.equals(this.windSpeed, fantasyDefenseSeason.windSpeed) &&
        Objects.equals(this.yahooFantasyPointsAllowed, fantasyDefenseSeason.yahooFantasyPointsAllowed) &&
        Objects.equals(this.yahooKickerFantasyPointsAllowed, fantasyDefenseSeason.yahooKickerFantasyPointsAllowed) &&
        Objects.equals(this.yahooQuarterbackFantasyPointsAllowed, fantasyDefenseSeason.yahooQuarterbackFantasyPointsAllowed) &&
        Objects.equals(this.yahooRunningbackFantasyPointsAllowed, fantasyDefenseSeason.yahooRunningbackFantasyPointsAllowed) &&
        Objects.equals(this.yahooTightEndFantasyPointsAllowed, fantasyDefenseSeason.yahooTightEndFantasyPointsAllowed) &&
        Objects.equals(this.yahooWideReceiverFantasyPointsAllowed, fantasyDefenseSeason.yahooWideReceiverFantasyPointsAllowed);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(assistedTackles, auctionValue, auctionValuePPR, averageDraftPosition, averageDraftPosition2QB, averageDraftPositionDynasty, averageDraftPositionPPR, blockedKickReturnTouchdowns, blockedKickReturnYards, blockedKicks, defensiveTouchdowns, draftKingsFantasyPointsAllowed, draftKingsKickerFantasyPointsAllowed, draftKingsQuarterbackFantasyPointsAllowed, draftKingsRunningbackFantasyPointsAllowed, draftKingsTightEndFantasyPointsAllowed, draftKingsWideReceiverFantasyPointsAllowed, fanDuelFantasyPointsAllowed, fanDuelKickerFantasyPointsAllowed, fanDuelQuarterbackFantasyPointsAllowed, fanDuelRunningbackFantasyPointsAllowed, fanDuelTightEndFantasyPointsAllowed, fanDuelWideReceiverFantasyPointsAllowed, fantasyDraftFantasyPointsAllowed, fantasyDraftKickerFantasyPointsAllowed, fantasyDraftQuarterbackFantasyPointsAllowed, fantasyDraftRunningbackFantasyPointsAllowed, fantasyDraftTightEndFantasyPointsAllowed, fantasyDraftWideReceiverFantasyPointsAllowed, fantasyPoints, fantasyPointsAllowed, fantasyPointsDraftKings, fantasyPointsFanDuel, fantasyPointsFantasyDraft, fantasyPointsYahoo, fieldGoalReturnTouchdowns, fieldGoalReturnYards, fourthDownAttempts, fourthDownConversions, fumbleReturnTouchdowns, fumbleReturnYards, fumblesForced, fumblesRecovered, games, globalTeamID, humidity, interceptionReturnTouchdowns, interceptionReturnYards, interceptions, kickReturnLong, kickReturnTouchdowns, kickReturnYards, kickReturns, kickerFantasyPointsAllowed, offensiveYardsAllowed, passesDefended, playerID, pointsAllowed, pointsAllowedByDefenseSpecialTeams, puntReturnLong, puntReturnTouchdowns, puntReturnYards, puntReturns, quarterbackFantasyPointsAllowed, quarterbackHits, runningbackFantasyPointsAllowed, sackYards, sacks, safeties, scoringDetails, season, seasonType, soloTackles, specialTeamsTouchdowns, tacklesForLoss, team, teamID, temperature, thirdDownAttempts, thirdDownConversions, tightEndFantasyPointsAllowed, touchdownsScored, twoPointConversionReturns, wideReceiverFantasyPointsAllowed, windSpeed, yahooFantasyPointsAllowed, yahooKickerFantasyPointsAllowed, yahooQuarterbackFantasyPointsAllowed, yahooRunningbackFantasyPointsAllowed, yahooTightEndFantasyPointsAllowed, yahooWideReceiverFantasyPointsAllowed);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FantasyDefenseSeason {\n");
    sb.append("    assistedTackles: ").append(toIndentedString(assistedTackles)).append("\n");
    sb.append("    auctionValue: ").append(toIndentedString(auctionValue)).append("\n");
    sb.append("    auctionValuePPR: ").append(toIndentedString(auctionValuePPR)).append("\n");
    sb.append("    averageDraftPosition: ").append(toIndentedString(averageDraftPosition)).append("\n");
    sb.append("    averageDraftPosition2QB: ").append(toIndentedString(averageDraftPosition2QB)).append("\n");
    sb.append("    averageDraftPositionDynasty: ").append(toIndentedString(averageDraftPositionDynasty)).append("\n");
    sb.append("    averageDraftPositionPPR: ").append(toIndentedString(averageDraftPositionPPR)).append("\n");
    sb.append("    blockedKickReturnTouchdowns: ").append(toIndentedString(blockedKickReturnTouchdowns)).append("\n");
    sb.append("    blockedKickReturnYards: ").append(toIndentedString(blockedKickReturnYards)).append("\n");
    sb.append("    blockedKicks: ").append(toIndentedString(blockedKicks)).append("\n");
    sb.append("    defensiveTouchdowns: ").append(toIndentedString(defensiveTouchdowns)).append("\n");
    sb.append("    draftKingsFantasyPointsAllowed: ").append(toIndentedString(draftKingsFantasyPointsAllowed)).append("\n");
    sb.append("    draftKingsKickerFantasyPointsAllowed: ").append(toIndentedString(draftKingsKickerFantasyPointsAllowed)).append("\n");
    sb.append("    draftKingsQuarterbackFantasyPointsAllowed: ").append(toIndentedString(draftKingsQuarterbackFantasyPointsAllowed)).append("\n");
    sb.append("    draftKingsRunningbackFantasyPointsAllowed: ").append(toIndentedString(draftKingsRunningbackFantasyPointsAllowed)).append("\n");
    sb.append("    draftKingsTightEndFantasyPointsAllowed: ").append(toIndentedString(draftKingsTightEndFantasyPointsAllowed)).append("\n");
    sb.append("    draftKingsWideReceiverFantasyPointsAllowed: ").append(toIndentedString(draftKingsWideReceiverFantasyPointsAllowed)).append("\n");
    sb.append("    fanDuelFantasyPointsAllowed: ").append(toIndentedString(fanDuelFantasyPointsAllowed)).append("\n");
    sb.append("    fanDuelKickerFantasyPointsAllowed: ").append(toIndentedString(fanDuelKickerFantasyPointsAllowed)).append("\n");
    sb.append("    fanDuelQuarterbackFantasyPointsAllowed: ").append(toIndentedString(fanDuelQuarterbackFantasyPointsAllowed)).append("\n");
    sb.append("    fanDuelRunningbackFantasyPointsAllowed: ").append(toIndentedString(fanDuelRunningbackFantasyPointsAllowed)).append("\n");
    sb.append("    fanDuelTightEndFantasyPointsAllowed: ").append(toIndentedString(fanDuelTightEndFantasyPointsAllowed)).append("\n");
    sb.append("    fanDuelWideReceiverFantasyPointsAllowed: ").append(toIndentedString(fanDuelWideReceiverFantasyPointsAllowed)).append("\n");
    sb.append("    fantasyDraftFantasyPointsAllowed: ").append(toIndentedString(fantasyDraftFantasyPointsAllowed)).append("\n");
    sb.append("    fantasyDraftKickerFantasyPointsAllowed: ").append(toIndentedString(fantasyDraftKickerFantasyPointsAllowed)).append("\n");
    sb.append("    fantasyDraftQuarterbackFantasyPointsAllowed: ").append(toIndentedString(fantasyDraftQuarterbackFantasyPointsAllowed)).append("\n");
    sb.append("    fantasyDraftRunningbackFantasyPointsAllowed: ").append(toIndentedString(fantasyDraftRunningbackFantasyPointsAllowed)).append("\n");
    sb.append("    fantasyDraftTightEndFantasyPointsAllowed: ").append(toIndentedString(fantasyDraftTightEndFantasyPointsAllowed)).append("\n");
    sb.append("    fantasyDraftWideReceiverFantasyPointsAllowed: ").append(toIndentedString(fantasyDraftWideReceiverFantasyPointsAllowed)).append("\n");
    sb.append("    fantasyPoints: ").append(toIndentedString(fantasyPoints)).append("\n");
    sb.append("    fantasyPointsAllowed: ").append(toIndentedString(fantasyPointsAllowed)).append("\n");
    sb.append("    fantasyPointsDraftKings: ").append(toIndentedString(fantasyPointsDraftKings)).append("\n");
    sb.append("    fantasyPointsFanDuel: ").append(toIndentedString(fantasyPointsFanDuel)).append("\n");
    sb.append("    fantasyPointsFantasyDraft: ").append(toIndentedString(fantasyPointsFantasyDraft)).append("\n");
    sb.append("    fantasyPointsYahoo: ").append(toIndentedString(fantasyPointsYahoo)).append("\n");
    sb.append("    fieldGoalReturnTouchdowns: ").append(toIndentedString(fieldGoalReturnTouchdowns)).append("\n");
    sb.append("    fieldGoalReturnYards: ").append(toIndentedString(fieldGoalReturnYards)).append("\n");
    sb.append("    fourthDownAttempts: ").append(toIndentedString(fourthDownAttempts)).append("\n");
    sb.append("    fourthDownConversions: ").append(toIndentedString(fourthDownConversions)).append("\n");
    sb.append("    fumbleReturnTouchdowns: ").append(toIndentedString(fumbleReturnTouchdowns)).append("\n");
    sb.append("    fumbleReturnYards: ").append(toIndentedString(fumbleReturnYards)).append("\n");
    sb.append("    fumblesForced: ").append(toIndentedString(fumblesForced)).append("\n");
    sb.append("    fumblesRecovered: ").append(toIndentedString(fumblesRecovered)).append("\n");
    sb.append("    games: ").append(toIndentedString(games)).append("\n");
    sb.append("    globalTeamID: ").append(toIndentedString(globalTeamID)).append("\n");
    sb.append("    humidity: ").append(toIndentedString(humidity)).append("\n");
    sb.append("    interceptionReturnTouchdowns: ").append(toIndentedString(interceptionReturnTouchdowns)).append("\n");
    sb.append("    interceptionReturnYards: ").append(toIndentedString(interceptionReturnYards)).append("\n");
    sb.append("    interceptions: ").append(toIndentedString(interceptions)).append("\n");
    sb.append("    kickReturnLong: ").append(toIndentedString(kickReturnLong)).append("\n");
    sb.append("    kickReturnTouchdowns: ").append(toIndentedString(kickReturnTouchdowns)).append("\n");
    sb.append("    kickReturnYards: ").append(toIndentedString(kickReturnYards)).append("\n");
    sb.append("    kickReturns: ").append(toIndentedString(kickReturns)).append("\n");
    sb.append("    kickerFantasyPointsAllowed: ").append(toIndentedString(kickerFantasyPointsAllowed)).append("\n");
    sb.append("    offensiveYardsAllowed: ").append(toIndentedString(offensiveYardsAllowed)).append("\n");
    sb.append("    passesDefended: ").append(toIndentedString(passesDefended)).append("\n");
    sb.append("    playerID: ").append(toIndentedString(playerID)).append("\n");
    sb.append("    pointsAllowed: ").append(toIndentedString(pointsAllowed)).append("\n");
    sb.append("    pointsAllowedByDefenseSpecialTeams: ").append(toIndentedString(pointsAllowedByDefenseSpecialTeams)).append("\n");
    sb.append("    puntReturnLong: ").append(toIndentedString(puntReturnLong)).append("\n");
    sb.append("    puntReturnTouchdowns: ").append(toIndentedString(puntReturnTouchdowns)).append("\n");
    sb.append("    puntReturnYards: ").append(toIndentedString(puntReturnYards)).append("\n");
    sb.append("    puntReturns: ").append(toIndentedString(puntReturns)).append("\n");
    sb.append("    quarterbackFantasyPointsAllowed: ").append(toIndentedString(quarterbackFantasyPointsAllowed)).append("\n");
    sb.append("    quarterbackHits: ").append(toIndentedString(quarterbackHits)).append("\n");
    sb.append("    runningbackFantasyPointsAllowed: ").append(toIndentedString(runningbackFantasyPointsAllowed)).append("\n");
    sb.append("    sackYards: ").append(toIndentedString(sackYards)).append("\n");
    sb.append("    sacks: ").append(toIndentedString(sacks)).append("\n");
    sb.append("    safeties: ").append(toIndentedString(safeties)).append("\n");
    sb.append("    scoringDetails: ").append(toIndentedString(scoringDetails)).append("\n");
    sb.append("    season: ").append(toIndentedString(season)).append("\n");
    sb.append("    seasonType: ").append(toIndentedString(seasonType)).append("\n");
    sb.append("    soloTackles: ").append(toIndentedString(soloTackles)).append("\n");
    sb.append("    specialTeamsTouchdowns: ").append(toIndentedString(specialTeamsTouchdowns)).append("\n");
    sb.append("    tacklesForLoss: ").append(toIndentedString(tacklesForLoss)).append("\n");
    sb.append("    team: ").append(toIndentedString(team)).append("\n");
    sb.append("    teamID: ").append(toIndentedString(teamID)).append("\n");
    sb.append("    temperature: ").append(toIndentedString(temperature)).append("\n");
    sb.append("    thirdDownAttempts: ").append(toIndentedString(thirdDownAttempts)).append("\n");
    sb.append("    thirdDownConversions: ").append(toIndentedString(thirdDownConversions)).append("\n");
    sb.append("    tightEndFantasyPointsAllowed: ").append(toIndentedString(tightEndFantasyPointsAllowed)).append("\n");
    sb.append("    touchdownsScored: ").append(toIndentedString(touchdownsScored)).append("\n");
    sb.append("    twoPointConversionReturns: ").append(toIndentedString(twoPointConversionReturns)).append("\n");
    sb.append("    wideReceiverFantasyPointsAllowed: ").append(toIndentedString(wideReceiverFantasyPointsAllowed)).append("\n");
    sb.append("    windSpeed: ").append(toIndentedString(windSpeed)).append("\n");
    sb.append("    yahooFantasyPointsAllowed: ").append(toIndentedString(yahooFantasyPointsAllowed)).append("\n");
    sb.append("    yahooKickerFantasyPointsAllowed: ").append(toIndentedString(yahooKickerFantasyPointsAllowed)).append("\n");
    sb.append("    yahooQuarterbackFantasyPointsAllowed: ").append(toIndentedString(yahooQuarterbackFantasyPointsAllowed)).append("\n");
    sb.append("    yahooRunningbackFantasyPointsAllowed: ").append(toIndentedString(yahooRunningbackFantasyPointsAllowed)).append("\n");
    sb.append("    yahooTightEndFantasyPointsAllowed: ").append(toIndentedString(yahooTightEndFantasyPointsAllowed)).append("\n");
    sb.append("    yahooWideReceiverFantasyPointsAllowed: ").append(toIndentedString(yahooWideReceiverFantasyPointsAllowed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AssistedTackles");
    openapiFields.add("AuctionValue");
    openapiFields.add("AuctionValuePPR");
    openapiFields.add("AverageDraftPosition");
    openapiFields.add("AverageDraftPosition2QB");
    openapiFields.add("AverageDraftPositionDynasty");
    openapiFields.add("AverageDraftPositionPPR");
    openapiFields.add("BlockedKickReturnTouchdowns");
    openapiFields.add("BlockedKickReturnYards");
    openapiFields.add("BlockedKicks");
    openapiFields.add("DefensiveTouchdowns");
    openapiFields.add("DraftKingsFantasyPointsAllowed");
    openapiFields.add("DraftKingsKickerFantasyPointsAllowed");
    openapiFields.add("DraftKingsQuarterbackFantasyPointsAllowed");
    openapiFields.add("DraftKingsRunningbackFantasyPointsAllowed");
    openapiFields.add("DraftKingsTightEndFantasyPointsAllowed");
    openapiFields.add("DraftKingsWideReceiverFantasyPointsAllowed");
    openapiFields.add("FanDuelFantasyPointsAllowed");
    openapiFields.add("FanDuelKickerFantasyPointsAllowed");
    openapiFields.add("FanDuelQuarterbackFantasyPointsAllowed");
    openapiFields.add("FanDuelRunningbackFantasyPointsAllowed");
    openapiFields.add("FanDuelTightEndFantasyPointsAllowed");
    openapiFields.add("FanDuelWideReceiverFantasyPointsAllowed");
    openapiFields.add("FantasyDraftFantasyPointsAllowed");
    openapiFields.add("FantasyDraftKickerFantasyPointsAllowed");
    openapiFields.add("FantasyDraftQuarterbackFantasyPointsAllowed");
    openapiFields.add("FantasyDraftRunningbackFantasyPointsAllowed");
    openapiFields.add("FantasyDraftTightEndFantasyPointsAllowed");
    openapiFields.add("FantasyDraftWideReceiverFantasyPointsAllowed");
    openapiFields.add("FantasyPoints");
    openapiFields.add("FantasyPointsAllowed");
    openapiFields.add("FantasyPointsDraftKings");
    openapiFields.add("FantasyPointsFanDuel");
    openapiFields.add("FantasyPointsFantasyDraft");
    openapiFields.add("FantasyPointsYahoo");
    openapiFields.add("FieldGoalReturnTouchdowns");
    openapiFields.add("FieldGoalReturnYards");
    openapiFields.add("FourthDownAttempts");
    openapiFields.add("FourthDownConversions");
    openapiFields.add("FumbleReturnTouchdowns");
    openapiFields.add("FumbleReturnYards");
    openapiFields.add("FumblesForced");
    openapiFields.add("FumblesRecovered");
    openapiFields.add("Games");
    openapiFields.add("GlobalTeamID");
    openapiFields.add("Humidity");
    openapiFields.add("InterceptionReturnTouchdowns");
    openapiFields.add("InterceptionReturnYards");
    openapiFields.add("Interceptions");
    openapiFields.add("KickReturnLong");
    openapiFields.add("KickReturnTouchdowns");
    openapiFields.add("KickReturnYards");
    openapiFields.add("KickReturns");
    openapiFields.add("KickerFantasyPointsAllowed");
    openapiFields.add("OffensiveYardsAllowed");
    openapiFields.add("PassesDefended");
    openapiFields.add("PlayerID");
    openapiFields.add("PointsAllowed");
    openapiFields.add("PointsAllowedByDefenseSpecialTeams");
    openapiFields.add("PuntReturnLong");
    openapiFields.add("PuntReturnTouchdowns");
    openapiFields.add("PuntReturnYards");
    openapiFields.add("PuntReturns");
    openapiFields.add("QuarterbackFantasyPointsAllowed");
    openapiFields.add("QuarterbackHits");
    openapiFields.add("RunningbackFantasyPointsAllowed");
    openapiFields.add("SackYards");
    openapiFields.add("Sacks");
    openapiFields.add("Safeties");
    openapiFields.add("ScoringDetails");
    openapiFields.add("Season");
    openapiFields.add("SeasonType");
    openapiFields.add("SoloTackles");
    openapiFields.add("SpecialTeamsTouchdowns");
    openapiFields.add("TacklesForLoss");
    openapiFields.add("Team");
    openapiFields.add("TeamID");
    openapiFields.add("Temperature");
    openapiFields.add("ThirdDownAttempts");
    openapiFields.add("ThirdDownConversions");
    openapiFields.add("TightEndFantasyPointsAllowed");
    openapiFields.add("TouchdownsScored");
    openapiFields.add("TwoPointConversionReturns");
    openapiFields.add("WideReceiverFantasyPointsAllowed");
    openapiFields.add("WindSpeed");
    openapiFields.add("YahooFantasyPointsAllowed");
    openapiFields.add("YahooKickerFantasyPointsAllowed");
    openapiFields.add("YahooQuarterbackFantasyPointsAllowed");
    openapiFields.add("YahooRunningbackFantasyPointsAllowed");
    openapiFields.add("YahooTightEndFantasyPointsAllowed");
    openapiFields.add("YahooWideReceiverFantasyPointsAllowed");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to FantasyDefenseSeason
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!FantasyDefenseSeason.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FantasyDefenseSeason is not found in the empty JSON string", FantasyDefenseSeason.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!FantasyDefenseSeason.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `FantasyDefenseSeason` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("ScoringDetails") != null && !jsonObj.get("ScoringDetails").isJsonNull()) {
        JsonArray jsonArrayscoringDetails = jsonObj.getAsJsonArray("ScoringDetails");
        if (jsonArrayscoringDetails != null) {
          // ensure the json data is an array
          if (!jsonObj.get("ScoringDetails").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `ScoringDetails` to be an array in the JSON string but got `%s`", jsonObj.get("ScoringDetails").toString()));
          }

          // validate the optional field `ScoringDetails` (array)
          for (int i = 0; i < jsonArrayscoringDetails.size(); i++) {
            ScoringDetail.validateJsonElement(jsonArrayscoringDetails.get(i));
          };
        }
      }
      if ((jsonObj.get("Team") != null && !jsonObj.get("Team").isJsonNull()) && !jsonObj.get("Team").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Team` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Team").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FantasyDefenseSeason.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FantasyDefenseSeason' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FantasyDefenseSeason> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FantasyDefenseSeason.class));

       return (TypeAdapter<T>) new TypeAdapter<FantasyDefenseSeason>() {
           @Override
           public void write(JsonWriter out, FantasyDefenseSeason value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public FantasyDefenseSeason read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of FantasyDefenseSeason given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of FantasyDefenseSeason
   * @throws IOException if the JSON string is invalid with respect to FantasyDefenseSeason
   */
  public static FantasyDefenseSeason fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FantasyDefenseSeason.class);
  }

  /**
   * Convert an instance of FantasyDefenseSeason to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

