/*
 * NFL v3 Stats
 * NFL rosters, player stats, team stats, and fantasy stats API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ScoringDetail;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PlayerGame
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:05:11.789534-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PlayerGame {
  public static final String SERIALIZED_NAME_ACTIVATED = "Activated";
  @SerializedName(SERIALIZED_NAME_ACTIVATED)
  private Integer activated;

  public static final String SERIALIZED_NAME_ASSISTED_TACKLES = "AssistedTackles";
  @SerializedName(SERIALIZED_NAME_ASSISTED_TACKLES)
  private BigDecimal assistedTackles;

  public static final String SERIALIZED_NAME_BLOCKED_KICK_RETURN_TOUCHDOWNS = "BlockedKickReturnTouchdowns";
  @SerializedName(SERIALIZED_NAME_BLOCKED_KICK_RETURN_TOUCHDOWNS)
  private BigDecimal blockedKickReturnTouchdowns;

  public static final String SERIALIZED_NAME_BLOCKED_KICK_RETURN_YARDS = "BlockedKickReturnYards";
  @SerializedName(SERIALIZED_NAME_BLOCKED_KICK_RETURN_YARDS)
  private BigDecimal blockedKickReturnYards;

  public static final String SERIALIZED_NAME_BLOCKED_KICKS = "BlockedKicks";
  @SerializedName(SERIALIZED_NAME_BLOCKED_KICKS)
  private BigDecimal blockedKicks;

  public static final String SERIALIZED_NAME_DATE_TIME = "DateTime";
  @SerializedName(SERIALIZED_NAME_DATE_TIME)
  private String dateTime;

  public static final String SERIALIZED_NAME_DAY = "Day";
  @SerializedName(SERIALIZED_NAME_DAY)
  private String day;

  public static final String SERIALIZED_NAME_DECLARED_INACTIVE = "DeclaredInactive";
  @SerializedName(SERIALIZED_NAME_DECLARED_INACTIVE)
  private Boolean declaredInactive;

  public static final String SERIALIZED_NAME_DEFENSIVE_SNAPS_PLAYED = "DefensiveSnapsPlayed";
  @SerializedName(SERIALIZED_NAME_DEFENSIVE_SNAPS_PLAYED)
  private Integer defensiveSnapsPlayed;

  public static final String SERIALIZED_NAME_DEFENSIVE_TEAM_SNAPS = "DefensiveTeamSnaps";
  @SerializedName(SERIALIZED_NAME_DEFENSIVE_TEAM_SNAPS)
  private Integer defensiveTeamSnaps;

  public static final String SERIALIZED_NAME_DEFENSIVE_TOUCHDOWNS = "DefensiveTouchdowns";
  @SerializedName(SERIALIZED_NAME_DEFENSIVE_TOUCHDOWNS)
  private BigDecimal defensiveTouchdowns;

  public static final String SERIALIZED_NAME_DRAFT_KINGS_POSITION = "DraftKingsPosition";
  @SerializedName(SERIALIZED_NAME_DRAFT_KINGS_POSITION)
  private String draftKingsPosition;

  public static final String SERIALIZED_NAME_DRAFT_KINGS_SALARY = "DraftKingsSalary";
  @SerializedName(SERIALIZED_NAME_DRAFT_KINGS_SALARY)
  private Integer draftKingsSalary;

  public static final String SERIALIZED_NAME_EXTRA_POINTS_ATTEMPTED = "ExtraPointsAttempted";
  @SerializedName(SERIALIZED_NAME_EXTRA_POINTS_ATTEMPTED)
  private BigDecimal extraPointsAttempted;

  public static final String SERIALIZED_NAME_EXTRA_POINTS_HAD_BLOCKED = "ExtraPointsHadBlocked";
  @SerializedName(SERIALIZED_NAME_EXTRA_POINTS_HAD_BLOCKED)
  private BigDecimal extraPointsHadBlocked;

  public static final String SERIALIZED_NAME_EXTRA_POINTS_MADE = "ExtraPointsMade";
  @SerializedName(SERIALIZED_NAME_EXTRA_POINTS_MADE)
  private BigDecimal extraPointsMade;

  public static final String SERIALIZED_NAME_FAN_DUEL_POSITION = "FanDuelPosition";
  @SerializedName(SERIALIZED_NAME_FAN_DUEL_POSITION)
  private String fanDuelPosition;

  public static final String SERIALIZED_NAME_FAN_DUEL_SALARY = "FanDuelSalary";
  @SerializedName(SERIALIZED_NAME_FAN_DUEL_SALARY)
  private Integer fanDuelSalary;

  public static final String SERIALIZED_NAME_FANTASY_DATA_SALARY = "FantasyDataSalary";
  @SerializedName(SERIALIZED_NAME_FANTASY_DATA_SALARY)
  private Integer fantasyDataSalary;

  public static final String SERIALIZED_NAME_FANTASY_DRAFT_POSITION = "FantasyDraftPosition";
  @SerializedName(SERIALIZED_NAME_FANTASY_DRAFT_POSITION)
  private String fantasyDraftPosition;

  public static final String SERIALIZED_NAME_FANTASY_DRAFT_SALARY = "FantasyDraftSalary";
  @SerializedName(SERIALIZED_NAME_FANTASY_DRAFT_SALARY)
  private Integer fantasyDraftSalary;

  public static final String SERIALIZED_NAME_FANTASY_POINTS = "FantasyPoints";
  @SerializedName(SERIALIZED_NAME_FANTASY_POINTS)
  private BigDecimal fantasyPoints;

  public static final String SERIALIZED_NAME_FANTASY_POINTS_DRAFT_KINGS = "FantasyPointsDraftKings";
  @SerializedName(SERIALIZED_NAME_FANTASY_POINTS_DRAFT_KINGS)
  private BigDecimal fantasyPointsDraftKings;

  public static final String SERIALIZED_NAME_FANTASY_POINTS_FAN_DUEL = "FantasyPointsFanDuel";
  @SerializedName(SERIALIZED_NAME_FANTASY_POINTS_FAN_DUEL)
  private BigDecimal fantasyPointsFanDuel;

  public static final String SERIALIZED_NAME_FANTASY_POINTS_FANTASY_DRAFT = "FantasyPointsFantasyDraft";
  @SerializedName(SERIALIZED_NAME_FANTASY_POINTS_FANTASY_DRAFT)
  private BigDecimal fantasyPointsFantasyDraft;

  public static final String SERIALIZED_NAME_FANTASY_POINTS_P_P_R = "FantasyPointsPPR";
  @SerializedName(SERIALIZED_NAME_FANTASY_POINTS_P_P_R)
  private BigDecimal fantasyPointsPPR;

  public static final String SERIALIZED_NAME_FANTASY_POINTS_YAHOO = "FantasyPointsYahoo";
  @SerializedName(SERIALIZED_NAME_FANTASY_POINTS_YAHOO)
  private BigDecimal fantasyPointsYahoo;

  public static final String SERIALIZED_NAME_FANTASY_POSITION = "FantasyPosition";
  @SerializedName(SERIALIZED_NAME_FANTASY_POSITION)
  private String fantasyPosition;

  public static final String SERIALIZED_NAME_FIELD_GOAL_PERCENTAGE = "FieldGoalPercentage";
  @SerializedName(SERIALIZED_NAME_FIELD_GOAL_PERCENTAGE)
  private BigDecimal fieldGoalPercentage;

  public static final String SERIALIZED_NAME_FIELD_GOAL_RETURN_TOUCHDOWNS = "FieldGoalReturnTouchdowns";
  @SerializedName(SERIALIZED_NAME_FIELD_GOAL_RETURN_TOUCHDOWNS)
  private BigDecimal fieldGoalReturnTouchdowns;

  public static final String SERIALIZED_NAME_FIELD_GOAL_RETURN_YARDS = "FieldGoalReturnYards";
  @SerializedName(SERIALIZED_NAME_FIELD_GOAL_RETURN_YARDS)
  private BigDecimal fieldGoalReturnYards;

  public static final String SERIALIZED_NAME_FIELD_GOALS_ATTEMPTED = "FieldGoalsAttempted";
  @SerializedName(SERIALIZED_NAME_FIELD_GOALS_ATTEMPTED)
  private BigDecimal fieldGoalsAttempted;

  public static final String SERIALIZED_NAME_FIELD_GOALS_HAD_BLOCKED = "FieldGoalsHadBlocked";
  @SerializedName(SERIALIZED_NAME_FIELD_GOALS_HAD_BLOCKED)
  private BigDecimal fieldGoalsHadBlocked;

  public static final String SERIALIZED_NAME_FIELD_GOALS_LONGEST_MADE = "FieldGoalsLongestMade";
  @SerializedName(SERIALIZED_NAME_FIELD_GOALS_LONGEST_MADE)
  private BigDecimal fieldGoalsLongestMade;

  public static final String SERIALIZED_NAME_FIELD_GOALS_MADE = "FieldGoalsMade";
  @SerializedName(SERIALIZED_NAME_FIELD_GOALS_MADE)
  private BigDecimal fieldGoalsMade;

  public static final String SERIALIZED_NAME_FIELD_GOALS_MADE0TO19 = "FieldGoalsMade0to19";
  @SerializedName(SERIALIZED_NAME_FIELD_GOALS_MADE0TO19)
  private BigDecimal fieldGoalsMade0to19;

  public static final String SERIALIZED_NAME_FIELD_GOALS_MADE20TO29 = "FieldGoalsMade20to29";
  @SerializedName(SERIALIZED_NAME_FIELD_GOALS_MADE20TO29)
  private BigDecimal fieldGoalsMade20to29;

  public static final String SERIALIZED_NAME_FIELD_GOALS_MADE30TO39 = "FieldGoalsMade30to39";
  @SerializedName(SERIALIZED_NAME_FIELD_GOALS_MADE30TO39)
  private BigDecimal fieldGoalsMade30to39;

  public static final String SERIALIZED_NAME_FIELD_GOALS_MADE40TO49 = "FieldGoalsMade40to49";
  @SerializedName(SERIALIZED_NAME_FIELD_GOALS_MADE40TO49)
  private BigDecimal fieldGoalsMade40to49;

  public static final String SERIALIZED_NAME_FIELD_GOALS_MADE50_PLUS = "FieldGoalsMade50Plus";
  @SerializedName(SERIALIZED_NAME_FIELD_GOALS_MADE50_PLUS)
  private BigDecimal fieldGoalsMade50Plus;

  public static final String SERIALIZED_NAME_FUMBLE_RETURN_TOUCHDOWNS = "FumbleReturnTouchdowns";
  @SerializedName(SERIALIZED_NAME_FUMBLE_RETURN_TOUCHDOWNS)
  private BigDecimal fumbleReturnTouchdowns;

  public static final String SERIALIZED_NAME_FUMBLE_RETURN_YARDS = "FumbleReturnYards";
  @SerializedName(SERIALIZED_NAME_FUMBLE_RETURN_YARDS)
  private BigDecimal fumbleReturnYards;

  public static final String SERIALIZED_NAME_FUMBLES = "Fumbles";
  @SerializedName(SERIALIZED_NAME_FUMBLES)
  private BigDecimal fumbles;

  public static final String SERIALIZED_NAME_FUMBLES_FORCED = "FumblesForced";
  @SerializedName(SERIALIZED_NAME_FUMBLES_FORCED)
  private BigDecimal fumblesForced;

  public static final String SERIALIZED_NAME_FUMBLES_LOST = "FumblesLost";
  @SerializedName(SERIALIZED_NAME_FUMBLES_LOST)
  private BigDecimal fumblesLost;

  public static final String SERIALIZED_NAME_FUMBLES_OUT_OF_BOUNDS = "FumblesOutOfBounds";
  @SerializedName(SERIALIZED_NAME_FUMBLES_OUT_OF_BOUNDS)
  private BigDecimal fumblesOutOfBounds;

  public static final String SERIALIZED_NAME_FUMBLES_OWN_RECOVERIES = "FumblesOwnRecoveries";
  @SerializedName(SERIALIZED_NAME_FUMBLES_OWN_RECOVERIES)
  private BigDecimal fumblesOwnRecoveries;

  public static final String SERIALIZED_NAME_FUMBLES_RECOVERED = "FumblesRecovered";
  @SerializedName(SERIALIZED_NAME_FUMBLES_RECOVERED)
  private BigDecimal fumblesRecovered;

  public static final String SERIALIZED_NAME_GAME_DATE = "GameDate";
  @SerializedName(SERIALIZED_NAME_GAME_DATE)
  private String gameDate;

  public static final String SERIALIZED_NAME_GAME_KEY = "GameKey";
  @SerializedName(SERIALIZED_NAME_GAME_KEY)
  private String gameKey;

  public static final String SERIALIZED_NAME_GLOBAL_GAME_I_D = "GlobalGameID";
  @SerializedName(SERIALIZED_NAME_GLOBAL_GAME_I_D)
  private Integer globalGameID;

  public static final String SERIALIZED_NAME_GLOBAL_OPPONENT_I_D = "GlobalOpponentID";
  @SerializedName(SERIALIZED_NAME_GLOBAL_OPPONENT_I_D)
  private Integer globalOpponentID;

  public static final String SERIALIZED_NAME_GLOBAL_TEAM_I_D = "GlobalTeamID";
  @SerializedName(SERIALIZED_NAME_GLOBAL_TEAM_I_D)
  private Integer globalTeamID;

  public static final String SERIALIZED_NAME_HOME_OR_AWAY = "HomeOrAway";
  @SerializedName(SERIALIZED_NAME_HOME_OR_AWAY)
  private String homeOrAway;

  public static final String SERIALIZED_NAME_HUMIDITY = "Humidity";
  @SerializedName(SERIALIZED_NAME_HUMIDITY)
  private Integer humidity;

  public static final String SERIALIZED_NAME_INJURY_BODY_PART = "InjuryBodyPart";
  @SerializedName(SERIALIZED_NAME_INJURY_BODY_PART)
  private String injuryBodyPart;

  public static final String SERIALIZED_NAME_INJURY_NOTES = "InjuryNotes";
  @SerializedName(SERIALIZED_NAME_INJURY_NOTES)
  private String injuryNotes;

  public static final String SERIALIZED_NAME_INJURY_PRACTICE = "InjuryPractice";
  @SerializedName(SERIALIZED_NAME_INJURY_PRACTICE)
  private String injuryPractice;

  public static final String SERIALIZED_NAME_INJURY_PRACTICE_DESCRIPTION = "InjuryPracticeDescription";
  @SerializedName(SERIALIZED_NAME_INJURY_PRACTICE_DESCRIPTION)
  private String injuryPracticeDescription;

  public static final String SERIALIZED_NAME_INJURY_START_DATE = "InjuryStartDate";
  @SerializedName(SERIALIZED_NAME_INJURY_START_DATE)
  private String injuryStartDate;

  public static final String SERIALIZED_NAME_INJURY_STATUS = "InjuryStatus";
  @SerializedName(SERIALIZED_NAME_INJURY_STATUS)
  private String injuryStatus;

  public static final String SERIALIZED_NAME_INTERCEPTION_RETURN_TOUCHDOWNS = "InterceptionReturnTouchdowns";
  @SerializedName(SERIALIZED_NAME_INTERCEPTION_RETURN_TOUCHDOWNS)
  private BigDecimal interceptionReturnTouchdowns;

  public static final String SERIALIZED_NAME_INTERCEPTION_RETURN_YARDS = "InterceptionReturnYards";
  @SerializedName(SERIALIZED_NAME_INTERCEPTION_RETURN_YARDS)
  private BigDecimal interceptionReturnYards;

  public static final String SERIALIZED_NAME_INTERCEPTIONS = "Interceptions";
  @SerializedName(SERIALIZED_NAME_INTERCEPTIONS)
  private BigDecimal interceptions;

  public static final String SERIALIZED_NAME_IS_GAME_OVER = "IsGameOver";
  @SerializedName(SERIALIZED_NAME_IS_GAME_OVER)
  private Boolean isGameOver;

  public static final String SERIALIZED_NAME_KICK_RETURN_FAIR_CATCHES = "KickReturnFairCatches";
  @SerializedName(SERIALIZED_NAME_KICK_RETURN_FAIR_CATCHES)
  private BigDecimal kickReturnFairCatches;

  public static final String SERIALIZED_NAME_KICK_RETURN_LONG = "KickReturnLong";
  @SerializedName(SERIALIZED_NAME_KICK_RETURN_LONG)
  private BigDecimal kickReturnLong;

  public static final String SERIALIZED_NAME_KICK_RETURN_TOUCHDOWNS = "KickReturnTouchdowns";
  @SerializedName(SERIALIZED_NAME_KICK_RETURN_TOUCHDOWNS)
  private BigDecimal kickReturnTouchdowns;

  public static final String SERIALIZED_NAME_KICK_RETURN_YARDS = "KickReturnYards";
  @SerializedName(SERIALIZED_NAME_KICK_RETURN_YARDS)
  private BigDecimal kickReturnYards;

  public static final String SERIALIZED_NAME_KICK_RETURN_YARDS_PER_ATTEMPT = "KickReturnYardsPerAttempt";
  @SerializedName(SERIALIZED_NAME_KICK_RETURN_YARDS_PER_ATTEMPT)
  private BigDecimal kickReturnYardsPerAttempt;

  public static final String SERIALIZED_NAME_KICK_RETURNS = "KickReturns";
  @SerializedName(SERIALIZED_NAME_KICK_RETURNS)
  private BigDecimal kickReturns;

  public static final String SERIALIZED_NAME_MISC_ASSISTED_TACKLES = "MiscAssistedTackles";
  @SerializedName(SERIALIZED_NAME_MISC_ASSISTED_TACKLES)
  private BigDecimal miscAssistedTackles;

  public static final String SERIALIZED_NAME_MISC_FUMBLES_FORCED = "MiscFumblesForced";
  @SerializedName(SERIALIZED_NAME_MISC_FUMBLES_FORCED)
  private BigDecimal miscFumblesForced;

  public static final String SERIALIZED_NAME_MISC_FUMBLES_RECOVERED = "MiscFumblesRecovered";
  @SerializedName(SERIALIZED_NAME_MISC_FUMBLES_RECOVERED)
  private BigDecimal miscFumblesRecovered;

  public static final String SERIALIZED_NAME_MISC_SOLO_TACKLES = "MiscSoloTackles";
  @SerializedName(SERIALIZED_NAME_MISC_SOLO_TACKLES)
  private BigDecimal miscSoloTackles;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NUMBER = "Number";
  @SerializedName(SERIALIZED_NAME_NUMBER)
  private Integer number;

  public static final String SERIALIZED_NAME_OFFENSIVE_FUMBLE_RECOVERY_TOUCHDOWNS = "OffensiveFumbleRecoveryTouchdowns";
  @SerializedName(SERIALIZED_NAME_OFFENSIVE_FUMBLE_RECOVERY_TOUCHDOWNS)
  private BigDecimal offensiveFumbleRecoveryTouchdowns;

  public static final String SERIALIZED_NAME_OFFENSIVE_SNAPS_PLAYED = "OffensiveSnapsPlayed";
  @SerializedName(SERIALIZED_NAME_OFFENSIVE_SNAPS_PLAYED)
  private Integer offensiveSnapsPlayed;

  public static final String SERIALIZED_NAME_OFFENSIVE_TEAM_SNAPS = "OffensiveTeamSnaps";
  @SerializedName(SERIALIZED_NAME_OFFENSIVE_TEAM_SNAPS)
  private Integer offensiveTeamSnaps;

  public static final String SERIALIZED_NAME_OFFENSIVE_TOUCHDOWNS = "OffensiveTouchdowns";
  @SerializedName(SERIALIZED_NAME_OFFENSIVE_TOUCHDOWNS)
  private BigDecimal offensiveTouchdowns;

  public static final String SERIALIZED_NAME_OPPONENT = "Opponent";
  @SerializedName(SERIALIZED_NAME_OPPONENT)
  private String opponent;

  public static final String SERIALIZED_NAME_OPPONENT_I_D = "OpponentID";
  @SerializedName(SERIALIZED_NAME_OPPONENT_I_D)
  private Integer opponentID;

  public static final String SERIALIZED_NAME_OPPONENT_POSITION_RANK = "OpponentPositionRank";
  @SerializedName(SERIALIZED_NAME_OPPONENT_POSITION_RANK)
  private Integer opponentPositionRank;

  public static final String SERIALIZED_NAME_OPPONENT_RANK = "OpponentRank";
  @SerializedName(SERIALIZED_NAME_OPPONENT_RANK)
  private Integer opponentRank;

  public static final String SERIALIZED_NAME_PASSES_DEFENDED = "PassesDefended";
  @SerializedName(SERIALIZED_NAME_PASSES_DEFENDED)
  private BigDecimal passesDefended;

  public static final String SERIALIZED_NAME_PASSING_ATTEMPTS = "PassingAttempts";
  @SerializedName(SERIALIZED_NAME_PASSING_ATTEMPTS)
  private BigDecimal passingAttempts;

  public static final String SERIALIZED_NAME_PASSING_COMPLETION_PERCENTAGE = "PassingCompletionPercentage";
  @SerializedName(SERIALIZED_NAME_PASSING_COMPLETION_PERCENTAGE)
  private BigDecimal passingCompletionPercentage;

  public static final String SERIALIZED_NAME_PASSING_COMPLETIONS = "PassingCompletions";
  @SerializedName(SERIALIZED_NAME_PASSING_COMPLETIONS)
  private BigDecimal passingCompletions;

  public static final String SERIALIZED_NAME_PASSING_INTERCEPTIONS = "PassingInterceptions";
  @SerializedName(SERIALIZED_NAME_PASSING_INTERCEPTIONS)
  private BigDecimal passingInterceptions;

  public static final String SERIALIZED_NAME_PASSING_LONG = "PassingLong";
  @SerializedName(SERIALIZED_NAME_PASSING_LONG)
  private BigDecimal passingLong;

  public static final String SERIALIZED_NAME_PASSING_RATING = "PassingRating";
  @SerializedName(SERIALIZED_NAME_PASSING_RATING)
  private BigDecimal passingRating;

  public static final String SERIALIZED_NAME_PASSING_SACK_YARDS = "PassingSackYards";
  @SerializedName(SERIALIZED_NAME_PASSING_SACK_YARDS)
  private BigDecimal passingSackYards;

  public static final String SERIALIZED_NAME_PASSING_SACKS = "PassingSacks";
  @SerializedName(SERIALIZED_NAME_PASSING_SACKS)
  private BigDecimal passingSacks;

  public static final String SERIALIZED_NAME_PASSING_TOUCHDOWNS = "PassingTouchdowns";
  @SerializedName(SERIALIZED_NAME_PASSING_TOUCHDOWNS)
  private BigDecimal passingTouchdowns;

  public static final String SERIALIZED_NAME_PASSING_YARDS = "PassingYards";
  @SerializedName(SERIALIZED_NAME_PASSING_YARDS)
  private BigDecimal passingYards;

  public static final String SERIALIZED_NAME_PASSING_YARDS_PER_ATTEMPT = "PassingYardsPerAttempt";
  @SerializedName(SERIALIZED_NAME_PASSING_YARDS_PER_ATTEMPT)
  private BigDecimal passingYardsPerAttempt;

  public static final String SERIALIZED_NAME_PASSING_YARDS_PER_COMPLETION = "PassingYardsPerCompletion";
  @SerializedName(SERIALIZED_NAME_PASSING_YARDS_PER_COMPLETION)
  private BigDecimal passingYardsPerCompletion;

  public static final String SERIALIZED_NAME_PLAYED = "Played";
  @SerializedName(SERIALIZED_NAME_PLAYED)
  private Integer played;

  public static final String SERIALIZED_NAME_PLAYER_GAME_I_D = "PlayerGameID";
  @SerializedName(SERIALIZED_NAME_PLAYER_GAME_I_D)
  private Integer playerGameID;

  public static final String SERIALIZED_NAME_PLAYER_I_D = "PlayerID";
  @SerializedName(SERIALIZED_NAME_PLAYER_I_D)
  private Integer playerID;

  public static final String SERIALIZED_NAME_PLAYING_SURFACE = "PlayingSurface";
  @SerializedName(SERIALIZED_NAME_PLAYING_SURFACE)
  private String playingSurface;

  public static final String SERIALIZED_NAME_POSITION = "Position";
  @SerializedName(SERIALIZED_NAME_POSITION)
  private String position;

  public static final String SERIALIZED_NAME_POSITION_CATEGORY = "PositionCategory";
  @SerializedName(SERIALIZED_NAME_POSITION_CATEGORY)
  private String positionCategory;

  public static final String SERIALIZED_NAME_PUNT_AVERAGE = "PuntAverage";
  @SerializedName(SERIALIZED_NAME_PUNT_AVERAGE)
  private BigDecimal puntAverage;

  public static final String SERIALIZED_NAME_PUNT_INSIDE20 = "PuntInside20";
  @SerializedName(SERIALIZED_NAME_PUNT_INSIDE20)
  private BigDecimal puntInside20;

  public static final String SERIALIZED_NAME_PUNT_LONG = "PuntLong";
  @SerializedName(SERIALIZED_NAME_PUNT_LONG)
  private BigDecimal puntLong;

  public static final String SERIALIZED_NAME_PUNT_NET_AVERAGE = "PuntNetAverage";
  @SerializedName(SERIALIZED_NAME_PUNT_NET_AVERAGE)
  private BigDecimal puntNetAverage;

  public static final String SERIALIZED_NAME_PUNT_NET_YARDS = "PuntNetYards";
  @SerializedName(SERIALIZED_NAME_PUNT_NET_YARDS)
  private BigDecimal puntNetYards;

  public static final String SERIALIZED_NAME_PUNT_RETURN_FAIR_CATCHES = "PuntReturnFairCatches";
  @SerializedName(SERIALIZED_NAME_PUNT_RETURN_FAIR_CATCHES)
  private BigDecimal puntReturnFairCatches;

  public static final String SERIALIZED_NAME_PUNT_RETURN_LONG = "PuntReturnLong";
  @SerializedName(SERIALIZED_NAME_PUNT_RETURN_LONG)
  private BigDecimal puntReturnLong;

  public static final String SERIALIZED_NAME_PUNT_RETURN_TOUCHDOWNS = "PuntReturnTouchdowns";
  @SerializedName(SERIALIZED_NAME_PUNT_RETURN_TOUCHDOWNS)
  private BigDecimal puntReturnTouchdowns;

  public static final String SERIALIZED_NAME_PUNT_RETURN_YARDS = "PuntReturnYards";
  @SerializedName(SERIALIZED_NAME_PUNT_RETURN_YARDS)
  private BigDecimal puntReturnYards;

  public static final String SERIALIZED_NAME_PUNT_RETURN_YARDS_PER_ATTEMPT = "PuntReturnYardsPerAttempt";
  @SerializedName(SERIALIZED_NAME_PUNT_RETURN_YARDS_PER_ATTEMPT)
  private BigDecimal puntReturnYardsPerAttempt;

  public static final String SERIALIZED_NAME_PUNT_RETURNS = "PuntReturns";
  @SerializedName(SERIALIZED_NAME_PUNT_RETURNS)
  private BigDecimal puntReturns;

  public static final String SERIALIZED_NAME_PUNT_TOUCHBACKS = "PuntTouchbacks";
  @SerializedName(SERIALIZED_NAME_PUNT_TOUCHBACKS)
  private BigDecimal puntTouchbacks;

  public static final String SERIALIZED_NAME_PUNT_YARDS = "PuntYards";
  @SerializedName(SERIALIZED_NAME_PUNT_YARDS)
  private BigDecimal puntYards;

  public static final String SERIALIZED_NAME_PUNTS = "Punts";
  @SerializedName(SERIALIZED_NAME_PUNTS)
  private BigDecimal punts;

  public static final String SERIALIZED_NAME_PUNTS_HAD_BLOCKED = "PuntsHadBlocked";
  @SerializedName(SERIALIZED_NAME_PUNTS_HAD_BLOCKED)
  private BigDecimal puntsHadBlocked;

  public static final String SERIALIZED_NAME_QUARTERBACK_HITS = "QuarterbackHits";
  @SerializedName(SERIALIZED_NAME_QUARTERBACK_HITS)
  private BigDecimal quarterbackHits;

  public static final String SERIALIZED_NAME_RECEIVING_LONG = "ReceivingLong";
  @SerializedName(SERIALIZED_NAME_RECEIVING_LONG)
  private BigDecimal receivingLong;

  public static final String SERIALIZED_NAME_RECEIVING_TARGETS = "ReceivingTargets";
  @SerializedName(SERIALIZED_NAME_RECEIVING_TARGETS)
  private BigDecimal receivingTargets;

  public static final String SERIALIZED_NAME_RECEIVING_TOUCHDOWNS = "ReceivingTouchdowns";
  @SerializedName(SERIALIZED_NAME_RECEIVING_TOUCHDOWNS)
  private BigDecimal receivingTouchdowns;

  public static final String SERIALIZED_NAME_RECEIVING_YARDS = "ReceivingYards";
  @SerializedName(SERIALIZED_NAME_RECEIVING_YARDS)
  private BigDecimal receivingYards;

  public static final String SERIALIZED_NAME_RECEIVING_YARDS_PER_RECEPTION = "ReceivingYardsPerReception";
  @SerializedName(SERIALIZED_NAME_RECEIVING_YARDS_PER_RECEPTION)
  private BigDecimal receivingYardsPerReception;

  public static final String SERIALIZED_NAME_RECEIVING_YARDS_PER_TARGET = "ReceivingYardsPerTarget";
  @SerializedName(SERIALIZED_NAME_RECEIVING_YARDS_PER_TARGET)
  private BigDecimal receivingYardsPerTarget;

  public static final String SERIALIZED_NAME_RECEPTION_PERCENTAGE = "ReceptionPercentage";
  @SerializedName(SERIALIZED_NAME_RECEPTION_PERCENTAGE)
  private BigDecimal receptionPercentage;

  public static final String SERIALIZED_NAME_RECEPTIONS = "Receptions";
  @SerializedName(SERIALIZED_NAME_RECEPTIONS)
  private BigDecimal receptions;

  public static final String SERIALIZED_NAME_RUSHING_ATTEMPTS = "RushingAttempts";
  @SerializedName(SERIALIZED_NAME_RUSHING_ATTEMPTS)
  private BigDecimal rushingAttempts;

  public static final String SERIALIZED_NAME_RUSHING_LONG = "RushingLong";
  @SerializedName(SERIALIZED_NAME_RUSHING_LONG)
  private BigDecimal rushingLong;

  public static final String SERIALIZED_NAME_RUSHING_TOUCHDOWNS = "RushingTouchdowns";
  @SerializedName(SERIALIZED_NAME_RUSHING_TOUCHDOWNS)
  private BigDecimal rushingTouchdowns;

  public static final String SERIALIZED_NAME_RUSHING_YARDS = "RushingYards";
  @SerializedName(SERIALIZED_NAME_RUSHING_YARDS)
  private BigDecimal rushingYards;

  public static final String SERIALIZED_NAME_RUSHING_YARDS_PER_ATTEMPT = "RushingYardsPerAttempt";
  @SerializedName(SERIALIZED_NAME_RUSHING_YARDS_PER_ATTEMPT)
  private BigDecimal rushingYardsPerAttempt;

  public static final String SERIALIZED_NAME_SACK_YARDS = "SackYards";
  @SerializedName(SERIALIZED_NAME_SACK_YARDS)
  private BigDecimal sackYards;

  public static final String SERIALIZED_NAME_SACKS = "Sacks";
  @SerializedName(SERIALIZED_NAME_SACKS)
  private BigDecimal sacks;

  public static final String SERIALIZED_NAME_SAFETIES = "Safeties";
  @SerializedName(SERIALIZED_NAME_SAFETIES)
  private BigDecimal safeties;

  public static final String SERIALIZED_NAME_SAFETIES_ALLOWED = "SafetiesAllowed";
  @SerializedName(SERIALIZED_NAME_SAFETIES_ALLOWED)
  private BigDecimal safetiesAllowed;

  public static final String SERIALIZED_NAME_SCORE_I_D = "ScoreID";
  @SerializedName(SERIALIZED_NAME_SCORE_I_D)
  private Integer scoreID;

  public static final String SERIALIZED_NAME_SCORING_DETAILS = "ScoringDetails";
  @SerializedName(SERIALIZED_NAME_SCORING_DETAILS)
  private List<ScoringDetail> scoringDetails = new ArrayList<>();

  public static final String SERIALIZED_NAME_SEASON = "Season";
  @SerializedName(SERIALIZED_NAME_SEASON)
  private Integer season;

  public static final String SERIALIZED_NAME_SEASON_TYPE = "SeasonType";
  @SerializedName(SERIALIZED_NAME_SEASON_TYPE)
  private Integer seasonType;

  public static final String SERIALIZED_NAME_SHORT_NAME = "ShortName";
  @SerializedName(SERIALIZED_NAME_SHORT_NAME)
  private String shortName;

  public static final String SERIALIZED_NAME_SNAP_COUNTS_CONFIRMED = "SnapCountsConfirmed";
  @SerializedName(SERIALIZED_NAME_SNAP_COUNTS_CONFIRMED)
  private Boolean snapCountsConfirmed;

  public static final String SERIALIZED_NAME_SOLO_TACKLES = "SoloTackles";
  @SerializedName(SERIALIZED_NAME_SOLO_TACKLES)
  private BigDecimal soloTackles;

  public static final String SERIALIZED_NAME_SPECIAL_TEAMS_ASSISTED_TACKLES = "SpecialTeamsAssistedTackles";
  @SerializedName(SERIALIZED_NAME_SPECIAL_TEAMS_ASSISTED_TACKLES)
  private BigDecimal specialTeamsAssistedTackles;

  public static final String SERIALIZED_NAME_SPECIAL_TEAMS_FUMBLES_FORCED = "SpecialTeamsFumblesForced";
  @SerializedName(SERIALIZED_NAME_SPECIAL_TEAMS_FUMBLES_FORCED)
  private BigDecimal specialTeamsFumblesForced;

  public static final String SERIALIZED_NAME_SPECIAL_TEAMS_FUMBLES_RECOVERED = "SpecialTeamsFumblesRecovered";
  @SerializedName(SERIALIZED_NAME_SPECIAL_TEAMS_FUMBLES_RECOVERED)
  private BigDecimal specialTeamsFumblesRecovered;

  public static final String SERIALIZED_NAME_SPECIAL_TEAMS_SNAPS_PLAYED = "SpecialTeamsSnapsPlayed";
  @SerializedName(SERIALIZED_NAME_SPECIAL_TEAMS_SNAPS_PLAYED)
  private Integer specialTeamsSnapsPlayed;

  public static final String SERIALIZED_NAME_SPECIAL_TEAMS_SOLO_TACKLES = "SpecialTeamsSoloTackles";
  @SerializedName(SERIALIZED_NAME_SPECIAL_TEAMS_SOLO_TACKLES)
  private BigDecimal specialTeamsSoloTackles;

  public static final String SERIALIZED_NAME_SPECIAL_TEAMS_TEAM_SNAPS = "SpecialTeamsTeamSnaps";
  @SerializedName(SERIALIZED_NAME_SPECIAL_TEAMS_TEAM_SNAPS)
  private Integer specialTeamsTeamSnaps;

  public static final String SERIALIZED_NAME_SPECIAL_TEAMS_TOUCHDOWNS = "SpecialTeamsTouchdowns";
  @SerializedName(SERIALIZED_NAME_SPECIAL_TEAMS_TOUCHDOWNS)
  private BigDecimal specialTeamsTouchdowns;

  public static final String SERIALIZED_NAME_STADIUM = "Stadium";
  @SerializedName(SERIALIZED_NAME_STADIUM)
  private String stadium;

  public static final String SERIALIZED_NAME_STARTED = "Started";
  @SerializedName(SERIALIZED_NAME_STARTED)
  private Integer started;

  public static final String SERIALIZED_NAME_TACKLES = "Tackles";
  @SerializedName(SERIALIZED_NAME_TACKLES)
  private BigDecimal tackles;

  public static final String SERIALIZED_NAME_TACKLES_FOR_LOSS = "TacklesForLoss";
  @SerializedName(SERIALIZED_NAME_TACKLES_FOR_LOSS)
  private BigDecimal tacklesForLoss;

  public static final String SERIALIZED_NAME_TEAM = "Team";
  @SerializedName(SERIALIZED_NAME_TEAM)
  private String team;

  public static final String SERIALIZED_NAME_TEAM_I_D = "TeamID";
  @SerializedName(SERIALIZED_NAME_TEAM_I_D)
  private Integer teamID;

  public static final String SERIALIZED_NAME_TEMPERATURE = "Temperature";
  @SerializedName(SERIALIZED_NAME_TEMPERATURE)
  private Integer temperature;

  public static final String SERIALIZED_NAME_TOUCHDOWNS = "Touchdowns";
  @SerializedName(SERIALIZED_NAME_TOUCHDOWNS)
  private BigDecimal touchdowns;

  public static final String SERIALIZED_NAME_TWO_POINT_CONVERSION_PASSES = "TwoPointConversionPasses";
  @SerializedName(SERIALIZED_NAME_TWO_POINT_CONVERSION_PASSES)
  private BigDecimal twoPointConversionPasses;

  public static final String SERIALIZED_NAME_TWO_POINT_CONVERSION_RECEPTIONS = "TwoPointConversionReceptions";
  @SerializedName(SERIALIZED_NAME_TWO_POINT_CONVERSION_RECEPTIONS)
  private BigDecimal twoPointConversionReceptions;

  public static final String SERIALIZED_NAME_TWO_POINT_CONVERSION_RETURNS = "TwoPointConversionReturns";
  @SerializedName(SERIALIZED_NAME_TWO_POINT_CONVERSION_RETURNS)
  private BigDecimal twoPointConversionReturns;

  public static final String SERIALIZED_NAME_TWO_POINT_CONVERSION_RUNS = "TwoPointConversionRuns";
  @SerializedName(SERIALIZED_NAME_TWO_POINT_CONVERSION_RUNS)
  private BigDecimal twoPointConversionRuns;

  public static final String SERIALIZED_NAME_VICTIV_SALARY = "VictivSalary";
  @SerializedName(SERIALIZED_NAME_VICTIV_SALARY)
  private Integer victivSalary;

  public static final String SERIALIZED_NAME_WEEK = "Week";
  @SerializedName(SERIALIZED_NAME_WEEK)
  private Integer week;

  public static final String SERIALIZED_NAME_WIND_SPEED = "WindSpeed";
  @SerializedName(SERIALIZED_NAME_WIND_SPEED)
  private Integer windSpeed;

  public static final String SERIALIZED_NAME_YAHOO_POSITION = "YahooPosition";
  @SerializedName(SERIALIZED_NAME_YAHOO_POSITION)
  private String yahooPosition;

  public static final String SERIALIZED_NAME_YAHOO_SALARY = "YahooSalary";
  @SerializedName(SERIALIZED_NAME_YAHOO_SALARY)
  private Integer yahooSalary;

  public PlayerGame() {
  }

  public PlayerGame activated(Integer activated) {
    this.activated = activated;
    return this;
  }

  /**
   * Get activated
   * @return activated
   */
  @javax.annotation.Nullable
  public Integer getActivated() {
    return activated;
  }

  public void setActivated(Integer activated) {
    this.activated = activated;
  }


  public PlayerGame assistedTackles(BigDecimal assistedTackles) {
    this.assistedTackles = assistedTackles;
    return this;
  }

  /**
   * Get assistedTackles
   * @return assistedTackles
   */
  @javax.annotation.Nullable
  public BigDecimal getAssistedTackles() {
    return assistedTackles;
  }

  public void setAssistedTackles(BigDecimal assistedTackles) {
    this.assistedTackles = assistedTackles;
  }


  public PlayerGame blockedKickReturnTouchdowns(BigDecimal blockedKickReturnTouchdowns) {
    this.blockedKickReturnTouchdowns = blockedKickReturnTouchdowns;
    return this;
  }

  /**
   * Get blockedKickReturnTouchdowns
   * @return blockedKickReturnTouchdowns
   */
  @javax.annotation.Nullable
  public BigDecimal getBlockedKickReturnTouchdowns() {
    return blockedKickReturnTouchdowns;
  }

  public void setBlockedKickReturnTouchdowns(BigDecimal blockedKickReturnTouchdowns) {
    this.blockedKickReturnTouchdowns = blockedKickReturnTouchdowns;
  }


  public PlayerGame blockedKickReturnYards(BigDecimal blockedKickReturnYards) {
    this.blockedKickReturnYards = blockedKickReturnYards;
    return this;
  }

  /**
   * Get blockedKickReturnYards
   * @return blockedKickReturnYards
   */
  @javax.annotation.Nullable
  public BigDecimal getBlockedKickReturnYards() {
    return blockedKickReturnYards;
  }

  public void setBlockedKickReturnYards(BigDecimal blockedKickReturnYards) {
    this.blockedKickReturnYards = blockedKickReturnYards;
  }


  public PlayerGame blockedKicks(BigDecimal blockedKicks) {
    this.blockedKicks = blockedKicks;
    return this;
  }

  /**
   * Get blockedKicks
   * @return blockedKicks
   */
  @javax.annotation.Nullable
  public BigDecimal getBlockedKicks() {
    return blockedKicks;
  }

  public void setBlockedKicks(BigDecimal blockedKicks) {
    this.blockedKicks = blockedKicks;
  }


  public PlayerGame dateTime(String dateTime) {
    this.dateTime = dateTime;
    return this;
  }

  /**
   * Get dateTime
   * @return dateTime
   */
  @javax.annotation.Nullable
  public String getDateTime() {
    return dateTime;
  }

  public void setDateTime(String dateTime) {
    this.dateTime = dateTime;
  }


  public PlayerGame day(String day) {
    this.day = day;
    return this;
  }

  /**
   * Get day
   * @return day
   */
  @javax.annotation.Nullable
  public String getDay() {
    return day;
  }

  public void setDay(String day) {
    this.day = day;
  }


  public PlayerGame declaredInactive(Boolean declaredInactive) {
    this.declaredInactive = declaredInactive;
    return this;
  }

  /**
   * Get declaredInactive
   * @return declaredInactive
   */
  @javax.annotation.Nullable
  public Boolean getDeclaredInactive() {
    return declaredInactive;
  }

  public void setDeclaredInactive(Boolean declaredInactive) {
    this.declaredInactive = declaredInactive;
  }


  public PlayerGame defensiveSnapsPlayed(Integer defensiveSnapsPlayed) {
    this.defensiveSnapsPlayed = defensiveSnapsPlayed;
    return this;
  }

  /**
   * Get defensiveSnapsPlayed
   * @return defensiveSnapsPlayed
   */
  @javax.annotation.Nullable
  public Integer getDefensiveSnapsPlayed() {
    return defensiveSnapsPlayed;
  }

  public void setDefensiveSnapsPlayed(Integer defensiveSnapsPlayed) {
    this.defensiveSnapsPlayed = defensiveSnapsPlayed;
  }


  public PlayerGame defensiveTeamSnaps(Integer defensiveTeamSnaps) {
    this.defensiveTeamSnaps = defensiveTeamSnaps;
    return this;
  }

  /**
   * Get defensiveTeamSnaps
   * @return defensiveTeamSnaps
   */
  @javax.annotation.Nullable
  public Integer getDefensiveTeamSnaps() {
    return defensiveTeamSnaps;
  }

  public void setDefensiveTeamSnaps(Integer defensiveTeamSnaps) {
    this.defensiveTeamSnaps = defensiveTeamSnaps;
  }


  public PlayerGame defensiveTouchdowns(BigDecimal defensiveTouchdowns) {
    this.defensiveTouchdowns = defensiveTouchdowns;
    return this;
  }

  /**
   * Get defensiveTouchdowns
   * @return defensiveTouchdowns
   */
  @javax.annotation.Nullable
  public BigDecimal getDefensiveTouchdowns() {
    return defensiveTouchdowns;
  }

  public void setDefensiveTouchdowns(BigDecimal defensiveTouchdowns) {
    this.defensiveTouchdowns = defensiveTouchdowns;
  }


  public PlayerGame draftKingsPosition(String draftKingsPosition) {
    this.draftKingsPosition = draftKingsPosition;
    return this;
  }

  /**
   * Get draftKingsPosition
   * @return draftKingsPosition
   */
  @javax.annotation.Nullable
  public String getDraftKingsPosition() {
    return draftKingsPosition;
  }

  public void setDraftKingsPosition(String draftKingsPosition) {
    this.draftKingsPosition = draftKingsPosition;
  }


  public PlayerGame draftKingsSalary(Integer draftKingsSalary) {
    this.draftKingsSalary = draftKingsSalary;
    return this;
  }

  /**
   * Get draftKingsSalary
   * @return draftKingsSalary
   */
  @javax.annotation.Nullable
  public Integer getDraftKingsSalary() {
    return draftKingsSalary;
  }

  public void setDraftKingsSalary(Integer draftKingsSalary) {
    this.draftKingsSalary = draftKingsSalary;
  }


  public PlayerGame extraPointsAttempted(BigDecimal extraPointsAttempted) {
    this.extraPointsAttempted = extraPointsAttempted;
    return this;
  }

  /**
   * Get extraPointsAttempted
   * @return extraPointsAttempted
   */
  @javax.annotation.Nullable
  public BigDecimal getExtraPointsAttempted() {
    return extraPointsAttempted;
  }

  public void setExtraPointsAttempted(BigDecimal extraPointsAttempted) {
    this.extraPointsAttempted = extraPointsAttempted;
  }


  public PlayerGame extraPointsHadBlocked(BigDecimal extraPointsHadBlocked) {
    this.extraPointsHadBlocked = extraPointsHadBlocked;
    return this;
  }

  /**
   * Get extraPointsHadBlocked
   * @return extraPointsHadBlocked
   */
  @javax.annotation.Nullable
  public BigDecimal getExtraPointsHadBlocked() {
    return extraPointsHadBlocked;
  }

  public void setExtraPointsHadBlocked(BigDecimal extraPointsHadBlocked) {
    this.extraPointsHadBlocked = extraPointsHadBlocked;
  }


  public PlayerGame extraPointsMade(BigDecimal extraPointsMade) {
    this.extraPointsMade = extraPointsMade;
    return this;
  }

  /**
   * Get extraPointsMade
   * @return extraPointsMade
   */
  @javax.annotation.Nullable
  public BigDecimal getExtraPointsMade() {
    return extraPointsMade;
  }

  public void setExtraPointsMade(BigDecimal extraPointsMade) {
    this.extraPointsMade = extraPointsMade;
  }


  public PlayerGame fanDuelPosition(String fanDuelPosition) {
    this.fanDuelPosition = fanDuelPosition;
    return this;
  }

  /**
   * Get fanDuelPosition
   * @return fanDuelPosition
   */
  @javax.annotation.Nullable
  public String getFanDuelPosition() {
    return fanDuelPosition;
  }

  public void setFanDuelPosition(String fanDuelPosition) {
    this.fanDuelPosition = fanDuelPosition;
  }


  public PlayerGame fanDuelSalary(Integer fanDuelSalary) {
    this.fanDuelSalary = fanDuelSalary;
    return this;
  }

  /**
   * Get fanDuelSalary
   * @return fanDuelSalary
   */
  @javax.annotation.Nullable
  public Integer getFanDuelSalary() {
    return fanDuelSalary;
  }

  public void setFanDuelSalary(Integer fanDuelSalary) {
    this.fanDuelSalary = fanDuelSalary;
  }


  public PlayerGame fantasyDataSalary(Integer fantasyDataSalary) {
    this.fantasyDataSalary = fantasyDataSalary;
    return this;
  }

  /**
   * Get fantasyDataSalary
   * @return fantasyDataSalary
   */
  @javax.annotation.Nullable
  public Integer getFantasyDataSalary() {
    return fantasyDataSalary;
  }

  public void setFantasyDataSalary(Integer fantasyDataSalary) {
    this.fantasyDataSalary = fantasyDataSalary;
  }


  public PlayerGame fantasyDraftPosition(String fantasyDraftPosition) {
    this.fantasyDraftPosition = fantasyDraftPosition;
    return this;
  }

  /**
   * Get fantasyDraftPosition
   * @return fantasyDraftPosition
   */
  @javax.annotation.Nullable
  public String getFantasyDraftPosition() {
    return fantasyDraftPosition;
  }

  public void setFantasyDraftPosition(String fantasyDraftPosition) {
    this.fantasyDraftPosition = fantasyDraftPosition;
  }


  public PlayerGame fantasyDraftSalary(Integer fantasyDraftSalary) {
    this.fantasyDraftSalary = fantasyDraftSalary;
    return this;
  }

  /**
   * Get fantasyDraftSalary
   * @return fantasyDraftSalary
   */
  @javax.annotation.Nullable
  public Integer getFantasyDraftSalary() {
    return fantasyDraftSalary;
  }

  public void setFantasyDraftSalary(Integer fantasyDraftSalary) {
    this.fantasyDraftSalary = fantasyDraftSalary;
  }


  public PlayerGame fantasyPoints(BigDecimal fantasyPoints) {
    this.fantasyPoints = fantasyPoints;
    return this;
  }

  /**
   * Get fantasyPoints
   * @return fantasyPoints
   */
  @javax.annotation.Nullable
  public BigDecimal getFantasyPoints() {
    return fantasyPoints;
  }

  public void setFantasyPoints(BigDecimal fantasyPoints) {
    this.fantasyPoints = fantasyPoints;
  }


  public PlayerGame fantasyPointsDraftKings(BigDecimal fantasyPointsDraftKings) {
    this.fantasyPointsDraftKings = fantasyPointsDraftKings;
    return this;
  }

  /**
   * Get fantasyPointsDraftKings
   * @return fantasyPointsDraftKings
   */
  @javax.annotation.Nullable
  public BigDecimal getFantasyPointsDraftKings() {
    return fantasyPointsDraftKings;
  }

  public void setFantasyPointsDraftKings(BigDecimal fantasyPointsDraftKings) {
    this.fantasyPointsDraftKings = fantasyPointsDraftKings;
  }


  public PlayerGame fantasyPointsFanDuel(BigDecimal fantasyPointsFanDuel) {
    this.fantasyPointsFanDuel = fantasyPointsFanDuel;
    return this;
  }

  /**
   * Get fantasyPointsFanDuel
   * @return fantasyPointsFanDuel
   */
  @javax.annotation.Nullable
  public BigDecimal getFantasyPointsFanDuel() {
    return fantasyPointsFanDuel;
  }

  public void setFantasyPointsFanDuel(BigDecimal fantasyPointsFanDuel) {
    this.fantasyPointsFanDuel = fantasyPointsFanDuel;
  }


  public PlayerGame fantasyPointsFantasyDraft(BigDecimal fantasyPointsFantasyDraft) {
    this.fantasyPointsFantasyDraft = fantasyPointsFantasyDraft;
    return this;
  }

  /**
   * Get fantasyPointsFantasyDraft
   * @return fantasyPointsFantasyDraft
   */
  @javax.annotation.Nullable
  public BigDecimal getFantasyPointsFantasyDraft() {
    return fantasyPointsFantasyDraft;
  }

  public void setFantasyPointsFantasyDraft(BigDecimal fantasyPointsFantasyDraft) {
    this.fantasyPointsFantasyDraft = fantasyPointsFantasyDraft;
  }


  public PlayerGame fantasyPointsPPR(BigDecimal fantasyPointsPPR) {
    this.fantasyPointsPPR = fantasyPointsPPR;
    return this;
  }

  /**
   * Get fantasyPointsPPR
   * @return fantasyPointsPPR
   */
  @javax.annotation.Nullable
  public BigDecimal getFantasyPointsPPR() {
    return fantasyPointsPPR;
  }

  public void setFantasyPointsPPR(BigDecimal fantasyPointsPPR) {
    this.fantasyPointsPPR = fantasyPointsPPR;
  }


  public PlayerGame fantasyPointsYahoo(BigDecimal fantasyPointsYahoo) {
    this.fantasyPointsYahoo = fantasyPointsYahoo;
    return this;
  }

  /**
   * Get fantasyPointsYahoo
   * @return fantasyPointsYahoo
   */
  @javax.annotation.Nullable
  public BigDecimal getFantasyPointsYahoo() {
    return fantasyPointsYahoo;
  }

  public void setFantasyPointsYahoo(BigDecimal fantasyPointsYahoo) {
    this.fantasyPointsYahoo = fantasyPointsYahoo;
  }


  public PlayerGame fantasyPosition(String fantasyPosition) {
    this.fantasyPosition = fantasyPosition;
    return this;
  }

  /**
   * Get fantasyPosition
   * @return fantasyPosition
   */
  @javax.annotation.Nullable
  public String getFantasyPosition() {
    return fantasyPosition;
  }

  public void setFantasyPosition(String fantasyPosition) {
    this.fantasyPosition = fantasyPosition;
  }


  public PlayerGame fieldGoalPercentage(BigDecimal fieldGoalPercentage) {
    this.fieldGoalPercentage = fieldGoalPercentage;
    return this;
  }

  /**
   * Get fieldGoalPercentage
   * @return fieldGoalPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getFieldGoalPercentage() {
    return fieldGoalPercentage;
  }

  public void setFieldGoalPercentage(BigDecimal fieldGoalPercentage) {
    this.fieldGoalPercentage = fieldGoalPercentage;
  }


  public PlayerGame fieldGoalReturnTouchdowns(BigDecimal fieldGoalReturnTouchdowns) {
    this.fieldGoalReturnTouchdowns = fieldGoalReturnTouchdowns;
    return this;
  }

  /**
   * Get fieldGoalReturnTouchdowns
   * @return fieldGoalReturnTouchdowns
   */
  @javax.annotation.Nullable
  public BigDecimal getFieldGoalReturnTouchdowns() {
    return fieldGoalReturnTouchdowns;
  }

  public void setFieldGoalReturnTouchdowns(BigDecimal fieldGoalReturnTouchdowns) {
    this.fieldGoalReturnTouchdowns = fieldGoalReturnTouchdowns;
  }


  public PlayerGame fieldGoalReturnYards(BigDecimal fieldGoalReturnYards) {
    this.fieldGoalReturnYards = fieldGoalReturnYards;
    return this;
  }

  /**
   * Get fieldGoalReturnYards
   * @return fieldGoalReturnYards
   */
  @javax.annotation.Nullable
  public BigDecimal getFieldGoalReturnYards() {
    return fieldGoalReturnYards;
  }

  public void setFieldGoalReturnYards(BigDecimal fieldGoalReturnYards) {
    this.fieldGoalReturnYards = fieldGoalReturnYards;
  }


  public PlayerGame fieldGoalsAttempted(BigDecimal fieldGoalsAttempted) {
    this.fieldGoalsAttempted = fieldGoalsAttempted;
    return this;
  }

  /**
   * Get fieldGoalsAttempted
   * @return fieldGoalsAttempted
   */
  @javax.annotation.Nullable
  public BigDecimal getFieldGoalsAttempted() {
    return fieldGoalsAttempted;
  }

  public void setFieldGoalsAttempted(BigDecimal fieldGoalsAttempted) {
    this.fieldGoalsAttempted = fieldGoalsAttempted;
  }


  public PlayerGame fieldGoalsHadBlocked(BigDecimal fieldGoalsHadBlocked) {
    this.fieldGoalsHadBlocked = fieldGoalsHadBlocked;
    return this;
  }

  /**
   * Get fieldGoalsHadBlocked
   * @return fieldGoalsHadBlocked
   */
  @javax.annotation.Nullable
  public BigDecimal getFieldGoalsHadBlocked() {
    return fieldGoalsHadBlocked;
  }

  public void setFieldGoalsHadBlocked(BigDecimal fieldGoalsHadBlocked) {
    this.fieldGoalsHadBlocked = fieldGoalsHadBlocked;
  }


  public PlayerGame fieldGoalsLongestMade(BigDecimal fieldGoalsLongestMade) {
    this.fieldGoalsLongestMade = fieldGoalsLongestMade;
    return this;
  }

  /**
   * Get fieldGoalsLongestMade
   * @return fieldGoalsLongestMade
   */
  @javax.annotation.Nullable
  public BigDecimal getFieldGoalsLongestMade() {
    return fieldGoalsLongestMade;
  }

  public void setFieldGoalsLongestMade(BigDecimal fieldGoalsLongestMade) {
    this.fieldGoalsLongestMade = fieldGoalsLongestMade;
  }


  public PlayerGame fieldGoalsMade(BigDecimal fieldGoalsMade) {
    this.fieldGoalsMade = fieldGoalsMade;
    return this;
  }

  /**
   * Get fieldGoalsMade
   * @return fieldGoalsMade
   */
  @javax.annotation.Nullable
  public BigDecimal getFieldGoalsMade() {
    return fieldGoalsMade;
  }

  public void setFieldGoalsMade(BigDecimal fieldGoalsMade) {
    this.fieldGoalsMade = fieldGoalsMade;
  }


  public PlayerGame fieldGoalsMade0to19(BigDecimal fieldGoalsMade0to19) {
    this.fieldGoalsMade0to19 = fieldGoalsMade0to19;
    return this;
  }

  /**
   * Get fieldGoalsMade0to19
   * @return fieldGoalsMade0to19
   */
  @javax.annotation.Nullable
  public BigDecimal getFieldGoalsMade0to19() {
    return fieldGoalsMade0to19;
  }

  public void setFieldGoalsMade0to19(BigDecimal fieldGoalsMade0to19) {
    this.fieldGoalsMade0to19 = fieldGoalsMade0to19;
  }


  public PlayerGame fieldGoalsMade20to29(BigDecimal fieldGoalsMade20to29) {
    this.fieldGoalsMade20to29 = fieldGoalsMade20to29;
    return this;
  }

  /**
   * Get fieldGoalsMade20to29
   * @return fieldGoalsMade20to29
   */
  @javax.annotation.Nullable
  public BigDecimal getFieldGoalsMade20to29() {
    return fieldGoalsMade20to29;
  }

  public void setFieldGoalsMade20to29(BigDecimal fieldGoalsMade20to29) {
    this.fieldGoalsMade20to29 = fieldGoalsMade20to29;
  }


  public PlayerGame fieldGoalsMade30to39(BigDecimal fieldGoalsMade30to39) {
    this.fieldGoalsMade30to39 = fieldGoalsMade30to39;
    return this;
  }

  /**
   * Get fieldGoalsMade30to39
   * @return fieldGoalsMade30to39
   */
  @javax.annotation.Nullable
  public BigDecimal getFieldGoalsMade30to39() {
    return fieldGoalsMade30to39;
  }

  public void setFieldGoalsMade30to39(BigDecimal fieldGoalsMade30to39) {
    this.fieldGoalsMade30to39 = fieldGoalsMade30to39;
  }


  public PlayerGame fieldGoalsMade40to49(BigDecimal fieldGoalsMade40to49) {
    this.fieldGoalsMade40to49 = fieldGoalsMade40to49;
    return this;
  }

  /**
   * Get fieldGoalsMade40to49
   * @return fieldGoalsMade40to49
   */
  @javax.annotation.Nullable
  public BigDecimal getFieldGoalsMade40to49() {
    return fieldGoalsMade40to49;
  }

  public void setFieldGoalsMade40to49(BigDecimal fieldGoalsMade40to49) {
    this.fieldGoalsMade40to49 = fieldGoalsMade40to49;
  }


  public PlayerGame fieldGoalsMade50Plus(BigDecimal fieldGoalsMade50Plus) {
    this.fieldGoalsMade50Plus = fieldGoalsMade50Plus;
    return this;
  }

  /**
   * Get fieldGoalsMade50Plus
   * @return fieldGoalsMade50Plus
   */
  @javax.annotation.Nullable
  public BigDecimal getFieldGoalsMade50Plus() {
    return fieldGoalsMade50Plus;
  }

  public void setFieldGoalsMade50Plus(BigDecimal fieldGoalsMade50Plus) {
    this.fieldGoalsMade50Plus = fieldGoalsMade50Plus;
  }


  public PlayerGame fumbleReturnTouchdowns(BigDecimal fumbleReturnTouchdowns) {
    this.fumbleReturnTouchdowns = fumbleReturnTouchdowns;
    return this;
  }

  /**
   * Get fumbleReturnTouchdowns
   * @return fumbleReturnTouchdowns
   */
  @javax.annotation.Nullable
  public BigDecimal getFumbleReturnTouchdowns() {
    return fumbleReturnTouchdowns;
  }

  public void setFumbleReturnTouchdowns(BigDecimal fumbleReturnTouchdowns) {
    this.fumbleReturnTouchdowns = fumbleReturnTouchdowns;
  }


  public PlayerGame fumbleReturnYards(BigDecimal fumbleReturnYards) {
    this.fumbleReturnYards = fumbleReturnYards;
    return this;
  }

  /**
   * Get fumbleReturnYards
   * @return fumbleReturnYards
   */
  @javax.annotation.Nullable
  public BigDecimal getFumbleReturnYards() {
    return fumbleReturnYards;
  }

  public void setFumbleReturnYards(BigDecimal fumbleReturnYards) {
    this.fumbleReturnYards = fumbleReturnYards;
  }


  public PlayerGame fumbles(BigDecimal fumbles) {
    this.fumbles = fumbles;
    return this;
  }

  /**
   * Get fumbles
   * @return fumbles
   */
  @javax.annotation.Nullable
  public BigDecimal getFumbles() {
    return fumbles;
  }

  public void setFumbles(BigDecimal fumbles) {
    this.fumbles = fumbles;
  }


  public PlayerGame fumblesForced(BigDecimal fumblesForced) {
    this.fumblesForced = fumblesForced;
    return this;
  }

  /**
   * Get fumblesForced
   * @return fumblesForced
   */
  @javax.annotation.Nullable
  public BigDecimal getFumblesForced() {
    return fumblesForced;
  }

  public void setFumblesForced(BigDecimal fumblesForced) {
    this.fumblesForced = fumblesForced;
  }


  public PlayerGame fumblesLost(BigDecimal fumblesLost) {
    this.fumblesLost = fumblesLost;
    return this;
  }

  /**
   * Get fumblesLost
   * @return fumblesLost
   */
  @javax.annotation.Nullable
  public BigDecimal getFumblesLost() {
    return fumblesLost;
  }

  public void setFumblesLost(BigDecimal fumblesLost) {
    this.fumblesLost = fumblesLost;
  }


  public PlayerGame fumblesOutOfBounds(BigDecimal fumblesOutOfBounds) {
    this.fumblesOutOfBounds = fumblesOutOfBounds;
    return this;
  }

  /**
   * Get fumblesOutOfBounds
   * @return fumblesOutOfBounds
   */
  @javax.annotation.Nullable
  public BigDecimal getFumblesOutOfBounds() {
    return fumblesOutOfBounds;
  }

  public void setFumblesOutOfBounds(BigDecimal fumblesOutOfBounds) {
    this.fumblesOutOfBounds = fumblesOutOfBounds;
  }


  public PlayerGame fumblesOwnRecoveries(BigDecimal fumblesOwnRecoveries) {
    this.fumblesOwnRecoveries = fumblesOwnRecoveries;
    return this;
  }

  /**
   * Get fumblesOwnRecoveries
   * @return fumblesOwnRecoveries
   */
  @javax.annotation.Nullable
  public BigDecimal getFumblesOwnRecoveries() {
    return fumblesOwnRecoveries;
  }

  public void setFumblesOwnRecoveries(BigDecimal fumblesOwnRecoveries) {
    this.fumblesOwnRecoveries = fumblesOwnRecoveries;
  }


  public PlayerGame fumblesRecovered(BigDecimal fumblesRecovered) {
    this.fumblesRecovered = fumblesRecovered;
    return this;
  }

  /**
   * Get fumblesRecovered
   * @return fumblesRecovered
   */
  @javax.annotation.Nullable
  public BigDecimal getFumblesRecovered() {
    return fumblesRecovered;
  }

  public void setFumblesRecovered(BigDecimal fumblesRecovered) {
    this.fumblesRecovered = fumblesRecovered;
  }


  public PlayerGame gameDate(String gameDate) {
    this.gameDate = gameDate;
    return this;
  }

  /**
   * Get gameDate
   * @return gameDate
   */
  @javax.annotation.Nullable
  public String getGameDate() {
    return gameDate;
  }

  public void setGameDate(String gameDate) {
    this.gameDate = gameDate;
  }


  public PlayerGame gameKey(String gameKey) {
    this.gameKey = gameKey;
    return this;
  }

  /**
   * Get gameKey
   * @return gameKey
   */
  @javax.annotation.Nullable
  public String getGameKey() {
    return gameKey;
  }

  public void setGameKey(String gameKey) {
    this.gameKey = gameKey;
  }


  public PlayerGame globalGameID(Integer globalGameID) {
    this.globalGameID = globalGameID;
    return this;
  }

  /**
   * Get globalGameID
   * @return globalGameID
   */
  @javax.annotation.Nullable
  public Integer getGlobalGameID() {
    return globalGameID;
  }

  public void setGlobalGameID(Integer globalGameID) {
    this.globalGameID = globalGameID;
  }


  public PlayerGame globalOpponentID(Integer globalOpponentID) {
    this.globalOpponentID = globalOpponentID;
    return this;
  }

  /**
   * Get globalOpponentID
   * @return globalOpponentID
   */
  @javax.annotation.Nullable
  public Integer getGlobalOpponentID() {
    return globalOpponentID;
  }

  public void setGlobalOpponentID(Integer globalOpponentID) {
    this.globalOpponentID = globalOpponentID;
  }


  public PlayerGame globalTeamID(Integer globalTeamID) {
    this.globalTeamID = globalTeamID;
    return this;
  }

  /**
   * Get globalTeamID
   * @return globalTeamID
   */
  @javax.annotation.Nullable
  public Integer getGlobalTeamID() {
    return globalTeamID;
  }

  public void setGlobalTeamID(Integer globalTeamID) {
    this.globalTeamID = globalTeamID;
  }


  public PlayerGame homeOrAway(String homeOrAway) {
    this.homeOrAway = homeOrAway;
    return this;
  }

  /**
   * Get homeOrAway
   * @return homeOrAway
   */
  @javax.annotation.Nullable
  public String getHomeOrAway() {
    return homeOrAway;
  }

  public void setHomeOrAway(String homeOrAway) {
    this.homeOrAway = homeOrAway;
  }


  public PlayerGame humidity(Integer humidity) {
    this.humidity = humidity;
    return this;
  }

  /**
   * Get humidity
   * @return humidity
   */
  @javax.annotation.Nullable
  public Integer getHumidity() {
    return humidity;
  }

  public void setHumidity(Integer humidity) {
    this.humidity = humidity;
  }


  public PlayerGame injuryBodyPart(String injuryBodyPart) {
    this.injuryBodyPart = injuryBodyPart;
    return this;
  }

  /**
   * Get injuryBodyPart
   * @return injuryBodyPart
   */
  @javax.annotation.Nullable
  public String getInjuryBodyPart() {
    return injuryBodyPart;
  }

  public void setInjuryBodyPart(String injuryBodyPart) {
    this.injuryBodyPart = injuryBodyPart;
  }


  public PlayerGame injuryNotes(String injuryNotes) {
    this.injuryNotes = injuryNotes;
    return this;
  }

  /**
   * Get injuryNotes
   * @return injuryNotes
   */
  @javax.annotation.Nullable
  public String getInjuryNotes() {
    return injuryNotes;
  }

  public void setInjuryNotes(String injuryNotes) {
    this.injuryNotes = injuryNotes;
  }


  public PlayerGame injuryPractice(String injuryPractice) {
    this.injuryPractice = injuryPractice;
    return this;
  }

  /**
   * Get injuryPractice
   * @return injuryPractice
   */
  @javax.annotation.Nullable
  public String getInjuryPractice() {
    return injuryPractice;
  }

  public void setInjuryPractice(String injuryPractice) {
    this.injuryPractice = injuryPractice;
  }


  public PlayerGame injuryPracticeDescription(String injuryPracticeDescription) {
    this.injuryPracticeDescription = injuryPracticeDescription;
    return this;
  }

  /**
   * Get injuryPracticeDescription
   * @return injuryPracticeDescription
   */
  @javax.annotation.Nullable
  public String getInjuryPracticeDescription() {
    return injuryPracticeDescription;
  }

  public void setInjuryPracticeDescription(String injuryPracticeDescription) {
    this.injuryPracticeDescription = injuryPracticeDescription;
  }


  public PlayerGame injuryStartDate(String injuryStartDate) {
    this.injuryStartDate = injuryStartDate;
    return this;
  }

  /**
   * Get injuryStartDate
   * @return injuryStartDate
   */
  @javax.annotation.Nullable
  public String getInjuryStartDate() {
    return injuryStartDate;
  }

  public void setInjuryStartDate(String injuryStartDate) {
    this.injuryStartDate = injuryStartDate;
  }


  public PlayerGame injuryStatus(String injuryStatus) {
    this.injuryStatus = injuryStatus;
    return this;
  }

  /**
   * Get injuryStatus
   * @return injuryStatus
   */
  @javax.annotation.Nullable
  public String getInjuryStatus() {
    return injuryStatus;
  }

  public void setInjuryStatus(String injuryStatus) {
    this.injuryStatus = injuryStatus;
  }


  public PlayerGame interceptionReturnTouchdowns(BigDecimal interceptionReturnTouchdowns) {
    this.interceptionReturnTouchdowns = interceptionReturnTouchdowns;
    return this;
  }

  /**
   * Get interceptionReturnTouchdowns
   * @return interceptionReturnTouchdowns
   */
  @javax.annotation.Nullable
  public BigDecimal getInterceptionReturnTouchdowns() {
    return interceptionReturnTouchdowns;
  }

  public void setInterceptionReturnTouchdowns(BigDecimal interceptionReturnTouchdowns) {
    this.interceptionReturnTouchdowns = interceptionReturnTouchdowns;
  }


  public PlayerGame interceptionReturnYards(BigDecimal interceptionReturnYards) {
    this.interceptionReturnYards = interceptionReturnYards;
    return this;
  }

  /**
   * Get interceptionReturnYards
   * @return interceptionReturnYards
   */
  @javax.annotation.Nullable
  public BigDecimal getInterceptionReturnYards() {
    return interceptionReturnYards;
  }

  public void setInterceptionReturnYards(BigDecimal interceptionReturnYards) {
    this.interceptionReturnYards = interceptionReturnYards;
  }


  public PlayerGame interceptions(BigDecimal interceptions) {
    this.interceptions = interceptions;
    return this;
  }

  /**
   * Get interceptions
   * @return interceptions
   */
  @javax.annotation.Nullable
  public BigDecimal getInterceptions() {
    return interceptions;
  }

  public void setInterceptions(BigDecimal interceptions) {
    this.interceptions = interceptions;
  }


  public PlayerGame isGameOver(Boolean isGameOver) {
    this.isGameOver = isGameOver;
    return this;
  }

  /**
   * Get isGameOver
   * @return isGameOver
   */
  @javax.annotation.Nullable
  public Boolean getIsGameOver() {
    return isGameOver;
  }

  public void setIsGameOver(Boolean isGameOver) {
    this.isGameOver = isGameOver;
  }


  public PlayerGame kickReturnFairCatches(BigDecimal kickReturnFairCatches) {
    this.kickReturnFairCatches = kickReturnFairCatches;
    return this;
  }

  /**
   * Get kickReturnFairCatches
   * @return kickReturnFairCatches
   */
  @javax.annotation.Nullable
  public BigDecimal getKickReturnFairCatches() {
    return kickReturnFairCatches;
  }

  public void setKickReturnFairCatches(BigDecimal kickReturnFairCatches) {
    this.kickReturnFairCatches = kickReturnFairCatches;
  }


  public PlayerGame kickReturnLong(BigDecimal kickReturnLong) {
    this.kickReturnLong = kickReturnLong;
    return this;
  }

  /**
   * Get kickReturnLong
   * @return kickReturnLong
   */
  @javax.annotation.Nullable
  public BigDecimal getKickReturnLong() {
    return kickReturnLong;
  }

  public void setKickReturnLong(BigDecimal kickReturnLong) {
    this.kickReturnLong = kickReturnLong;
  }


  public PlayerGame kickReturnTouchdowns(BigDecimal kickReturnTouchdowns) {
    this.kickReturnTouchdowns = kickReturnTouchdowns;
    return this;
  }

  /**
   * Get kickReturnTouchdowns
   * @return kickReturnTouchdowns
   */
  @javax.annotation.Nullable
  public BigDecimal getKickReturnTouchdowns() {
    return kickReturnTouchdowns;
  }

  public void setKickReturnTouchdowns(BigDecimal kickReturnTouchdowns) {
    this.kickReturnTouchdowns = kickReturnTouchdowns;
  }


  public PlayerGame kickReturnYards(BigDecimal kickReturnYards) {
    this.kickReturnYards = kickReturnYards;
    return this;
  }

  /**
   * Get kickReturnYards
   * @return kickReturnYards
   */
  @javax.annotation.Nullable
  public BigDecimal getKickReturnYards() {
    return kickReturnYards;
  }

  public void setKickReturnYards(BigDecimal kickReturnYards) {
    this.kickReturnYards = kickReturnYards;
  }


  public PlayerGame kickReturnYardsPerAttempt(BigDecimal kickReturnYardsPerAttempt) {
    this.kickReturnYardsPerAttempt = kickReturnYardsPerAttempt;
    return this;
  }

  /**
   * Get kickReturnYardsPerAttempt
   * @return kickReturnYardsPerAttempt
   */
  @javax.annotation.Nullable
  public BigDecimal getKickReturnYardsPerAttempt() {
    return kickReturnYardsPerAttempt;
  }

  public void setKickReturnYardsPerAttempt(BigDecimal kickReturnYardsPerAttempt) {
    this.kickReturnYardsPerAttempt = kickReturnYardsPerAttempt;
  }


  public PlayerGame kickReturns(BigDecimal kickReturns) {
    this.kickReturns = kickReturns;
    return this;
  }

  /**
   * Get kickReturns
   * @return kickReturns
   */
  @javax.annotation.Nullable
  public BigDecimal getKickReturns() {
    return kickReturns;
  }

  public void setKickReturns(BigDecimal kickReturns) {
    this.kickReturns = kickReturns;
  }


  public PlayerGame miscAssistedTackles(BigDecimal miscAssistedTackles) {
    this.miscAssistedTackles = miscAssistedTackles;
    return this;
  }

  /**
   * Get miscAssistedTackles
   * @return miscAssistedTackles
   */
  @javax.annotation.Nullable
  public BigDecimal getMiscAssistedTackles() {
    return miscAssistedTackles;
  }

  public void setMiscAssistedTackles(BigDecimal miscAssistedTackles) {
    this.miscAssistedTackles = miscAssistedTackles;
  }


  public PlayerGame miscFumblesForced(BigDecimal miscFumblesForced) {
    this.miscFumblesForced = miscFumblesForced;
    return this;
  }

  /**
   * Get miscFumblesForced
   * @return miscFumblesForced
   */
  @javax.annotation.Nullable
  public BigDecimal getMiscFumblesForced() {
    return miscFumblesForced;
  }

  public void setMiscFumblesForced(BigDecimal miscFumblesForced) {
    this.miscFumblesForced = miscFumblesForced;
  }


  public PlayerGame miscFumblesRecovered(BigDecimal miscFumblesRecovered) {
    this.miscFumblesRecovered = miscFumblesRecovered;
    return this;
  }

  /**
   * Get miscFumblesRecovered
   * @return miscFumblesRecovered
   */
  @javax.annotation.Nullable
  public BigDecimal getMiscFumblesRecovered() {
    return miscFumblesRecovered;
  }

  public void setMiscFumblesRecovered(BigDecimal miscFumblesRecovered) {
    this.miscFumblesRecovered = miscFumblesRecovered;
  }


  public PlayerGame miscSoloTackles(BigDecimal miscSoloTackles) {
    this.miscSoloTackles = miscSoloTackles;
    return this;
  }

  /**
   * Get miscSoloTackles
   * @return miscSoloTackles
   */
  @javax.annotation.Nullable
  public BigDecimal getMiscSoloTackles() {
    return miscSoloTackles;
  }

  public void setMiscSoloTackles(BigDecimal miscSoloTackles) {
    this.miscSoloTackles = miscSoloTackles;
  }


  public PlayerGame name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public PlayerGame number(Integer number) {
    this.number = number;
    return this;
  }

  /**
   * Get number
   * @return number
   */
  @javax.annotation.Nullable
  public Integer getNumber() {
    return number;
  }

  public void setNumber(Integer number) {
    this.number = number;
  }


  public PlayerGame offensiveFumbleRecoveryTouchdowns(BigDecimal offensiveFumbleRecoveryTouchdowns) {
    this.offensiveFumbleRecoveryTouchdowns = offensiveFumbleRecoveryTouchdowns;
    return this;
  }

  /**
   * Get offensiveFumbleRecoveryTouchdowns
   * @return offensiveFumbleRecoveryTouchdowns
   */
  @javax.annotation.Nullable
  public BigDecimal getOffensiveFumbleRecoveryTouchdowns() {
    return offensiveFumbleRecoveryTouchdowns;
  }

  public void setOffensiveFumbleRecoveryTouchdowns(BigDecimal offensiveFumbleRecoveryTouchdowns) {
    this.offensiveFumbleRecoveryTouchdowns = offensiveFumbleRecoveryTouchdowns;
  }


  public PlayerGame offensiveSnapsPlayed(Integer offensiveSnapsPlayed) {
    this.offensiveSnapsPlayed = offensiveSnapsPlayed;
    return this;
  }

  /**
   * Get offensiveSnapsPlayed
   * @return offensiveSnapsPlayed
   */
  @javax.annotation.Nullable
  public Integer getOffensiveSnapsPlayed() {
    return offensiveSnapsPlayed;
  }

  public void setOffensiveSnapsPlayed(Integer offensiveSnapsPlayed) {
    this.offensiveSnapsPlayed = offensiveSnapsPlayed;
  }


  public PlayerGame offensiveTeamSnaps(Integer offensiveTeamSnaps) {
    this.offensiveTeamSnaps = offensiveTeamSnaps;
    return this;
  }

  /**
   * Get offensiveTeamSnaps
   * @return offensiveTeamSnaps
   */
  @javax.annotation.Nullable
  public Integer getOffensiveTeamSnaps() {
    return offensiveTeamSnaps;
  }

  public void setOffensiveTeamSnaps(Integer offensiveTeamSnaps) {
    this.offensiveTeamSnaps = offensiveTeamSnaps;
  }


  public PlayerGame offensiveTouchdowns(BigDecimal offensiveTouchdowns) {
    this.offensiveTouchdowns = offensiveTouchdowns;
    return this;
  }

  /**
   * Get offensiveTouchdowns
   * @return offensiveTouchdowns
   */
  @javax.annotation.Nullable
  public BigDecimal getOffensiveTouchdowns() {
    return offensiveTouchdowns;
  }

  public void setOffensiveTouchdowns(BigDecimal offensiveTouchdowns) {
    this.offensiveTouchdowns = offensiveTouchdowns;
  }


  public PlayerGame opponent(String opponent) {
    this.opponent = opponent;
    return this;
  }

  /**
   * Get opponent
   * @return opponent
   */
  @javax.annotation.Nullable
  public String getOpponent() {
    return opponent;
  }

  public void setOpponent(String opponent) {
    this.opponent = opponent;
  }


  public PlayerGame opponentID(Integer opponentID) {
    this.opponentID = opponentID;
    return this;
  }

  /**
   * Get opponentID
   * @return opponentID
   */
  @javax.annotation.Nullable
  public Integer getOpponentID() {
    return opponentID;
  }

  public void setOpponentID(Integer opponentID) {
    this.opponentID = opponentID;
  }


  public PlayerGame opponentPositionRank(Integer opponentPositionRank) {
    this.opponentPositionRank = opponentPositionRank;
    return this;
  }

  /**
   * Get opponentPositionRank
   * @return opponentPositionRank
   */
  @javax.annotation.Nullable
  public Integer getOpponentPositionRank() {
    return opponentPositionRank;
  }

  public void setOpponentPositionRank(Integer opponentPositionRank) {
    this.opponentPositionRank = opponentPositionRank;
  }


  public PlayerGame opponentRank(Integer opponentRank) {
    this.opponentRank = opponentRank;
    return this;
  }

  /**
   * Get opponentRank
   * @return opponentRank
   */
  @javax.annotation.Nullable
  public Integer getOpponentRank() {
    return opponentRank;
  }

  public void setOpponentRank(Integer opponentRank) {
    this.opponentRank = opponentRank;
  }


  public PlayerGame passesDefended(BigDecimal passesDefended) {
    this.passesDefended = passesDefended;
    return this;
  }

  /**
   * Get passesDefended
   * @return passesDefended
   */
  @javax.annotation.Nullable
  public BigDecimal getPassesDefended() {
    return passesDefended;
  }

  public void setPassesDefended(BigDecimal passesDefended) {
    this.passesDefended = passesDefended;
  }


  public PlayerGame passingAttempts(BigDecimal passingAttempts) {
    this.passingAttempts = passingAttempts;
    return this;
  }

  /**
   * Get passingAttempts
   * @return passingAttempts
   */
  @javax.annotation.Nullable
  public BigDecimal getPassingAttempts() {
    return passingAttempts;
  }

  public void setPassingAttempts(BigDecimal passingAttempts) {
    this.passingAttempts = passingAttempts;
  }


  public PlayerGame passingCompletionPercentage(BigDecimal passingCompletionPercentage) {
    this.passingCompletionPercentage = passingCompletionPercentage;
    return this;
  }

  /**
   * Get passingCompletionPercentage
   * @return passingCompletionPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getPassingCompletionPercentage() {
    return passingCompletionPercentage;
  }

  public void setPassingCompletionPercentage(BigDecimal passingCompletionPercentage) {
    this.passingCompletionPercentage = passingCompletionPercentage;
  }


  public PlayerGame passingCompletions(BigDecimal passingCompletions) {
    this.passingCompletions = passingCompletions;
    return this;
  }

  /**
   * Get passingCompletions
   * @return passingCompletions
   */
  @javax.annotation.Nullable
  public BigDecimal getPassingCompletions() {
    return passingCompletions;
  }

  public void setPassingCompletions(BigDecimal passingCompletions) {
    this.passingCompletions = passingCompletions;
  }


  public PlayerGame passingInterceptions(BigDecimal passingInterceptions) {
    this.passingInterceptions = passingInterceptions;
    return this;
  }

  /**
   * Get passingInterceptions
   * @return passingInterceptions
   */
  @javax.annotation.Nullable
  public BigDecimal getPassingInterceptions() {
    return passingInterceptions;
  }

  public void setPassingInterceptions(BigDecimal passingInterceptions) {
    this.passingInterceptions = passingInterceptions;
  }


  public PlayerGame passingLong(BigDecimal passingLong) {
    this.passingLong = passingLong;
    return this;
  }

  /**
   * Get passingLong
   * @return passingLong
   */
  @javax.annotation.Nullable
  public BigDecimal getPassingLong() {
    return passingLong;
  }

  public void setPassingLong(BigDecimal passingLong) {
    this.passingLong = passingLong;
  }


  public PlayerGame passingRating(BigDecimal passingRating) {
    this.passingRating = passingRating;
    return this;
  }

  /**
   * Get passingRating
   * @return passingRating
   */
  @javax.annotation.Nullable
  public BigDecimal getPassingRating() {
    return passingRating;
  }

  public void setPassingRating(BigDecimal passingRating) {
    this.passingRating = passingRating;
  }


  public PlayerGame passingSackYards(BigDecimal passingSackYards) {
    this.passingSackYards = passingSackYards;
    return this;
  }

  /**
   * Get passingSackYards
   * @return passingSackYards
   */
  @javax.annotation.Nullable
  public BigDecimal getPassingSackYards() {
    return passingSackYards;
  }

  public void setPassingSackYards(BigDecimal passingSackYards) {
    this.passingSackYards = passingSackYards;
  }


  public PlayerGame passingSacks(BigDecimal passingSacks) {
    this.passingSacks = passingSacks;
    return this;
  }

  /**
   * Get passingSacks
   * @return passingSacks
   */
  @javax.annotation.Nullable
  public BigDecimal getPassingSacks() {
    return passingSacks;
  }

  public void setPassingSacks(BigDecimal passingSacks) {
    this.passingSacks = passingSacks;
  }


  public PlayerGame passingTouchdowns(BigDecimal passingTouchdowns) {
    this.passingTouchdowns = passingTouchdowns;
    return this;
  }

  /**
   * Get passingTouchdowns
   * @return passingTouchdowns
   */
  @javax.annotation.Nullable
  public BigDecimal getPassingTouchdowns() {
    return passingTouchdowns;
  }

  public void setPassingTouchdowns(BigDecimal passingTouchdowns) {
    this.passingTouchdowns = passingTouchdowns;
  }


  public PlayerGame passingYards(BigDecimal passingYards) {
    this.passingYards = passingYards;
    return this;
  }

  /**
   * Get passingYards
   * @return passingYards
   */
  @javax.annotation.Nullable
  public BigDecimal getPassingYards() {
    return passingYards;
  }

  public void setPassingYards(BigDecimal passingYards) {
    this.passingYards = passingYards;
  }


  public PlayerGame passingYardsPerAttempt(BigDecimal passingYardsPerAttempt) {
    this.passingYardsPerAttempt = passingYardsPerAttempt;
    return this;
  }

  /**
   * Get passingYardsPerAttempt
   * @return passingYardsPerAttempt
   */
  @javax.annotation.Nullable
  public BigDecimal getPassingYardsPerAttempt() {
    return passingYardsPerAttempt;
  }

  public void setPassingYardsPerAttempt(BigDecimal passingYardsPerAttempt) {
    this.passingYardsPerAttempt = passingYardsPerAttempt;
  }


  public PlayerGame passingYardsPerCompletion(BigDecimal passingYardsPerCompletion) {
    this.passingYardsPerCompletion = passingYardsPerCompletion;
    return this;
  }

  /**
   * Get passingYardsPerCompletion
   * @return passingYardsPerCompletion
   */
  @javax.annotation.Nullable
  public BigDecimal getPassingYardsPerCompletion() {
    return passingYardsPerCompletion;
  }

  public void setPassingYardsPerCompletion(BigDecimal passingYardsPerCompletion) {
    this.passingYardsPerCompletion = passingYardsPerCompletion;
  }


  public PlayerGame played(Integer played) {
    this.played = played;
    return this;
  }

  /**
   * Get played
   * @return played
   */
  @javax.annotation.Nullable
  public Integer getPlayed() {
    return played;
  }

  public void setPlayed(Integer played) {
    this.played = played;
  }


  public PlayerGame playerGameID(Integer playerGameID) {
    this.playerGameID = playerGameID;
    return this;
  }

  /**
   * Get playerGameID
   * @return playerGameID
   */
  @javax.annotation.Nullable
  public Integer getPlayerGameID() {
    return playerGameID;
  }

  public void setPlayerGameID(Integer playerGameID) {
    this.playerGameID = playerGameID;
  }


  public PlayerGame playerID(Integer playerID) {
    this.playerID = playerID;
    return this;
  }

  /**
   * Get playerID
   * @return playerID
   */
  @javax.annotation.Nullable
  public Integer getPlayerID() {
    return playerID;
  }

  public void setPlayerID(Integer playerID) {
    this.playerID = playerID;
  }


  public PlayerGame playingSurface(String playingSurface) {
    this.playingSurface = playingSurface;
    return this;
  }

  /**
   * Get playingSurface
   * @return playingSurface
   */
  @javax.annotation.Nullable
  public String getPlayingSurface() {
    return playingSurface;
  }

  public void setPlayingSurface(String playingSurface) {
    this.playingSurface = playingSurface;
  }


  public PlayerGame position(String position) {
    this.position = position;
    return this;
  }

  /**
   * Get position
   * @return position
   */
  @javax.annotation.Nullable
  public String getPosition() {
    return position;
  }

  public void setPosition(String position) {
    this.position = position;
  }


  public PlayerGame positionCategory(String positionCategory) {
    this.positionCategory = positionCategory;
    return this;
  }

  /**
   * Get positionCategory
   * @return positionCategory
   */
  @javax.annotation.Nullable
  public String getPositionCategory() {
    return positionCategory;
  }

  public void setPositionCategory(String positionCategory) {
    this.positionCategory = positionCategory;
  }


  public PlayerGame puntAverage(BigDecimal puntAverage) {
    this.puntAverage = puntAverage;
    return this;
  }

  /**
   * Get puntAverage
   * @return puntAverage
   */
  @javax.annotation.Nullable
  public BigDecimal getPuntAverage() {
    return puntAverage;
  }

  public void setPuntAverage(BigDecimal puntAverage) {
    this.puntAverage = puntAverage;
  }


  public PlayerGame puntInside20(BigDecimal puntInside20) {
    this.puntInside20 = puntInside20;
    return this;
  }

  /**
   * Get puntInside20
   * @return puntInside20
   */
  @javax.annotation.Nullable
  public BigDecimal getPuntInside20() {
    return puntInside20;
  }

  public void setPuntInside20(BigDecimal puntInside20) {
    this.puntInside20 = puntInside20;
  }


  public PlayerGame puntLong(BigDecimal puntLong) {
    this.puntLong = puntLong;
    return this;
  }

  /**
   * Get puntLong
   * @return puntLong
   */
  @javax.annotation.Nullable
  public BigDecimal getPuntLong() {
    return puntLong;
  }

  public void setPuntLong(BigDecimal puntLong) {
    this.puntLong = puntLong;
  }


  public PlayerGame puntNetAverage(BigDecimal puntNetAverage) {
    this.puntNetAverage = puntNetAverage;
    return this;
  }

  /**
   * Get puntNetAverage
   * @return puntNetAverage
   */
  @javax.annotation.Nullable
  public BigDecimal getPuntNetAverage() {
    return puntNetAverage;
  }

  public void setPuntNetAverage(BigDecimal puntNetAverage) {
    this.puntNetAverage = puntNetAverage;
  }


  public PlayerGame puntNetYards(BigDecimal puntNetYards) {
    this.puntNetYards = puntNetYards;
    return this;
  }

  /**
   * Get puntNetYards
   * @return puntNetYards
   */
  @javax.annotation.Nullable
  public BigDecimal getPuntNetYards() {
    return puntNetYards;
  }

  public void setPuntNetYards(BigDecimal puntNetYards) {
    this.puntNetYards = puntNetYards;
  }


  public PlayerGame puntReturnFairCatches(BigDecimal puntReturnFairCatches) {
    this.puntReturnFairCatches = puntReturnFairCatches;
    return this;
  }

  /**
   * Get puntReturnFairCatches
   * @return puntReturnFairCatches
   */
  @javax.annotation.Nullable
  public BigDecimal getPuntReturnFairCatches() {
    return puntReturnFairCatches;
  }

  public void setPuntReturnFairCatches(BigDecimal puntReturnFairCatches) {
    this.puntReturnFairCatches = puntReturnFairCatches;
  }


  public PlayerGame puntReturnLong(BigDecimal puntReturnLong) {
    this.puntReturnLong = puntReturnLong;
    return this;
  }

  /**
   * Get puntReturnLong
   * @return puntReturnLong
   */
  @javax.annotation.Nullable
  public BigDecimal getPuntReturnLong() {
    return puntReturnLong;
  }

  public void setPuntReturnLong(BigDecimal puntReturnLong) {
    this.puntReturnLong = puntReturnLong;
  }


  public PlayerGame puntReturnTouchdowns(BigDecimal puntReturnTouchdowns) {
    this.puntReturnTouchdowns = puntReturnTouchdowns;
    return this;
  }

  /**
   * Get puntReturnTouchdowns
   * @return puntReturnTouchdowns
   */
  @javax.annotation.Nullable
  public BigDecimal getPuntReturnTouchdowns() {
    return puntReturnTouchdowns;
  }

  public void setPuntReturnTouchdowns(BigDecimal puntReturnTouchdowns) {
    this.puntReturnTouchdowns = puntReturnTouchdowns;
  }


  public PlayerGame puntReturnYards(BigDecimal puntReturnYards) {
    this.puntReturnYards = puntReturnYards;
    return this;
  }

  /**
   * Get puntReturnYards
   * @return puntReturnYards
   */
  @javax.annotation.Nullable
  public BigDecimal getPuntReturnYards() {
    return puntReturnYards;
  }

  public void setPuntReturnYards(BigDecimal puntReturnYards) {
    this.puntReturnYards = puntReturnYards;
  }


  public PlayerGame puntReturnYardsPerAttempt(BigDecimal puntReturnYardsPerAttempt) {
    this.puntReturnYardsPerAttempt = puntReturnYardsPerAttempt;
    return this;
  }

  /**
   * Get puntReturnYardsPerAttempt
   * @return puntReturnYardsPerAttempt
   */
  @javax.annotation.Nullable
  public BigDecimal getPuntReturnYardsPerAttempt() {
    return puntReturnYardsPerAttempt;
  }

  public void setPuntReturnYardsPerAttempt(BigDecimal puntReturnYardsPerAttempt) {
    this.puntReturnYardsPerAttempt = puntReturnYardsPerAttempt;
  }


  public PlayerGame puntReturns(BigDecimal puntReturns) {
    this.puntReturns = puntReturns;
    return this;
  }

  /**
   * Get puntReturns
   * @return puntReturns
   */
  @javax.annotation.Nullable
  public BigDecimal getPuntReturns() {
    return puntReturns;
  }

  public void setPuntReturns(BigDecimal puntReturns) {
    this.puntReturns = puntReturns;
  }


  public PlayerGame puntTouchbacks(BigDecimal puntTouchbacks) {
    this.puntTouchbacks = puntTouchbacks;
    return this;
  }

  /**
   * Get puntTouchbacks
   * @return puntTouchbacks
   */
  @javax.annotation.Nullable
  public BigDecimal getPuntTouchbacks() {
    return puntTouchbacks;
  }

  public void setPuntTouchbacks(BigDecimal puntTouchbacks) {
    this.puntTouchbacks = puntTouchbacks;
  }


  public PlayerGame puntYards(BigDecimal puntYards) {
    this.puntYards = puntYards;
    return this;
  }

  /**
   * Get puntYards
   * @return puntYards
   */
  @javax.annotation.Nullable
  public BigDecimal getPuntYards() {
    return puntYards;
  }

  public void setPuntYards(BigDecimal puntYards) {
    this.puntYards = puntYards;
  }


  public PlayerGame punts(BigDecimal punts) {
    this.punts = punts;
    return this;
  }

  /**
   * Get punts
   * @return punts
   */
  @javax.annotation.Nullable
  public BigDecimal getPunts() {
    return punts;
  }

  public void setPunts(BigDecimal punts) {
    this.punts = punts;
  }


  public PlayerGame puntsHadBlocked(BigDecimal puntsHadBlocked) {
    this.puntsHadBlocked = puntsHadBlocked;
    return this;
  }

  /**
   * Get puntsHadBlocked
   * @return puntsHadBlocked
   */
  @javax.annotation.Nullable
  public BigDecimal getPuntsHadBlocked() {
    return puntsHadBlocked;
  }

  public void setPuntsHadBlocked(BigDecimal puntsHadBlocked) {
    this.puntsHadBlocked = puntsHadBlocked;
  }


  public PlayerGame quarterbackHits(BigDecimal quarterbackHits) {
    this.quarterbackHits = quarterbackHits;
    return this;
  }

  /**
   * Get quarterbackHits
   * @return quarterbackHits
   */
  @javax.annotation.Nullable
  public BigDecimal getQuarterbackHits() {
    return quarterbackHits;
  }

  public void setQuarterbackHits(BigDecimal quarterbackHits) {
    this.quarterbackHits = quarterbackHits;
  }


  public PlayerGame receivingLong(BigDecimal receivingLong) {
    this.receivingLong = receivingLong;
    return this;
  }

  /**
   * Get receivingLong
   * @return receivingLong
   */
  @javax.annotation.Nullable
  public BigDecimal getReceivingLong() {
    return receivingLong;
  }

  public void setReceivingLong(BigDecimal receivingLong) {
    this.receivingLong = receivingLong;
  }


  public PlayerGame receivingTargets(BigDecimal receivingTargets) {
    this.receivingTargets = receivingTargets;
    return this;
  }

  /**
   * Get receivingTargets
   * @return receivingTargets
   */
  @javax.annotation.Nullable
  public BigDecimal getReceivingTargets() {
    return receivingTargets;
  }

  public void setReceivingTargets(BigDecimal receivingTargets) {
    this.receivingTargets = receivingTargets;
  }


  public PlayerGame receivingTouchdowns(BigDecimal receivingTouchdowns) {
    this.receivingTouchdowns = receivingTouchdowns;
    return this;
  }

  /**
   * Get receivingTouchdowns
   * @return receivingTouchdowns
   */
  @javax.annotation.Nullable
  public BigDecimal getReceivingTouchdowns() {
    return receivingTouchdowns;
  }

  public void setReceivingTouchdowns(BigDecimal receivingTouchdowns) {
    this.receivingTouchdowns = receivingTouchdowns;
  }


  public PlayerGame receivingYards(BigDecimal receivingYards) {
    this.receivingYards = receivingYards;
    return this;
  }

  /**
   * Get receivingYards
   * @return receivingYards
   */
  @javax.annotation.Nullable
  public BigDecimal getReceivingYards() {
    return receivingYards;
  }

  public void setReceivingYards(BigDecimal receivingYards) {
    this.receivingYards = receivingYards;
  }


  public PlayerGame receivingYardsPerReception(BigDecimal receivingYardsPerReception) {
    this.receivingYardsPerReception = receivingYardsPerReception;
    return this;
  }

  /**
   * Get receivingYardsPerReception
   * @return receivingYardsPerReception
   */
  @javax.annotation.Nullable
  public BigDecimal getReceivingYardsPerReception() {
    return receivingYardsPerReception;
  }

  public void setReceivingYardsPerReception(BigDecimal receivingYardsPerReception) {
    this.receivingYardsPerReception = receivingYardsPerReception;
  }


  public PlayerGame receivingYardsPerTarget(BigDecimal receivingYardsPerTarget) {
    this.receivingYardsPerTarget = receivingYardsPerTarget;
    return this;
  }

  /**
   * Get receivingYardsPerTarget
   * @return receivingYardsPerTarget
   */
  @javax.annotation.Nullable
  public BigDecimal getReceivingYardsPerTarget() {
    return receivingYardsPerTarget;
  }

  public void setReceivingYardsPerTarget(BigDecimal receivingYardsPerTarget) {
    this.receivingYardsPerTarget = receivingYardsPerTarget;
  }


  public PlayerGame receptionPercentage(BigDecimal receptionPercentage) {
    this.receptionPercentage = receptionPercentage;
    return this;
  }

  /**
   * Get receptionPercentage
   * @return receptionPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getReceptionPercentage() {
    return receptionPercentage;
  }

  public void setReceptionPercentage(BigDecimal receptionPercentage) {
    this.receptionPercentage = receptionPercentage;
  }


  public PlayerGame receptions(BigDecimal receptions) {
    this.receptions = receptions;
    return this;
  }

  /**
   * Get receptions
   * @return receptions
   */
  @javax.annotation.Nullable
  public BigDecimal getReceptions() {
    return receptions;
  }

  public void setReceptions(BigDecimal receptions) {
    this.receptions = receptions;
  }


  public PlayerGame rushingAttempts(BigDecimal rushingAttempts) {
    this.rushingAttempts = rushingAttempts;
    return this;
  }

  /**
   * Get rushingAttempts
   * @return rushingAttempts
   */
  @javax.annotation.Nullable
  public BigDecimal getRushingAttempts() {
    return rushingAttempts;
  }

  public void setRushingAttempts(BigDecimal rushingAttempts) {
    this.rushingAttempts = rushingAttempts;
  }


  public PlayerGame rushingLong(BigDecimal rushingLong) {
    this.rushingLong = rushingLong;
    return this;
  }

  /**
   * Get rushingLong
   * @return rushingLong
   */
  @javax.annotation.Nullable
  public BigDecimal getRushingLong() {
    return rushingLong;
  }

  public void setRushingLong(BigDecimal rushingLong) {
    this.rushingLong = rushingLong;
  }


  public PlayerGame rushingTouchdowns(BigDecimal rushingTouchdowns) {
    this.rushingTouchdowns = rushingTouchdowns;
    return this;
  }

  /**
   * Get rushingTouchdowns
   * @return rushingTouchdowns
   */
  @javax.annotation.Nullable
  public BigDecimal getRushingTouchdowns() {
    return rushingTouchdowns;
  }

  public void setRushingTouchdowns(BigDecimal rushingTouchdowns) {
    this.rushingTouchdowns = rushingTouchdowns;
  }


  public PlayerGame rushingYards(BigDecimal rushingYards) {
    this.rushingYards = rushingYards;
    return this;
  }

  /**
   * Get rushingYards
   * @return rushingYards
   */
  @javax.annotation.Nullable
  public BigDecimal getRushingYards() {
    return rushingYards;
  }

  public void setRushingYards(BigDecimal rushingYards) {
    this.rushingYards = rushingYards;
  }


  public PlayerGame rushingYardsPerAttempt(BigDecimal rushingYardsPerAttempt) {
    this.rushingYardsPerAttempt = rushingYardsPerAttempt;
    return this;
  }

  /**
   * Get rushingYardsPerAttempt
   * @return rushingYardsPerAttempt
   */
  @javax.annotation.Nullable
  public BigDecimal getRushingYardsPerAttempt() {
    return rushingYardsPerAttempt;
  }

  public void setRushingYardsPerAttempt(BigDecimal rushingYardsPerAttempt) {
    this.rushingYardsPerAttempt = rushingYardsPerAttempt;
  }


  public PlayerGame sackYards(BigDecimal sackYards) {
    this.sackYards = sackYards;
    return this;
  }

  /**
   * Get sackYards
   * @return sackYards
   */
  @javax.annotation.Nullable
  public BigDecimal getSackYards() {
    return sackYards;
  }

  public void setSackYards(BigDecimal sackYards) {
    this.sackYards = sackYards;
  }


  public PlayerGame sacks(BigDecimal sacks) {
    this.sacks = sacks;
    return this;
  }

  /**
   * Get sacks
   * @return sacks
   */
  @javax.annotation.Nullable
  public BigDecimal getSacks() {
    return sacks;
  }

  public void setSacks(BigDecimal sacks) {
    this.sacks = sacks;
  }


  public PlayerGame safeties(BigDecimal safeties) {
    this.safeties = safeties;
    return this;
  }

  /**
   * Get safeties
   * @return safeties
   */
  @javax.annotation.Nullable
  public BigDecimal getSafeties() {
    return safeties;
  }

  public void setSafeties(BigDecimal safeties) {
    this.safeties = safeties;
  }


  public PlayerGame safetiesAllowed(BigDecimal safetiesAllowed) {
    this.safetiesAllowed = safetiesAllowed;
    return this;
  }

  /**
   * Get safetiesAllowed
   * @return safetiesAllowed
   */
  @javax.annotation.Nullable
  public BigDecimal getSafetiesAllowed() {
    return safetiesAllowed;
  }

  public void setSafetiesAllowed(BigDecimal safetiesAllowed) {
    this.safetiesAllowed = safetiesAllowed;
  }


  public PlayerGame scoreID(Integer scoreID) {
    this.scoreID = scoreID;
    return this;
  }

  /**
   * Get scoreID
   * @return scoreID
   */
  @javax.annotation.Nullable
  public Integer getScoreID() {
    return scoreID;
  }

  public void setScoreID(Integer scoreID) {
    this.scoreID = scoreID;
  }


  public PlayerGame scoringDetails(List<ScoringDetail> scoringDetails) {
    this.scoringDetails = scoringDetails;
    return this;
  }

  public PlayerGame addScoringDetailsItem(ScoringDetail scoringDetailsItem) {
    if (this.scoringDetails == null) {
      this.scoringDetails = new ArrayList<>();
    }
    this.scoringDetails.add(scoringDetailsItem);
    return this;
  }

  /**
   * Get scoringDetails
   * @return scoringDetails
   */
  @javax.annotation.Nullable
  public List<ScoringDetail> getScoringDetails() {
    return scoringDetails;
  }

  public void setScoringDetails(List<ScoringDetail> scoringDetails) {
    this.scoringDetails = scoringDetails;
  }


  public PlayerGame season(Integer season) {
    this.season = season;
    return this;
  }

  /**
   * Get season
   * @return season
   */
  @javax.annotation.Nullable
  public Integer getSeason() {
    return season;
  }

  public void setSeason(Integer season) {
    this.season = season;
  }


  public PlayerGame seasonType(Integer seasonType) {
    this.seasonType = seasonType;
    return this;
  }

  /**
   * Get seasonType
   * @return seasonType
   */
  @javax.annotation.Nullable
  public Integer getSeasonType() {
    return seasonType;
  }

  public void setSeasonType(Integer seasonType) {
    this.seasonType = seasonType;
  }


  public PlayerGame shortName(String shortName) {
    this.shortName = shortName;
    return this;
  }

  /**
   * Get shortName
   * @return shortName
   */
  @javax.annotation.Nullable
  public String getShortName() {
    return shortName;
  }

  public void setShortName(String shortName) {
    this.shortName = shortName;
  }


  public PlayerGame snapCountsConfirmed(Boolean snapCountsConfirmed) {
    this.snapCountsConfirmed = snapCountsConfirmed;
    return this;
  }

  /**
   * Get snapCountsConfirmed
   * @return snapCountsConfirmed
   */
  @javax.annotation.Nullable
  public Boolean getSnapCountsConfirmed() {
    return snapCountsConfirmed;
  }

  public void setSnapCountsConfirmed(Boolean snapCountsConfirmed) {
    this.snapCountsConfirmed = snapCountsConfirmed;
  }


  public PlayerGame soloTackles(BigDecimal soloTackles) {
    this.soloTackles = soloTackles;
    return this;
  }

  /**
   * Get soloTackles
   * @return soloTackles
   */
  @javax.annotation.Nullable
  public BigDecimal getSoloTackles() {
    return soloTackles;
  }

  public void setSoloTackles(BigDecimal soloTackles) {
    this.soloTackles = soloTackles;
  }


  public PlayerGame specialTeamsAssistedTackles(BigDecimal specialTeamsAssistedTackles) {
    this.specialTeamsAssistedTackles = specialTeamsAssistedTackles;
    return this;
  }

  /**
   * Get specialTeamsAssistedTackles
   * @return specialTeamsAssistedTackles
   */
  @javax.annotation.Nullable
  public BigDecimal getSpecialTeamsAssistedTackles() {
    return specialTeamsAssistedTackles;
  }

  public void setSpecialTeamsAssistedTackles(BigDecimal specialTeamsAssistedTackles) {
    this.specialTeamsAssistedTackles = specialTeamsAssistedTackles;
  }


  public PlayerGame specialTeamsFumblesForced(BigDecimal specialTeamsFumblesForced) {
    this.specialTeamsFumblesForced = specialTeamsFumblesForced;
    return this;
  }

  /**
   * Get specialTeamsFumblesForced
   * @return specialTeamsFumblesForced
   */
  @javax.annotation.Nullable
  public BigDecimal getSpecialTeamsFumblesForced() {
    return specialTeamsFumblesForced;
  }

  public void setSpecialTeamsFumblesForced(BigDecimal specialTeamsFumblesForced) {
    this.specialTeamsFumblesForced = specialTeamsFumblesForced;
  }


  public PlayerGame specialTeamsFumblesRecovered(BigDecimal specialTeamsFumblesRecovered) {
    this.specialTeamsFumblesRecovered = specialTeamsFumblesRecovered;
    return this;
  }

  /**
   * Get specialTeamsFumblesRecovered
   * @return specialTeamsFumblesRecovered
   */
  @javax.annotation.Nullable
  public BigDecimal getSpecialTeamsFumblesRecovered() {
    return specialTeamsFumblesRecovered;
  }

  public void setSpecialTeamsFumblesRecovered(BigDecimal specialTeamsFumblesRecovered) {
    this.specialTeamsFumblesRecovered = specialTeamsFumblesRecovered;
  }


  public PlayerGame specialTeamsSnapsPlayed(Integer specialTeamsSnapsPlayed) {
    this.specialTeamsSnapsPlayed = specialTeamsSnapsPlayed;
    return this;
  }

  /**
   * Get specialTeamsSnapsPlayed
   * @return specialTeamsSnapsPlayed
   */
  @javax.annotation.Nullable
  public Integer getSpecialTeamsSnapsPlayed() {
    return specialTeamsSnapsPlayed;
  }

  public void setSpecialTeamsSnapsPlayed(Integer specialTeamsSnapsPlayed) {
    this.specialTeamsSnapsPlayed = specialTeamsSnapsPlayed;
  }


  public PlayerGame specialTeamsSoloTackles(BigDecimal specialTeamsSoloTackles) {
    this.specialTeamsSoloTackles = specialTeamsSoloTackles;
    return this;
  }

  /**
   * Get specialTeamsSoloTackles
   * @return specialTeamsSoloTackles
   */
  @javax.annotation.Nullable
  public BigDecimal getSpecialTeamsSoloTackles() {
    return specialTeamsSoloTackles;
  }

  public void setSpecialTeamsSoloTackles(BigDecimal specialTeamsSoloTackles) {
    this.specialTeamsSoloTackles = specialTeamsSoloTackles;
  }


  public PlayerGame specialTeamsTeamSnaps(Integer specialTeamsTeamSnaps) {
    this.specialTeamsTeamSnaps = specialTeamsTeamSnaps;
    return this;
  }

  /**
   * Get specialTeamsTeamSnaps
   * @return specialTeamsTeamSnaps
   */
  @javax.annotation.Nullable
  public Integer getSpecialTeamsTeamSnaps() {
    return specialTeamsTeamSnaps;
  }

  public void setSpecialTeamsTeamSnaps(Integer specialTeamsTeamSnaps) {
    this.specialTeamsTeamSnaps = specialTeamsTeamSnaps;
  }


  public PlayerGame specialTeamsTouchdowns(BigDecimal specialTeamsTouchdowns) {
    this.specialTeamsTouchdowns = specialTeamsTouchdowns;
    return this;
  }

  /**
   * Get specialTeamsTouchdowns
   * @return specialTeamsTouchdowns
   */
  @javax.annotation.Nullable
  public BigDecimal getSpecialTeamsTouchdowns() {
    return specialTeamsTouchdowns;
  }

  public void setSpecialTeamsTouchdowns(BigDecimal specialTeamsTouchdowns) {
    this.specialTeamsTouchdowns = specialTeamsTouchdowns;
  }


  public PlayerGame stadium(String stadium) {
    this.stadium = stadium;
    return this;
  }

  /**
   * Get stadium
   * @return stadium
   */
  @javax.annotation.Nullable
  public String getStadium() {
    return stadium;
  }

  public void setStadium(String stadium) {
    this.stadium = stadium;
  }


  public PlayerGame started(Integer started) {
    this.started = started;
    return this;
  }

  /**
   * Get started
   * @return started
   */
  @javax.annotation.Nullable
  public Integer getStarted() {
    return started;
  }

  public void setStarted(Integer started) {
    this.started = started;
  }


  public PlayerGame tackles(BigDecimal tackles) {
    this.tackles = tackles;
    return this;
  }

  /**
   * Get tackles
   * @return tackles
   */
  @javax.annotation.Nullable
  public BigDecimal getTackles() {
    return tackles;
  }

  public void setTackles(BigDecimal tackles) {
    this.tackles = tackles;
  }


  public PlayerGame tacklesForLoss(BigDecimal tacklesForLoss) {
    this.tacklesForLoss = tacklesForLoss;
    return this;
  }

  /**
   * Get tacklesForLoss
   * @return tacklesForLoss
   */
  @javax.annotation.Nullable
  public BigDecimal getTacklesForLoss() {
    return tacklesForLoss;
  }

  public void setTacklesForLoss(BigDecimal tacklesForLoss) {
    this.tacklesForLoss = tacklesForLoss;
  }


  public PlayerGame team(String team) {
    this.team = team;
    return this;
  }

  /**
   * Get team
   * @return team
   */
  @javax.annotation.Nullable
  public String getTeam() {
    return team;
  }

  public void setTeam(String team) {
    this.team = team;
  }


  public PlayerGame teamID(Integer teamID) {
    this.teamID = teamID;
    return this;
  }

  /**
   * Get teamID
   * @return teamID
   */
  @javax.annotation.Nullable
  public Integer getTeamID() {
    return teamID;
  }

  public void setTeamID(Integer teamID) {
    this.teamID = teamID;
  }


  public PlayerGame temperature(Integer temperature) {
    this.temperature = temperature;
    return this;
  }

  /**
   * Get temperature
   * @return temperature
   */
  @javax.annotation.Nullable
  public Integer getTemperature() {
    return temperature;
  }

  public void setTemperature(Integer temperature) {
    this.temperature = temperature;
  }


  public PlayerGame touchdowns(BigDecimal touchdowns) {
    this.touchdowns = touchdowns;
    return this;
  }

  /**
   * Get touchdowns
   * @return touchdowns
   */
  @javax.annotation.Nullable
  public BigDecimal getTouchdowns() {
    return touchdowns;
  }

  public void setTouchdowns(BigDecimal touchdowns) {
    this.touchdowns = touchdowns;
  }


  public PlayerGame twoPointConversionPasses(BigDecimal twoPointConversionPasses) {
    this.twoPointConversionPasses = twoPointConversionPasses;
    return this;
  }

  /**
   * Get twoPointConversionPasses
   * @return twoPointConversionPasses
   */
  @javax.annotation.Nullable
  public BigDecimal getTwoPointConversionPasses() {
    return twoPointConversionPasses;
  }

  public void setTwoPointConversionPasses(BigDecimal twoPointConversionPasses) {
    this.twoPointConversionPasses = twoPointConversionPasses;
  }


  public PlayerGame twoPointConversionReceptions(BigDecimal twoPointConversionReceptions) {
    this.twoPointConversionReceptions = twoPointConversionReceptions;
    return this;
  }

  /**
   * Get twoPointConversionReceptions
   * @return twoPointConversionReceptions
   */
  @javax.annotation.Nullable
  public BigDecimal getTwoPointConversionReceptions() {
    return twoPointConversionReceptions;
  }

  public void setTwoPointConversionReceptions(BigDecimal twoPointConversionReceptions) {
    this.twoPointConversionReceptions = twoPointConversionReceptions;
  }


  public PlayerGame twoPointConversionReturns(BigDecimal twoPointConversionReturns) {
    this.twoPointConversionReturns = twoPointConversionReturns;
    return this;
  }

  /**
   * Get twoPointConversionReturns
   * @return twoPointConversionReturns
   */
  @javax.annotation.Nullable
  public BigDecimal getTwoPointConversionReturns() {
    return twoPointConversionReturns;
  }

  public void setTwoPointConversionReturns(BigDecimal twoPointConversionReturns) {
    this.twoPointConversionReturns = twoPointConversionReturns;
  }


  public PlayerGame twoPointConversionRuns(BigDecimal twoPointConversionRuns) {
    this.twoPointConversionRuns = twoPointConversionRuns;
    return this;
  }

  /**
   * Get twoPointConversionRuns
   * @return twoPointConversionRuns
   */
  @javax.annotation.Nullable
  public BigDecimal getTwoPointConversionRuns() {
    return twoPointConversionRuns;
  }

  public void setTwoPointConversionRuns(BigDecimal twoPointConversionRuns) {
    this.twoPointConversionRuns = twoPointConversionRuns;
  }


  public PlayerGame victivSalary(Integer victivSalary) {
    this.victivSalary = victivSalary;
    return this;
  }

  /**
   * Get victivSalary
   * @return victivSalary
   */
  @javax.annotation.Nullable
  public Integer getVictivSalary() {
    return victivSalary;
  }

  public void setVictivSalary(Integer victivSalary) {
    this.victivSalary = victivSalary;
  }


  public PlayerGame week(Integer week) {
    this.week = week;
    return this;
  }

  /**
   * Get week
   * @return week
   */
  @javax.annotation.Nullable
  public Integer getWeek() {
    return week;
  }

  public void setWeek(Integer week) {
    this.week = week;
  }


  public PlayerGame windSpeed(Integer windSpeed) {
    this.windSpeed = windSpeed;
    return this;
  }

  /**
   * Get windSpeed
   * @return windSpeed
   */
  @javax.annotation.Nullable
  public Integer getWindSpeed() {
    return windSpeed;
  }

  public void setWindSpeed(Integer windSpeed) {
    this.windSpeed = windSpeed;
  }


  public PlayerGame yahooPosition(String yahooPosition) {
    this.yahooPosition = yahooPosition;
    return this;
  }

  /**
   * Get yahooPosition
   * @return yahooPosition
   */
  @javax.annotation.Nullable
  public String getYahooPosition() {
    return yahooPosition;
  }

  public void setYahooPosition(String yahooPosition) {
    this.yahooPosition = yahooPosition;
  }


  public PlayerGame yahooSalary(Integer yahooSalary) {
    this.yahooSalary = yahooSalary;
    return this;
  }

  /**
   * Get yahooSalary
   * @return yahooSalary
   */
  @javax.annotation.Nullable
  public Integer getYahooSalary() {
    return yahooSalary;
  }

  public void setYahooSalary(Integer yahooSalary) {
    this.yahooSalary = yahooSalary;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PlayerGame playerGame = (PlayerGame) o;
    return Objects.equals(this.activated, playerGame.activated) &&
        Objects.equals(this.assistedTackles, playerGame.assistedTackles) &&
        Objects.equals(this.blockedKickReturnTouchdowns, playerGame.blockedKickReturnTouchdowns) &&
        Objects.equals(this.blockedKickReturnYards, playerGame.blockedKickReturnYards) &&
        Objects.equals(this.blockedKicks, playerGame.blockedKicks) &&
        Objects.equals(this.dateTime, playerGame.dateTime) &&
        Objects.equals(this.day, playerGame.day) &&
        Objects.equals(this.declaredInactive, playerGame.declaredInactive) &&
        Objects.equals(this.defensiveSnapsPlayed, playerGame.defensiveSnapsPlayed) &&
        Objects.equals(this.defensiveTeamSnaps, playerGame.defensiveTeamSnaps) &&
        Objects.equals(this.defensiveTouchdowns, playerGame.defensiveTouchdowns) &&
        Objects.equals(this.draftKingsPosition, playerGame.draftKingsPosition) &&
        Objects.equals(this.draftKingsSalary, playerGame.draftKingsSalary) &&
        Objects.equals(this.extraPointsAttempted, playerGame.extraPointsAttempted) &&
        Objects.equals(this.extraPointsHadBlocked, playerGame.extraPointsHadBlocked) &&
        Objects.equals(this.extraPointsMade, playerGame.extraPointsMade) &&
        Objects.equals(this.fanDuelPosition, playerGame.fanDuelPosition) &&
        Objects.equals(this.fanDuelSalary, playerGame.fanDuelSalary) &&
        Objects.equals(this.fantasyDataSalary, playerGame.fantasyDataSalary) &&
        Objects.equals(this.fantasyDraftPosition, playerGame.fantasyDraftPosition) &&
        Objects.equals(this.fantasyDraftSalary, playerGame.fantasyDraftSalary) &&
        Objects.equals(this.fantasyPoints, playerGame.fantasyPoints) &&
        Objects.equals(this.fantasyPointsDraftKings, playerGame.fantasyPointsDraftKings) &&
        Objects.equals(this.fantasyPointsFanDuel, playerGame.fantasyPointsFanDuel) &&
        Objects.equals(this.fantasyPointsFantasyDraft, playerGame.fantasyPointsFantasyDraft) &&
        Objects.equals(this.fantasyPointsPPR, playerGame.fantasyPointsPPR) &&
        Objects.equals(this.fantasyPointsYahoo, playerGame.fantasyPointsYahoo) &&
        Objects.equals(this.fantasyPosition, playerGame.fantasyPosition) &&
        Objects.equals(this.fieldGoalPercentage, playerGame.fieldGoalPercentage) &&
        Objects.equals(this.fieldGoalReturnTouchdowns, playerGame.fieldGoalReturnTouchdowns) &&
        Objects.equals(this.fieldGoalReturnYards, playerGame.fieldGoalReturnYards) &&
        Objects.equals(this.fieldGoalsAttempted, playerGame.fieldGoalsAttempted) &&
        Objects.equals(this.fieldGoalsHadBlocked, playerGame.fieldGoalsHadBlocked) &&
        Objects.equals(this.fieldGoalsLongestMade, playerGame.fieldGoalsLongestMade) &&
        Objects.equals(this.fieldGoalsMade, playerGame.fieldGoalsMade) &&
        Objects.equals(this.fieldGoalsMade0to19, playerGame.fieldGoalsMade0to19) &&
        Objects.equals(this.fieldGoalsMade20to29, playerGame.fieldGoalsMade20to29) &&
        Objects.equals(this.fieldGoalsMade30to39, playerGame.fieldGoalsMade30to39) &&
        Objects.equals(this.fieldGoalsMade40to49, playerGame.fieldGoalsMade40to49) &&
        Objects.equals(this.fieldGoalsMade50Plus, playerGame.fieldGoalsMade50Plus) &&
        Objects.equals(this.fumbleReturnTouchdowns, playerGame.fumbleReturnTouchdowns) &&
        Objects.equals(this.fumbleReturnYards, playerGame.fumbleReturnYards) &&
        Objects.equals(this.fumbles, playerGame.fumbles) &&
        Objects.equals(this.fumblesForced, playerGame.fumblesForced) &&
        Objects.equals(this.fumblesLost, playerGame.fumblesLost) &&
        Objects.equals(this.fumblesOutOfBounds, playerGame.fumblesOutOfBounds) &&
        Objects.equals(this.fumblesOwnRecoveries, playerGame.fumblesOwnRecoveries) &&
        Objects.equals(this.fumblesRecovered, playerGame.fumblesRecovered) &&
        Objects.equals(this.gameDate, playerGame.gameDate) &&
        Objects.equals(this.gameKey, playerGame.gameKey) &&
        Objects.equals(this.globalGameID, playerGame.globalGameID) &&
        Objects.equals(this.globalOpponentID, playerGame.globalOpponentID) &&
        Objects.equals(this.globalTeamID, playerGame.globalTeamID) &&
        Objects.equals(this.homeOrAway, playerGame.homeOrAway) &&
        Objects.equals(this.humidity, playerGame.humidity) &&
        Objects.equals(this.injuryBodyPart, playerGame.injuryBodyPart) &&
        Objects.equals(this.injuryNotes, playerGame.injuryNotes) &&
        Objects.equals(this.injuryPractice, playerGame.injuryPractice) &&
        Objects.equals(this.injuryPracticeDescription, playerGame.injuryPracticeDescription) &&
        Objects.equals(this.injuryStartDate, playerGame.injuryStartDate) &&
        Objects.equals(this.injuryStatus, playerGame.injuryStatus) &&
        Objects.equals(this.interceptionReturnTouchdowns, playerGame.interceptionReturnTouchdowns) &&
        Objects.equals(this.interceptionReturnYards, playerGame.interceptionReturnYards) &&
        Objects.equals(this.interceptions, playerGame.interceptions) &&
        Objects.equals(this.isGameOver, playerGame.isGameOver) &&
        Objects.equals(this.kickReturnFairCatches, playerGame.kickReturnFairCatches) &&
        Objects.equals(this.kickReturnLong, playerGame.kickReturnLong) &&
        Objects.equals(this.kickReturnTouchdowns, playerGame.kickReturnTouchdowns) &&
        Objects.equals(this.kickReturnYards, playerGame.kickReturnYards) &&
        Objects.equals(this.kickReturnYardsPerAttempt, playerGame.kickReturnYardsPerAttempt) &&
        Objects.equals(this.kickReturns, playerGame.kickReturns) &&
        Objects.equals(this.miscAssistedTackles, playerGame.miscAssistedTackles) &&
        Objects.equals(this.miscFumblesForced, playerGame.miscFumblesForced) &&
        Objects.equals(this.miscFumblesRecovered, playerGame.miscFumblesRecovered) &&
        Objects.equals(this.miscSoloTackles, playerGame.miscSoloTackles) &&
        Objects.equals(this.name, playerGame.name) &&
        Objects.equals(this.number, playerGame.number) &&
        Objects.equals(this.offensiveFumbleRecoveryTouchdowns, playerGame.offensiveFumbleRecoveryTouchdowns) &&
        Objects.equals(this.offensiveSnapsPlayed, playerGame.offensiveSnapsPlayed) &&
        Objects.equals(this.offensiveTeamSnaps, playerGame.offensiveTeamSnaps) &&
        Objects.equals(this.offensiveTouchdowns, playerGame.offensiveTouchdowns) &&
        Objects.equals(this.opponent, playerGame.opponent) &&
        Objects.equals(this.opponentID, playerGame.opponentID) &&
        Objects.equals(this.opponentPositionRank, playerGame.opponentPositionRank) &&
        Objects.equals(this.opponentRank, playerGame.opponentRank) &&
        Objects.equals(this.passesDefended, playerGame.passesDefended) &&
        Objects.equals(this.passingAttempts, playerGame.passingAttempts) &&
        Objects.equals(this.passingCompletionPercentage, playerGame.passingCompletionPercentage) &&
        Objects.equals(this.passingCompletions, playerGame.passingCompletions) &&
        Objects.equals(this.passingInterceptions, playerGame.passingInterceptions) &&
        Objects.equals(this.passingLong, playerGame.passingLong) &&
        Objects.equals(this.passingRating, playerGame.passingRating) &&
        Objects.equals(this.passingSackYards, playerGame.passingSackYards) &&
        Objects.equals(this.passingSacks, playerGame.passingSacks) &&
        Objects.equals(this.passingTouchdowns, playerGame.passingTouchdowns) &&
        Objects.equals(this.passingYards, playerGame.passingYards) &&
        Objects.equals(this.passingYardsPerAttempt, playerGame.passingYardsPerAttempt) &&
        Objects.equals(this.passingYardsPerCompletion, playerGame.passingYardsPerCompletion) &&
        Objects.equals(this.played, playerGame.played) &&
        Objects.equals(this.playerGameID, playerGame.playerGameID) &&
        Objects.equals(this.playerID, playerGame.playerID) &&
        Objects.equals(this.playingSurface, playerGame.playingSurface) &&
        Objects.equals(this.position, playerGame.position) &&
        Objects.equals(this.positionCategory, playerGame.positionCategory) &&
        Objects.equals(this.puntAverage, playerGame.puntAverage) &&
        Objects.equals(this.puntInside20, playerGame.puntInside20) &&
        Objects.equals(this.puntLong, playerGame.puntLong) &&
        Objects.equals(this.puntNetAverage, playerGame.puntNetAverage) &&
        Objects.equals(this.puntNetYards, playerGame.puntNetYards) &&
        Objects.equals(this.puntReturnFairCatches, playerGame.puntReturnFairCatches) &&
        Objects.equals(this.puntReturnLong, playerGame.puntReturnLong) &&
        Objects.equals(this.puntReturnTouchdowns, playerGame.puntReturnTouchdowns) &&
        Objects.equals(this.puntReturnYards, playerGame.puntReturnYards) &&
        Objects.equals(this.puntReturnYardsPerAttempt, playerGame.puntReturnYardsPerAttempt) &&
        Objects.equals(this.puntReturns, playerGame.puntReturns) &&
        Objects.equals(this.puntTouchbacks, playerGame.puntTouchbacks) &&
        Objects.equals(this.puntYards, playerGame.puntYards) &&
        Objects.equals(this.punts, playerGame.punts) &&
        Objects.equals(this.puntsHadBlocked, playerGame.puntsHadBlocked) &&
        Objects.equals(this.quarterbackHits, playerGame.quarterbackHits) &&
        Objects.equals(this.receivingLong, playerGame.receivingLong) &&
        Objects.equals(this.receivingTargets, playerGame.receivingTargets) &&
        Objects.equals(this.receivingTouchdowns, playerGame.receivingTouchdowns) &&
        Objects.equals(this.receivingYards, playerGame.receivingYards) &&
        Objects.equals(this.receivingYardsPerReception, playerGame.receivingYardsPerReception) &&
        Objects.equals(this.receivingYardsPerTarget, playerGame.receivingYardsPerTarget) &&
        Objects.equals(this.receptionPercentage, playerGame.receptionPercentage) &&
        Objects.equals(this.receptions, playerGame.receptions) &&
        Objects.equals(this.rushingAttempts, playerGame.rushingAttempts) &&
        Objects.equals(this.rushingLong, playerGame.rushingLong) &&
        Objects.equals(this.rushingTouchdowns, playerGame.rushingTouchdowns) &&
        Objects.equals(this.rushingYards, playerGame.rushingYards) &&
        Objects.equals(this.rushingYardsPerAttempt, playerGame.rushingYardsPerAttempt) &&
        Objects.equals(this.sackYards, playerGame.sackYards) &&
        Objects.equals(this.sacks, playerGame.sacks) &&
        Objects.equals(this.safeties, playerGame.safeties) &&
        Objects.equals(this.safetiesAllowed, playerGame.safetiesAllowed) &&
        Objects.equals(this.scoreID, playerGame.scoreID) &&
        Objects.equals(this.scoringDetails, playerGame.scoringDetails) &&
        Objects.equals(this.season, playerGame.season) &&
        Objects.equals(this.seasonType, playerGame.seasonType) &&
        Objects.equals(this.shortName, playerGame.shortName) &&
        Objects.equals(this.snapCountsConfirmed, playerGame.snapCountsConfirmed) &&
        Objects.equals(this.soloTackles, playerGame.soloTackles) &&
        Objects.equals(this.specialTeamsAssistedTackles, playerGame.specialTeamsAssistedTackles) &&
        Objects.equals(this.specialTeamsFumblesForced, playerGame.specialTeamsFumblesForced) &&
        Objects.equals(this.specialTeamsFumblesRecovered, playerGame.specialTeamsFumblesRecovered) &&
        Objects.equals(this.specialTeamsSnapsPlayed, playerGame.specialTeamsSnapsPlayed) &&
        Objects.equals(this.specialTeamsSoloTackles, playerGame.specialTeamsSoloTackles) &&
        Objects.equals(this.specialTeamsTeamSnaps, playerGame.specialTeamsTeamSnaps) &&
        Objects.equals(this.specialTeamsTouchdowns, playerGame.specialTeamsTouchdowns) &&
        Objects.equals(this.stadium, playerGame.stadium) &&
        Objects.equals(this.started, playerGame.started) &&
        Objects.equals(this.tackles, playerGame.tackles) &&
        Objects.equals(this.tacklesForLoss, playerGame.tacklesForLoss) &&
        Objects.equals(this.team, playerGame.team) &&
        Objects.equals(this.teamID, playerGame.teamID) &&
        Objects.equals(this.temperature, playerGame.temperature) &&
        Objects.equals(this.touchdowns, playerGame.touchdowns) &&
        Objects.equals(this.twoPointConversionPasses, playerGame.twoPointConversionPasses) &&
        Objects.equals(this.twoPointConversionReceptions, playerGame.twoPointConversionReceptions) &&
        Objects.equals(this.twoPointConversionReturns, playerGame.twoPointConversionReturns) &&
        Objects.equals(this.twoPointConversionRuns, playerGame.twoPointConversionRuns) &&
        Objects.equals(this.victivSalary, playerGame.victivSalary) &&
        Objects.equals(this.week, playerGame.week) &&
        Objects.equals(this.windSpeed, playerGame.windSpeed) &&
        Objects.equals(this.yahooPosition, playerGame.yahooPosition) &&
        Objects.equals(this.yahooSalary, playerGame.yahooSalary);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(activated, assistedTackles, blockedKickReturnTouchdowns, blockedKickReturnYards, blockedKicks, dateTime, day, declaredInactive, defensiveSnapsPlayed, defensiveTeamSnaps, defensiveTouchdowns, draftKingsPosition, draftKingsSalary, extraPointsAttempted, extraPointsHadBlocked, extraPointsMade, fanDuelPosition, fanDuelSalary, fantasyDataSalary, fantasyDraftPosition, fantasyDraftSalary, fantasyPoints, fantasyPointsDraftKings, fantasyPointsFanDuel, fantasyPointsFantasyDraft, fantasyPointsPPR, fantasyPointsYahoo, fantasyPosition, fieldGoalPercentage, fieldGoalReturnTouchdowns, fieldGoalReturnYards, fieldGoalsAttempted, fieldGoalsHadBlocked, fieldGoalsLongestMade, fieldGoalsMade, fieldGoalsMade0to19, fieldGoalsMade20to29, fieldGoalsMade30to39, fieldGoalsMade40to49, fieldGoalsMade50Plus, fumbleReturnTouchdowns, fumbleReturnYards, fumbles, fumblesForced, fumblesLost, fumblesOutOfBounds, fumblesOwnRecoveries, fumblesRecovered, gameDate, gameKey, globalGameID, globalOpponentID, globalTeamID, homeOrAway, humidity, injuryBodyPart, injuryNotes, injuryPractice, injuryPracticeDescription, injuryStartDate, injuryStatus, interceptionReturnTouchdowns, interceptionReturnYards, interceptions, isGameOver, kickReturnFairCatches, kickReturnLong, kickReturnTouchdowns, kickReturnYards, kickReturnYardsPerAttempt, kickReturns, miscAssistedTackles, miscFumblesForced, miscFumblesRecovered, miscSoloTackles, name, number, offensiveFumbleRecoveryTouchdowns, offensiveSnapsPlayed, offensiveTeamSnaps, offensiveTouchdowns, opponent, opponentID, opponentPositionRank, opponentRank, passesDefended, passingAttempts, passingCompletionPercentage, passingCompletions, passingInterceptions, passingLong, passingRating, passingSackYards, passingSacks, passingTouchdowns, passingYards, passingYardsPerAttempt, passingYardsPerCompletion, played, playerGameID, playerID, playingSurface, position, positionCategory, puntAverage, puntInside20, puntLong, puntNetAverage, puntNetYards, puntReturnFairCatches, puntReturnLong, puntReturnTouchdowns, puntReturnYards, puntReturnYardsPerAttempt, puntReturns, puntTouchbacks, puntYards, punts, puntsHadBlocked, quarterbackHits, receivingLong, receivingTargets, receivingTouchdowns, receivingYards, receivingYardsPerReception, receivingYardsPerTarget, receptionPercentage, receptions, rushingAttempts, rushingLong, rushingTouchdowns, rushingYards, rushingYardsPerAttempt, sackYards, sacks, safeties, safetiesAllowed, scoreID, scoringDetails, season, seasonType, shortName, snapCountsConfirmed, soloTackles, specialTeamsAssistedTackles, specialTeamsFumblesForced, specialTeamsFumblesRecovered, specialTeamsSnapsPlayed, specialTeamsSoloTackles, specialTeamsTeamSnaps, specialTeamsTouchdowns, stadium, started, tackles, tacklesForLoss, team, teamID, temperature, touchdowns, twoPointConversionPasses, twoPointConversionReceptions, twoPointConversionReturns, twoPointConversionRuns, victivSalary, week, windSpeed, yahooPosition, yahooSalary);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PlayerGame {\n");
    sb.append("    activated: ").append(toIndentedString(activated)).append("\n");
    sb.append("    assistedTackles: ").append(toIndentedString(assistedTackles)).append("\n");
    sb.append("    blockedKickReturnTouchdowns: ").append(toIndentedString(blockedKickReturnTouchdowns)).append("\n");
    sb.append("    blockedKickReturnYards: ").append(toIndentedString(blockedKickReturnYards)).append("\n");
    sb.append("    blockedKicks: ").append(toIndentedString(blockedKicks)).append("\n");
    sb.append("    dateTime: ").append(toIndentedString(dateTime)).append("\n");
    sb.append("    day: ").append(toIndentedString(day)).append("\n");
    sb.append("    declaredInactive: ").append(toIndentedString(declaredInactive)).append("\n");
    sb.append("    defensiveSnapsPlayed: ").append(toIndentedString(defensiveSnapsPlayed)).append("\n");
    sb.append("    defensiveTeamSnaps: ").append(toIndentedString(defensiveTeamSnaps)).append("\n");
    sb.append("    defensiveTouchdowns: ").append(toIndentedString(defensiveTouchdowns)).append("\n");
    sb.append("    draftKingsPosition: ").append(toIndentedString(draftKingsPosition)).append("\n");
    sb.append("    draftKingsSalary: ").append(toIndentedString(draftKingsSalary)).append("\n");
    sb.append("    extraPointsAttempted: ").append(toIndentedString(extraPointsAttempted)).append("\n");
    sb.append("    extraPointsHadBlocked: ").append(toIndentedString(extraPointsHadBlocked)).append("\n");
    sb.append("    extraPointsMade: ").append(toIndentedString(extraPointsMade)).append("\n");
    sb.append("    fanDuelPosition: ").append(toIndentedString(fanDuelPosition)).append("\n");
    sb.append("    fanDuelSalary: ").append(toIndentedString(fanDuelSalary)).append("\n");
    sb.append("    fantasyDataSalary: ").append(toIndentedString(fantasyDataSalary)).append("\n");
    sb.append("    fantasyDraftPosition: ").append(toIndentedString(fantasyDraftPosition)).append("\n");
    sb.append("    fantasyDraftSalary: ").append(toIndentedString(fantasyDraftSalary)).append("\n");
    sb.append("    fantasyPoints: ").append(toIndentedString(fantasyPoints)).append("\n");
    sb.append("    fantasyPointsDraftKings: ").append(toIndentedString(fantasyPointsDraftKings)).append("\n");
    sb.append("    fantasyPointsFanDuel: ").append(toIndentedString(fantasyPointsFanDuel)).append("\n");
    sb.append("    fantasyPointsFantasyDraft: ").append(toIndentedString(fantasyPointsFantasyDraft)).append("\n");
    sb.append("    fantasyPointsPPR: ").append(toIndentedString(fantasyPointsPPR)).append("\n");
    sb.append("    fantasyPointsYahoo: ").append(toIndentedString(fantasyPointsYahoo)).append("\n");
    sb.append("    fantasyPosition: ").append(toIndentedString(fantasyPosition)).append("\n");
    sb.append("    fieldGoalPercentage: ").append(toIndentedString(fieldGoalPercentage)).append("\n");
    sb.append("    fieldGoalReturnTouchdowns: ").append(toIndentedString(fieldGoalReturnTouchdowns)).append("\n");
    sb.append("    fieldGoalReturnYards: ").append(toIndentedString(fieldGoalReturnYards)).append("\n");
    sb.append("    fieldGoalsAttempted: ").append(toIndentedString(fieldGoalsAttempted)).append("\n");
    sb.append("    fieldGoalsHadBlocked: ").append(toIndentedString(fieldGoalsHadBlocked)).append("\n");
    sb.append("    fieldGoalsLongestMade: ").append(toIndentedString(fieldGoalsLongestMade)).append("\n");
    sb.append("    fieldGoalsMade: ").append(toIndentedString(fieldGoalsMade)).append("\n");
    sb.append("    fieldGoalsMade0to19: ").append(toIndentedString(fieldGoalsMade0to19)).append("\n");
    sb.append("    fieldGoalsMade20to29: ").append(toIndentedString(fieldGoalsMade20to29)).append("\n");
    sb.append("    fieldGoalsMade30to39: ").append(toIndentedString(fieldGoalsMade30to39)).append("\n");
    sb.append("    fieldGoalsMade40to49: ").append(toIndentedString(fieldGoalsMade40to49)).append("\n");
    sb.append("    fieldGoalsMade50Plus: ").append(toIndentedString(fieldGoalsMade50Plus)).append("\n");
    sb.append("    fumbleReturnTouchdowns: ").append(toIndentedString(fumbleReturnTouchdowns)).append("\n");
    sb.append("    fumbleReturnYards: ").append(toIndentedString(fumbleReturnYards)).append("\n");
    sb.append("    fumbles: ").append(toIndentedString(fumbles)).append("\n");
    sb.append("    fumblesForced: ").append(toIndentedString(fumblesForced)).append("\n");
    sb.append("    fumblesLost: ").append(toIndentedString(fumblesLost)).append("\n");
    sb.append("    fumblesOutOfBounds: ").append(toIndentedString(fumblesOutOfBounds)).append("\n");
    sb.append("    fumblesOwnRecoveries: ").append(toIndentedString(fumblesOwnRecoveries)).append("\n");
    sb.append("    fumblesRecovered: ").append(toIndentedString(fumblesRecovered)).append("\n");
    sb.append("    gameDate: ").append(toIndentedString(gameDate)).append("\n");
    sb.append("    gameKey: ").append(toIndentedString(gameKey)).append("\n");
    sb.append("    globalGameID: ").append(toIndentedString(globalGameID)).append("\n");
    sb.append("    globalOpponentID: ").append(toIndentedString(globalOpponentID)).append("\n");
    sb.append("    globalTeamID: ").append(toIndentedString(globalTeamID)).append("\n");
    sb.append("    homeOrAway: ").append(toIndentedString(homeOrAway)).append("\n");
    sb.append("    humidity: ").append(toIndentedString(humidity)).append("\n");
    sb.append("    injuryBodyPart: ").append(toIndentedString(injuryBodyPart)).append("\n");
    sb.append("    injuryNotes: ").append(toIndentedString(injuryNotes)).append("\n");
    sb.append("    injuryPractice: ").append(toIndentedString(injuryPractice)).append("\n");
    sb.append("    injuryPracticeDescription: ").append(toIndentedString(injuryPracticeDescription)).append("\n");
    sb.append("    injuryStartDate: ").append(toIndentedString(injuryStartDate)).append("\n");
    sb.append("    injuryStatus: ").append(toIndentedString(injuryStatus)).append("\n");
    sb.append("    interceptionReturnTouchdowns: ").append(toIndentedString(interceptionReturnTouchdowns)).append("\n");
    sb.append("    interceptionReturnYards: ").append(toIndentedString(interceptionReturnYards)).append("\n");
    sb.append("    interceptions: ").append(toIndentedString(interceptions)).append("\n");
    sb.append("    isGameOver: ").append(toIndentedString(isGameOver)).append("\n");
    sb.append("    kickReturnFairCatches: ").append(toIndentedString(kickReturnFairCatches)).append("\n");
    sb.append("    kickReturnLong: ").append(toIndentedString(kickReturnLong)).append("\n");
    sb.append("    kickReturnTouchdowns: ").append(toIndentedString(kickReturnTouchdowns)).append("\n");
    sb.append("    kickReturnYards: ").append(toIndentedString(kickReturnYards)).append("\n");
    sb.append("    kickReturnYardsPerAttempt: ").append(toIndentedString(kickReturnYardsPerAttempt)).append("\n");
    sb.append("    kickReturns: ").append(toIndentedString(kickReturns)).append("\n");
    sb.append("    miscAssistedTackles: ").append(toIndentedString(miscAssistedTackles)).append("\n");
    sb.append("    miscFumblesForced: ").append(toIndentedString(miscFumblesForced)).append("\n");
    sb.append("    miscFumblesRecovered: ").append(toIndentedString(miscFumblesRecovered)).append("\n");
    sb.append("    miscSoloTackles: ").append(toIndentedString(miscSoloTackles)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    offensiveFumbleRecoveryTouchdowns: ").append(toIndentedString(offensiveFumbleRecoveryTouchdowns)).append("\n");
    sb.append("    offensiveSnapsPlayed: ").append(toIndentedString(offensiveSnapsPlayed)).append("\n");
    sb.append("    offensiveTeamSnaps: ").append(toIndentedString(offensiveTeamSnaps)).append("\n");
    sb.append("    offensiveTouchdowns: ").append(toIndentedString(offensiveTouchdowns)).append("\n");
    sb.append("    opponent: ").append(toIndentedString(opponent)).append("\n");
    sb.append("    opponentID: ").append(toIndentedString(opponentID)).append("\n");
    sb.append("    opponentPositionRank: ").append(toIndentedString(opponentPositionRank)).append("\n");
    sb.append("    opponentRank: ").append(toIndentedString(opponentRank)).append("\n");
    sb.append("    passesDefended: ").append(toIndentedString(passesDefended)).append("\n");
    sb.append("    passingAttempts: ").append(toIndentedString(passingAttempts)).append("\n");
    sb.append("    passingCompletionPercentage: ").append(toIndentedString(passingCompletionPercentage)).append("\n");
    sb.append("    passingCompletions: ").append(toIndentedString(passingCompletions)).append("\n");
    sb.append("    passingInterceptions: ").append(toIndentedString(passingInterceptions)).append("\n");
    sb.append("    passingLong: ").append(toIndentedString(passingLong)).append("\n");
    sb.append("    passingRating: ").append(toIndentedString(passingRating)).append("\n");
    sb.append("    passingSackYards: ").append(toIndentedString(passingSackYards)).append("\n");
    sb.append("    passingSacks: ").append(toIndentedString(passingSacks)).append("\n");
    sb.append("    passingTouchdowns: ").append(toIndentedString(passingTouchdowns)).append("\n");
    sb.append("    passingYards: ").append(toIndentedString(passingYards)).append("\n");
    sb.append("    passingYardsPerAttempt: ").append(toIndentedString(passingYardsPerAttempt)).append("\n");
    sb.append("    passingYardsPerCompletion: ").append(toIndentedString(passingYardsPerCompletion)).append("\n");
    sb.append("    played: ").append(toIndentedString(played)).append("\n");
    sb.append("    playerGameID: ").append(toIndentedString(playerGameID)).append("\n");
    sb.append("    playerID: ").append(toIndentedString(playerID)).append("\n");
    sb.append("    playingSurface: ").append(toIndentedString(playingSurface)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    positionCategory: ").append(toIndentedString(positionCategory)).append("\n");
    sb.append("    puntAverage: ").append(toIndentedString(puntAverage)).append("\n");
    sb.append("    puntInside20: ").append(toIndentedString(puntInside20)).append("\n");
    sb.append("    puntLong: ").append(toIndentedString(puntLong)).append("\n");
    sb.append("    puntNetAverage: ").append(toIndentedString(puntNetAverage)).append("\n");
    sb.append("    puntNetYards: ").append(toIndentedString(puntNetYards)).append("\n");
    sb.append("    puntReturnFairCatches: ").append(toIndentedString(puntReturnFairCatches)).append("\n");
    sb.append("    puntReturnLong: ").append(toIndentedString(puntReturnLong)).append("\n");
    sb.append("    puntReturnTouchdowns: ").append(toIndentedString(puntReturnTouchdowns)).append("\n");
    sb.append("    puntReturnYards: ").append(toIndentedString(puntReturnYards)).append("\n");
    sb.append("    puntReturnYardsPerAttempt: ").append(toIndentedString(puntReturnYardsPerAttempt)).append("\n");
    sb.append("    puntReturns: ").append(toIndentedString(puntReturns)).append("\n");
    sb.append("    puntTouchbacks: ").append(toIndentedString(puntTouchbacks)).append("\n");
    sb.append("    puntYards: ").append(toIndentedString(puntYards)).append("\n");
    sb.append("    punts: ").append(toIndentedString(punts)).append("\n");
    sb.append("    puntsHadBlocked: ").append(toIndentedString(puntsHadBlocked)).append("\n");
    sb.append("    quarterbackHits: ").append(toIndentedString(quarterbackHits)).append("\n");
    sb.append("    receivingLong: ").append(toIndentedString(receivingLong)).append("\n");
    sb.append("    receivingTargets: ").append(toIndentedString(receivingTargets)).append("\n");
    sb.append("    receivingTouchdowns: ").append(toIndentedString(receivingTouchdowns)).append("\n");
    sb.append("    receivingYards: ").append(toIndentedString(receivingYards)).append("\n");
    sb.append("    receivingYardsPerReception: ").append(toIndentedString(receivingYardsPerReception)).append("\n");
    sb.append("    receivingYardsPerTarget: ").append(toIndentedString(receivingYardsPerTarget)).append("\n");
    sb.append("    receptionPercentage: ").append(toIndentedString(receptionPercentage)).append("\n");
    sb.append("    receptions: ").append(toIndentedString(receptions)).append("\n");
    sb.append("    rushingAttempts: ").append(toIndentedString(rushingAttempts)).append("\n");
    sb.append("    rushingLong: ").append(toIndentedString(rushingLong)).append("\n");
    sb.append("    rushingTouchdowns: ").append(toIndentedString(rushingTouchdowns)).append("\n");
    sb.append("    rushingYards: ").append(toIndentedString(rushingYards)).append("\n");
    sb.append("    rushingYardsPerAttempt: ").append(toIndentedString(rushingYardsPerAttempt)).append("\n");
    sb.append("    sackYards: ").append(toIndentedString(sackYards)).append("\n");
    sb.append("    sacks: ").append(toIndentedString(sacks)).append("\n");
    sb.append("    safeties: ").append(toIndentedString(safeties)).append("\n");
    sb.append("    safetiesAllowed: ").append(toIndentedString(safetiesAllowed)).append("\n");
    sb.append("    scoreID: ").append(toIndentedString(scoreID)).append("\n");
    sb.append("    scoringDetails: ").append(toIndentedString(scoringDetails)).append("\n");
    sb.append("    season: ").append(toIndentedString(season)).append("\n");
    sb.append("    seasonType: ").append(toIndentedString(seasonType)).append("\n");
    sb.append("    shortName: ").append(toIndentedString(shortName)).append("\n");
    sb.append("    snapCountsConfirmed: ").append(toIndentedString(snapCountsConfirmed)).append("\n");
    sb.append("    soloTackles: ").append(toIndentedString(soloTackles)).append("\n");
    sb.append("    specialTeamsAssistedTackles: ").append(toIndentedString(specialTeamsAssistedTackles)).append("\n");
    sb.append("    specialTeamsFumblesForced: ").append(toIndentedString(specialTeamsFumblesForced)).append("\n");
    sb.append("    specialTeamsFumblesRecovered: ").append(toIndentedString(specialTeamsFumblesRecovered)).append("\n");
    sb.append("    specialTeamsSnapsPlayed: ").append(toIndentedString(specialTeamsSnapsPlayed)).append("\n");
    sb.append("    specialTeamsSoloTackles: ").append(toIndentedString(specialTeamsSoloTackles)).append("\n");
    sb.append("    specialTeamsTeamSnaps: ").append(toIndentedString(specialTeamsTeamSnaps)).append("\n");
    sb.append("    specialTeamsTouchdowns: ").append(toIndentedString(specialTeamsTouchdowns)).append("\n");
    sb.append("    stadium: ").append(toIndentedString(stadium)).append("\n");
    sb.append("    started: ").append(toIndentedString(started)).append("\n");
    sb.append("    tackles: ").append(toIndentedString(tackles)).append("\n");
    sb.append("    tacklesForLoss: ").append(toIndentedString(tacklesForLoss)).append("\n");
    sb.append("    team: ").append(toIndentedString(team)).append("\n");
    sb.append("    teamID: ").append(toIndentedString(teamID)).append("\n");
    sb.append("    temperature: ").append(toIndentedString(temperature)).append("\n");
    sb.append("    touchdowns: ").append(toIndentedString(touchdowns)).append("\n");
    sb.append("    twoPointConversionPasses: ").append(toIndentedString(twoPointConversionPasses)).append("\n");
    sb.append("    twoPointConversionReceptions: ").append(toIndentedString(twoPointConversionReceptions)).append("\n");
    sb.append("    twoPointConversionReturns: ").append(toIndentedString(twoPointConversionReturns)).append("\n");
    sb.append("    twoPointConversionRuns: ").append(toIndentedString(twoPointConversionRuns)).append("\n");
    sb.append("    victivSalary: ").append(toIndentedString(victivSalary)).append("\n");
    sb.append("    week: ").append(toIndentedString(week)).append("\n");
    sb.append("    windSpeed: ").append(toIndentedString(windSpeed)).append("\n");
    sb.append("    yahooPosition: ").append(toIndentedString(yahooPosition)).append("\n");
    sb.append("    yahooSalary: ").append(toIndentedString(yahooSalary)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Activated");
    openapiFields.add("AssistedTackles");
    openapiFields.add("BlockedKickReturnTouchdowns");
    openapiFields.add("BlockedKickReturnYards");
    openapiFields.add("BlockedKicks");
    openapiFields.add("DateTime");
    openapiFields.add("Day");
    openapiFields.add("DeclaredInactive");
    openapiFields.add("DefensiveSnapsPlayed");
    openapiFields.add("DefensiveTeamSnaps");
    openapiFields.add("DefensiveTouchdowns");
    openapiFields.add("DraftKingsPosition");
    openapiFields.add("DraftKingsSalary");
    openapiFields.add("ExtraPointsAttempted");
    openapiFields.add("ExtraPointsHadBlocked");
    openapiFields.add("ExtraPointsMade");
    openapiFields.add("FanDuelPosition");
    openapiFields.add("FanDuelSalary");
    openapiFields.add("FantasyDataSalary");
    openapiFields.add("FantasyDraftPosition");
    openapiFields.add("FantasyDraftSalary");
    openapiFields.add("FantasyPoints");
    openapiFields.add("FantasyPointsDraftKings");
    openapiFields.add("FantasyPointsFanDuel");
    openapiFields.add("FantasyPointsFantasyDraft");
    openapiFields.add("FantasyPointsPPR");
    openapiFields.add("FantasyPointsYahoo");
    openapiFields.add("FantasyPosition");
    openapiFields.add("FieldGoalPercentage");
    openapiFields.add("FieldGoalReturnTouchdowns");
    openapiFields.add("FieldGoalReturnYards");
    openapiFields.add("FieldGoalsAttempted");
    openapiFields.add("FieldGoalsHadBlocked");
    openapiFields.add("FieldGoalsLongestMade");
    openapiFields.add("FieldGoalsMade");
    openapiFields.add("FieldGoalsMade0to19");
    openapiFields.add("FieldGoalsMade20to29");
    openapiFields.add("FieldGoalsMade30to39");
    openapiFields.add("FieldGoalsMade40to49");
    openapiFields.add("FieldGoalsMade50Plus");
    openapiFields.add("FumbleReturnTouchdowns");
    openapiFields.add("FumbleReturnYards");
    openapiFields.add("Fumbles");
    openapiFields.add("FumblesForced");
    openapiFields.add("FumblesLost");
    openapiFields.add("FumblesOutOfBounds");
    openapiFields.add("FumblesOwnRecoveries");
    openapiFields.add("FumblesRecovered");
    openapiFields.add("GameDate");
    openapiFields.add("GameKey");
    openapiFields.add("GlobalGameID");
    openapiFields.add("GlobalOpponentID");
    openapiFields.add("GlobalTeamID");
    openapiFields.add("HomeOrAway");
    openapiFields.add("Humidity");
    openapiFields.add("InjuryBodyPart");
    openapiFields.add("InjuryNotes");
    openapiFields.add("InjuryPractice");
    openapiFields.add("InjuryPracticeDescription");
    openapiFields.add("InjuryStartDate");
    openapiFields.add("InjuryStatus");
    openapiFields.add("InterceptionReturnTouchdowns");
    openapiFields.add("InterceptionReturnYards");
    openapiFields.add("Interceptions");
    openapiFields.add("IsGameOver");
    openapiFields.add("KickReturnFairCatches");
    openapiFields.add("KickReturnLong");
    openapiFields.add("KickReturnTouchdowns");
    openapiFields.add("KickReturnYards");
    openapiFields.add("KickReturnYardsPerAttempt");
    openapiFields.add("KickReturns");
    openapiFields.add("MiscAssistedTackles");
    openapiFields.add("MiscFumblesForced");
    openapiFields.add("MiscFumblesRecovered");
    openapiFields.add("MiscSoloTackles");
    openapiFields.add("Name");
    openapiFields.add("Number");
    openapiFields.add("OffensiveFumbleRecoveryTouchdowns");
    openapiFields.add("OffensiveSnapsPlayed");
    openapiFields.add("OffensiveTeamSnaps");
    openapiFields.add("OffensiveTouchdowns");
    openapiFields.add("Opponent");
    openapiFields.add("OpponentID");
    openapiFields.add("OpponentPositionRank");
    openapiFields.add("OpponentRank");
    openapiFields.add("PassesDefended");
    openapiFields.add("PassingAttempts");
    openapiFields.add("PassingCompletionPercentage");
    openapiFields.add("PassingCompletions");
    openapiFields.add("PassingInterceptions");
    openapiFields.add("PassingLong");
    openapiFields.add("PassingRating");
    openapiFields.add("PassingSackYards");
    openapiFields.add("PassingSacks");
    openapiFields.add("PassingTouchdowns");
    openapiFields.add("PassingYards");
    openapiFields.add("PassingYardsPerAttempt");
    openapiFields.add("PassingYardsPerCompletion");
    openapiFields.add("Played");
    openapiFields.add("PlayerGameID");
    openapiFields.add("PlayerID");
    openapiFields.add("PlayingSurface");
    openapiFields.add("Position");
    openapiFields.add("PositionCategory");
    openapiFields.add("PuntAverage");
    openapiFields.add("PuntInside20");
    openapiFields.add("PuntLong");
    openapiFields.add("PuntNetAverage");
    openapiFields.add("PuntNetYards");
    openapiFields.add("PuntReturnFairCatches");
    openapiFields.add("PuntReturnLong");
    openapiFields.add("PuntReturnTouchdowns");
    openapiFields.add("PuntReturnYards");
    openapiFields.add("PuntReturnYardsPerAttempt");
    openapiFields.add("PuntReturns");
    openapiFields.add("PuntTouchbacks");
    openapiFields.add("PuntYards");
    openapiFields.add("Punts");
    openapiFields.add("PuntsHadBlocked");
    openapiFields.add("QuarterbackHits");
    openapiFields.add("ReceivingLong");
    openapiFields.add("ReceivingTargets");
    openapiFields.add("ReceivingTouchdowns");
    openapiFields.add("ReceivingYards");
    openapiFields.add("ReceivingYardsPerReception");
    openapiFields.add("ReceivingYardsPerTarget");
    openapiFields.add("ReceptionPercentage");
    openapiFields.add("Receptions");
    openapiFields.add("RushingAttempts");
    openapiFields.add("RushingLong");
    openapiFields.add("RushingTouchdowns");
    openapiFields.add("RushingYards");
    openapiFields.add("RushingYardsPerAttempt");
    openapiFields.add("SackYards");
    openapiFields.add("Sacks");
    openapiFields.add("Safeties");
    openapiFields.add("SafetiesAllowed");
    openapiFields.add("ScoreID");
    openapiFields.add("ScoringDetails");
    openapiFields.add("Season");
    openapiFields.add("SeasonType");
    openapiFields.add("ShortName");
    openapiFields.add("SnapCountsConfirmed");
    openapiFields.add("SoloTackles");
    openapiFields.add("SpecialTeamsAssistedTackles");
    openapiFields.add("SpecialTeamsFumblesForced");
    openapiFields.add("SpecialTeamsFumblesRecovered");
    openapiFields.add("SpecialTeamsSnapsPlayed");
    openapiFields.add("SpecialTeamsSoloTackles");
    openapiFields.add("SpecialTeamsTeamSnaps");
    openapiFields.add("SpecialTeamsTouchdowns");
    openapiFields.add("Stadium");
    openapiFields.add("Started");
    openapiFields.add("Tackles");
    openapiFields.add("TacklesForLoss");
    openapiFields.add("Team");
    openapiFields.add("TeamID");
    openapiFields.add("Temperature");
    openapiFields.add("Touchdowns");
    openapiFields.add("TwoPointConversionPasses");
    openapiFields.add("TwoPointConversionReceptions");
    openapiFields.add("TwoPointConversionReturns");
    openapiFields.add("TwoPointConversionRuns");
    openapiFields.add("VictivSalary");
    openapiFields.add("Week");
    openapiFields.add("WindSpeed");
    openapiFields.add("YahooPosition");
    openapiFields.add("YahooSalary");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PlayerGame
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PlayerGame.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PlayerGame is not found in the empty JSON string", PlayerGame.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PlayerGame.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PlayerGame` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("DateTime") != null && !jsonObj.get("DateTime").isJsonNull()) && !jsonObj.get("DateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DateTime").toString()));
      }
      if ((jsonObj.get("Day") != null && !jsonObj.get("Day").isJsonNull()) && !jsonObj.get("Day").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Day` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Day").toString()));
      }
      if ((jsonObj.get("DraftKingsPosition") != null && !jsonObj.get("DraftKingsPosition").isJsonNull()) && !jsonObj.get("DraftKingsPosition").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DraftKingsPosition` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DraftKingsPosition").toString()));
      }
      if ((jsonObj.get("FanDuelPosition") != null && !jsonObj.get("FanDuelPosition").isJsonNull()) && !jsonObj.get("FanDuelPosition").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `FanDuelPosition` to be a primitive type in the JSON string but got `%s`", jsonObj.get("FanDuelPosition").toString()));
      }
      if ((jsonObj.get("FantasyDraftPosition") != null && !jsonObj.get("FantasyDraftPosition").isJsonNull()) && !jsonObj.get("FantasyDraftPosition").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `FantasyDraftPosition` to be a primitive type in the JSON string but got `%s`", jsonObj.get("FantasyDraftPosition").toString()));
      }
      if ((jsonObj.get("FantasyPosition") != null && !jsonObj.get("FantasyPosition").isJsonNull()) && !jsonObj.get("FantasyPosition").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `FantasyPosition` to be a primitive type in the JSON string but got `%s`", jsonObj.get("FantasyPosition").toString()));
      }
      if ((jsonObj.get("GameDate") != null && !jsonObj.get("GameDate").isJsonNull()) && !jsonObj.get("GameDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `GameDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("GameDate").toString()));
      }
      if ((jsonObj.get("GameKey") != null && !jsonObj.get("GameKey").isJsonNull()) && !jsonObj.get("GameKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `GameKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("GameKey").toString()));
      }
      if ((jsonObj.get("HomeOrAway") != null && !jsonObj.get("HomeOrAway").isJsonNull()) && !jsonObj.get("HomeOrAway").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `HomeOrAway` to be a primitive type in the JSON string but got `%s`", jsonObj.get("HomeOrAway").toString()));
      }
      if ((jsonObj.get("InjuryBodyPart") != null && !jsonObj.get("InjuryBodyPart").isJsonNull()) && !jsonObj.get("InjuryBodyPart").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `InjuryBodyPart` to be a primitive type in the JSON string but got `%s`", jsonObj.get("InjuryBodyPart").toString()));
      }
      if ((jsonObj.get("InjuryNotes") != null && !jsonObj.get("InjuryNotes").isJsonNull()) && !jsonObj.get("InjuryNotes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `InjuryNotes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("InjuryNotes").toString()));
      }
      if ((jsonObj.get("InjuryPractice") != null && !jsonObj.get("InjuryPractice").isJsonNull()) && !jsonObj.get("InjuryPractice").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `InjuryPractice` to be a primitive type in the JSON string but got `%s`", jsonObj.get("InjuryPractice").toString()));
      }
      if ((jsonObj.get("InjuryPracticeDescription") != null && !jsonObj.get("InjuryPracticeDescription").isJsonNull()) && !jsonObj.get("InjuryPracticeDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `InjuryPracticeDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("InjuryPracticeDescription").toString()));
      }
      if ((jsonObj.get("InjuryStartDate") != null && !jsonObj.get("InjuryStartDate").isJsonNull()) && !jsonObj.get("InjuryStartDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `InjuryStartDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("InjuryStartDate").toString()));
      }
      if ((jsonObj.get("InjuryStatus") != null && !jsonObj.get("InjuryStatus").isJsonNull()) && !jsonObj.get("InjuryStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `InjuryStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("InjuryStatus").toString()));
      }
      if ((jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) && !jsonObj.get("Name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Name").toString()));
      }
      if ((jsonObj.get("Opponent") != null && !jsonObj.get("Opponent").isJsonNull()) && !jsonObj.get("Opponent").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Opponent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Opponent").toString()));
      }
      if ((jsonObj.get("PlayingSurface") != null && !jsonObj.get("PlayingSurface").isJsonNull()) && !jsonObj.get("PlayingSurface").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PlayingSurface` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PlayingSurface").toString()));
      }
      if ((jsonObj.get("Position") != null && !jsonObj.get("Position").isJsonNull()) && !jsonObj.get("Position").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Position` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Position").toString()));
      }
      if ((jsonObj.get("PositionCategory") != null && !jsonObj.get("PositionCategory").isJsonNull()) && !jsonObj.get("PositionCategory").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PositionCategory` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PositionCategory").toString()));
      }
      if (jsonObj.get("ScoringDetails") != null && !jsonObj.get("ScoringDetails").isJsonNull()) {
        JsonArray jsonArrayscoringDetails = jsonObj.getAsJsonArray("ScoringDetails");
        if (jsonArrayscoringDetails != null) {
          // ensure the json data is an array
          if (!jsonObj.get("ScoringDetails").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `ScoringDetails` to be an array in the JSON string but got `%s`", jsonObj.get("ScoringDetails").toString()));
          }

          // validate the optional field `ScoringDetails` (array)
          for (int i = 0; i < jsonArrayscoringDetails.size(); i++) {
            ScoringDetail.validateJsonElement(jsonArrayscoringDetails.get(i));
          };
        }
      }
      if ((jsonObj.get("ShortName") != null && !jsonObj.get("ShortName").isJsonNull()) && !jsonObj.get("ShortName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ShortName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ShortName").toString()));
      }
      if ((jsonObj.get("Stadium") != null && !jsonObj.get("Stadium").isJsonNull()) && !jsonObj.get("Stadium").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Stadium` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Stadium").toString()));
      }
      if ((jsonObj.get("Team") != null && !jsonObj.get("Team").isJsonNull()) && !jsonObj.get("Team").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Team` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Team").toString()));
      }
      if ((jsonObj.get("YahooPosition") != null && !jsonObj.get("YahooPosition").isJsonNull()) && !jsonObj.get("YahooPosition").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `YahooPosition` to be a primitive type in the JSON string but got `%s`", jsonObj.get("YahooPosition").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PlayerGame.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PlayerGame' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PlayerGame> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PlayerGame.class));

       return (TypeAdapter<T>) new TypeAdapter<PlayerGame>() {
           @Override
           public void write(JsonWriter out, PlayerGame value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PlayerGame read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PlayerGame given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PlayerGame
   * @throws IOException if the JSON string is invalid with respect to PlayerGame
   */
  public static PlayerGame fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PlayerGame.class);
  }

  /**
   * Convert an instance of PlayerGame to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

