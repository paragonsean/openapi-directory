/*
 * NFL v3 Stats
 * NFL rosters, player stats, team stats, and fantasy stats API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PlayerKicking
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:05:11.789534-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PlayerKicking {
  public static final String SERIALIZED_NAME_EXTRA_POINTS_ATTEMPTED = "ExtraPointsAttempted";
  @SerializedName(SERIALIZED_NAME_EXTRA_POINTS_ATTEMPTED)
  private Integer extraPointsAttempted;

  public static final String SERIALIZED_NAME_EXTRA_POINTS_MADE = "ExtraPointsMade";
  @SerializedName(SERIALIZED_NAME_EXTRA_POINTS_MADE)
  private Integer extraPointsMade;

  public static final String SERIALIZED_NAME_FANTASY_POINTS = "FantasyPoints";
  @SerializedName(SERIALIZED_NAME_FANTASY_POINTS)
  private BigDecimal fantasyPoints;

  public static final String SERIALIZED_NAME_FANTASY_POSITION = "FantasyPosition";
  @SerializedName(SERIALIZED_NAME_FANTASY_POSITION)
  private String fantasyPosition;

  public static final String SERIALIZED_NAME_FIELD_GOAL_PERCENTAGE = "FieldGoalPercentage";
  @SerializedName(SERIALIZED_NAME_FIELD_GOAL_PERCENTAGE)
  private BigDecimal fieldGoalPercentage;

  public static final String SERIALIZED_NAME_FIELD_GOALS_ATTEMPTED = "FieldGoalsAttempted";
  @SerializedName(SERIALIZED_NAME_FIELD_GOALS_ATTEMPTED)
  private Integer fieldGoalsAttempted;

  public static final String SERIALIZED_NAME_FIELD_GOALS_LONGEST_MADE = "FieldGoalsLongestMade";
  @SerializedName(SERIALIZED_NAME_FIELD_GOALS_LONGEST_MADE)
  private Integer fieldGoalsLongestMade;

  public static final String SERIALIZED_NAME_FIELD_GOALS_MADE = "FieldGoalsMade";
  @SerializedName(SERIALIZED_NAME_FIELD_GOALS_MADE)
  private Integer fieldGoalsMade;

  public static final String SERIALIZED_NAME_FIELD_GOALS_MADE0TO19 = "FieldGoalsMade0to19";
  @SerializedName(SERIALIZED_NAME_FIELD_GOALS_MADE0TO19)
  private Integer fieldGoalsMade0to19;

  public static final String SERIALIZED_NAME_FIELD_GOALS_MADE20TO29 = "FieldGoalsMade20to29";
  @SerializedName(SERIALIZED_NAME_FIELD_GOALS_MADE20TO29)
  private Integer fieldGoalsMade20to29;

  public static final String SERIALIZED_NAME_FIELD_GOALS_MADE30TO39 = "FieldGoalsMade30to39";
  @SerializedName(SERIALIZED_NAME_FIELD_GOALS_MADE30TO39)
  private Integer fieldGoalsMade30to39;

  public static final String SERIALIZED_NAME_FIELD_GOALS_MADE40TO49 = "FieldGoalsMade40to49";
  @SerializedName(SERIALIZED_NAME_FIELD_GOALS_MADE40TO49)
  private Integer fieldGoalsMade40to49;

  public static final String SERIALIZED_NAME_FIELD_GOALS_MADE50_PLUS = "FieldGoalsMade50Plus";
  @SerializedName(SERIALIZED_NAME_FIELD_GOALS_MADE50_PLUS)
  private Integer fieldGoalsMade50Plus;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NUMBER = "Number";
  @SerializedName(SERIALIZED_NAME_NUMBER)
  private Integer number;

  public static final String SERIALIZED_NAME_PLAYER_GAME_I_D = "PlayerGameID";
  @SerializedName(SERIALIZED_NAME_PLAYER_GAME_I_D)
  private Integer playerGameID;

  public static final String SERIALIZED_NAME_PLAYER_I_D = "PlayerID";
  @SerializedName(SERIALIZED_NAME_PLAYER_I_D)
  private Integer playerID;

  public static final String SERIALIZED_NAME_POSITION = "Position";
  @SerializedName(SERIALIZED_NAME_POSITION)
  private String position;

  public static final String SERIALIZED_NAME_POSITION_CATEGORY = "PositionCategory";
  @SerializedName(SERIALIZED_NAME_POSITION_CATEGORY)
  private String positionCategory;

  public static final String SERIALIZED_NAME_SHORT_NAME = "ShortName";
  @SerializedName(SERIALIZED_NAME_SHORT_NAME)
  private String shortName;

  public static final String SERIALIZED_NAME_TEAM = "Team";
  @SerializedName(SERIALIZED_NAME_TEAM)
  private String team;

  public static final String SERIALIZED_NAME_UPDATED = "Updated";
  @SerializedName(SERIALIZED_NAME_UPDATED)
  private String updated;

  public PlayerKicking() {
  }

  public PlayerKicking extraPointsAttempted(Integer extraPointsAttempted) {
    this.extraPointsAttempted = extraPointsAttempted;
    return this;
  }

  /**
   * Get extraPointsAttempted
   * @return extraPointsAttempted
   */
  @javax.annotation.Nullable
  public Integer getExtraPointsAttempted() {
    return extraPointsAttempted;
  }

  public void setExtraPointsAttempted(Integer extraPointsAttempted) {
    this.extraPointsAttempted = extraPointsAttempted;
  }


  public PlayerKicking extraPointsMade(Integer extraPointsMade) {
    this.extraPointsMade = extraPointsMade;
    return this;
  }

  /**
   * Get extraPointsMade
   * @return extraPointsMade
   */
  @javax.annotation.Nullable
  public Integer getExtraPointsMade() {
    return extraPointsMade;
  }

  public void setExtraPointsMade(Integer extraPointsMade) {
    this.extraPointsMade = extraPointsMade;
  }


  public PlayerKicking fantasyPoints(BigDecimal fantasyPoints) {
    this.fantasyPoints = fantasyPoints;
    return this;
  }

  /**
   * Get fantasyPoints
   * @return fantasyPoints
   */
  @javax.annotation.Nullable
  public BigDecimal getFantasyPoints() {
    return fantasyPoints;
  }

  public void setFantasyPoints(BigDecimal fantasyPoints) {
    this.fantasyPoints = fantasyPoints;
  }


  public PlayerKicking fantasyPosition(String fantasyPosition) {
    this.fantasyPosition = fantasyPosition;
    return this;
  }

  /**
   * Get fantasyPosition
   * @return fantasyPosition
   */
  @javax.annotation.Nullable
  public String getFantasyPosition() {
    return fantasyPosition;
  }

  public void setFantasyPosition(String fantasyPosition) {
    this.fantasyPosition = fantasyPosition;
  }


  public PlayerKicking fieldGoalPercentage(BigDecimal fieldGoalPercentage) {
    this.fieldGoalPercentage = fieldGoalPercentage;
    return this;
  }

  /**
   * Get fieldGoalPercentage
   * @return fieldGoalPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getFieldGoalPercentage() {
    return fieldGoalPercentage;
  }

  public void setFieldGoalPercentage(BigDecimal fieldGoalPercentage) {
    this.fieldGoalPercentage = fieldGoalPercentage;
  }


  public PlayerKicking fieldGoalsAttempted(Integer fieldGoalsAttempted) {
    this.fieldGoalsAttempted = fieldGoalsAttempted;
    return this;
  }

  /**
   * Get fieldGoalsAttempted
   * @return fieldGoalsAttempted
   */
  @javax.annotation.Nullable
  public Integer getFieldGoalsAttempted() {
    return fieldGoalsAttempted;
  }

  public void setFieldGoalsAttempted(Integer fieldGoalsAttempted) {
    this.fieldGoalsAttempted = fieldGoalsAttempted;
  }


  public PlayerKicking fieldGoalsLongestMade(Integer fieldGoalsLongestMade) {
    this.fieldGoalsLongestMade = fieldGoalsLongestMade;
    return this;
  }

  /**
   * Get fieldGoalsLongestMade
   * @return fieldGoalsLongestMade
   */
  @javax.annotation.Nullable
  public Integer getFieldGoalsLongestMade() {
    return fieldGoalsLongestMade;
  }

  public void setFieldGoalsLongestMade(Integer fieldGoalsLongestMade) {
    this.fieldGoalsLongestMade = fieldGoalsLongestMade;
  }


  public PlayerKicking fieldGoalsMade(Integer fieldGoalsMade) {
    this.fieldGoalsMade = fieldGoalsMade;
    return this;
  }

  /**
   * Get fieldGoalsMade
   * @return fieldGoalsMade
   */
  @javax.annotation.Nullable
  public Integer getFieldGoalsMade() {
    return fieldGoalsMade;
  }

  public void setFieldGoalsMade(Integer fieldGoalsMade) {
    this.fieldGoalsMade = fieldGoalsMade;
  }


  public PlayerKicking fieldGoalsMade0to19(Integer fieldGoalsMade0to19) {
    this.fieldGoalsMade0to19 = fieldGoalsMade0to19;
    return this;
  }

  /**
   * Get fieldGoalsMade0to19
   * @return fieldGoalsMade0to19
   */
  @javax.annotation.Nullable
  public Integer getFieldGoalsMade0to19() {
    return fieldGoalsMade0to19;
  }

  public void setFieldGoalsMade0to19(Integer fieldGoalsMade0to19) {
    this.fieldGoalsMade0to19 = fieldGoalsMade0to19;
  }


  public PlayerKicking fieldGoalsMade20to29(Integer fieldGoalsMade20to29) {
    this.fieldGoalsMade20to29 = fieldGoalsMade20to29;
    return this;
  }

  /**
   * Get fieldGoalsMade20to29
   * @return fieldGoalsMade20to29
   */
  @javax.annotation.Nullable
  public Integer getFieldGoalsMade20to29() {
    return fieldGoalsMade20to29;
  }

  public void setFieldGoalsMade20to29(Integer fieldGoalsMade20to29) {
    this.fieldGoalsMade20to29 = fieldGoalsMade20to29;
  }


  public PlayerKicking fieldGoalsMade30to39(Integer fieldGoalsMade30to39) {
    this.fieldGoalsMade30to39 = fieldGoalsMade30to39;
    return this;
  }

  /**
   * Get fieldGoalsMade30to39
   * @return fieldGoalsMade30to39
   */
  @javax.annotation.Nullable
  public Integer getFieldGoalsMade30to39() {
    return fieldGoalsMade30to39;
  }

  public void setFieldGoalsMade30to39(Integer fieldGoalsMade30to39) {
    this.fieldGoalsMade30to39 = fieldGoalsMade30to39;
  }


  public PlayerKicking fieldGoalsMade40to49(Integer fieldGoalsMade40to49) {
    this.fieldGoalsMade40to49 = fieldGoalsMade40to49;
    return this;
  }

  /**
   * Get fieldGoalsMade40to49
   * @return fieldGoalsMade40to49
   */
  @javax.annotation.Nullable
  public Integer getFieldGoalsMade40to49() {
    return fieldGoalsMade40to49;
  }

  public void setFieldGoalsMade40to49(Integer fieldGoalsMade40to49) {
    this.fieldGoalsMade40to49 = fieldGoalsMade40to49;
  }


  public PlayerKicking fieldGoalsMade50Plus(Integer fieldGoalsMade50Plus) {
    this.fieldGoalsMade50Plus = fieldGoalsMade50Plus;
    return this;
  }

  /**
   * Get fieldGoalsMade50Plus
   * @return fieldGoalsMade50Plus
   */
  @javax.annotation.Nullable
  public Integer getFieldGoalsMade50Plus() {
    return fieldGoalsMade50Plus;
  }

  public void setFieldGoalsMade50Plus(Integer fieldGoalsMade50Plus) {
    this.fieldGoalsMade50Plus = fieldGoalsMade50Plus;
  }


  public PlayerKicking name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public PlayerKicking number(Integer number) {
    this.number = number;
    return this;
  }

  /**
   * Get number
   * @return number
   */
  @javax.annotation.Nullable
  public Integer getNumber() {
    return number;
  }

  public void setNumber(Integer number) {
    this.number = number;
  }


  public PlayerKicking playerGameID(Integer playerGameID) {
    this.playerGameID = playerGameID;
    return this;
  }

  /**
   * Get playerGameID
   * @return playerGameID
   */
  @javax.annotation.Nullable
  public Integer getPlayerGameID() {
    return playerGameID;
  }

  public void setPlayerGameID(Integer playerGameID) {
    this.playerGameID = playerGameID;
  }


  public PlayerKicking playerID(Integer playerID) {
    this.playerID = playerID;
    return this;
  }

  /**
   * Get playerID
   * @return playerID
   */
  @javax.annotation.Nullable
  public Integer getPlayerID() {
    return playerID;
  }

  public void setPlayerID(Integer playerID) {
    this.playerID = playerID;
  }


  public PlayerKicking position(String position) {
    this.position = position;
    return this;
  }

  /**
   * Get position
   * @return position
   */
  @javax.annotation.Nullable
  public String getPosition() {
    return position;
  }

  public void setPosition(String position) {
    this.position = position;
  }


  public PlayerKicking positionCategory(String positionCategory) {
    this.positionCategory = positionCategory;
    return this;
  }

  /**
   * Get positionCategory
   * @return positionCategory
   */
  @javax.annotation.Nullable
  public String getPositionCategory() {
    return positionCategory;
  }

  public void setPositionCategory(String positionCategory) {
    this.positionCategory = positionCategory;
  }


  public PlayerKicking shortName(String shortName) {
    this.shortName = shortName;
    return this;
  }

  /**
   * Get shortName
   * @return shortName
   */
  @javax.annotation.Nullable
  public String getShortName() {
    return shortName;
  }

  public void setShortName(String shortName) {
    this.shortName = shortName;
  }


  public PlayerKicking team(String team) {
    this.team = team;
    return this;
  }

  /**
   * Get team
   * @return team
   */
  @javax.annotation.Nullable
  public String getTeam() {
    return team;
  }

  public void setTeam(String team) {
    this.team = team;
  }


  public PlayerKicking updated(String updated) {
    this.updated = updated;
    return this;
  }

  /**
   * Get updated
   * @return updated
   */
  @javax.annotation.Nullable
  public String getUpdated() {
    return updated;
  }

  public void setUpdated(String updated) {
    this.updated = updated;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PlayerKicking playerKicking = (PlayerKicking) o;
    return Objects.equals(this.extraPointsAttempted, playerKicking.extraPointsAttempted) &&
        Objects.equals(this.extraPointsMade, playerKicking.extraPointsMade) &&
        Objects.equals(this.fantasyPoints, playerKicking.fantasyPoints) &&
        Objects.equals(this.fantasyPosition, playerKicking.fantasyPosition) &&
        Objects.equals(this.fieldGoalPercentage, playerKicking.fieldGoalPercentage) &&
        Objects.equals(this.fieldGoalsAttempted, playerKicking.fieldGoalsAttempted) &&
        Objects.equals(this.fieldGoalsLongestMade, playerKicking.fieldGoalsLongestMade) &&
        Objects.equals(this.fieldGoalsMade, playerKicking.fieldGoalsMade) &&
        Objects.equals(this.fieldGoalsMade0to19, playerKicking.fieldGoalsMade0to19) &&
        Objects.equals(this.fieldGoalsMade20to29, playerKicking.fieldGoalsMade20to29) &&
        Objects.equals(this.fieldGoalsMade30to39, playerKicking.fieldGoalsMade30to39) &&
        Objects.equals(this.fieldGoalsMade40to49, playerKicking.fieldGoalsMade40to49) &&
        Objects.equals(this.fieldGoalsMade50Plus, playerKicking.fieldGoalsMade50Plus) &&
        Objects.equals(this.name, playerKicking.name) &&
        Objects.equals(this.number, playerKicking.number) &&
        Objects.equals(this.playerGameID, playerKicking.playerGameID) &&
        Objects.equals(this.playerID, playerKicking.playerID) &&
        Objects.equals(this.position, playerKicking.position) &&
        Objects.equals(this.positionCategory, playerKicking.positionCategory) &&
        Objects.equals(this.shortName, playerKicking.shortName) &&
        Objects.equals(this.team, playerKicking.team) &&
        Objects.equals(this.updated, playerKicking.updated);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(extraPointsAttempted, extraPointsMade, fantasyPoints, fantasyPosition, fieldGoalPercentage, fieldGoalsAttempted, fieldGoalsLongestMade, fieldGoalsMade, fieldGoalsMade0to19, fieldGoalsMade20to29, fieldGoalsMade30to39, fieldGoalsMade40to49, fieldGoalsMade50Plus, name, number, playerGameID, playerID, position, positionCategory, shortName, team, updated);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PlayerKicking {\n");
    sb.append("    extraPointsAttempted: ").append(toIndentedString(extraPointsAttempted)).append("\n");
    sb.append("    extraPointsMade: ").append(toIndentedString(extraPointsMade)).append("\n");
    sb.append("    fantasyPoints: ").append(toIndentedString(fantasyPoints)).append("\n");
    sb.append("    fantasyPosition: ").append(toIndentedString(fantasyPosition)).append("\n");
    sb.append("    fieldGoalPercentage: ").append(toIndentedString(fieldGoalPercentage)).append("\n");
    sb.append("    fieldGoalsAttempted: ").append(toIndentedString(fieldGoalsAttempted)).append("\n");
    sb.append("    fieldGoalsLongestMade: ").append(toIndentedString(fieldGoalsLongestMade)).append("\n");
    sb.append("    fieldGoalsMade: ").append(toIndentedString(fieldGoalsMade)).append("\n");
    sb.append("    fieldGoalsMade0to19: ").append(toIndentedString(fieldGoalsMade0to19)).append("\n");
    sb.append("    fieldGoalsMade20to29: ").append(toIndentedString(fieldGoalsMade20to29)).append("\n");
    sb.append("    fieldGoalsMade30to39: ").append(toIndentedString(fieldGoalsMade30to39)).append("\n");
    sb.append("    fieldGoalsMade40to49: ").append(toIndentedString(fieldGoalsMade40to49)).append("\n");
    sb.append("    fieldGoalsMade50Plus: ").append(toIndentedString(fieldGoalsMade50Plus)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    playerGameID: ").append(toIndentedString(playerGameID)).append("\n");
    sb.append("    playerID: ").append(toIndentedString(playerID)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    positionCategory: ").append(toIndentedString(positionCategory)).append("\n");
    sb.append("    shortName: ").append(toIndentedString(shortName)).append("\n");
    sb.append("    team: ").append(toIndentedString(team)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ExtraPointsAttempted");
    openapiFields.add("ExtraPointsMade");
    openapiFields.add("FantasyPoints");
    openapiFields.add("FantasyPosition");
    openapiFields.add("FieldGoalPercentage");
    openapiFields.add("FieldGoalsAttempted");
    openapiFields.add("FieldGoalsLongestMade");
    openapiFields.add("FieldGoalsMade");
    openapiFields.add("FieldGoalsMade0to19");
    openapiFields.add("FieldGoalsMade20to29");
    openapiFields.add("FieldGoalsMade30to39");
    openapiFields.add("FieldGoalsMade40to49");
    openapiFields.add("FieldGoalsMade50Plus");
    openapiFields.add("Name");
    openapiFields.add("Number");
    openapiFields.add("PlayerGameID");
    openapiFields.add("PlayerID");
    openapiFields.add("Position");
    openapiFields.add("PositionCategory");
    openapiFields.add("ShortName");
    openapiFields.add("Team");
    openapiFields.add("Updated");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PlayerKicking
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PlayerKicking.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PlayerKicking is not found in the empty JSON string", PlayerKicking.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PlayerKicking.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PlayerKicking` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("FantasyPosition") != null && !jsonObj.get("FantasyPosition").isJsonNull()) && !jsonObj.get("FantasyPosition").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `FantasyPosition` to be a primitive type in the JSON string but got `%s`", jsonObj.get("FantasyPosition").toString()));
      }
      if ((jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) && !jsonObj.get("Name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Name").toString()));
      }
      if ((jsonObj.get("Position") != null && !jsonObj.get("Position").isJsonNull()) && !jsonObj.get("Position").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Position` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Position").toString()));
      }
      if ((jsonObj.get("PositionCategory") != null && !jsonObj.get("PositionCategory").isJsonNull()) && !jsonObj.get("PositionCategory").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PositionCategory` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PositionCategory").toString()));
      }
      if ((jsonObj.get("ShortName") != null && !jsonObj.get("ShortName").isJsonNull()) && !jsonObj.get("ShortName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ShortName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ShortName").toString()));
      }
      if ((jsonObj.get("Team") != null && !jsonObj.get("Team").isJsonNull()) && !jsonObj.get("Team").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Team` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Team").toString()));
      }
      if ((jsonObj.get("Updated") != null && !jsonObj.get("Updated").isJsonNull()) && !jsonObj.get("Updated").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Updated` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Updated").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PlayerKicking.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PlayerKicking' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PlayerKicking> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PlayerKicking.class));

       return (TypeAdapter<T>) new TypeAdapter<PlayerKicking>() {
           @Override
           public void write(JsonWriter out, PlayerKicking value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PlayerKicking read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PlayerKicking given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PlayerKicking
   * @throws IOException if the JSON string is invalid with respect to PlayerKicking
   */
  public static PlayerKicking fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PlayerKicking.class);
  }

  /**
   * Convert an instance of PlayerKicking to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

