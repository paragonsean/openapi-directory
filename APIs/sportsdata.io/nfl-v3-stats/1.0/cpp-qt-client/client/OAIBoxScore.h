/**
 * NFL v3 Stats
 * NFL rosters, player stats, team stats, and fantasy stats API.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBoxScore.h
 *
 * 
 */

#ifndef OAIBoxScore_H
#define OAIBoxScore_H

#include <QJsonObject>

#include "OAIFantasyDefenseGame.h"
#include "OAIGame.h"
#include "OAIPlayerDefense.h"
#include "OAIPlayerKickPuntReturns.h"
#include "OAIPlayerKicking.h"
#include "OAIPlayerPassing.h"
#include "OAIPlayerPunting.h"
#include "OAIPlayerReceiving.h"
#include "OAIPlayerRushing.h"
#include "OAIScore.h"
#include "OAIScoringDetail.h"
#include "OAIScoringPlay.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPlayerDefense;
class OAIFantasyDefenseGame;
class OAIPlayerKickPuntReturns;
class OAIPlayerKicking;
class OAIPlayerPassing;
class OAIPlayerPunting;
class OAIPlayerReceiving;
class OAIPlayerRushing;
class OAIGame;
class OAIScore;
class OAIScoringDetail;
class OAIScoringPlay;

class OAIBoxScore : public OAIObject {
public:
    OAIBoxScore();
    OAIBoxScore(QString json);
    ~OAIBoxScore() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIPlayerDefense> getAwayDefense() const;
    void setAwayDefense(const QList<OAIPlayerDefense> &away_defense);
    bool is_away_defense_Set() const;
    bool is_away_defense_Valid() const;

    OAIFantasyDefenseGame getAwayFantasyDefense() const;
    void setAwayFantasyDefense(const OAIFantasyDefenseGame &away_fantasy_defense);
    bool is_away_fantasy_defense_Set() const;
    bool is_away_fantasy_defense_Valid() const;

    QList<OAIPlayerKickPuntReturns> getAwayKickPuntReturns() const;
    void setAwayKickPuntReturns(const QList<OAIPlayerKickPuntReturns> &away_kick_punt_returns);
    bool is_away_kick_punt_returns_Set() const;
    bool is_away_kick_punt_returns_Valid() const;

    QList<OAIPlayerKicking> getAwayKicking() const;
    void setAwayKicking(const QList<OAIPlayerKicking> &away_kicking);
    bool is_away_kicking_Set() const;
    bool is_away_kicking_Valid() const;

    QList<OAIPlayerPassing> getAwayPassing() const;
    void setAwayPassing(const QList<OAIPlayerPassing> &away_passing);
    bool is_away_passing_Set() const;
    bool is_away_passing_Valid() const;

    QList<OAIPlayerPunting> getAwayPunting() const;
    void setAwayPunting(const QList<OAIPlayerPunting> &away_punting);
    bool is_away_punting_Set() const;
    bool is_away_punting_Valid() const;

    QList<OAIPlayerReceiving> getAwayReceiving() const;
    void setAwayReceiving(const QList<OAIPlayerReceiving> &away_receiving);
    bool is_away_receiving_Set() const;
    bool is_away_receiving_Valid() const;

    QList<OAIPlayerRushing> getAwayRushing() const;
    void setAwayRushing(const QList<OAIPlayerRushing> &away_rushing);
    bool is_away_rushing_Set() const;
    bool is_away_rushing_Valid() const;

    OAIGame getGame() const;
    void setGame(const OAIGame &game);
    bool is_game_Set() const;
    bool is_game_Valid() const;

    QList<OAIPlayerDefense> getHomeDefense() const;
    void setHomeDefense(const QList<OAIPlayerDefense> &home_defense);
    bool is_home_defense_Set() const;
    bool is_home_defense_Valid() const;

    OAIFantasyDefenseGame getHomeFantasyDefense() const;
    void setHomeFantasyDefense(const OAIFantasyDefenseGame &home_fantasy_defense);
    bool is_home_fantasy_defense_Set() const;
    bool is_home_fantasy_defense_Valid() const;

    QList<OAIPlayerKickPuntReturns> getHomeKickPuntReturns() const;
    void setHomeKickPuntReturns(const QList<OAIPlayerKickPuntReturns> &home_kick_punt_returns);
    bool is_home_kick_punt_returns_Set() const;
    bool is_home_kick_punt_returns_Valid() const;

    QList<OAIPlayerKicking> getHomeKicking() const;
    void setHomeKicking(const QList<OAIPlayerKicking> &home_kicking);
    bool is_home_kicking_Set() const;
    bool is_home_kicking_Valid() const;

    QList<OAIPlayerPassing> getHomePassing() const;
    void setHomePassing(const QList<OAIPlayerPassing> &home_passing);
    bool is_home_passing_Set() const;
    bool is_home_passing_Valid() const;

    QList<OAIPlayerPunting> getHomePunting() const;
    void setHomePunting(const QList<OAIPlayerPunting> &home_punting);
    bool is_home_punting_Set() const;
    bool is_home_punting_Valid() const;

    QList<OAIPlayerReceiving> getHomeReceiving() const;
    void setHomeReceiving(const QList<OAIPlayerReceiving> &home_receiving);
    bool is_home_receiving_Set() const;
    bool is_home_receiving_Valid() const;

    QList<OAIPlayerRushing> getHomeRushing() const;
    void setHomeRushing(const QList<OAIPlayerRushing> &home_rushing);
    bool is_home_rushing_Set() const;
    bool is_home_rushing_Valid() const;

    OAIScore getScore() const;
    void setScore(const OAIScore &score);
    bool is_score_Set() const;
    bool is_score_Valid() const;

    QList<OAIScoringDetail> getScoringDetails() const;
    void setScoringDetails(const QList<OAIScoringDetail> &scoring_details);
    bool is_scoring_details_Set() const;
    bool is_scoring_details_Valid() const;

    QList<OAIScoringPlay> getScoringPlays() const;
    void setScoringPlays(const QList<OAIScoringPlay> &scoring_plays);
    bool is_scoring_plays_Set() const;
    bool is_scoring_plays_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIPlayerDefense> m_away_defense;
    bool m_away_defense_isSet;
    bool m_away_defense_isValid;

    OAIFantasyDefenseGame m_away_fantasy_defense;
    bool m_away_fantasy_defense_isSet;
    bool m_away_fantasy_defense_isValid;

    QList<OAIPlayerKickPuntReturns> m_away_kick_punt_returns;
    bool m_away_kick_punt_returns_isSet;
    bool m_away_kick_punt_returns_isValid;

    QList<OAIPlayerKicking> m_away_kicking;
    bool m_away_kicking_isSet;
    bool m_away_kicking_isValid;

    QList<OAIPlayerPassing> m_away_passing;
    bool m_away_passing_isSet;
    bool m_away_passing_isValid;

    QList<OAIPlayerPunting> m_away_punting;
    bool m_away_punting_isSet;
    bool m_away_punting_isValid;

    QList<OAIPlayerReceiving> m_away_receiving;
    bool m_away_receiving_isSet;
    bool m_away_receiving_isValid;

    QList<OAIPlayerRushing> m_away_rushing;
    bool m_away_rushing_isSet;
    bool m_away_rushing_isValid;

    OAIGame m_game;
    bool m_game_isSet;
    bool m_game_isValid;

    QList<OAIPlayerDefense> m_home_defense;
    bool m_home_defense_isSet;
    bool m_home_defense_isValid;

    OAIFantasyDefenseGame m_home_fantasy_defense;
    bool m_home_fantasy_defense_isSet;
    bool m_home_fantasy_defense_isValid;

    QList<OAIPlayerKickPuntReturns> m_home_kick_punt_returns;
    bool m_home_kick_punt_returns_isSet;
    bool m_home_kick_punt_returns_isValid;

    QList<OAIPlayerKicking> m_home_kicking;
    bool m_home_kicking_isSet;
    bool m_home_kicking_isValid;

    QList<OAIPlayerPassing> m_home_passing;
    bool m_home_passing_isSet;
    bool m_home_passing_isValid;

    QList<OAIPlayerPunting> m_home_punting;
    bool m_home_punting_isSet;
    bool m_home_punting_isValid;

    QList<OAIPlayerReceiving> m_home_receiving;
    bool m_home_receiving_isSet;
    bool m_home_receiving_isValid;

    QList<OAIPlayerRushing> m_home_rushing;
    bool m_home_rushing_isSet;
    bool m_home_rushing_isValid;

    OAIScore m_score;
    bool m_score_isSet;
    bool m_score_isValid;

    QList<OAIScoringDetail> m_scoring_details;
    bool m_scoring_details_isSet;
    bool m_scoring_details_isValid;

    QList<OAIScoringPlay> m_scoring_plays;
    bool m_scoring_plays_isSet;
    bool m_scoring_plays_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBoxScore)

#endif // OAIBoxScore_H
