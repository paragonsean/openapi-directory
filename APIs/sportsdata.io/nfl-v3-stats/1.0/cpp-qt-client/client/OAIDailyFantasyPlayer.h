/**
 * NFL v3 Stats
 * NFL rosters, player stats, team stats, and fantasy stats API.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDailyFantasyPlayer.h
 *
 * 
 */

#ifndef OAIDailyFantasyPlayer_H
#define OAIDailyFantasyPlayer_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDailyFantasyPlayer : public OAIObject {
public:
    OAIDailyFantasyPlayer();
    OAIDailyFantasyPlayer(QString json);
    ~OAIDailyFantasyPlayer() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDate() const;
    void setDate(const QString &date);
    bool is_date_Set() const;
    bool is_date_Valid() const;

    qint32 getDraftKingsSalary() const;
    void setDraftKingsSalary(const qint32 &draft_kings_salary);
    bool is_draft_kings_salary_Set() const;
    bool is_draft_kings_salary_Valid() const;

    qint32 getFanDuelSalary() const;
    void setFanDuelSalary(const qint32 &fan_duel_salary);
    bool is_fan_duel_salary_Set() const;
    bool is_fan_duel_salary_Valid() const;

    qint32 getFantasyDataSalary() const;
    void setFantasyDataSalary(const qint32 &fantasy_data_salary);
    bool is_fantasy_data_salary_Set() const;
    bool is_fantasy_data_salary_Valid() const;

    qint32 getFantasyDraftSalary() const;
    void setFantasyDraftSalary(const qint32 &fantasy_draft_salary);
    bool is_fantasy_draft_salary_Set() const;
    bool is_fantasy_draft_salary_Valid() const;

    QString getHomeOrAway() const;
    void setHomeOrAway(const QString &home_or_away);
    bool is_home_or_away_Set() const;
    bool is_home_or_away_Valid() const;

    double getLastGameFantasyPoints() const;
    void setLastGameFantasyPoints(const double &last_game_fantasy_points);
    bool is_last_game_fantasy_points_Set() const;
    bool is_last_game_fantasy_points_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getOpponent() const;
    void setOpponent(const QString &opponent);
    bool is_opponent_Set() const;
    bool is_opponent_Valid() const;

    qint32 getOpponentPositionRank() const;
    void setOpponentPositionRank(const qint32 &opponent_position_rank);
    bool is_opponent_position_rank_Set() const;
    bool is_opponent_position_rank_Valid() const;

    qint32 getOpponentRank() const;
    void setOpponentRank(const qint32 &opponent_rank);
    bool is_opponent_rank_Set() const;
    bool is_opponent_rank_Valid() const;

    qint32 getPlayerId() const;
    void setPlayerId(const qint32 &player_id);
    bool is_player_id_Set() const;
    bool is_player_id_Valid() const;

    QString getPosition() const;
    void setPosition(const QString &position);
    bool is_position_Set() const;
    bool is_position_Valid() const;

    double getProjectedFantasyPoints() const;
    void setProjectedFantasyPoints(const double &projected_fantasy_points);
    bool is_projected_fantasy_points_Set() const;
    bool is_projected_fantasy_points_Valid() const;

    qint32 getSalary() const;
    void setSalary(const qint32 &salary);
    bool is_salary_Set() const;
    bool is_salary_Valid() const;

    QString getShortName() const;
    void setShortName(const QString &short_name);
    bool is_short_name_Set() const;
    bool is_short_name_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getStatusCode() const;
    void setStatusCode(const QString &status_code);
    bool is_status_code_Set() const;
    bool is_status_code_Valid() const;

    QString getStatusColor() const;
    void setStatusColor(const QString &status_color);
    bool is_status_color_Set() const;
    bool is_status_color_Valid() const;

    QString getTeam() const;
    void setTeam(const QString &team);
    bool is_team_Set() const;
    bool is_team_Valid() const;

    qint32 getYahooSalary() const;
    void setYahooSalary(const qint32 &yahoo_salary);
    bool is_yahoo_salary_Set() const;
    bool is_yahoo_salary_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_date;
    bool m_date_isSet;
    bool m_date_isValid;

    qint32 m_draft_kings_salary;
    bool m_draft_kings_salary_isSet;
    bool m_draft_kings_salary_isValid;

    qint32 m_fan_duel_salary;
    bool m_fan_duel_salary_isSet;
    bool m_fan_duel_salary_isValid;

    qint32 m_fantasy_data_salary;
    bool m_fantasy_data_salary_isSet;
    bool m_fantasy_data_salary_isValid;

    qint32 m_fantasy_draft_salary;
    bool m_fantasy_draft_salary_isSet;
    bool m_fantasy_draft_salary_isValid;

    QString m_home_or_away;
    bool m_home_or_away_isSet;
    bool m_home_or_away_isValid;

    double m_last_game_fantasy_points;
    bool m_last_game_fantasy_points_isSet;
    bool m_last_game_fantasy_points_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_opponent;
    bool m_opponent_isSet;
    bool m_opponent_isValid;

    qint32 m_opponent_position_rank;
    bool m_opponent_position_rank_isSet;
    bool m_opponent_position_rank_isValid;

    qint32 m_opponent_rank;
    bool m_opponent_rank_isSet;
    bool m_opponent_rank_isValid;

    qint32 m_player_id;
    bool m_player_id_isSet;
    bool m_player_id_isValid;

    QString m_position;
    bool m_position_isSet;
    bool m_position_isValid;

    double m_projected_fantasy_points;
    bool m_projected_fantasy_points_isSet;
    bool m_projected_fantasy_points_isValid;

    qint32 m_salary;
    bool m_salary_isSet;
    bool m_salary_isValid;

    QString m_short_name;
    bool m_short_name_isSet;
    bool m_short_name_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_status_code;
    bool m_status_code_isSet;
    bool m_status_code_isValid;

    QString m_status_color;
    bool m_status_color_isSet;
    bool m_status_color_isValid;

    QString m_team;
    bool m_team_isSet;
    bool m_team_isValid;

    qint32 m_yahoo_salary;
    bool m_yahoo_salary_isSet;
    bool m_yahoo_salary_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDailyFantasyPlayer)

#endif // OAIDailyFantasyPlayer_H
