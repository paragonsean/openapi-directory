/**
 * NFL v3 Stats
 * NFL rosters, player stats, team stats, and fantasy stats API.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITeam.h
 *
 * 
 */

#ifndef OAITeam_H
#define OAITeam_H

#include <QJsonObject>

#include "OAIStadium.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStadium;

class OAITeam : public OAIObject {
public:
    OAITeam();
    OAITeam(QString json);
    ~OAITeam() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAverageDraftPosition() const;
    void setAverageDraftPosition(const double &average_draft_position);
    bool is_average_draft_position_Set() const;
    bool is_average_draft_position_Valid() const;

    double getAverageDraftPosition2Qb() const;
    void setAverageDraftPosition2Qb(const double &average_draft_position2_qb);
    bool is_average_draft_position2_qb_Set() const;
    bool is_average_draft_position2_qb_Valid() const;

    double getAverageDraftPositionDynasty() const;
    void setAverageDraftPositionDynasty(const double &average_draft_position_dynasty);
    bool is_average_draft_position_dynasty_Set() const;
    bool is_average_draft_position_dynasty_Valid() const;

    double getAverageDraftPositionPpr() const;
    void setAverageDraftPositionPpr(const double &average_draft_position_ppr);
    bool is_average_draft_position_ppr_Set() const;
    bool is_average_draft_position_ppr_Valid() const;

    qint32 getByeWeek() const;
    void setByeWeek(const qint32 &bye_week);
    bool is_bye_week_Set() const;
    bool is_bye_week_Valid() const;

    QString getCity() const;
    void setCity(const QString &city);
    bool is_city_Set() const;
    bool is_city_Valid() const;

    QString getConference() const;
    void setConference(const QString &conference);
    bool is_conference_Set() const;
    bool is_conference_Valid() const;

    QString getDefensiveCoordinator() const;
    void setDefensiveCoordinator(const QString &defensive_coordinator);
    bool is_defensive_coordinator_Set() const;
    bool is_defensive_coordinator_Valid() const;

    QString getDefensiveScheme() const;
    void setDefensiveScheme(const QString &defensive_scheme);
    bool is_defensive_scheme_Set() const;
    bool is_defensive_scheme_Valid() const;

    QString getDivision() const;
    void setDivision(const QString &division);
    bool is_division_Set() const;
    bool is_division_Valid() const;

    QString getDraftKingsName() const;
    void setDraftKingsName(const QString &draft_kings_name);
    bool is_draft_kings_name_Set() const;
    bool is_draft_kings_name_Valid() const;

    qint32 getDraftKingsPlayerId() const;
    void setDraftKingsPlayerId(const qint32 &draft_kings_player_id);
    bool is_draft_kings_player_id_Set() const;
    bool is_draft_kings_player_id_Valid() const;

    QString getFanDuelName() const;
    void setFanDuelName(const QString &fan_duel_name);
    bool is_fan_duel_name_Set() const;
    bool is_fan_duel_name_Valid() const;

    qint32 getFanDuelPlayerId() const;
    void setFanDuelPlayerId(const qint32 &fan_duel_player_id);
    bool is_fan_duel_player_id_Set() const;
    bool is_fan_duel_player_id_Valid() const;

    QString getFantasyDraftName() const;
    void setFantasyDraftName(const QString &fantasy_draft_name);
    bool is_fantasy_draft_name_Set() const;
    bool is_fantasy_draft_name_Valid() const;

    qint32 getFantasyDraftPlayerId() const;
    void setFantasyDraftPlayerId(const qint32 &fantasy_draft_player_id);
    bool is_fantasy_draft_player_id_Set() const;
    bool is_fantasy_draft_player_id_Valid() const;

    QString getFullName() const;
    void setFullName(const QString &full_name);
    bool is_full_name_Set() const;
    bool is_full_name_Valid() const;

    qint32 getGlobalTeamId() const;
    void setGlobalTeamId(const qint32 &global_team_id);
    bool is_global_team_id_Set() const;
    bool is_global_team_id_Valid() const;

    QString getHeadCoach() const;
    void setHeadCoach(const QString &head_coach);
    bool is_head_coach_Set() const;
    bool is_head_coach_Valid() const;

    QString getKey() const;
    void setKey(const QString &key);
    bool is_key_Set() const;
    bool is_key_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getOffensiveCoordinator() const;
    void setOffensiveCoordinator(const QString &offensive_coordinator);
    bool is_offensive_coordinator_Set() const;
    bool is_offensive_coordinator_Valid() const;

    QString getOffensiveScheme() const;
    void setOffensiveScheme(const QString &offensive_scheme);
    bool is_offensive_scheme_Set() const;
    bool is_offensive_scheme_Valid() const;

    qint32 getPlayerId() const;
    void setPlayerId(const qint32 &player_id);
    bool is_player_id_Set() const;
    bool is_player_id_Valid() const;

    QString getPrimaryColor() const;
    void setPrimaryColor(const QString &primary_color);
    bool is_primary_color_Set() const;
    bool is_primary_color_Valid() const;

    QString getQuaternaryColor() const;
    void setQuaternaryColor(const QString &quaternary_color);
    bool is_quaternary_color_Set() const;
    bool is_quaternary_color_Valid() const;

    QString getSecondaryColor() const;
    void setSecondaryColor(const QString &secondary_color);
    bool is_secondary_color_Set() const;
    bool is_secondary_color_Valid() const;

    QString getSpecialTeamsCoach() const;
    void setSpecialTeamsCoach(const QString &special_teams_coach);
    bool is_special_teams_coach_Set() const;
    bool is_special_teams_coach_Valid() const;

    OAIStadium getStadiumDetails() const;
    void setStadiumDetails(const OAIStadium &stadium_details);
    bool is_stadium_details_Set() const;
    bool is_stadium_details_Valid() const;

    qint32 getStadiumId() const;
    void setStadiumId(const qint32 &stadium_id);
    bool is_stadium_id_Set() const;
    bool is_stadium_id_Valid() const;

    qint32 getTeamId() const;
    void setTeamId(const qint32 &team_id);
    bool is_team_id_Set() const;
    bool is_team_id_Valid() const;

    QString getTertiaryColor() const;
    void setTertiaryColor(const QString &tertiary_color);
    bool is_tertiary_color_Set() const;
    bool is_tertiary_color_Valid() const;

    qint32 getUpcomingDraftKingsSalary() const;
    void setUpcomingDraftKingsSalary(const qint32 &upcoming_draft_kings_salary);
    bool is_upcoming_draft_kings_salary_Set() const;
    bool is_upcoming_draft_kings_salary_Valid() const;

    qint32 getUpcomingFanDuelSalary() const;
    void setUpcomingFanDuelSalary(const qint32 &upcoming_fan_duel_salary);
    bool is_upcoming_fan_duel_salary_Set() const;
    bool is_upcoming_fan_duel_salary_Valid() const;

    QString getUpcomingOpponent() const;
    void setUpcomingOpponent(const QString &upcoming_opponent);
    bool is_upcoming_opponent_Set() const;
    bool is_upcoming_opponent_Valid() const;

    qint32 getUpcomingOpponentPositionRank() const;
    void setUpcomingOpponentPositionRank(const qint32 &upcoming_opponent_position_rank);
    bool is_upcoming_opponent_position_rank_Set() const;
    bool is_upcoming_opponent_position_rank_Valid() const;

    qint32 getUpcomingOpponentRank() const;
    void setUpcomingOpponentRank(const qint32 &upcoming_opponent_rank);
    bool is_upcoming_opponent_rank_Set() const;
    bool is_upcoming_opponent_rank_Valid() const;

    qint32 getUpcomingSalary() const;
    void setUpcomingSalary(const qint32 &upcoming_salary);
    bool is_upcoming_salary_Set() const;
    bool is_upcoming_salary_Valid() const;

    qint32 getUpcomingYahooSalary() const;
    void setUpcomingYahooSalary(const qint32 &upcoming_yahoo_salary);
    bool is_upcoming_yahoo_salary_Set() const;
    bool is_upcoming_yahoo_salary_Valid() const;

    QString getWikipediaLogoUrl() const;
    void setWikipediaLogoUrl(const QString &wikipedia_logo_url);
    bool is_wikipedia_logo_url_Set() const;
    bool is_wikipedia_logo_url_Valid() const;

    QString getWikipediaWordMarkUrl() const;
    void setWikipediaWordMarkUrl(const QString &wikipedia_word_mark_url);
    bool is_wikipedia_word_mark_url_Set() const;
    bool is_wikipedia_word_mark_url_Valid() const;

    QString getYahooName() const;
    void setYahooName(const QString &yahoo_name);
    bool is_yahoo_name_Set() const;
    bool is_yahoo_name_Valid() const;

    qint32 getYahooPlayerId() const;
    void setYahooPlayerId(const qint32 &yahoo_player_id);
    bool is_yahoo_player_id_Set() const;
    bool is_yahoo_player_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_average_draft_position;
    bool m_average_draft_position_isSet;
    bool m_average_draft_position_isValid;

    double m_average_draft_position2_qb;
    bool m_average_draft_position2_qb_isSet;
    bool m_average_draft_position2_qb_isValid;

    double m_average_draft_position_dynasty;
    bool m_average_draft_position_dynasty_isSet;
    bool m_average_draft_position_dynasty_isValid;

    double m_average_draft_position_ppr;
    bool m_average_draft_position_ppr_isSet;
    bool m_average_draft_position_ppr_isValid;

    qint32 m_bye_week;
    bool m_bye_week_isSet;
    bool m_bye_week_isValid;

    QString m_city;
    bool m_city_isSet;
    bool m_city_isValid;

    QString m_conference;
    bool m_conference_isSet;
    bool m_conference_isValid;

    QString m_defensive_coordinator;
    bool m_defensive_coordinator_isSet;
    bool m_defensive_coordinator_isValid;

    QString m_defensive_scheme;
    bool m_defensive_scheme_isSet;
    bool m_defensive_scheme_isValid;

    QString m_division;
    bool m_division_isSet;
    bool m_division_isValid;

    QString m_draft_kings_name;
    bool m_draft_kings_name_isSet;
    bool m_draft_kings_name_isValid;

    qint32 m_draft_kings_player_id;
    bool m_draft_kings_player_id_isSet;
    bool m_draft_kings_player_id_isValid;

    QString m_fan_duel_name;
    bool m_fan_duel_name_isSet;
    bool m_fan_duel_name_isValid;

    qint32 m_fan_duel_player_id;
    bool m_fan_duel_player_id_isSet;
    bool m_fan_duel_player_id_isValid;

    QString m_fantasy_draft_name;
    bool m_fantasy_draft_name_isSet;
    bool m_fantasy_draft_name_isValid;

    qint32 m_fantasy_draft_player_id;
    bool m_fantasy_draft_player_id_isSet;
    bool m_fantasy_draft_player_id_isValid;

    QString m_full_name;
    bool m_full_name_isSet;
    bool m_full_name_isValid;

    qint32 m_global_team_id;
    bool m_global_team_id_isSet;
    bool m_global_team_id_isValid;

    QString m_head_coach;
    bool m_head_coach_isSet;
    bool m_head_coach_isValid;

    QString m_key;
    bool m_key_isSet;
    bool m_key_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_offensive_coordinator;
    bool m_offensive_coordinator_isSet;
    bool m_offensive_coordinator_isValid;

    QString m_offensive_scheme;
    bool m_offensive_scheme_isSet;
    bool m_offensive_scheme_isValid;

    qint32 m_player_id;
    bool m_player_id_isSet;
    bool m_player_id_isValid;

    QString m_primary_color;
    bool m_primary_color_isSet;
    bool m_primary_color_isValid;

    QString m_quaternary_color;
    bool m_quaternary_color_isSet;
    bool m_quaternary_color_isValid;

    QString m_secondary_color;
    bool m_secondary_color_isSet;
    bool m_secondary_color_isValid;

    QString m_special_teams_coach;
    bool m_special_teams_coach_isSet;
    bool m_special_teams_coach_isValid;

    OAIStadium m_stadium_details;
    bool m_stadium_details_isSet;
    bool m_stadium_details_isValid;

    qint32 m_stadium_id;
    bool m_stadium_id_isSet;
    bool m_stadium_id_isValid;

    qint32 m_team_id;
    bool m_team_id_isSet;
    bool m_team_id_isValid;

    QString m_tertiary_color;
    bool m_tertiary_color_isSet;
    bool m_tertiary_color_isValid;

    qint32 m_upcoming_draft_kings_salary;
    bool m_upcoming_draft_kings_salary_isSet;
    bool m_upcoming_draft_kings_salary_isValid;

    qint32 m_upcoming_fan_duel_salary;
    bool m_upcoming_fan_duel_salary_isSet;
    bool m_upcoming_fan_duel_salary_isValid;

    QString m_upcoming_opponent;
    bool m_upcoming_opponent_isSet;
    bool m_upcoming_opponent_isValid;

    qint32 m_upcoming_opponent_position_rank;
    bool m_upcoming_opponent_position_rank_isSet;
    bool m_upcoming_opponent_position_rank_isValid;

    qint32 m_upcoming_opponent_rank;
    bool m_upcoming_opponent_rank_isSet;
    bool m_upcoming_opponent_rank_isValid;

    qint32 m_upcoming_salary;
    bool m_upcoming_salary_isSet;
    bool m_upcoming_salary_isValid;

    qint32 m_upcoming_yahoo_salary;
    bool m_upcoming_yahoo_salary_isSet;
    bool m_upcoming_yahoo_salary_isValid;

    QString m_wikipedia_logo_url;
    bool m_wikipedia_logo_url_isSet;
    bool m_wikipedia_logo_url_isValid;

    QString m_wikipedia_word_mark_url;
    bool m_wikipedia_word_mark_url_isSet;
    bool m_wikipedia_word_mark_url_isValid;

    QString m_yahoo_name;
    bool m_yahoo_name_isSet;
    bool m_yahoo_name_isValid;

    qint32 m_yahoo_player_id;
    bool m_yahoo_player_id_isSet;
    bool m_yahoo_player_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITeam)

#endif // OAITeam_H
