/**
 * NFL v3 Stats
 * NFL rosters, player stats, team stats, and fantasy stats API.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPlayerOwnership.h
 *
 * 
 */

#ifndef OAIPlayerOwnership_H
#define OAIPlayerOwnership_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPlayerOwnership : public OAIObject {
public:
    OAIPlayerOwnership();
    OAIPlayerOwnership(QString json);
    ~OAIPlayerOwnership() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getDeltaOwnershipPercentage() const;
    void setDeltaOwnershipPercentage(const double &delta_ownership_percentage);
    bool is_delta_ownership_percentage_Set() const;
    bool is_delta_ownership_percentage_Valid() const;

    double getDeltaStartPercentage() const;
    void setDeltaStartPercentage(const double &delta_start_percentage);
    bool is_delta_start_percentage_Set() const;
    bool is_delta_start_percentage_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    double getOwnershipPercentage() const;
    void setOwnershipPercentage(const double &ownership_percentage);
    bool is_ownership_percentage_Set() const;
    bool is_ownership_percentage_Valid() const;

    qint32 getPlayerId() const;
    void setPlayerId(const qint32 &player_id);
    bool is_player_id_Set() const;
    bool is_player_id_Valid() const;

    QString getPosition() const;
    void setPosition(const QString &position);
    bool is_position_Set() const;
    bool is_position_Valid() const;

    qint32 getSeason() const;
    void setSeason(const qint32 &season);
    bool is_season_Set() const;
    bool is_season_Valid() const;

    qint32 getSeasonType() const;
    void setSeasonType(const qint32 &season_type);
    bool is_season_type_Set() const;
    bool is_season_type_Valid() const;

    double getStartPercentage() const;
    void setStartPercentage(const double &start_percentage);
    bool is_start_percentage_Set() const;
    bool is_start_percentage_Valid() const;

    QString getTeam() const;
    void setTeam(const QString &team);
    bool is_team_Set() const;
    bool is_team_Valid() const;

    qint32 getTeamId() const;
    void setTeamId(const qint32 &team_id);
    bool is_team_id_Set() const;
    bool is_team_id_Valid() const;

    qint32 getWeek() const;
    void setWeek(const qint32 &week);
    bool is_week_Set() const;
    bool is_week_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_delta_ownership_percentage;
    bool m_delta_ownership_percentage_isSet;
    bool m_delta_ownership_percentage_isValid;

    double m_delta_start_percentage;
    bool m_delta_start_percentage_isSet;
    bool m_delta_start_percentage_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    double m_ownership_percentage;
    bool m_ownership_percentage_isSet;
    bool m_ownership_percentage_isValid;

    qint32 m_player_id;
    bool m_player_id_isSet;
    bool m_player_id_isValid;

    QString m_position;
    bool m_position_isSet;
    bool m_position_isValid;

    qint32 m_season;
    bool m_season_isSet;
    bool m_season_isValid;

    qint32 m_season_type;
    bool m_season_type_isSet;
    bool m_season_type_isValid;

    double m_start_percentage;
    bool m_start_percentage_isSet;
    bool m_start_percentage_isValid;

    QString m_team;
    bool m_team_isSet;
    bool m_team_isValid;

    qint32 m_team_id;
    bool m_team_id_isSet;
    bool m_team_id_isValid;

    qint32 m_week;
    bool m_week_isSet;
    bool m_week_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPlayerOwnership)

#endif // OAIPlayerOwnership_H
