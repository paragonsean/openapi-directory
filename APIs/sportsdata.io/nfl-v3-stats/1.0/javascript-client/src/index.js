/**
 * NFL v3 Stats
 * NFL rosters, player stats, team stats, and fantasy stats API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import BoxScore from './model/BoxScore';
import BoxScoreV3 from './model/BoxScoreV3';
import Bye from './model/Bye';
import DailyFantasyPlayer from './model/DailyFantasyPlayer';
import DailyFantasyScoring from './model/DailyFantasyScoring';
import DfsSlate from './model/DfsSlate';
import DfsSlateGame from './model/DfsSlateGame';
import DfsSlatePlayer from './model/DfsSlatePlayer';
import FantasyDefenseGame from './model/FantasyDefenseGame';
import FantasyDefenseSeason from './model/FantasyDefenseSeason';
import FantasyPlayer from './model/FantasyPlayer';
import Game from './model/Game';
import Injury from './model/Injury';
import News from './model/News';
import Player from './model/Player';
import PlayerDefense from './model/PlayerDefense';
import PlayerDetail from './model/PlayerDetail';
import PlayerGame from './model/PlayerGame';
import PlayerGameRedZone from './model/PlayerGameRedZone';
import PlayerInfo from './model/PlayerInfo';
import PlayerKickPuntReturns from './model/PlayerKickPuntReturns';
import PlayerKicking from './model/PlayerKicking';
import PlayerOwnership from './model/PlayerOwnership';
import PlayerPassing from './model/PlayerPassing';
import PlayerPunting from './model/PlayerPunting';
import PlayerReceiving from './model/PlayerReceiving';
import PlayerRushing from './model/PlayerRushing';
import PlayerSeason from './model/PlayerSeason';
import PlayerSeasonRedZone from './model/PlayerSeasonRedZone';
import PlayerSeasonThirdDown from './model/PlayerSeasonThirdDown';
import Quarter from './model/Quarter';
import Schedule from './model/Schedule';
import Score from './model/Score';
import ScoringDetail from './model/ScoringDetail';
import ScoringPlay from './model/ScoringPlay';
import Stadium from './model/Stadium';
import Standing from './model/Standing';
import Team from './model/Team';
import TeamGame from './model/TeamGame';
import TeamSeason from './model/TeamSeason';
import Timeframe from './model/Timeframe';
import DefaultApi from './api/DefaultApi';


/**
* NFL rosters, player stats, team stats, and fantasy stats API..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var NflV3Stats = require('index'); // See note below*.
* var xxxSvc = new NflV3Stats.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new NflV3Stats.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new NflV3Stats.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new NflV3Stats.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The BoxScore model constructor.
     * @property {module:model/BoxScore}
     */
    BoxScore,

    /**
     * The BoxScoreV3 model constructor.
     * @property {module:model/BoxScoreV3}
     */
    BoxScoreV3,

    /**
     * The Bye model constructor.
     * @property {module:model/Bye}
     */
    Bye,

    /**
     * The DailyFantasyPlayer model constructor.
     * @property {module:model/DailyFantasyPlayer}
     */
    DailyFantasyPlayer,

    /**
     * The DailyFantasyScoring model constructor.
     * @property {module:model/DailyFantasyScoring}
     */
    DailyFantasyScoring,

    /**
     * The DfsSlate model constructor.
     * @property {module:model/DfsSlate}
     */
    DfsSlate,

    /**
     * The DfsSlateGame model constructor.
     * @property {module:model/DfsSlateGame}
     */
    DfsSlateGame,

    /**
     * The DfsSlatePlayer model constructor.
     * @property {module:model/DfsSlatePlayer}
     */
    DfsSlatePlayer,

    /**
     * The FantasyDefenseGame model constructor.
     * @property {module:model/FantasyDefenseGame}
     */
    FantasyDefenseGame,

    /**
     * The FantasyDefenseSeason model constructor.
     * @property {module:model/FantasyDefenseSeason}
     */
    FantasyDefenseSeason,

    /**
     * The FantasyPlayer model constructor.
     * @property {module:model/FantasyPlayer}
     */
    FantasyPlayer,

    /**
     * The Game model constructor.
     * @property {module:model/Game}
     */
    Game,

    /**
     * The Injury model constructor.
     * @property {module:model/Injury}
     */
    Injury,

    /**
     * The News model constructor.
     * @property {module:model/News}
     */
    News,

    /**
     * The Player model constructor.
     * @property {module:model/Player}
     */
    Player,

    /**
     * The PlayerDefense model constructor.
     * @property {module:model/PlayerDefense}
     */
    PlayerDefense,

    /**
     * The PlayerDetail model constructor.
     * @property {module:model/PlayerDetail}
     */
    PlayerDetail,

    /**
     * The PlayerGame model constructor.
     * @property {module:model/PlayerGame}
     */
    PlayerGame,

    /**
     * The PlayerGameRedZone model constructor.
     * @property {module:model/PlayerGameRedZone}
     */
    PlayerGameRedZone,

    /**
     * The PlayerInfo model constructor.
     * @property {module:model/PlayerInfo}
     */
    PlayerInfo,

    /**
     * The PlayerKickPuntReturns model constructor.
     * @property {module:model/PlayerKickPuntReturns}
     */
    PlayerKickPuntReturns,

    /**
     * The PlayerKicking model constructor.
     * @property {module:model/PlayerKicking}
     */
    PlayerKicking,

    /**
     * The PlayerOwnership model constructor.
     * @property {module:model/PlayerOwnership}
     */
    PlayerOwnership,

    /**
     * The PlayerPassing model constructor.
     * @property {module:model/PlayerPassing}
     */
    PlayerPassing,

    /**
     * The PlayerPunting model constructor.
     * @property {module:model/PlayerPunting}
     */
    PlayerPunting,

    /**
     * The PlayerReceiving model constructor.
     * @property {module:model/PlayerReceiving}
     */
    PlayerReceiving,

    /**
     * The PlayerRushing model constructor.
     * @property {module:model/PlayerRushing}
     */
    PlayerRushing,

    /**
     * The PlayerSeason model constructor.
     * @property {module:model/PlayerSeason}
     */
    PlayerSeason,

    /**
     * The PlayerSeasonRedZone model constructor.
     * @property {module:model/PlayerSeasonRedZone}
     */
    PlayerSeasonRedZone,

    /**
     * The PlayerSeasonThirdDown model constructor.
     * @property {module:model/PlayerSeasonThirdDown}
     */
    PlayerSeasonThirdDown,

    /**
     * The Quarter model constructor.
     * @property {module:model/Quarter}
     */
    Quarter,

    /**
     * The Schedule model constructor.
     * @property {module:model/Schedule}
     */
    Schedule,

    /**
     * The Score model constructor.
     * @property {module:model/Score}
     */
    Score,

    /**
     * The ScoringDetail model constructor.
     * @property {module:model/ScoringDetail}
     */
    ScoringDetail,

    /**
     * The ScoringPlay model constructor.
     * @property {module:model/ScoringPlay}
     */
    ScoringPlay,

    /**
     * The Stadium model constructor.
     * @property {module:model/Stadium}
     */
    Stadium,

    /**
     * The Standing model constructor.
     * @property {module:model/Standing}
     */
    Standing,

    /**
     * The Team model constructor.
     * @property {module:model/Team}
     */
    Team,

    /**
     * The TeamGame model constructor.
     * @property {module:model/TeamGame}
     */
    TeamGame,

    /**
     * The TeamSeason model constructor.
     * @property {module:model/TeamSeason}
     */
    TeamSeason,

    /**
     * The Timeframe model constructor.
     * @property {module:model/Timeframe}
     */
    Timeframe,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
