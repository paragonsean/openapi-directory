/**
 * NFL v3 Stats
 * NFL rosters, player stats, team stats, and fantasy stats API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PlayerKickPuntReturns model module.
 * @module model/PlayerKickPuntReturns
 * @version 1.0
 */
class PlayerKickPuntReturns {
    /**
     * Constructs a new <code>PlayerKickPuntReturns</code>.
     * @alias module:model/PlayerKickPuntReturns
     */
    constructor() { 
        
        PlayerKickPuntReturns.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PlayerKickPuntReturns</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PlayerKickPuntReturns} obj Optional instance to populate.
     * @return {module:model/PlayerKickPuntReturns} The populated <code>PlayerKickPuntReturns</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PlayerKickPuntReturns();

            if (data.hasOwnProperty('FantasyPoints')) {
                obj['FantasyPoints'] = ApiClient.convertToType(data['FantasyPoints'], 'Number');
            }
            if (data.hasOwnProperty('FantasyPosition')) {
                obj['FantasyPosition'] = ApiClient.convertToType(data['FantasyPosition'], 'String');
            }
            if (data.hasOwnProperty('FumblesLost')) {
                obj['FumblesLost'] = ApiClient.convertToType(data['FumblesLost'], 'Number');
            }
            if (data.hasOwnProperty('KickReturnLong')) {
                obj['KickReturnLong'] = ApiClient.convertToType(data['KickReturnLong'], 'Number');
            }
            if (data.hasOwnProperty('KickReturnTouchdowns')) {
                obj['KickReturnTouchdowns'] = ApiClient.convertToType(data['KickReturnTouchdowns'], 'Number');
            }
            if (data.hasOwnProperty('KickReturnYards')) {
                obj['KickReturnYards'] = ApiClient.convertToType(data['KickReturnYards'], 'Number');
            }
            if (data.hasOwnProperty('KickReturnYardsPerAttempt')) {
                obj['KickReturnYardsPerAttempt'] = ApiClient.convertToType(data['KickReturnYardsPerAttempt'], 'Number');
            }
            if (data.hasOwnProperty('KickReturns')) {
                obj['KickReturns'] = ApiClient.convertToType(data['KickReturns'], 'Number');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Number')) {
                obj['Number'] = ApiClient.convertToType(data['Number'], 'Number');
            }
            if (data.hasOwnProperty('PlayerGameID')) {
                obj['PlayerGameID'] = ApiClient.convertToType(data['PlayerGameID'], 'Number');
            }
            if (data.hasOwnProperty('PlayerID')) {
                obj['PlayerID'] = ApiClient.convertToType(data['PlayerID'], 'Number');
            }
            if (data.hasOwnProperty('Position')) {
                obj['Position'] = ApiClient.convertToType(data['Position'], 'String');
            }
            if (data.hasOwnProperty('PositionCategory')) {
                obj['PositionCategory'] = ApiClient.convertToType(data['PositionCategory'], 'String');
            }
            if (data.hasOwnProperty('PuntReturnLong')) {
                obj['PuntReturnLong'] = ApiClient.convertToType(data['PuntReturnLong'], 'Number');
            }
            if (data.hasOwnProperty('PuntReturnTouchdowns')) {
                obj['PuntReturnTouchdowns'] = ApiClient.convertToType(data['PuntReturnTouchdowns'], 'Number');
            }
            if (data.hasOwnProperty('PuntReturnYards')) {
                obj['PuntReturnYards'] = ApiClient.convertToType(data['PuntReturnYards'], 'Number');
            }
            if (data.hasOwnProperty('PuntReturnYardsPerAttempt')) {
                obj['PuntReturnYardsPerAttempt'] = ApiClient.convertToType(data['PuntReturnYardsPerAttempt'], 'Number');
            }
            if (data.hasOwnProperty('PuntReturns')) {
                obj['PuntReturns'] = ApiClient.convertToType(data['PuntReturns'], 'Number');
            }
            if (data.hasOwnProperty('ShortName')) {
                obj['ShortName'] = ApiClient.convertToType(data['ShortName'], 'String');
            }
            if (data.hasOwnProperty('Team')) {
                obj['Team'] = ApiClient.convertToType(data['Team'], 'String');
            }
            if (data.hasOwnProperty('Updated')) {
                obj['Updated'] = ApiClient.convertToType(data['Updated'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PlayerKickPuntReturns</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PlayerKickPuntReturns</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['FantasyPosition'] && !(typeof data['FantasyPosition'] === 'string' || data['FantasyPosition'] instanceof String)) {
            throw new Error("Expected the field `FantasyPosition` to be a primitive type in the JSON string but got " + data['FantasyPosition']);
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // ensure the json data is a string
        if (data['Position'] && !(typeof data['Position'] === 'string' || data['Position'] instanceof String)) {
            throw new Error("Expected the field `Position` to be a primitive type in the JSON string but got " + data['Position']);
        }
        // ensure the json data is a string
        if (data['PositionCategory'] && !(typeof data['PositionCategory'] === 'string' || data['PositionCategory'] instanceof String)) {
            throw new Error("Expected the field `PositionCategory` to be a primitive type in the JSON string but got " + data['PositionCategory']);
        }
        // ensure the json data is a string
        if (data['ShortName'] && !(typeof data['ShortName'] === 'string' || data['ShortName'] instanceof String)) {
            throw new Error("Expected the field `ShortName` to be a primitive type in the JSON string but got " + data['ShortName']);
        }
        // ensure the json data is a string
        if (data['Team'] && !(typeof data['Team'] === 'string' || data['Team'] instanceof String)) {
            throw new Error("Expected the field `Team` to be a primitive type in the JSON string but got " + data['Team']);
        }
        // ensure the json data is a string
        if (data['Updated'] && !(typeof data['Updated'] === 'string' || data['Updated'] instanceof String)) {
            throw new Error("Expected the field `Updated` to be a primitive type in the JSON string but got " + data['Updated']);
        }

        return true;
    }


}



/**
 * @member {Number} FantasyPoints
 */
PlayerKickPuntReturns.prototype['FantasyPoints'] = undefined;

/**
 * @member {String} FantasyPosition
 */
PlayerKickPuntReturns.prototype['FantasyPosition'] = undefined;

/**
 * @member {Number} FumblesLost
 */
PlayerKickPuntReturns.prototype['FumblesLost'] = undefined;

/**
 * @member {Number} KickReturnLong
 */
PlayerKickPuntReturns.prototype['KickReturnLong'] = undefined;

/**
 * @member {Number} KickReturnTouchdowns
 */
PlayerKickPuntReturns.prototype['KickReturnTouchdowns'] = undefined;

/**
 * @member {Number} KickReturnYards
 */
PlayerKickPuntReturns.prototype['KickReturnYards'] = undefined;

/**
 * @member {Number} KickReturnYardsPerAttempt
 */
PlayerKickPuntReturns.prototype['KickReturnYardsPerAttempt'] = undefined;

/**
 * @member {Number} KickReturns
 */
PlayerKickPuntReturns.prototype['KickReturns'] = undefined;

/**
 * @member {String} Name
 */
PlayerKickPuntReturns.prototype['Name'] = undefined;

/**
 * @member {Number} Number
 */
PlayerKickPuntReturns.prototype['Number'] = undefined;

/**
 * @member {Number} PlayerGameID
 */
PlayerKickPuntReturns.prototype['PlayerGameID'] = undefined;

/**
 * @member {Number} PlayerID
 */
PlayerKickPuntReturns.prototype['PlayerID'] = undefined;

/**
 * @member {String} Position
 */
PlayerKickPuntReturns.prototype['Position'] = undefined;

/**
 * @member {String} PositionCategory
 */
PlayerKickPuntReturns.prototype['PositionCategory'] = undefined;

/**
 * @member {Number} PuntReturnLong
 */
PlayerKickPuntReturns.prototype['PuntReturnLong'] = undefined;

/**
 * @member {Number} PuntReturnTouchdowns
 */
PlayerKickPuntReturns.prototype['PuntReturnTouchdowns'] = undefined;

/**
 * @member {Number} PuntReturnYards
 */
PlayerKickPuntReturns.prototype['PuntReturnYards'] = undefined;

/**
 * @member {Number} PuntReturnYardsPerAttempt
 */
PlayerKickPuntReturns.prototype['PuntReturnYardsPerAttempt'] = undefined;

/**
 * @member {Number} PuntReturns
 */
PlayerKickPuntReturns.prototype['PuntReturns'] = undefined;

/**
 * @member {String} ShortName
 */
PlayerKickPuntReturns.prototype['ShortName'] = undefined;

/**
 * @member {String} Team
 */
PlayerKickPuntReturns.prototype['Team'] = undefined;

/**
 * @member {String} Updated
 */
PlayerKickPuntReturns.prototype['Updated'] = undefined;






export default PlayerKickPuntReturns;

