/**
 * NFL v3 Stats
 * NFL rosters, player stats, team stats, and fantasy stats API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Stadium from './Stadium';

/**
 * The Team model module.
 * @module model/Team
 * @version 1.0
 */
class Team {
    /**
     * Constructs a new <code>Team</code>.
     * @alias module:model/Team
     */
    constructor() { 
        
        Team.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Team</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Team} obj Optional instance to populate.
     * @return {module:model/Team} The populated <code>Team</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Team();

            if (data.hasOwnProperty('AverageDraftPosition')) {
                obj['AverageDraftPosition'] = ApiClient.convertToType(data['AverageDraftPosition'], 'Number');
            }
            if (data.hasOwnProperty('AverageDraftPosition2QB')) {
                obj['AverageDraftPosition2QB'] = ApiClient.convertToType(data['AverageDraftPosition2QB'], 'Number');
            }
            if (data.hasOwnProperty('AverageDraftPositionDynasty')) {
                obj['AverageDraftPositionDynasty'] = ApiClient.convertToType(data['AverageDraftPositionDynasty'], 'Number');
            }
            if (data.hasOwnProperty('AverageDraftPositionPPR')) {
                obj['AverageDraftPositionPPR'] = ApiClient.convertToType(data['AverageDraftPositionPPR'], 'Number');
            }
            if (data.hasOwnProperty('ByeWeek')) {
                obj['ByeWeek'] = ApiClient.convertToType(data['ByeWeek'], 'Number');
            }
            if (data.hasOwnProperty('City')) {
                obj['City'] = ApiClient.convertToType(data['City'], 'String');
            }
            if (data.hasOwnProperty('Conference')) {
                obj['Conference'] = ApiClient.convertToType(data['Conference'], 'String');
            }
            if (data.hasOwnProperty('DefensiveCoordinator')) {
                obj['DefensiveCoordinator'] = ApiClient.convertToType(data['DefensiveCoordinator'], 'String');
            }
            if (data.hasOwnProperty('DefensiveScheme')) {
                obj['DefensiveScheme'] = ApiClient.convertToType(data['DefensiveScheme'], 'String');
            }
            if (data.hasOwnProperty('Division')) {
                obj['Division'] = ApiClient.convertToType(data['Division'], 'String');
            }
            if (data.hasOwnProperty('DraftKingsName')) {
                obj['DraftKingsName'] = ApiClient.convertToType(data['DraftKingsName'], 'String');
            }
            if (data.hasOwnProperty('DraftKingsPlayerID')) {
                obj['DraftKingsPlayerID'] = ApiClient.convertToType(data['DraftKingsPlayerID'], 'Number');
            }
            if (data.hasOwnProperty('FanDuelName')) {
                obj['FanDuelName'] = ApiClient.convertToType(data['FanDuelName'], 'String');
            }
            if (data.hasOwnProperty('FanDuelPlayerID')) {
                obj['FanDuelPlayerID'] = ApiClient.convertToType(data['FanDuelPlayerID'], 'Number');
            }
            if (data.hasOwnProperty('FantasyDraftName')) {
                obj['FantasyDraftName'] = ApiClient.convertToType(data['FantasyDraftName'], 'String');
            }
            if (data.hasOwnProperty('FantasyDraftPlayerID')) {
                obj['FantasyDraftPlayerID'] = ApiClient.convertToType(data['FantasyDraftPlayerID'], 'Number');
            }
            if (data.hasOwnProperty('FullName')) {
                obj['FullName'] = ApiClient.convertToType(data['FullName'], 'String');
            }
            if (data.hasOwnProperty('GlobalTeamID')) {
                obj['GlobalTeamID'] = ApiClient.convertToType(data['GlobalTeamID'], 'Number');
            }
            if (data.hasOwnProperty('HeadCoach')) {
                obj['HeadCoach'] = ApiClient.convertToType(data['HeadCoach'], 'String');
            }
            if (data.hasOwnProperty('Key')) {
                obj['Key'] = ApiClient.convertToType(data['Key'], 'String');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('OffensiveCoordinator')) {
                obj['OffensiveCoordinator'] = ApiClient.convertToType(data['OffensiveCoordinator'], 'String');
            }
            if (data.hasOwnProperty('OffensiveScheme')) {
                obj['OffensiveScheme'] = ApiClient.convertToType(data['OffensiveScheme'], 'String');
            }
            if (data.hasOwnProperty('PlayerID')) {
                obj['PlayerID'] = ApiClient.convertToType(data['PlayerID'], 'Number');
            }
            if (data.hasOwnProperty('PrimaryColor')) {
                obj['PrimaryColor'] = ApiClient.convertToType(data['PrimaryColor'], 'String');
            }
            if (data.hasOwnProperty('QuaternaryColor')) {
                obj['QuaternaryColor'] = ApiClient.convertToType(data['QuaternaryColor'], 'String');
            }
            if (data.hasOwnProperty('SecondaryColor')) {
                obj['SecondaryColor'] = ApiClient.convertToType(data['SecondaryColor'], 'String');
            }
            if (data.hasOwnProperty('SpecialTeamsCoach')) {
                obj['SpecialTeamsCoach'] = ApiClient.convertToType(data['SpecialTeamsCoach'], 'String');
            }
            if (data.hasOwnProperty('StadiumDetails')) {
                obj['StadiumDetails'] = Stadium.constructFromObject(data['StadiumDetails']);
            }
            if (data.hasOwnProperty('StadiumID')) {
                obj['StadiumID'] = ApiClient.convertToType(data['StadiumID'], 'Number');
            }
            if (data.hasOwnProperty('TeamID')) {
                obj['TeamID'] = ApiClient.convertToType(data['TeamID'], 'Number');
            }
            if (data.hasOwnProperty('TertiaryColor')) {
                obj['TertiaryColor'] = ApiClient.convertToType(data['TertiaryColor'], 'String');
            }
            if (data.hasOwnProperty('UpcomingDraftKingsSalary')) {
                obj['UpcomingDraftKingsSalary'] = ApiClient.convertToType(data['UpcomingDraftKingsSalary'], 'Number');
            }
            if (data.hasOwnProperty('UpcomingFanDuelSalary')) {
                obj['UpcomingFanDuelSalary'] = ApiClient.convertToType(data['UpcomingFanDuelSalary'], 'Number');
            }
            if (data.hasOwnProperty('UpcomingOpponent')) {
                obj['UpcomingOpponent'] = ApiClient.convertToType(data['UpcomingOpponent'], 'String');
            }
            if (data.hasOwnProperty('UpcomingOpponentPositionRank')) {
                obj['UpcomingOpponentPositionRank'] = ApiClient.convertToType(data['UpcomingOpponentPositionRank'], 'Number');
            }
            if (data.hasOwnProperty('UpcomingOpponentRank')) {
                obj['UpcomingOpponentRank'] = ApiClient.convertToType(data['UpcomingOpponentRank'], 'Number');
            }
            if (data.hasOwnProperty('UpcomingSalary')) {
                obj['UpcomingSalary'] = ApiClient.convertToType(data['UpcomingSalary'], 'Number');
            }
            if (data.hasOwnProperty('UpcomingYahooSalary')) {
                obj['UpcomingYahooSalary'] = ApiClient.convertToType(data['UpcomingYahooSalary'], 'Number');
            }
            if (data.hasOwnProperty('WikipediaLogoUrl')) {
                obj['WikipediaLogoUrl'] = ApiClient.convertToType(data['WikipediaLogoUrl'], 'String');
            }
            if (data.hasOwnProperty('WikipediaWordMarkUrl')) {
                obj['WikipediaWordMarkUrl'] = ApiClient.convertToType(data['WikipediaWordMarkUrl'], 'String');
            }
            if (data.hasOwnProperty('YahooName')) {
                obj['YahooName'] = ApiClient.convertToType(data['YahooName'], 'String');
            }
            if (data.hasOwnProperty('YahooPlayerID')) {
                obj['YahooPlayerID'] = ApiClient.convertToType(data['YahooPlayerID'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Team</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Team</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['City'] && !(typeof data['City'] === 'string' || data['City'] instanceof String)) {
            throw new Error("Expected the field `City` to be a primitive type in the JSON string but got " + data['City']);
        }
        // ensure the json data is a string
        if (data['Conference'] && !(typeof data['Conference'] === 'string' || data['Conference'] instanceof String)) {
            throw new Error("Expected the field `Conference` to be a primitive type in the JSON string but got " + data['Conference']);
        }
        // ensure the json data is a string
        if (data['DefensiveCoordinator'] && !(typeof data['DefensiveCoordinator'] === 'string' || data['DefensiveCoordinator'] instanceof String)) {
            throw new Error("Expected the field `DefensiveCoordinator` to be a primitive type in the JSON string but got " + data['DefensiveCoordinator']);
        }
        // ensure the json data is a string
        if (data['DefensiveScheme'] && !(typeof data['DefensiveScheme'] === 'string' || data['DefensiveScheme'] instanceof String)) {
            throw new Error("Expected the field `DefensiveScheme` to be a primitive type in the JSON string but got " + data['DefensiveScheme']);
        }
        // ensure the json data is a string
        if (data['Division'] && !(typeof data['Division'] === 'string' || data['Division'] instanceof String)) {
            throw new Error("Expected the field `Division` to be a primitive type in the JSON string but got " + data['Division']);
        }
        // ensure the json data is a string
        if (data['DraftKingsName'] && !(typeof data['DraftKingsName'] === 'string' || data['DraftKingsName'] instanceof String)) {
            throw new Error("Expected the field `DraftKingsName` to be a primitive type in the JSON string but got " + data['DraftKingsName']);
        }
        // ensure the json data is a string
        if (data['FanDuelName'] && !(typeof data['FanDuelName'] === 'string' || data['FanDuelName'] instanceof String)) {
            throw new Error("Expected the field `FanDuelName` to be a primitive type in the JSON string but got " + data['FanDuelName']);
        }
        // ensure the json data is a string
        if (data['FantasyDraftName'] && !(typeof data['FantasyDraftName'] === 'string' || data['FantasyDraftName'] instanceof String)) {
            throw new Error("Expected the field `FantasyDraftName` to be a primitive type in the JSON string but got " + data['FantasyDraftName']);
        }
        // ensure the json data is a string
        if (data['FullName'] && !(typeof data['FullName'] === 'string' || data['FullName'] instanceof String)) {
            throw new Error("Expected the field `FullName` to be a primitive type in the JSON string but got " + data['FullName']);
        }
        // ensure the json data is a string
        if (data['HeadCoach'] && !(typeof data['HeadCoach'] === 'string' || data['HeadCoach'] instanceof String)) {
            throw new Error("Expected the field `HeadCoach` to be a primitive type in the JSON string but got " + data['HeadCoach']);
        }
        // ensure the json data is a string
        if (data['Key'] && !(typeof data['Key'] === 'string' || data['Key'] instanceof String)) {
            throw new Error("Expected the field `Key` to be a primitive type in the JSON string but got " + data['Key']);
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // ensure the json data is a string
        if (data['OffensiveCoordinator'] && !(typeof data['OffensiveCoordinator'] === 'string' || data['OffensiveCoordinator'] instanceof String)) {
            throw new Error("Expected the field `OffensiveCoordinator` to be a primitive type in the JSON string but got " + data['OffensiveCoordinator']);
        }
        // ensure the json data is a string
        if (data['OffensiveScheme'] && !(typeof data['OffensiveScheme'] === 'string' || data['OffensiveScheme'] instanceof String)) {
            throw new Error("Expected the field `OffensiveScheme` to be a primitive type in the JSON string but got " + data['OffensiveScheme']);
        }
        // ensure the json data is a string
        if (data['PrimaryColor'] && !(typeof data['PrimaryColor'] === 'string' || data['PrimaryColor'] instanceof String)) {
            throw new Error("Expected the field `PrimaryColor` to be a primitive type in the JSON string but got " + data['PrimaryColor']);
        }
        // ensure the json data is a string
        if (data['QuaternaryColor'] && !(typeof data['QuaternaryColor'] === 'string' || data['QuaternaryColor'] instanceof String)) {
            throw new Error("Expected the field `QuaternaryColor` to be a primitive type in the JSON string but got " + data['QuaternaryColor']);
        }
        // ensure the json data is a string
        if (data['SecondaryColor'] && !(typeof data['SecondaryColor'] === 'string' || data['SecondaryColor'] instanceof String)) {
            throw new Error("Expected the field `SecondaryColor` to be a primitive type in the JSON string but got " + data['SecondaryColor']);
        }
        // ensure the json data is a string
        if (data['SpecialTeamsCoach'] && !(typeof data['SpecialTeamsCoach'] === 'string' || data['SpecialTeamsCoach'] instanceof String)) {
            throw new Error("Expected the field `SpecialTeamsCoach` to be a primitive type in the JSON string but got " + data['SpecialTeamsCoach']);
        }
        // validate the optional field `StadiumDetails`
        if (data['StadiumDetails']) { // data not null
          Stadium.validateJSON(data['StadiumDetails']);
        }
        // ensure the json data is a string
        if (data['TertiaryColor'] && !(typeof data['TertiaryColor'] === 'string' || data['TertiaryColor'] instanceof String)) {
            throw new Error("Expected the field `TertiaryColor` to be a primitive type in the JSON string but got " + data['TertiaryColor']);
        }
        // ensure the json data is a string
        if (data['UpcomingOpponent'] && !(typeof data['UpcomingOpponent'] === 'string' || data['UpcomingOpponent'] instanceof String)) {
            throw new Error("Expected the field `UpcomingOpponent` to be a primitive type in the JSON string but got " + data['UpcomingOpponent']);
        }
        // ensure the json data is a string
        if (data['WikipediaLogoUrl'] && !(typeof data['WikipediaLogoUrl'] === 'string' || data['WikipediaLogoUrl'] instanceof String)) {
            throw new Error("Expected the field `WikipediaLogoUrl` to be a primitive type in the JSON string but got " + data['WikipediaLogoUrl']);
        }
        // ensure the json data is a string
        if (data['WikipediaWordMarkUrl'] && !(typeof data['WikipediaWordMarkUrl'] === 'string' || data['WikipediaWordMarkUrl'] instanceof String)) {
            throw new Error("Expected the field `WikipediaWordMarkUrl` to be a primitive type in the JSON string but got " + data['WikipediaWordMarkUrl']);
        }
        // ensure the json data is a string
        if (data['YahooName'] && !(typeof data['YahooName'] === 'string' || data['YahooName'] instanceof String)) {
            throw new Error("Expected the field `YahooName` to be a primitive type in the JSON string but got " + data['YahooName']);
        }

        return true;
    }


}



/**
 * @member {Number} AverageDraftPosition
 */
Team.prototype['AverageDraftPosition'] = undefined;

/**
 * @member {Number} AverageDraftPosition2QB
 */
Team.prototype['AverageDraftPosition2QB'] = undefined;

/**
 * @member {Number} AverageDraftPositionDynasty
 */
Team.prototype['AverageDraftPositionDynasty'] = undefined;

/**
 * @member {Number} AverageDraftPositionPPR
 */
Team.prototype['AverageDraftPositionPPR'] = undefined;

/**
 * @member {Number} ByeWeek
 */
Team.prototype['ByeWeek'] = undefined;

/**
 * @member {String} City
 */
Team.prototype['City'] = undefined;

/**
 * @member {String} Conference
 */
Team.prototype['Conference'] = undefined;

/**
 * @member {String} DefensiveCoordinator
 */
Team.prototype['DefensiveCoordinator'] = undefined;

/**
 * @member {String} DefensiveScheme
 */
Team.prototype['DefensiveScheme'] = undefined;

/**
 * @member {String} Division
 */
Team.prototype['Division'] = undefined;

/**
 * @member {String} DraftKingsName
 */
Team.prototype['DraftKingsName'] = undefined;

/**
 * @member {Number} DraftKingsPlayerID
 */
Team.prototype['DraftKingsPlayerID'] = undefined;

/**
 * @member {String} FanDuelName
 */
Team.prototype['FanDuelName'] = undefined;

/**
 * @member {Number} FanDuelPlayerID
 */
Team.prototype['FanDuelPlayerID'] = undefined;

/**
 * @member {String} FantasyDraftName
 */
Team.prototype['FantasyDraftName'] = undefined;

/**
 * @member {Number} FantasyDraftPlayerID
 */
Team.prototype['FantasyDraftPlayerID'] = undefined;

/**
 * @member {String} FullName
 */
Team.prototype['FullName'] = undefined;

/**
 * @member {Number} GlobalTeamID
 */
Team.prototype['GlobalTeamID'] = undefined;

/**
 * @member {String} HeadCoach
 */
Team.prototype['HeadCoach'] = undefined;

/**
 * @member {String} Key
 */
Team.prototype['Key'] = undefined;

/**
 * @member {String} Name
 */
Team.prototype['Name'] = undefined;

/**
 * @member {String} OffensiveCoordinator
 */
Team.prototype['OffensiveCoordinator'] = undefined;

/**
 * @member {String} OffensiveScheme
 */
Team.prototype['OffensiveScheme'] = undefined;

/**
 * @member {Number} PlayerID
 */
Team.prototype['PlayerID'] = undefined;

/**
 * @member {String} PrimaryColor
 */
Team.prototype['PrimaryColor'] = undefined;

/**
 * @member {String} QuaternaryColor
 */
Team.prototype['QuaternaryColor'] = undefined;

/**
 * @member {String} SecondaryColor
 */
Team.prototype['SecondaryColor'] = undefined;

/**
 * @member {String} SpecialTeamsCoach
 */
Team.prototype['SpecialTeamsCoach'] = undefined;

/**
 * @member {module:model/Stadium} StadiumDetails
 */
Team.prototype['StadiumDetails'] = undefined;

/**
 * @member {Number} StadiumID
 */
Team.prototype['StadiumID'] = undefined;

/**
 * @member {Number} TeamID
 */
Team.prototype['TeamID'] = undefined;

/**
 * @member {String} TertiaryColor
 */
Team.prototype['TertiaryColor'] = undefined;

/**
 * @member {Number} UpcomingDraftKingsSalary
 */
Team.prototype['UpcomingDraftKingsSalary'] = undefined;

/**
 * @member {Number} UpcomingFanDuelSalary
 */
Team.prototype['UpcomingFanDuelSalary'] = undefined;

/**
 * @member {String} UpcomingOpponent
 */
Team.prototype['UpcomingOpponent'] = undefined;

/**
 * @member {Number} UpcomingOpponentPositionRank
 */
Team.prototype['UpcomingOpponentPositionRank'] = undefined;

/**
 * @member {Number} UpcomingOpponentRank
 */
Team.prototype['UpcomingOpponentRank'] = undefined;

/**
 * @member {Number} UpcomingSalary
 */
Team.prototype['UpcomingSalary'] = undefined;

/**
 * @member {Number} UpcomingYahooSalary
 */
Team.prototype['UpcomingYahooSalary'] = undefined;

/**
 * @member {String} WikipediaLogoUrl
 */
Team.prototype['WikipediaLogoUrl'] = undefined;

/**
 * @member {String} WikipediaWordMarkUrl
 */
Team.prototype['WikipediaWordMarkUrl'] = undefined;

/**
 * @member {String} YahooName
 */
Team.prototype['YahooName'] = undefined;

/**
 * @member {Number} YahooPlayerID
 */
Team.prototype['YahooPlayerID'] = undefined;






export default Team;

