/**
 * NFL v3 Stats
 * NFL rosters, player stats, team stats, and fantasy stats API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FantasyPlayer model module.
 * @module model/FantasyPlayer
 * @version 1.0
 */
class FantasyPlayer {
    /**
     * Constructs a new <code>FantasyPlayer</code>.
     * @alias module:model/FantasyPlayer
     */
    constructor() { 
        
        FantasyPlayer.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FantasyPlayer</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FantasyPlayer} obj Optional instance to populate.
     * @return {module:model/FantasyPlayer} The populated <code>FantasyPlayer</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FantasyPlayer();

            if (data.hasOwnProperty('AuctionValue')) {
                obj['AuctionValue'] = ApiClient.convertToType(data['AuctionValue'], 'Number');
            }
            if (data.hasOwnProperty('AuctionValuePPR')) {
                obj['AuctionValuePPR'] = ApiClient.convertToType(data['AuctionValuePPR'], 'Number');
            }
            if (data.hasOwnProperty('AverageDraftPosition')) {
                obj['AverageDraftPosition'] = ApiClient.convertToType(data['AverageDraftPosition'], 'Number');
            }
            if (data.hasOwnProperty('AverageDraftPosition2QB')) {
                obj['AverageDraftPosition2QB'] = ApiClient.convertToType(data['AverageDraftPosition2QB'], 'Number');
            }
            if (data.hasOwnProperty('AverageDraftPositionDynasty')) {
                obj['AverageDraftPositionDynasty'] = ApiClient.convertToType(data['AverageDraftPositionDynasty'], 'Number');
            }
            if (data.hasOwnProperty('AverageDraftPositionIDP')) {
                obj['AverageDraftPositionIDP'] = ApiClient.convertToType(data['AverageDraftPositionIDP'], 'Number');
            }
            if (data.hasOwnProperty('AverageDraftPositionPPR')) {
                obj['AverageDraftPositionPPR'] = ApiClient.convertToType(data['AverageDraftPositionPPR'], 'Number');
            }
            if (data.hasOwnProperty('AverageDraftPositionRookie')) {
                obj['AverageDraftPositionRookie'] = ApiClient.convertToType(data['AverageDraftPositionRookie'], 'Number');
            }
            if (data.hasOwnProperty('ByeWeek')) {
                obj['ByeWeek'] = ApiClient.convertToType(data['ByeWeek'], 'Number');
            }
            if (data.hasOwnProperty('FantasyPlayerKey')) {
                obj['FantasyPlayerKey'] = ApiClient.convertToType(data['FantasyPlayerKey'], 'String');
            }
            if (data.hasOwnProperty('LastSeasonFantasyPoints')) {
                obj['LastSeasonFantasyPoints'] = ApiClient.convertToType(data['LastSeasonFantasyPoints'], 'Number');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('PlayerID')) {
                obj['PlayerID'] = ApiClient.convertToType(data['PlayerID'], 'Number');
            }
            if (data.hasOwnProperty('Position')) {
                obj['Position'] = ApiClient.convertToType(data['Position'], 'String');
            }
            if (data.hasOwnProperty('ProjectedFantasyPoints')) {
                obj['ProjectedFantasyPoints'] = ApiClient.convertToType(data['ProjectedFantasyPoints'], 'Number');
            }
            if (data.hasOwnProperty('Team')) {
                obj['Team'] = ApiClient.convertToType(data['Team'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FantasyPlayer</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FantasyPlayer</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['FantasyPlayerKey'] && !(typeof data['FantasyPlayerKey'] === 'string' || data['FantasyPlayerKey'] instanceof String)) {
            throw new Error("Expected the field `FantasyPlayerKey` to be a primitive type in the JSON string but got " + data['FantasyPlayerKey']);
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // ensure the json data is a string
        if (data['Position'] && !(typeof data['Position'] === 'string' || data['Position'] instanceof String)) {
            throw new Error("Expected the field `Position` to be a primitive type in the JSON string but got " + data['Position']);
        }
        // ensure the json data is a string
        if (data['Team'] && !(typeof data['Team'] === 'string' || data['Team'] instanceof String)) {
            throw new Error("Expected the field `Team` to be a primitive type in the JSON string but got " + data['Team']);
        }

        return true;
    }


}



/**
 * @member {Number} AuctionValue
 */
FantasyPlayer.prototype['AuctionValue'] = undefined;

/**
 * @member {Number} AuctionValuePPR
 */
FantasyPlayer.prototype['AuctionValuePPR'] = undefined;

/**
 * @member {Number} AverageDraftPosition
 */
FantasyPlayer.prototype['AverageDraftPosition'] = undefined;

/**
 * @member {Number} AverageDraftPosition2QB
 */
FantasyPlayer.prototype['AverageDraftPosition2QB'] = undefined;

/**
 * @member {Number} AverageDraftPositionDynasty
 */
FantasyPlayer.prototype['AverageDraftPositionDynasty'] = undefined;

/**
 * @member {Number} AverageDraftPositionIDP
 */
FantasyPlayer.prototype['AverageDraftPositionIDP'] = undefined;

/**
 * @member {Number} AverageDraftPositionPPR
 */
FantasyPlayer.prototype['AverageDraftPositionPPR'] = undefined;

/**
 * @member {Number} AverageDraftPositionRookie
 */
FantasyPlayer.prototype['AverageDraftPositionRookie'] = undefined;

/**
 * @member {Number} ByeWeek
 */
FantasyPlayer.prototype['ByeWeek'] = undefined;

/**
 * @member {String} FantasyPlayerKey
 */
FantasyPlayer.prototype['FantasyPlayerKey'] = undefined;

/**
 * @member {Number} LastSeasonFantasyPoints
 */
FantasyPlayer.prototype['LastSeasonFantasyPoints'] = undefined;

/**
 * @member {String} Name
 */
FantasyPlayer.prototype['Name'] = undefined;

/**
 * @member {Number} PlayerID
 */
FantasyPlayer.prototype['PlayerID'] = undefined;

/**
 * @member {String} Position
 */
FantasyPlayer.prototype['Position'] = undefined;

/**
 * @member {Number} ProjectedFantasyPoints
 */
FantasyPlayer.prototype['ProjectedFantasyPoints'] = undefined;

/**
 * @member {String} Team
 */
FantasyPlayer.prototype['Team'] = undefined;






export default FantasyPlayer;

