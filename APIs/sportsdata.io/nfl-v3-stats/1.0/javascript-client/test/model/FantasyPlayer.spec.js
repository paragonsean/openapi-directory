/**
 * NFL v3 Stats
 * NFL rosters, player stats, team stats, and fantasy stats API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NflV3Stats);
  }
}(this, function(expect, NflV3Stats) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NflV3Stats.FantasyPlayer();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('FantasyPlayer', function() {
    it('should create an instance of FantasyPlayer', function() {
      // uncomment below and update the code to test FantasyPlayer
      //var instance = new NflV3Stats.FantasyPlayer();
      //expect(instance).to.be.a(NflV3Stats.FantasyPlayer);
    });

    it('should have the property auctionValue (base name: "AuctionValue")', function() {
      // uncomment below and update the code to test the property auctionValue
      //var instance = new NflV3Stats.FantasyPlayer();
      //expect(instance).to.be();
    });

    it('should have the property auctionValuePPR (base name: "AuctionValuePPR")', function() {
      // uncomment below and update the code to test the property auctionValuePPR
      //var instance = new NflV3Stats.FantasyPlayer();
      //expect(instance).to.be();
    });

    it('should have the property averageDraftPosition (base name: "AverageDraftPosition")', function() {
      // uncomment below and update the code to test the property averageDraftPosition
      //var instance = new NflV3Stats.FantasyPlayer();
      //expect(instance).to.be();
    });

    it('should have the property averageDraftPosition2QB (base name: "AverageDraftPosition2QB")', function() {
      // uncomment below and update the code to test the property averageDraftPosition2QB
      //var instance = new NflV3Stats.FantasyPlayer();
      //expect(instance).to.be();
    });

    it('should have the property averageDraftPositionDynasty (base name: "AverageDraftPositionDynasty")', function() {
      // uncomment below and update the code to test the property averageDraftPositionDynasty
      //var instance = new NflV3Stats.FantasyPlayer();
      //expect(instance).to.be();
    });

    it('should have the property averageDraftPositionIDP (base name: "AverageDraftPositionIDP")', function() {
      // uncomment below and update the code to test the property averageDraftPositionIDP
      //var instance = new NflV3Stats.FantasyPlayer();
      //expect(instance).to.be();
    });

    it('should have the property averageDraftPositionPPR (base name: "AverageDraftPositionPPR")', function() {
      // uncomment below and update the code to test the property averageDraftPositionPPR
      //var instance = new NflV3Stats.FantasyPlayer();
      //expect(instance).to.be();
    });

    it('should have the property averageDraftPositionRookie (base name: "AverageDraftPositionRookie")', function() {
      // uncomment below and update the code to test the property averageDraftPositionRookie
      //var instance = new NflV3Stats.FantasyPlayer();
      //expect(instance).to.be();
    });

    it('should have the property byeWeek (base name: "ByeWeek")', function() {
      // uncomment below and update the code to test the property byeWeek
      //var instance = new NflV3Stats.FantasyPlayer();
      //expect(instance).to.be();
    });

    it('should have the property fantasyPlayerKey (base name: "FantasyPlayerKey")', function() {
      // uncomment below and update the code to test the property fantasyPlayerKey
      //var instance = new NflV3Stats.FantasyPlayer();
      //expect(instance).to.be();
    });

    it('should have the property lastSeasonFantasyPoints (base name: "LastSeasonFantasyPoints")', function() {
      // uncomment below and update the code to test the property lastSeasonFantasyPoints
      //var instance = new NflV3Stats.FantasyPlayer();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "Name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new NflV3Stats.FantasyPlayer();
      //expect(instance).to.be();
    });

    it('should have the property playerID (base name: "PlayerID")', function() {
      // uncomment below and update the code to test the property playerID
      //var instance = new NflV3Stats.FantasyPlayer();
      //expect(instance).to.be();
    });

    it('should have the property position (base name: "Position")', function() {
      // uncomment below and update the code to test the property position
      //var instance = new NflV3Stats.FantasyPlayer();
      //expect(instance).to.be();
    });

    it('should have the property projectedFantasyPoints (base name: "ProjectedFantasyPoints")', function() {
      // uncomment below and update the code to test the property projectedFantasyPoints
      //var instance = new NflV3Stats.FantasyPlayer();
      //expect(instance).to.be();
    });

    it('should have the property team (base name: "Team")', function() {
      // uncomment below and update the code to test the property team
      //var instance = new NflV3Stats.FantasyPlayer();
      //expect(instance).to.be();
    });

  });

}));
