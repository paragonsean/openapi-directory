# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PlayerKickPuntReturns(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fantasy_points: float=None, fantasy_position: str=None, fumbles_lost: int=None, kick_return_long: int=None, kick_return_touchdowns: int=None, kick_return_yards: int=None, kick_return_yards_per_attempt: float=None, kick_returns: int=None, name: str=None, number: int=None, player_game_id: int=None, player_id: int=None, position: str=None, position_category: str=None, punt_return_long: int=None, punt_return_touchdowns: int=None, punt_return_yards: int=None, punt_return_yards_per_attempt: float=None, punt_returns: int=None, short_name: str=None, team: str=None, updated: str=None):
        """PlayerKickPuntReturns - a model defined in OpenAPI

        :param fantasy_points: The fantasy_points of this PlayerKickPuntReturns.
        :param fantasy_position: The fantasy_position of this PlayerKickPuntReturns.
        :param fumbles_lost: The fumbles_lost of this PlayerKickPuntReturns.
        :param kick_return_long: The kick_return_long of this PlayerKickPuntReturns.
        :param kick_return_touchdowns: The kick_return_touchdowns of this PlayerKickPuntReturns.
        :param kick_return_yards: The kick_return_yards of this PlayerKickPuntReturns.
        :param kick_return_yards_per_attempt: The kick_return_yards_per_attempt of this PlayerKickPuntReturns.
        :param kick_returns: The kick_returns of this PlayerKickPuntReturns.
        :param name: The name of this PlayerKickPuntReturns.
        :param number: The number of this PlayerKickPuntReturns.
        :param player_game_id: The player_game_id of this PlayerKickPuntReturns.
        :param player_id: The player_id of this PlayerKickPuntReturns.
        :param position: The position of this PlayerKickPuntReturns.
        :param position_category: The position_category of this PlayerKickPuntReturns.
        :param punt_return_long: The punt_return_long of this PlayerKickPuntReturns.
        :param punt_return_touchdowns: The punt_return_touchdowns of this PlayerKickPuntReturns.
        :param punt_return_yards: The punt_return_yards of this PlayerKickPuntReturns.
        :param punt_return_yards_per_attempt: The punt_return_yards_per_attempt of this PlayerKickPuntReturns.
        :param punt_returns: The punt_returns of this PlayerKickPuntReturns.
        :param short_name: The short_name of this PlayerKickPuntReturns.
        :param team: The team of this PlayerKickPuntReturns.
        :param updated: The updated of this PlayerKickPuntReturns.
        """
        self.openapi_types = {
            'fantasy_points': float,
            'fantasy_position': str,
            'fumbles_lost': int,
            'kick_return_long': int,
            'kick_return_touchdowns': int,
            'kick_return_yards': int,
            'kick_return_yards_per_attempt': float,
            'kick_returns': int,
            'name': str,
            'number': int,
            'player_game_id': int,
            'player_id': int,
            'position': str,
            'position_category': str,
            'punt_return_long': int,
            'punt_return_touchdowns': int,
            'punt_return_yards': int,
            'punt_return_yards_per_attempt': float,
            'punt_returns': int,
            'short_name': str,
            'team': str,
            'updated': str
        }

        self.attribute_map = {
            'fantasy_points': 'FantasyPoints',
            'fantasy_position': 'FantasyPosition',
            'fumbles_lost': 'FumblesLost',
            'kick_return_long': 'KickReturnLong',
            'kick_return_touchdowns': 'KickReturnTouchdowns',
            'kick_return_yards': 'KickReturnYards',
            'kick_return_yards_per_attempt': 'KickReturnYardsPerAttempt',
            'kick_returns': 'KickReturns',
            'name': 'Name',
            'number': 'Number',
            'player_game_id': 'PlayerGameID',
            'player_id': 'PlayerID',
            'position': 'Position',
            'position_category': 'PositionCategory',
            'punt_return_long': 'PuntReturnLong',
            'punt_return_touchdowns': 'PuntReturnTouchdowns',
            'punt_return_yards': 'PuntReturnYards',
            'punt_return_yards_per_attempt': 'PuntReturnYardsPerAttempt',
            'punt_returns': 'PuntReturns',
            'short_name': 'ShortName',
            'team': 'Team',
            'updated': 'Updated'
        }

        self._fantasy_points = fantasy_points
        self._fantasy_position = fantasy_position
        self._fumbles_lost = fumbles_lost
        self._kick_return_long = kick_return_long
        self._kick_return_touchdowns = kick_return_touchdowns
        self._kick_return_yards = kick_return_yards
        self._kick_return_yards_per_attempt = kick_return_yards_per_attempt
        self._kick_returns = kick_returns
        self._name = name
        self._number = number
        self._player_game_id = player_game_id
        self._player_id = player_id
        self._position = position
        self._position_category = position_category
        self._punt_return_long = punt_return_long
        self._punt_return_touchdowns = punt_return_touchdowns
        self._punt_return_yards = punt_return_yards
        self._punt_return_yards_per_attempt = punt_return_yards_per_attempt
        self._punt_returns = punt_returns
        self._short_name = short_name
        self._team = team
        self._updated = updated

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PlayerKickPuntReturns':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PlayerKickPuntReturns of this PlayerKickPuntReturns.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fantasy_points(self):
        """Gets the fantasy_points of this PlayerKickPuntReturns.


        :return: The fantasy_points of this PlayerKickPuntReturns.
        :rtype: float
        """
        return self._fantasy_points

    @fantasy_points.setter
    def fantasy_points(self, fantasy_points):
        """Sets the fantasy_points of this PlayerKickPuntReturns.


        :param fantasy_points: The fantasy_points of this PlayerKickPuntReturns.
        :type fantasy_points: float
        """

        self._fantasy_points = fantasy_points

    @property
    def fantasy_position(self):
        """Gets the fantasy_position of this PlayerKickPuntReturns.


        :return: The fantasy_position of this PlayerKickPuntReturns.
        :rtype: str
        """
        return self._fantasy_position

    @fantasy_position.setter
    def fantasy_position(self, fantasy_position):
        """Sets the fantasy_position of this PlayerKickPuntReturns.


        :param fantasy_position: The fantasy_position of this PlayerKickPuntReturns.
        :type fantasy_position: str
        """

        self._fantasy_position = fantasy_position

    @property
    def fumbles_lost(self):
        """Gets the fumbles_lost of this PlayerKickPuntReturns.


        :return: The fumbles_lost of this PlayerKickPuntReturns.
        :rtype: int
        """
        return self._fumbles_lost

    @fumbles_lost.setter
    def fumbles_lost(self, fumbles_lost):
        """Sets the fumbles_lost of this PlayerKickPuntReturns.


        :param fumbles_lost: The fumbles_lost of this PlayerKickPuntReturns.
        :type fumbles_lost: int
        """

        self._fumbles_lost = fumbles_lost

    @property
    def kick_return_long(self):
        """Gets the kick_return_long of this PlayerKickPuntReturns.


        :return: The kick_return_long of this PlayerKickPuntReturns.
        :rtype: int
        """
        return self._kick_return_long

    @kick_return_long.setter
    def kick_return_long(self, kick_return_long):
        """Sets the kick_return_long of this PlayerKickPuntReturns.


        :param kick_return_long: The kick_return_long of this PlayerKickPuntReturns.
        :type kick_return_long: int
        """

        self._kick_return_long = kick_return_long

    @property
    def kick_return_touchdowns(self):
        """Gets the kick_return_touchdowns of this PlayerKickPuntReturns.


        :return: The kick_return_touchdowns of this PlayerKickPuntReturns.
        :rtype: int
        """
        return self._kick_return_touchdowns

    @kick_return_touchdowns.setter
    def kick_return_touchdowns(self, kick_return_touchdowns):
        """Sets the kick_return_touchdowns of this PlayerKickPuntReturns.


        :param kick_return_touchdowns: The kick_return_touchdowns of this PlayerKickPuntReturns.
        :type kick_return_touchdowns: int
        """

        self._kick_return_touchdowns = kick_return_touchdowns

    @property
    def kick_return_yards(self):
        """Gets the kick_return_yards of this PlayerKickPuntReturns.


        :return: The kick_return_yards of this PlayerKickPuntReturns.
        :rtype: int
        """
        return self._kick_return_yards

    @kick_return_yards.setter
    def kick_return_yards(self, kick_return_yards):
        """Sets the kick_return_yards of this PlayerKickPuntReturns.


        :param kick_return_yards: The kick_return_yards of this PlayerKickPuntReturns.
        :type kick_return_yards: int
        """

        self._kick_return_yards = kick_return_yards

    @property
    def kick_return_yards_per_attempt(self):
        """Gets the kick_return_yards_per_attempt of this PlayerKickPuntReturns.


        :return: The kick_return_yards_per_attempt of this PlayerKickPuntReturns.
        :rtype: float
        """
        return self._kick_return_yards_per_attempt

    @kick_return_yards_per_attempt.setter
    def kick_return_yards_per_attempt(self, kick_return_yards_per_attempt):
        """Sets the kick_return_yards_per_attempt of this PlayerKickPuntReturns.


        :param kick_return_yards_per_attempt: The kick_return_yards_per_attempt of this PlayerKickPuntReturns.
        :type kick_return_yards_per_attempt: float
        """

        self._kick_return_yards_per_attempt = kick_return_yards_per_attempt

    @property
    def kick_returns(self):
        """Gets the kick_returns of this PlayerKickPuntReturns.


        :return: The kick_returns of this PlayerKickPuntReturns.
        :rtype: int
        """
        return self._kick_returns

    @kick_returns.setter
    def kick_returns(self, kick_returns):
        """Sets the kick_returns of this PlayerKickPuntReturns.


        :param kick_returns: The kick_returns of this PlayerKickPuntReturns.
        :type kick_returns: int
        """

        self._kick_returns = kick_returns

    @property
    def name(self):
        """Gets the name of this PlayerKickPuntReturns.


        :return: The name of this PlayerKickPuntReturns.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PlayerKickPuntReturns.


        :param name: The name of this PlayerKickPuntReturns.
        :type name: str
        """

        self._name = name

    @property
    def number(self):
        """Gets the number of this PlayerKickPuntReturns.


        :return: The number of this PlayerKickPuntReturns.
        :rtype: int
        """
        return self._number

    @number.setter
    def number(self, number):
        """Sets the number of this PlayerKickPuntReturns.


        :param number: The number of this PlayerKickPuntReturns.
        :type number: int
        """

        self._number = number

    @property
    def player_game_id(self):
        """Gets the player_game_id of this PlayerKickPuntReturns.


        :return: The player_game_id of this PlayerKickPuntReturns.
        :rtype: int
        """
        return self._player_game_id

    @player_game_id.setter
    def player_game_id(self, player_game_id):
        """Sets the player_game_id of this PlayerKickPuntReturns.


        :param player_game_id: The player_game_id of this PlayerKickPuntReturns.
        :type player_game_id: int
        """

        self._player_game_id = player_game_id

    @property
    def player_id(self):
        """Gets the player_id of this PlayerKickPuntReturns.


        :return: The player_id of this PlayerKickPuntReturns.
        :rtype: int
        """
        return self._player_id

    @player_id.setter
    def player_id(self, player_id):
        """Sets the player_id of this PlayerKickPuntReturns.


        :param player_id: The player_id of this PlayerKickPuntReturns.
        :type player_id: int
        """

        self._player_id = player_id

    @property
    def position(self):
        """Gets the position of this PlayerKickPuntReturns.


        :return: The position of this PlayerKickPuntReturns.
        :rtype: str
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this PlayerKickPuntReturns.


        :param position: The position of this PlayerKickPuntReturns.
        :type position: str
        """

        self._position = position

    @property
    def position_category(self):
        """Gets the position_category of this PlayerKickPuntReturns.


        :return: The position_category of this PlayerKickPuntReturns.
        :rtype: str
        """
        return self._position_category

    @position_category.setter
    def position_category(self, position_category):
        """Sets the position_category of this PlayerKickPuntReturns.


        :param position_category: The position_category of this PlayerKickPuntReturns.
        :type position_category: str
        """

        self._position_category = position_category

    @property
    def punt_return_long(self):
        """Gets the punt_return_long of this PlayerKickPuntReturns.


        :return: The punt_return_long of this PlayerKickPuntReturns.
        :rtype: int
        """
        return self._punt_return_long

    @punt_return_long.setter
    def punt_return_long(self, punt_return_long):
        """Sets the punt_return_long of this PlayerKickPuntReturns.


        :param punt_return_long: The punt_return_long of this PlayerKickPuntReturns.
        :type punt_return_long: int
        """

        self._punt_return_long = punt_return_long

    @property
    def punt_return_touchdowns(self):
        """Gets the punt_return_touchdowns of this PlayerKickPuntReturns.


        :return: The punt_return_touchdowns of this PlayerKickPuntReturns.
        :rtype: int
        """
        return self._punt_return_touchdowns

    @punt_return_touchdowns.setter
    def punt_return_touchdowns(self, punt_return_touchdowns):
        """Sets the punt_return_touchdowns of this PlayerKickPuntReturns.


        :param punt_return_touchdowns: The punt_return_touchdowns of this PlayerKickPuntReturns.
        :type punt_return_touchdowns: int
        """

        self._punt_return_touchdowns = punt_return_touchdowns

    @property
    def punt_return_yards(self):
        """Gets the punt_return_yards of this PlayerKickPuntReturns.


        :return: The punt_return_yards of this PlayerKickPuntReturns.
        :rtype: int
        """
        return self._punt_return_yards

    @punt_return_yards.setter
    def punt_return_yards(self, punt_return_yards):
        """Sets the punt_return_yards of this PlayerKickPuntReturns.


        :param punt_return_yards: The punt_return_yards of this PlayerKickPuntReturns.
        :type punt_return_yards: int
        """

        self._punt_return_yards = punt_return_yards

    @property
    def punt_return_yards_per_attempt(self):
        """Gets the punt_return_yards_per_attempt of this PlayerKickPuntReturns.


        :return: The punt_return_yards_per_attempt of this PlayerKickPuntReturns.
        :rtype: float
        """
        return self._punt_return_yards_per_attempt

    @punt_return_yards_per_attempt.setter
    def punt_return_yards_per_attempt(self, punt_return_yards_per_attempt):
        """Sets the punt_return_yards_per_attempt of this PlayerKickPuntReturns.


        :param punt_return_yards_per_attempt: The punt_return_yards_per_attempt of this PlayerKickPuntReturns.
        :type punt_return_yards_per_attempt: float
        """

        self._punt_return_yards_per_attempt = punt_return_yards_per_attempt

    @property
    def punt_returns(self):
        """Gets the punt_returns of this PlayerKickPuntReturns.


        :return: The punt_returns of this PlayerKickPuntReturns.
        :rtype: int
        """
        return self._punt_returns

    @punt_returns.setter
    def punt_returns(self, punt_returns):
        """Sets the punt_returns of this PlayerKickPuntReturns.


        :param punt_returns: The punt_returns of this PlayerKickPuntReturns.
        :type punt_returns: int
        """

        self._punt_returns = punt_returns

    @property
    def short_name(self):
        """Gets the short_name of this PlayerKickPuntReturns.


        :return: The short_name of this PlayerKickPuntReturns.
        :rtype: str
        """
        return self._short_name

    @short_name.setter
    def short_name(self, short_name):
        """Sets the short_name of this PlayerKickPuntReturns.


        :param short_name: The short_name of this PlayerKickPuntReturns.
        :type short_name: str
        """

        self._short_name = short_name

    @property
    def team(self):
        """Gets the team of this PlayerKickPuntReturns.


        :return: The team of this PlayerKickPuntReturns.
        :rtype: str
        """
        return self._team

    @team.setter
    def team(self, team):
        """Sets the team of this PlayerKickPuntReturns.


        :param team: The team of this PlayerKickPuntReturns.
        :type team: str
        """

        self._team = team

    @property
    def updated(self):
        """Gets the updated of this PlayerKickPuntReturns.


        :return: The updated of this PlayerKickPuntReturns.
        :rtype: str
        """
        return self._updated

    @updated.setter
    def updated(self, updated):
        """Sets the updated of this PlayerKickPuntReturns.


        :param updated: The updated of this PlayerKickPuntReturns.
        :type updated: str
        """

        self._updated = updated
