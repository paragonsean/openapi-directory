# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.fantasy_defense_game import FantasyDefenseGame
from openapi_server.models.player_game import PlayerGame
from openapi_server.models.quarter import Quarter
from openapi_server.models.score import Score
from openapi_server.models.scoring_detail import ScoringDetail
from openapi_server.models.scoring_play import ScoringPlay
from openapi_server.models.team_game import TeamGame
from openapi_server import util


class BoxScoreV3(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fantasy_defense_games: List[FantasyDefenseGame]=None, player_games: List[PlayerGame]=None, quarters: List[Quarter]=None, score: Score=None, scoring_details: List[ScoringDetail]=None, scoring_plays: List[ScoringPlay]=None, team_games: List[TeamGame]=None):
        """BoxScoreV3 - a model defined in OpenAPI

        :param fantasy_defense_games: The fantasy_defense_games of this BoxScoreV3.
        :param player_games: The player_games of this BoxScoreV3.
        :param quarters: The quarters of this BoxScoreV3.
        :param score: The score of this BoxScoreV3.
        :param scoring_details: The scoring_details of this BoxScoreV3.
        :param scoring_plays: The scoring_plays of this BoxScoreV3.
        :param team_games: The team_games of this BoxScoreV3.
        """
        self.openapi_types = {
            'fantasy_defense_games': List[FantasyDefenseGame],
            'player_games': List[PlayerGame],
            'quarters': List[Quarter],
            'score': Score,
            'scoring_details': List[ScoringDetail],
            'scoring_plays': List[ScoringPlay],
            'team_games': List[TeamGame]
        }

        self.attribute_map = {
            'fantasy_defense_games': 'FantasyDefenseGames',
            'player_games': 'PlayerGames',
            'quarters': 'Quarters',
            'score': 'Score',
            'scoring_details': 'ScoringDetails',
            'scoring_plays': 'ScoringPlays',
            'team_games': 'TeamGames'
        }

        self._fantasy_defense_games = fantasy_defense_games
        self._player_games = player_games
        self._quarters = quarters
        self._score = score
        self._scoring_details = scoring_details
        self._scoring_plays = scoring_plays
        self._team_games = team_games

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BoxScoreV3':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BoxScoreV3 of this BoxScoreV3.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fantasy_defense_games(self):
        """Gets the fantasy_defense_games of this BoxScoreV3.


        :return: The fantasy_defense_games of this BoxScoreV3.
        :rtype: List[FantasyDefenseGame]
        """
        return self._fantasy_defense_games

    @fantasy_defense_games.setter
    def fantasy_defense_games(self, fantasy_defense_games):
        """Sets the fantasy_defense_games of this BoxScoreV3.


        :param fantasy_defense_games: The fantasy_defense_games of this BoxScoreV3.
        :type fantasy_defense_games: List[FantasyDefenseGame]
        """

        self._fantasy_defense_games = fantasy_defense_games

    @property
    def player_games(self):
        """Gets the player_games of this BoxScoreV3.


        :return: The player_games of this BoxScoreV3.
        :rtype: List[PlayerGame]
        """
        return self._player_games

    @player_games.setter
    def player_games(self, player_games):
        """Sets the player_games of this BoxScoreV3.


        :param player_games: The player_games of this BoxScoreV3.
        :type player_games: List[PlayerGame]
        """

        self._player_games = player_games

    @property
    def quarters(self):
        """Gets the quarters of this BoxScoreV3.


        :return: The quarters of this BoxScoreV3.
        :rtype: List[Quarter]
        """
        return self._quarters

    @quarters.setter
    def quarters(self, quarters):
        """Sets the quarters of this BoxScoreV3.


        :param quarters: The quarters of this BoxScoreV3.
        :type quarters: List[Quarter]
        """

        self._quarters = quarters

    @property
    def score(self):
        """Gets the score of this BoxScoreV3.


        :return: The score of this BoxScoreV3.
        :rtype: Score
        """
        return self._score

    @score.setter
    def score(self, score):
        """Sets the score of this BoxScoreV3.


        :param score: The score of this BoxScoreV3.
        :type score: Score
        """

        self._score = score

    @property
    def scoring_details(self):
        """Gets the scoring_details of this BoxScoreV3.


        :return: The scoring_details of this BoxScoreV3.
        :rtype: List[ScoringDetail]
        """
        return self._scoring_details

    @scoring_details.setter
    def scoring_details(self, scoring_details):
        """Sets the scoring_details of this BoxScoreV3.


        :param scoring_details: The scoring_details of this BoxScoreV3.
        :type scoring_details: List[ScoringDetail]
        """

        self._scoring_details = scoring_details

    @property
    def scoring_plays(self):
        """Gets the scoring_plays of this BoxScoreV3.


        :return: The scoring_plays of this BoxScoreV3.
        :rtype: List[ScoringPlay]
        """
        return self._scoring_plays

    @scoring_plays.setter
    def scoring_plays(self, scoring_plays):
        """Sets the scoring_plays of this BoxScoreV3.


        :param scoring_plays: The scoring_plays of this BoxScoreV3.
        :type scoring_plays: List[ScoringPlay]
        """

        self._scoring_plays = scoring_plays

    @property
    def team_games(self):
        """Gets the team_games of this BoxScoreV3.


        :return: The team_games of this BoxScoreV3.
        :rtype: List[TeamGame]
        """
        return self._team_games

    @team_games.setter
    def team_games(self, team_games):
        """Sets the team_games of this BoxScoreV3.


        :param team_games: The team_games of this BoxScoreV3.
        :type team_games: List[TeamGame]
        """

        self._team_games = team_games
