# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PlayerPassing(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fantasy_points: float=None, fantasy_position: str=None, fumbles_lost: int=None, name: str=None, number: int=None, passing_attempts: int=None, passing_completion_percentage: float=None, passing_completions: int=None, passing_interceptions: int=None, passing_long: int=None, passing_rating: float=None, passing_sack_yards: int=None, passing_sacks: int=None, passing_touchdowns: int=None, passing_yards: int=None, passing_yards_per_attempt: float=None, passing_yards_per_completion: float=None, player_game_id: int=None, player_id: int=None, position: str=None, position_category: str=None, short_name: str=None, team: str=None, two_point_conversion_passes: int=None, updated: str=None):
        """PlayerPassing - a model defined in OpenAPI

        :param fantasy_points: The fantasy_points of this PlayerPassing.
        :param fantasy_position: The fantasy_position of this PlayerPassing.
        :param fumbles_lost: The fumbles_lost of this PlayerPassing.
        :param name: The name of this PlayerPassing.
        :param number: The number of this PlayerPassing.
        :param passing_attempts: The passing_attempts of this PlayerPassing.
        :param passing_completion_percentage: The passing_completion_percentage of this PlayerPassing.
        :param passing_completions: The passing_completions of this PlayerPassing.
        :param passing_interceptions: The passing_interceptions of this PlayerPassing.
        :param passing_long: The passing_long of this PlayerPassing.
        :param passing_rating: The passing_rating of this PlayerPassing.
        :param passing_sack_yards: The passing_sack_yards of this PlayerPassing.
        :param passing_sacks: The passing_sacks of this PlayerPassing.
        :param passing_touchdowns: The passing_touchdowns of this PlayerPassing.
        :param passing_yards: The passing_yards of this PlayerPassing.
        :param passing_yards_per_attempt: The passing_yards_per_attempt of this PlayerPassing.
        :param passing_yards_per_completion: The passing_yards_per_completion of this PlayerPassing.
        :param player_game_id: The player_game_id of this PlayerPassing.
        :param player_id: The player_id of this PlayerPassing.
        :param position: The position of this PlayerPassing.
        :param position_category: The position_category of this PlayerPassing.
        :param short_name: The short_name of this PlayerPassing.
        :param team: The team of this PlayerPassing.
        :param two_point_conversion_passes: The two_point_conversion_passes of this PlayerPassing.
        :param updated: The updated of this PlayerPassing.
        """
        self.openapi_types = {
            'fantasy_points': float,
            'fantasy_position': str,
            'fumbles_lost': int,
            'name': str,
            'number': int,
            'passing_attempts': int,
            'passing_completion_percentage': float,
            'passing_completions': int,
            'passing_interceptions': int,
            'passing_long': int,
            'passing_rating': float,
            'passing_sack_yards': int,
            'passing_sacks': int,
            'passing_touchdowns': int,
            'passing_yards': int,
            'passing_yards_per_attempt': float,
            'passing_yards_per_completion': float,
            'player_game_id': int,
            'player_id': int,
            'position': str,
            'position_category': str,
            'short_name': str,
            'team': str,
            'two_point_conversion_passes': int,
            'updated': str
        }

        self.attribute_map = {
            'fantasy_points': 'FantasyPoints',
            'fantasy_position': 'FantasyPosition',
            'fumbles_lost': 'FumblesLost',
            'name': 'Name',
            'number': 'Number',
            'passing_attempts': 'PassingAttempts',
            'passing_completion_percentage': 'PassingCompletionPercentage',
            'passing_completions': 'PassingCompletions',
            'passing_interceptions': 'PassingInterceptions',
            'passing_long': 'PassingLong',
            'passing_rating': 'PassingRating',
            'passing_sack_yards': 'PassingSackYards',
            'passing_sacks': 'PassingSacks',
            'passing_touchdowns': 'PassingTouchdowns',
            'passing_yards': 'PassingYards',
            'passing_yards_per_attempt': 'PassingYardsPerAttempt',
            'passing_yards_per_completion': 'PassingYardsPerCompletion',
            'player_game_id': 'PlayerGameID',
            'player_id': 'PlayerID',
            'position': 'Position',
            'position_category': 'PositionCategory',
            'short_name': 'ShortName',
            'team': 'Team',
            'two_point_conversion_passes': 'TwoPointConversionPasses',
            'updated': 'Updated'
        }

        self._fantasy_points = fantasy_points
        self._fantasy_position = fantasy_position
        self._fumbles_lost = fumbles_lost
        self._name = name
        self._number = number
        self._passing_attempts = passing_attempts
        self._passing_completion_percentage = passing_completion_percentage
        self._passing_completions = passing_completions
        self._passing_interceptions = passing_interceptions
        self._passing_long = passing_long
        self._passing_rating = passing_rating
        self._passing_sack_yards = passing_sack_yards
        self._passing_sacks = passing_sacks
        self._passing_touchdowns = passing_touchdowns
        self._passing_yards = passing_yards
        self._passing_yards_per_attempt = passing_yards_per_attempt
        self._passing_yards_per_completion = passing_yards_per_completion
        self._player_game_id = player_game_id
        self._player_id = player_id
        self._position = position
        self._position_category = position_category
        self._short_name = short_name
        self._team = team
        self._two_point_conversion_passes = two_point_conversion_passes
        self._updated = updated

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PlayerPassing':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PlayerPassing of this PlayerPassing.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fantasy_points(self):
        """Gets the fantasy_points of this PlayerPassing.


        :return: The fantasy_points of this PlayerPassing.
        :rtype: float
        """
        return self._fantasy_points

    @fantasy_points.setter
    def fantasy_points(self, fantasy_points):
        """Sets the fantasy_points of this PlayerPassing.


        :param fantasy_points: The fantasy_points of this PlayerPassing.
        :type fantasy_points: float
        """

        self._fantasy_points = fantasy_points

    @property
    def fantasy_position(self):
        """Gets the fantasy_position of this PlayerPassing.


        :return: The fantasy_position of this PlayerPassing.
        :rtype: str
        """
        return self._fantasy_position

    @fantasy_position.setter
    def fantasy_position(self, fantasy_position):
        """Sets the fantasy_position of this PlayerPassing.


        :param fantasy_position: The fantasy_position of this PlayerPassing.
        :type fantasy_position: str
        """

        self._fantasy_position = fantasy_position

    @property
    def fumbles_lost(self):
        """Gets the fumbles_lost of this PlayerPassing.


        :return: The fumbles_lost of this PlayerPassing.
        :rtype: int
        """
        return self._fumbles_lost

    @fumbles_lost.setter
    def fumbles_lost(self, fumbles_lost):
        """Sets the fumbles_lost of this PlayerPassing.


        :param fumbles_lost: The fumbles_lost of this PlayerPassing.
        :type fumbles_lost: int
        """

        self._fumbles_lost = fumbles_lost

    @property
    def name(self):
        """Gets the name of this PlayerPassing.


        :return: The name of this PlayerPassing.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PlayerPassing.


        :param name: The name of this PlayerPassing.
        :type name: str
        """

        self._name = name

    @property
    def number(self):
        """Gets the number of this PlayerPassing.


        :return: The number of this PlayerPassing.
        :rtype: int
        """
        return self._number

    @number.setter
    def number(self, number):
        """Sets the number of this PlayerPassing.


        :param number: The number of this PlayerPassing.
        :type number: int
        """

        self._number = number

    @property
    def passing_attempts(self):
        """Gets the passing_attempts of this PlayerPassing.


        :return: The passing_attempts of this PlayerPassing.
        :rtype: int
        """
        return self._passing_attempts

    @passing_attempts.setter
    def passing_attempts(self, passing_attempts):
        """Sets the passing_attempts of this PlayerPassing.


        :param passing_attempts: The passing_attempts of this PlayerPassing.
        :type passing_attempts: int
        """

        self._passing_attempts = passing_attempts

    @property
    def passing_completion_percentage(self):
        """Gets the passing_completion_percentage of this PlayerPassing.


        :return: The passing_completion_percentage of this PlayerPassing.
        :rtype: float
        """
        return self._passing_completion_percentage

    @passing_completion_percentage.setter
    def passing_completion_percentage(self, passing_completion_percentage):
        """Sets the passing_completion_percentage of this PlayerPassing.


        :param passing_completion_percentage: The passing_completion_percentage of this PlayerPassing.
        :type passing_completion_percentage: float
        """

        self._passing_completion_percentage = passing_completion_percentage

    @property
    def passing_completions(self):
        """Gets the passing_completions of this PlayerPassing.


        :return: The passing_completions of this PlayerPassing.
        :rtype: int
        """
        return self._passing_completions

    @passing_completions.setter
    def passing_completions(self, passing_completions):
        """Sets the passing_completions of this PlayerPassing.


        :param passing_completions: The passing_completions of this PlayerPassing.
        :type passing_completions: int
        """

        self._passing_completions = passing_completions

    @property
    def passing_interceptions(self):
        """Gets the passing_interceptions of this PlayerPassing.


        :return: The passing_interceptions of this PlayerPassing.
        :rtype: int
        """
        return self._passing_interceptions

    @passing_interceptions.setter
    def passing_interceptions(self, passing_interceptions):
        """Sets the passing_interceptions of this PlayerPassing.


        :param passing_interceptions: The passing_interceptions of this PlayerPassing.
        :type passing_interceptions: int
        """

        self._passing_interceptions = passing_interceptions

    @property
    def passing_long(self):
        """Gets the passing_long of this PlayerPassing.


        :return: The passing_long of this PlayerPassing.
        :rtype: int
        """
        return self._passing_long

    @passing_long.setter
    def passing_long(self, passing_long):
        """Sets the passing_long of this PlayerPassing.


        :param passing_long: The passing_long of this PlayerPassing.
        :type passing_long: int
        """

        self._passing_long = passing_long

    @property
    def passing_rating(self):
        """Gets the passing_rating of this PlayerPassing.


        :return: The passing_rating of this PlayerPassing.
        :rtype: float
        """
        return self._passing_rating

    @passing_rating.setter
    def passing_rating(self, passing_rating):
        """Sets the passing_rating of this PlayerPassing.


        :param passing_rating: The passing_rating of this PlayerPassing.
        :type passing_rating: float
        """

        self._passing_rating = passing_rating

    @property
    def passing_sack_yards(self):
        """Gets the passing_sack_yards of this PlayerPassing.


        :return: The passing_sack_yards of this PlayerPassing.
        :rtype: int
        """
        return self._passing_sack_yards

    @passing_sack_yards.setter
    def passing_sack_yards(self, passing_sack_yards):
        """Sets the passing_sack_yards of this PlayerPassing.


        :param passing_sack_yards: The passing_sack_yards of this PlayerPassing.
        :type passing_sack_yards: int
        """

        self._passing_sack_yards = passing_sack_yards

    @property
    def passing_sacks(self):
        """Gets the passing_sacks of this PlayerPassing.


        :return: The passing_sacks of this PlayerPassing.
        :rtype: int
        """
        return self._passing_sacks

    @passing_sacks.setter
    def passing_sacks(self, passing_sacks):
        """Sets the passing_sacks of this PlayerPassing.


        :param passing_sacks: The passing_sacks of this PlayerPassing.
        :type passing_sacks: int
        """

        self._passing_sacks = passing_sacks

    @property
    def passing_touchdowns(self):
        """Gets the passing_touchdowns of this PlayerPassing.


        :return: The passing_touchdowns of this PlayerPassing.
        :rtype: int
        """
        return self._passing_touchdowns

    @passing_touchdowns.setter
    def passing_touchdowns(self, passing_touchdowns):
        """Sets the passing_touchdowns of this PlayerPassing.


        :param passing_touchdowns: The passing_touchdowns of this PlayerPassing.
        :type passing_touchdowns: int
        """

        self._passing_touchdowns = passing_touchdowns

    @property
    def passing_yards(self):
        """Gets the passing_yards of this PlayerPassing.


        :return: The passing_yards of this PlayerPassing.
        :rtype: int
        """
        return self._passing_yards

    @passing_yards.setter
    def passing_yards(self, passing_yards):
        """Sets the passing_yards of this PlayerPassing.


        :param passing_yards: The passing_yards of this PlayerPassing.
        :type passing_yards: int
        """

        self._passing_yards = passing_yards

    @property
    def passing_yards_per_attempt(self):
        """Gets the passing_yards_per_attempt of this PlayerPassing.


        :return: The passing_yards_per_attempt of this PlayerPassing.
        :rtype: float
        """
        return self._passing_yards_per_attempt

    @passing_yards_per_attempt.setter
    def passing_yards_per_attempt(self, passing_yards_per_attempt):
        """Sets the passing_yards_per_attempt of this PlayerPassing.


        :param passing_yards_per_attempt: The passing_yards_per_attempt of this PlayerPassing.
        :type passing_yards_per_attempt: float
        """

        self._passing_yards_per_attempt = passing_yards_per_attempt

    @property
    def passing_yards_per_completion(self):
        """Gets the passing_yards_per_completion of this PlayerPassing.


        :return: The passing_yards_per_completion of this PlayerPassing.
        :rtype: float
        """
        return self._passing_yards_per_completion

    @passing_yards_per_completion.setter
    def passing_yards_per_completion(self, passing_yards_per_completion):
        """Sets the passing_yards_per_completion of this PlayerPassing.


        :param passing_yards_per_completion: The passing_yards_per_completion of this PlayerPassing.
        :type passing_yards_per_completion: float
        """

        self._passing_yards_per_completion = passing_yards_per_completion

    @property
    def player_game_id(self):
        """Gets the player_game_id of this PlayerPassing.


        :return: The player_game_id of this PlayerPassing.
        :rtype: int
        """
        return self._player_game_id

    @player_game_id.setter
    def player_game_id(self, player_game_id):
        """Sets the player_game_id of this PlayerPassing.


        :param player_game_id: The player_game_id of this PlayerPassing.
        :type player_game_id: int
        """

        self._player_game_id = player_game_id

    @property
    def player_id(self):
        """Gets the player_id of this PlayerPassing.


        :return: The player_id of this PlayerPassing.
        :rtype: int
        """
        return self._player_id

    @player_id.setter
    def player_id(self, player_id):
        """Sets the player_id of this PlayerPassing.


        :param player_id: The player_id of this PlayerPassing.
        :type player_id: int
        """

        self._player_id = player_id

    @property
    def position(self):
        """Gets the position of this PlayerPassing.


        :return: The position of this PlayerPassing.
        :rtype: str
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this PlayerPassing.


        :param position: The position of this PlayerPassing.
        :type position: str
        """

        self._position = position

    @property
    def position_category(self):
        """Gets the position_category of this PlayerPassing.


        :return: The position_category of this PlayerPassing.
        :rtype: str
        """
        return self._position_category

    @position_category.setter
    def position_category(self, position_category):
        """Sets the position_category of this PlayerPassing.


        :param position_category: The position_category of this PlayerPassing.
        :type position_category: str
        """

        self._position_category = position_category

    @property
    def short_name(self):
        """Gets the short_name of this PlayerPassing.


        :return: The short_name of this PlayerPassing.
        :rtype: str
        """
        return self._short_name

    @short_name.setter
    def short_name(self, short_name):
        """Sets the short_name of this PlayerPassing.


        :param short_name: The short_name of this PlayerPassing.
        :type short_name: str
        """

        self._short_name = short_name

    @property
    def team(self):
        """Gets the team of this PlayerPassing.


        :return: The team of this PlayerPassing.
        :rtype: str
        """
        return self._team

    @team.setter
    def team(self, team):
        """Sets the team of this PlayerPassing.


        :param team: The team of this PlayerPassing.
        :type team: str
        """

        self._team = team

    @property
    def two_point_conversion_passes(self):
        """Gets the two_point_conversion_passes of this PlayerPassing.


        :return: The two_point_conversion_passes of this PlayerPassing.
        :rtype: int
        """
        return self._two_point_conversion_passes

    @two_point_conversion_passes.setter
    def two_point_conversion_passes(self, two_point_conversion_passes):
        """Sets the two_point_conversion_passes of this PlayerPassing.


        :param two_point_conversion_passes: The two_point_conversion_passes of this PlayerPassing.
        :type two_point_conversion_passes: int
        """

        self._two_point_conversion_passes = two_point_conversion_passes

    @property
    def updated(self):
        """Gets the updated of this PlayerPassing.


        :return: The updated of this PlayerPassing.
        :rtype: str
        """
        return self._updated

    @updated.setter
    def updated(self, updated):
        """Sets the updated of this PlayerPassing.


        :param updated: The updated of this PlayerPassing.
        :type updated: str
        """

        self._updated = updated
