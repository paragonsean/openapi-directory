# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.fantasy_defense_game import FantasyDefenseGame
from openapi_server.models.game import Game
from openapi_server.models.player_defense import PlayerDefense
from openapi_server.models.player_kick_punt_returns import PlayerKickPuntReturns
from openapi_server.models.player_kicking import PlayerKicking
from openapi_server.models.player_passing import PlayerPassing
from openapi_server.models.player_punting import PlayerPunting
from openapi_server.models.player_receiving import PlayerReceiving
from openapi_server.models.player_rushing import PlayerRushing
from openapi_server.models.score import Score
from openapi_server.models.scoring_detail import ScoringDetail
from openapi_server.models.scoring_play import ScoringPlay
from openapi_server import util


class BoxScore(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, away_defense: List[PlayerDefense]=None, away_fantasy_defense: FantasyDefenseGame=None, away_kick_punt_returns: List[PlayerKickPuntReturns]=None, away_kicking: List[PlayerKicking]=None, away_passing: List[PlayerPassing]=None, away_punting: List[PlayerPunting]=None, away_receiving: List[PlayerReceiving]=None, away_rushing: List[PlayerRushing]=None, game: Game=None, home_defense: List[PlayerDefense]=None, home_fantasy_defense: FantasyDefenseGame=None, home_kick_punt_returns: List[PlayerKickPuntReturns]=None, home_kicking: List[PlayerKicking]=None, home_passing: List[PlayerPassing]=None, home_punting: List[PlayerPunting]=None, home_receiving: List[PlayerReceiving]=None, home_rushing: List[PlayerRushing]=None, score: Score=None, scoring_details: List[ScoringDetail]=None, scoring_plays: List[ScoringPlay]=None):
        """BoxScore - a model defined in OpenAPI

        :param away_defense: The away_defense of this BoxScore.
        :param away_fantasy_defense: The away_fantasy_defense of this BoxScore.
        :param away_kick_punt_returns: The away_kick_punt_returns of this BoxScore.
        :param away_kicking: The away_kicking of this BoxScore.
        :param away_passing: The away_passing of this BoxScore.
        :param away_punting: The away_punting of this BoxScore.
        :param away_receiving: The away_receiving of this BoxScore.
        :param away_rushing: The away_rushing of this BoxScore.
        :param game: The game of this BoxScore.
        :param home_defense: The home_defense of this BoxScore.
        :param home_fantasy_defense: The home_fantasy_defense of this BoxScore.
        :param home_kick_punt_returns: The home_kick_punt_returns of this BoxScore.
        :param home_kicking: The home_kicking of this BoxScore.
        :param home_passing: The home_passing of this BoxScore.
        :param home_punting: The home_punting of this BoxScore.
        :param home_receiving: The home_receiving of this BoxScore.
        :param home_rushing: The home_rushing of this BoxScore.
        :param score: The score of this BoxScore.
        :param scoring_details: The scoring_details of this BoxScore.
        :param scoring_plays: The scoring_plays of this BoxScore.
        """
        self.openapi_types = {
            'away_defense': List[PlayerDefense],
            'away_fantasy_defense': FantasyDefenseGame,
            'away_kick_punt_returns': List[PlayerKickPuntReturns],
            'away_kicking': List[PlayerKicking],
            'away_passing': List[PlayerPassing],
            'away_punting': List[PlayerPunting],
            'away_receiving': List[PlayerReceiving],
            'away_rushing': List[PlayerRushing],
            'game': Game,
            'home_defense': List[PlayerDefense],
            'home_fantasy_defense': FantasyDefenseGame,
            'home_kick_punt_returns': List[PlayerKickPuntReturns],
            'home_kicking': List[PlayerKicking],
            'home_passing': List[PlayerPassing],
            'home_punting': List[PlayerPunting],
            'home_receiving': List[PlayerReceiving],
            'home_rushing': List[PlayerRushing],
            'score': Score,
            'scoring_details': List[ScoringDetail],
            'scoring_plays': List[ScoringPlay]
        }

        self.attribute_map = {
            'away_defense': 'AwayDefense',
            'away_fantasy_defense': 'AwayFantasyDefense',
            'away_kick_punt_returns': 'AwayKickPuntReturns',
            'away_kicking': 'AwayKicking',
            'away_passing': 'AwayPassing',
            'away_punting': 'AwayPunting',
            'away_receiving': 'AwayReceiving',
            'away_rushing': 'AwayRushing',
            'game': 'Game',
            'home_defense': 'HomeDefense',
            'home_fantasy_defense': 'HomeFantasyDefense',
            'home_kick_punt_returns': 'HomeKickPuntReturns',
            'home_kicking': 'HomeKicking',
            'home_passing': 'HomePassing',
            'home_punting': 'HomePunting',
            'home_receiving': 'HomeReceiving',
            'home_rushing': 'HomeRushing',
            'score': 'Score',
            'scoring_details': 'ScoringDetails',
            'scoring_plays': 'ScoringPlays'
        }

        self._away_defense = away_defense
        self._away_fantasy_defense = away_fantasy_defense
        self._away_kick_punt_returns = away_kick_punt_returns
        self._away_kicking = away_kicking
        self._away_passing = away_passing
        self._away_punting = away_punting
        self._away_receiving = away_receiving
        self._away_rushing = away_rushing
        self._game = game
        self._home_defense = home_defense
        self._home_fantasy_defense = home_fantasy_defense
        self._home_kick_punt_returns = home_kick_punt_returns
        self._home_kicking = home_kicking
        self._home_passing = home_passing
        self._home_punting = home_punting
        self._home_receiving = home_receiving
        self._home_rushing = home_rushing
        self._score = score
        self._scoring_details = scoring_details
        self._scoring_plays = scoring_plays

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BoxScore':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BoxScore of this BoxScore.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def away_defense(self):
        """Gets the away_defense of this BoxScore.


        :return: The away_defense of this BoxScore.
        :rtype: List[PlayerDefense]
        """
        return self._away_defense

    @away_defense.setter
    def away_defense(self, away_defense):
        """Sets the away_defense of this BoxScore.


        :param away_defense: The away_defense of this BoxScore.
        :type away_defense: List[PlayerDefense]
        """

        self._away_defense = away_defense

    @property
    def away_fantasy_defense(self):
        """Gets the away_fantasy_defense of this BoxScore.


        :return: The away_fantasy_defense of this BoxScore.
        :rtype: FantasyDefenseGame
        """
        return self._away_fantasy_defense

    @away_fantasy_defense.setter
    def away_fantasy_defense(self, away_fantasy_defense):
        """Sets the away_fantasy_defense of this BoxScore.


        :param away_fantasy_defense: The away_fantasy_defense of this BoxScore.
        :type away_fantasy_defense: FantasyDefenseGame
        """

        self._away_fantasy_defense = away_fantasy_defense

    @property
    def away_kick_punt_returns(self):
        """Gets the away_kick_punt_returns of this BoxScore.


        :return: The away_kick_punt_returns of this BoxScore.
        :rtype: List[PlayerKickPuntReturns]
        """
        return self._away_kick_punt_returns

    @away_kick_punt_returns.setter
    def away_kick_punt_returns(self, away_kick_punt_returns):
        """Sets the away_kick_punt_returns of this BoxScore.


        :param away_kick_punt_returns: The away_kick_punt_returns of this BoxScore.
        :type away_kick_punt_returns: List[PlayerKickPuntReturns]
        """

        self._away_kick_punt_returns = away_kick_punt_returns

    @property
    def away_kicking(self):
        """Gets the away_kicking of this BoxScore.


        :return: The away_kicking of this BoxScore.
        :rtype: List[PlayerKicking]
        """
        return self._away_kicking

    @away_kicking.setter
    def away_kicking(self, away_kicking):
        """Sets the away_kicking of this BoxScore.


        :param away_kicking: The away_kicking of this BoxScore.
        :type away_kicking: List[PlayerKicking]
        """

        self._away_kicking = away_kicking

    @property
    def away_passing(self):
        """Gets the away_passing of this BoxScore.


        :return: The away_passing of this BoxScore.
        :rtype: List[PlayerPassing]
        """
        return self._away_passing

    @away_passing.setter
    def away_passing(self, away_passing):
        """Sets the away_passing of this BoxScore.


        :param away_passing: The away_passing of this BoxScore.
        :type away_passing: List[PlayerPassing]
        """

        self._away_passing = away_passing

    @property
    def away_punting(self):
        """Gets the away_punting of this BoxScore.


        :return: The away_punting of this BoxScore.
        :rtype: List[PlayerPunting]
        """
        return self._away_punting

    @away_punting.setter
    def away_punting(self, away_punting):
        """Sets the away_punting of this BoxScore.


        :param away_punting: The away_punting of this BoxScore.
        :type away_punting: List[PlayerPunting]
        """

        self._away_punting = away_punting

    @property
    def away_receiving(self):
        """Gets the away_receiving of this BoxScore.


        :return: The away_receiving of this BoxScore.
        :rtype: List[PlayerReceiving]
        """
        return self._away_receiving

    @away_receiving.setter
    def away_receiving(self, away_receiving):
        """Sets the away_receiving of this BoxScore.


        :param away_receiving: The away_receiving of this BoxScore.
        :type away_receiving: List[PlayerReceiving]
        """

        self._away_receiving = away_receiving

    @property
    def away_rushing(self):
        """Gets the away_rushing of this BoxScore.


        :return: The away_rushing of this BoxScore.
        :rtype: List[PlayerRushing]
        """
        return self._away_rushing

    @away_rushing.setter
    def away_rushing(self, away_rushing):
        """Sets the away_rushing of this BoxScore.


        :param away_rushing: The away_rushing of this BoxScore.
        :type away_rushing: List[PlayerRushing]
        """

        self._away_rushing = away_rushing

    @property
    def game(self):
        """Gets the game of this BoxScore.


        :return: The game of this BoxScore.
        :rtype: Game
        """
        return self._game

    @game.setter
    def game(self, game):
        """Sets the game of this BoxScore.


        :param game: The game of this BoxScore.
        :type game: Game
        """

        self._game = game

    @property
    def home_defense(self):
        """Gets the home_defense of this BoxScore.


        :return: The home_defense of this BoxScore.
        :rtype: List[PlayerDefense]
        """
        return self._home_defense

    @home_defense.setter
    def home_defense(self, home_defense):
        """Sets the home_defense of this BoxScore.


        :param home_defense: The home_defense of this BoxScore.
        :type home_defense: List[PlayerDefense]
        """

        self._home_defense = home_defense

    @property
    def home_fantasy_defense(self):
        """Gets the home_fantasy_defense of this BoxScore.


        :return: The home_fantasy_defense of this BoxScore.
        :rtype: FantasyDefenseGame
        """
        return self._home_fantasy_defense

    @home_fantasy_defense.setter
    def home_fantasy_defense(self, home_fantasy_defense):
        """Sets the home_fantasy_defense of this BoxScore.


        :param home_fantasy_defense: The home_fantasy_defense of this BoxScore.
        :type home_fantasy_defense: FantasyDefenseGame
        """

        self._home_fantasy_defense = home_fantasy_defense

    @property
    def home_kick_punt_returns(self):
        """Gets the home_kick_punt_returns of this BoxScore.


        :return: The home_kick_punt_returns of this BoxScore.
        :rtype: List[PlayerKickPuntReturns]
        """
        return self._home_kick_punt_returns

    @home_kick_punt_returns.setter
    def home_kick_punt_returns(self, home_kick_punt_returns):
        """Sets the home_kick_punt_returns of this BoxScore.


        :param home_kick_punt_returns: The home_kick_punt_returns of this BoxScore.
        :type home_kick_punt_returns: List[PlayerKickPuntReturns]
        """

        self._home_kick_punt_returns = home_kick_punt_returns

    @property
    def home_kicking(self):
        """Gets the home_kicking of this BoxScore.


        :return: The home_kicking of this BoxScore.
        :rtype: List[PlayerKicking]
        """
        return self._home_kicking

    @home_kicking.setter
    def home_kicking(self, home_kicking):
        """Sets the home_kicking of this BoxScore.


        :param home_kicking: The home_kicking of this BoxScore.
        :type home_kicking: List[PlayerKicking]
        """

        self._home_kicking = home_kicking

    @property
    def home_passing(self):
        """Gets the home_passing of this BoxScore.


        :return: The home_passing of this BoxScore.
        :rtype: List[PlayerPassing]
        """
        return self._home_passing

    @home_passing.setter
    def home_passing(self, home_passing):
        """Sets the home_passing of this BoxScore.


        :param home_passing: The home_passing of this BoxScore.
        :type home_passing: List[PlayerPassing]
        """

        self._home_passing = home_passing

    @property
    def home_punting(self):
        """Gets the home_punting of this BoxScore.


        :return: The home_punting of this BoxScore.
        :rtype: List[PlayerPunting]
        """
        return self._home_punting

    @home_punting.setter
    def home_punting(self, home_punting):
        """Sets the home_punting of this BoxScore.


        :param home_punting: The home_punting of this BoxScore.
        :type home_punting: List[PlayerPunting]
        """

        self._home_punting = home_punting

    @property
    def home_receiving(self):
        """Gets the home_receiving of this BoxScore.


        :return: The home_receiving of this BoxScore.
        :rtype: List[PlayerReceiving]
        """
        return self._home_receiving

    @home_receiving.setter
    def home_receiving(self, home_receiving):
        """Sets the home_receiving of this BoxScore.


        :param home_receiving: The home_receiving of this BoxScore.
        :type home_receiving: List[PlayerReceiving]
        """

        self._home_receiving = home_receiving

    @property
    def home_rushing(self):
        """Gets the home_rushing of this BoxScore.


        :return: The home_rushing of this BoxScore.
        :rtype: List[PlayerRushing]
        """
        return self._home_rushing

    @home_rushing.setter
    def home_rushing(self, home_rushing):
        """Sets the home_rushing of this BoxScore.


        :param home_rushing: The home_rushing of this BoxScore.
        :type home_rushing: List[PlayerRushing]
        """

        self._home_rushing = home_rushing

    @property
    def score(self):
        """Gets the score of this BoxScore.


        :return: The score of this BoxScore.
        :rtype: Score
        """
        return self._score

    @score.setter
    def score(self, score):
        """Sets the score of this BoxScore.


        :param score: The score of this BoxScore.
        :type score: Score
        """

        self._score = score

    @property
    def scoring_details(self):
        """Gets the scoring_details of this BoxScore.


        :return: The scoring_details of this BoxScore.
        :rtype: List[ScoringDetail]
        """
        return self._scoring_details

    @scoring_details.setter
    def scoring_details(self, scoring_details):
        """Sets the scoring_details of this BoxScore.


        :param scoring_details: The scoring_details of this BoxScore.
        :type scoring_details: List[ScoringDetail]
        """

        self._scoring_details = scoring_details

    @property
    def scoring_plays(self):
        """Gets the scoring_plays of this BoxScore.


        :return: The scoring_plays of this BoxScore.
        :rtype: List[ScoringPlay]
        """
        return self._scoring_plays

    @scoring_plays.setter
    def scoring_plays(self, scoring_plays):
        """Sets the scoring_plays of this BoxScore.


        :param scoring_plays: The scoring_plays of this BoxScore.
        :type scoring_plays: List[ScoringPlay]
        """

        self._scoring_plays = scoring_plays
