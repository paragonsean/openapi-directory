# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ScoringDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, game_key: str=None, length: int=None, player_game_id: int=None, player_id: int=None, score_id: int=None, scoring_detail_id: int=None, scoring_play_id: int=None, scoring_type: str=None, season: int=None, season_type: int=None, team: str=None, week: int=None):
        """ScoringDetail - a model defined in OpenAPI

        :param game_key: The game_key of this ScoringDetail.
        :param length: The length of this ScoringDetail.
        :param player_game_id: The player_game_id of this ScoringDetail.
        :param player_id: The player_id of this ScoringDetail.
        :param score_id: The score_id of this ScoringDetail.
        :param scoring_detail_id: The scoring_detail_id of this ScoringDetail.
        :param scoring_play_id: The scoring_play_id of this ScoringDetail.
        :param scoring_type: The scoring_type of this ScoringDetail.
        :param season: The season of this ScoringDetail.
        :param season_type: The season_type of this ScoringDetail.
        :param team: The team of this ScoringDetail.
        :param week: The week of this ScoringDetail.
        """
        self.openapi_types = {
            'game_key': str,
            'length': int,
            'player_game_id': int,
            'player_id': int,
            'score_id': int,
            'scoring_detail_id': int,
            'scoring_play_id': int,
            'scoring_type': str,
            'season': int,
            'season_type': int,
            'team': str,
            'week': int
        }

        self.attribute_map = {
            'game_key': 'GameKey',
            'length': 'Length',
            'player_game_id': 'PlayerGameID',
            'player_id': 'PlayerID',
            'score_id': 'ScoreID',
            'scoring_detail_id': 'ScoringDetailID',
            'scoring_play_id': 'ScoringPlayID',
            'scoring_type': 'ScoringType',
            'season': 'Season',
            'season_type': 'SeasonType',
            'team': 'Team',
            'week': 'Week'
        }

        self._game_key = game_key
        self._length = length
        self._player_game_id = player_game_id
        self._player_id = player_id
        self._score_id = score_id
        self._scoring_detail_id = scoring_detail_id
        self._scoring_play_id = scoring_play_id
        self._scoring_type = scoring_type
        self._season = season
        self._season_type = season_type
        self._team = team
        self._week = week

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScoringDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ScoringDetail of this ScoringDetail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def game_key(self):
        """Gets the game_key of this ScoringDetail.


        :return: The game_key of this ScoringDetail.
        :rtype: str
        """
        return self._game_key

    @game_key.setter
    def game_key(self, game_key):
        """Sets the game_key of this ScoringDetail.


        :param game_key: The game_key of this ScoringDetail.
        :type game_key: str
        """

        self._game_key = game_key

    @property
    def length(self):
        """Gets the length of this ScoringDetail.


        :return: The length of this ScoringDetail.
        :rtype: int
        """
        return self._length

    @length.setter
    def length(self, length):
        """Sets the length of this ScoringDetail.


        :param length: The length of this ScoringDetail.
        :type length: int
        """

        self._length = length

    @property
    def player_game_id(self):
        """Gets the player_game_id of this ScoringDetail.


        :return: The player_game_id of this ScoringDetail.
        :rtype: int
        """
        return self._player_game_id

    @player_game_id.setter
    def player_game_id(self, player_game_id):
        """Sets the player_game_id of this ScoringDetail.


        :param player_game_id: The player_game_id of this ScoringDetail.
        :type player_game_id: int
        """

        self._player_game_id = player_game_id

    @property
    def player_id(self):
        """Gets the player_id of this ScoringDetail.


        :return: The player_id of this ScoringDetail.
        :rtype: int
        """
        return self._player_id

    @player_id.setter
    def player_id(self, player_id):
        """Sets the player_id of this ScoringDetail.


        :param player_id: The player_id of this ScoringDetail.
        :type player_id: int
        """

        self._player_id = player_id

    @property
    def score_id(self):
        """Gets the score_id of this ScoringDetail.


        :return: The score_id of this ScoringDetail.
        :rtype: int
        """
        return self._score_id

    @score_id.setter
    def score_id(self, score_id):
        """Sets the score_id of this ScoringDetail.


        :param score_id: The score_id of this ScoringDetail.
        :type score_id: int
        """

        self._score_id = score_id

    @property
    def scoring_detail_id(self):
        """Gets the scoring_detail_id of this ScoringDetail.


        :return: The scoring_detail_id of this ScoringDetail.
        :rtype: int
        """
        return self._scoring_detail_id

    @scoring_detail_id.setter
    def scoring_detail_id(self, scoring_detail_id):
        """Sets the scoring_detail_id of this ScoringDetail.


        :param scoring_detail_id: The scoring_detail_id of this ScoringDetail.
        :type scoring_detail_id: int
        """

        self._scoring_detail_id = scoring_detail_id

    @property
    def scoring_play_id(self):
        """Gets the scoring_play_id of this ScoringDetail.


        :return: The scoring_play_id of this ScoringDetail.
        :rtype: int
        """
        return self._scoring_play_id

    @scoring_play_id.setter
    def scoring_play_id(self, scoring_play_id):
        """Sets the scoring_play_id of this ScoringDetail.


        :param scoring_play_id: The scoring_play_id of this ScoringDetail.
        :type scoring_play_id: int
        """

        self._scoring_play_id = scoring_play_id

    @property
    def scoring_type(self):
        """Gets the scoring_type of this ScoringDetail.


        :return: The scoring_type of this ScoringDetail.
        :rtype: str
        """
        return self._scoring_type

    @scoring_type.setter
    def scoring_type(self, scoring_type):
        """Sets the scoring_type of this ScoringDetail.


        :param scoring_type: The scoring_type of this ScoringDetail.
        :type scoring_type: str
        """

        self._scoring_type = scoring_type

    @property
    def season(self):
        """Gets the season of this ScoringDetail.


        :return: The season of this ScoringDetail.
        :rtype: int
        """
        return self._season

    @season.setter
    def season(self, season):
        """Sets the season of this ScoringDetail.


        :param season: The season of this ScoringDetail.
        :type season: int
        """

        self._season = season

    @property
    def season_type(self):
        """Gets the season_type of this ScoringDetail.


        :return: The season_type of this ScoringDetail.
        :rtype: int
        """
        return self._season_type

    @season_type.setter
    def season_type(self, season_type):
        """Sets the season_type of this ScoringDetail.


        :param season_type: The season_type of this ScoringDetail.
        :type season_type: int
        """

        self._season_type = season_type

    @property
    def team(self):
        """Gets the team of this ScoringDetail.


        :return: The team of this ScoringDetail.
        :rtype: str
        """
        return self._team

    @team.setter
    def team(self, team):
        """Sets the team of this ScoringDetail.


        :param team: The team of this ScoringDetail.
        :type team: str
        """

        self._team = team

    @property
    def week(self):
        """Gets the week of this ScoringDetail.


        :return: The week of this ScoringDetail.
        :rtype: int
        """
        return self._week

    @week.setter
    def week(self, week):
        """Sets the week of this ScoringDetail.


        :param week: The week of this ScoringDetail.
        :type week: int
        """

        self._week = week
