# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PlayerOwnership(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, delta_ownership_percentage: float=None, delta_start_percentage: float=None, name: str=None, ownership_percentage: float=None, player_id: int=None, position: str=None, season: int=None, season_type: int=None, start_percentage: float=None, team: str=None, team_id: int=None, week: int=None):
        """PlayerOwnership - a model defined in OpenAPI

        :param delta_ownership_percentage: The delta_ownership_percentage of this PlayerOwnership.
        :param delta_start_percentage: The delta_start_percentage of this PlayerOwnership.
        :param name: The name of this PlayerOwnership.
        :param ownership_percentage: The ownership_percentage of this PlayerOwnership.
        :param player_id: The player_id of this PlayerOwnership.
        :param position: The position of this PlayerOwnership.
        :param season: The season of this PlayerOwnership.
        :param season_type: The season_type of this PlayerOwnership.
        :param start_percentage: The start_percentage of this PlayerOwnership.
        :param team: The team of this PlayerOwnership.
        :param team_id: The team_id of this PlayerOwnership.
        :param week: The week of this PlayerOwnership.
        """
        self.openapi_types = {
            'delta_ownership_percentage': float,
            'delta_start_percentage': float,
            'name': str,
            'ownership_percentage': float,
            'player_id': int,
            'position': str,
            'season': int,
            'season_type': int,
            'start_percentage': float,
            'team': str,
            'team_id': int,
            'week': int
        }

        self.attribute_map = {
            'delta_ownership_percentage': 'DeltaOwnershipPercentage',
            'delta_start_percentage': 'DeltaStartPercentage',
            'name': 'Name',
            'ownership_percentage': 'OwnershipPercentage',
            'player_id': 'PlayerID',
            'position': 'Position',
            'season': 'Season',
            'season_type': 'SeasonType',
            'start_percentage': 'StartPercentage',
            'team': 'Team',
            'team_id': 'TeamID',
            'week': 'Week'
        }

        self._delta_ownership_percentage = delta_ownership_percentage
        self._delta_start_percentage = delta_start_percentage
        self._name = name
        self._ownership_percentage = ownership_percentage
        self._player_id = player_id
        self._position = position
        self._season = season
        self._season_type = season_type
        self._start_percentage = start_percentage
        self._team = team
        self._team_id = team_id
        self._week = week

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PlayerOwnership':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PlayerOwnership of this PlayerOwnership.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def delta_ownership_percentage(self):
        """Gets the delta_ownership_percentage of this PlayerOwnership.


        :return: The delta_ownership_percentage of this PlayerOwnership.
        :rtype: float
        """
        return self._delta_ownership_percentage

    @delta_ownership_percentage.setter
    def delta_ownership_percentage(self, delta_ownership_percentage):
        """Sets the delta_ownership_percentage of this PlayerOwnership.


        :param delta_ownership_percentage: The delta_ownership_percentage of this PlayerOwnership.
        :type delta_ownership_percentage: float
        """

        self._delta_ownership_percentage = delta_ownership_percentage

    @property
    def delta_start_percentage(self):
        """Gets the delta_start_percentage of this PlayerOwnership.


        :return: The delta_start_percentage of this PlayerOwnership.
        :rtype: float
        """
        return self._delta_start_percentage

    @delta_start_percentage.setter
    def delta_start_percentage(self, delta_start_percentage):
        """Sets the delta_start_percentage of this PlayerOwnership.


        :param delta_start_percentage: The delta_start_percentage of this PlayerOwnership.
        :type delta_start_percentage: float
        """

        self._delta_start_percentage = delta_start_percentage

    @property
    def name(self):
        """Gets the name of this PlayerOwnership.


        :return: The name of this PlayerOwnership.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PlayerOwnership.


        :param name: The name of this PlayerOwnership.
        :type name: str
        """

        self._name = name

    @property
    def ownership_percentage(self):
        """Gets the ownership_percentage of this PlayerOwnership.


        :return: The ownership_percentage of this PlayerOwnership.
        :rtype: float
        """
        return self._ownership_percentage

    @ownership_percentage.setter
    def ownership_percentage(self, ownership_percentage):
        """Sets the ownership_percentage of this PlayerOwnership.


        :param ownership_percentage: The ownership_percentage of this PlayerOwnership.
        :type ownership_percentage: float
        """

        self._ownership_percentage = ownership_percentage

    @property
    def player_id(self):
        """Gets the player_id of this PlayerOwnership.


        :return: The player_id of this PlayerOwnership.
        :rtype: int
        """
        return self._player_id

    @player_id.setter
    def player_id(self, player_id):
        """Sets the player_id of this PlayerOwnership.


        :param player_id: The player_id of this PlayerOwnership.
        :type player_id: int
        """

        self._player_id = player_id

    @property
    def position(self):
        """Gets the position of this PlayerOwnership.


        :return: The position of this PlayerOwnership.
        :rtype: str
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this PlayerOwnership.


        :param position: The position of this PlayerOwnership.
        :type position: str
        """

        self._position = position

    @property
    def season(self):
        """Gets the season of this PlayerOwnership.


        :return: The season of this PlayerOwnership.
        :rtype: int
        """
        return self._season

    @season.setter
    def season(self, season):
        """Sets the season of this PlayerOwnership.


        :param season: The season of this PlayerOwnership.
        :type season: int
        """

        self._season = season

    @property
    def season_type(self):
        """Gets the season_type of this PlayerOwnership.


        :return: The season_type of this PlayerOwnership.
        :rtype: int
        """
        return self._season_type

    @season_type.setter
    def season_type(self, season_type):
        """Sets the season_type of this PlayerOwnership.


        :param season_type: The season_type of this PlayerOwnership.
        :type season_type: int
        """

        self._season_type = season_type

    @property
    def start_percentage(self):
        """Gets the start_percentage of this PlayerOwnership.


        :return: The start_percentage of this PlayerOwnership.
        :rtype: float
        """
        return self._start_percentage

    @start_percentage.setter
    def start_percentage(self, start_percentage):
        """Sets the start_percentage of this PlayerOwnership.


        :param start_percentage: The start_percentage of this PlayerOwnership.
        :type start_percentage: float
        """

        self._start_percentage = start_percentage

    @property
    def team(self):
        """Gets the team of this PlayerOwnership.


        :return: The team of this PlayerOwnership.
        :rtype: str
        """
        return self._team

    @team.setter
    def team(self, team):
        """Sets the team of this PlayerOwnership.


        :param team: The team of this PlayerOwnership.
        :type team: str
        """

        self._team = team

    @property
    def team_id(self):
        """Gets the team_id of this PlayerOwnership.


        :return: The team_id of this PlayerOwnership.
        :rtype: int
        """
        return self._team_id

    @team_id.setter
    def team_id(self, team_id):
        """Sets the team_id of this PlayerOwnership.


        :param team_id: The team_id of this PlayerOwnership.
        :type team_id: int
        """

        self._team_id = team_id

    @property
    def week(self):
        """Gets the week of this PlayerOwnership.


        :return: The week of this PlayerOwnership.
        :rtype: int
        """
        return self._week

    @week.setter
    def week(self, week):
        """Sets the week of this PlayerOwnership.


        :param week: The week of this PlayerOwnership.
        :type week: int
        """

        self._week = week
