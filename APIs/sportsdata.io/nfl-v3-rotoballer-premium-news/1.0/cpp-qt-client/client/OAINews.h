/**
 * NFL v3 RotoBaller Premium News
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINews.h
 *
 * 
 */

#ifndef OAINews_H
#define OAINews_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINews : public OAIObject {
public:
    OAINews();
    OAINews(QString json);
    ~OAINews() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAuthor() const;
    void setAuthor(const QString &author);
    bool is_author_Set() const;
    bool is_author_Valid() const;

    QString getCategories() const;
    void setCategories(const QString &categories);
    bool is_categories_Set() const;
    bool is_categories_Valid() const;

    QString getContent() const;
    void setContent(const QString &content);
    bool is_content_Set() const;
    bool is_content_Valid() const;

    qint32 getNewsId() const;
    void setNewsId(const qint32 &news_id);
    bool is_news_id_Set() const;
    bool is_news_id_Valid() const;

    QString getOriginalSource() const;
    void setOriginalSource(const QString &original_source);
    bool is_original_source_Set() const;
    bool is_original_source_Valid() const;

    QString getOriginalSourceUrl() const;
    void setOriginalSourceUrl(const QString &original_source_url);
    bool is_original_source_url_Set() const;
    bool is_original_source_url_Valid() const;

    qint32 getPlayerId() const;
    void setPlayerId(const qint32 &player_id);
    bool is_player_id_Set() const;
    bool is_player_id_Valid() const;

    qint32 getPlayerId2() const;
    void setPlayerId2(const qint32 &player_id2);
    bool is_player_id2_Set() const;
    bool is_player_id2_Valid() const;

    QString getSource() const;
    void setSource(const QString &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    QString getTeam() const;
    void setTeam(const QString &team);
    bool is_team_Set() const;
    bool is_team_Valid() const;

    QString getTeam2() const;
    void setTeam2(const QString &team2);
    bool is_team2_Set() const;
    bool is_team2_Valid() const;

    qint32 getTeamId() const;
    void setTeamId(const qint32 &team_id);
    bool is_team_id_Set() const;
    bool is_team_id_Valid() const;

    qint32 getTeamId2() const;
    void setTeamId2(const qint32 &team_id2);
    bool is_team_id2_Set() const;
    bool is_team_id2_Valid() const;

    QString getTermsOfUse() const;
    void setTermsOfUse(const QString &terms_of_use);
    bool is_terms_of_use_Set() const;
    bool is_terms_of_use_Valid() const;

    QString getTimeAgo() const;
    void setTimeAgo(const QString &time_ago);
    bool is_time_ago_Set() const;
    bool is_time_ago_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getUpdated() const;
    void setUpdated(const QString &updated);
    bool is_updated_Set() const;
    bool is_updated_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_author;
    bool m_author_isSet;
    bool m_author_isValid;

    QString m_categories;
    bool m_categories_isSet;
    bool m_categories_isValid;

    QString m_content;
    bool m_content_isSet;
    bool m_content_isValid;

    qint32 m_news_id;
    bool m_news_id_isSet;
    bool m_news_id_isValid;

    QString m_original_source;
    bool m_original_source_isSet;
    bool m_original_source_isValid;

    QString m_original_source_url;
    bool m_original_source_url_isSet;
    bool m_original_source_url_isValid;

    qint32 m_player_id;
    bool m_player_id_isSet;
    bool m_player_id_isValid;

    qint32 m_player_id2;
    bool m_player_id2_isSet;
    bool m_player_id2_isValid;

    QString m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    QString m_team;
    bool m_team_isSet;
    bool m_team_isValid;

    QString m_team2;
    bool m_team2_isSet;
    bool m_team2_isValid;

    qint32 m_team_id;
    bool m_team_id_isSet;
    bool m_team_id_isValid;

    qint32 m_team_id2;
    bool m_team_id2_isSet;
    bool m_team_id2_isValid;

    QString m_terms_of_use;
    bool m_terms_of_use_isSet;
    bool m_terms_of_use_isValid;

    QString m_time_ago;
    bool m_time_ago_isSet;
    bool m_time_ago_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_updated;
    bool m_updated_isSet;
    bool m_updated_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINews)

#endif // OAINews_H
