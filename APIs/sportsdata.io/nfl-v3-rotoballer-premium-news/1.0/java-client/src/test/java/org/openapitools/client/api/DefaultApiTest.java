/*
 * NFL v3 RotoBaller Premium News
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.News;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Premium News
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void premiumNewsTest() throws ApiException {
        String format = null;
        List<News> response = api.premiumNews(format);
        // TODO: test validations
    }

    /**
     * Premium News by Date
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void premiumNewsByDateTest() throws ApiException {
        String format = null;
        String date = null;
        List<News> response = api.premiumNewsByDate(format, date);
        // TODO: test validations
    }

    /**
     * Premium News by Player
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void premiumNewsByPlayerTest() throws ApiException {
        String format = null;
        String playerid = null;
        List<News> response = api.premiumNewsByPlayer(format, playerid);
        // TODO: test validations
    }

    /**
     * Premium News by Team
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void premiumNewsByTeamTest() throws ApiException {
        String format = null;
        String team = null;
        List<News> response = api.premiumNewsByTeam(format, team);
        // TODO: test validations
    }

}
