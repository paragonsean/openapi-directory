/*
 * LoL v3 Stats
 * LoL v3 Stats
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for TeamGame
 */
public class TeamGameTest {
    private final TeamGame model = new TeamGame();

    /**
     * Model tests for TeamGame
     */
    @Test
    public void testTeamGame() {
        // TODO: test TeamGame
    }

    /**
     * Test the property 'assists'
     */
    @Test
    public void assistsTest() {
        // TODO: test assists
    }

    /**
     * Test the property 'combatPlayerScore'
     */
    @Test
    public void combatPlayerScoreTest() {
        // TODO: test combatPlayerScore
    }

    /**
     * Test the property 'dateTime'
     */
    @Test
    public void dateTimeTest() {
        // TODO: test dateTime
    }

    /**
     * Test the property 'day'
     */
    @Test
    public void dayTest() {
        // TODO: test day
    }

    /**
     * Test the property 'deaths'
     */
    @Test
    public void deathsTest() {
        // TODO: test deaths
    }

    /**
     * Test the property 'doubleKills'
     */
    @Test
    public void doubleKillsTest() {
        // TODO: test doubleKills
    }

    /**
     * Test the property 'fantasyPoints'
     */
    @Test
    public void fantasyPointsTest() {
        // TODO: test fantasyPoints
    }

    /**
     * Test the property 'firstBaron'
     */
    @Test
    public void firstBaronTest() {
        // TODO: test firstBaron
    }

    /**
     * Test the property 'firstBlood'
     */
    @Test
    public void firstBloodTest() {
        // TODO: test firstBlood
    }

    /**
     * Test the property 'firstDragon'
     */
    @Test
    public void firstDragonTest() {
        // TODO: test firstDragon
    }

    /**
     * Test the property 'firstInhibitor'
     */
    @Test
    public void firstInhibitorTest() {
        // TODO: test firstInhibitor
    }

    /**
     * Test the property 'firstRiftHerald'
     */
    @Test
    public void firstRiftHeraldTest() {
        // TODO: test firstRiftHerald
    }

    /**
     * Test the property 'firstTower'
     */
    @Test
    public void firstTowerTest() {
        // TODO: test firstTower
    }

    /**
     * Test the property 'gameId'
     */
    @Test
    public void gameIdTest() {
        // TODO: test gameId
    }

    /**
     * Test the property 'games'
     */
    @Test
    public void gamesTest() {
        // TODO: test games
    }

    /**
     * Test the property 'goldEarned'
     */
    @Test
    public void goldEarnedTest() {
        // TODO: test goldEarned
    }

    /**
     * Test the property 'goldSpent'
     */
    @Test
    public void goldSpentTest() {
        // TODO: test goldSpent
    }

    /**
     * Test the property 'inhibitorKills'
     */
    @Test
    public void inhibitorKillsTest() {
        // TODO: test inhibitorKills
    }

    /**
     * Test the property 'isClosed'
     */
    @Test
    public void isClosedTest() {
        // TODO: test isClosed
    }

    /**
     * Test the property 'killingSpree'
     */
    @Test
    public void killingSpreeTest() {
        // TODO: test killingSpree
    }

    /**
     * Test the property 'kills'
     */
    @Test
    public void killsTest() {
        // TODO: test kills
    }

    /**
     * Test the property 'largestCriticalStrike'
     */
    @Test
    public void largestCriticalStrikeTest() {
        // TODO: test largestCriticalStrike
    }

    /**
     * Test the property 'largestKillingSpree'
     */
    @Test
    public void largestKillingSpreeTest() {
        // TODO: test largestKillingSpree
    }

    /**
     * Test the property 'largestMultiKill'
     */
    @Test
    public void largestMultiKillTest() {
        // TODO: test largestMultiKill
    }

    /**
     * Test the property 'longestTimeSpentLiving'
     */
    @Test
    public void longestTimeSpentLivingTest() {
        // TODO: test longestTimeSpentLiving
    }

    /**
     * Test the property 'magicDamageDealt'
     */
    @Test
    public void magicDamageDealtTest() {
        // TODO: test magicDamageDealt
    }

    /**
     * Test the property 'magicDamageDealtToChampions'
     */
    @Test
    public void magicDamageDealtToChampionsTest() {
        // TODO: test magicDamageDealtToChampions
    }

    /**
     * Test the property 'magicDamageTaken'
     */
    @Test
    public void magicDamageTakenTest() {
        // TODO: test magicDamageTaken
    }

    /**
     * Test the property 'matchName'
     */
    @Test
    public void matchNameTest() {
        // TODO: test matchName
    }

    /**
     * Test the property 'matches'
     */
    @Test
    public void matchesTest() {
        // TODO: test matches
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'neutralMinionsKIlled'
     */
    @Test
    public void neutralMinionsKIlledTest() {
        // TODO: test neutralMinionsKIlled
    }

    /**
     * Test the property 'neutralMinionsKIlledTeamJungle'
     */
    @Test
    public void neutralMinionsKIlledTeamJungleTest() {
        // TODO: test neutralMinionsKIlledTeamJungle
    }

    /**
     * Test the property 'neutralMinionsKilledEnemyJungle'
     */
    @Test
    public void neutralMinionsKilledEnemyJungleTest() {
        // TODO: test neutralMinionsKilledEnemyJungle
    }

    /**
     * Test the property 'objectivePlayerScore'
     */
    @Test
    public void objectivePlayerScoreTest() {
        // TODO: test objectivePlayerScore
    }

    /**
     * Test the property 'opponent'
     */
    @Test
    public void opponentTest() {
        // TODO: test opponent
    }

    /**
     * Test the property 'opponentId'
     */
    @Test
    public void opponentIdTest() {
        // TODO: test opponentId
    }

    /**
     * Test the property 'pentaKills'
     */
    @Test
    public void pentaKillsTest() {
        // TODO: test pentaKills
    }

    /**
     * Test the property 'physicalDamageDealt'
     */
    @Test
    public void physicalDamageDealtTest() {
        // TODO: test physicalDamageDealt
    }

    /**
     * Test the property 'physicalDamageDealtToChampions'
     */
    @Test
    public void physicalDamageDealtToChampionsTest() {
        // TODO: test physicalDamageDealtToChampions
    }

    /**
     * Test the property 'physicalDamageTaken'
     */
    @Test
    public void physicalDamageTakenTest() {
        // TODO: test physicalDamageTaken
    }

    /**
     * Test the property 'playerId'
     */
    @Test
    public void playerIdTest() {
        // TODO: test playerId
    }

    /**
     * Test the property 'position'
     */
    @Test
    public void positionTest() {
        // TODO: test position
    }

    /**
     * Test the property 'quadraKills'
     */
    @Test
    public void quadraKillsTest() {
        // TODO: test quadraKills
    }

    /**
     * Test the property 'sightWardsBoughtInGame'
     */
    @Test
    public void sightWardsBoughtInGameTest() {
        // TODO: test sightWardsBoughtInGame
    }

    /**
     * Test the property 'team'
     */
    @Test
    public void teamTest() {
        // TODO: test team
    }

    /**
     * Test the property 'teamId'
     */
    @Test
    public void teamIdTest() {
        // TODO: test teamId
    }

    /**
     * Test the property 'tenKillsOrAssists'
     */
    @Test
    public void tenKillsOrAssistsTest() {
        // TODO: test tenKillsOrAssists
    }

    /**
     * Test the property 'totalDamageDealt'
     */
    @Test
    public void totalDamageDealtTest() {
        // TODO: test totalDamageDealt
    }

    /**
     * Test the property 'totalDamageDealtToChampions'
     */
    @Test
    public void totalDamageDealtToChampionsTest() {
        // TODO: test totalDamageDealtToChampions
    }

    /**
     * Test the property 'totalDamageTaken'
     */
    @Test
    public void totalDamageTakenTest() {
        // TODO: test totalDamageTaken
    }

    /**
     * Test the property 'totalHeal'
     */
    @Test
    public void totalHealTest() {
        // TODO: test totalHeal
    }

    /**
     * Test the property 'totalMinionsKilled'
     */
    @Test
    public void totalMinionsKilledTest() {
        // TODO: test totalMinionsKilled
    }

    /**
     * Test the property 'totalPlayerScore'
     */
    @Test
    public void totalPlayerScoreTest() {
        // TODO: test totalPlayerScore
    }

    /**
     * Test the property 'totalTimeCrowdControlDealt'
     */
    @Test
    public void totalTimeCrowdControlDealtTest() {
        // TODO: test totalTimeCrowdControlDealt
    }

    /**
     * Test the property 'totalUnitsHealed'
     */
    @Test
    public void totalUnitsHealedTest() {
        // TODO: test totalUnitsHealed
    }

    /**
     * Test the property 'tripleKills'
     */
    @Test
    public void tripleKillsTest() {
        // TODO: test tripleKills
    }

    /**
     * Test the property 'trueDamageDealt'
     */
    @Test
    public void trueDamageDealtTest() {
        // TODO: test trueDamageDealt
    }

    /**
     * Test the property 'trueDamageDealtToChampions'
     */
    @Test
    public void trueDamageDealtToChampionsTest() {
        // TODO: test trueDamageDealtToChampions
    }

    /**
     * Test the property 'trueDamageTaken'
     */
    @Test
    public void trueDamageTakenTest() {
        // TODO: test trueDamageTaken
    }

    /**
     * Test the property 'turretKills'
     */
    @Test
    public void turretKillsTest() {
        // TODO: test turretKills
    }

    /**
     * Test the property 'unrealKills'
     */
    @Test
    public void unrealKillsTest() {
        // TODO: test unrealKills
    }

    /**
     * Test the property 'updated'
     */
    @Test
    public void updatedTest() {
        // TODO: test updated
    }

    /**
     * Test the property 'visionWardsBoughtInGame'
     */
    @Test
    public void visionWardsBoughtInGameTest() {
        // TODO: test visionWardsBoughtInGame
    }

    /**
     * Test the property 'wardsKilled'
     */
    @Test
    public void wardsKilledTest() {
        // TODO: test wardsKilled
    }

    /**
     * Test the property 'wardsPlaced'
     */
    @Test
    public void wardsPlacedTest() {
        // TODO: test wardsPlaced
    }

}
