/*
 * LoL v3 Stats
 * LoL v3 Stats
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Champion
 */
public class ChampionTest {
    private final Champion model = new Champion();

    /**
     * Model tests for Champion
     */
    @Test
    public void testChampion() {
        // TODO: test Champion
    }

    /**
     * Test the property 'armor'
     */
    @Test
    public void armorTest() {
        // TODO: test armor
    }

    /**
     * Test the property 'armorPerLevel'
     */
    @Test
    public void armorPerLevelTest() {
        // TODO: test armorPerLevel
    }

    /**
     * Test the property 'attack'
     */
    @Test
    public void attackTest() {
        // TODO: test attack
    }

    /**
     * Test the property 'attackDamage'
     */
    @Test
    public void attackDamageTest() {
        // TODO: test attackDamage
    }

    /**
     * Test the property 'attackDamagePerLevel'
     */
    @Test
    public void attackDamagePerLevelTest() {
        // TODO: test attackDamagePerLevel
    }

    /**
     * Test the property 'attackRange'
     */
    @Test
    public void attackRangeTest() {
        // TODO: test attackRange
    }

    /**
     * Test the property 'attackSpeedOffset'
     */
    @Test
    public void attackSpeedOffsetTest() {
        // TODO: test attackSpeedOffset
    }

    /**
     * Test the property 'championId'
     */
    @Test
    public void championIdTest() {
        // TODO: test championId
    }

    /**
     * Test the property 'defense'
     */
    @Test
    public void defenseTest() {
        // TODO: test defense
    }

    /**
     * Test the property 'difficulty'
     */
    @Test
    public void difficultyTest() {
        // TODO: test difficulty
    }

    /**
     * Test the property 'hp'
     */
    @Test
    public void hpTest() {
        // TODO: test hp
    }

    /**
     * Test the property 'hpRegen'
     */
    @Test
    public void hpRegenTest() {
        // TODO: test hpRegen
    }

    /**
     * Test the property 'hpRegenPerLevel'
     */
    @Test
    public void hpRegenPerLevelTest() {
        // TODO: test hpRegenPerLevel
    }

    /**
     * Test the property 'hpUpPerLevel'
     */
    @Test
    public void hpUpPerLevelTest() {
        // TODO: test hpUpPerLevel
    }

    /**
     * Test the property 'magic'
     */
    @Test
    public void magicTest() {
        // TODO: test magic
    }

    /**
     * Test the property 'moveSpeed'
     */
    @Test
    public void moveSpeedTest() {
        // TODO: test moveSpeed
    }

    /**
     * Test the property 'mp'
     */
    @Test
    public void mpTest() {
        // TODO: test mp
    }

    /**
     * Test the property 'mpRegen'
     */
    @Test
    public void mpRegenTest() {
        // TODO: test mpRegen
    }

    /**
     * Test the property 'mpRegenPerLevel'
     */
    @Test
    public void mpRegenPerLevelTest() {
        // TODO: test mpRegenPerLevel
    }

    /**
     * Test the property 'mpUpPerLevel'
     */
    @Test
    public void mpUpPerLevelTest() {
        // TODO: test mpUpPerLevel
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'spellBlock'
     */
    @Test
    public void spellBlockTest() {
        // TODO: test spellBlock
    }

    /**
     * Test the property 'spellBlockPerLevel'
     */
    @Test
    public void spellBlockPerLevelTest() {
        // TODO: test spellBlockPerLevel
    }

    /**
     * Test the property 'title'
     */
    @Test
    public void titleTest() {
        // TODO: test title
    }

}
