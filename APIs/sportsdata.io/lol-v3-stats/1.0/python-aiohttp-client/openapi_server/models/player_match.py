# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.champion_info import ChampionInfo
from openapi_server.models.item import Item
from openapi_server.models.spell import Spell
from openapi_server import util


class PlayerMatch(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, assists: float=None, champion: ChampionInfo=None, champion_id: int=None, champion_level: int=None, combat_player_score: float=None, date_time: str=None, day: str=None, deaths: float=None, double_kills: float=None, fantasy_points: float=None, game_id: int=None, games: int=None, gold_earned: float=None, gold_spent: float=None, inhibitor_kills: float=None, is_closed: bool=None, items: List[Item]=None, killing_spree: float=None, kills: float=None, lane: str=None, largest_critical_strike: float=None, largest_killing_spree: float=None, largest_multi_kill: float=None, longest_time_spent_living: float=None, magic_damage_dealt: float=None, magic_damage_dealt_to_champions: float=None, magic_damage_taken: float=None, match_id: int=None, match_name: str=None, matches: int=None, name: str=None, neutral_minions_k_illed: float=None, neutral_minions_k_illed_team_jungle: float=None, neutral_minions_killed_enemy_jungle: float=None, objective_player_score: float=None, opponent: str=None, opponent_id: int=None, penta_kills: float=None, physical_damage_dealt: float=None, physical_damage_dealt_to_champions: float=None, physical_damage_taken: float=None, player_id: int=None, position: str=None, quadra_kills: float=None, role: str=None, sight_wards_bought_in_game: float=None, spells: List[Spell]=None, team: str=None, team_id: int=None, ten_kills_or_assists: float=None, total_damage_dealt: float=None, total_damage_dealt_to_champions: float=None, total_damage_taken: float=None, total_heal: float=None, total_minions_killed: float=None, total_player_score: float=None, total_time_crowd_control_dealt: float=None, total_units_healed: float=None, triple_kills: float=None, true_damage_dealt: float=None, true_damage_dealt_to_champions: float=None, true_damage_taken: float=None, turret_kills: float=None, unreal_kills: float=None, updated: str=None, vision_wards_bought_in_game: float=None, wards_killed: float=None, wards_placed: float=None):
        """PlayerMatch - a model defined in OpenAPI

        :param assists: The assists of this PlayerMatch.
        :param champion: The champion of this PlayerMatch.
        :param champion_id: The champion_id of this PlayerMatch.
        :param champion_level: The champion_level of this PlayerMatch.
        :param combat_player_score: The combat_player_score of this PlayerMatch.
        :param date_time: The date_time of this PlayerMatch.
        :param day: The day of this PlayerMatch.
        :param deaths: The deaths of this PlayerMatch.
        :param double_kills: The double_kills of this PlayerMatch.
        :param fantasy_points: The fantasy_points of this PlayerMatch.
        :param game_id: The game_id of this PlayerMatch.
        :param games: The games of this PlayerMatch.
        :param gold_earned: The gold_earned of this PlayerMatch.
        :param gold_spent: The gold_spent of this PlayerMatch.
        :param inhibitor_kills: The inhibitor_kills of this PlayerMatch.
        :param is_closed: The is_closed of this PlayerMatch.
        :param items: The items of this PlayerMatch.
        :param killing_spree: The killing_spree of this PlayerMatch.
        :param kills: The kills of this PlayerMatch.
        :param lane: The lane of this PlayerMatch.
        :param largest_critical_strike: The largest_critical_strike of this PlayerMatch.
        :param largest_killing_spree: The largest_killing_spree of this PlayerMatch.
        :param largest_multi_kill: The largest_multi_kill of this PlayerMatch.
        :param longest_time_spent_living: The longest_time_spent_living of this PlayerMatch.
        :param magic_damage_dealt: The magic_damage_dealt of this PlayerMatch.
        :param magic_damage_dealt_to_champions: The magic_damage_dealt_to_champions of this PlayerMatch.
        :param magic_damage_taken: The magic_damage_taken of this PlayerMatch.
        :param match_id: The match_id of this PlayerMatch.
        :param match_name: The match_name of this PlayerMatch.
        :param matches: The matches of this PlayerMatch.
        :param name: The name of this PlayerMatch.
        :param neutral_minions_k_illed: The neutral_minions_k_illed of this PlayerMatch.
        :param neutral_minions_k_illed_team_jungle: The neutral_minions_k_illed_team_jungle of this PlayerMatch.
        :param neutral_minions_killed_enemy_jungle: The neutral_minions_killed_enemy_jungle of this PlayerMatch.
        :param objective_player_score: The objective_player_score of this PlayerMatch.
        :param opponent: The opponent of this PlayerMatch.
        :param opponent_id: The opponent_id of this PlayerMatch.
        :param penta_kills: The penta_kills of this PlayerMatch.
        :param physical_damage_dealt: The physical_damage_dealt of this PlayerMatch.
        :param physical_damage_dealt_to_champions: The physical_damage_dealt_to_champions of this PlayerMatch.
        :param physical_damage_taken: The physical_damage_taken of this PlayerMatch.
        :param player_id: The player_id of this PlayerMatch.
        :param position: The position of this PlayerMatch.
        :param quadra_kills: The quadra_kills of this PlayerMatch.
        :param role: The role of this PlayerMatch.
        :param sight_wards_bought_in_game: The sight_wards_bought_in_game of this PlayerMatch.
        :param spells: The spells of this PlayerMatch.
        :param team: The team of this PlayerMatch.
        :param team_id: The team_id of this PlayerMatch.
        :param ten_kills_or_assists: The ten_kills_or_assists of this PlayerMatch.
        :param total_damage_dealt: The total_damage_dealt of this PlayerMatch.
        :param total_damage_dealt_to_champions: The total_damage_dealt_to_champions of this PlayerMatch.
        :param total_damage_taken: The total_damage_taken of this PlayerMatch.
        :param total_heal: The total_heal of this PlayerMatch.
        :param total_minions_killed: The total_minions_killed of this PlayerMatch.
        :param total_player_score: The total_player_score of this PlayerMatch.
        :param total_time_crowd_control_dealt: The total_time_crowd_control_dealt of this PlayerMatch.
        :param total_units_healed: The total_units_healed of this PlayerMatch.
        :param triple_kills: The triple_kills of this PlayerMatch.
        :param true_damage_dealt: The true_damage_dealt of this PlayerMatch.
        :param true_damage_dealt_to_champions: The true_damage_dealt_to_champions of this PlayerMatch.
        :param true_damage_taken: The true_damage_taken of this PlayerMatch.
        :param turret_kills: The turret_kills of this PlayerMatch.
        :param unreal_kills: The unreal_kills of this PlayerMatch.
        :param updated: The updated of this PlayerMatch.
        :param vision_wards_bought_in_game: The vision_wards_bought_in_game of this PlayerMatch.
        :param wards_killed: The wards_killed of this PlayerMatch.
        :param wards_placed: The wards_placed of this PlayerMatch.
        """
        self.openapi_types = {
            'assists': float,
            'champion': ChampionInfo,
            'champion_id': int,
            'champion_level': int,
            'combat_player_score': float,
            'date_time': str,
            'day': str,
            'deaths': float,
            'double_kills': float,
            'fantasy_points': float,
            'game_id': int,
            'games': int,
            'gold_earned': float,
            'gold_spent': float,
            'inhibitor_kills': float,
            'is_closed': bool,
            'items': List[Item],
            'killing_spree': float,
            'kills': float,
            'lane': str,
            'largest_critical_strike': float,
            'largest_killing_spree': float,
            'largest_multi_kill': float,
            'longest_time_spent_living': float,
            'magic_damage_dealt': float,
            'magic_damage_dealt_to_champions': float,
            'magic_damage_taken': float,
            'match_id': int,
            'match_name': str,
            'matches': int,
            'name': str,
            'neutral_minions_k_illed': float,
            'neutral_minions_k_illed_team_jungle': float,
            'neutral_minions_killed_enemy_jungle': float,
            'objective_player_score': float,
            'opponent': str,
            'opponent_id': int,
            'penta_kills': float,
            'physical_damage_dealt': float,
            'physical_damage_dealt_to_champions': float,
            'physical_damage_taken': float,
            'player_id': int,
            'position': str,
            'quadra_kills': float,
            'role': str,
            'sight_wards_bought_in_game': float,
            'spells': List[Spell],
            'team': str,
            'team_id': int,
            'ten_kills_or_assists': float,
            'total_damage_dealt': float,
            'total_damage_dealt_to_champions': float,
            'total_damage_taken': float,
            'total_heal': float,
            'total_minions_killed': float,
            'total_player_score': float,
            'total_time_crowd_control_dealt': float,
            'total_units_healed': float,
            'triple_kills': float,
            'true_damage_dealt': float,
            'true_damage_dealt_to_champions': float,
            'true_damage_taken': float,
            'turret_kills': float,
            'unreal_kills': float,
            'updated': str,
            'vision_wards_bought_in_game': float,
            'wards_killed': float,
            'wards_placed': float
        }

        self.attribute_map = {
            'assists': 'Assists',
            'champion': 'Champion',
            'champion_id': 'ChampionId',
            'champion_level': 'ChampionLevel',
            'combat_player_score': 'CombatPlayerScore',
            'date_time': 'DateTime',
            'day': 'Day',
            'deaths': 'Deaths',
            'double_kills': 'DoubleKills',
            'fantasy_points': 'FantasyPoints',
            'game_id': 'GameId',
            'games': 'Games',
            'gold_earned': 'GoldEarned',
            'gold_spent': 'GoldSpent',
            'inhibitor_kills': 'InhibitorKills',
            'is_closed': 'IsClosed',
            'items': 'Items',
            'killing_spree': 'KillingSpree',
            'kills': 'Kills',
            'lane': 'Lane',
            'largest_critical_strike': 'LargestCriticalStrike',
            'largest_killing_spree': 'LargestKillingSpree',
            'largest_multi_kill': 'LargestMultiKill',
            'longest_time_spent_living': 'LongestTimeSpentLiving',
            'magic_damage_dealt': 'MagicDamageDealt',
            'magic_damage_dealt_to_champions': 'MagicDamageDealtToChampions',
            'magic_damage_taken': 'MagicDamageTaken',
            'match_id': 'MatchId',
            'match_name': 'MatchName',
            'matches': 'Matches',
            'name': 'Name',
            'neutral_minions_k_illed': 'NeutralMinionsKIlled',
            'neutral_minions_k_illed_team_jungle': 'NeutralMinionsKIlledTeamJungle',
            'neutral_minions_killed_enemy_jungle': 'NeutralMinionsKilledEnemyJungle',
            'objective_player_score': 'ObjectivePlayerScore',
            'opponent': 'Opponent',
            'opponent_id': 'OpponentId',
            'penta_kills': 'PentaKills',
            'physical_damage_dealt': 'PhysicalDamageDealt',
            'physical_damage_dealt_to_champions': 'PhysicalDamageDealtToChampions',
            'physical_damage_taken': 'PhysicalDamageTaken',
            'player_id': 'PlayerId',
            'position': 'Position',
            'quadra_kills': 'QuadraKills',
            'role': 'Role',
            'sight_wards_bought_in_game': 'SightWardsBoughtInGame',
            'spells': 'Spells',
            'team': 'Team',
            'team_id': 'TeamId',
            'ten_kills_or_assists': 'TenKillsOrAssists',
            'total_damage_dealt': 'TotalDamageDealt',
            'total_damage_dealt_to_champions': 'TotalDamageDealtToChampions',
            'total_damage_taken': 'TotalDamageTaken',
            'total_heal': 'TotalHeal',
            'total_minions_killed': 'TotalMinionsKilled',
            'total_player_score': 'TotalPlayerScore',
            'total_time_crowd_control_dealt': 'TotalTimeCrowdControlDealt',
            'total_units_healed': 'TotalUnitsHealed',
            'triple_kills': 'TripleKills',
            'true_damage_dealt': 'TrueDamageDealt',
            'true_damage_dealt_to_champions': 'TrueDamageDealtToChampions',
            'true_damage_taken': 'TrueDamageTaken',
            'turret_kills': 'TurretKills',
            'unreal_kills': 'UnrealKills',
            'updated': 'Updated',
            'vision_wards_bought_in_game': 'VisionWardsBoughtInGame',
            'wards_killed': 'WardsKilled',
            'wards_placed': 'WardsPlaced'
        }

        self._assists = assists
        self._champion = champion
        self._champion_id = champion_id
        self._champion_level = champion_level
        self._combat_player_score = combat_player_score
        self._date_time = date_time
        self._day = day
        self._deaths = deaths
        self._double_kills = double_kills
        self._fantasy_points = fantasy_points
        self._game_id = game_id
        self._games = games
        self._gold_earned = gold_earned
        self._gold_spent = gold_spent
        self._inhibitor_kills = inhibitor_kills
        self._is_closed = is_closed
        self._items = items
        self._killing_spree = killing_spree
        self._kills = kills
        self._lane = lane
        self._largest_critical_strike = largest_critical_strike
        self._largest_killing_spree = largest_killing_spree
        self._largest_multi_kill = largest_multi_kill
        self._longest_time_spent_living = longest_time_spent_living
        self._magic_damage_dealt = magic_damage_dealt
        self._magic_damage_dealt_to_champions = magic_damage_dealt_to_champions
        self._magic_damage_taken = magic_damage_taken
        self._match_id = match_id
        self._match_name = match_name
        self._matches = matches
        self._name = name
        self._neutral_minions_k_illed = neutral_minions_k_illed
        self._neutral_minions_k_illed_team_jungle = neutral_minions_k_illed_team_jungle
        self._neutral_minions_killed_enemy_jungle = neutral_minions_killed_enemy_jungle
        self._objective_player_score = objective_player_score
        self._opponent = opponent
        self._opponent_id = opponent_id
        self._penta_kills = penta_kills
        self._physical_damage_dealt = physical_damage_dealt
        self._physical_damage_dealt_to_champions = physical_damage_dealt_to_champions
        self._physical_damage_taken = physical_damage_taken
        self._player_id = player_id
        self._position = position
        self._quadra_kills = quadra_kills
        self._role = role
        self._sight_wards_bought_in_game = sight_wards_bought_in_game
        self._spells = spells
        self._team = team
        self._team_id = team_id
        self._ten_kills_or_assists = ten_kills_or_assists
        self._total_damage_dealt = total_damage_dealt
        self._total_damage_dealt_to_champions = total_damage_dealt_to_champions
        self._total_damage_taken = total_damage_taken
        self._total_heal = total_heal
        self._total_minions_killed = total_minions_killed
        self._total_player_score = total_player_score
        self._total_time_crowd_control_dealt = total_time_crowd_control_dealt
        self._total_units_healed = total_units_healed
        self._triple_kills = triple_kills
        self._true_damage_dealt = true_damage_dealt
        self._true_damage_dealt_to_champions = true_damage_dealt_to_champions
        self._true_damage_taken = true_damage_taken
        self._turret_kills = turret_kills
        self._unreal_kills = unreal_kills
        self._updated = updated
        self._vision_wards_bought_in_game = vision_wards_bought_in_game
        self._wards_killed = wards_killed
        self._wards_placed = wards_placed

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PlayerMatch':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PlayerMatch of this PlayerMatch.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def assists(self):
        """Gets the assists of this PlayerMatch.


        :return: The assists of this PlayerMatch.
        :rtype: float
        """
        return self._assists

    @assists.setter
    def assists(self, assists):
        """Sets the assists of this PlayerMatch.


        :param assists: The assists of this PlayerMatch.
        :type assists: float
        """

        self._assists = assists

    @property
    def champion(self):
        """Gets the champion of this PlayerMatch.


        :return: The champion of this PlayerMatch.
        :rtype: ChampionInfo
        """
        return self._champion

    @champion.setter
    def champion(self, champion):
        """Sets the champion of this PlayerMatch.


        :param champion: The champion of this PlayerMatch.
        :type champion: ChampionInfo
        """

        self._champion = champion

    @property
    def champion_id(self):
        """Gets the champion_id of this PlayerMatch.


        :return: The champion_id of this PlayerMatch.
        :rtype: int
        """
        return self._champion_id

    @champion_id.setter
    def champion_id(self, champion_id):
        """Sets the champion_id of this PlayerMatch.


        :param champion_id: The champion_id of this PlayerMatch.
        :type champion_id: int
        """

        self._champion_id = champion_id

    @property
    def champion_level(self):
        """Gets the champion_level of this PlayerMatch.


        :return: The champion_level of this PlayerMatch.
        :rtype: int
        """
        return self._champion_level

    @champion_level.setter
    def champion_level(self, champion_level):
        """Sets the champion_level of this PlayerMatch.


        :param champion_level: The champion_level of this PlayerMatch.
        :type champion_level: int
        """

        self._champion_level = champion_level

    @property
    def combat_player_score(self):
        """Gets the combat_player_score of this PlayerMatch.


        :return: The combat_player_score of this PlayerMatch.
        :rtype: float
        """
        return self._combat_player_score

    @combat_player_score.setter
    def combat_player_score(self, combat_player_score):
        """Sets the combat_player_score of this PlayerMatch.


        :param combat_player_score: The combat_player_score of this PlayerMatch.
        :type combat_player_score: float
        """

        self._combat_player_score = combat_player_score

    @property
    def date_time(self):
        """Gets the date_time of this PlayerMatch.


        :return: The date_time of this PlayerMatch.
        :rtype: str
        """
        return self._date_time

    @date_time.setter
    def date_time(self, date_time):
        """Sets the date_time of this PlayerMatch.


        :param date_time: The date_time of this PlayerMatch.
        :type date_time: str
        """

        self._date_time = date_time

    @property
    def day(self):
        """Gets the day of this PlayerMatch.


        :return: The day of this PlayerMatch.
        :rtype: str
        """
        return self._day

    @day.setter
    def day(self, day):
        """Sets the day of this PlayerMatch.


        :param day: The day of this PlayerMatch.
        :type day: str
        """

        self._day = day

    @property
    def deaths(self):
        """Gets the deaths of this PlayerMatch.


        :return: The deaths of this PlayerMatch.
        :rtype: float
        """
        return self._deaths

    @deaths.setter
    def deaths(self, deaths):
        """Sets the deaths of this PlayerMatch.


        :param deaths: The deaths of this PlayerMatch.
        :type deaths: float
        """

        self._deaths = deaths

    @property
    def double_kills(self):
        """Gets the double_kills of this PlayerMatch.


        :return: The double_kills of this PlayerMatch.
        :rtype: float
        """
        return self._double_kills

    @double_kills.setter
    def double_kills(self, double_kills):
        """Sets the double_kills of this PlayerMatch.


        :param double_kills: The double_kills of this PlayerMatch.
        :type double_kills: float
        """

        self._double_kills = double_kills

    @property
    def fantasy_points(self):
        """Gets the fantasy_points of this PlayerMatch.


        :return: The fantasy_points of this PlayerMatch.
        :rtype: float
        """
        return self._fantasy_points

    @fantasy_points.setter
    def fantasy_points(self, fantasy_points):
        """Sets the fantasy_points of this PlayerMatch.


        :param fantasy_points: The fantasy_points of this PlayerMatch.
        :type fantasy_points: float
        """

        self._fantasy_points = fantasy_points

    @property
    def game_id(self):
        """Gets the game_id of this PlayerMatch.


        :return: The game_id of this PlayerMatch.
        :rtype: int
        """
        return self._game_id

    @game_id.setter
    def game_id(self, game_id):
        """Sets the game_id of this PlayerMatch.


        :param game_id: The game_id of this PlayerMatch.
        :type game_id: int
        """

        self._game_id = game_id

    @property
    def games(self):
        """Gets the games of this PlayerMatch.


        :return: The games of this PlayerMatch.
        :rtype: int
        """
        return self._games

    @games.setter
    def games(self, games):
        """Sets the games of this PlayerMatch.


        :param games: The games of this PlayerMatch.
        :type games: int
        """

        self._games = games

    @property
    def gold_earned(self):
        """Gets the gold_earned of this PlayerMatch.


        :return: The gold_earned of this PlayerMatch.
        :rtype: float
        """
        return self._gold_earned

    @gold_earned.setter
    def gold_earned(self, gold_earned):
        """Sets the gold_earned of this PlayerMatch.


        :param gold_earned: The gold_earned of this PlayerMatch.
        :type gold_earned: float
        """

        self._gold_earned = gold_earned

    @property
    def gold_spent(self):
        """Gets the gold_spent of this PlayerMatch.


        :return: The gold_spent of this PlayerMatch.
        :rtype: float
        """
        return self._gold_spent

    @gold_spent.setter
    def gold_spent(self, gold_spent):
        """Sets the gold_spent of this PlayerMatch.


        :param gold_spent: The gold_spent of this PlayerMatch.
        :type gold_spent: float
        """

        self._gold_spent = gold_spent

    @property
    def inhibitor_kills(self):
        """Gets the inhibitor_kills of this PlayerMatch.


        :return: The inhibitor_kills of this PlayerMatch.
        :rtype: float
        """
        return self._inhibitor_kills

    @inhibitor_kills.setter
    def inhibitor_kills(self, inhibitor_kills):
        """Sets the inhibitor_kills of this PlayerMatch.


        :param inhibitor_kills: The inhibitor_kills of this PlayerMatch.
        :type inhibitor_kills: float
        """

        self._inhibitor_kills = inhibitor_kills

    @property
    def is_closed(self):
        """Gets the is_closed of this PlayerMatch.


        :return: The is_closed of this PlayerMatch.
        :rtype: bool
        """
        return self._is_closed

    @is_closed.setter
    def is_closed(self, is_closed):
        """Sets the is_closed of this PlayerMatch.


        :param is_closed: The is_closed of this PlayerMatch.
        :type is_closed: bool
        """

        self._is_closed = is_closed

    @property
    def items(self):
        """Gets the items of this PlayerMatch.


        :return: The items of this PlayerMatch.
        :rtype: List[Item]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this PlayerMatch.


        :param items: The items of this PlayerMatch.
        :type items: List[Item]
        """

        self._items = items

    @property
    def killing_spree(self):
        """Gets the killing_spree of this PlayerMatch.


        :return: The killing_spree of this PlayerMatch.
        :rtype: float
        """
        return self._killing_spree

    @killing_spree.setter
    def killing_spree(self, killing_spree):
        """Sets the killing_spree of this PlayerMatch.


        :param killing_spree: The killing_spree of this PlayerMatch.
        :type killing_spree: float
        """

        self._killing_spree = killing_spree

    @property
    def kills(self):
        """Gets the kills of this PlayerMatch.


        :return: The kills of this PlayerMatch.
        :rtype: float
        """
        return self._kills

    @kills.setter
    def kills(self, kills):
        """Sets the kills of this PlayerMatch.


        :param kills: The kills of this PlayerMatch.
        :type kills: float
        """

        self._kills = kills

    @property
    def lane(self):
        """Gets the lane of this PlayerMatch.


        :return: The lane of this PlayerMatch.
        :rtype: str
        """
        return self._lane

    @lane.setter
    def lane(self, lane):
        """Sets the lane of this PlayerMatch.


        :param lane: The lane of this PlayerMatch.
        :type lane: str
        """

        self._lane = lane

    @property
    def largest_critical_strike(self):
        """Gets the largest_critical_strike of this PlayerMatch.


        :return: The largest_critical_strike of this PlayerMatch.
        :rtype: float
        """
        return self._largest_critical_strike

    @largest_critical_strike.setter
    def largest_critical_strike(self, largest_critical_strike):
        """Sets the largest_critical_strike of this PlayerMatch.


        :param largest_critical_strike: The largest_critical_strike of this PlayerMatch.
        :type largest_critical_strike: float
        """

        self._largest_critical_strike = largest_critical_strike

    @property
    def largest_killing_spree(self):
        """Gets the largest_killing_spree of this PlayerMatch.


        :return: The largest_killing_spree of this PlayerMatch.
        :rtype: float
        """
        return self._largest_killing_spree

    @largest_killing_spree.setter
    def largest_killing_spree(self, largest_killing_spree):
        """Sets the largest_killing_spree of this PlayerMatch.


        :param largest_killing_spree: The largest_killing_spree of this PlayerMatch.
        :type largest_killing_spree: float
        """

        self._largest_killing_spree = largest_killing_spree

    @property
    def largest_multi_kill(self):
        """Gets the largest_multi_kill of this PlayerMatch.


        :return: The largest_multi_kill of this PlayerMatch.
        :rtype: float
        """
        return self._largest_multi_kill

    @largest_multi_kill.setter
    def largest_multi_kill(self, largest_multi_kill):
        """Sets the largest_multi_kill of this PlayerMatch.


        :param largest_multi_kill: The largest_multi_kill of this PlayerMatch.
        :type largest_multi_kill: float
        """

        self._largest_multi_kill = largest_multi_kill

    @property
    def longest_time_spent_living(self):
        """Gets the longest_time_spent_living of this PlayerMatch.


        :return: The longest_time_spent_living of this PlayerMatch.
        :rtype: float
        """
        return self._longest_time_spent_living

    @longest_time_spent_living.setter
    def longest_time_spent_living(self, longest_time_spent_living):
        """Sets the longest_time_spent_living of this PlayerMatch.


        :param longest_time_spent_living: The longest_time_spent_living of this PlayerMatch.
        :type longest_time_spent_living: float
        """

        self._longest_time_spent_living = longest_time_spent_living

    @property
    def magic_damage_dealt(self):
        """Gets the magic_damage_dealt of this PlayerMatch.


        :return: The magic_damage_dealt of this PlayerMatch.
        :rtype: float
        """
        return self._magic_damage_dealt

    @magic_damage_dealt.setter
    def magic_damage_dealt(self, magic_damage_dealt):
        """Sets the magic_damage_dealt of this PlayerMatch.


        :param magic_damage_dealt: The magic_damage_dealt of this PlayerMatch.
        :type magic_damage_dealt: float
        """

        self._magic_damage_dealt = magic_damage_dealt

    @property
    def magic_damage_dealt_to_champions(self):
        """Gets the magic_damage_dealt_to_champions of this PlayerMatch.


        :return: The magic_damage_dealt_to_champions of this PlayerMatch.
        :rtype: float
        """
        return self._magic_damage_dealt_to_champions

    @magic_damage_dealt_to_champions.setter
    def magic_damage_dealt_to_champions(self, magic_damage_dealt_to_champions):
        """Sets the magic_damage_dealt_to_champions of this PlayerMatch.


        :param magic_damage_dealt_to_champions: The magic_damage_dealt_to_champions of this PlayerMatch.
        :type magic_damage_dealt_to_champions: float
        """

        self._magic_damage_dealt_to_champions = magic_damage_dealt_to_champions

    @property
    def magic_damage_taken(self):
        """Gets the magic_damage_taken of this PlayerMatch.


        :return: The magic_damage_taken of this PlayerMatch.
        :rtype: float
        """
        return self._magic_damage_taken

    @magic_damage_taken.setter
    def magic_damage_taken(self, magic_damage_taken):
        """Sets the magic_damage_taken of this PlayerMatch.


        :param magic_damage_taken: The magic_damage_taken of this PlayerMatch.
        :type magic_damage_taken: float
        """

        self._magic_damage_taken = magic_damage_taken

    @property
    def match_id(self):
        """Gets the match_id of this PlayerMatch.


        :return: The match_id of this PlayerMatch.
        :rtype: int
        """
        return self._match_id

    @match_id.setter
    def match_id(self, match_id):
        """Sets the match_id of this PlayerMatch.


        :param match_id: The match_id of this PlayerMatch.
        :type match_id: int
        """

        self._match_id = match_id

    @property
    def match_name(self):
        """Gets the match_name of this PlayerMatch.


        :return: The match_name of this PlayerMatch.
        :rtype: str
        """
        return self._match_name

    @match_name.setter
    def match_name(self, match_name):
        """Sets the match_name of this PlayerMatch.


        :param match_name: The match_name of this PlayerMatch.
        :type match_name: str
        """

        self._match_name = match_name

    @property
    def matches(self):
        """Gets the matches of this PlayerMatch.


        :return: The matches of this PlayerMatch.
        :rtype: int
        """
        return self._matches

    @matches.setter
    def matches(self, matches):
        """Sets the matches of this PlayerMatch.


        :param matches: The matches of this PlayerMatch.
        :type matches: int
        """

        self._matches = matches

    @property
    def name(self):
        """Gets the name of this PlayerMatch.


        :return: The name of this PlayerMatch.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PlayerMatch.


        :param name: The name of this PlayerMatch.
        :type name: str
        """

        self._name = name

    @property
    def neutral_minions_k_illed(self):
        """Gets the neutral_minions_k_illed of this PlayerMatch.


        :return: The neutral_minions_k_illed of this PlayerMatch.
        :rtype: float
        """
        return self._neutral_minions_k_illed

    @neutral_minions_k_illed.setter
    def neutral_minions_k_illed(self, neutral_minions_k_illed):
        """Sets the neutral_minions_k_illed of this PlayerMatch.


        :param neutral_minions_k_illed: The neutral_minions_k_illed of this PlayerMatch.
        :type neutral_minions_k_illed: float
        """

        self._neutral_minions_k_illed = neutral_minions_k_illed

    @property
    def neutral_minions_k_illed_team_jungle(self):
        """Gets the neutral_minions_k_illed_team_jungle of this PlayerMatch.


        :return: The neutral_minions_k_illed_team_jungle of this PlayerMatch.
        :rtype: float
        """
        return self._neutral_minions_k_illed_team_jungle

    @neutral_minions_k_illed_team_jungle.setter
    def neutral_minions_k_illed_team_jungle(self, neutral_minions_k_illed_team_jungle):
        """Sets the neutral_minions_k_illed_team_jungle of this PlayerMatch.


        :param neutral_minions_k_illed_team_jungle: The neutral_minions_k_illed_team_jungle of this PlayerMatch.
        :type neutral_minions_k_illed_team_jungle: float
        """

        self._neutral_minions_k_illed_team_jungle = neutral_minions_k_illed_team_jungle

    @property
    def neutral_minions_killed_enemy_jungle(self):
        """Gets the neutral_minions_killed_enemy_jungle of this PlayerMatch.


        :return: The neutral_minions_killed_enemy_jungle of this PlayerMatch.
        :rtype: float
        """
        return self._neutral_minions_killed_enemy_jungle

    @neutral_minions_killed_enemy_jungle.setter
    def neutral_minions_killed_enemy_jungle(self, neutral_minions_killed_enemy_jungle):
        """Sets the neutral_minions_killed_enemy_jungle of this PlayerMatch.


        :param neutral_minions_killed_enemy_jungle: The neutral_minions_killed_enemy_jungle of this PlayerMatch.
        :type neutral_minions_killed_enemy_jungle: float
        """

        self._neutral_minions_killed_enemy_jungle = neutral_minions_killed_enemy_jungle

    @property
    def objective_player_score(self):
        """Gets the objective_player_score of this PlayerMatch.


        :return: The objective_player_score of this PlayerMatch.
        :rtype: float
        """
        return self._objective_player_score

    @objective_player_score.setter
    def objective_player_score(self, objective_player_score):
        """Sets the objective_player_score of this PlayerMatch.


        :param objective_player_score: The objective_player_score of this PlayerMatch.
        :type objective_player_score: float
        """

        self._objective_player_score = objective_player_score

    @property
    def opponent(self):
        """Gets the opponent of this PlayerMatch.


        :return: The opponent of this PlayerMatch.
        :rtype: str
        """
        return self._opponent

    @opponent.setter
    def opponent(self, opponent):
        """Sets the opponent of this PlayerMatch.


        :param opponent: The opponent of this PlayerMatch.
        :type opponent: str
        """

        self._opponent = opponent

    @property
    def opponent_id(self):
        """Gets the opponent_id of this PlayerMatch.


        :return: The opponent_id of this PlayerMatch.
        :rtype: int
        """
        return self._opponent_id

    @opponent_id.setter
    def opponent_id(self, opponent_id):
        """Sets the opponent_id of this PlayerMatch.


        :param opponent_id: The opponent_id of this PlayerMatch.
        :type opponent_id: int
        """

        self._opponent_id = opponent_id

    @property
    def penta_kills(self):
        """Gets the penta_kills of this PlayerMatch.


        :return: The penta_kills of this PlayerMatch.
        :rtype: float
        """
        return self._penta_kills

    @penta_kills.setter
    def penta_kills(self, penta_kills):
        """Sets the penta_kills of this PlayerMatch.


        :param penta_kills: The penta_kills of this PlayerMatch.
        :type penta_kills: float
        """

        self._penta_kills = penta_kills

    @property
    def physical_damage_dealt(self):
        """Gets the physical_damage_dealt of this PlayerMatch.


        :return: The physical_damage_dealt of this PlayerMatch.
        :rtype: float
        """
        return self._physical_damage_dealt

    @physical_damage_dealt.setter
    def physical_damage_dealt(self, physical_damage_dealt):
        """Sets the physical_damage_dealt of this PlayerMatch.


        :param physical_damage_dealt: The physical_damage_dealt of this PlayerMatch.
        :type physical_damage_dealt: float
        """

        self._physical_damage_dealt = physical_damage_dealt

    @property
    def physical_damage_dealt_to_champions(self):
        """Gets the physical_damage_dealt_to_champions of this PlayerMatch.


        :return: The physical_damage_dealt_to_champions of this PlayerMatch.
        :rtype: float
        """
        return self._physical_damage_dealt_to_champions

    @physical_damage_dealt_to_champions.setter
    def physical_damage_dealt_to_champions(self, physical_damage_dealt_to_champions):
        """Sets the physical_damage_dealt_to_champions of this PlayerMatch.


        :param physical_damage_dealt_to_champions: The physical_damage_dealt_to_champions of this PlayerMatch.
        :type physical_damage_dealt_to_champions: float
        """

        self._physical_damage_dealt_to_champions = physical_damage_dealt_to_champions

    @property
    def physical_damage_taken(self):
        """Gets the physical_damage_taken of this PlayerMatch.


        :return: The physical_damage_taken of this PlayerMatch.
        :rtype: float
        """
        return self._physical_damage_taken

    @physical_damage_taken.setter
    def physical_damage_taken(self, physical_damage_taken):
        """Sets the physical_damage_taken of this PlayerMatch.


        :param physical_damage_taken: The physical_damage_taken of this PlayerMatch.
        :type physical_damage_taken: float
        """

        self._physical_damage_taken = physical_damage_taken

    @property
    def player_id(self):
        """Gets the player_id of this PlayerMatch.


        :return: The player_id of this PlayerMatch.
        :rtype: int
        """
        return self._player_id

    @player_id.setter
    def player_id(self, player_id):
        """Sets the player_id of this PlayerMatch.


        :param player_id: The player_id of this PlayerMatch.
        :type player_id: int
        """

        self._player_id = player_id

    @property
    def position(self):
        """Gets the position of this PlayerMatch.


        :return: The position of this PlayerMatch.
        :rtype: str
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this PlayerMatch.


        :param position: The position of this PlayerMatch.
        :type position: str
        """

        self._position = position

    @property
    def quadra_kills(self):
        """Gets the quadra_kills of this PlayerMatch.


        :return: The quadra_kills of this PlayerMatch.
        :rtype: float
        """
        return self._quadra_kills

    @quadra_kills.setter
    def quadra_kills(self, quadra_kills):
        """Sets the quadra_kills of this PlayerMatch.


        :param quadra_kills: The quadra_kills of this PlayerMatch.
        :type quadra_kills: float
        """

        self._quadra_kills = quadra_kills

    @property
    def role(self):
        """Gets the role of this PlayerMatch.


        :return: The role of this PlayerMatch.
        :rtype: str
        """
        return self._role

    @role.setter
    def role(self, role):
        """Sets the role of this PlayerMatch.


        :param role: The role of this PlayerMatch.
        :type role: str
        """

        self._role = role

    @property
    def sight_wards_bought_in_game(self):
        """Gets the sight_wards_bought_in_game of this PlayerMatch.


        :return: The sight_wards_bought_in_game of this PlayerMatch.
        :rtype: float
        """
        return self._sight_wards_bought_in_game

    @sight_wards_bought_in_game.setter
    def sight_wards_bought_in_game(self, sight_wards_bought_in_game):
        """Sets the sight_wards_bought_in_game of this PlayerMatch.


        :param sight_wards_bought_in_game: The sight_wards_bought_in_game of this PlayerMatch.
        :type sight_wards_bought_in_game: float
        """

        self._sight_wards_bought_in_game = sight_wards_bought_in_game

    @property
    def spells(self):
        """Gets the spells of this PlayerMatch.


        :return: The spells of this PlayerMatch.
        :rtype: List[Spell]
        """
        return self._spells

    @spells.setter
    def spells(self, spells):
        """Sets the spells of this PlayerMatch.


        :param spells: The spells of this PlayerMatch.
        :type spells: List[Spell]
        """

        self._spells = spells

    @property
    def team(self):
        """Gets the team of this PlayerMatch.


        :return: The team of this PlayerMatch.
        :rtype: str
        """
        return self._team

    @team.setter
    def team(self, team):
        """Sets the team of this PlayerMatch.


        :param team: The team of this PlayerMatch.
        :type team: str
        """

        self._team = team

    @property
    def team_id(self):
        """Gets the team_id of this PlayerMatch.


        :return: The team_id of this PlayerMatch.
        :rtype: int
        """
        return self._team_id

    @team_id.setter
    def team_id(self, team_id):
        """Sets the team_id of this PlayerMatch.


        :param team_id: The team_id of this PlayerMatch.
        :type team_id: int
        """

        self._team_id = team_id

    @property
    def ten_kills_or_assists(self):
        """Gets the ten_kills_or_assists of this PlayerMatch.


        :return: The ten_kills_or_assists of this PlayerMatch.
        :rtype: float
        """
        return self._ten_kills_or_assists

    @ten_kills_or_assists.setter
    def ten_kills_or_assists(self, ten_kills_or_assists):
        """Sets the ten_kills_or_assists of this PlayerMatch.


        :param ten_kills_or_assists: The ten_kills_or_assists of this PlayerMatch.
        :type ten_kills_or_assists: float
        """

        self._ten_kills_or_assists = ten_kills_or_assists

    @property
    def total_damage_dealt(self):
        """Gets the total_damage_dealt of this PlayerMatch.


        :return: The total_damage_dealt of this PlayerMatch.
        :rtype: float
        """
        return self._total_damage_dealt

    @total_damage_dealt.setter
    def total_damage_dealt(self, total_damage_dealt):
        """Sets the total_damage_dealt of this PlayerMatch.


        :param total_damage_dealt: The total_damage_dealt of this PlayerMatch.
        :type total_damage_dealt: float
        """

        self._total_damage_dealt = total_damage_dealt

    @property
    def total_damage_dealt_to_champions(self):
        """Gets the total_damage_dealt_to_champions of this PlayerMatch.


        :return: The total_damage_dealt_to_champions of this PlayerMatch.
        :rtype: float
        """
        return self._total_damage_dealt_to_champions

    @total_damage_dealt_to_champions.setter
    def total_damage_dealt_to_champions(self, total_damage_dealt_to_champions):
        """Sets the total_damage_dealt_to_champions of this PlayerMatch.


        :param total_damage_dealt_to_champions: The total_damage_dealt_to_champions of this PlayerMatch.
        :type total_damage_dealt_to_champions: float
        """

        self._total_damage_dealt_to_champions = total_damage_dealt_to_champions

    @property
    def total_damage_taken(self):
        """Gets the total_damage_taken of this PlayerMatch.


        :return: The total_damage_taken of this PlayerMatch.
        :rtype: float
        """
        return self._total_damage_taken

    @total_damage_taken.setter
    def total_damage_taken(self, total_damage_taken):
        """Sets the total_damage_taken of this PlayerMatch.


        :param total_damage_taken: The total_damage_taken of this PlayerMatch.
        :type total_damage_taken: float
        """

        self._total_damage_taken = total_damage_taken

    @property
    def total_heal(self):
        """Gets the total_heal of this PlayerMatch.


        :return: The total_heal of this PlayerMatch.
        :rtype: float
        """
        return self._total_heal

    @total_heal.setter
    def total_heal(self, total_heal):
        """Sets the total_heal of this PlayerMatch.


        :param total_heal: The total_heal of this PlayerMatch.
        :type total_heal: float
        """

        self._total_heal = total_heal

    @property
    def total_minions_killed(self):
        """Gets the total_minions_killed of this PlayerMatch.


        :return: The total_minions_killed of this PlayerMatch.
        :rtype: float
        """
        return self._total_minions_killed

    @total_minions_killed.setter
    def total_minions_killed(self, total_minions_killed):
        """Sets the total_minions_killed of this PlayerMatch.


        :param total_minions_killed: The total_minions_killed of this PlayerMatch.
        :type total_minions_killed: float
        """

        self._total_minions_killed = total_minions_killed

    @property
    def total_player_score(self):
        """Gets the total_player_score of this PlayerMatch.


        :return: The total_player_score of this PlayerMatch.
        :rtype: float
        """
        return self._total_player_score

    @total_player_score.setter
    def total_player_score(self, total_player_score):
        """Sets the total_player_score of this PlayerMatch.


        :param total_player_score: The total_player_score of this PlayerMatch.
        :type total_player_score: float
        """

        self._total_player_score = total_player_score

    @property
    def total_time_crowd_control_dealt(self):
        """Gets the total_time_crowd_control_dealt of this PlayerMatch.


        :return: The total_time_crowd_control_dealt of this PlayerMatch.
        :rtype: float
        """
        return self._total_time_crowd_control_dealt

    @total_time_crowd_control_dealt.setter
    def total_time_crowd_control_dealt(self, total_time_crowd_control_dealt):
        """Sets the total_time_crowd_control_dealt of this PlayerMatch.


        :param total_time_crowd_control_dealt: The total_time_crowd_control_dealt of this PlayerMatch.
        :type total_time_crowd_control_dealt: float
        """

        self._total_time_crowd_control_dealt = total_time_crowd_control_dealt

    @property
    def total_units_healed(self):
        """Gets the total_units_healed of this PlayerMatch.


        :return: The total_units_healed of this PlayerMatch.
        :rtype: float
        """
        return self._total_units_healed

    @total_units_healed.setter
    def total_units_healed(self, total_units_healed):
        """Sets the total_units_healed of this PlayerMatch.


        :param total_units_healed: The total_units_healed of this PlayerMatch.
        :type total_units_healed: float
        """

        self._total_units_healed = total_units_healed

    @property
    def triple_kills(self):
        """Gets the triple_kills of this PlayerMatch.


        :return: The triple_kills of this PlayerMatch.
        :rtype: float
        """
        return self._triple_kills

    @triple_kills.setter
    def triple_kills(self, triple_kills):
        """Sets the triple_kills of this PlayerMatch.


        :param triple_kills: The triple_kills of this PlayerMatch.
        :type triple_kills: float
        """

        self._triple_kills = triple_kills

    @property
    def true_damage_dealt(self):
        """Gets the true_damage_dealt of this PlayerMatch.


        :return: The true_damage_dealt of this PlayerMatch.
        :rtype: float
        """
        return self._true_damage_dealt

    @true_damage_dealt.setter
    def true_damage_dealt(self, true_damage_dealt):
        """Sets the true_damage_dealt of this PlayerMatch.


        :param true_damage_dealt: The true_damage_dealt of this PlayerMatch.
        :type true_damage_dealt: float
        """

        self._true_damage_dealt = true_damage_dealt

    @property
    def true_damage_dealt_to_champions(self):
        """Gets the true_damage_dealt_to_champions of this PlayerMatch.


        :return: The true_damage_dealt_to_champions of this PlayerMatch.
        :rtype: float
        """
        return self._true_damage_dealt_to_champions

    @true_damage_dealt_to_champions.setter
    def true_damage_dealt_to_champions(self, true_damage_dealt_to_champions):
        """Sets the true_damage_dealt_to_champions of this PlayerMatch.


        :param true_damage_dealt_to_champions: The true_damage_dealt_to_champions of this PlayerMatch.
        :type true_damage_dealt_to_champions: float
        """

        self._true_damage_dealt_to_champions = true_damage_dealt_to_champions

    @property
    def true_damage_taken(self):
        """Gets the true_damage_taken of this PlayerMatch.


        :return: The true_damage_taken of this PlayerMatch.
        :rtype: float
        """
        return self._true_damage_taken

    @true_damage_taken.setter
    def true_damage_taken(self, true_damage_taken):
        """Sets the true_damage_taken of this PlayerMatch.


        :param true_damage_taken: The true_damage_taken of this PlayerMatch.
        :type true_damage_taken: float
        """

        self._true_damage_taken = true_damage_taken

    @property
    def turret_kills(self):
        """Gets the turret_kills of this PlayerMatch.


        :return: The turret_kills of this PlayerMatch.
        :rtype: float
        """
        return self._turret_kills

    @turret_kills.setter
    def turret_kills(self, turret_kills):
        """Sets the turret_kills of this PlayerMatch.


        :param turret_kills: The turret_kills of this PlayerMatch.
        :type turret_kills: float
        """

        self._turret_kills = turret_kills

    @property
    def unreal_kills(self):
        """Gets the unreal_kills of this PlayerMatch.


        :return: The unreal_kills of this PlayerMatch.
        :rtype: float
        """
        return self._unreal_kills

    @unreal_kills.setter
    def unreal_kills(self, unreal_kills):
        """Sets the unreal_kills of this PlayerMatch.


        :param unreal_kills: The unreal_kills of this PlayerMatch.
        :type unreal_kills: float
        """

        self._unreal_kills = unreal_kills

    @property
    def updated(self):
        """Gets the updated of this PlayerMatch.


        :return: The updated of this PlayerMatch.
        :rtype: str
        """
        return self._updated

    @updated.setter
    def updated(self, updated):
        """Sets the updated of this PlayerMatch.


        :param updated: The updated of this PlayerMatch.
        :type updated: str
        """

        self._updated = updated

    @property
    def vision_wards_bought_in_game(self):
        """Gets the vision_wards_bought_in_game of this PlayerMatch.


        :return: The vision_wards_bought_in_game of this PlayerMatch.
        :rtype: float
        """
        return self._vision_wards_bought_in_game

    @vision_wards_bought_in_game.setter
    def vision_wards_bought_in_game(self, vision_wards_bought_in_game):
        """Sets the vision_wards_bought_in_game of this PlayerMatch.


        :param vision_wards_bought_in_game: The vision_wards_bought_in_game of this PlayerMatch.
        :type vision_wards_bought_in_game: float
        """

        self._vision_wards_bought_in_game = vision_wards_bought_in_game

    @property
    def wards_killed(self):
        """Gets the wards_killed of this PlayerMatch.


        :return: The wards_killed of this PlayerMatch.
        :rtype: float
        """
        return self._wards_killed

    @wards_killed.setter
    def wards_killed(self, wards_killed):
        """Sets the wards_killed of this PlayerMatch.


        :param wards_killed: The wards_killed of this PlayerMatch.
        :type wards_killed: float
        """

        self._wards_killed = wards_killed

    @property
    def wards_placed(self):
        """Gets the wards_placed of this PlayerMatch.


        :return: The wards_placed of this PlayerMatch.
        :rtype: float
        """
        return self._wards_placed

    @wards_placed.setter
    def wards_placed(self, wards_placed):
        """Sets the wards_placed of this PlayerMatch.


        :param wards_placed: The wards_placed of this PlayerMatch.
        :type wards_placed: float
        """

        self._wards_placed = wards_placed
