# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.round import Round
from openapi_server import util


class Season(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, competition_id: int=None, competition_name: str=None, current_season: bool=None, end_date: str=None, name: str=None, rounds: List[Round]=None, season: int=None, season_id: int=None, start_date: str=None):
        """Season - a model defined in OpenAPI

        :param competition_id: The competition_id of this Season.
        :param competition_name: The competition_name of this Season.
        :param current_season: The current_season of this Season.
        :param end_date: The end_date of this Season.
        :param name: The name of this Season.
        :param rounds: The rounds of this Season.
        :param season: The season of this Season.
        :param season_id: The season_id of this Season.
        :param start_date: The start_date of this Season.
        """
        self.openapi_types = {
            'competition_id': int,
            'competition_name': str,
            'current_season': bool,
            'end_date': str,
            'name': str,
            'rounds': List[Round],
            'season': int,
            'season_id': int,
            'start_date': str
        }

        self.attribute_map = {
            'competition_id': 'CompetitionId',
            'competition_name': 'CompetitionName',
            'current_season': 'CurrentSeason',
            'end_date': 'EndDate',
            'name': 'Name',
            'rounds': 'Rounds',
            'season': 'Season',
            'season_id': 'SeasonId',
            'start_date': 'StartDate'
        }

        self._competition_id = competition_id
        self._competition_name = competition_name
        self._current_season = current_season
        self._end_date = end_date
        self._name = name
        self._rounds = rounds
        self._season = season
        self._season_id = season_id
        self._start_date = start_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Season':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Season of this Season.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def competition_id(self):
        """Gets the competition_id of this Season.


        :return: The competition_id of this Season.
        :rtype: int
        """
        return self._competition_id

    @competition_id.setter
    def competition_id(self, competition_id):
        """Sets the competition_id of this Season.


        :param competition_id: The competition_id of this Season.
        :type competition_id: int
        """

        self._competition_id = competition_id

    @property
    def competition_name(self):
        """Gets the competition_name of this Season.


        :return: The competition_name of this Season.
        :rtype: str
        """
        return self._competition_name

    @competition_name.setter
    def competition_name(self, competition_name):
        """Sets the competition_name of this Season.


        :param competition_name: The competition_name of this Season.
        :type competition_name: str
        """

        self._competition_name = competition_name

    @property
    def current_season(self):
        """Gets the current_season of this Season.


        :return: The current_season of this Season.
        :rtype: bool
        """
        return self._current_season

    @current_season.setter
    def current_season(self, current_season):
        """Sets the current_season of this Season.


        :param current_season: The current_season of this Season.
        :type current_season: bool
        """

        self._current_season = current_season

    @property
    def end_date(self):
        """Gets the end_date of this Season.


        :return: The end_date of this Season.
        :rtype: str
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this Season.


        :param end_date: The end_date of this Season.
        :type end_date: str
        """

        self._end_date = end_date

    @property
    def name(self):
        """Gets the name of this Season.


        :return: The name of this Season.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Season.


        :param name: The name of this Season.
        :type name: str
        """

        self._name = name

    @property
    def rounds(self):
        """Gets the rounds of this Season.


        :return: The rounds of this Season.
        :rtype: List[Round]
        """
        return self._rounds

    @rounds.setter
    def rounds(self, rounds):
        """Sets the rounds of this Season.


        :param rounds: The rounds of this Season.
        :type rounds: List[Round]
        """

        self._rounds = rounds

    @property
    def season(self):
        """Gets the season of this Season.


        :return: The season of this Season.
        :rtype: int
        """
        return self._season

    @season.setter
    def season(self, season):
        """Sets the season of this Season.


        :param season: The season of this Season.
        :type season: int
        """

        self._season = season

    @property
    def season_id(self):
        """Gets the season_id of this Season.


        :return: The season_id of this Season.
        :rtype: int
        """
        return self._season_id

    @season_id.setter
    def season_id(self, season_id):
        """Sets the season_id of this Season.


        :param season_id: The season_id of this Season.
        :type season_id: int
        """

        self._season_id = season_id

    @property
    def start_date(self):
        """Gets the start_date of this Season.


        :return: The start_date of this Season.
        :rtype: str
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this Season.


        :param start_date: The start_date of this Season.
        :type start_date: str
        """

        self._start_date = start_date
