/**
 * LoL v3 Stats
 * LoL v3 Stats
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIChampion.h
 *
 * 
 */

#ifndef OAIChampion_H
#define OAIChampion_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIChampion : public OAIObject {
public:
    OAIChampion();
    OAIChampion(QString json);
    ~OAIChampion() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getArmor() const;
    void setArmor(const double &armor);
    bool is_armor_Set() const;
    bool is_armor_Valid() const;

    double getArmorPerLevel() const;
    void setArmorPerLevel(const double &armor_per_level);
    bool is_armor_per_level_Set() const;
    bool is_armor_per_level_Valid() const;

    double getAttack() const;
    void setAttack(const double &attack);
    bool is_attack_Set() const;
    bool is_attack_Valid() const;

    double getAttackDamage() const;
    void setAttackDamage(const double &attack_damage);
    bool is_attack_damage_Set() const;
    bool is_attack_damage_Valid() const;

    double getAttackDamagePerLevel() const;
    void setAttackDamagePerLevel(const double &attack_damage_per_level);
    bool is_attack_damage_per_level_Set() const;
    bool is_attack_damage_per_level_Valid() const;

    double getAttackRange() const;
    void setAttackRange(const double &attack_range);
    bool is_attack_range_Set() const;
    bool is_attack_range_Valid() const;

    double getAttackSpeedOffset() const;
    void setAttackSpeedOffset(const double &attack_speed_offset);
    bool is_attack_speed_offset_Set() const;
    bool is_attack_speed_offset_Valid() const;

    qint32 getChampionId() const;
    void setChampionId(const qint32 &champion_id);
    bool is_champion_id_Set() const;
    bool is_champion_id_Valid() const;

    double getDefense() const;
    void setDefense(const double &defense);
    bool is_defense_Set() const;
    bool is_defense_Valid() const;

    double getDifficulty() const;
    void setDifficulty(const double &difficulty);
    bool is_difficulty_Set() const;
    bool is_difficulty_Valid() const;

    double getHp() const;
    void setHp(const double &hp);
    bool is_hp_Set() const;
    bool is_hp_Valid() const;

    double getHpRegen() const;
    void setHpRegen(const double &hp_regen);
    bool is_hp_regen_Set() const;
    bool is_hp_regen_Valid() const;

    double getHpRegenPerLevel() const;
    void setHpRegenPerLevel(const double &hp_regen_per_level);
    bool is_hp_regen_per_level_Set() const;
    bool is_hp_regen_per_level_Valid() const;

    double getHpUpPerLevel() const;
    void setHpUpPerLevel(const double &hp_up_per_level);
    bool is_hp_up_per_level_Set() const;
    bool is_hp_up_per_level_Valid() const;

    double getMagic() const;
    void setMagic(const double &magic);
    bool is_magic_Set() const;
    bool is_magic_Valid() const;

    double getMoveSpeed() const;
    void setMoveSpeed(const double &move_speed);
    bool is_move_speed_Set() const;
    bool is_move_speed_Valid() const;

    double getMp() const;
    void setMp(const double &mp);
    bool is_mp_Set() const;
    bool is_mp_Valid() const;

    double getMpRegen() const;
    void setMpRegen(const double &mp_regen);
    bool is_mp_regen_Set() const;
    bool is_mp_regen_Valid() const;

    double getMpRegenPerLevel() const;
    void setMpRegenPerLevel(const double &mp_regen_per_level);
    bool is_mp_regen_per_level_Set() const;
    bool is_mp_regen_per_level_Valid() const;

    double getMpUpPerLevel() const;
    void setMpUpPerLevel(const double &mp_up_per_level);
    bool is_mp_up_per_level_Set() const;
    bool is_mp_up_per_level_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    double getSpellBlock() const;
    void setSpellBlock(const double &spell_block);
    bool is_spell_block_Set() const;
    bool is_spell_block_Valid() const;

    double getSpellBlockPerLevel() const;
    void setSpellBlockPerLevel(const double &spell_block_per_level);
    bool is_spell_block_per_level_Set() const;
    bool is_spell_block_per_level_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_armor;
    bool m_armor_isSet;
    bool m_armor_isValid;

    double m_armor_per_level;
    bool m_armor_per_level_isSet;
    bool m_armor_per_level_isValid;

    double m_attack;
    bool m_attack_isSet;
    bool m_attack_isValid;

    double m_attack_damage;
    bool m_attack_damage_isSet;
    bool m_attack_damage_isValid;

    double m_attack_damage_per_level;
    bool m_attack_damage_per_level_isSet;
    bool m_attack_damage_per_level_isValid;

    double m_attack_range;
    bool m_attack_range_isSet;
    bool m_attack_range_isValid;

    double m_attack_speed_offset;
    bool m_attack_speed_offset_isSet;
    bool m_attack_speed_offset_isValid;

    qint32 m_champion_id;
    bool m_champion_id_isSet;
    bool m_champion_id_isValid;

    double m_defense;
    bool m_defense_isSet;
    bool m_defense_isValid;

    double m_difficulty;
    bool m_difficulty_isSet;
    bool m_difficulty_isValid;

    double m_hp;
    bool m_hp_isSet;
    bool m_hp_isValid;

    double m_hp_regen;
    bool m_hp_regen_isSet;
    bool m_hp_regen_isValid;

    double m_hp_regen_per_level;
    bool m_hp_regen_per_level_isSet;
    bool m_hp_regen_per_level_isValid;

    double m_hp_up_per_level;
    bool m_hp_up_per_level_isSet;
    bool m_hp_up_per_level_isValid;

    double m_magic;
    bool m_magic_isSet;
    bool m_magic_isValid;

    double m_move_speed;
    bool m_move_speed_isSet;
    bool m_move_speed_isValid;

    double m_mp;
    bool m_mp_isSet;
    bool m_mp_isValid;

    double m_mp_regen;
    bool m_mp_regen_isSet;
    bool m_mp_regen_isValid;

    double m_mp_regen_per_level;
    bool m_mp_regen_per_level_isSet;
    bool m_mp_regen_per_level_isValid;

    double m_mp_up_per_level;
    bool m_mp_up_per_level_isSet;
    bool m_mp_up_per_level_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    double m_spell_block;
    bool m_spell_block_isSet;
    bool m_spell_block_isValid;

    double m_spell_block_per_level;
    bool m_spell_block_per_level_isSet;
    bool m_spell_block_per_level_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIChampion)

#endif // OAIChampion_H
