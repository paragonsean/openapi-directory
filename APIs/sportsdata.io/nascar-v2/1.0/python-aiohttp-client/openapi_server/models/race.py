# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Race(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, actual_laps: int=None, broadcast: str=None, canceled: bool=None, created: str=None, date_time: str=None, day: str=None, is_in_progress: bool=None, is_over: bool=None, name: str=None, pole_winner_id: int=None, race_id: int=None, rescheduled_date_time: str=None, rescheduled_day: str=None, scheduled_laps: int=None, season: int=None, series_id: int=None, series_name: str=None, track: str=None, updated: str=None, winner_id: int=None):
        """Race - a model defined in OpenAPI

        :param actual_laps: The actual_laps of this Race.
        :param broadcast: The broadcast of this Race.
        :param canceled: The canceled of this Race.
        :param created: The created of this Race.
        :param date_time: The date_time of this Race.
        :param day: The day of this Race.
        :param is_in_progress: The is_in_progress of this Race.
        :param is_over: The is_over of this Race.
        :param name: The name of this Race.
        :param pole_winner_id: The pole_winner_id of this Race.
        :param race_id: The race_id of this Race.
        :param rescheduled_date_time: The rescheduled_date_time of this Race.
        :param rescheduled_day: The rescheduled_day of this Race.
        :param scheduled_laps: The scheduled_laps of this Race.
        :param season: The season of this Race.
        :param series_id: The series_id of this Race.
        :param series_name: The series_name of this Race.
        :param track: The track of this Race.
        :param updated: The updated of this Race.
        :param winner_id: The winner_id of this Race.
        """
        self.openapi_types = {
            'actual_laps': int,
            'broadcast': str,
            'canceled': bool,
            'created': str,
            'date_time': str,
            'day': str,
            'is_in_progress': bool,
            'is_over': bool,
            'name': str,
            'pole_winner_id': int,
            'race_id': int,
            'rescheduled_date_time': str,
            'rescheduled_day': str,
            'scheduled_laps': int,
            'season': int,
            'series_id': int,
            'series_name': str,
            'track': str,
            'updated': str,
            'winner_id': int
        }

        self.attribute_map = {
            'actual_laps': 'ActualLaps',
            'broadcast': 'Broadcast',
            'canceled': 'Canceled',
            'created': 'Created',
            'date_time': 'DateTime',
            'day': 'Day',
            'is_in_progress': 'IsInProgress',
            'is_over': 'IsOver',
            'name': 'Name',
            'pole_winner_id': 'PoleWinnerID',
            'race_id': 'RaceID',
            'rescheduled_date_time': 'RescheduledDateTime',
            'rescheduled_day': 'RescheduledDay',
            'scheduled_laps': 'ScheduledLaps',
            'season': 'Season',
            'series_id': 'SeriesID',
            'series_name': 'SeriesName',
            'track': 'Track',
            'updated': 'Updated',
            'winner_id': 'WinnerID'
        }

        self._actual_laps = actual_laps
        self._broadcast = broadcast
        self._canceled = canceled
        self._created = created
        self._date_time = date_time
        self._day = day
        self._is_in_progress = is_in_progress
        self._is_over = is_over
        self._name = name
        self._pole_winner_id = pole_winner_id
        self._race_id = race_id
        self._rescheduled_date_time = rescheduled_date_time
        self._rescheduled_day = rescheduled_day
        self._scheduled_laps = scheduled_laps
        self._season = season
        self._series_id = series_id
        self._series_name = series_name
        self._track = track
        self._updated = updated
        self._winner_id = winner_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Race':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Race of this Race.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def actual_laps(self):
        """Gets the actual_laps of this Race.


        :return: The actual_laps of this Race.
        :rtype: int
        """
        return self._actual_laps

    @actual_laps.setter
    def actual_laps(self, actual_laps):
        """Sets the actual_laps of this Race.


        :param actual_laps: The actual_laps of this Race.
        :type actual_laps: int
        """

        self._actual_laps = actual_laps

    @property
    def broadcast(self):
        """Gets the broadcast of this Race.


        :return: The broadcast of this Race.
        :rtype: str
        """
        return self._broadcast

    @broadcast.setter
    def broadcast(self, broadcast):
        """Sets the broadcast of this Race.


        :param broadcast: The broadcast of this Race.
        :type broadcast: str
        """

        self._broadcast = broadcast

    @property
    def canceled(self):
        """Gets the canceled of this Race.


        :return: The canceled of this Race.
        :rtype: bool
        """
        return self._canceled

    @canceled.setter
    def canceled(self, canceled):
        """Sets the canceled of this Race.


        :param canceled: The canceled of this Race.
        :type canceled: bool
        """

        self._canceled = canceled

    @property
    def created(self):
        """Gets the created of this Race.


        :return: The created of this Race.
        :rtype: str
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this Race.


        :param created: The created of this Race.
        :type created: str
        """

        self._created = created

    @property
    def date_time(self):
        """Gets the date_time of this Race.


        :return: The date_time of this Race.
        :rtype: str
        """
        return self._date_time

    @date_time.setter
    def date_time(self, date_time):
        """Sets the date_time of this Race.


        :param date_time: The date_time of this Race.
        :type date_time: str
        """

        self._date_time = date_time

    @property
    def day(self):
        """Gets the day of this Race.


        :return: The day of this Race.
        :rtype: str
        """
        return self._day

    @day.setter
    def day(self, day):
        """Sets the day of this Race.


        :param day: The day of this Race.
        :type day: str
        """

        self._day = day

    @property
    def is_in_progress(self):
        """Gets the is_in_progress of this Race.


        :return: The is_in_progress of this Race.
        :rtype: bool
        """
        return self._is_in_progress

    @is_in_progress.setter
    def is_in_progress(self, is_in_progress):
        """Sets the is_in_progress of this Race.


        :param is_in_progress: The is_in_progress of this Race.
        :type is_in_progress: bool
        """

        self._is_in_progress = is_in_progress

    @property
    def is_over(self):
        """Gets the is_over of this Race.


        :return: The is_over of this Race.
        :rtype: bool
        """
        return self._is_over

    @is_over.setter
    def is_over(self, is_over):
        """Sets the is_over of this Race.


        :param is_over: The is_over of this Race.
        :type is_over: bool
        """

        self._is_over = is_over

    @property
    def name(self):
        """Gets the name of this Race.


        :return: The name of this Race.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Race.


        :param name: The name of this Race.
        :type name: str
        """

        self._name = name

    @property
    def pole_winner_id(self):
        """Gets the pole_winner_id of this Race.


        :return: The pole_winner_id of this Race.
        :rtype: int
        """
        return self._pole_winner_id

    @pole_winner_id.setter
    def pole_winner_id(self, pole_winner_id):
        """Sets the pole_winner_id of this Race.


        :param pole_winner_id: The pole_winner_id of this Race.
        :type pole_winner_id: int
        """

        self._pole_winner_id = pole_winner_id

    @property
    def race_id(self):
        """Gets the race_id of this Race.


        :return: The race_id of this Race.
        :rtype: int
        """
        return self._race_id

    @race_id.setter
    def race_id(self, race_id):
        """Sets the race_id of this Race.


        :param race_id: The race_id of this Race.
        :type race_id: int
        """

        self._race_id = race_id

    @property
    def rescheduled_date_time(self):
        """Gets the rescheduled_date_time of this Race.


        :return: The rescheduled_date_time of this Race.
        :rtype: str
        """
        return self._rescheduled_date_time

    @rescheduled_date_time.setter
    def rescheduled_date_time(self, rescheduled_date_time):
        """Sets the rescheduled_date_time of this Race.


        :param rescheduled_date_time: The rescheduled_date_time of this Race.
        :type rescheduled_date_time: str
        """

        self._rescheduled_date_time = rescheduled_date_time

    @property
    def rescheduled_day(self):
        """Gets the rescheduled_day of this Race.


        :return: The rescheduled_day of this Race.
        :rtype: str
        """
        return self._rescheduled_day

    @rescheduled_day.setter
    def rescheduled_day(self, rescheduled_day):
        """Sets the rescheduled_day of this Race.


        :param rescheduled_day: The rescheduled_day of this Race.
        :type rescheduled_day: str
        """

        self._rescheduled_day = rescheduled_day

    @property
    def scheduled_laps(self):
        """Gets the scheduled_laps of this Race.


        :return: The scheduled_laps of this Race.
        :rtype: int
        """
        return self._scheduled_laps

    @scheduled_laps.setter
    def scheduled_laps(self, scheduled_laps):
        """Sets the scheduled_laps of this Race.


        :param scheduled_laps: The scheduled_laps of this Race.
        :type scheduled_laps: int
        """

        self._scheduled_laps = scheduled_laps

    @property
    def season(self):
        """Gets the season of this Race.


        :return: The season of this Race.
        :rtype: int
        """
        return self._season

    @season.setter
    def season(self, season):
        """Sets the season of this Race.


        :param season: The season of this Race.
        :type season: int
        """

        self._season = season

    @property
    def series_id(self):
        """Gets the series_id of this Race.


        :return: The series_id of this Race.
        :rtype: int
        """
        return self._series_id

    @series_id.setter
    def series_id(self, series_id):
        """Sets the series_id of this Race.


        :param series_id: The series_id of this Race.
        :type series_id: int
        """

        self._series_id = series_id

    @property
    def series_name(self):
        """Gets the series_name of this Race.


        :return: The series_name of this Race.
        :rtype: str
        """
        return self._series_name

    @series_name.setter
    def series_name(self, series_name):
        """Sets the series_name of this Race.


        :param series_name: The series_name of this Race.
        :type series_name: str
        """

        self._series_name = series_name

    @property
    def track(self):
        """Gets the track of this Race.


        :return: The track of this Race.
        :rtype: str
        """
        return self._track

    @track.setter
    def track(self, track):
        """Sets the track of this Race.


        :param track: The track of this Race.
        :type track: str
        """

        self._track = track

    @property
    def updated(self):
        """Gets the updated of this Race.


        :return: The updated of this Race.
        :rtype: str
        """
        return self._updated

    @updated.setter
    def updated(self, updated):
        """Sets the updated of this Race.


        :param updated: The updated of this Race.
        :type updated: str
        """

        self._updated = updated

    @property
    def winner_id(self):
        """Gets the winner_id of this Race.


        :return: The winner_id of this Race.
        :rtype: int
        """
        return self._winner_id

    @winner_id.setter
    def winner_id(self, winner_id):
        """Sets the winner_id of this Race.


        :param winner_id: The winner_id of this Race.
        :type winner_id: int
        """

        self._winner_id = winner_id
