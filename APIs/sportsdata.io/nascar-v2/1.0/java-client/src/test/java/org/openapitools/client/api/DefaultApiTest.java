/*
 * NASCAR v2
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Driver;
import org.openapitools.client.model.DriverRaceProjection;
import org.openapitools.client.model.Race;
import org.openapitools.client.model.RaceResult;
import org.openapitools.client.model.Series;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Driver Details
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void driverDetailsTest() throws ApiException {
        String format = null;
        String driverid = null;
        Driver response = api.driverDetails(format, driverid);
        // TODO: test validations
    }

    /**
     * Driver Race Projections (Entry List)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void driverRaceProjectionsEntryListTest() throws ApiException {
        String format = null;
        String raceid = null;
        List<DriverRaceProjection> response = api.driverRaceProjectionsEntryList(format, raceid);
        // TODO: test validations
    }

    /**
     * Drivers
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void driversTest() throws ApiException {
        String format = null;
        List<Driver> response = api.drivers(format);
        // TODO: test validations
    }

    /**
     * Race Results
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void raceResultsTest() throws ApiException {
        String format = null;
        String raceid = null;
        RaceResult response = api.raceResults(format, raceid);
        // TODO: test validations
    }

    /**
     * Races / Schedule
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void racesScheduleTest() throws ApiException {
        String format = null;
        String season = null;
        List<Race> response = api.racesSchedule(format, season);
        // TODO: test validations
    }

    /**
     * Series
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void seriesTest() throws ApiException {
        String format = null;
        List<Series> response = api.series(format);
        // TODO: test validations
    }

}
