/*
 * NASCAR v2
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DriverRaceProjection
 */
public class DriverRaceProjectionTest {
    private final DriverRaceProjection model = new DriverRaceProjection();

    /**
     * Model tests for DriverRaceProjection
     */
    @Test
    public void testDriverRaceProjection() {
        // TODO: test DriverRaceProjection
    }

    /**
     * Test the property 'bonus'
     */
    @Test
    public void bonusTest() {
        // TODO: test bonus
    }

    /**
     * Test the property 'created'
     */
    @Test
    public void createdTest() {
        // TODO: test created
    }

    /**
     * Test the property 'currentPosition'
     */
    @Test
    public void currentPositionTest() {
        // TODO: test currentPosition
    }

    /**
     * Test the property 'dateTime'
     */
    @Test
    public void dateTimeTest() {
        // TODO: test dateTime
    }

    /**
     * Test the property 'day'
     */
    @Test
    public void dayTest() {
        // TODO: test day
    }

    /**
     * Test the property 'draftKingsSalary'
     */
    @Test
    public void draftKingsSalaryTest() {
        // TODO: test draftKingsSalary
    }

    /**
     * Test the property 'driverID'
     */
    @Test
    public void driverIDTest() {
        // TODO: test driverID
    }

    /**
     * Test the property 'fantasyPoints'
     */
    @Test
    public void fantasyPointsTest() {
        // TODO: test fantasyPoints
    }

    /**
     * Test the property 'fantasyPointsDraftKings'
     */
    @Test
    public void fantasyPointsDraftKingsTest() {
        // TODO: test fantasyPointsDraftKings
    }

    /**
     * Test the property 'fastestLaps'
     */
    @Test
    public void fastestLapsTest() {
        // TODO: test fastestLaps
    }

    /**
     * Test the property 'finalPosition'
     */
    @Test
    public void finalPositionTest() {
        // TODO: test finalPosition
    }

    /**
     * Test the property 'laps'
     */
    @Test
    public void lapsTest() {
        // TODO: test laps
    }

    /**
     * Test the property 'lapsLed'
     */
    @Test
    public void lapsLedTest() {
        // TODO: test lapsLed
    }

    /**
     * Test the property 'manufacturer'
     */
    @Test
    public void manufacturerTest() {
        // TODO: test manufacturer
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'number'
     */
    @Test
    public void numberTest() {
        // TODO: test number
    }

    /**
     * Test the property 'numberDisplay'
     */
    @Test
    public void numberDisplayTest() {
        // TODO: test numberDisplay
    }

    /**
     * Test the property 'penalty'
     */
    @Test
    public void penaltyTest() {
        // TODO: test penalty
    }

    /**
     * Test the property 'points'
     */
    @Test
    public void pointsTest() {
        // TODO: test points
    }

    /**
     * Test the property 'poleFinalPosition'
     */
    @Test
    public void poleFinalPositionTest() {
        // TODO: test poleFinalPosition
    }

    /**
     * Test the property 'poles'
     */
    @Test
    public void polesTest() {
        // TODO: test poles
    }

    /**
     * Test the property 'positionDifferential'
     */
    @Test
    public void positionDifferentialTest() {
        // TODO: test positionDifferential
    }

    /**
     * Test the property 'qualifyingSpeed'
     */
    @Test
    public void qualifyingSpeedTest() {
        // TODO: test qualifyingSpeed
    }

    /**
     * Test the property 'raceID'
     */
    @Test
    public void raceIDTest() {
        // TODO: test raceID
    }

    /**
     * Test the property 'season'
     */
    @Test
    public void seasonTest() {
        // TODO: test season
    }

    /**
     * Test the property 'startPosition'
     */
    @Test
    public void startPositionTest() {
        // TODO: test startPosition
    }

    /**
     * Test the property 'statID'
     */
    @Test
    public void statIDTest() {
        // TODO: test statID
    }

    /**
     * Test the property 'updated'
     */
    @Test
    public void updatedTest() {
        // TODO: test updated
    }

    /**
     * Test the property 'wins'
     */
    @Test
    public void winsTest() {
        // TODO: test wins
    }

}
