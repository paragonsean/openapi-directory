/**
 * NASCAR v2
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NascarV2);
  }
}(this, function(expect, NascarV2) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NascarV2.DriverRaceProjection();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DriverRaceProjection', function() {
    it('should create an instance of DriverRaceProjection', function() {
      // uncomment below and update the code to test DriverRaceProjection
      //var instance = new NascarV2.DriverRaceProjection();
      //expect(instance).to.be.a(NascarV2.DriverRaceProjection);
    });

    it('should have the property bonus (base name: "Bonus")', function() {
      // uncomment below and update the code to test the property bonus
      //var instance = new NascarV2.DriverRaceProjection();
      //expect(instance).to.be();
    });

    it('should have the property created (base name: "Created")', function() {
      // uncomment below and update the code to test the property created
      //var instance = new NascarV2.DriverRaceProjection();
      //expect(instance).to.be();
    });

    it('should have the property currentPosition (base name: "CurrentPosition")', function() {
      // uncomment below and update the code to test the property currentPosition
      //var instance = new NascarV2.DriverRaceProjection();
      //expect(instance).to.be();
    });

    it('should have the property dateTime (base name: "DateTime")', function() {
      // uncomment below and update the code to test the property dateTime
      //var instance = new NascarV2.DriverRaceProjection();
      //expect(instance).to.be();
    });

    it('should have the property day (base name: "Day")', function() {
      // uncomment below and update the code to test the property day
      //var instance = new NascarV2.DriverRaceProjection();
      //expect(instance).to.be();
    });

    it('should have the property draftKingsSalary (base name: "DraftKingsSalary")', function() {
      // uncomment below and update the code to test the property draftKingsSalary
      //var instance = new NascarV2.DriverRaceProjection();
      //expect(instance).to.be();
    });

    it('should have the property driverID (base name: "DriverID")', function() {
      // uncomment below and update the code to test the property driverID
      //var instance = new NascarV2.DriverRaceProjection();
      //expect(instance).to.be();
    });

    it('should have the property fantasyPoints (base name: "FantasyPoints")', function() {
      // uncomment below and update the code to test the property fantasyPoints
      //var instance = new NascarV2.DriverRaceProjection();
      //expect(instance).to.be();
    });

    it('should have the property fantasyPointsDraftKings (base name: "FantasyPointsDraftKings")', function() {
      // uncomment below and update the code to test the property fantasyPointsDraftKings
      //var instance = new NascarV2.DriverRaceProjection();
      //expect(instance).to.be();
    });

    it('should have the property fastestLaps (base name: "FastestLaps")', function() {
      // uncomment below and update the code to test the property fastestLaps
      //var instance = new NascarV2.DriverRaceProjection();
      //expect(instance).to.be();
    });

    it('should have the property finalPosition (base name: "FinalPosition")', function() {
      // uncomment below and update the code to test the property finalPosition
      //var instance = new NascarV2.DriverRaceProjection();
      //expect(instance).to.be();
    });

    it('should have the property laps (base name: "Laps")', function() {
      // uncomment below and update the code to test the property laps
      //var instance = new NascarV2.DriverRaceProjection();
      //expect(instance).to.be();
    });

    it('should have the property lapsLed (base name: "LapsLed")', function() {
      // uncomment below and update the code to test the property lapsLed
      //var instance = new NascarV2.DriverRaceProjection();
      //expect(instance).to.be();
    });

    it('should have the property manufacturer (base name: "Manufacturer")', function() {
      // uncomment below and update the code to test the property manufacturer
      //var instance = new NascarV2.DriverRaceProjection();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "Name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new NascarV2.DriverRaceProjection();
      //expect(instance).to.be();
    });

    it('should have the property number (base name: "Number")', function() {
      // uncomment below and update the code to test the property number
      //var instance = new NascarV2.DriverRaceProjection();
      //expect(instance).to.be();
    });

    it('should have the property numberDisplay (base name: "NumberDisplay")', function() {
      // uncomment below and update the code to test the property numberDisplay
      //var instance = new NascarV2.DriverRaceProjection();
      //expect(instance).to.be();
    });

    it('should have the property penalty (base name: "Penalty")', function() {
      // uncomment below and update the code to test the property penalty
      //var instance = new NascarV2.DriverRaceProjection();
      //expect(instance).to.be();
    });

    it('should have the property points (base name: "Points")', function() {
      // uncomment below and update the code to test the property points
      //var instance = new NascarV2.DriverRaceProjection();
      //expect(instance).to.be();
    });

    it('should have the property poleFinalPosition (base name: "PoleFinalPosition")', function() {
      // uncomment below and update the code to test the property poleFinalPosition
      //var instance = new NascarV2.DriverRaceProjection();
      //expect(instance).to.be();
    });

    it('should have the property poles (base name: "Poles")', function() {
      // uncomment below and update the code to test the property poles
      //var instance = new NascarV2.DriverRaceProjection();
      //expect(instance).to.be();
    });

    it('should have the property positionDifferential (base name: "PositionDifferential")', function() {
      // uncomment below and update the code to test the property positionDifferential
      //var instance = new NascarV2.DriverRaceProjection();
      //expect(instance).to.be();
    });

    it('should have the property qualifyingSpeed (base name: "QualifyingSpeed")', function() {
      // uncomment below and update the code to test the property qualifyingSpeed
      //var instance = new NascarV2.DriverRaceProjection();
      //expect(instance).to.be();
    });

    it('should have the property raceID (base name: "RaceID")', function() {
      // uncomment below and update the code to test the property raceID
      //var instance = new NascarV2.DriverRaceProjection();
      //expect(instance).to.be();
    });

    it('should have the property season (base name: "Season")', function() {
      // uncomment below and update the code to test the property season
      //var instance = new NascarV2.DriverRaceProjection();
      //expect(instance).to.be();
    });

    it('should have the property startPosition (base name: "StartPosition")', function() {
      // uncomment below and update the code to test the property startPosition
      //var instance = new NascarV2.DriverRaceProjection();
      //expect(instance).to.be();
    });

    it('should have the property statID (base name: "StatID")', function() {
      // uncomment below and update the code to test the property statID
      //var instance = new NascarV2.DriverRaceProjection();
      //expect(instance).to.be();
    });

    it('should have the property updated (base name: "Updated")', function() {
      // uncomment below and update the code to test the property updated
      //var instance = new NascarV2.DriverRaceProjection();
      //expect(instance).to.be();
    });

    it('should have the property wins (base name: "Wins")', function() {
      // uncomment below and update the code to test the property wins
      //var instance = new NascarV2.DriverRaceProjection();
      //expect(instance).to.be();
    });

  });

}));
