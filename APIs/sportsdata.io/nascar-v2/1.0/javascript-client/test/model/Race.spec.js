/**
 * NASCAR v2
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NascarV2);
  }
}(this, function(expect, NascarV2) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NascarV2.Race();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Race', function() {
    it('should create an instance of Race', function() {
      // uncomment below and update the code to test Race
      //var instance = new NascarV2.Race();
      //expect(instance).to.be.a(NascarV2.Race);
    });

    it('should have the property actualLaps (base name: "ActualLaps")', function() {
      // uncomment below and update the code to test the property actualLaps
      //var instance = new NascarV2.Race();
      //expect(instance).to.be();
    });

    it('should have the property broadcast (base name: "Broadcast")', function() {
      // uncomment below and update the code to test the property broadcast
      //var instance = new NascarV2.Race();
      //expect(instance).to.be();
    });

    it('should have the property canceled (base name: "Canceled")', function() {
      // uncomment below and update the code to test the property canceled
      //var instance = new NascarV2.Race();
      //expect(instance).to.be();
    });

    it('should have the property created (base name: "Created")', function() {
      // uncomment below and update the code to test the property created
      //var instance = new NascarV2.Race();
      //expect(instance).to.be();
    });

    it('should have the property dateTime (base name: "DateTime")', function() {
      // uncomment below and update the code to test the property dateTime
      //var instance = new NascarV2.Race();
      //expect(instance).to.be();
    });

    it('should have the property day (base name: "Day")', function() {
      // uncomment below and update the code to test the property day
      //var instance = new NascarV2.Race();
      //expect(instance).to.be();
    });

    it('should have the property isInProgress (base name: "IsInProgress")', function() {
      // uncomment below and update the code to test the property isInProgress
      //var instance = new NascarV2.Race();
      //expect(instance).to.be();
    });

    it('should have the property isOver (base name: "IsOver")', function() {
      // uncomment below and update the code to test the property isOver
      //var instance = new NascarV2.Race();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "Name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new NascarV2.Race();
      //expect(instance).to.be();
    });

    it('should have the property poleWinnerID (base name: "PoleWinnerID")', function() {
      // uncomment below and update the code to test the property poleWinnerID
      //var instance = new NascarV2.Race();
      //expect(instance).to.be();
    });

    it('should have the property raceID (base name: "RaceID")', function() {
      // uncomment below and update the code to test the property raceID
      //var instance = new NascarV2.Race();
      //expect(instance).to.be();
    });

    it('should have the property rescheduledDateTime (base name: "RescheduledDateTime")', function() {
      // uncomment below and update the code to test the property rescheduledDateTime
      //var instance = new NascarV2.Race();
      //expect(instance).to.be();
    });

    it('should have the property rescheduledDay (base name: "RescheduledDay")', function() {
      // uncomment below and update the code to test the property rescheduledDay
      //var instance = new NascarV2.Race();
      //expect(instance).to.be();
    });

    it('should have the property scheduledLaps (base name: "ScheduledLaps")', function() {
      // uncomment below and update the code to test the property scheduledLaps
      //var instance = new NascarV2.Race();
      //expect(instance).to.be();
    });

    it('should have the property season (base name: "Season")', function() {
      // uncomment below and update the code to test the property season
      //var instance = new NascarV2.Race();
      //expect(instance).to.be();
    });

    it('should have the property seriesID (base name: "SeriesID")', function() {
      // uncomment below and update the code to test the property seriesID
      //var instance = new NascarV2.Race();
      //expect(instance).to.be();
    });

    it('should have the property seriesName (base name: "SeriesName")', function() {
      // uncomment below and update the code to test the property seriesName
      //var instance = new NascarV2.Race();
      //expect(instance).to.be();
    });

    it('should have the property track (base name: "Track")', function() {
      // uncomment below and update the code to test the property track
      //var instance = new NascarV2.Race();
      //expect(instance).to.be();
    });

    it('should have the property updated (base name: "Updated")', function() {
      // uncomment below and update the code to test the property updated
      //var instance = new NascarV2.Race();
      //expect(instance).to.be();
    });

    it('should have the property winnerID (base name: "WinnerID")', function() {
      // uncomment below and update the code to test the property winnerID
      //var instance = new NascarV2.Race();
      //expect(instance).to.be();
    });

  });

}));
