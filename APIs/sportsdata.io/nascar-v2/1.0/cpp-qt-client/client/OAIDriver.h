/**
 * NASCAR v2
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDriver.h
 *
 * 
 */

#ifndef OAIDriver_H
#define OAIDriver_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDriver : public OAIObject {
public:
    OAIDriver();
    OAIDriver(QString json);
    ~OAIDriver() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBirthDate() const;
    void setBirthDate(const QString &birth_date);
    bool is_birth_date_Set() const;
    bool is_birth_date_Valid() const;

    QString getBirthPlace() const;
    void setBirthPlace(const QString &birth_place);
    bool is_birth_place_Set() const;
    bool is_birth_place_Valid() const;

    QString getChassis() const;
    void setChassis(const QString &chassis);
    bool is_chassis_Set() const;
    bool is_chassis_Valid() const;

    QString getCreated() const;
    void setCreated(const QString &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    QString getCrewChief() const;
    void setCrewChief(const QString &crew_chief);
    bool is_crew_chief_Set() const;
    bool is_crew_chief_Valid() const;

    qint32 getDriverId() const;
    void setDriverId(const qint32 &driver_id);
    bool is_driver_id_Set() const;
    bool is_driver_id_Valid() const;

    QString getEngine() const;
    void setEngine(const QString &engine);
    bool is_engine_Set() const;
    bool is_engine_Valid() const;

    QString getFirstName() const;
    void setFirstName(const QString &first_name);
    bool is_first_name_Set() const;
    bool is_first_name_Valid() const;

    QString getGender() const;
    void setGender(const QString &gender);
    bool is_gender_Set() const;
    bool is_gender_Valid() const;

    qint32 getHeight() const;
    void setHeight(const qint32 &height);
    bool is_height_Set() const;
    bool is_height_Valid() const;

    QString getLastName() const;
    void setLastName(const QString &last_name);
    bool is_last_name_Set() const;
    bool is_last_name_Valid() const;

    QString getManufacturer() const;
    void setManufacturer(const QString &manufacturer);
    bool is_manufacturer_Set() const;
    bool is_manufacturer_Valid() const;

    qint32 getNumber() const;
    void setNumber(const qint32 &number);
    bool is_number_Set() const;
    bool is_number_Valid() const;

    QString getNumberDisplay() const;
    void setNumberDisplay(const QString &number_display);
    bool is_number_display_Set() const;
    bool is_number_display_Valid() const;

    QString getPhotoUrl() const;
    void setPhotoUrl(const QString &photo_url);
    bool is_photo_url_Set() const;
    bool is_photo_url_Valid() const;

    QString getSponsors() const;
    void setSponsors(const QString &sponsors);
    bool is_sponsors_Set() const;
    bool is_sponsors_Valid() const;

    QString getTeam() const;
    void setTeam(const QString &team);
    bool is_team_Set() const;
    bool is_team_Valid() const;

    QString getUpdated() const;
    void setUpdated(const QString &updated);
    bool is_updated_Set() const;
    bool is_updated_Valid() const;

    qint32 getWeight() const;
    void setWeight(const qint32 &weight);
    bool is_weight_Set() const;
    bool is_weight_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_birth_date;
    bool m_birth_date_isSet;
    bool m_birth_date_isValid;

    QString m_birth_place;
    bool m_birth_place_isSet;
    bool m_birth_place_isValid;

    QString m_chassis;
    bool m_chassis_isSet;
    bool m_chassis_isValid;

    QString m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    QString m_crew_chief;
    bool m_crew_chief_isSet;
    bool m_crew_chief_isValid;

    qint32 m_driver_id;
    bool m_driver_id_isSet;
    bool m_driver_id_isValid;

    QString m_engine;
    bool m_engine_isSet;
    bool m_engine_isValid;

    QString m_first_name;
    bool m_first_name_isSet;
    bool m_first_name_isValid;

    QString m_gender;
    bool m_gender_isSet;
    bool m_gender_isValid;

    qint32 m_height;
    bool m_height_isSet;
    bool m_height_isValid;

    QString m_last_name;
    bool m_last_name_isSet;
    bool m_last_name_isValid;

    QString m_manufacturer;
    bool m_manufacturer_isSet;
    bool m_manufacturer_isValid;

    qint32 m_number;
    bool m_number_isSet;
    bool m_number_isValid;

    QString m_number_display;
    bool m_number_display_isSet;
    bool m_number_display_isValid;

    QString m_photo_url;
    bool m_photo_url_isSet;
    bool m_photo_url_isValid;

    QString m_sponsors;
    bool m_sponsors_isSet;
    bool m_sponsors_isValid;

    QString m_team;
    bool m_team_isSet;
    bool m_team_isValid;

    QString m_updated;
    bool m_updated_isSet;
    bool m_updated_isValid;

    qint32 m_weight;
    bool m_weight_isSet;
    bool m_weight_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDriver)

#endif // OAIDriver_H
