/**
 * NASCAR v2
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRace.h
 *
 * 
 */

#ifndef OAIRace_H
#define OAIRace_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRace : public OAIObject {
public:
    OAIRace();
    OAIRace(QString json);
    ~OAIRace() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getActualLaps() const;
    void setActualLaps(const qint32 &actual_laps);
    bool is_actual_laps_Set() const;
    bool is_actual_laps_Valid() const;

    QString getBroadcast() const;
    void setBroadcast(const QString &broadcast);
    bool is_broadcast_Set() const;
    bool is_broadcast_Valid() const;

    bool isCanceled() const;
    void setCanceled(const bool &canceled);
    bool is_canceled_Set() const;
    bool is_canceled_Valid() const;

    QString getCreated() const;
    void setCreated(const QString &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    QString getDateTime() const;
    void setDateTime(const QString &date_time);
    bool is_date_time_Set() const;
    bool is_date_time_Valid() const;

    QString getDay() const;
    void setDay(const QString &day);
    bool is_day_Set() const;
    bool is_day_Valid() const;

    bool isIsInProgress() const;
    void setIsInProgress(const bool &is_in_progress);
    bool is_is_in_progress_Set() const;
    bool is_is_in_progress_Valid() const;

    bool isIsOver() const;
    void setIsOver(const bool &is_over);
    bool is_is_over_Set() const;
    bool is_is_over_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getPoleWinnerId() const;
    void setPoleWinnerId(const qint32 &pole_winner_id);
    bool is_pole_winner_id_Set() const;
    bool is_pole_winner_id_Valid() const;

    qint32 getRaceId() const;
    void setRaceId(const qint32 &race_id);
    bool is_race_id_Set() const;
    bool is_race_id_Valid() const;

    QString getRescheduledDateTime() const;
    void setRescheduledDateTime(const QString &rescheduled_date_time);
    bool is_rescheduled_date_time_Set() const;
    bool is_rescheduled_date_time_Valid() const;

    QString getRescheduledDay() const;
    void setRescheduledDay(const QString &rescheduled_day);
    bool is_rescheduled_day_Set() const;
    bool is_rescheduled_day_Valid() const;

    qint32 getScheduledLaps() const;
    void setScheduledLaps(const qint32 &scheduled_laps);
    bool is_scheduled_laps_Set() const;
    bool is_scheduled_laps_Valid() const;

    qint32 getSeason() const;
    void setSeason(const qint32 &season);
    bool is_season_Set() const;
    bool is_season_Valid() const;

    qint32 getSeriesId() const;
    void setSeriesId(const qint32 &series_id);
    bool is_series_id_Set() const;
    bool is_series_id_Valid() const;

    QString getSeriesName() const;
    void setSeriesName(const QString &series_name);
    bool is_series_name_Set() const;
    bool is_series_name_Valid() const;

    QString getTrack() const;
    void setTrack(const QString &track);
    bool is_track_Set() const;
    bool is_track_Valid() const;

    QString getUpdated() const;
    void setUpdated(const QString &updated);
    bool is_updated_Set() const;
    bool is_updated_Valid() const;

    qint32 getWinnerId() const;
    void setWinnerId(const qint32 &winner_id);
    bool is_winner_id_Set() const;
    bool is_winner_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_actual_laps;
    bool m_actual_laps_isSet;
    bool m_actual_laps_isValid;

    QString m_broadcast;
    bool m_broadcast_isSet;
    bool m_broadcast_isValid;

    bool m_canceled;
    bool m_canceled_isSet;
    bool m_canceled_isValid;

    QString m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    QString m_date_time;
    bool m_date_time_isSet;
    bool m_date_time_isValid;

    QString m_day;
    bool m_day_isSet;
    bool m_day_isValid;

    bool m_is_in_progress;
    bool m_is_in_progress_isSet;
    bool m_is_in_progress_isValid;

    bool m_is_over;
    bool m_is_over_isSet;
    bool m_is_over_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_pole_winner_id;
    bool m_pole_winner_id_isSet;
    bool m_pole_winner_id_isValid;

    qint32 m_race_id;
    bool m_race_id_isSet;
    bool m_race_id_isValid;

    QString m_rescheduled_date_time;
    bool m_rescheduled_date_time_isSet;
    bool m_rescheduled_date_time_isValid;

    QString m_rescheduled_day;
    bool m_rescheduled_day_isSet;
    bool m_rescheduled_day_isValid;

    qint32 m_scheduled_laps;
    bool m_scheduled_laps_isSet;
    bool m_scheduled_laps_isValid;

    qint32 m_season;
    bool m_season_isSet;
    bool m_season_isValid;

    qint32 m_series_id;
    bool m_series_id_isSet;
    bool m_series_id_isValid;

    QString m_series_name;
    bool m_series_name_isSet;
    bool m_series_name_isValid;

    QString m_track;
    bool m_track_isSet;
    bool m_track_isValid;

    QString m_updated;
    bool m_updated_isSet;
    bool m_updated_isValid;

    qint32 m_winner_id;
    bool m_winner_id_isSet;
    bool m_winner_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRace)

#endif // OAIRace_H
