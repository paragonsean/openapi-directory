openapi: 3.0.0
info:
  contact:
    x-twitter: nfldata
  title: NBA v3 RotoBaller Articles
  version: "1.0"
  x-apisguru-categories:
  - entertainment
  x-logo:
    url: https://twitter.com/nfldata/profile_image?size=original
  x-origin:
  - format: swagger
    url: https://fantasydata.com/downloads/swagger/nba-v3-rotoballer-articles.json
    version: "2.0"
  x-providerName: sportsdata.io
  x-serviceName: nba-v3-rotoballer-articles
servers:
- url: http://azure-api.sportsdata.io/v3/nba/articles-rotoballer
- url: https://azure-api.sportsdata.io/v3/nba/articles-rotoballer
security:
- apiKeyHeader: []
- apiKeyQuery: []
paths:
  /{format}/RotoBallerArticles:
    get:
      operationId: RotoballerArticles
      parameters:
      - description: Desired response format. Valid entries are <code>XML</code> or
          <code>JSON</code>.
        explode: false
        in: path
        name: format
        required: true
        schema:
          default: xml
          enum:
          - xml
          - json
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Article'
                type: array
          description: ""
      summary: RotoBaller Articles
      x-accepts:
      - application/json
  /{format}/RotoBallerArticlesByDate/{date}:
    get:
      operationId: RotoballerArticlesByDate
      parameters:
      - description: Desired response format. Valid entries are <code>XML</code> or
          <code>JSON</code>.
        explode: false
        in: path
        name: format
        required: true
        schema:
          default: xml
          enum:
          - xml
          - json
          type: string
        style: simple
      - description: |-
          The date of the news.
          <br>Examples: <code>2017-JUL-31</code>, <code>2017-SEP-01</code>.
        explode: false
        in: path
        name: date
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Article'
                type: array
          description: ""
      summary: RotoBaller Articles by Date
      x-accepts:
      - application/json
  /{format}/RotoBallerArticlesByPlayerID/{playerid}:
    get:
      operationId: RotoballerArticlesByPlayer
      parameters:
      - description: Desired response format. Valid entries are <code>XML</code> or
          <code>JSON</code>.
        explode: false
        in: path
        name: format
        required: true
        schema:
          default: xml
          enum:
          - xml
          - json
          type: string
        style: simple
      - description: |-
          Unique FantasyData Player ID.
          Example:<code>10000507</code>.
        explode: false
        in: path
        name: playerid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Article'
                type: array
          description: ""
      summary: RotoBaller Articles by Player
      x-accepts:
      - application/json
components:
  schemas:
    Article:
      example:
        Updated: Updated
        TermsOfUse: TermsOfUse
        Content: Content
        Author: Author
        Title: Title
        ArticleID: 0
        Source: Source
        Url: Url
        Players:
        - PlayerID: 6
          Position: Position
          Team: Team
          TeamID: 1
          Name: Name
        - PlayerID: 6
          Position: Position
          Team: Team
          TeamID: 1
          Name: Name
      properties:
        ArticleID:
          nullable: false
          type: integer
        Author:
          nullable: true
          type: string
        Content:
          nullable: true
          type: string
        Players:
          items:
            $ref: '#/components/schemas/PlayerInfo'
          type: array
        Source:
          nullable: true
          type: string
        TermsOfUse:
          nullable: true
          type: string
        Title:
          nullable: true
          type: string
        Updated:
          nullable: true
          type: string
        Url:
          nullable: true
          type: string
    PlayerInfo:
      example:
        PlayerID: 6
        Position: Position
        Team: Team
        TeamID: 1
        Name: Name
      properties:
        Name:
          nullable: true
          type: string
        PlayerID:
          nullable: false
          type: integer
        Position:
          nullable: true
          type: string
        Team:
          nullable: true
          type: string
        TeamID:
          nullable: true
          type: integer
  securitySchemes:
    apiKeyHeader:
      in: header
      name: Ocp-Apim-Subscription-Key
      type: apiKey
    apiKeyQuery:
      in: query
      name: key
      type: apiKey

