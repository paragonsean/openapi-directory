# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Team(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active: bool=None, city: str=None, conference: str=None, division: str=None, global_team_id: int=None, key: str=None, name: str=None, primary_color: str=None, quaternary_color: str=None, secondary_color: str=None, stadium_id: int=None, team_id: int=None, tertiary_color: str=None, wikipedia_logo_url: str=None, wikipedia_word_mark_url: str=None):
        """Team - a model defined in OpenAPI

        :param active: The active of this Team.
        :param city: The city of this Team.
        :param conference: The conference of this Team.
        :param division: The division of this Team.
        :param global_team_id: The global_team_id of this Team.
        :param key: The key of this Team.
        :param name: The name of this Team.
        :param primary_color: The primary_color of this Team.
        :param quaternary_color: The quaternary_color of this Team.
        :param secondary_color: The secondary_color of this Team.
        :param stadium_id: The stadium_id of this Team.
        :param team_id: The team_id of this Team.
        :param tertiary_color: The tertiary_color of this Team.
        :param wikipedia_logo_url: The wikipedia_logo_url of this Team.
        :param wikipedia_word_mark_url: The wikipedia_word_mark_url of this Team.
        """
        self.openapi_types = {
            'active': bool,
            'city': str,
            'conference': str,
            'division': str,
            'global_team_id': int,
            'key': str,
            'name': str,
            'primary_color': str,
            'quaternary_color': str,
            'secondary_color': str,
            'stadium_id': int,
            'team_id': int,
            'tertiary_color': str,
            'wikipedia_logo_url': str,
            'wikipedia_word_mark_url': str
        }

        self.attribute_map = {
            'active': 'Active',
            'city': 'City',
            'conference': 'Conference',
            'division': 'Division',
            'global_team_id': 'GlobalTeamID',
            'key': 'Key',
            'name': 'Name',
            'primary_color': 'PrimaryColor',
            'quaternary_color': 'QuaternaryColor',
            'secondary_color': 'SecondaryColor',
            'stadium_id': 'StadiumID',
            'team_id': 'TeamID',
            'tertiary_color': 'TertiaryColor',
            'wikipedia_logo_url': 'WikipediaLogoUrl',
            'wikipedia_word_mark_url': 'WikipediaWordMarkUrl'
        }

        self._active = active
        self._city = city
        self._conference = conference
        self._division = division
        self._global_team_id = global_team_id
        self._key = key
        self._name = name
        self._primary_color = primary_color
        self._quaternary_color = quaternary_color
        self._secondary_color = secondary_color
        self._stadium_id = stadium_id
        self._team_id = team_id
        self._tertiary_color = tertiary_color
        self._wikipedia_logo_url = wikipedia_logo_url
        self._wikipedia_word_mark_url = wikipedia_word_mark_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Team':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Team of this Team.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active(self):
        """Gets the active of this Team.


        :return: The active of this Team.
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this Team.


        :param active: The active of this Team.
        :type active: bool
        """

        self._active = active

    @property
    def city(self):
        """Gets the city of this Team.


        :return: The city of this Team.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this Team.


        :param city: The city of this Team.
        :type city: str
        """

        self._city = city

    @property
    def conference(self):
        """Gets the conference of this Team.


        :return: The conference of this Team.
        :rtype: str
        """
        return self._conference

    @conference.setter
    def conference(self, conference):
        """Sets the conference of this Team.


        :param conference: The conference of this Team.
        :type conference: str
        """

        self._conference = conference

    @property
    def division(self):
        """Gets the division of this Team.


        :return: The division of this Team.
        :rtype: str
        """
        return self._division

    @division.setter
    def division(self, division):
        """Sets the division of this Team.


        :param division: The division of this Team.
        :type division: str
        """

        self._division = division

    @property
    def global_team_id(self):
        """Gets the global_team_id of this Team.


        :return: The global_team_id of this Team.
        :rtype: int
        """
        return self._global_team_id

    @global_team_id.setter
    def global_team_id(self, global_team_id):
        """Sets the global_team_id of this Team.


        :param global_team_id: The global_team_id of this Team.
        :type global_team_id: int
        """

        self._global_team_id = global_team_id

    @property
    def key(self):
        """Gets the key of this Team.


        :return: The key of this Team.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this Team.


        :param key: The key of this Team.
        :type key: str
        """

        self._key = key

    @property
    def name(self):
        """Gets the name of this Team.


        :return: The name of this Team.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Team.


        :param name: The name of this Team.
        :type name: str
        """

        self._name = name

    @property
    def primary_color(self):
        """Gets the primary_color of this Team.


        :return: The primary_color of this Team.
        :rtype: str
        """
        return self._primary_color

    @primary_color.setter
    def primary_color(self, primary_color):
        """Sets the primary_color of this Team.


        :param primary_color: The primary_color of this Team.
        :type primary_color: str
        """

        self._primary_color = primary_color

    @property
    def quaternary_color(self):
        """Gets the quaternary_color of this Team.


        :return: The quaternary_color of this Team.
        :rtype: str
        """
        return self._quaternary_color

    @quaternary_color.setter
    def quaternary_color(self, quaternary_color):
        """Sets the quaternary_color of this Team.


        :param quaternary_color: The quaternary_color of this Team.
        :type quaternary_color: str
        """

        self._quaternary_color = quaternary_color

    @property
    def secondary_color(self):
        """Gets the secondary_color of this Team.


        :return: The secondary_color of this Team.
        :rtype: str
        """
        return self._secondary_color

    @secondary_color.setter
    def secondary_color(self, secondary_color):
        """Sets the secondary_color of this Team.


        :param secondary_color: The secondary_color of this Team.
        :type secondary_color: str
        """

        self._secondary_color = secondary_color

    @property
    def stadium_id(self):
        """Gets the stadium_id of this Team.


        :return: The stadium_id of this Team.
        :rtype: int
        """
        return self._stadium_id

    @stadium_id.setter
    def stadium_id(self, stadium_id):
        """Sets the stadium_id of this Team.


        :param stadium_id: The stadium_id of this Team.
        :type stadium_id: int
        """

        self._stadium_id = stadium_id

    @property
    def team_id(self):
        """Gets the team_id of this Team.


        :return: The team_id of this Team.
        :rtype: int
        """
        return self._team_id

    @team_id.setter
    def team_id(self, team_id):
        """Sets the team_id of this Team.


        :param team_id: The team_id of this Team.
        :type team_id: int
        """

        self._team_id = team_id

    @property
    def tertiary_color(self):
        """Gets the tertiary_color of this Team.


        :return: The tertiary_color of this Team.
        :rtype: str
        """
        return self._tertiary_color

    @tertiary_color.setter
    def tertiary_color(self, tertiary_color):
        """Sets the tertiary_color of this Team.


        :param tertiary_color: The tertiary_color of this Team.
        :type tertiary_color: str
        """

        self._tertiary_color = tertiary_color

    @property
    def wikipedia_logo_url(self):
        """Gets the wikipedia_logo_url of this Team.


        :return: The wikipedia_logo_url of this Team.
        :rtype: str
        """
        return self._wikipedia_logo_url

    @wikipedia_logo_url.setter
    def wikipedia_logo_url(self, wikipedia_logo_url):
        """Sets the wikipedia_logo_url of this Team.


        :param wikipedia_logo_url: The wikipedia_logo_url of this Team.
        :type wikipedia_logo_url: str
        """

        self._wikipedia_logo_url = wikipedia_logo_url

    @property
    def wikipedia_word_mark_url(self):
        """Gets the wikipedia_word_mark_url of this Team.


        :return: The wikipedia_word_mark_url of this Team.
        :rtype: str
        """
        return self._wikipedia_word_mark_url

    @wikipedia_word_mark_url.setter
    def wikipedia_word_mark_url(self, wikipedia_word_mark_url):
        """Sets the wikipedia_word_mark_url of this Team.


        :param wikipedia_word_mark_url: The wikipedia_word_mark_url of this Team.
        :type wikipedia_word_mark_url: str
        """

        self._wikipedia_word_mark_url = wikipedia_word_mark_url
