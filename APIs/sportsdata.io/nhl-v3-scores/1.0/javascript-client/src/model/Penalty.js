/**
 * NHL v3 Scores
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Penalty model module.
 * @module model/Penalty
 * @version 1.0
 */
class Penalty {
    /**
     * Constructs a new <code>Penalty</code>.
     * @alias module:model/Penalty
     */
    constructor() { 
        
        Penalty.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Penalty</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Penalty} obj Optional instance to populate.
     * @return {module:model/Penalty} The populated <code>Penalty</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Penalty();

            if (data.hasOwnProperty('BenchPenaltyServedByPlayerID')) {
                obj['BenchPenaltyServedByPlayerID'] = ApiClient.convertToType(data['BenchPenaltyServedByPlayerID'], 'Number');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('DrawnByPlayerID')) {
                obj['DrawnByPlayerID'] = ApiClient.convertToType(data['DrawnByPlayerID'], 'Number');
            }
            if (data.hasOwnProperty('DrawnByTeamID')) {
                obj['DrawnByTeamID'] = ApiClient.convertToType(data['DrawnByTeamID'], 'Number');
            }
            if (data.hasOwnProperty('IsBenchPenalty')) {
                obj['IsBenchPenalty'] = ApiClient.convertToType(data['IsBenchPenalty'], 'Boolean');
            }
            if (data.hasOwnProperty('PenalizedPlayerID')) {
                obj['PenalizedPlayerID'] = ApiClient.convertToType(data['PenalizedPlayerID'], 'Number');
            }
            if (data.hasOwnProperty('PenalizedTeamID')) {
                obj['PenalizedTeamID'] = ApiClient.convertToType(data['PenalizedTeamID'], 'Number');
            }
            if (data.hasOwnProperty('PenaltyID')) {
                obj['PenaltyID'] = ApiClient.convertToType(data['PenaltyID'], 'Number');
            }
            if (data.hasOwnProperty('PenaltyMinutes')) {
                obj['PenaltyMinutes'] = ApiClient.convertToType(data['PenaltyMinutes'], 'Number');
            }
            if (data.hasOwnProperty('PeriodID')) {
                obj['PeriodID'] = ApiClient.convertToType(data['PeriodID'], 'Number');
            }
            if (data.hasOwnProperty('Sequence')) {
                obj['Sequence'] = ApiClient.convertToType(data['Sequence'], 'Number');
            }
            if (data.hasOwnProperty('TimeRemainingMinutes')) {
                obj['TimeRemainingMinutes'] = ApiClient.convertToType(data['TimeRemainingMinutes'], 'Number');
            }
            if (data.hasOwnProperty('TimeRemainingSeconds')) {
                obj['TimeRemainingSeconds'] = ApiClient.convertToType(data['TimeRemainingSeconds'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Penalty</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Penalty</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Description'] && !(typeof data['Description'] === 'string' || data['Description'] instanceof String)) {
            throw new Error("Expected the field `Description` to be a primitive type in the JSON string but got " + data['Description']);
        }

        return true;
    }


}



/**
 * @member {Number} BenchPenaltyServedByPlayerID
 */
Penalty.prototype['BenchPenaltyServedByPlayerID'] = undefined;

/**
 * @member {String} Description
 */
Penalty.prototype['Description'] = undefined;

/**
 * @member {Number} DrawnByPlayerID
 */
Penalty.prototype['DrawnByPlayerID'] = undefined;

/**
 * @member {Number} DrawnByTeamID
 */
Penalty.prototype['DrawnByTeamID'] = undefined;

/**
 * @member {Boolean} IsBenchPenalty
 */
Penalty.prototype['IsBenchPenalty'] = undefined;

/**
 * @member {Number} PenalizedPlayerID
 */
Penalty.prototype['PenalizedPlayerID'] = undefined;

/**
 * @member {Number} PenalizedTeamID
 */
Penalty.prototype['PenalizedTeamID'] = undefined;

/**
 * @member {Number} PenaltyID
 */
Penalty.prototype['PenaltyID'] = undefined;

/**
 * @member {Number} PenaltyMinutes
 */
Penalty.prototype['PenaltyMinutes'] = undefined;

/**
 * @member {Number} PeriodID
 */
Penalty.prototype['PeriodID'] = undefined;

/**
 * @member {Number} Sequence
 */
Penalty.prototype['Sequence'] = undefined;

/**
 * @member {Number} TimeRemainingMinutes
 */
Penalty.prototype['TimeRemainingMinutes'] = undefined;

/**
 * @member {Number} TimeRemainingSeconds
 */
Penalty.prototype['TimeRemainingSeconds'] = undefined;






export default Penalty;

