/**
 * NHL v3 Scores
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OpponentSeason model module.
 * @module model/OpponentSeason
 * @version 1.0
 */
class OpponentSeason {
    /**
     * Constructs a new <code>OpponentSeason</code>.
     * @alias module:model/OpponentSeason
     */
    constructor() { 
        
        OpponentSeason.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OpponentSeason</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OpponentSeason} obj Optional instance to populate.
     * @return {module:model/OpponentSeason} The populated <code>OpponentSeason</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OpponentSeason();

            if (data.hasOwnProperty('Assists')) {
                obj['Assists'] = ApiClient.convertToType(data['Assists'], 'Number');
            }
            if (data.hasOwnProperty('BenchPenaltyMinutes')) {
                obj['BenchPenaltyMinutes'] = ApiClient.convertToType(data['BenchPenaltyMinutes'], 'Number');
            }
            if (data.hasOwnProperty('Blocks')) {
                obj['Blocks'] = ApiClient.convertToType(data['Blocks'], 'Number');
            }
            if (data.hasOwnProperty('EmptyNetGoals')) {
                obj['EmptyNetGoals'] = ApiClient.convertToType(data['EmptyNetGoals'], 'Number');
            }
            if (data.hasOwnProperty('FaceoffsLost')) {
                obj['FaceoffsLost'] = ApiClient.convertToType(data['FaceoffsLost'], 'Number');
            }
            if (data.hasOwnProperty('FaceoffsWon')) {
                obj['FaceoffsWon'] = ApiClient.convertToType(data['FaceoffsWon'], 'Number');
            }
            if (data.hasOwnProperty('FantasyPoints')) {
                obj['FantasyPoints'] = ApiClient.convertToType(data['FantasyPoints'], 'Number');
            }
            if (data.hasOwnProperty('FantasyPointsDraftKings')) {
                obj['FantasyPointsDraftKings'] = ApiClient.convertToType(data['FantasyPointsDraftKings'], 'Number');
            }
            if (data.hasOwnProperty('FantasyPointsFanDuel')) {
                obj['FantasyPointsFanDuel'] = ApiClient.convertToType(data['FantasyPointsFanDuel'], 'Number');
            }
            if (data.hasOwnProperty('FantasyPointsFantasyDraft')) {
                obj['FantasyPointsFantasyDraft'] = ApiClient.convertToType(data['FantasyPointsFantasyDraft'], 'Number');
            }
            if (data.hasOwnProperty('FantasyPointsYahoo')) {
                obj['FantasyPointsYahoo'] = ApiClient.convertToType(data['FantasyPointsYahoo'], 'Number');
            }
            if (data.hasOwnProperty('Games')) {
                obj['Games'] = ApiClient.convertToType(data['Games'], 'Number');
            }
            if (data.hasOwnProperty('Giveaways')) {
                obj['Giveaways'] = ApiClient.convertToType(data['Giveaways'], 'Number');
            }
            if (data.hasOwnProperty('GlobalTeamID')) {
                obj['GlobalTeamID'] = ApiClient.convertToType(data['GlobalTeamID'], 'Number');
            }
            if (data.hasOwnProperty('Goals')) {
                obj['Goals'] = ApiClient.convertToType(data['Goals'], 'Number');
            }
            if (data.hasOwnProperty('GoaltendingGoalsAgainst')) {
                obj['GoaltendingGoalsAgainst'] = ApiClient.convertToType(data['GoaltendingGoalsAgainst'], 'Number');
            }
            if (data.hasOwnProperty('GoaltendingLosses')) {
                obj['GoaltendingLosses'] = ApiClient.convertToType(data['GoaltendingLosses'], 'Number');
            }
            if (data.hasOwnProperty('GoaltendingMinutes')) {
                obj['GoaltendingMinutes'] = ApiClient.convertToType(data['GoaltendingMinutes'], 'Number');
            }
            if (data.hasOwnProperty('GoaltendingOvertimeLosses')) {
                obj['GoaltendingOvertimeLosses'] = ApiClient.convertToType(data['GoaltendingOvertimeLosses'], 'Number');
            }
            if (data.hasOwnProperty('GoaltendingSaves')) {
                obj['GoaltendingSaves'] = ApiClient.convertToType(data['GoaltendingSaves'], 'Number');
            }
            if (data.hasOwnProperty('GoaltendingSeconds')) {
                obj['GoaltendingSeconds'] = ApiClient.convertToType(data['GoaltendingSeconds'], 'Number');
            }
            if (data.hasOwnProperty('GoaltendingShotsAgainst')) {
                obj['GoaltendingShotsAgainst'] = ApiClient.convertToType(data['GoaltendingShotsAgainst'], 'Number');
            }
            if (data.hasOwnProperty('GoaltendingShutouts')) {
                obj['GoaltendingShutouts'] = ApiClient.convertToType(data['GoaltendingShutouts'], 'Number');
            }
            if (data.hasOwnProperty('GoaltendingWins')) {
                obj['GoaltendingWins'] = ApiClient.convertToType(data['GoaltendingWins'], 'Number');
            }
            if (data.hasOwnProperty('HatTricks')) {
                obj['HatTricks'] = ApiClient.convertToType(data['HatTricks'], 'Number');
            }
            if (data.hasOwnProperty('Hits')) {
                obj['Hits'] = ApiClient.convertToType(data['Hits'], 'Number');
            }
            if (data.hasOwnProperty('Losses')) {
                obj['Losses'] = ApiClient.convertToType(data['Losses'], 'Number');
            }
            if (data.hasOwnProperty('Minutes')) {
                obj['Minutes'] = ApiClient.convertToType(data['Minutes'], 'Number');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('OpponentPosition')) {
                obj['OpponentPosition'] = ApiClient.convertToType(data['OpponentPosition'], 'String');
            }
            if (data.hasOwnProperty('OvertimeLosses')) {
                obj['OvertimeLosses'] = ApiClient.convertToType(data['OvertimeLosses'], 'Number');
            }
            if (data.hasOwnProperty('PenaltyMinutes')) {
                obj['PenaltyMinutes'] = ApiClient.convertToType(data['PenaltyMinutes'], 'Number');
            }
            if (data.hasOwnProperty('PlusMinus')) {
                obj['PlusMinus'] = ApiClient.convertToType(data['PlusMinus'], 'Number');
            }
            if (data.hasOwnProperty('PowerPlayAssists')) {
                obj['PowerPlayAssists'] = ApiClient.convertToType(data['PowerPlayAssists'], 'Number');
            }
            if (data.hasOwnProperty('PowerPlayGoals')) {
                obj['PowerPlayGoals'] = ApiClient.convertToType(data['PowerPlayGoals'], 'Number');
            }
            if (data.hasOwnProperty('Season')) {
                obj['Season'] = ApiClient.convertToType(data['Season'], 'Number');
            }
            if (data.hasOwnProperty('SeasonType')) {
                obj['SeasonType'] = ApiClient.convertToType(data['SeasonType'], 'Number');
            }
            if (data.hasOwnProperty('Seconds')) {
                obj['Seconds'] = ApiClient.convertToType(data['Seconds'], 'Number');
            }
            if (data.hasOwnProperty('Shifts')) {
                obj['Shifts'] = ApiClient.convertToType(data['Shifts'], 'Number');
            }
            if (data.hasOwnProperty('ShootoutGoals')) {
                obj['ShootoutGoals'] = ApiClient.convertToType(data['ShootoutGoals'], 'Number');
            }
            if (data.hasOwnProperty('ShortHandedAssists')) {
                obj['ShortHandedAssists'] = ApiClient.convertToType(data['ShortHandedAssists'], 'Number');
            }
            if (data.hasOwnProperty('ShortHandedGoals')) {
                obj['ShortHandedGoals'] = ApiClient.convertToType(data['ShortHandedGoals'], 'Number');
            }
            if (data.hasOwnProperty('ShotsOnGoal')) {
                obj['ShotsOnGoal'] = ApiClient.convertToType(data['ShotsOnGoal'], 'Number');
            }
            if (data.hasOwnProperty('Started')) {
                obj['Started'] = ApiClient.convertToType(data['Started'], 'Number');
            }
            if (data.hasOwnProperty('StatID')) {
                obj['StatID'] = ApiClient.convertToType(data['StatID'], 'Number');
            }
            if (data.hasOwnProperty('Takeaways')) {
                obj['Takeaways'] = ApiClient.convertToType(data['Takeaways'], 'Number');
            }
            if (data.hasOwnProperty('Team')) {
                obj['Team'] = ApiClient.convertToType(data['Team'], 'String');
            }
            if (data.hasOwnProperty('TeamID')) {
                obj['TeamID'] = ApiClient.convertToType(data['TeamID'], 'Number');
            }
            if (data.hasOwnProperty('Updated')) {
                obj['Updated'] = ApiClient.convertToType(data['Updated'], 'String');
            }
            if (data.hasOwnProperty('Wins')) {
                obj['Wins'] = ApiClient.convertToType(data['Wins'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OpponentSeason</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OpponentSeason</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // ensure the json data is a string
        if (data['OpponentPosition'] && !(typeof data['OpponentPosition'] === 'string' || data['OpponentPosition'] instanceof String)) {
            throw new Error("Expected the field `OpponentPosition` to be a primitive type in the JSON string but got " + data['OpponentPosition']);
        }
        // ensure the json data is a string
        if (data['Team'] && !(typeof data['Team'] === 'string' || data['Team'] instanceof String)) {
            throw new Error("Expected the field `Team` to be a primitive type in the JSON string but got " + data['Team']);
        }
        // ensure the json data is a string
        if (data['Updated'] && !(typeof data['Updated'] === 'string' || data['Updated'] instanceof String)) {
            throw new Error("Expected the field `Updated` to be a primitive type in the JSON string but got " + data['Updated']);
        }

        return true;
    }


}



/**
 * @member {Number} Assists
 */
OpponentSeason.prototype['Assists'] = undefined;

/**
 * @member {Number} BenchPenaltyMinutes
 */
OpponentSeason.prototype['BenchPenaltyMinutes'] = undefined;

/**
 * @member {Number} Blocks
 */
OpponentSeason.prototype['Blocks'] = undefined;

/**
 * @member {Number} EmptyNetGoals
 */
OpponentSeason.prototype['EmptyNetGoals'] = undefined;

/**
 * @member {Number} FaceoffsLost
 */
OpponentSeason.prototype['FaceoffsLost'] = undefined;

/**
 * @member {Number} FaceoffsWon
 */
OpponentSeason.prototype['FaceoffsWon'] = undefined;

/**
 * @member {Number} FantasyPoints
 */
OpponentSeason.prototype['FantasyPoints'] = undefined;

/**
 * @member {Number} FantasyPointsDraftKings
 */
OpponentSeason.prototype['FantasyPointsDraftKings'] = undefined;

/**
 * @member {Number} FantasyPointsFanDuel
 */
OpponentSeason.prototype['FantasyPointsFanDuel'] = undefined;

/**
 * @member {Number} FantasyPointsFantasyDraft
 */
OpponentSeason.prototype['FantasyPointsFantasyDraft'] = undefined;

/**
 * @member {Number} FantasyPointsYahoo
 */
OpponentSeason.prototype['FantasyPointsYahoo'] = undefined;

/**
 * @member {Number} Games
 */
OpponentSeason.prototype['Games'] = undefined;

/**
 * @member {Number} Giveaways
 */
OpponentSeason.prototype['Giveaways'] = undefined;

/**
 * @member {Number} GlobalTeamID
 */
OpponentSeason.prototype['GlobalTeamID'] = undefined;

/**
 * @member {Number} Goals
 */
OpponentSeason.prototype['Goals'] = undefined;

/**
 * @member {Number} GoaltendingGoalsAgainst
 */
OpponentSeason.prototype['GoaltendingGoalsAgainst'] = undefined;

/**
 * @member {Number} GoaltendingLosses
 */
OpponentSeason.prototype['GoaltendingLosses'] = undefined;

/**
 * @member {Number} GoaltendingMinutes
 */
OpponentSeason.prototype['GoaltendingMinutes'] = undefined;

/**
 * @member {Number} GoaltendingOvertimeLosses
 */
OpponentSeason.prototype['GoaltendingOvertimeLosses'] = undefined;

/**
 * @member {Number} GoaltendingSaves
 */
OpponentSeason.prototype['GoaltendingSaves'] = undefined;

/**
 * @member {Number} GoaltendingSeconds
 */
OpponentSeason.prototype['GoaltendingSeconds'] = undefined;

/**
 * @member {Number} GoaltendingShotsAgainst
 */
OpponentSeason.prototype['GoaltendingShotsAgainst'] = undefined;

/**
 * @member {Number} GoaltendingShutouts
 */
OpponentSeason.prototype['GoaltendingShutouts'] = undefined;

/**
 * @member {Number} GoaltendingWins
 */
OpponentSeason.prototype['GoaltendingWins'] = undefined;

/**
 * @member {Number} HatTricks
 */
OpponentSeason.prototype['HatTricks'] = undefined;

/**
 * @member {Number} Hits
 */
OpponentSeason.prototype['Hits'] = undefined;

/**
 * @member {Number} Losses
 */
OpponentSeason.prototype['Losses'] = undefined;

/**
 * @member {Number} Minutes
 */
OpponentSeason.prototype['Minutes'] = undefined;

/**
 * @member {String} Name
 */
OpponentSeason.prototype['Name'] = undefined;

/**
 * @member {String} OpponentPosition
 */
OpponentSeason.prototype['OpponentPosition'] = undefined;

/**
 * @member {Number} OvertimeLosses
 */
OpponentSeason.prototype['OvertimeLosses'] = undefined;

/**
 * @member {Number} PenaltyMinutes
 */
OpponentSeason.prototype['PenaltyMinutes'] = undefined;

/**
 * @member {Number} PlusMinus
 */
OpponentSeason.prototype['PlusMinus'] = undefined;

/**
 * @member {Number} PowerPlayAssists
 */
OpponentSeason.prototype['PowerPlayAssists'] = undefined;

/**
 * @member {Number} PowerPlayGoals
 */
OpponentSeason.prototype['PowerPlayGoals'] = undefined;

/**
 * @member {Number} Season
 */
OpponentSeason.prototype['Season'] = undefined;

/**
 * @member {Number} SeasonType
 */
OpponentSeason.prototype['SeasonType'] = undefined;

/**
 * @member {Number} Seconds
 */
OpponentSeason.prototype['Seconds'] = undefined;

/**
 * @member {Number} Shifts
 */
OpponentSeason.prototype['Shifts'] = undefined;

/**
 * @member {Number} ShootoutGoals
 */
OpponentSeason.prototype['ShootoutGoals'] = undefined;

/**
 * @member {Number} ShortHandedAssists
 */
OpponentSeason.prototype['ShortHandedAssists'] = undefined;

/**
 * @member {Number} ShortHandedGoals
 */
OpponentSeason.prototype['ShortHandedGoals'] = undefined;

/**
 * @member {Number} ShotsOnGoal
 */
OpponentSeason.prototype['ShotsOnGoal'] = undefined;

/**
 * @member {Number} Started
 */
OpponentSeason.prototype['Started'] = undefined;

/**
 * @member {Number} StatID
 */
OpponentSeason.prototype['StatID'] = undefined;

/**
 * @member {Number} Takeaways
 */
OpponentSeason.prototype['Takeaways'] = undefined;

/**
 * @member {String} Team
 */
OpponentSeason.prototype['Team'] = undefined;

/**
 * @member {Number} TeamID
 */
OpponentSeason.prototype['TeamID'] = undefined;

/**
 * @member {String} Updated
 */
OpponentSeason.prototype['Updated'] = undefined;

/**
 * @member {Number} Wins
 */
OpponentSeason.prototype['Wins'] = undefined;






export default OpponentSeason;

