/**
 * NHL v3 Scores
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIScoringPlay.h
 *
 * 
 */

#ifndef OAIScoringPlay_H
#define OAIScoringPlay_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIScoringPlay : public OAIObject {
public:
    OAIScoringPlay();
    OAIScoringPlay(QString json);
    ~OAIScoringPlay() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAllowedByTeamId() const;
    void setAllowedByTeamId(const qint32 &allowed_by_team_id);
    bool is_allowed_by_team_id_Set() const;
    bool is_allowed_by_team_id_Valid() const;

    qint32 getAssistedByPlayerId1() const;
    void setAssistedByPlayerId1(const qint32 &assisted_by_player_id1);
    bool is_assisted_by_player_id1_Set() const;
    bool is_assisted_by_player_id1_Valid() const;

    qint32 getAssistedByPlayerId2() const;
    void setAssistedByPlayerId2(const qint32 &assisted_by_player_id2);
    bool is_assisted_by_player_id2_Set() const;
    bool is_assisted_by_player_id2_Valid() const;

    qint32 getAwayTeamScore() const;
    void setAwayTeamScore(const qint32 &away_team_score);
    bool is_away_team_score_Set() const;
    bool is_away_team_score_Valid() const;

    bool isEmptyNet() const;
    void setEmptyNet(const bool &empty_net);
    bool is_empty_net_Set() const;
    bool is_empty_net_Valid() const;

    qint32 getHomeTeamScore() const;
    void setHomeTeamScore(const qint32 &home_team_score);
    bool is_home_team_score_Set() const;
    bool is_home_team_score_Valid() const;

    qint32 getPeriodId() const;
    void setPeriodId(const qint32 &period_id);
    bool is_period_id_Set() const;
    bool is_period_id_Valid() const;

    bool isPowerPlay() const;
    void setPowerPlay(const bool &power_play);
    bool is_power_play_Set() const;
    bool is_power_play_Valid() const;

    qint32 getScoredByPlayerId() const;
    void setScoredByPlayerId(const qint32 &scored_by_player_id);
    bool is_scored_by_player_id_Set() const;
    bool is_scored_by_player_id_Valid() const;

    qint32 getScoredByTeamId() const;
    void setScoredByTeamId(const qint32 &scored_by_team_id);
    bool is_scored_by_team_id_Set() const;
    bool is_scored_by_team_id_Valid() const;

    qint32 getScoringPlayId() const;
    void setScoringPlayId(const qint32 &scoring_play_id);
    bool is_scoring_play_id_Set() const;
    bool is_scoring_play_id_Valid() const;

    qint32 getSequence() const;
    void setSequence(const qint32 &sequence);
    bool is_sequence_Set() const;
    bool is_sequence_Valid() const;

    bool isShortHanded() const;
    void setShortHanded(const bool &short_handed);
    bool is_short_handed_Set() const;
    bool is_short_handed_Valid() const;

    qint32 getTimeRemainingMinutes() const;
    void setTimeRemainingMinutes(const qint32 &time_remaining_minutes);
    bool is_time_remaining_minutes_Set() const;
    bool is_time_remaining_minutes_Valid() const;

    qint32 getTimeRemainingSeconds() const;
    void setTimeRemainingSeconds(const qint32 &time_remaining_seconds);
    bool is_time_remaining_seconds_Set() const;
    bool is_time_remaining_seconds_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_allowed_by_team_id;
    bool m_allowed_by_team_id_isSet;
    bool m_allowed_by_team_id_isValid;

    qint32 m_assisted_by_player_id1;
    bool m_assisted_by_player_id1_isSet;
    bool m_assisted_by_player_id1_isValid;

    qint32 m_assisted_by_player_id2;
    bool m_assisted_by_player_id2_isSet;
    bool m_assisted_by_player_id2_isValid;

    qint32 m_away_team_score;
    bool m_away_team_score_isSet;
    bool m_away_team_score_isValid;

    bool m_empty_net;
    bool m_empty_net_isSet;
    bool m_empty_net_isValid;

    qint32 m_home_team_score;
    bool m_home_team_score_isSet;
    bool m_home_team_score_isValid;

    qint32 m_period_id;
    bool m_period_id_isSet;
    bool m_period_id_isValid;

    bool m_power_play;
    bool m_power_play_isSet;
    bool m_power_play_isValid;

    qint32 m_scored_by_player_id;
    bool m_scored_by_player_id_isSet;
    bool m_scored_by_player_id_isValid;

    qint32 m_scored_by_team_id;
    bool m_scored_by_team_id_isSet;
    bool m_scored_by_team_id_isValid;

    qint32 m_scoring_play_id;
    bool m_scoring_play_id_isSet;
    bool m_scoring_play_id_isValid;

    qint32 m_sequence;
    bool m_sequence_isSet;
    bool m_sequence_isValid;

    bool m_short_handed;
    bool m_short_handed_isSet;
    bool m_short_handed_isValid;

    qint32 m_time_remaining_minutes;
    bool m_time_remaining_minutes_isSet;
    bool m_time_remaining_minutes_isValid;

    qint32 m_time_remaining_seconds;
    bool m_time_remaining_seconds_isSet;
    bool m_time_remaining_seconds_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIScoringPlay)

#endif // OAIScoringPlay_H
