/*
 * CBB v3 Stats
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PlayerSeason
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:04:53.082739-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PlayerSeason {
  public static final String SERIALIZED_NAME_ASSISTS = "Assists";
  @SerializedName(SERIALIZED_NAME_ASSISTS)
  private Integer assists;

  public static final String SERIALIZED_NAME_ASSISTS_PERCENTAGE = "AssistsPercentage";
  @SerializedName(SERIALIZED_NAME_ASSISTS_PERCENTAGE)
  private BigDecimal assistsPercentage;

  public static final String SERIALIZED_NAME_BLOCKED_SHOTS = "BlockedShots";
  @SerializedName(SERIALIZED_NAME_BLOCKED_SHOTS)
  private Integer blockedShots;

  public static final String SERIALIZED_NAME_BLOCKS_PERCENTAGE = "BlocksPercentage";
  @SerializedName(SERIALIZED_NAME_BLOCKS_PERCENTAGE)
  private BigDecimal blocksPercentage;

  public static final String SERIALIZED_NAME_DEFENSIVE_REBOUNDS = "DefensiveRebounds";
  @SerializedName(SERIALIZED_NAME_DEFENSIVE_REBOUNDS)
  private Integer defensiveRebounds;

  public static final String SERIALIZED_NAME_DEFENSIVE_REBOUNDS_PERCENTAGE = "DefensiveReboundsPercentage";
  @SerializedName(SERIALIZED_NAME_DEFENSIVE_REBOUNDS_PERCENTAGE)
  private BigDecimal defensiveReboundsPercentage;

  public static final String SERIALIZED_NAME_EFFECTIVE_FIELD_GOALS_PERCENTAGE = "EffectiveFieldGoalsPercentage";
  @SerializedName(SERIALIZED_NAME_EFFECTIVE_FIELD_GOALS_PERCENTAGE)
  private BigDecimal effectiveFieldGoalsPercentage;

  public static final String SERIALIZED_NAME_FANTASY_POINTS = "FantasyPoints";
  @SerializedName(SERIALIZED_NAME_FANTASY_POINTS)
  private BigDecimal fantasyPoints;

  public static final String SERIALIZED_NAME_FANTASY_POINTS_DRAFT_KINGS = "FantasyPointsDraftKings";
  @SerializedName(SERIALIZED_NAME_FANTASY_POINTS_DRAFT_KINGS)
  private BigDecimal fantasyPointsDraftKings;

  public static final String SERIALIZED_NAME_FANTASY_POINTS_FAN_DUEL = "FantasyPointsFanDuel";
  @SerializedName(SERIALIZED_NAME_FANTASY_POINTS_FAN_DUEL)
  private BigDecimal fantasyPointsFanDuel;

  public static final String SERIALIZED_NAME_FANTASY_POINTS_YAHOO = "FantasyPointsYahoo";
  @SerializedName(SERIALIZED_NAME_FANTASY_POINTS_YAHOO)
  private BigDecimal fantasyPointsYahoo;

  public static final String SERIALIZED_NAME_FIELD_GOALS_ATTEMPTED = "FieldGoalsAttempted";
  @SerializedName(SERIALIZED_NAME_FIELD_GOALS_ATTEMPTED)
  private Integer fieldGoalsAttempted;

  public static final String SERIALIZED_NAME_FIELD_GOALS_MADE = "FieldGoalsMade";
  @SerializedName(SERIALIZED_NAME_FIELD_GOALS_MADE)
  private Integer fieldGoalsMade;

  public static final String SERIALIZED_NAME_FIELD_GOALS_PERCENTAGE = "FieldGoalsPercentage";
  @SerializedName(SERIALIZED_NAME_FIELD_GOALS_PERCENTAGE)
  private BigDecimal fieldGoalsPercentage;

  public static final String SERIALIZED_NAME_FREE_THROWS_ATTEMPTED = "FreeThrowsAttempted";
  @SerializedName(SERIALIZED_NAME_FREE_THROWS_ATTEMPTED)
  private Integer freeThrowsAttempted;

  public static final String SERIALIZED_NAME_FREE_THROWS_MADE = "FreeThrowsMade";
  @SerializedName(SERIALIZED_NAME_FREE_THROWS_MADE)
  private Integer freeThrowsMade;

  public static final String SERIALIZED_NAME_FREE_THROWS_PERCENTAGE = "FreeThrowsPercentage";
  @SerializedName(SERIALIZED_NAME_FREE_THROWS_PERCENTAGE)
  private BigDecimal freeThrowsPercentage;

  public static final String SERIALIZED_NAME_GAMES = "Games";
  @SerializedName(SERIALIZED_NAME_GAMES)
  private Integer games;

  public static final String SERIALIZED_NAME_GLOBAL_TEAM_I_D = "GlobalTeamID";
  @SerializedName(SERIALIZED_NAME_GLOBAL_TEAM_I_D)
  private Integer globalTeamID;

  public static final String SERIALIZED_NAME_MINUTES = "Minutes";
  @SerializedName(SERIALIZED_NAME_MINUTES)
  private Integer minutes;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_OFFENSIVE_REBOUNDS = "OffensiveRebounds";
  @SerializedName(SERIALIZED_NAME_OFFENSIVE_REBOUNDS)
  private Integer offensiveRebounds;

  public static final String SERIALIZED_NAME_OFFENSIVE_REBOUNDS_PERCENTAGE = "OffensiveReboundsPercentage";
  @SerializedName(SERIALIZED_NAME_OFFENSIVE_REBOUNDS_PERCENTAGE)
  private BigDecimal offensiveReboundsPercentage;

  public static final String SERIALIZED_NAME_PERSONAL_FOULS = "PersonalFouls";
  @SerializedName(SERIALIZED_NAME_PERSONAL_FOULS)
  private Integer personalFouls;

  public static final String SERIALIZED_NAME_PLAYER_EFFICIENCY_RATING = "PlayerEfficiencyRating";
  @SerializedName(SERIALIZED_NAME_PLAYER_EFFICIENCY_RATING)
  private BigDecimal playerEfficiencyRating;

  public static final String SERIALIZED_NAME_PLAYER_I_D = "PlayerID";
  @SerializedName(SERIALIZED_NAME_PLAYER_I_D)
  private Integer playerID;

  public static final String SERIALIZED_NAME_POINTS = "Points";
  @SerializedName(SERIALIZED_NAME_POINTS)
  private Integer points;

  public static final String SERIALIZED_NAME_POSITION = "Position";
  @SerializedName(SERIALIZED_NAME_POSITION)
  private String position;

  public static final String SERIALIZED_NAME_REBOUNDS = "Rebounds";
  @SerializedName(SERIALIZED_NAME_REBOUNDS)
  private Integer rebounds;

  public static final String SERIALIZED_NAME_SEASON = "Season";
  @SerializedName(SERIALIZED_NAME_SEASON)
  private Integer season;

  public static final String SERIALIZED_NAME_SEASON_TYPE = "SeasonType";
  @SerializedName(SERIALIZED_NAME_SEASON_TYPE)
  private Integer seasonType;

  public static final String SERIALIZED_NAME_STAT_I_D = "StatID";
  @SerializedName(SERIALIZED_NAME_STAT_I_D)
  private Integer statID;

  public static final String SERIALIZED_NAME_STEALS = "Steals";
  @SerializedName(SERIALIZED_NAME_STEALS)
  private Integer steals;

  public static final String SERIALIZED_NAME_STEALS_PERCENTAGE = "StealsPercentage";
  @SerializedName(SERIALIZED_NAME_STEALS_PERCENTAGE)
  private BigDecimal stealsPercentage;

  public static final String SERIALIZED_NAME_TEAM = "Team";
  @SerializedName(SERIALIZED_NAME_TEAM)
  private String team;

  public static final String SERIALIZED_NAME_TEAM_I_D = "TeamID";
  @SerializedName(SERIALIZED_NAME_TEAM_I_D)
  private Integer teamID;

  public static final String SERIALIZED_NAME_THREE_POINTERS_ATTEMPTED = "ThreePointersAttempted";
  @SerializedName(SERIALIZED_NAME_THREE_POINTERS_ATTEMPTED)
  private Integer threePointersAttempted;

  public static final String SERIALIZED_NAME_THREE_POINTERS_MADE = "ThreePointersMade";
  @SerializedName(SERIALIZED_NAME_THREE_POINTERS_MADE)
  private Integer threePointersMade;

  public static final String SERIALIZED_NAME_THREE_POINTERS_PERCENTAGE = "ThreePointersPercentage";
  @SerializedName(SERIALIZED_NAME_THREE_POINTERS_PERCENTAGE)
  private BigDecimal threePointersPercentage;

  public static final String SERIALIZED_NAME_TOTAL_REBOUNDS_PERCENTAGE = "TotalReboundsPercentage";
  @SerializedName(SERIALIZED_NAME_TOTAL_REBOUNDS_PERCENTAGE)
  private BigDecimal totalReboundsPercentage;

  public static final String SERIALIZED_NAME_TRUE_SHOOTING_ATTEMPTS = "TrueShootingAttempts";
  @SerializedName(SERIALIZED_NAME_TRUE_SHOOTING_ATTEMPTS)
  private BigDecimal trueShootingAttempts;

  public static final String SERIALIZED_NAME_TRUE_SHOOTING_PERCENTAGE = "TrueShootingPercentage";
  @SerializedName(SERIALIZED_NAME_TRUE_SHOOTING_PERCENTAGE)
  private BigDecimal trueShootingPercentage;

  public static final String SERIALIZED_NAME_TURN_OVERS_PERCENTAGE = "TurnOversPercentage";
  @SerializedName(SERIALIZED_NAME_TURN_OVERS_PERCENTAGE)
  private BigDecimal turnOversPercentage;

  public static final String SERIALIZED_NAME_TURNOVERS = "Turnovers";
  @SerializedName(SERIALIZED_NAME_TURNOVERS)
  private Integer turnovers;

  public static final String SERIALIZED_NAME_TWO_POINTERS_ATTEMPTED = "TwoPointersAttempted";
  @SerializedName(SERIALIZED_NAME_TWO_POINTERS_ATTEMPTED)
  private Integer twoPointersAttempted;

  public static final String SERIALIZED_NAME_TWO_POINTERS_MADE = "TwoPointersMade";
  @SerializedName(SERIALIZED_NAME_TWO_POINTERS_MADE)
  private Integer twoPointersMade;

  public static final String SERIALIZED_NAME_TWO_POINTERS_PERCENTAGE = "TwoPointersPercentage";
  @SerializedName(SERIALIZED_NAME_TWO_POINTERS_PERCENTAGE)
  private BigDecimal twoPointersPercentage;

  public static final String SERIALIZED_NAME_UPDATED = "Updated";
  @SerializedName(SERIALIZED_NAME_UPDATED)
  private String updated;

  public static final String SERIALIZED_NAME_USAGE_RATE_PERCENTAGE = "UsageRatePercentage";
  @SerializedName(SERIALIZED_NAME_USAGE_RATE_PERCENTAGE)
  private BigDecimal usageRatePercentage;

  public PlayerSeason() {
  }

  public PlayerSeason assists(Integer assists) {
    this.assists = assists;
    return this;
  }

  /**
   * Get assists
   * @return assists
   */
  @javax.annotation.Nullable
  public Integer getAssists() {
    return assists;
  }

  public void setAssists(Integer assists) {
    this.assists = assists;
  }


  public PlayerSeason assistsPercentage(BigDecimal assistsPercentage) {
    this.assistsPercentage = assistsPercentage;
    return this;
  }

  /**
   * Get assistsPercentage
   * @return assistsPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getAssistsPercentage() {
    return assistsPercentage;
  }

  public void setAssistsPercentage(BigDecimal assistsPercentage) {
    this.assistsPercentage = assistsPercentage;
  }


  public PlayerSeason blockedShots(Integer blockedShots) {
    this.blockedShots = blockedShots;
    return this;
  }

  /**
   * Get blockedShots
   * @return blockedShots
   */
  @javax.annotation.Nullable
  public Integer getBlockedShots() {
    return blockedShots;
  }

  public void setBlockedShots(Integer blockedShots) {
    this.blockedShots = blockedShots;
  }


  public PlayerSeason blocksPercentage(BigDecimal blocksPercentage) {
    this.blocksPercentage = blocksPercentage;
    return this;
  }

  /**
   * Get blocksPercentage
   * @return blocksPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getBlocksPercentage() {
    return blocksPercentage;
  }

  public void setBlocksPercentage(BigDecimal blocksPercentage) {
    this.blocksPercentage = blocksPercentage;
  }


  public PlayerSeason defensiveRebounds(Integer defensiveRebounds) {
    this.defensiveRebounds = defensiveRebounds;
    return this;
  }

  /**
   * Get defensiveRebounds
   * @return defensiveRebounds
   */
  @javax.annotation.Nullable
  public Integer getDefensiveRebounds() {
    return defensiveRebounds;
  }

  public void setDefensiveRebounds(Integer defensiveRebounds) {
    this.defensiveRebounds = defensiveRebounds;
  }


  public PlayerSeason defensiveReboundsPercentage(BigDecimal defensiveReboundsPercentage) {
    this.defensiveReboundsPercentage = defensiveReboundsPercentage;
    return this;
  }

  /**
   * Get defensiveReboundsPercentage
   * @return defensiveReboundsPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getDefensiveReboundsPercentage() {
    return defensiveReboundsPercentage;
  }

  public void setDefensiveReboundsPercentage(BigDecimal defensiveReboundsPercentage) {
    this.defensiveReboundsPercentage = defensiveReboundsPercentage;
  }


  public PlayerSeason effectiveFieldGoalsPercentage(BigDecimal effectiveFieldGoalsPercentage) {
    this.effectiveFieldGoalsPercentage = effectiveFieldGoalsPercentage;
    return this;
  }

  /**
   * Get effectiveFieldGoalsPercentage
   * @return effectiveFieldGoalsPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getEffectiveFieldGoalsPercentage() {
    return effectiveFieldGoalsPercentage;
  }

  public void setEffectiveFieldGoalsPercentage(BigDecimal effectiveFieldGoalsPercentage) {
    this.effectiveFieldGoalsPercentage = effectiveFieldGoalsPercentage;
  }


  public PlayerSeason fantasyPoints(BigDecimal fantasyPoints) {
    this.fantasyPoints = fantasyPoints;
    return this;
  }

  /**
   * Get fantasyPoints
   * @return fantasyPoints
   */
  @javax.annotation.Nullable
  public BigDecimal getFantasyPoints() {
    return fantasyPoints;
  }

  public void setFantasyPoints(BigDecimal fantasyPoints) {
    this.fantasyPoints = fantasyPoints;
  }


  public PlayerSeason fantasyPointsDraftKings(BigDecimal fantasyPointsDraftKings) {
    this.fantasyPointsDraftKings = fantasyPointsDraftKings;
    return this;
  }

  /**
   * Get fantasyPointsDraftKings
   * @return fantasyPointsDraftKings
   */
  @javax.annotation.Nullable
  public BigDecimal getFantasyPointsDraftKings() {
    return fantasyPointsDraftKings;
  }

  public void setFantasyPointsDraftKings(BigDecimal fantasyPointsDraftKings) {
    this.fantasyPointsDraftKings = fantasyPointsDraftKings;
  }


  public PlayerSeason fantasyPointsFanDuel(BigDecimal fantasyPointsFanDuel) {
    this.fantasyPointsFanDuel = fantasyPointsFanDuel;
    return this;
  }

  /**
   * Get fantasyPointsFanDuel
   * @return fantasyPointsFanDuel
   */
  @javax.annotation.Nullable
  public BigDecimal getFantasyPointsFanDuel() {
    return fantasyPointsFanDuel;
  }

  public void setFantasyPointsFanDuel(BigDecimal fantasyPointsFanDuel) {
    this.fantasyPointsFanDuel = fantasyPointsFanDuel;
  }


  public PlayerSeason fantasyPointsYahoo(BigDecimal fantasyPointsYahoo) {
    this.fantasyPointsYahoo = fantasyPointsYahoo;
    return this;
  }

  /**
   * Get fantasyPointsYahoo
   * @return fantasyPointsYahoo
   */
  @javax.annotation.Nullable
  public BigDecimal getFantasyPointsYahoo() {
    return fantasyPointsYahoo;
  }

  public void setFantasyPointsYahoo(BigDecimal fantasyPointsYahoo) {
    this.fantasyPointsYahoo = fantasyPointsYahoo;
  }


  public PlayerSeason fieldGoalsAttempted(Integer fieldGoalsAttempted) {
    this.fieldGoalsAttempted = fieldGoalsAttempted;
    return this;
  }

  /**
   * Get fieldGoalsAttempted
   * @return fieldGoalsAttempted
   */
  @javax.annotation.Nullable
  public Integer getFieldGoalsAttempted() {
    return fieldGoalsAttempted;
  }

  public void setFieldGoalsAttempted(Integer fieldGoalsAttempted) {
    this.fieldGoalsAttempted = fieldGoalsAttempted;
  }


  public PlayerSeason fieldGoalsMade(Integer fieldGoalsMade) {
    this.fieldGoalsMade = fieldGoalsMade;
    return this;
  }

  /**
   * Get fieldGoalsMade
   * @return fieldGoalsMade
   */
  @javax.annotation.Nullable
  public Integer getFieldGoalsMade() {
    return fieldGoalsMade;
  }

  public void setFieldGoalsMade(Integer fieldGoalsMade) {
    this.fieldGoalsMade = fieldGoalsMade;
  }


  public PlayerSeason fieldGoalsPercentage(BigDecimal fieldGoalsPercentage) {
    this.fieldGoalsPercentage = fieldGoalsPercentage;
    return this;
  }

  /**
   * Get fieldGoalsPercentage
   * @return fieldGoalsPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getFieldGoalsPercentage() {
    return fieldGoalsPercentage;
  }

  public void setFieldGoalsPercentage(BigDecimal fieldGoalsPercentage) {
    this.fieldGoalsPercentage = fieldGoalsPercentage;
  }


  public PlayerSeason freeThrowsAttempted(Integer freeThrowsAttempted) {
    this.freeThrowsAttempted = freeThrowsAttempted;
    return this;
  }

  /**
   * Get freeThrowsAttempted
   * @return freeThrowsAttempted
   */
  @javax.annotation.Nullable
  public Integer getFreeThrowsAttempted() {
    return freeThrowsAttempted;
  }

  public void setFreeThrowsAttempted(Integer freeThrowsAttempted) {
    this.freeThrowsAttempted = freeThrowsAttempted;
  }


  public PlayerSeason freeThrowsMade(Integer freeThrowsMade) {
    this.freeThrowsMade = freeThrowsMade;
    return this;
  }

  /**
   * Get freeThrowsMade
   * @return freeThrowsMade
   */
  @javax.annotation.Nullable
  public Integer getFreeThrowsMade() {
    return freeThrowsMade;
  }

  public void setFreeThrowsMade(Integer freeThrowsMade) {
    this.freeThrowsMade = freeThrowsMade;
  }


  public PlayerSeason freeThrowsPercentage(BigDecimal freeThrowsPercentage) {
    this.freeThrowsPercentage = freeThrowsPercentage;
    return this;
  }

  /**
   * Get freeThrowsPercentage
   * @return freeThrowsPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getFreeThrowsPercentage() {
    return freeThrowsPercentage;
  }

  public void setFreeThrowsPercentage(BigDecimal freeThrowsPercentage) {
    this.freeThrowsPercentage = freeThrowsPercentage;
  }


  public PlayerSeason games(Integer games) {
    this.games = games;
    return this;
  }

  /**
   * Get games
   * @return games
   */
  @javax.annotation.Nullable
  public Integer getGames() {
    return games;
  }

  public void setGames(Integer games) {
    this.games = games;
  }


  public PlayerSeason globalTeamID(Integer globalTeamID) {
    this.globalTeamID = globalTeamID;
    return this;
  }

  /**
   * Get globalTeamID
   * @return globalTeamID
   */
  @javax.annotation.Nullable
  public Integer getGlobalTeamID() {
    return globalTeamID;
  }

  public void setGlobalTeamID(Integer globalTeamID) {
    this.globalTeamID = globalTeamID;
  }


  public PlayerSeason minutes(Integer minutes) {
    this.minutes = minutes;
    return this;
  }

  /**
   * Get minutes
   * @return minutes
   */
  @javax.annotation.Nullable
  public Integer getMinutes() {
    return minutes;
  }

  public void setMinutes(Integer minutes) {
    this.minutes = minutes;
  }


  public PlayerSeason name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public PlayerSeason offensiveRebounds(Integer offensiveRebounds) {
    this.offensiveRebounds = offensiveRebounds;
    return this;
  }

  /**
   * Get offensiveRebounds
   * @return offensiveRebounds
   */
  @javax.annotation.Nullable
  public Integer getOffensiveRebounds() {
    return offensiveRebounds;
  }

  public void setOffensiveRebounds(Integer offensiveRebounds) {
    this.offensiveRebounds = offensiveRebounds;
  }


  public PlayerSeason offensiveReboundsPercentage(BigDecimal offensiveReboundsPercentage) {
    this.offensiveReboundsPercentage = offensiveReboundsPercentage;
    return this;
  }

  /**
   * Get offensiveReboundsPercentage
   * @return offensiveReboundsPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getOffensiveReboundsPercentage() {
    return offensiveReboundsPercentage;
  }

  public void setOffensiveReboundsPercentage(BigDecimal offensiveReboundsPercentage) {
    this.offensiveReboundsPercentage = offensiveReboundsPercentage;
  }


  public PlayerSeason personalFouls(Integer personalFouls) {
    this.personalFouls = personalFouls;
    return this;
  }

  /**
   * Get personalFouls
   * @return personalFouls
   */
  @javax.annotation.Nullable
  public Integer getPersonalFouls() {
    return personalFouls;
  }

  public void setPersonalFouls(Integer personalFouls) {
    this.personalFouls = personalFouls;
  }


  public PlayerSeason playerEfficiencyRating(BigDecimal playerEfficiencyRating) {
    this.playerEfficiencyRating = playerEfficiencyRating;
    return this;
  }

  /**
   * Get playerEfficiencyRating
   * @return playerEfficiencyRating
   */
  @javax.annotation.Nullable
  public BigDecimal getPlayerEfficiencyRating() {
    return playerEfficiencyRating;
  }

  public void setPlayerEfficiencyRating(BigDecimal playerEfficiencyRating) {
    this.playerEfficiencyRating = playerEfficiencyRating;
  }


  public PlayerSeason playerID(Integer playerID) {
    this.playerID = playerID;
    return this;
  }

  /**
   * Get playerID
   * @return playerID
   */
  @javax.annotation.Nullable
  public Integer getPlayerID() {
    return playerID;
  }

  public void setPlayerID(Integer playerID) {
    this.playerID = playerID;
  }


  public PlayerSeason points(Integer points) {
    this.points = points;
    return this;
  }

  /**
   * Get points
   * @return points
   */
  @javax.annotation.Nullable
  public Integer getPoints() {
    return points;
  }

  public void setPoints(Integer points) {
    this.points = points;
  }


  public PlayerSeason position(String position) {
    this.position = position;
    return this;
  }

  /**
   * Get position
   * @return position
   */
  @javax.annotation.Nullable
  public String getPosition() {
    return position;
  }

  public void setPosition(String position) {
    this.position = position;
  }


  public PlayerSeason rebounds(Integer rebounds) {
    this.rebounds = rebounds;
    return this;
  }

  /**
   * Get rebounds
   * @return rebounds
   */
  @javax.annotation.Nullable
  public Integer getRebounds() {
    return rebounds;
  }

  public void setRebounds(Integer rebounds) {
    this.rebounds = rebounds;
  }


  public PlayerSeason season(Integer season) {
    this.season = season;
    return this;
  }

  /**
   * Get season
   * @return season
   */
  @javax.annotation.Nullable
  public Integer getSeason() {
    return season;
  }

  public void setSeason(Integer season) {
    this.season = season;
  }


  public PlayerSeason seasonType(Integer seasonType) {
    this.seasonType = seasonType;
    return this;
  }

  /**
   * Get seasonType
   * @return seasonType
   */
  @javax.annotation.Nullable
  public Integer getSeasonType() {
    return seasonType;
  }

  public void setSeasonType(Integer seasonType) {
    this.seasonType = seasonType;
  }


  public PlayerSeason statID(Integer statID) {
    this.statID = statID;
    return this;
  }

  /**
   * Get statID
   * @return statID
   */
  @javax.annotation.Nullable
  public Integer getStatID() {
    return statID;
  }

  public void setStatID(Integer statID) {
    this.statID = statID;
  }


  public PlayerSeason steals(Integer steals) {
    this.steals = steals;
    return this;
  }

  /**
   * Get steals
   * @return steals
   */
  @javax.annotation.Nullable
  public Integer getSteals() {
    return steals;
  }

  public void setSteals(Integer steals) {
    this.steals = steals;
  }


  public PlayerSeason stealsPercentage(BigDecimal stealsPercentage) {
    this.stealsPercentage = stealsPercentage;
    return this;
  }

  /**
   * Get stealsPercentage
   * @return stealsPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getStealsPercentage() {
    return stealsPercentage;
  }

  public void setStealsPercentage(BigDecimal stealsPercentage) {
    this.stealsPercentage = stealsPercentage;
  }


  public PlayerSeason team(String team) {
    this.team = team;
    return this;
  }

  /**
   * Get team
   * @return team
   */
  @javax.annotation.Nullable
  public String getTeam() {
    return team;
  }

  public void setTeam(String team) {
    this.team = team;
  }


  public PlayerSeason teamID(Integer teamID) {
    this.teamID = teamID;
    return this;
  }

  /**
   * Get teamID
   * @return teamID
   */
  @javax.annotation.Nullable
  public Integer getTeamID() {
    return teamID;
  }

  public void setTeamID(Integer teamID) {
    this.teamID = teamID;
  }


  public PlayerSeason threePointersAttempted(Integer threePointersAttempted) {
    this.threePointersAttempted = threePointersAttempted;
    return this;
  }

  /**
   * Get threePointersAttempted
   * @return threePointersAttempted
   */
  @javax.annotation.Nullable
  public Integer getThreePointersAttempted() {
    return threePointersAttempted;
  }

  public void setThreePointersAttempted(Integer threePointersAttempted) {
    this.threePointersAttempted = threePointersAttempted;
  }


  public PlayerSeason threePointersMade(Integer threePointersMade) {
    this.threePointersMade = threePointersMade;
    return this;
  }

  /**
   * Get threePointersMade
   * @return threePointersMade
   */
  @javax.annotation.Nullable
  public Integer getThreePointersMade() {
    return threePointersMade;
  }

  public void setThreePointersMade(Integer threePointersMade) {
    this.threePointersMade = threePointersMade;
  }


  public PlayerSeason threePointersPercentage(BigDecimal threePointersPercentage) {
    this.threePointersPercentage = threePointersPercentage;
    return this;
  }

  /**
   * Get threePointersPercentage
   * @return threePointersPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getThreePointersPercentage() {
    return threePointersPercentage;
  }

  public void setThreePointersPercentage(BigDecimal threePointersPercentage) {
    this.threePointersPercentage = threePointersPercentage;
  }


  public PlayerSeason totalReboundsPercentage(BigDecimal totalReboundsPercentage) {
    this.totalReboundsPercentage = totalReboundsPercentage;
    return this;
  }

  /**
   * Get totalReboundsPercentage
   * @return totalReboundsPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getTotalReboundsPercentage() {
    return totalReboundsPercentage;
  }

  public void setTotalReboundsPercentage(BigDecimal totalReboundsPercentage) {
    this.totalReboundsPercentage = totalReboundsPercentage;
  }


  public PlayerSeason trueShootingAttempts(BigDecimal trueShootingAttempts) {
    this.trueShootingAttempts = trueShootingAttempts;
    return this;
  }

  /**
   * Get trueShootingAttempts
   * @return trueShootingAttempts
   */
  @javax.annotation.Nullable
  public BigDecimal getTrueShootingAttempts() {
    return trueShootingAttempts;
  }

  public void setTrueShootingAttempts(BigDecimal trueShootingAttempts) {
    this.trueShootingAttempts = trueShootingAttempts;
  }


  public PlayerSeason trueShootingPercentage(BigDecimal trueShootingPercentage) {
    this.trueShootingPercentage = trueShootingPercentage;
    return this;
  }

  /**
   * Get trueShootingPercentage
   * @return trueShootingPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getTrueShootingPercentage() {
    return trueShootingPercentage;
  }

  public void setTrueShootingPercentage(BigDecimal trueShootingPercentage) {
    this.trueShootingPercentage = trueShootingPercentage;
  }


  public PlayerSeason turnOversPercentage(BigDecimal turnOversPercentage) {
    this.turnOversPercentage = turnOversPercentage;
    return this;
  }

  /**
   * Get turnOversPercentage
   * @return turnOversPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getTurnOversPercentage() {
    return turnOversPercentage;
  }

  public void setTurnOversPercentage(BigDecimal turnOversPercentage) {
    this.turnOversPercentage = turnOversPercentage;
  }


  public PlayerSeason turnovers(Integer turnovers) {
    this.turnovers = turnovers;
    return this;
  }

  /**
   * Get turnovers
   * @return turnovers
   */
  @javax.annotation.Nullable
  public Integer getTurnovers() {
    return turnovers;
  }

  public void setTurnovers(Integer turnovers) {
    this.turnovers = turnovers;
  }


  public PlayerSeason twoPointersAttempted(Integer twoPointersAttempted) {
    this.twoPointersAttempted = twoPointersAttempted;
    return this;
  }

  /**
   * Get twoPointersAttempted
   * @return twoPointersAttempted
   */
  @javax.annotation.Nullable
  public Integer getTwoPointersAttempted() {
    return twoPointersAttempted;
  }

  public void setTwoPointersAttempted(Integer twoPointersAttempted) {
    this.twoPointersAttempted = twoPointersAttempted;
  }


  public PlayerSeason twoPointersMade(Integer twoPointersMade) {
    this.twoPointersMade = twoPointersMade;
    return this;
  }

  /**
   * Get twoPointersMade
   * @return twoPointersMade
   */
  @javax.annotation.Nullable
  public Integer getTwoPointersMade() {
    return twoPointersMade;
  }

  public void setTwoPointersMade(Integer twoPointersMade) {
    this.twoPointersMade = twoPointersMade;
  }


  public PlayerSeason twoPointersPercentage(BigDecimal twoPointersPercentage) {
    this.twoPointersPercentage = twoPointersPercentage;
    return this;
  }

  /**
   * Get twoPointersPercentage
   * @return twoPointersPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getTwoPointersPercentage() {
    return twoPointersPercentage;
  }

  public void setTwoPointersPercentage(BigDecimal twoPointersPercentage) {
    this.twoPointersPercentage = twoPointersPercentage;
  }


  public PlayerSeason updated(String updated) {
    this.updated = updated;
    return this;
  }

  /**
   * Get updated
   * @return updated
   */
  @javax.annotation.Nullable
  public String getUpdated() {
    return updated;
  }

  public void setUpdated(String updated) {
    this.updated = updated;
  }


  public PlayerSeason usageRatePercentage(BigDecimal usageRatePercentage) {
    this.usageRatePercentage = usageRatePercentage;
    return this;
  }

  /**
   * Get usageRatePercentage
   * @return usageRatePercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getUsageRatePercentage() {
    return usageRatePercentage;
  }

  public void setUsageRatePercentage(BigDecimal usageRatePercentage) {
    this.usageRatePercentage = usageRatePercentage;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PlayerSeason playerSeason = (PlayerSeason) o;
    return Objects.equals(this.assists, playerSeason.assists) &&
        Objects.equals(this.assistsPercentage, playerSeason.assistsPercentage) &&
        Objects.equals(this.blockedShots, playerSeason.blockedShots) &&
        Objects.equals(this.blocksPercentage, playerSeason.blocksPercentage) &&
        Objects.equals(this.defensiveRebounds, playerSeason.defensiveRebounds) &&
        Objects.equals(this.defensiveReboundsPercentage, playerSeason.defensiveReboundsPercentage) &&
        Objects.equals(this.effectiveFieldGoalsPercentage, playerSeason.effectiveFieldGoalsPercentage) &&
        Objects.equals(this.fantasyPoints, playerSeason.fantasyPoints) &&
        Objects.equals(this.fantasyPointsDraftKings, playerSeason.fantasyPointsDraftKings) &&
        Objects.equals(this.fantasyPointsFanDuel, playerSeason.fantasyPointsFanDuel) &&
        Objects.equals(this.fantasyPointsYahoo, playerSeason.fantasyPointsYahoo) &&
        Objects.equals(this.fieldGoalsAttempted, playerSeason.fieldGoalsAttempted) &&
        Objects.equals(this.fieldGoalsMade, playerSeason.fieldGoalsMade) &&
        Objects.equals(this.fieldGoalsPercentage, playerSeason.fieldGoalsPercentage) &&
        Objects.equals(this.freeThrowsAttempted, playerSeason.freeThrowsAttempted) &&
        Objects.equals(this.freeThrowsMade, playerSeason.freeThrowsMade) &&
        Objects.equals(this.freeThrowsPercentage, playerSeason.freeThrowsPercentage) &&
        Objects.equals(this.games, playerSeason.games) &&
        Objects.equals(this.globalTeamID, playerSeason.globalTeamID) &&
        Objects.equals(this.minutes, playerSeason.minutes) &&
        Objects.equals(this.name, playerSeason.name) &&
        Objects.equals(this.offensiveRebounds, playerSeason.offensiveRebounds) &&
        Objects.equals(this.offensiveReboundsPercentage, playerSeason.offensiveReboundsPercentage) &&
        Objects.equals(this.personalFouls, playerSeason.personalFouls) &&
        Objects.equals(this.playerEfficiencyRating, playerSeason.playerEfficiencyRating) &&
        Objects.equals(this.playerID, playerSeason.playerID) &&
        Objects.equals(this.points, playerSeason.points) &&
        Objects.equals(this.position, playerSeason.position) &&
        Objects.equals(this.rebounds, playerSeason.rebounds) &&
        Objects.equals(this.season, playerSeason.season) &&
        Objects.equals(this.seasonType, playerSeason.seasonType) &&
        Objects.equals(this.statID, playerSeason.statID) &&
        Objects.equals(this.steals, playerSeason.steals) &&
        Objects.equals(this.stealsPercentage, playerSeason.stealsPercentage) &&
        Objects.equals(this.team, playerSeason.team) &&
        Objects.equals(this.teamID, playerSeason.teamID) &&
        Objects.equals(this.threePointersAttempted, playerSeason.threePointersAttempted) &&
        Objects.equals(this.threePointersMade, playerSeason.threePointersMade) &&
        Objects.equals(this.threePointersPercentage, playerSeason.threePointersPercentage) &&
        Objects.equals(this.totalReboundsPercentage, playerSeason.totalReboundsPercentage) &&
        Objects.equals(this.trueShootingAttempts, playerSeason.trueShootingAttempts) &&
        Objects.equals(this.trueShootingPercentage, playerSeason.trueShootingPercentage) &&
        Objects.equals(this.turnOversPercentage, playerSeason.turnOversPercentage) &&
        Objects.equals(this.turnovers, playerSeason.turnovers) &&
        Objects.equals(this.twoPointersAttempted, playerSeason.twoPointersAttempted) &&
        Objects.equals(this.twoPointersMade, playerSeason.twoPointersMade) &&
        Objects.equals(this.twoPointersPercentage, playerSeason.twoPointersPercentage) &&
        Objects.equals(this.updated, playerSeason.updated) &&
        Objects.equals(this.usageRatePercentage, playerSeason.usageRatePercentage);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(assists, assistsPercentage, blockedShots, blocksPercentage, defensiveRebounds, defensiveReboundsPercentage, effectiveFieldGoalsPercentage, fantasyPoints, fantasyPointsDraftKings, fantasyPointsFanDuel, fantasyPointsYahoo, fieldGoalsAttempted, fieldGoalsMade, fieldGoalsPercentage, freeThrowsAttempted, freeThrowsMade, freeThrowsPercentage, games, globalTeamID, minutes, name, offensiveRebounds, offensiveReboundsPercentage, personalFouls, playerEfficiencyRating, playerID, points, position, rebounds, season, seasonType, statID, steals, stealsPercentage, team, teamID, threePointersAttempted, threePointersMade, threePointersPercentage, totalReboundsPercentage, trueShootingAttempts, trueShootingPercentage, turnOversPercentage, turnovers, twoPointersAttempted, twoPointersMade, twoPointersPercentage, updated, usageRatePercentage);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PlayerSeason {\n");
    sb.append("    assists: ").append(toIndentedString(assists)).append("\n");
    sb.append("    assistsPercentage: ").append(toIndentedString(assistsPercentage)).append("\n");
    sb.append("    blockedShots: ").append(toIndentedString(blockedShots)).append("\n");
    sb.append("    blocksPercentage: ").append(toIndentedString(blocksPercentage)).append("\n");
    sb.append("    defensiveRebounds: ").append(toIndentedString(defensiveRebounds)).append("\n");
    sb.append("    defensiveReboundsPercentage: ").append(toIndentedString(defensiveReboundsPercentage)).append("\n");
    sb.append("    effectiveFieldGoalsPercentage: ").append(toIndentedString(effectiveFieldGoalsPercentage)).append("\n");
    sb.append("    fantasyPoints: ").append(toIndentedString(fantasyPoints)).append("\n");
    sb.append("    fantasyPointsDraftKings: ").append(toIndentedString(fantasyPointsDraftKings)).append("\n");
    sb.append("    fantasyPointsFanDuel: ").append(toIndentedString(fantasyPointsFanDuel)).append("\n");
    sb.append("    fantasyPointsYahoo: ").append(toIndentedString(fantasyPointsYahoo)).append("\n");
    sb.append("    fieldGoalsAttempted: ").append(toIndentedString(fieldGoalsAttempted)).append("\n");
    sb.append("    fieldGoalsMade: ").append(toIndentedString(fieldGoalsMade)).append("\n");
    sb.append("    fieldGoalsPercentage: ").append(toIndentedString(fieldGoalsPercentage)).append("\n");
    sb.append("    freeThrowsAttempted: ").append(toIndentedString(freeThrowsAttempted)).append("\n");
    sb.append("    freeThrowsMade: ").append(toIndentedString(freeThrowsMade)).append("\n");
    sb.append("    freeThrowsPercentage: ").append(toIndentedString(freeThrowsPercentage)).append("\n");
    sb.append("    games: ").append(toIndentedString(games)).append("\n");
    sb.append("    globalTeamID: ").append(toIndentedString(globalTeamID)).append("\n");
    sb.append("    minutes: ").append(toIndentedString(minutes)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    offensiveRebounds: ").append(toIndentedString(offensiveRebounds)).append("\n");
    sb.append("    offensiveReboundsPercentage: ").append(toIndentedString(offensiveReboundsPercentage)).append("\n");
    sb.append("    personalFouls: ").append(toIndentedString(personalFouls)).append("\n");
    sb.append("    playerEfficiencyRating: ").append(toIndentedString(playerEfficiencyRating)).append("\n");
    sb.append("    playerID: ").append(toIndentedString(playerID)).append("\n");
    sb.append("    points: ").append(toIndentedString(points)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    rebounds: ").append(toIndentedString(rebounds)).append("\n");
    sb.append("    season: ").append(toIndentedString(season)).append("\n");
    sb.append("    seasonType: ").append(toIndentedString(seasonType)).append("\n");
    sb.append("    statID: ").append(toIndentedString(statID)).append("\n");
    sb.append("    steals: ").append(toIndentedString(steals)).append("\n");
    sb.append("    stealsPercentage: ").append(toIndentedString(stealsPercentage)).append("\n");
    sb.append("    team: ").append(toIndentedString(team)).append("\n");
    sb.append("    teamID: ").append(toIndentedString(teamID)).append("\n");
    sb.append("    threePointersAttempted: ").append(toIndentedString(threePointersAttempted)).append("\n");
    sb.append("    threePointersMade: ").append(toIndentedString(threePointersMade)).append("\n");
    sb.append("    threePointersPercentage: ").append(toIndentedString(threePointersPercentage)).append("\n");
    sb.append("    totalReboundsPercentage: ").append(toIndentedString(totalReboundsPercentage)).append("\n");
    sb.append("    trueShootingAttempts: ").append(toIndentedString(trueShootingAttempts)).append("\n");
    sb.append("    trueShootingPercentage: ").append(toIndentedString(trueShootingPercentage)).append("\n");
    sb.append("    turnOversPercentage: ").append(toIndentedString(turnOversPercentage)).append("\n");
    sb.append("    turnovers: ").append(toIndentedString(turnovers)).append("\n");
    sb.append("    twoPointersAttempted: ").append(toIndentedString(twoPointersAttempted)).append("\n");
    sb.append("    twoPointersMade: ").append(toIndentedString(twoPointersMade)).append("\n");
    sb.append("    twoPointersPercentage: ").append(toIndentedString(twoPointersPercentage)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    usageRatePercentage: ").append(toIndentedString(usageRatePercentage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Assists");
    openapiFields.add("AssistsPercentage");
    openapiFields.add("BlockedShots");
    openapiFields.add("BlocksPercentage");
    openapiFields.add("DefensiveRebounds");
    openapiFields.add("DefensiveReboundsPercentage");
    openapiFields.add("EffectiveFieldGoalsPercentage");
    openapiFields.add("FantasyPoints");
    openapiFields.add("FantasyPointsDraftKings");
    openapiFields.add("FantasyPointsFanDuel");
    openapiFields.add("FantasyPointsYahoo");
    openapiFields.add("FieldGoalsAttempted");
    openapiFields.add("FieldGoalsMade");
    openapiFields.add("FieldGoalsPercentage");
    openapiFields.add("FreeThrowsAttempted");
    openapiFields.add("FreeThrowsMade");
    openapiFields.add("FreeThrowsPercentage");
    openapiFields.add("Games");
    openapiFields.add("GlobalTeamID");
    openapiFields.add("Minutes");
    openapiFields.add("Name");
    openapiFields.add("OffensiveRebounds");
    openapiFields.add("OffensiveReboundsPercentage");
    openapiFields.add("PersonalFouls");
    openapiFields.add("PlayerEfficiencyRating");
    openapiFields.add("PlayerID");
    openapiFields.add("Points");
    openapiFields.add("Position");
    openapiFields.add("Rebounds");
    openapiFields.add("Season");
    openapiFields.add("SeasonType");
    openapiFields.add("StatID");
    openapiFields.add("Steals");
    openapiFields.add("StealsPercentage");
    openapiFields.add("Team");
    openapiFields.add("TeamID");
    openapiFields.add("ThreePointersAttempted");
    openapiFields.add("ThreePointersMade");
    openapiFields.add("ThreePointersPercentage");
    openapiFields.add("TotalReboundsPercentage");
    openapiFields.add("TrueShootingAttempts");
    openapiFields.add("TrueShootingPercentage");
    openapiFields.add("TurnOversPercentage");
    openapiFields.add("Turnovers");
    openapiFields.add("TwoPointersAttempted");
    openapiFields.add("TwoPointersMade");
    openapiFields.add("TwoPointersPercentage");
    openapiFields.add("Updated");
    openapiFields.add("UsageRatePercentage");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PlayerSeason
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PlayerSeason.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PlayerSeason is not found in the empty JSON string", PlayerSeason.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PlayerSeason.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PlayerSeason` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) && !jsonObj.get("Name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Name").toString()));
      }
      if ((jsonObj.get("Position") != null && !jsonObj.get("Position").isJsonNull()) && !jsonObj.get("Position").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Position` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Position").toString()));
      }
      if ((jsonObj.get("Team") != null && !jsonObj.get("Team").isJsonNull()) && !jsonObj.get("Team").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Team` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Team").toString()));
      }
      if ((jsonObj.get("Updated") != null && !jsonObj.get("Updated").isJsonNull()) && !jsonObj.get("Updated").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Updated` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Updated").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PlayerSeason.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PlayerSeason' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PlayerSeason> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PlayerSeason.class));

       return (TypeAdapter<T>) new TypeAdapter<PlayerSeason>() {
           @Override
           public void write(JsonWriter out, PlayerSeason value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PlayerSeason read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PlayerSeason given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PlayerSeason
   * @throws IOException if the JSON string is invalid with respect to PlayerSeason
   */
  public static PlayerSeason fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PlayerSeason.class);
  }

  /**
   * Convert an instance of PlayerSeason to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

