# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TeamGame(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, assists: int=None, assists_percentage: float=None, blocked_shots: int=None, blocks_percentage: float=None, conference_losses: int=None, conference_wins: int=None, date_time: str=None, day: str=None, defensive_rebounds: int=None, defensive_rebounds_percentage: float=None, effective_field_goals_percentage: float=None, fantasy_points: float=None, fantasy_points_draft_kings: float=None, fantasy_points_fan_duel: float=None, fantasy_points_yahoo: float=None, field_goals_attempted: int=None, field_goals_made: int=None, field_goals_percentage: float=None, free_throws_attempted: int=None, free_throws_made: int=None, free_throws_percentage: float=None, game_id: int=None, games: int=None, global_game_id: int=None, global_opponent_id: int=None, global_team_id: int=None, home_or_away: str=None, is_game_over: bool=None, losses: int=None, minutes: int=None, name: str=None, offensive_rebounds: int=None, offensive_rebounds_percentage: float=None, opponent: str=None, opponent_id: int=None, personal_fouls: int=None, player_efficiency_rating: float=None, points: int=None, possessions: float=None, rebounds: int=None, season: int=None, season_type: int=None, stat_id: int=None, steals: int=None, steals_percentage: float=None, team: str=None, team_id: int=None, three_pointers_attempted: int=None, three_pointers_made: int=None, three_pointers_percentage: float=None, total_rebounds_percentage: float=None, true_shooting_attempts: float=None, true_shooting_percentage: float=None, turn_overs_percentage: float=None, turnovers: int=None, two_pointers_attempted: int=None, two_pointers_made: int=None, two_pointers_percentage: float=None, updated: str=None, usage_rate_percentage: float=None, wins: int=None):
        """TeamGame - a model defined in OpenAPI

        :param assists: The assists of this TeamGame.
        :param assists_percentage: The assists_percentage of this TeamGame.
        :param blocked_shots: The blocked_shots of this TeamGame.
        :param blocks_percentage: The blocks_percentage of this TeamGame.
        :param conference_losses: The conference_losses of this TeamGame.
        :param conference_wins: The conference_wins of this TeamGame.
        :param date_time: The date_time of this TeamGame.
        :param day: The day of this TeamGame.
        :param defensive_rebounds: The defensive_rebounds of this TeamGame.
        :param defensive_rebounds_percentage: The defensive_rebounds_percentage of this TeamGame.
        :param effective_field_goals_percentage: The effective_field_goals_percentage of this TeamGame.
        :param fantasy_points: The fantasy_points of this TeamGame.
        :param fantasy_points_draft_kings: The fantasy_points_draft_kings of this TeamGame.
        :param fantasy_points_fan_duel: The fantasy_points_fan_duel of this TeamGame.
        :param fantasy_points_yahoo: The fantasy_points_yahoo of this TeamGame.
        :param field_goals_attempted: The field_goals_attempted of this TeamGame.
        :param field_goals_made: The field_goals_made of this TeamGame.
        :param field_goals_percentage: The field_goals_percentage of this TeamGame.
        :param free_throws_attempted: The free_throws_attempted of this TeamGame.
        :param free_throws_made: The free_throws_made of this TeamGame.
        :param free_throws_percentage: The free_throws_percentage of this TeamGame.
        :param game_id: The game_id of this TeamGame.
        :param games: The games of this TeamGame.
        :param global_game_id: The global_game_id of this TeamGame.
        :param global_opponent_id: The global_opponent_id of this TeamGame.
        :param global_team_id: The global_team_id of this TeamGame.
        :param home_or_away: The home_or_away of this TeamGame.
        :param is_game_over: The is_game_over of this TeamGame.
        :param losses: The losses of this TeamGame.
        :param minutes: The minutes of this TeamGame.
        :param name: The name of this TeamGame.
        :param offensive_rebounds: The offensive_rebounds of this TeamGame.
        :param offensive_rebounds_percentage: The offensive_rebounds_percentage of this TeamGame.
        :param opponent: The opponent of this TeamGame.
        :param opponent_id: The opponent_id of this TeamGame.
        :param personal_fouls: The personal_fouls of this TeamGame.
        :param player_efficiency_rating: The player_efficiency_rating of this TeamGame.
        :param points: The points of this TeamGame.
        :param possessions: The possessions of this TeamGame.
        :param rebounds: The rebounds of this TeamGame.
        :param season: The season of this TeamGame.
        :param season_type: The season_type of this TeamGame.
        :param stat_id: The stat_id of this TeamGame.
        :param steals: The steals of this TeamGame.
        :param steals_percentage: The steals_percentage of this TeamGame.
        :param team: The team of this TeamGame.
        :param team_id: The team_id of this TeamGame.
        :param three_pointers_attempted: The three_pointers_attempted of this TeamGame.
        :param three_pointers_made: The three_pointers_made of this TeamGame.
        :param three_pointers_percentage: The three_pointers_percentage of this TeamGame.
        :param total_rebounds_percentage: The total_rebounds_percentage of this TeamGame.
        :param true_shooting_attempts: The true_shooting_attempts of this TeamGame.
        :param true_shooting_percentage: The true_shooting_percentage of this TeamGame.
        :param turn_overs_percentage: The turn_overs_percentage of this TeamGame.
        :param turnovers: The turnovers of this TeamGame.
        :param two_pointers_attempted: The two_pointers_attempted of this TeamGame.
        :param two_pointers_made: The two_pointers_made of this TeamGame.
        :param two_pointers_percentage: The two_pointers_percentage of this TeamGame.
        :param updated: The updated of this TeamGame.
        :param usage_rate_percentage: The usage_rate_percentage of this TeamGame.
        :param wins: The wins of this TeamGame.
        """
        self.openapi_types = {
            'assists': int,
            'assists_percentage': float,
            'blocked_shots': int,
            'blocks_percentage': float,
            'conference_losses': int,
            'conference_wins': int,
            'date_time': str,
            'day': str,
            'defensive_rebounds': int,
            'defensive_rebounds_percentage': float,
            'effective_field_goals_percentage': float,
            'fantasy_points': float,
            'fantasy_points_draft_kings': float,
            'fantasy_points_fan_duel': float,
            'fantasy_points_yahoo': float,
            'field_goals_attempted': int,
            'field_goals_made': int,
            'field_goals_percentage': float,
            'free_throws_attempted': int,
            'free_throws_made': int,
            'free_throws_percentage': float,
            'game_id': int,
            'games': int,
            'global_game_id': int,
            'global_opponent_id': int,
            'global_team_id': int,
            'home_or_away': str,
            'is_game_over': bool,
            'losses': int,
            'minutes': int,
            'name': str,
            'offensive_rebounds': int,
            'offensive_rebounds_percentage': float,
            'opponent': str,
            'opponent_id': int,
            'personal_fouls': int,
            'player_efficiency_rating': float,
            'points': int,
            'possessions': float,
            'rebounds': int,
            'season': int,
            'season_type': int,
            'stat_id': int,
            'steals': int,
            'steals_percentage': float,
            'team': str,
            'team_id': int,
            'three_pointers_attempted': int,
            'three_pointers_made': int,
            'three_pointers_percentage': float,
            'total_rebounds_percentage': float,
            'true_shooting_attempts': float,
            'true_shooting_percentage': float,
            'turn_overs_percentage': float,
            'turnovers': int,
            'two_pointers_attempted': int,
            'two_pointers_made': int,
            'two_pointers_percentage': float,
            'updated': str,
            'usage_rate_percentage': float,
            'wins': int
        }

        self.attribute_map = {
            'assists': 'Assists',
            'assists_percentage': 'AssistsPercentage',
            'blocked_shots': 'BlockedShots',
            'blocks_percentage': 'BlocksPercentage',
            'conference_losses': 'ConferenceLosses',
            'conference_wins': 'ConferenceWins',
            'date_time': 'DateTime',
            'day': 'Day',
            'defensive_rebounds': 'DefensiveRebounds',
            'defensive_rebounds_percentage': 'DefensiveReboundsPercentage',
            'effective_field_goals_percentage': 'EffectiveFieldGoalsPercentage',
            'fantasy_points': 'FantasyPoints',
            'fantasy_points_draft_kings': 'FantasyPointsDraftKings',
            'fantasy_points_fan_duel': 'FantasyPointsFanDuel',
            'fantasy_points_yahoo': 'FantasyPointsYahoo',
            'field_goals_attempted': 'FieldGoalsAttempted',
            'field_goals_made': 'FieldGoalsMade',
            'field_goals_percentage': 'FieldGoalsPercentage',
            'free_throws_attempted': 'FreeThrowsAttempted',
            'free_throws_made': 'FreeThrowsMade',
            'free_throws_percentage': 'FreeThrowsPercentage',
            'game_id': 'GameID',
            'games': 'Games',
            'global_game_id': 'GlobalGameID',
            'global_opponent_id': 'GlobalOpponentID',
            'global_team_id': 'GlobalTeamID',
            'home_or_away': 'HomeOrAway',
            'is_game_over': 'IsGameOver',
            'losses': 'Losses',
            'minutes': 'Minutes',
            'name': 'Name',
            'offensive_rebounds': 'OffensiveRebounds',
            'offensive_rebounds_percentage': 'OffensiveReboundsPercentage',
            'opponent': 'Opponent',
            'opponent_id': 'OpponentID',
            'personal_fouls': 'PersonalFouls',
            'player_efficiency_rating': 'PlayerEfficiencyRating',
            'points': 'Points',
            'possessions': 'Possessions',
            'rebounds': 'Rebounds',
            'season': 'Season',
            'season_type': 'SeasonType',
            'stat_id': 'StatID',
            'steals': 'Steals',
            'steals_percentage': 'StealsPercentage',
            'team': 'Team',
            'team_id': 'TeamID',
            'three_pointers_attempted': 'ThreePointersAttempted',
            'three_pointers_made': 'ThreePointersMade',
            'three_pointers_percentage': 'ThreePointersPercentage',
            'total_rebounds_percentage': 'TotalReboundsPercentage',
            'true_shooting_attempts': 'TrueShootingAttempts',
            'true_shooting_percentage': 'TrueShootingPercentage',
            'turn_overs_percentage': 'TurnOversPercentage',
            'turnovers': 'Turnovers',
            'two_pointers_attempted': 'TwoPointersAttempted',
            'two_pointers_made': 'TwoPointersMade',
            'two_pointers_percentage': 'TwoPointersPercentage',
            'updated': 'Updated',
            'usage_rate_percentage': 'UsageRatePercentage',
            'wins': 'Wins'
        }

        self._assists = assists
        self._assists_percentage = assists_percentage
        self._blocked_shots = blocked_shots
        self._blocks_percentage = blocks_percentage
        self._conference_losses = conference_losses
        self._conference_wins = conference_wins
        self._date_time = date_time
        self._day = day
        self._defensive_rebounds = defensive_rebounds
        self._defensive_rebounds_percentage = defensive_rebounds_percentage
        self._effective_field_goals_percentage = effective_field_goals_percentage
        self._fantasy_points = fantasy_points
        self._fantasy_points_draft_kings = fantasy_points_draft_kings
        self._fantasy_points_fan_duel = fantasy_points_fan_duel
        self._fantasy_points_yahoo = fantasy_points_yahoo
        self._field_goals_attempted = field_goals_attempted
        self._field_goals_made = field_goals_made
        self._field_goals_percentage = field_goals_percentage
        self._free_throws_attempted = free_throws_attempted
        self._free_throws_made = free_throws_made
        self._free_throws_percentage = free_throws_percentage
        self._game_id = game_id
        self._games = games
        self._global_game_id = global_game_id
        self._global_opponent_id = global_opponent_id
        self._global_team_id = global_team_id
        self._home_or_away = home_or_away
        self._is_game_over = is_game_over
        self._losses = losses
        self._minutes = minutes
        self._name = name
        self._offensive_rebounds = offensive_rebounds
        self._offensive_rebounds_percentage = offensive_rebounds_percentage
        self._opponent = opponent
        self._opponent_id = opponent_id
        self._personal_fouls = personal_fouls
        self._player_efficiency_rating = player_efficiency_rating
        self._points = points
        self._possessions = possessions
        self._rebounds = rebounds
        self._season = season
        self._season_type = season_type
        self._stat_id = stat_id
        self._steals = steals
        self._steals_percentage = steals_percentage
        self._team = team
        self._team_id = team_id
        self._three_pointers_attempted = three_pointers_attempted
        self._three_pointers_made = three_pointers_made
        self._three_pointers_percentage = three_pointers_percentage
        self._total_rebounds_percentage = total_rebounds_percentage
        self._true_shooting_attempts = true_shooting_attempts
        self._true_shooting_percentage = true_shooting_percentage
        self._turn_overs_percentage = turn_overs_percentage
        self._turnovers = turnovers
        self._two_pointers_attempted = two_pointers_attempted
        self._two_pointers_made = two_pointers_made
        self._two_pointers_percentage = two_pointers_percentage
        self._updated = updated
        self._usage_rate_percentage = usage_rate_percentage
        self._wins = wins

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TeamGame':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TeamGame of this TeamGame.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def assists(self):
        """Gets the assists of this TeamGame.


        :return: The assists of this TeamGame.
        :rtype: int
        """
        return self._assists

    @assists.setter
    def assists(self, assists):
        """Sets the assists of this TeamGame.


        :param assists: The assists of this TeamGame.
        :type assists: int
        """

        self._assists = assists

    @property
    def assists_percentage(self):
        """Gets the assists_percentage of this TeamGame.


        :return: The assists_percentage of this TeamGame.
        :rtype: float
        """
        return self._assists_percentage

    @assists_percentage.setter
    def assists_percentage(self, assists_percentage):
        """Sets the assists_percentage of this TeamGame.


        :param assists_percentage: The assists_percentage of this TeamGame.
        :type assists_percentage: float
        """

        self._assists_percentage = assists_percentage

    @property
    def blocked_shots(self):
        """Gets the blocked_shots of this TeamGame.


        :return: The blocked_shots of this TeamGame.
        :rtype: int
        """
        return self._blocked_shots

    @blocked_shots.setter
    def blocked_shots(self, blocked_shots):
        """Sets the blocked_shots of this TeamGame.


        :param blocked_shots: The blocked_shots of this TeamGame.
        :type blocked_shots: int
        """

        self._blocked_shots = blocked_shots

    @property
    def blocks_percentage(self):
        """Gets the blocks_percentage of this TeamGame.


        :return: The blocks_percentage of this TeamGame.
        :rtype: float
        """
        return self._blocks_percentage

    @blocks_percentage.setter
    def blocks_percentage(self, blocks_percentage):
        """Sets the blocks_percentage of this TeamGame.


        :param blocks_percentage: The blocks_percentage of this TeamGame.
        :type blocks_percentage: float
        """

        self._blocks_percentage = blocks_percentage

    @property
    def conference_losses(self):
        """Gets the conference_losses of this TeamGame.


        :return: The conference_losses of this TeamGame.
        :rtype: int
        """
        return self._conference_losses

    @conference_losses.setter
    def conference_losses(self, conference_losses):
        """Sets the conference_losses of this TeamGame.


        :param conference_losses: The conference_losses of this TeamGame.
        :type conference_losses: int
        """

        self._conference_losses = conference_losses

    @property
    def conference_wins(self):
        """Gets the conference_wins of this TeamGame.


        :return: The conference_wins of this TeamGame.
        :rtype: int
        """
        return self._conference_wins

    @conference_wins.setter
    def conference_wins(self, conference_wins):
        """Sets the conference_wins of this TeamGame.


        :param conference_wins: The conference_wins of this TeamGame.
        :type conference_wins: int
        """

        self._conference_wins = conference_wins

    @property
    def date_time(self):
        """Gets the date_time of this TeamGame.


        :return: The date_time of this TeamGame.
        :rtype: str
        """
        return self._date_time

    @date_time.setter
    def date_time(self, date_time):
        """Sets the date_time of this TeamGame.


        :param date_time: The date_time of this TeamGame.
        :type date_time: str
        """

        self._date_time = date_time

    @property
    def day(self):
        """Gets the day of this TeamGame.


        :return: The day of this TeamGame.
        :rtype: str
        """
        return self._day

    @day.setter
    def day(self, day):
        """Sets the day of this TeamGame.


        :param day: The day of this TeamGame.
        :type day: str
        """

        self._day = day

    @property
    def defensive_rebounds(self):
        """Gets the defensive_rebounds of this TeamGame.


        :return: The defensive_rebounds of this TeamGame.
        :rtype: int
        """
        return self._defensive_rebounds

    @defensive_rebounds.setter
    def defensive_rebounds(self, defensive_rebounds):
        """Sets the defensive_rebounds of this TeamGame.


        :param defensive_rebounds: The defensive_rebounds of this TeamGame.
        :type defensive_rebounds: int
        """

        self._defensive_rebounds = defensive_rebounds

    @property
    def defensive_rebounds_percentage(self):
        """Gets the defensive_rebounds_percentage of this TeamGame.


        :return: The defensive_rebounds_percentage of this TeamGame.
        :rtype: float
        """
        return self._defensive_rebounds_percentage

    @defensive_rebounds_percentage.setter
    def defensive_rebounds_percentage(self, defensive_rebounds_percentage):
        """Sets the defensive_rebounds_percentage of this TeamGame.


        :param defensive_rebounds_percentage: The defensive_rebounds_percentage of this TeamGame.
        :type defensive_rebounds_percentage: float
        """

        self._defensive_rebounds_percentage = defensive_rebounds_percentage

    @property
    def effective_field_goals_percentage(self):
        """Gets the effective_field_goals_percentage of this TeamGame.


        :return: The effective_field_goals_percentage of this TeamGame.
        :rtype: float
        """
        return self._effective_field_goals_percentage

    @effective_field_goals_percentage.setter
    def effective_field_goals_percentage(self, effective_field_goals_percentage):
        """Sets the effective_field_goals_percentage of this TeamGame.


        :param effective_field_goals_percentage: The effective_field_goals_percentage of this TeamGame.
        :type effective_field_goals_percentage: float
        """

        self._effective_field_goals_percentage = effective_field_goals_percentage

    @property
    def fantasy_points(self):
        """Gets the fantasy_points of this TeamGame.


        :return: The fantasy_points of this TeamGame.
        :rtype: float
        """
        return self._fantasy_points

    @fantasy_points.setter
    def fantasy_points(self, fantasy_points):
        """Sets the fantasy_points of this TeamGame.


        :param fantasy_points: The fantasy_points of this TeamGame.
        :type fantasy_points: float
        """

        self._fantasy_points = fantasy_points

    @property
    def fantasy_points_draft_kings(self):
        """Gets the fantasy_points_draft_kings of this TeamGame.


        :return: The fantasy_points_draft_kings of this TeamGame.
        :rtype: float
        """
        return self._fantasy_points_draft_kings

    @fantasy_points_draft_kings.setter
    def fantasy_points_draft_kings(self, fantasy_points_draft_kings):
        """Sets the fantasy_points_draft_kings of this TeamGame.


        :param fantasy_points_draft_kings: The fantasy_points_draft_kings of this TeamGame.
        :type fantasy_points_draft_kings: float
        """

        self._fantasy_points_draft_kings = fantasy_points_draft_kings

    @property
    def fantasy_points_fan_duel(self):
        """Gets the fantasy_points_fan_duel of this TeamGame.


        :return: The fantasy_points_fan_duel of this TeamGame.
        :rtype: float
        """
        return self._fantasy_points_fan_duel

    @fantasy_points_fan_duel.setter
    def fantasy_points_fan_duel(self, fantasy_points_fan_duel):
        """Sets the fantasy_points_fan_duel of this TeamGame.


        :param fantasy_points_fan_duel: The fantasy_points_fan_duel of this TeamGame.
        :type fantasy_points_fan_duel: float
        """

        self._fantasy_points_fan_duel = fantasy_points_fan_duel

    @property
    def fantasy_points_yahoo(self):
        """Gets the fantasy_points_yahoo of this TeamGame.


        :return: The fantasy_points_yahoo of this TeamGame.
        :rtype: float
        """
        return self._fantasy_points_yahoo

    @fantasy_points_yahoo.setter
    def fantasy_points_yahoo(self, fantasy_points_yahoo):
        """Sets the fantasy_points_yahoo of this TeamGame.


        :param fantasy_points_yahoo: The fantasy_points_yahoo of this TeamGame.
        :type fantasy_points_yahoo: float
        """

        self._fantasy_points_yahoo = fantasy_points_yahoo

    @property
    def field_goals_attempted(self):
        """Gets the field_goals_attempted of this TeamGame.


        :return: The field_goals_attempted of this TeamGame.
        :rtype: int
        """
        return self._field_goals_attempted

    @field_goals_attempted.setter
    def field_goals_attempted(self, field_goals_attempted):
        """Sets the field_goals_attempted of this TeamGame.


        :param field_goals_attempted: The field_goals_attempted of this TeamGame.
        :type field_goals_attempted: int
        """

        self._field_goals_attempted = field_goals_attempted

    @property
    def field_goals_made(self):
        """Gets the field_goals_made of this TeamGame.


        :return: The field_goals_made of this TeamGame.
        :rtype: int
        """
        return self._field_goals_made

    @field_goals_made.setter
    def field_goals_made(self, field_goals_made):
        """Sets the field_goals_made of this TeamGame.


        :param field_goals_made: The field_goals_made of this TeamGame.
        :type field_goals_made: int
        """

        self._field_goals_made = field_goals_made

    @property
    def field_goals_percentage(self):
        """Gets the field_goals_percentage of this TeamGame.


        :return: The field_goals_percentage of this TeamGame.
        :rtype: float
        """
        return self._field_goals_percentage

    @field_goals_percentage.setter
    def field_goals_percentage(self, field_goals_percentage):
        """Sets the field_goals_percentage of this TeamGame.


        :param field_goals_percentage: The field_goals_percentage of this TeamGame.
        :type field_goals_percentage: float
        """

        self._field_goals_percentage = field_goals_percentage

    @property
    def free_throws_attempted(self):
        """Gets the free_throws_attempted of this TeamGame.


        :return: The free_throws_attempted of this TeamGame.
        :rtype: int
        """
        return self._free_throws_attempted

    @free_throws_attempted.setter
    def free_throws_attempted(self, free_throws_attempted):
        """Sets the free_throws_attempted of this TeamGame.


        :param free_throws_attempted: The free_throws_attempted of this TeamGame.
        :type free_throws_attempted: int
        """

        self._free_throws_attempted = free_throws_attempted

    @property
    def free_throws_made(self):
        """Gets the free_throws_made of this TeamGame.


        :return: The free_throws_made of this TeamGame.
        :rtype: int
        """
        return self._free_throws_made

    @free_throws_made.setter
    def free_throws_made(self, free_throws_made):
        """Sets the free_throws_made of this TeamGame.


        :param free_throws_made: The free_throws_made of this TeamGame.
        :type free_throws_made: int
        """

        self._free_throws_made = free_throws_made

    @property
    def free_throws_percentage(self):
        """Gets the free_throws_percentage of this TeamGame.


        :return: The free_throws_percentage of this TeamGame.
        :rtype: float
        """
        return self._free_throws_percentage

    @free_throws_percentage.setter
    def free_throws_percentage(self, free_throws_percentage):
        """Sets the free_throws_percentage of this TeamGame.


        :param free_throws_percentage: The free_throws_percentage of this TeamGame.
        :type free_throws_percentage: float
        """

        self._free_throws_percentage = free_throws_percentage

    @property
    def game_id(self):
        """Gets the game_id of this TeamGame.


        :return: The game_id of this TeamGame.
        :rtype: int
        """
        return self._game_id

    @game_id.setter
    def game_id(self, game_id):
        """Sets the game_id of this TeamGame.


        :param game_id: The game_id of this TeamGame.
        :type game_id: int
        """

        self._game_id = game_id

    @property
    def games(self):
        """Gets the games of this TeamGame.


        :return: The games of this TeamGame.
        :rtype: int
        """
        return self._games

    @games.setter
    def games(self, games):
        """Sets the games of this TeamGame.


        :param games: The games of this TeamGame.
        :type games: int
        """

        self._games = games

    @property
    def global_game_id(self):
        """Gets the global_game_id of this TeamGame.


        :return: The global_game_id of this TeamGame.
        :rtype: int
        """
        return self._global_game_id

    @global_game_id.setter
    def global_game_id(self, global_game_id):
        """Sets the global_game_id of this TeamGame.


        :param global_game_id: The global_game_id of this TeamGame.
        :type global_game_id: int
        """

        self._global_game_id = global_game_id

    @property
    def global_opponent_id(self):
        """Gets the global_opponent_id of this TeamGame.


        :return: The global_opponent_id of this TeamGame.
        :rtype: int
        """
        return self._global_opponent_id

    @global_opponent_id.setter
    def global_opponent_id(self, global_opponent_id):
        """Sets the global_opponent_id of this TeamGame.


        :param global_opponent_id: The global_opponent_id of this TeamGame.
        :type global_opponent_id: int
        """

        self._global_opponent_id = global_opponent_id

    @property
    def global_team_id(self):
        """Gets the global_team_id of this TeamGame.


        :return: The global_team_id of this TeamGame.
        :rtype: int
        """
        return self._global_team_id

    @global_team_id.setter
    def global_team_id(self, global_team_id):
        """Sets the global_team_id of this TeamGame.


        :param global_team_id: The global_team_id of this TeamGame.
        :type global_team_id: int
        """

        self._global_team_id = global_team_id

    @property
    def home_or_away(self):
        """Gets the home_or_away of this TeamGame.


        :return: The home_or_away of this TeamGame.
        :rtype: str
        """
        return self._home_or_away

    @home_or_away.setter
    def home_or_away(self, home_or_away):
        """Sets the home_or_away of this TeamGame.


        :param home_or_away: The home_or_away of this TeamGame.
        :type home_or_away: str
        """

        self._home_or_away = home_or_away

    @property
    def is_game_over(self):
        """Gets the is_game_over of this TeamGame.


        :return: The is_game_over of this TeamGame.
        :rtype: bool
        """
        return self._is_game_over

    @is_game_over.setter
    def is_game_over(self, is_game_over):
        """Sets the is_game_over of this TeamGame.


        :param is_game_over: The is_game_over of this TeamGame.
        :type is_game_over: bool
        """

        self._is_game_over = is_game_over

    @property
    def losses(self):
        """Gets the losses of this TeamGame.


        :return: The losses of this TeamGame.
        :rtype: int
        """
        return self._losses

    @losses.setter
    def losses(self, losses):
        """Sets the losses of this TeamGame.


        :param losses: The losses of this TeamGame.
        :type losses: int
        """

        self._losses = losses

    @property
    def minutes(self):
        """Gets the minutes of this TeamGame.


        :return: The minutes of this TeamGame.
        :rtype: int
        """
        return self._minutes

    @minutes.setter
    def minutes(self, minutes):
        """Sets the minutes of this TeamGame.


        :param minutes: The minutes of this TeamGame.
        :type minutes: int
        """

        self._minutes = minutes

    @property
    def name(self):
        """Gets the name of this TeamGame.


        :return: The name of this TeamGame.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this TeamGame.


        :param name: The name of this TeamGame.
        :type name: str
        """

        self._name = name

    @property
    def offensive_rebounds(self):
        """Gets the offensive_rebounds of this TeamGame.


        :return: The offensive_rebounds of this TeamGame.
        :rtype: int
        """
        return self._offensive_rebounds

    @offensive_rebounds.setter
    def offensive_rebounds(self, offensive_rebounds):
        """Sets the offensive_rebounds of this TeamGame.


        :param offensive_rebounds: The offensive_rebounds of this TeamGame.
        :type offensive_rebounds: int
        """

        self._offensive_rebounds = offensive_rebounds

    @property
    def offensive_rebounds_percentage(self):
        """Gets the offensive_rebounds_percentage of this TeamGame.


        :return: The offensive_rebounds_percentage of this TeamGame.
        :rtype: float
        """
        return self._offensive_rebounds_percentage

    @offensive_rebounds_percentage.setter
    def offensive_rebounds_percentage(self, offensive_rebounds_percentage):
        """Sets the offensive_rebounds_percentage of this TeamGame.


        :param offensive_rebounds_percentage: The offensive_rebounds_percentage of this TeamGame.
        :type offensive_rebounds_percentage: float
        """

        self._offensive_rebounds_percentage = offensive_rebounds_percentage

    @property
    def opponent(self):
        """Gets the opponent of this TeamGame.


        :return: The opponent of this TeamGame.
        :rtype: str
        """
        return self._opponent

    @opponent.setter
    def opponent(self, opponent):
        """Sets the opponent of this TeamGame.


        :param opponent: The opponent of this TeamGame.
        :type opponent: str
        """

        self._opponent = opponent

    @property
    def opponent_id(self):
        """Gets the opponent_id of this TeamGame.


        :return: The opponent_id of this TeamGame.
        :rtype: int
        """
        return self._opponent_id

    @opponent_id.setter
    def opponent_id(self, opponent_id):
        """Sets the opponent_id of this TeamGame.


        :param opponent_id: The opponent_id of this TeamGame.
        :type opponent_id: int
        """

        self._opponent_id = opponent_id

    @property
    def personal_fouls(self):
        """Gets the personal_fouls of this TeamGame.


        :return: The personal_fouls of this TeamGame.
        :rtype: int
        """
        return self._personal_fouls

    @personal_fouls.setter
    def personal_fouls(self, personal_fouls):
        """Sets the personal_fouls of this TeamGame.


        :param personal_fouls: The personal_fouls of this TeamGame.
        :type personal_fouls: int
        """

        self._personal_fouls = personal_fouls

    @property
    def player_efficiency_rating(self):
        """Gets the player_efficiency_rating of this TeamGame.


        :return: The player_efficiency_rating of this TeamGame.
        :rtype: float
        """
        return self._player_efficiency_rating

    @player_efficiency_rating.setter
    def player_efficiency_rating(self, player_efficiency_rating):
        """Sets the player_efficiency_rating of this TeamGame.


        :param player_efficiency_rating: The player_efficiency_rating of this TeamGame.
        :type player_efficiency_rating: float
        """

        self._player_efficiency_rating = player_efficiency_rating

    @property
    def points(self):
        """Gets the points of this TeamGame.


        :return: The points of this TeamGame.
        :rtype: int
        """
        return self._points

    @points.setter
    def points(self, points):
        """Sets the points of this TeamGame.


        :param points: The points of this TeamGame.
        :type points: int
        """

        self._points = points

    @property
    def possessions(self):
        """Gets the possessions of this TeamGame.


        :return: The possessions of this TeamGame.
        :rtype: float
        """
        return self._possessions

    @possessions.setter
    def possessions(self, possessions):
        """Sets the possessions of this TeamGame.


        :param possessions: The possessions of this TeamGame.
        :type possessions: float
        """

        self._possessions = possessions

    @property
    def rebounds(self):
        """Gets the rebounds of this TeamGame.


        :return: The rebounds of this TeamGame.
        :rtype: int
        """
        return self._rebounds

    @rebounds.setter
    def rebounds(self, rebounds):
        """Sets the rebounds of this TeamGame.


        :param rebounds: The rebounds of this TeamGame.
        :type rebounds: int
        """

        self._rebounds = rebounds

    @property
    def season(self):
        """Gets the season of this TeamGame.


        :return: The season of this TeamGame.
        :rtype: int
        """
        return self._season

    @season.setter
    def season(self, season):
        """Sets the season of this TeamGame.


        :param season: The season of this TeamGame.
        :type season: int
        """

        self._season = season

    @property
    def season_type(self):
        """Gets the season_type of this TeamGame.


        :return: The season_type of this TeamGame.
        :rtype: int
        """
        return self._season_type

    @season_type.setter
    def season_type(self, season_type):
        """Sets the season_type of this TeamGame.


        :param season_type: The season_type of this TeamGame.
        :type season_type: int
        """

        self._season_type = season_type

    @property
    def stat_id(self):
        """Gets the stat_id of this TeamGame.


        :return: The stat_id of this TeamGame.
        :rtype: int
        """
        return self._stat_id

    @stat_id.setter
    def stat_id(self, stat_id):
        """Sets the stat_id of this TeamGame.


        :param stat_id: The stat_id of this TeamGame.
        :type stat_id: int
        """

        self._stat_id = stat_id

    @property
    def steals(self):
        """Gets the steals of this TeamGame.


        :return: The steals of this TeamGame.
        :rtype: int
        """
        return self._steals

    @steals.setter
    def steals(self, steals):
        """Sets the steals of this TeamGame.


        :param steals: The steals of this TeamGame.
        :type steals: int
        """

        self._steals = steals

    @property
    def steals_percentage(self):
        """Gets the steals_percentage of this TeamGame.


        :return: The steals_percentage of this TeamGame.
        :rtype: float
        """
        return self._steals_percentage

    @steals_percentage.setter
    def steals_percentage(self, steals_percentage):
        """Sets the steals_percentage of this TeamGame.


        :param steals_percentage: The steals_percentage of this TeamGame.
        :type steals_percentage: float
        """

        self._steals_percentage = steals_percentage

    @property
    def team(self):
        """Gets the team of this TeamGame.


        :return: The team of this TeamGame.
        :rtype: str
        """
        return self._team

    @team.setter
    def team(self, team):
        """Sets the team of this TeamGame.


        :param team: The team of this TeamGame.
        :type team: str
        """

        self._team = team

    @property
    def team_id(self):
        """Gets the team_id of this TeamGame.


        :return: The team_id of this TeamGame.
        :rtype: int
        """
        return self._team_id

    @team_id.setter
    def team_id(self, team_id):
        """Sets the team_id of this TeamGame.


        :param team_id: The team_id of this TeamGame.
        :type team_id: int
        """

        self._team_id = team_id

    @property
    def three_pointers_attempted(self):
        """Gets the three_pointers_attempted of this TeamGame.


        :return: The three_pointers_attempted of this TeamGame.
        :rtype: int
        """
        return self._three_pointers_attempted

    @three_pointers_attempted.setter
    def three_pointers_attempted(self, three_pointers_attempted):
        """Sets the three_pointers_attempted of this TeamGame.


        :param three_pointers_attempted: The three_pointers_attempted of this TeamGame.
        :type three_pointers_attempted: int
        """

        self._three_pointers_attempted = three_pointers_attempted

    @property
    def three_pointers_made(self):
        """Gets the three_pointers_made of this TeamGame.


        :return: The three_pointers_made of this TeamGame.
        :rtype: int
        """
        return self._three_pointers_made

    @three_pointers_made.setter
    def three_pointers_made(self, three_pointers_made):
        """Sets the three_pointers_made of this TeamGame.


        :param three_pointers_made: The three_pointers_made of this TeamGame.
        :type three_pointers_made: int
        """

        self._three_pointers_made = three_pointers_made

    @property
    def three_pointers_percentage(self):
        """Gets the three_pointers_percentage of this TeamGame.


        :return: The three_pointers_percentage of this TeamGame.
        :rtype: float
        """
        return self._three_pointers_percentage

    @three_pointers_percentage.setter
    def three_pointers_percentage(self, three_pointers_percentage):
        """Sets the three_pointers_percentage of this TeamGame.


        :param three_pointers_percentage: The three_pointers_percentage of this TeamGame.
        :type three_pointers_percentage: float
        """

        self._three_pointers_percentage = three_pointers_percentage

    @property
    def total_rebounds_percentage(self):
        """Gets the total_rebounds_percentage of this TeamGame.


        :return: The total_rebounds_percentage of this TeamGame.
        :rtype: float
        """
        return self._total_rebounds_percentage

    @total_rebounds_percentage.setter
    def total_rebounds_percentage(self, total_rebounds_percentage):
        """Sets the total_rebounds_percentage of this TeamGame.


        :param total_rebounds_percentage: The total_rebounds_percentage of this TeamGame.
        :type total_rebounds_percentage: float
        """

        self._total_rebounds_percentage = total_rebounds_percentage

    @property
    def true_shooting_attempts(self):
        """Gets the true_shooting_attempts of this TeamGame.


        :return: The true_shooting_attempts of this TeamGame.
        :rtype: float
        """
        return self._true_shooting_attempts

    @true_shooting_attempts.setter
    def true_shooting_attempts(self, true_shooting_attempts):
        """Sets the true_shooting_attempts of this TeamGame.


        :param true_shooting_attempts: The true_shooting_attempts of this TeamGame.
        :type true_shooting_attempts: float
        """

        self._true_shooting_attempts = true_shooting_attempts

    @property
    def true_shooting_percentage(self):
        """Gets the true_shooting_percentage of this TeamGame.


        :return: The true_shooting_percentage of this TeamGame.
        :rtype: float
        """
        return self._true_shooting_percentage

    @true_shooting_percentage.setter
    def true_shooting_percentage(self, true_shooting_percentage):
        """Sets the true_shooting_percentage of this TeamGame.


        :param true_shooting_percentage: The true_shooting_percentage of this TeamGame.
        :type true_shooting_percentage: float
        """

        self._true_shooting_percentage = true_shooting_percentage

    @property
    def turn_overs_percentage(self):
        """Gets the turn_overs_percentage of this TeamGame.


        :return: The turn_overs_percentage of this TeamGame.
        :rtype: float
        """
        return self._turn_overs_percentage

    @turn_overs_percentage.setter
    def turn_overs_percentage(self, turn_overs_percentage):
        """Sets the turn_overs_percentage of this TeamGame.


        :param turn_overs_percentage: The turn_overs_percentage of this TeamGame.
        :type turn_overs_percentage: float
        """

        self._turn_overs_percentage = turn_overs_percentage

    @property
    def turnovers(self):
        """Gets the turnovers of this TeamGame.


        :return: The turnovers of this TeamGame.
        :rtype: int
        """
        return self._turnovers

    @turnovers.setter
    def turnovers(self, turnovers):
        """Sets the turnovers of this TeamGame.


        :param turnovers: The turnovers of this TeamGame.
        :type turnovers: int
        """

        self._turnovers = turnovers

    @property
    def two_pointers_attempted(self):
        """Gets the two_pointers_attempted of this TeamGame.


        :return: The two_pointers_attempted of this TeamGame.
        :rtype: int
        """
        return self._two_pointers_attempted

    @two_pointers_attempted.setter
    def two_pointers_attempted(self, two_pointers_attempted):
        """Sets the two_pointers_attempted of this TeamGame.


        :param two_pointers_attempted: The two_pointers_attempted of this TeamGame.
        :type two_pointers_attempted: int
        """

        self._two_pointers_attempted = two_pointers_attempted

    @property
    def two_pointers_made(self):
        """Gets the two_pointers_made of this TeamGame.


        :return: The two_pointers_made of this TeamGame.
        :rtype: int
        """
        return self._two_pointers_made

    @two_pointers_made.setter
    def two_pointers_made(self, two_pointers_made):
        """Sets the two_pointers_made of this TeamGame.


        :param two_pointers_made: The two_pointers_made of this TeamGame.
        :type two_pointers_made: int
        """

        self._two_pointers_made = two_pointers_made

    @property
    def two_pointers_percentage(self):
        """Gets the two_pointers_percentage of this TeamGame.


        :return: The two_pointers_percentage of this TeamGame.
        :rtype: float
        """
        return self._two_pointers_percentage

    @two_pointers_percentage.setter
    def two_pointers_percentage(self, two_pointers_percentage):
        """Sets the two_pointers_percentage of this TeamGame.


        :param two_pointers_percentage: The two_pointers_percentage of this TeamGame.
        :type two_pointers_percentage: float
        """

        self._two_pointers_percentage = two_pointers_percentage

    @property
    def updated(self):
        """Gets the updated of this TeamGame.


        :return: The updated of this TeamGame.
        :rtype: str
        """
        return self._updated

    @updated.setter
    def updated(self, updated):
        """Sets the updated of this TeamGame.


        :param updated: The updated of this TeamGame.
        :type updated: str
        """

        self._updated = updated

    @property
    def usage_rate_percentage(self):
        """Gets the usage_rate_percentage of this TeamGame.


        :return: The usage_rate_percentage of this TeamGame.
        :rtype: float
        """
        return self._usage_rate_percentage

    @usage_rate_percentage.setter
    def usage_rate_percentage(self, usage_rate_percentage):
        """Sets the usage_rate_percentage of this TeamGame.


        :param usage_rate_percentage: The usage_rate_percentage of this TeamGame.
        :type usage_rate_percentage: float
        """

        self._usage_rate_percentage = usage_rate_percentage

    @property
    def wins(self):
        """Gets the wins of this TeamGame.


        :return: The wins of this TeamGame.
        :rtype: int
        """
        return self._wins

    @wins.setter
    def wins(self, wins):
        """Sets the wins of this TeamGame.


        :param wins: The wins of this TeamGame.
        :type wins: int
        """

        self._wins = wins
