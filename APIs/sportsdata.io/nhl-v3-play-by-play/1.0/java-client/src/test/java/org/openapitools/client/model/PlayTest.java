/*
 * NHL v3 Play-by-Play
 * NHL play-by-play API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Play
 */
public class PlayTest {
    private final Play model = new Play();

    /**
     * Model tests for Play
     */
    @Test
    public void testPlay() {
        // TODO: test Play
    }

    /**
     * Test the property 'awayTeamScore'
     */
    @Test
    public void awayTeamScoreTest() {
        // TODO: test awayTeamScore
    }

    /**
     * Test the property 'category'
     */
    @Test
    public void categoryTest() {
        // TODO: test category
    }

    /**
     * Test the property 'clockMinutes'
     */
    @Test
    public void clockMinutesTest() {
        // TODO: test clockMinutes
    }

    /**
     * Test the property 'clockSeconds'
     */
    @Test
    public void clockSecondsTest() {
        // TODO: test clockSeconds
    }

    /**
     * Test the property 'created'
     */
    @Test
    public void createdTest() {
        // TODO: test created
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'firstAssistedByPlayerID'
     */
    @Test
    public void firstAssistedByPlayerIDTest() {
        // TODO: test firstAssistedByPlayerID
    }

    /**
     * Test the property 'homeTeamScore'
     */
    @Test
    public void homeTeamScoreTest() {
        // TODO: test homeTeamScore
    }

    /**
     * Test the property 'opponent'
     */
    @Test
    public void opponentTest() {
        // TODO: test opponent
    }

    /**
     * Test the property 'opponentID'
     */
    @Test
    public void opponentIDTest() {
        // TODO: test opponentID
    }

    /**
     * Test the property 'opposingPlayerID'
     */
    @Test
    public void opposingPlayerIDTest() {
        // TODO: test opposingPlayerID
    }

    /**
     * Test the property 'periodID'
     */
    @Test
    public void periodIDTest() {
        // TODO: test periodID
    }

    /**
     * Test the property 'periodName'
     */
    @Test
    public void periodNameTest() {
        // TODO: test periodName
    }

    /**
     * Test the property 'playID'
     */
    @Test
    public void playIDTest() {
        // TODO: test playID
    }

    /**
     * Test the property 'playerID'
     */
    @Test
    public void playerIDTest() {
        // TODO: test playerID
    }

    /**
     * Test the property 'powerPlayTeam'
     */
    @Test
    public void powerPlayTeamTest() {
        // TODO: test powerPlayTeam
    }

    /**
     * Test the property 'powerPlayTeamID'
     */
    @Test
    public void powerPlayTeamIDTest() {
        // TODO: test powerPlayTeamID
    }

    /**
     * Test the property 'secondAssistedByPlayerID'
     */
    @Test
    public void secondAssistedByPlayerIDTest() {
        // TODO: test secondAssistedByPlayerID
    }

    /**
     * Test the property 'sequence'
     */
    @Test
    public void sequenceTest() {
        // TODO: test sequence
    }

    /**
     * Test the property 'team'
     */
    @Test
    public void teamTest() {
        // TODO: test team
    }

    /**
     * Test the property 'teamID'
     */
    @Test
    public void teamIDTest() {
        // TODO: test teamID
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'updated'
     */
    @Test
    public void updatedTest() {
        // TODO: test updated
    }

}
