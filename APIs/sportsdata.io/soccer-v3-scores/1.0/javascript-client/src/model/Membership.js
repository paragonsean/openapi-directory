/**
 * Soccer v3 Scores
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Membership model module.
 * @module model/Membership
 * @version 1.0
 */
class Membership {
    /**
     * Constructs a new <code>Membership</code>.
     * @alias module:model/Membership
     */
    constructor() { 
        
        Membership.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Membership</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Membership} obj Optional instance to populate.
     * @return {module:model/Membership} The populated <code>Membership</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Membership();

            if (data.hasOwnProperty('Active')) {
                obj['Active'] = ApiClient.convertToType(data['Active'], 'Boolean');
            }
            if (data.hasOwnProperty('EndDate')) {
                obj['EndDate'] = ApiClient.convertToType(data['EndDate'], 'String');
            }
            if (data.hasOwnProperty('Jersey')) {
                obj['Jersey'] = ApiClient.convertToType(data['Jersey'], 'Number');
            }
            if (data.hasOwnProperty('MembershipId')) {
                obj['MembershipId'] = ApiClient.convertToType(data['MembershipId'], 'Number');
            }
            if (data.hasOwnProperty('PlayerId')) {
                obj['PlayerId'] = ApiClient.convertToType(data['PlayerId'], 'Number');
            }
            if (data.hasOwnProperty('PlayerName')) {
                obj['PlayerName'] = ApiClient.convertToType(data['PlayerName'], 'String');
            }
            if (data.hasOwnProperty('StartDate')) {
                obj['StartDate'] = ApiClient.convertToType(data['StartDate'], 'String');
            }
            if (data.hasOwnProperty('TeamArea')) {
                obj['TeamArea'] = ApiClient.convertToType(data['TeamArea'], 'String');
            }
            if (data.hasOwnProperty('TeamId')) {
                obj['TeamId'] = ApiClient.convertToType(data['TeamId'], 'Number');
            }
            if (data.hasOwnProperty('TeamName')) {
                obj['TeamName'] = ApiClient.convertToType(data['TeamName'], 'String');
            }
            if (data.hasOwnProperty('Updated')) {
                obj['Updated'] = ApiClient.convertToType(data['Updated'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Membership</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Membership</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['EndDate'] && !(typeof data['EndDate'] === 'string' || data['EndDate'] instanceof String)) {
            throw new Error("Expected the field `EndDate` to be a primitive type in the JSON string but got " + data['EndDate']);
        }
        // ensure the json data is a string
        if (data['PlayerName'] && !(typeof data['PlayerName'] === 'string' || data['PlayerName'] instanceof String)) {
            throw new Error("Expected the field `PlayerName` to be a primitive type in the JSON string but got " + data['PlayerName']);
        }
        // ensure the json data is a string
        if (data['StartDate'] && !(typeof data['StartDate'] === 'string' || data['StartDate'] instanceof String)) {
            throw new Error("Expected the field `StartDate` to be a primitive type in the JSON string but got " + data['StartDate']);
        }
        // ensure the json data is a string
        if (data['TeamArea'] && !(typeof data['TeamArea'] === 'string' || data['TeamArea'] instanceof String)) {
            throw new Error("Expected the field `TeamArea` to be a primitive type in the JSON string but got " + data['TeamArea']);
        }
        // ensure the json data is a string
        if (data['TeamName'] && !(typeof data['TeamName'] === 'string' || data['TeamName'] instanceof String)) {
            throw new Error("Expected the field `TeamName` to be a primitive type in the JSON string but got " + data['TeamName']);
        }
        // ensure the json data is a string
        if (data['Updated'] && !(typeof data['Updated'] === 'string' || data['Updated'] instanceof String)) {
            throw new Error("Expected the field `Updated` to be a primitive type in the JSON string but got " + data['Updated']);
        }

        return true;
    }


}



/**
 * @member {Boolean} Active
 */
Membership.prototype['Active'] = undefined;

/**
 * @member {String} EndDate
 */
Membership.prototype['EndDate'] = undefined;

/**
 * @member {Number} Jersey
 */
Membership.prototype['Jersey'] = undefined;

/**
 * @member {Number} MembershipId
 */
Membership.prototype['MembershipId'] = undefined;

/**
 * @member {Number} PlayerId
 */
Membership.prototype['PlayerId'] = undefined;

/**
 * @member {String} PlayerName
 */
Membership.prototype['PlayerName'] = undefined;

/**
 * @member {String} StartDate
 */
Membership.prototype['StartDate'] = undefined;

/**
 * @member {String} TeamArea
 */
Membership.prototype['TeamArea'] = undefined;

/**
 * @member {Number} TeamId
 */
Membership.prototype['TeamId'] = undefined;

/**
 * @member {String} TeamName
 */
Membership.prototype['TeamName'] = undefined;

/**
 * @member {String} Updated
 */
Membership.prototype['Updated'] = undefined;






export default Membership;

