# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.game import Game
from openapi_server.models.player_season import PlayerSeason
from openapi_server.models.standing import Standing
from openapi_server.models.team_season import TeamSeason
from openapi_server import util


class Round(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, current_round: bool=None, current_week: int=None, end_date: str=None, games: List[Game]=None, name: str=None, player_seasons: List[PlayerSeason]=None, round_id: int=None, season: int=None, season_id: int=None, season_type: int=None, standings: List[Standing]=None, start_date: str=None, team_seasons: List[TeamSeason]=None, type: str=None):
        """Round - a model defined in OpenAPI

        :param current_round: The current_round of this Round.
        :param current_week: The current_week of this Round.
        :param end_date: The end_date of this Round.
        :param games: The games of this Round.
        :param name: The name of this Round.
        :param player_seasons: The player_seasons of this Round.
        :param round_id: The round_id of this Round.
        :param season: The season of this Round.
        :param season_id: The season_id of this Round.
        :param season_type: The season_type of this Round.
        :param standings: The standings of this Round.
        :param start_date: The start_date of this Round.
        :param team_seasons: The team_seasons of this Round.
        :param type: The type of this Round.
        """
        self.openapi_types = {
            'current_round': bool,
            'current_week': int,
            'end_date': str,
            'games': List[Game],
            'name': str,
            'player_seasons': List[PlayerSeason],
            'round_id': int,
            'season': int,
            'season_id': int,
            'season_type': int,
            'standings': List[Standing],
            'start_date': str,
            'team_seasons': List[TeamSeason],
            'type': str
        }

        self.attribute_map = {
            'current_round': 'CurrentRound',
            'current_week': 'CurrentWeek',
            'end_date': 'EndDate',
            'games': 'Games',
            'name': 'Name',
            'player_seasons': 'PlayerSeasons',
            'round_id': 'RoundId',
            'season': 'Season',
            'season_id': 'SeasonId',
            'season_type': 'SeasonType',
            'standings': 'Standings',
            'start_date': 'StartDate',
            'team_seasons': 'TeamSeasons',
            'type': 'Type'
        }

        self._current_round = current_round
        self._current_week = current_week
        self._end_date = end_date
        self._games = games
        self._name = name
        self._player_seasons = player_seasons
        self._round_id = round_id
        self._season = season
        self._season_id = season_id
        self._season_type = season_type
        self._standings = standings
        self._start_date = start_date
        self._team_seasons = team_seasons
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Round':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Round of this Round.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def current_round(self):
        """Gets the current_round of this Round.


        :return: The current_round of this Round.
        :rtype: bool
        """
        return self._current_round

    @current_round.setter
    def current_round(self, current_round):
        """Sets the current_round of this Round.


        :param current_round: The current_round of this Round.
        :type current_round: bool
        """

        self._current_round = current_round

    @property
    def current_week(self):
        """Gets the current_week of this Round.


        :return: The current_week of this Round.
        :rtype: int
        """
        return self._current_week

    @current_week.setter
    def current_week(self, current_week):
        """Sets the current_week of this Round.


        :param current_week: The current_week of this Round.
        :type current_week: int
        """

        self._current_week = current_week

    @property
    def end_date(self):
        """Gets the end_date of this Round.


        :return: The end_date of this Round.
        :rtype: str
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this Round.


        :param end_date: The end_date of this Round.
        :type end_date: str
        """

        self._end_date = end_date

    @property
    def games(self):
        """Gets the games of this Round.


        :return: The games of this Round.
        :rtype: List[Game]
        """
        return self._games

    @games.setter
    def games(self, games):
        """Sets the games of this Round.


        :param games: The games of this Round.
        :type games: List[Game]
        """

        self._games = games

    @property
    def name(self):
        """Gets the name of this Round.


        :return: The name of this Round.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Round.


        :param name: The name of this Round.
        :type name: str
        """

        self._name = name

    @property
    def player_seasons(self):
        """Gets the player_seasons of this Round.


        :return: The player_seasons of this Round.
        :rtype: List[PlayerSeason]
        """
        return self._player_seasons

    @player_seasons.setter
    def player_seasons(self, player_seasons):
        """Sets the player_seasons of this Round.


        :param player_seasons: The player_seasons of this Round.
        :type player_seasons: List[PlayerSeason]
        """

        self._player_seasons = player_seasons

    @property
    def round_id(self):
        """Gets the round_id of this Round.


        :return: The round_id of this Round.
        :rtype: int
        """
        return self._round_id

    @round_id.setter
    def round_id(self, round_id):
        """Sets the round_id of this Round.


        :param round_id: The round_id of this Round.
        :type round_id: int
        """

        self._round_id = round_id

    @property
    def season(self):
        """Gets the season of this Round.


        :return: The season of this Round.
        :rtype: int
        """
        return self._season

    @season.setter
    def season(self, season):
        """Sets the season of this Round.


        :param season: The season of this Round.
        :type season: int
        """

        self._season = season

    @property
    def season_id(self):
        """Gets the season_id of this Round.


        :return: The season_id of this Round.
        :rtype: int
        """
        return self._season_id

    @season_id.setter
    def season_id(self, season_id):
        """Sets the season_id of this Round.


        :param season_id: The season_id of this Round.
        :type season_id: int
        """

        self._season_id = season_id

    @property
    def season_type(self):
        """Gets the season_type of this Round.


        :return: The season_type of this Round.
        :rtype: int
        """
        return self._season_type

    @season_type.setter
    def season_type(self, season_type):
        """Sets the season_type of this Round.


        :param season_type: The season_type of this Round.
        :type season_type: int
        """

        self._season_type = season_type

    @property
    def standings(self):
        """Gets the standings of this Round.


        :return: The standings of this Round.
        :rtype: List[Standing]
        """
        return self._standings

    @standings.setter
    def standings(self, standings):
        """Sets the standings of this Round.


        :param standings: The standings of this Round.
        :type standings: List[Standing]
        """

        self._standings = standings

    @property
    def start_date(self):
        """Gets the start_date of this Round.


        :return: The start_date of this Round.
        :rtype: str
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this Round.


        :param start_date: The start_date of this Round.
        :type start_date: str
        """

        self._start_date = start_date

    @property
    def team_seasons(self):
        """Gets the team_seasons of this Round.


        :return: The team_seasons of this Round.
        :rtype: List[TeamSeason]
        """
        return self._team_seasons

    @team_seasons.setter
    def team_seasons(self, team_seasons):
        """Sets the team_seasons of this Round.


        :param team_seasons: The team_seasons of this Round.
        :type team_seasons: List[TeamSeason]
        """

        self._team_seasons = team_seasons

    @property
    def type(self):
        """Gets the type of this Round.


        :return: The type of this Round.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Round.


        :param type: The type of this Round.
        :type type: str
        """

        self._type = type
