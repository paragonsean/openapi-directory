# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Membership(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active: bool=None, end_date: str=None, jersey: int=None, membership_id: int=None, player_id: int=None, player_name: str=None, start_date: str=None, team_area: str=None, team_id: int=None, team_name: str=None, updated: str=None):
        """Membership - a model defined in OpenAPI

        :param active: The active of this Membership.
        :param end_date: The end_date of this Membership.
        :param jersey: The jersey of this Membership.
        :param membership_id: The membership_id of this Membership.
        :param player_id: The player_id of this Membership.
        :param player_name: The player_name of this Membership.
        :param start_date: The start_date of this Membership.
        :param team_area: The team_area of this Membership.
        :param team_id: The team_id of this Membership.
        :param team_name: The team_name of this Membership.
        :param updated: The updated of this Membership.
        """
        self.openapi_types = {
            'active': bool,
            'end_date': str,
            'jersey': int,
            'membership_id': int,
            'player_id': int,
            'player_name': str,
            'start_date': str,
            'team_area': str,
            'team_id': int,
            'team_name': str,
            'updated': str
        }

        self.attribute_map = {
            'active': 'Active',
            'end_date': 'EndDate',
            'jersey': 'Jersey',
            'membership_id': 'MembershipId',
            'player_id': 'PlayerId',
            'player_name': 'PlayerName',
            'start_date': 'StartDate',
            'team_area': 'TeamArea',
            'team_id': 'TeamId',
            'team_name': 'TeamName',
            'updated': 'Updated'
        }

        self._active = active
        self._end_date = end_date
        self._jersey = jersey
        self._membership_id = membership_id
        self._player_id = player_id
        self._player_name = player_name
        self._start_date = start_date
        self._team_area = team_area
        self._team_id = team_id
        self._team_name = team_name
        self._updated = updated

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Membership':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Membership of this Membership.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active(self):
        """Gets the active of this Membership.


        :return: The active of this Membership.
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this Membership.


        :param active: The active of this Membership.
        :type active: bool
        """

        self._active = active

    @property
    def end_date(self):
        """Gets the end_date of this Membership.


        :return: The end_date of this Membership.
        :rtype: str
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this Membership.


        :param end_date: The end_date of this Membership.
        :type end_date: str
        """

        self._end_date = end_date

    @property
    def jersey(self):
        """Gets the jersey of this Membership.


        :return: The jersey of this Membership.
        :rtype: int
        """
        return self._jersey

    @jersey.setter
    def jersey(self, jersey):
        """Sets the jersey of this Membership.


        :param jersey: The jersey of this Membership.
        :type jersey: int
        """

        self._jersey = jersey

    @property
    def membership_id(self):
        """Gets the membership_id of this Membership.


        :return: The membership_id of this Membership.
        :rtype: int
        """
        return self._membership_id

    @membership_id.setter
    def membership_id(self, membership_id):
        """Sets the membership_id of this Membership.


        :param membership_id: The membership_id of this Membership.
        :type membership_id: int
        """

        self._membership_id = membership_id

    @property
    def player_id(self):
        """Gets the player_id of this Membership.


        :return: The player_id of this Membership.
        :rtype: int
        """
        return self._player_id

    @player_id.setter
    def player_id(self, player_id):
        """Sets the player_id of this Membership.


        :param player_id: The player_id of this Membership.
        :type player_id: int
        """

        self._player_id = player_id

    @property
    def player_name(self):
        """Gets the player_name of this Membership.


        :return: The player_name of this Membership.
        :rtype: str
        """
        return self._player_name

    @player_name.setter
    def player_name(self, player_name):
        """Sets the player_name of this Membership.


        :param player_name: The player_name of this Membership.
        :type player_name: str
        """

        self._player_name = player_name

    @property
    def start_date(self):
        """Gets the start_date of this Membership.


        :return: The start_date of this Membership.
        :rtype: str
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this Membership.


        :param start_date: The start_date of this Membership.
        :type start_date: str
        """

        self._start_date = start_date

    @property
    def team_area(self):
        """Gets the team_area of this Membership.


        :return: The team_area of this Membership.
        :rtype: str
        """
        return self._team_area

    @team_area.setter
    def team_area(self, team_area):
        """Sets the team_area of this Membership.


        :param team_area: The team_area of this Membership.
        :type team_area: str
        """

        self._team_area = team_area

    @property
    def team_id(self):
        """Gets the team_id of this Membership.


        :return: The team_id of this Membership.
        :rtype: int
        """
        return self._team_id

    @team_id.setter
    def team_id(self, team_id):
        """Sets the team_id of this Membership.


        :param team_id: The team_id of this Membership.
        :type team_id: int
        """

        self._team_id = team_id

    @property
    def team_name(self):
        """Gets the team_name of this Membership.


        :return: The team_name of this Membership.
        :rtype: str
        """
        return self._team_name

    @team_name.setter
    def team_name(self, team_name):
        """Sets the team_name of this Membership.


        :param team_name: The team_name of this Membership.
        :type team_name: str
        """

        self._team_name = team_name

    @property
    def updated(self):
        """Gets the updated of this Membership.


        :return: The updated of this Membership.
        :rtype: str
        """
        return self._updated

    @updated.setter
    def updated(self, updated):
        """Sets the updated of this Membership.


        :param updated: The updated of this Membership.
        :type updated: str
        """

        self._updated = updated
