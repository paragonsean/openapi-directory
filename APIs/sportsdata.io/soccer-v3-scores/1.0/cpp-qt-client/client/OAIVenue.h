/**
 * Soccer v3 Scores
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVenue.h
 *
 * 
 */

#ifndef OAIVenue_H
#define OAIVenue_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIVenue : public OAIObject {
public:
    OAIVenue();
    OAIVenue(QString json);
    ~OAIVenue() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAddress() const;
    void setAddress(const QString &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    qint32 getCapacity() const;
    void setCapacity(const qint32 &capacity);
    bool is_capacity_Set() const;
    bool is_capacity_Valid() const;

    QString getCity() const;
    void setCity(const QString &city);
    bool is_city_Set() const;
    bool is_city_Valid() const;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    double getGeoLat() const;
    void setGeoLat(const double &geo_lat);
    bool is_geo_lat_Set() const;
    bool is_geo_lat_Valid() const;

    double getGeoLong() const;
    void setGeoLong(const double &geo_long);
    bool is_geo_long_Set() const;
    bool is_geo_long_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNickname1() const;
    void setNickname1(const QString &nickname1);
    bool is_nickname1_Set() const;
    bool is_nickname1_Valid() const;

    QString getNickname2() const;
    void setNickname2(const QString &nickname2);
    bool is_nickname2_Set() const;
    bool is_nickname2_Valid() const;

    bool isOpen() const;
    void setOpen(const bool &open);
    bool is_open_Set() const;
    bool is_open_Valid() const;

    qint32 getOpened() const;
    void setOpened(const qint32 &opened);
    bool is_opened_Set() const;
    bool is_opened_Valid() const;

    QString getSurface() const;
    void setSurface(const QString &surface);
    bool is_surface_Set() const;
    bool is_surface_Valid() const;

    qint32 getVenueId() const;
    void setVenueId(const qint32 &venue_id);
    bool is_venue_id_Set() const;
    bool is_venue_id_Valid() const;

    QString getZip() const;
    void setZip(const QString &zip);
    bool is_zip_Set() const;
    bool is_zip_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    qint32 m_capacity;
    bool m_capacity_isSet;
    bool m_capacity_isValid;

    QString m_city;
    bool m_city_isSet;
    bool m_city_isValid;

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    double m_geo_lat;
    bool m_geo_lat_isSet;
    bool m_geo_lat_isValid;

    double m_geo_long;
    bool m_geo_long_isSet;
    bool m_geo_long_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_nickname1;
    bool m_nickname1_isSet;
    bool m_nickname1_isValid;

    QString m_nickname2;
    bool m_nickname2_isSet;
    bool m_nickname2_isValid;

    bool m_open;
    bool m_open_isSet;
    bool m_open_isValid;

    qint32 m_opened;
    bool m_opened_isSet;
    bool m_opened_isValid;

    QString m_surface;
    bool m_surface_isSet;
    bool m_surface_isValid;

    qint32 m_venue_id;
    bool m_venue_id_isSet;
    bool m_venue_id_isValid;

    QString m_zip;
    bool m_zip_isSet;
    bool m_zip_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVenue)

#endif // OAIVenue_H
