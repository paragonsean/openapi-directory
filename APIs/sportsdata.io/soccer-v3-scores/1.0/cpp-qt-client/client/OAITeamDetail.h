/**
 * Soccer v3 Scores
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITeamDetail.h
 *
 * 
 */

#ifndef OAITeamDetail_H
#define OAITeamDetail_H

#include <QJsonObject>

#include "OAIPlayer.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPlayer;

class OAITeamDetail : public OAIObject {
public:
    OAITeamDetail();
    OAITeamDetail(QString json);
    ~OAITeamDetail() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isActive() const;
    void setActive(const bool &active);
    bool is_active_Set() const;
    bool is_active_Valid() const;

    QString getAddress() const;
    void setAddress(const QString &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    qint32 getAreaId() const;
    void setAreaId(const qint32 &area_id);
    bool is_area_id_Set() const;
    bool is_area_id_Valid() const;

    QString getAreaName() const;
    void setAreaName(const QString &area_name);
    bool is_area_name_Set() const;
    bool is_area_name_Valid() const;

    QString getCity() const;
    void setCity(const QString &city);
    bool is_city_Set() const;
    bool is_city_Valid() const;

    QString getClubColor1() const;
    void setClubColor1(const QString &club_color1);
    bool is_club_color1_Set() const;
    bool is_club_color1_Valid() const;

    QString getClubColor2() const;
    void setClubColor2(const QString &club_color2);
    bool is_club_color2_Set() const;
    bool is_club_color2_Valid() const;

    QString getClubColor3() const;
    void setClubColor3(const QString &club_color3);
    bool is_club_color3_Set() const;
    bool is_club_color3_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    QString getFax() const;
    void setFax(const QString &fax);
    bool is_fax_Set() const;
    bool is_fax_Valid() const;

    qint32 getFounded() const;
    void setFounded(const qint32 &founded);
    bool is_founded_Set() const;
    bool is_founded_Valid() const;

    QString getFullName() const;
    void setFullName(const QString &full_name);
    bool is_full_name_Set() const;
    bool is_full_name_Valid() const;

    QString getGender() const;
    void setGender(const QString &gender);
    bool is_gender_Set() const;
    bool is_gender_Valid() const;

    qint32 getGlobalTeamId() const;
    void setGlobalTeamId(const qint32 &global_team_id);
    bool is_global_team_id_Set() const;
    bool is_global_team_id_Valid() const;

    QString getKey() const;
    void setKey(const QString &key);
    bool is_key_Set() const;
    bool is_key_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNickname1() const;
    void setNickname1(const QString &nickname1);
    bool is_nickname1_Set() const;
    bool is_nickname1_Valid() const;

    QString getNickname2() const;
    void setNickname2(const QString &nickname2);
    bool is_nickname2_Set() const;
    bool is_nickname2_Valid() const;

    QString getNickname3() const;
    void setNickname3(const QString &nickname3);
    bool is_nickname3_Set() const;
    bool is_nickname3_Valid() const;

    QString getPhone() const;
    void setPhone(const QString &phone);
    bool is_phone_Set() const;
    bool is_phone_Valid() const;

    QList<OAIPlayer> getPlayers() const;
    void setPlayers(const QList<OAIPlayer> &players);
    bool is_players_Set() const;
    bool is_players_Valid() const;

    qint32 getTeamId() const;
    void setTeamId(const qint32 &team_id);
    bool is_team_id_Set() const;
    bool is_team_id_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    qint32 getVenueId() const;
    void setVenueId(const qint32 &venue_id);
    bool is_venue_id_Set() const;
    bool is_venue_id_Valid() const;

    QString getVenueName() const;
    void setVenueName(const QString &venue_name);
    bool is_venue_name_Set() const;
    bool is_venue_name_Valid() const;

    QString getWebsite() const;
    void setWebsite(const QString &website);
    bool is_website_Set() const;
    bool is_website_Valid() const;

    QString getWikipediaLogoUrl() const;
    void setWikipediaLogoUrl(const QString &wikipedia_logo_url);
    bool is_wikipedia_logo_url_Set() const;
    bool is_wikipedia_logo_url_Valid() const;

    QString getWikipediaWordMarkUrl() const;
    void setWikipediaWordMarkUrl(const QString &wikipedia_word_mark_url);
    bool is_wikipedia_word_mark_url_Set() const;
    bool is_wikipedia_word_mark_url_Valid() const;

    QString getZip() const;
    void setZip(const QString &zip);
    bool is_zip_Set() const;
    bool is_zip_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_active;
    bool m_active_isSet;
    bool m_active_isValid;

    QString m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    qint32 m_area_id;
    bool m_area_id_isSet;
    bool m_area_id_isValid;

    QString m_area_name;
    bool m_area_name_isSet;
    bool m_area_name_isValid;

    QString m_city;
    bool m_city_isSet;
    bool m_city_isValid;

    QString m_club_color1;
    bool m_club_color1_isSet;
    bool m_club_color1_isValid;

    QString m_club_color2;
    bool m_club_color2_isSet;
    bool m_club_color2_isValid;

    QString m_club_color3;
    bool m_club_color3_isSet;
    bool m_club_color3_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    QString m_fax;
    bool m_fax_isSet;
    bool m_fax_isValid;

    qint32 m_founded;
    bool m_founded_isSet;
    bool m_founded_isValid;

    QString m_full_name;
    bool m_full_name_isSet;
    bool m_full_name_isValid;

    QString m_gender;
    bool m_gender_isSet;
    bool m_gender_isValid;

    qint32 m_global_team_id;
    bool m_global_team_id_isSet;
    bool m_global_team_id_isValid;

    QString m_key;
    bool m_key_isSet;
    bool m_key_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_nickname1;
    bool m_nickname1_isSet;
    bool m_nickname1_isValid;

    QString m_nickname2;
    bool m_nickname2_isSet;
    bool m_nickname2_isValid;

    QString m_nickname3;
    bool m_nickname3_isSet;
    bool m_nickname3_isValid;

    QString m_phone;
    bool m_phone_isSet;
    bool m_phone_isValid;

    QList<OAIPlayer> m_players;
    bool m_players_isSet;
    bool m_players_isValid;

    qint32 m_team_id;
    bool m_team_id_isSet;
    bool m_team_id_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    qint32 m_venue_id;
    bool m_venue_id_isSet;
    bool m_venue_id_isValid;

    QString m_venue_name;
    bool m_venue_name_isSet;
    bool m_venue_name_isValid;

    QString m_website;
    bool m_website_isSet;
    bool m_website_isValid;

    QString m_wikipedia_logo_url;
    bool m_wikipedia_logo_url_isSet;
    bool m_wikipedia_logo_url_isValid;

    QString m_wikipedia_word_mark_url;
    bool m_wikipedia_word_mark_url_isSet;
    bool m_wikipedia_word_mark_url_isValid;

    QString m_zip;
    bool m_zip_isSet;
    bool m_zip_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITeamDetail)

#endif // OAITeamDetail_H
