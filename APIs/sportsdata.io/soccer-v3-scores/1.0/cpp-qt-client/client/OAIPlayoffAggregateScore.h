/**
 * Soccer v3 Scores
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPlayoffAggregateScore.h
 *
 * 
 */

#ifndef OAIPlayoffAggregateScore_H
#define OAIPlayoffAggregateScore_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPlayoffAggregateScore : public OAIObject {
public:
    OAIPlayoffAggregateScore();
    OAIPlayoffAggregateScore(QString json);
    ~OAIPlayoffAggregateScore() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCreated() const;
    void setCreated(const QString &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    qint32 getTeamAAggregateScore() const;
    void setTeamAAggregateScore(const qint32 &team_a_aggregate_score);
    bool is_team_a_aggregate_score_Set() const;
    bool is_team_a_aggregate_score_Valid() const;

    qint32 getTeamAId() const;
    void setTeamAId(const qint32 &team_a_id);
    bool is_team_a_id_Set() const;
    bool is_team_a_id_Valid() const;

    qint32 getTeamBAggregateScore() const;
    void setTeamBAggregateScore(const qint32 &team_b_aggregate_score);
    bool is_team_b_aggregate_score_Set() const;
    bool is_team_b_aggregate_score_Valid() const;

    qint32 getTeamBId() const;
    void setTeamBId(const qint32 &team_b_id);
    bool is_team_b_id_Set() const;
    bool is_team_b_id_Valid() const;

    QString getUpdated() const;
    void setUpdated(const QString &updated);
    bool is_updated_Set() const;
    bool is_updated_Valid() const;

    qint32 getWinningTeamId() const;
    void setWinningTeamId(const qint32 &winning_team_id);
    bool is_winning_team_id_Set() const;
    bool is_winning_team_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    qint32 m_team_a_aggregate_score;
    bool m_team_a_aggregate_score_isSet;
    bool m_team_a_aggregate_score_isValid;

    qint32 m_team_a_id;
    bool m_team_a_id_isSet;
    bool m_team_a_id_isValid;

    qint32 m_team_b_aggregate_score;
    bool m_team_b_aggregate_score_isSet;
    bool m_team_b_aggregate_score_isValid;

    qint32 m_team_b_id;
    bool m_team_b_id_isSet;
    bool m_team_b_id_isValid;

    QString m_updated;
    bool m_updated_isSet;
    bool m_updated_isValid;

    qint32 m_winning_team_id;
    bool m_winning_team_id_isSet;
    bool m_winning_team_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPlayoffAggregateScore)

#endif // OAIPlayoffAggregateScore_H
