# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CardLegal(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, expanded: bool=None, standard: bool=None):
        """CardLegal - a model defined in OpenAPI

        :param expanded: The expanded of this CardLegal.
        :param standard: The standard of this CardLegal.
        """
        self.openapi_types = {
            'expanded': bool,
            'standard': bool
        }

        self.attribute_map = {
            'expanded': 'expanded',
            'standard': 'standard'
        }

        self._expanded = expanded
        self._standard = standard

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CardLegal':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Card_legal of this CardLegal.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def expanded(self):
        """Gets the expanded of this CardLegal.


        :return: The expanded of this CardLegal.
        :rtype: bool
        """
        return self._expanded

    @expanded.setter
    def expanded(self, expanded):
        """Sets the expanded of this CardLegal.


        :param expanded: The expanded of this CardLegal.
        :type expanded: bool
        """

        self._expanded = expanded

    @property
    def standard(self):
        """Gets the standard of this CardLegal.


        :return: The standard of this CardLegal.
        :rtype: bool
        """
        return self._standard

    @standard.setter
    def standard(self, standard):
        """Sets the standard of this CardLegal.


        :param standard: The standard of this CardLegal.
        :type standard: bool
        """

        self._standard = standard
