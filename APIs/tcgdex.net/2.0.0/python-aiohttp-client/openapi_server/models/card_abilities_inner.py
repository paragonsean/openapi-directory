# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CardAbilitiesInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, effect: str=None, name: str=None, type: str=None):
        """CardAbilitiesInner - a model defined in OpenAPI

        :param effect: The effect of this CardAbilitiesInner.
        :param name: The name of this CardAbilitiesInner.
        :param type: The type of this CardAbilitiesInner.
        """
        self.openapi_types = {
            'effect': str,
            'name': str,
            'type': str
        }

        self.attribute_map = {
            'effect': 'effect',
            'name': 'name',
            'type': 'type'
        }

        self._effect = effect
        self._name = name
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CardAbilitiesInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Card_abilities_inner of this CardAbilitiesInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def effect(self):
        """Gets the effect of this CardAbilitiesInner.


        :return: The effect of this CardAbilitiesInner.
        :rtype: str
        """
        return self._effect

    @effect.setter
    def effect(self, effect):
        """Sets the effect of this CardAbilitiesInner.


        :param effect: The effect of this CardAbilitiesInner.
        :type effect: str
        """

        self._effect = effect

    @property
    def name(self):
        """Gets the name of this CardAbilitiesInner.


        :return: The name of this CardAbilitiesInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CardAbilitiesInner.


        :param name: The name of this CardAbilitiesInner.
        :type name: str
        """

        self._name = name

    @property
    def type(self):
        """Gets the type of this CardAbilitiesInner.


        :return: The type of this CardAbilitiesInner.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this CardAbilitiesInner.


        :param type: The type of this CardAbilitiesInner.
        :type type: str
        """

        self._type = type
