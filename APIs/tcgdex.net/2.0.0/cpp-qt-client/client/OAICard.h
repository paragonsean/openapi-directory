/**
 * TCGdex API
 * A Multilanguage Pok√©mon TCG Database with Cards Pictures and most of the informations contained on the cards. You can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: contact@tcgdex.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICard.h
 *
 * 
 */

#ifndef OAICard_H
#define OAICard_H

#include <QJsonObject>

#include "OAICard_abilities_inner.h"
#include "OAICard_attacks_inner.h"
#include "OAICard_item.h"
#include "OAICard_legal.h"
#include "OAICard_variants.h"
#include "OAISetResume.h"
#include "OAIWeakRes_inner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICard_abilities_inner;
class OAICard_attacks_inner;
class OAICard_item;
class OAICard_legal;
class OAIWeakRes_inner;
class OAISetResume;
class OAICard_variants;

class OAICard : public OAIObject {
public:
    OAICard();
    OAICard(QString json);
    ~OAICard() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAICard_abilities_inner> getAbilities() const;
    void setAbilities(const QList<OAICard_abilities_inner> &abilities);
    bool is_abilities_Set() const;
    bool is_abilities_Valid() const;

    QList<OAICard_attacks_inner> getAttacks() const;
    void setAttacks(const QList<OAICard_attacks_inner> &attacks);
    bool is_attacks_Set() const;
    bool is_attacks_Valid() const;

    QString getCategory() const;
    void setCategory(const QString &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList<double> getDexId() const;
    void setDexId(const QList<double> &dex_id);
    bool is_dex_id_Set() const;
    bool is_dex_id_Valid() const;

    QString getEnergyType() const;
    void setEnergyType(const QString &energy_type);
    bool is_energy_type_Set() const;
    bool is_energy_type_Valid() const;

    QString getEvolveFrom() const;
    void setEvolveFrom(const QString &evolve_from);
    bool is_evolve_from_Set() const;
    bool is_evolve_from_Valid() const;

    double getHp() const;
    void setHp(const double &hp);
    bool is_hp_Set() const;
    bool is_hp_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getIllustrator() const;
    void setIllustrator(const QString &illustrator);
    bool is_illustrator_Set() const;
    bool is_illustrator_Valid() const;

    QString getImage() const;
    void setImage(const QString &image);
    bool is_image_Set() const;
    bool is_image_Valid() const;

    OAICard_item getItem() const;
    void setItem(const OAICard_item &item);
    bool is_item_Set() const;
    bool is_item_Valid() const;

    OAICard_legal getLegal() const;
    void setLegal(const OAICard_legal &legal);
    bool is_legal_Set() const;
    bool is_legal_Valid() const;

    double getLevel() const;
    void setLevel(const double &level);
    bool is_level_Set() const;
    bool is_level_Valid() const;

    QString getLocalId() const;
    void setLocalId(const QString &local_id);
    bool is_local_id_Set() const;
    bool is_local_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getRarity() const;
    void setRarity(const QString &rarity);
    bool is_rarity_Set() const;
    bool is_rarity_Valid() const;

    QString getRegulationMark() const;
    void setRegulationMark(const QString &regulation_mark);
    bool is_regulation_mark_Set() const;
    bool is_regulation_mark_Valid() const;

    QList<QList> getResistances() const;
    void setResistances(const QList<QList> &resistances);
    bool is_resistances_Set() const;
    bool is_resistances_Valid() const;

    double getRetreat() const;
    void setRetreat(const double &retreat);
    bool is_retreat_Set() const;
    bool is_retreat_Valid() const;

    OAISetResume getRSet() const;
    void setRSet(const OAISetResume &r_set);
    bool is_r_set_Set() const;
    bool is_r_set_Valid() const;

    QString getStage() const;
    void setStage(const QString &stage);
    bool is_stage_Set() const;
    bool is_stage_Valid() const;

    QString getSuffix() const;
    void setSuffix(const QString &suffix);
    bool is_suffix_Set() const;
    bool is_suffix_Valid() const;

    QString getTrainerType() const;
    void setTrainerType(const QString &trainer_type);
    bool is_trainer_type_Set() const;
    bool is_trainer_type_Valid() const;

    QList<QString> getTypes() const;
    void setTypes(const QList<QString> &types);
    bool is_types_Set() const;
    bool is_types_Valid() const;

    OAICard_variants getVariants() const;
    void setVariants(const OAICard_variants &variants);
    bool is_variants_Set() const;
    bool is_variants_Valid() const;

    QList<QList> getWeaknesses() const;
    void setWeaknesses(const QList<QList> &weaknesses);
    bool is_weaknesses_Set() const;
    bool is_weaknesses_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAICard_abilities_inner> m_abilities;
    bool m_abilities_isSet;
    bool m_abilities_isValid;

    QList<OAICard_attacks_inner> m_attacks;
    bool m_attacks_isSet;
    bool m_attacks_isValid;

    QString m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList<double> m_dex_id;
    bool m_dex_id_isSet;
    bool m_dex_id_isValid;

    QString m_energy_type;
    bool m_energy_type_isSet;
    bool m_energy_type_isValid;

    QString m_evolve_from;
    bool m_evolve_from_isSet;
    bool m_evolve_from_isValid;

    double m_hp;
    bool m_hp_isSet;
    bool m_hp_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_illustrator;
    bool m_illustrator_isSet;
    bool m_illustrator_isValid;

    QString m_image;
    bool m_image_isSet;
    bool m_image_isValid;

    OAICard_item m_item;
    bool m_item_isSet;
    bool m_item_isValid;

    OAICard_legal m_legal;
    bool m_legal_isSet;
    bool m_legal_isValid;

    double m_level;
    bool m_level_isSet;
    bool m_level_isValid;

    QString m_local_id;
    bool m_local_id_isSet;
    bool m_local_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_rarity;
    bool m_rarity_isSet;
    bool m_rarity_isValid;

    QString m_regulation_mark;
    bool m_regulation_mark_isSet;
    bool m_regulation_mark_isValid;

    QList<QList> m_resistances;
    bool m_resistances_isSet;
    bool m_resistances_isValid;

    double m_retreat;
    bool m_retreat_isSet;
    bool m_retreat_isValid;

    OAISetResume m_r_set;
    bool m_r_set_isSet;
    bool m_r_set_isValid;

    QString m_stage;
    bool m_stage_isSet;
    bool m_stage_isValid;

    QString m_suffix;
    bool m_suffix_isSet;
    bool m_suffix_isValid;

    QString m_trainer_type;
    bool m_trainer_type_isSet;
    bool m_trainer_type_isValid;

    QList<QString> m_types;
    bool m_types_isSet;
    bool m_types_isValid;

    OAICard_variants m_variants;
    bool m_variants_isSet;
    bool m_variants_isValid;

    QList<QList> m_weaknesses;
    bool m_weaknesses_isSet;
    bool m_weaknesses_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICard)

#endif // OAICard_H
