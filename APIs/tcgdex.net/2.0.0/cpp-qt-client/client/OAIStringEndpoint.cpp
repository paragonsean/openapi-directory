/**
 * TCGdex API
 * A Multilanguage Pok√©mon TCG Database with Cards Pictures and most of the informations contained on the cards. You can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: contact@tcgdex.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStringEndpoint.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStringEndpoint::OAIStringEndpoint(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStringEndpoint::OAIStringEndpoint() {
    this->initializeModel();
}

OAIStringEndpoint::~OAIStringEndpoint() {}

void OAIStringEndpoint::initializeModel() {

    m_cards_isSet = false;
    m_cards_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIStringEndpoint::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStringEndpoint::fromJsonObject(QJsonObject json) {

    m_cards_isValid = ::OpenAPI::fromJsonValue(m_cards, json[QString("cards")]);
    m_cards_isSet = !json[QString("cards")].isNull() && m_cards_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIStringEndpoint::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStringEndpoint::asJsonObject() const {
    QJsonObject obj;
    if (m_cards.size() > 0) {
        obj.insert(QString("cards"), ::OpenAPI::toJsonValue(m_cards));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QList<OAICardResume> OAIStringEndpoint::getCards() const {
    return m_cards;
}
void OAIStringEndpoint::setCards(const QList<OAICardResume> &cards) {
    m_cards = cards;
    m_cards_isSet = true;
}

bool OAIStringEndpoint::is_cards_Set() const{
    return m_cards_isSet;
}

bool OAIStringEndpoint::is_cards_Valid() const{
    return m_cards_isValid;
}

QString OAIStringEndpoint::getName() const {
    return m_name;
}
void OAIStringEndpoint::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIStringEndpoint::is_name_Set() const{
    return m_name_isSet;
}

bool OAIStringEndpoint::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIStringEndpoint::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cards.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStringEndpoint::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_cards_isValid && m_name_isValid && true;
}

} // namespace OpenAPI
