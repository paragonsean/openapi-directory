openapi: 3.0.3
info:
  contact:
    email: contact@tcgdex.net
    name: TCGdex
    url: https://github.com/tcgdex/cards-database
  description: |-
    A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.
    You can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).
  license:
    name: MIT License
    url: https://github.com/tcgdex/cards-database/blob/master/LICENSE
  title: TCGdex API
  version: 2.0.0
  x-logo:
    url: https://tcgdex.net/apple-touch-icon.png
  x-origin:
  - format: openapi
    url: https://api.tcgdex.net/v2/openapi.yaml
    version: "3.0"
  x-providerName: tcgdex.net
externalDocs:
  description: Find out more about TCGdex
  url: http://www.tcgdex.net/docs
servers:
- url: "https://api.tcgdex.net/v2/{lang}"
  variables:
    lang:
      default: en
      enum:
      - en
      - fr
      - es
      - it
      - pt
tags:
- description: Fetch cards globally
  name: cards
- description: differents requests to filter cards
  name: filters
paths:
  /cards:
    get:
      description: desc
      operationId: cards
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CardResume'
                type: array
          description: ""
      summary: fetch the list of cards
      tags:
      - cards
      x-accepts:
      - application/json
  /cards/{cardId}:
    get:
      description: Find a defined card thatusing its global id
      operationId: findPetsByTags
      parameters:
      - description: Tags to filter by
        explode: false
        in: path
        name: cardId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
          description: successful operation
        "404":
          description: The Card doesn't exist
      summary: Finds Card by Global ID
      tags:
      - cards
      x-accepts:
      - application/json
  /categories:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: List cards categories
      tags:
      - filters
      x-accepts:
      - application/json
  /categories/{category}:
    get:
      parameters:
      - explode: false
        in: path
        name: category
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringEndpoint'
          description: List cards with the category
        "404":
          description: The Category doesn't exist
      tags:
      - filters
      x-accepts:
      - application/json
  /dex-ids:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: List all possible Pokemon(s) Pokédex Ids that appeared in the
            TCG
      tags:
      - filters
      x-accepts:
      - application/json
  /dex-ids/{dexId}:
    get:
      parameters:
      - explode: false
        in: path
        name: dexId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CardResume'
                type: array
          description: Get the cards containing the specified dexId
        "404":
          description: no cards contain the specified dexID
      tags:
      - filters
      x-accepts:
      - application/json
  /energy-types:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: list the different Energy types an Energy card can have
      tags:
      - filters
      x-accepts:
      - application/json
  /energy-types/{energy-type}:
    get:
      parameters:
      - explode: false
        in: path
        name: energy-type
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CardResume'
                type: array
          description: Get the Energy cards containing the specified energy-type
        "404":
          description: The specified energy-type doesn't exist
      tags:
      - filters
      x-accepts:
      - application/json
  /hp:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: List all different possibilities number of HP a card can have
      tags:
      - filters
      x-accepts:
      - application/json
  /hp/{hp}:
    get:
      parameters:
      - explode: false
        in: path
        name: hp
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringEndpoint'
          description: Get the Pokémon cards containing specified number of HP
        "404":
          description: The HP count doesn't exist
      tags:
      - filters
      x-accepts:
      - application/json
  /illustrators:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: Get all the Pokémon cards illustrators
      tags:
      - filters
      x-accepts:
      - application/json
  /illustrators/{illustrator}:
    get:
      parameters:
      - explode: false
        in: path
        name: illustrator
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringEndpoint'
          description: Get the cards containing the specified illustrator
        "404":
          description: The Illustrator doesn't exist
      tags:
      - filters
      x-accepts:
      - application/json
  /rarities:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: List cards rarities
      tags:
      - filters
      x-accepts:
      - application/json
  /rarities/{rarity}:
    get:
      parameters:
      - explode: false
        in: path
        name: rarity
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringEndpoint'
          description: Get the cards containing the specified rarity
        "404":
          description: The Rarity doesn't exist
      tags:
      - filters
      x-accepts:
      - application/json
  /regulation-marks:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: List the current regulation marks
      tags:
      - filters
      x-accepts:
      - application/json
  /regulation-marks/{regulation-mark}:
    get:
      parameters:
      - explode: false
        in: path
        name: regulation-mark
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CardResume'
                type: array
          description: Get every cards respecting the specified regulation-mark
        "404":
          description: The regulation-mark doesn't exist
      tags:
      - filters
      x-accepts:
      - application/json
  /retreats:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: return the different number of retreats count
      tags:
      - filters
      x-accepts:
      - application/json
  /retreats/{retreat}:
    get:
      parameters:
      - explode: false
        in: path
        name: retreat
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringEndpoint'
          description: Get the cards containing the specified retreat count
        "404":
          description: The Retreat count doesn't exist
      tags:
      - filters
      x-accepts:
      - application/json
  /series:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SerieResume'
                type: array
          description: Successful request
      tags:
      - filters
      x-accepts:
      - application/json
  /series/{serie}:
    get:
      parameters:
      - description: the serie ID or name
        explode: false
        in: path
        name: serie
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Serie'
          description: Success
        "404":
          description: The Serie doesn't exist
      tags:
      - filters
      x-accepts:
      - application/json
  /sets:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SetResume'
                type: array
          description: Successful request
      tags:
      - filters
      x-accepts:
      - application/json
  /sets/{set}:
    get:
      parameters:
      - description: the set ID or the set name
        explode: false
        in: path
        name: set
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Set'
          description: Success
        "404":
          description: The Set doesn't exist
      tags:
      - filters
      x-accepts:
      - application/json
  /sets/{set}/{cardLocalId}:
    get:
      parameters:
      - explode: false
        in: path
        name: set
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: cardLocalId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
          description: Success
        "404":
          description: the Set or cardLocalId are incorrect
      tags:
      - cards
      x-accepts:
      - application/json
  /stages:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: Get all the possible stages a Pokémon card can have
      tags:
      - filters
      x-accepts:
      - application/json
  /stages/{stage}:
    get:
      parameters:
      - explode: false
        in: path
        name: stage
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CardResume'
                type: array
          description: Get all the cards having the specified stage
        "404":
          description: The stage doesn't exist
      tags:
      - filters
      x-accepts:
      - application/json
  /suffixes:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: Get all the cards having the specified suffix
      tags:
      - filters
      x-accepts:
      - application/json
  /suffixes/{suffix}:
    get:
      parameters:
      - explode: false
        in: path
        name: suffix
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CardResume'
                type: array
          description: Get all the cards having the specified stage suffix
        "404":
          description: The suffix doesn't exist
      tags:
      - filters
      x-accepts:
      - application/json
  /trainer-types:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: Get the different trainer-types
      tags:
      - filters
      x-accepts:
      - application/json
  /trainer-types/{trainer-type}:
    get:
      parameters:
      - explode: false
        in: path
        name: trainer-type
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CardResume'
                type: array
          description: Get the cards containing with the specified trainer-type
        "404":
          description: The trainer-type doesn't exist
      tags:
      - filters
      x-accepts:
      - application/json
  /types:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: List all possible cards types
      tags:
      - filters
      x-accepts:
      - application/json
  /types/{type}:
    get:
      parameters:
      - explode: false
        in: path
        name: type
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CardResume'
                type: array
          description: Get the cards containing the specified type
        "404":
          description: The Type doesn't exist
      tags:
      - filters
      x-accepts:
      - application/json
  /variants:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: Get the different variants available
      tags:
      - filters
      x-accepts:
      - application/json
  /variants/{variant}:
    get:
      parameters:
      - explode: false
        in: path
        name: variant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CardResume'
                type: array
          description: Get the cards available in the specified variant
        "404":
          description: The variant doesn't exist
      tags:
      - filters
      x-accepts:
      - application/json
components:
  schemas:
    Card:
      example:
        hp: 80
        description: description
        resistances:
        - - type: Psychic
            value: x2
          - type: Psychic
            value: x2
        - - type: Psychic
            value: x2
          - type: Psychic
            value: x2
        variants:
          normal: true
          wPromo: true
          holo: true
          reverse: true
          firstEdition: true
        suffix: suffix
        localId: "1"
        abilities:
        - effect: As often as you like...
          name: Damage Swap
          type: Poke-POWER
        - effect: As often as you like...
          name: Damage Swap
          type: Poke-POWER
        evolveFrom: Kadabra
        attacks:
        - damage: 30
          cost:
          - ""
          - ""
          effect: "Flip a coin. If heads, ..."
          name: Confuse Ray
        - damage: 30
          cost:
          - ""
          - ""
          effect: "Flip a coin. If heads, ..."
          name: Confuse Ray
        weaknesses:
        - null
        - null
        legal:
          standard: false
          expanded: false
        id: base1-1
        trainerType: trainerType
        image: https://assets.tcgdex.net/en/base/base1/1
        dexId:
        - 0.8008281904610115
        - 0.8008281904610115
        item:
          effect: effect
          name: name
        types:
        - Psychic
        - Psychic
        set:
          symbol: https://assets.tcgdex.net/univ/base/base1/symbol
          cardCount:
            total: 101
            official: 100
          name: Base Set
          logo: https://assets.tcgdex.net/en/base/base1/logo
          id: base1
        level: 30
        regulationMark: D
        energyType: energyType
        retreat: 3
        stage: Stage2
        name: Alakazam
        category: Pokemon
        illustrator: Ken Sugimori
        rarity: Rare
      properties:
        abilities:
          items:
            $ref: '#/components/schemas/Card_abilities_inner'
          type: array
        attacks:
          items:
            $ref: '#/components/schemas/Card_attacks_inner'
          type: array
        category:
          example: Pokemon
          type: string
        description:
          type: string
        dexId:
          items:
            type: number
          type: array
          xml:
            name: dexIdItem
            wrapped: true
        energyType:
          type: string
        evolveFrom:
          example: Kadabra
          type: string
        hp:
          example: 80
          type: number
        id:
          example: base1-1
          type: string
        illustrator:
          example: Ken Sugimori
          type: string
        image:
          example: https://assets.tcgdex.net/en/base/base1/1
          type: string
        item:
          $ref: '#/components/schemas/Card_item'
        legal:
          $ref: '#/components/schemas/Card_legal'
        level:
          example: 30
          type: number
        localId:
          example: "1"
          type: string
        name:
          example: Alakazam
          type: string
        rarity:
          example: Rare
          type: string
        regulationMark:
          example: D
          type: string
        resistances:
          items:
            $ref: '#/components/schemas/WeakRes'
          type: array
          xml:
            name: resistance
            wrapped: true
        retreat:
          example: 3
          type: number
        set:
          $ref: '#/components/schemas/SetResume'
        stage:
          example: Stage2
          type: string
        suffix:
          type: string
        trainerType:
          type: string
        types:
          items:
            example: Psychic
            type: string
          type: array
        variants:
          $ref: '#/components/schemas/Card_variants'
        weaknesses:
          items:
            $ref: '#/components/schemas/WeakRes'
          type: array
          xml:
            name: weakness
            wrapped: true
      required:
      - category
      - id
      - legal
      - localId
      - name
      - rarity
      - set
      type: object
    CardResume:
      example:
        image: https://assets.tcgdex.net/en/base/base1/1
        name: Alakazam
        id: base1-1
        localId: "1"
      properties:
        id:
          example: base1-1
          type: string
        image:
          example: https://assets.tcgdex.net/en/base/base1/1
          type: string
        localId:
          example: "1"
          type: string
        name:
          example: Alakazam
          type: string
      required:
      - id
      - localId
      - name
      type: object
    Serie:
      example:
        sets:
        - symbol: https://assets.tcgdex.net/univ/base/base1/symbol
          cardCount:
            total: 101
            official: 100
          name: Base Set
          logo: https://assets.tcgdex.net/en/base/base1/logo
          id: base1
        - symbol: https://assets.tcgdex.net/univ/base/base1/symbol
          cardCount:
            total: 101
            official: 100
          name: Base Set
          logo: https://assets.tcgdex.net/en/base/base1/logo
          id: base1
        name: name
        logo: logo
        id: id
      properties:
        id:
          type: string
        logo:
          type: string
        name:
          type: string
        sets:
          items:
            $ref: '#/components/schemas/SetResume'
          type: array
      required:
      - id
      - name
      - sets
      type: object
    SerieResume:
      example:
        name: name
        logo: logo
        id: id
      properties:
        id:
          type: string
        logo:
          type: string
        name:
          type: string
      required:
      - id
      - name
      type: object
    Set:
      example:
        symbol: https://assets.tcgdex.net/univ/base/base1/symbol
        cards:
        - image: https://assets.tcgdex.net/en/base/base1/1
          name: Alakazam
          id: base1-1
          localId: "1"
        - image: https://assets.tcgdex.net/en/base/base1/1
          name: Alakazam
          id: base1-1
          localId: "1"
        cardCount:
          normal: 1.4658129805029452
          total: 101
          official: 100
          holo: 6.027456183070403
          firstEd: 0.8008281904610115
          reverse: 5.962133916683182
        name: Base Set
        logo: https://assets.tcgdex.net/en/base/base1/logo
        id: base1
      properties:
        cardCount:
          $ref: '#/components/schemas/Set_cardCount'
        cards:
          items:
            $ref: '#/components/schemas/CardResume'
          type: array
        id:
          example: base1
          type: string
        logo:
          example: https://assets.tcgdex.net/en/base/base1/logo
          type: string
        name:
          example: Base Set
          type: string
        symbol:
          example: https://assets.tcgdex.net/univ/base/base1/symbol
          type: string
      required:
      - cardCount
      - cards
      - id
      - name
      type: object
    SetResume:
      example:
        symbol: https://assets.tcgdex.net/univ/base/base1/symbol
        cardCount:
          total: 101
          official: 100
        name: Base Set
        logo: https://assets.tcgdex.net/en/base/base1/logo
        id: base1
      properties:
        cardCount:
          $ref: '#/components/schemas/SetResume_cardCount'
        id:
          example: base1
          type: string
        logo:
          example: https://assets.tcgdex.net/en/base/base1/logo
          type: string
        name:
          example: Base Set
          type: string
        symbol:
          example: https://assets.tcgdex.net/univ/base/base1/symbol
          type: string
      required:
      - cardCount
      - id
      - name
      type: object
    StringEndpoint:
      example:
        cards:
        - image: https://assets.tcgdex.net/en/base/base1/1
          name: Alakazam
          id: base1-1
          localId: "1"
        - image: https://assets.tcgdex.net/en/base/base1/1
          name: Alakazam
          id: base1-1
          localId: "1"
        name: name
      properties:
        cards:
          items:
            $ref: '#/components/schemas/CardResume'
          type: array
        name:
          type: string
      required:
      - cards
      - name
      type: object
    WeakRes:
      items:
        $ref: '#/components/schemas/WeakRes_inner'
      type: array
      xml:
        name: WeakResItem
        wrapped: true
    Card_abilities_inner:
      example:
        effect: As often as you like...
        name: Damage Swap
        type: Poke-POWER
      properties:
        effect:
          example: As often as you like...
          type: string
        name:
          example: Damage Swap
          type: string
        type:
          example: Poke-POWER
          type: string
      type: object
    Card_attacks_inner:
      example:
        damage: 30
        cost:
        - ""
        - ""
        effect: "Flip a coin. If heads, ..."
        name: Confuse Ray
      properties:
        cost:
          items:
            example: ""
            type: string
          type: array
        damage:
          example: 30
          type: number
        effect:
          example: "Flip a coin. If heads, ..."
          type: string
        name:
          example: Confuse Ray
          type: string
      required:
      - name
      type: object
    Card_item:
      example:
        effect: effect
        name: name
      properties:
        effect:
          type: string
        name:
          type: string
      required:
      - effect
      - name
      type: object
    Card_legal:
      example:
        standard: false
        expanded: false
      properties:
        expanded:
          example: false
          type: boolean
        standard:
          example: false
          type: boolean
      type: object
    Card_variants:
      example:
        normal: true
        wPromo: true
        holo: true
        reverse: true
        firstEdition: true
      properties:
        firstEdition:
          type: boolean
        holo:
          type: boolean
        normal:
          type: boolean
        reverse:
          type: boolean
        wPromo:
          type: boolean
      required:
      - firstEdition
      - holo
      - normal
      - reverse
      - wPromo
      type: object
    Set_cardCount:
      example:
        normal: 1.4658129805029452
        total: 101
        official: 100
        holo: 6.027456183070403
        firstEd: 0.8008281904610115
        reverse: 5.962133916683182
      properties:
        firstEd:
          type: number
        holo:
          type: number
        normal:
          type: number
        official:
          example: 100
          type: number
        reverse:
          type: number
        total:
          example: 101
          type: number
      required:
      - official
      - total
      type: object
    SetResume_cardCount:
      example:
        total: 101
        official: 100
      properties:
        official:
          example: 100
          type: number
        total:
          example: 101
          type: number
      required:
      - official
      - total
      type: object
    WeakRes_inner:
      example:
        type: Psychic
        value: x2
      properties:
        type:
          example: Psychic
          type: string
        value:
          example: x2
          type: string
      required:
      - type
      type: object

