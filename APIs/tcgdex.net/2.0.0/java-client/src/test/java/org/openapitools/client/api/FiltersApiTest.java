/*
 * TCGdex API
 * A Multilanguage Pok√©mon TCG Database with Cards Pictures and most of the informations contained on the cards. You can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: contact@tcgdex.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CardResume;
import org.openapitools.client.model.Serie;
import org.openapitools.client.model.SerieResume;
import java.util.Set;
import org.openapitools.client.model.SetResume;
import org.openapitools.client.model.StringEndpoint;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FiltersApi
 */
@Disabled
public class FiltersApiTest {

    private final FiltersApi api = new FiltersApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void categoriesCategoryGetTest() throws ApiException {
        String category = null;
        StringEndpoint response = api.categoriesCategoryGet(category);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void categoriesGetTest() throws ApiException {
        List<String> response = api.categoriesGet();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dexIdsDexIdGetTest() throws ApiException {
        String dexId = null;
        List<CardResume> response = api.dexIdsDexIdGet(dexId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dexIdsGetTest() throws ApiException {
        List<String> response = api.dexIdsGet();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void energyTypesEnergyTypeGetTest() throws ApiException {
        String energyType = null;
        List<CardResume> response = api.energyTypesEnergyTypeGet(energyType);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void energyTypesGetTest() throws ApiException {
        List<String> response = api.energyTypesGet();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void hpGetTest() throws ApiException {
        List<String> response = api.hpGet();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void hpHpGetTest() throws ApiException {
        String hp = null;
        StringEndpoint response = api.hpHpGet(hp);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void illustratorsGetTest() throws ApiException {
        List<String> response = api.illustratorsGet();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void illustratorsIllustratorGetTest() throws ApiException {
        String illustrator = null;
        StringEndpoint response = api.illustratorsIllustratorGet(illustrator);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void raritiesGetTest() throws ApiException {
        List<String> response = api.raritiesGet();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void raritiesRarityGetTest() throws ApiException {
        String rarity = null;
        StringEndpoint response = api.raritiesRarityGet(rarity);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void regulationMarksGetTest() throws ApiException {
        List<String> response = api.regulationMarksGet();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void regulationMarksRegulationMarkGetTest() throws ApiException {
        String regulationMark = null;
        List<CardResume> response = api.regulationMarksRegulationMarkGet(regulationMark);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void retreatsGetTest() throws ApiException {
        List<String> response = api.retreatsGet();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void retreatsRetreatGetTest() throws ApiException {
        String retreat = null;
        StringEndpoint response = api.retreatsRetreatGet(retreat);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void seriesGetTest() throws ApiException {
        List<SerieResume> response = api.seriesGet();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void seriesSerieGetTest() throws ApiException {
        String serie = null;
        Serie response = api.seriesSerieGet(serie);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void setsGetTest() throws ApiException {
        List<SetResume> response = api.setsGet();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void setsSetGetTest() throws ApiException {
        String set = null;
        Set response = api.setsSetGet(set);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void stagesGetTest() throws ApiException {
        List<String> response = api.stagesGet();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void stagesStageGetTest() throws ApiException {
        String stage = null;
        List<CardResume> response = api.stagesStageGet(stage);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void suffixesGetTest() throws ApiException {
        List<String> response = api.suffixesGet();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void suffixesSuffixGetTest() throws ApiException {
        String suffix = null;
        List<CardResume> response = api.suffixesSuffixGet(suffix);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void trainerTypesGetTest() throws ApiException {
        List<String> response = api.trainerTypesGet();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void trainerTypesTrainerTypeGetTest() throws ApiException {
        String trainerType = null;
        List<CardResume> response = api.trainerTypesTrainerTypeGet(trainerType);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void typesGetTest() throws ApiException {
        List<String> response = api.typesGet();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void typesTypeGetTest() throws ApiException {
        String type = null;
        List<CardResume> response = api.typesTypeGet(type);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void variantsGetTest() throws ApiException {
        List<String> response = api.variantsGet();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void variantsVariantGetTest() throws ApiException {
        String variant = null;
        List<CardResume> response = api.variantsVariantGet(variant);
        // TODO: test validations
    }

}
