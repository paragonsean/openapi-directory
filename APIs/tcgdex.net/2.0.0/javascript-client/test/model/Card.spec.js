/**
 * TCGdex API
 * A Multilanguage Pok√©mon TCG Database with Cards Pictures and most of the informations contained on the cards. You can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: contact@tcgdex.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TcGdexApi);
  }
}(this, function(expect, TcGdexApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TcGdexApi.Card();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Card', function() {
    it('should create an instance of Card', function() {
      // uncomment below and update the code to test Card
      //var instance = new TcGdexApi.Card();
      //expect(instance).to.be.a(TcGdexApi.Card);
    });

    it('should have the property abilities (base name: "abilities")', function() {
      // uncomment below and update the code to test the property abilities
      //var instance = new TcGdexApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property attacks (base name: "attacks")', function() {
      // uncomment below and update the code to test the property attacks
      //var instance = new TcGdexApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property category (base name: "category")', function() {
      // uncomment below and update the code to test the property category
      //var instance = new TcGdexApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new TcGdexApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property dexId (base name: "dexId")', function() {
      // uncomment below and update the code to test the property dexId
      //var instance = new TcGdexApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property energyType (base name: "energyType")', function() {
      // uncomment below and update the code to test the property energyType
      //var instance = new TcGdexApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property evolveFrom (base name: "evolveFrom")', function() {
      // uncomment below and update the code to test the property evolveFrom
      //var instance = new TcGdexApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property hp (base name: "hp")', function() {
      // uncomment below and update the code to test the property hp
      //var instance = new TcGdexApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new TcGdexApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property illustrator (base name: "illustrator")', function() {
      // uncomment below and update the code to test the property illustrator
      //var instance = new TcGdexApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property image (base name: "image")', function() {
      // uncomment below and update the code to test the property image
      //var instance = new TcGdexApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property item (base name: "item")', function() {
      // uncomment below and update the code to test the property item
      //var instance = new TcGdexApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property legal (base name: "legal")', function() {
      // uncomment below and update the code to test the property legal
      //var instance = new TcGdexApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property level (base name: "level")', function() {
      // uncomment below and update the code to test the property level
      //var instance = new TcGdexApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property localId (base name: "localId")', function() {
      // uncomment below and update the code to test the property localId
      //var instance = new TcGdexApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new TcGdexApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property rarity (base name: "rarity")', function() {
      // uncomment below and update the code to test the property rarity
      //var instance = new TcGdexApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property regulationMark (base name: "regulationMark")', function() {
      // uncomment below and update the code to test the property regulationMark
      //var instance = new TcGdexApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property resistances (base name: "resistances")', function() {
      // uncomment below and update the code to test the property resistances
      //var instance = new TcGdexApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property retreat (base name: "retreat")', function() {
      // uncomment below and update the code to test the property retreat
      //var instance = new TcGdexApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property set (base name: "set")', function() {
      // uncomment below and update the code to test the property set
      //var instance = new TcGdexApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property stage (base name: "stage")', function() {
      // uncomment below and update the code to test the property stage
      //var instance = new TcGdexApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property suffix (base name: "suffix")', function() {
      // uncomment below and update the code to test the property suffix
      //var instance = new TcGdexApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property trainerType (base name: "trainerType")', function() {
      // uncomment below and update the code to test the property trainerType
      //var instance = new TcGdexApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property types (base name: "types")', function() {
      // uncomment below and update the code to test the property types
      //var instance = new TcGdexApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property variants (base name: "variants")', function() {
      // uncomment below and update the code to test the property variants
      //var instance = new TcGdexApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property weaknesses (base name: "weaknesses")', function() {
      // uncomment below and update the code to test the property weaknesses
      //var instance = new TcGdexApi.Card();
      //expect(instance).to.be();
    });

  });

}));
