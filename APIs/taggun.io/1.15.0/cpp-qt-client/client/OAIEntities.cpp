/**
 * TAGGUN Receipt OCR Scanning API
 * Expects only running software, real reactions, and beautifully crafted APIs to serve your every desire to transcribe a piece of paper to digital form.
 *
 * The version of the OpenAPI document: 1.15.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEntities.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEntities::OAIEntities(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEntities::OAIEntities() {
    this->initializeModel();
}

OAIEntities::~OAIEntities() {}

void OAIEntities::initializeModel() {

    m_abn_isSet = false;
    m_abn_isValid = false;

    m_iban_isSet = false;
    m_iban_isValid = false;

    m_banking_details_isSet = false;
    m_banking_details_isValid = false;

    m_belgium_vat_numbers_isSet = false;
    m_belgium_vat_numbers_isValid = false;

    m_exclude_items_isSet = false;
    m_exclude_items_isValid = false;

    m_expense_type_isSet = false;
    m_expense_type_isValid = false;

    m_fapiao_invoice_isSet = false;
    m_fapiao_invoice_isValid = false;

    m_fapiao_invoice_code_isSet = false;
    m_fapiao_invoice_code_isValid = false;

    m_fapiao_invoice_number_isSet = false;
    m_fapiao_invoice_number_isValid = false;

    m_fapiao_merchant_tax_id_isSet = false;
    m_fapiao_merchant_tax_id_isValid = false;

    m_geo_names_isSet = false;
    m_geo_names_isValid = false;

    m_invoice_number_isSet = false;
    m_invoice_number_isValid = false;

    m_master_category_isSet = false;
    m_master_category_isValid = false;

    m_merchant_verification_isSet = false;
    m_merchant_verification_isValid = false;

    m_multi_tax_line_items_isSet = false;
    m_multi_tax_line_items_isValid = false;

    m_product_line_items_isSet = false;
    m_product_line_items_isValid = false;

    m_qr_code_data_isSet = false;
    m_qr_code_data_isValid = false;

    m_receipt_number_isSet = false;
    m_receipt_number_isValid = false;

    m_shopping_mall_name_isSet = false;
    m_shopping_mall_name_isValid = false;

    m_wine_list_items_isSet = false;
    m_wine_list_items_isValid = false;
}

void OAIEntities::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEntities::fromJsonObject(QJsonObject json) {

    m_abn_isValid = ::OpenAPI::fromJsonValue(m_abn, json[QString("ABN")]);
    m_abn_isSet = !json[QString("ABN")].isNull() && m_abn_isValid;

    m_iban_isValid = ::OpenAPI::fromJsonValue(m_iban, json[QString("IBAN")]);
    m_iban_isSet = !json[QString("IBAN")].isNull() && m_iban_isValid;

    m_banking_details_isValid = ::OpenAPI::fromJsonValue(m_banking_details, json[QString("bankingDetails")]);
    m_banking_details_isSet = !json[QString("bankingDetails")].isNull() && m_banking_details_isValid;

    m_belgium_vat_numbers_isValid = ::OpenAPI::fromJsonValue(m_belgium_vat_numbers, json[QString("belgiumVATNumbers")]);
    m_belgium_vat_numbers_isSet = !json[QString("belgiumVATNumbers")].isNull() && m_belgium_vat_numbers_isValid;

    m_exclude_items_isValid = ::OpenAPI::fromJsonValue(m_exclude_items, json[QString("excludeItems")]);
    m_exclude_items_isSet = !json[QString("excludeItems")].isNull() && m_exclude_items_isValid;

    m_expense_type_isValid = ::OpenAPI::fromJsonValue(m_expense_type, json[QString("expenseType")]);
    m_expense_type_isSet = !json[QString("expenseType")].isNull() && m_expense_type_isValid;

    m_fapiao_invoice_isValid = ::OpenAPI::fromJsonValue(m_fapiao_invoice, json[QString("fapiaoInvoice")]);
    m_fapiao_invoice_isSet = !json[QString("fapiaoInvoice")].isNull() && m_fapiao_invoice_isValid;

    m_fapiao_invoice_code_isValid = ::OpenAPI::fromJsonValue(m_fapiao_invoice_code, json[QString("fapiaoInvoiceCode")]);
    m_fapiao_invoice_code_isSet = !json[QString("fapiaoInvoiceCode")].isNull() && m_fapiao_invoice_code_isValid;

    m_fapiao_invoice_number_isValid = ::OpenAPI::fromJsonValue(m_fapiao_invoice_number, json[QString("fapiaoInvoiceNumber")]);
    m_fapiao_invoice_number_isSet = !json[QString("fapiaoInvoiceNumber")].isNull() && m_fapiao_invoice_number_isValid;

    m_fapiao_merchant_tax_id_isValid = ::OpenAPI::fromJsonValue(m_fapiao_merchant_tax_id, json[QString("fapiaoMerchantTaxId")]);
    m_fapiao_merchant_tax_id_isSet = !json[QString("fapiaoMerchantTaxId")].isNull() && m_fapiao_merchant_tax_id_isValid;

    m_geo_names_isValid = ::OpenAPI::fromJsonValue(m_geo_names, json[QString("geoNames")]);
    m_geo_names_isSet = !json[QString("geoNames")].isNull() && m_geo_names_isValid;

    m_invoice_number_isValid = ::OpenAPI::fromJsonValue(m_invoice_number, json[QString("invoiceNumber")]);
    m_invoice_number_isSet = !json[QString("invoiceNumber")].isNull() && m_invoice_number_isValid;

    m_master_category_isValid = ::OpenAPI::fromJsonValue(m_master_category, json[QString("masterCategory")]);
    m_master_category_isSet = !json[QString("masterCategory")].isNull() && m_master_category_isValid;

    m_merchant_verification_isValid = ::OpenAPI::fromJsonValue(m_merchant_verification, json[QString("merchantVerification")]);
    m_merchant_verification_isSet = !json[QString("merchantVerification")].isNull() && m_merchant_verification_isValid;

    m_multi_tax_line_items_isValid = ::OpenAPI::fromJsonValue(m_multi_tax_line_items, json[QString("multiTaxLineItems")]);
    m_multi_tax_line_items_isSet = !json[QString("multiTaxLineItems")].isNull() && m_multi_tax_line_items_isValid;

    m_product_line_items_isValid = ::OpenAPI::fromJsonValue(m_product_line_items, json[QString("productLineItems")]);
    m_product_line_items_isSet = !json[QString("productLineItems")].isNull() && m_product_line_items_isValid;

    m_qr_code_data_isValid = ::OpenAPI::fromJsonValue(m_qr_code_data, json[QString("qrCodeData")]);
    m_qr_code_data_isSet = !json[QString("qrCodeData")].isNull() && m_qr_code_data_isValid;

    m_receipt_number_isValid = ::OpenAPI::fromJsonValue(m_receipt_number, json[QString("receiptNumber")]);
    m_receipt_number_isSet = !json[QString("receiptNumber")].isNull() && m_receipt_number_isValid;

    m_shopping_mall_name_isValid = ::OpenAPI::fromJsonValue(m_shopping_mall_name, json[QString("shoppingMallName")]);
    m_shopping_mall_name_isSet = !json[QString("shoppingMallName")].isNull() && m_shopping_mall_name_isValid;

    m_wine_list_items_isValid = ::OpenAPI::fromJsonValue(m_wine_list_items, json[QString("wineListItems")]);
    m_wine_list_items_isSet = !json[QString("wineListItems")].isNull() && m_wine_list_items_isValid;
}

QString OAIEntities::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEntities::asJsonObject() const {
    QJsonObject obj;
    if (m_abn.isSet()) {
        obj.insert(QString("ABN"), ::OpenAPI::toJsonValue(m_abn));
    }
    if (m_iban.isSet()) {
        obj.insert(QString("IBAN"), ::OpenAPI::toJsonValue(m_iban));
    }
    if (m_banking_details.isSet()) {
        obj.insert(QString("bankingDetails"), ::OpenAPI::toJsonValue(m_banking_details));
    }
    if (m_belgium_vat_numbers.size() > 0) {
        obj.insert(QString("belgiumVATNumbers"), ::OpenAPI::toJsonValue(m_belgium_vat_numbers));
    }
    if (m_exclude_items.size() > 0) {
        obj.insert(QString("excludeItems"), ::OpenAPI::toJsonValue(m_exclude_items));
    }
    if (m_expense_type.isSet()) {
        obj.insert(QString("expenseType"), ::OpenAPI::toJsonValue(m_expense_type));
    }
    if (m_fapiao_invoice.isSet()) {
        obj.insert(QString("fapiaoInvoice"), ::OpenAPI::toJsonValue(m_fapiao_invoice));
    }
    if (m_fapiao_invoice_code.isSet()) {
        obj.insert(QString("fapiaoInvoiceCode"), ::OpenAPI::toJsonValue(m_fapiao_invoice_code));
    }
    if (m_fapiao_invoice_number.isSet()) {
        obj.insert(QString("fapiaoInvoiceNumber"), ::OpenAPI::toJsonValue(m_fapiao_invoice_number));
    }
    if (m_fapiao_merchant_tax_id.isSet()) {
        obj.insert(QString("fapiaoMerchantTaxId"), ::OpenAPI::toJsonValue(m_fapiao_merchant_tax_id));
    }
    if (m_geo_names.size() > 0) {
        obj.insert(QString("geoNames"), ::OpenAPI::toJsonValue(m_geo_names));
    }
    if (m_invoice_number.isSet()) {
        obj.insert(QString("invoiceNumber"), ::OpenAPI::toJsonValue(m_invoice_number));
    }
    if (m_master_category.isSet()) {
        obj.insert(QString("masterCategory"), ::OpenAPI::toJsonValue(m_master_category));
    }
    if (m_merchant_verification.isSet()) {
        obj.insert(QString("merchantVerification"), ::OpenAPI::toJsonValue(m_merchant_verification));
    }
    if (m_multi_tax_line_items.size() > 0) {
        obj.insert(QString("multiTaxLineItems"), ::OpenAPI::toJsonValue(m_multi_tax_line_items));
    }
    if (m_product_line_items.size() > 0) {
        obj.insert(QString("productLineItems"), ::OpenAPI::toJsonValue(m_product_line_items));
    }
    if (m_qr_code_data.isSet()) {
        obj.insert(QString("qrCodeData"), ::OpenAPI::toJsonValue(m_qr_code_data));
    }
    if (m_receipt_number.isSet()) {
        obj.insert(QString("receiptNumber"), ::OpenAPI::toJsonValue(m_receipt_number));
    }
    if (m_shopping_mall_name.isSet()) {
        obj.insert(QString("shoppingMallName"), ::OpenAPI::toJsonValue(m_shopping_mall_name));
    }
    if (m_wine_list_items.size() > 0) {
        obj.insert(QString("wineListItems"), ::OpenAPI::toJsonValue(m_wine_list_items));
    }
    return obj;
}

OAIABN OAIEntities::getAbn() const {
    return m_abn;
}
void OAIEntities::setAbn(const OAIABN &abn) {
    m_abn = abn;
    m_abn_isSet = true;
}

bool OAIEntities::is_abn_Set() const{
    return m_abn_isSet;
}

bool OAIEntities::is_abn_Valid() const{
    return m_abn_isValid;
}

OAIIBAN OAIEntities::getIban() const {
    return m_iban;
}
void OAIEntities::setIban(const OAIIBAN &iban) {
    m_iban = iban;
    m_iban_isSet = true;
}

bool OAIEntities::is_iban_Set() const{
    return m_iban_isSet;
}

bool OAIEntities::is_iban_Valid() const{
    return m_iban_isValid;
}

OAIBankingDetails OAIEntities::getBankingDetails() const {
    return m_banking_details;
}
void OAIEntities::setBankingDetails(const OAIBankingDetails &banking_details) {
    m_banking_details = banking_details;
    m_banking_details_isSet = true;
}

bool OAIEntities::is_banking_details_Set() const{
    return m_banking_details_isSet;
}

bool OAIEntities::is_banking_details_Valid() const{
    return m_banking_details_isValid;
}

QList<OAIModel3> OAIEntities::getBelgiumVatNumbers() const {
    return m_belgium_vat_numbers;
}
void OAIEntities::setBelgiumVatNumbers(const QList<OAIModel3> &belgium_vat_numbers) {
    m_belgium_vat_numbers = belgium_vat_numbers;
    m_belgium_vat_numbers_isSet = true;
}

bool OAIEntities::is_belgium_vat_numbers_Set() const{
    return m_belgium_vat_numbers_isSet;
}

bool OAIEntities::is_belgium_vat_numbers_Valid() const{
    return m_belgium_vat_numbers_isValid;
}

QList<OAIModel4> OAIEntities::getExcludeItems() const {
    return m_exclude_items;
}
void OAIEntities::setExcludeItems(const QList<OAIModel4> &exclude_items) {
    m_exclude_items = exclude_items;
    m_exclude_items_isSet = true;
}

bool OAIEntities::is_exclude_items_Set() const{
    return m_exclude_items_isSet;
}

bool OAIEntities::is_exclude_items_Valid() const{
    return m_exclude_items_isValid;
}

OAIExpenseType OAIEntities::getExpenseType() const {
    return m_expense_type;
}
void OAIEntities::setExpenseType(const OAIExpenseType &expense_type) {
    m_expense_type = expense_type;
    m_expense_type_isSet = true;
}

bool OAIEntities::is_expense_type_Set() const{
    return m_expense_type_isSet;
}

bool OAIEntities::is_expense_type_Valid() const{
    return m_expense_type_isValid;
}

OAIFapiaoInvoice OAIEntities::getFapiaoInvoice() const {
    return m_fapiao_invoice;
}
void OAIEntities::setFapiaoInvoice(const OAIFapiaoInvoice &fapiao_invoice) {
    m_fapiao_invoice = fapiao_invoice;
    m_fapiao_invoice_isSet = true;
}

bool OAIEntities::is_fapiao_invoice_Set() const{
    return m_fapiao_invoice_isSet;
}

bool OAIEntities::is_fapiao_invoice_Valid() const{
    return m_fapiao_invoice_isValid;
}

OAIFapiaoInvoiceCode OAIEntities::getFapiaoInvoiceCode() const {
    return m_fapiao_invoice_code;
}
void OAIEntities::setFapiaoInvoiceCode(const OAIFapiaoInvoiceCode &fapiao_invoice_code) {
    m_fapiao_invoice_code = fapiao_invoice_code;
    m_fapiao_invoice_code_isSet = true;
}

bool OAIEntities::is_fapiao_invoice_code_Set() const{
    return m_fapiao_invoice_code_isSet;
}

bool OAIEntities::is_fapiao_invoice_code_Valid() const{
    return m_fapiao_invoice_code_isValid;
}

OAIFapiaoInvoiceNumber OAIEntities::getFapiaoInvoiceNumber() const {
    return m_fapiao_invoice_number;
}
void OAIEntities::setFapiaoInvoiceNumber(const OAIFapiaoInvoiceNumber &fapiao_invoice_number) {
    m_fapiao_invoice_number = fapiao_invoice_number;
    m_fapiao_invoice_number_isSet = true;
}

bool OAIEntities::is_fapiao_invoice_number_Set() const{
    return m_fapiao_invoice_number_isSet;
}

bool OAIEntities::is_fapiao_invoice_number_Valid() const{
    return m_fapiao_invoice_number_isValid;
}

OAIFapiaoMerchantTaxId OAIEntities::getFapiaoMerchantTaxId() const {
    return m_fapiao_merchant_tax_id;
}
void OAIEntities::setFapiaoMerchantTaxId(const OAIFapiaoMerchantTaxId &fapiao_merchant_tax_id) {
    m_fapiao_merchant_tax_id = fapiao_merchant_tax_id;
    m_fapiao_merchant_tax_id_isSet = true;
}

bool OAIEntities::is_fapiao_merchant_tax_id_Set() const{
    return m_fapiao_merchant_tax_id_isSet;
}

bool OAIEntities::is_fapiao_merchant_tax_id_Valid() const{
    return m_fapiao_merchant_tax_id_isValid;
}

QList<OAIModel8> OAIEntities::getGeoNames() const {
    return m_geo_names;
}
void OAIEntities::setGeoNames(const QList<OAIModel8> &geo_names) {
    m_geo_names = geo_names;
    m_geo_names_isSet = true;
}

bool OAIEntities::is_geo_names_Set() const{
    return m_geo_names_isSet;
}

bool OAIEntities::is_geo_names_Valid() const{
    return m_geo_names_isValid;
}

OAIInvoiceNumber OAIEntities::getInvoiceNumber() const {
    return m_invoice_number;
}
void OAIEntities::setInvoiceNumber(const OAIInvoiceNumber &invoice_number) {
    m_invoice_number = invoice_number;
    m_invoice_number_isSet = true;
}

bool OAIEntities::is_invoice_number_Set() const{
    return m_invoice_number_isSet;
}

bool OAIEntities::is_invoice_number_Valid() const{
    return m_invoice_number_isValid;
}

OAIMasterCategory OAIEntities::getMasterCategory() const {
    return m_master_category;
}
void OAIEntities::setMasterCategory(const OAIMasterCategory &master_category) {
    m_master_category = master_category;
    m_master_category_isSet = true;
}

bool OAIEntities::is_master_category_Set() const{
    return m_master_category_isSet;
}

bool OAIEntities::is_master_category_Valid() const{
    return m_master_category_isValid;
}

OAIMerchantVerification OAIEntities::getMerchantVerification() const {
    return m_merchant_verification;
}
void OAIEntities::setMerchantVerification(const OAIMerchantVerification &merchant_verification) {
    m_merchant_verification = merchant_verification;
    m_merchant_verification_isSet = true;
}

bool OAIEntities::is_merchant_verification_Set() const{
    return m_merchant_verification_isSet;
}

bool OAIEntities::is_merchant_verification_Valid() const{
    return m_merchant_verification_isValid;
}

QList<OAIModel7> OAIEntities::getMultiTaxLineItems() const {
    return m_multi_tax_line_items;
}
void OAIEntities::setMultiTaxLineItems(const QList<OAIModel7> &multi_tax_line_items) {
    m_multi_tax_line_items = multi_tax_line_items;
    m_multi_tax_line_items_isSet = true;
}

bool OAIEntities::is_multi_tax_line_items_Set() const{
    return m_multi_tax_line_items_isSet;
}

bool OAIEntities::is_multi_tax_line_items_Valid() const{
    return m_multi_tax_line_items_isValid;
}

QList<OAIModel6> OAIEntities::getProductLineItems() const {
    return m_product_line_items;
}
void OAIEntities::setProductLineItems(const QList<OAIModel6> &product_line_items) {
    m_product_line_items = product_line_items;
    m_product_line_items_isSet = true;
}

bool OAIEntities::is_product_line_items_Set() const{
    return m_product_line_items_isSet;
}

bool OAIEntities::is_product_line_items_Valid() const{
    return m_product_line_items_isValid;
}

OAIQrCodeData OAIEntities::getQrCodeData() const {
    return m_qr_code_data;
}
void OAIEntities::setQrCodeData(const OAIQrCodeData &qr_code_data) {
    m_qr_code_data = qr_code_data;
    m_qr_code_data_isSet = true;
}

bool OAIEntities::is_qr_code_data_Set() const{
    return m_qr_code_data_isSet;
}

bool OAIEntities::is_qr_code_data_Valid() const{
    return m_qr_code_data_isValid;
}

OAIReceiptNumber OAIEntities::getReceiptNumber() const {
    return m_receipt_number;
}
void OAIEntities::setReceiptNumber(const OAIReceiptNumber &receipt_number) {
    m_receipt_number = receipt_number;
    m_receipt_number_isSet = true;
}

bool OAIEntities::is_receipt_number_Set() const{
    return m_receipt_number_isSet;
}

bool OAIEntities::is_receipt_number_Valid() const{
    return m_receipt_number_isValid;
}

OAIShoppingMallName OAIEntities::getShoppingMallName() const {
    return m_shopping_mall_name;
}
void OAIEntities::setShoppingMallName(const OAIShoppingMallName &shopping_mall_name) {
    m_shopping_mall_name = shopping_mall_name;
    m_shopping_mall_name_isSet = true;
}

bool OAIEntities::is_shopping_mall_name_Set() const{
    return m_shopping_mall_name_isSet;
}

bool OAIEntities::is_shopping_mall_name_Valid() const{
    return m_shopping_mall_name_isValid;
}

QList<OAIModel5> OAIEntities::getWineListItems() const {
    return m_wine_list_items;
}
void OAIEntities::setWineListItems(const QList<OAIModel5> &wine_list_items) {
    m_wine_list_items = wine_list_items;
    m_wine_list_items_isSet = true;
}

bool OAIEntities::is_wine_list_items_Set() const{
    return m_wine_list_items_isSet;
}

bool OAIEntities::is_wine_list_items_Valid() const{
    return m_wine_list_items_isValid;
}

bool OAIEntities::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_abn.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_iban.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_banking_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_belgium_vat_numbers.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_exclude_items.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_expense_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_fapiao_invoice.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_fapiao_invoice_code.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_fapiao_invoice_number.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_fapiao_merchant_tax_id.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_geo_names.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice_number.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_master_category.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_merchant_verification.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_multi_tax_line_items.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_line_items.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_qr_code_data.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_receipt_number.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_shopping_mall_name.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_wine_list_items.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEntities::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
