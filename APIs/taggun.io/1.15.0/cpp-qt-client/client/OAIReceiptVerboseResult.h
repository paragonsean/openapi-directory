/**
 * TAGGUN Receipt OCR Scanning API
 * Expects only running software, real reactions, and beautifully crafted APIs to serve your every desire to transcribe a piece of paper to digital form.
 *
 * The version of the OpenAPI document: 1.15.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReceiptVerboseResult.h
 *
 * 
 */

#ifndef OAIReceiptVerboseResult_H
#define OAIReceiptVerboseResult_H

#include <QJsonObject>

#include "OAIDueDate.h"
#include "OAIEntities.h"
#include "OAIItemsCount.h"
#include "OAILocationResult.h"
#include "OAIMerchantAddress1.h"
#include "OAIMerchantCity1.h"
#include "OAIMerchantCountryCode1.h"
#include "OAIMerchantName1.h"
#include "OAIMerchantPostalCode1.h"
#include "OAIMerchantState.h"
#include "OAIMerchantTypes1.h"
#include "OAIPaymentType.h"
#include "OAITaxAmount1.h"
#include "OAIText.h"
#include "OAITotalAmount1.h"
#include <QDate>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDueDate;
class OAIEntities;
class OAIItemsCount;
class OAILocationResult;
class OAIMerchantAddress1;
class OAIMerchantCity1;
class OAIMerchantCountryCode1;
class OAIMerchantName1;
class OAIMerchantPostalCode1;
class OAIMerchantState;
class OAIMerchantTypes1;
class OAIPaymentType;
class OAITaxAmount1;
class OAIText;
class OAITotalAmount1;

class OAIReceiptVerboseResult : public OAIObject {
public:
    OAIReceiptVerboseResult();
    OAIReceiptVerboseResult(QString json);
    ~OAIReceiptVerboseResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAmounts() const;
    void setAmounts(const QList<QString> &amounts);
    bool is_amounts_Set() const;
    bool is_amounts_Valid() const;

    double getConfidenceLevel() const;
    void setConfidenceLevel(const double &confidence_level);
    bool is_confidence_level_Set() const;
    bool is_confidence_level_Valid() const;

    QDate getDate() const;
    void setDate(const QDate &date);
    bool is_date_Set() const;
    bool is_date_Valid() const;

    OAIDueDate getDueDate() const;
    void setDueDate(const OAIDueDate &due_date);
    bool is_due_date_Set() const;
    bool is_due_date_Valid() const;

    double getElapsed() const;
    void setElapsed(const double &elapsed);
    bool is_elapsed_Set() const;
    bool is_elapsed_Valid() const;

    OAIEntities getEntities() const;
    void setEntities(const OAIEntities &entities);
    bool is_entities_Set() const;
    bool is_entities_Valid() const;

    QString getError() const;
    void setError(const QString &error);
    bool is_error_Set() const;
    bool is_error_Valid() const;

    OAIItemsCount getItemsCount() const;
    void setItemsCount(const OAIItemsCount &items_count);
    bool is_items_count_Set() const;
    bool is_items_count_Valid() const;

    QList<QString> getLineAmounts() const;
    void setLineAmounts(const QList<QString> &line_amounts);
    bool is_line_amounts_Set() const;
    bool is_line_amounts_Valid() const;

    OAILocationResult getLocation() const;
    void setLocation(const OAILocationResult &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    OAIMerchantAddress1 getMerchantAddress() const;
    void setMerchantAddress(const OAIMerchantAddress1 &merchant_address);
    bool is_merchant_address_Set() const;
    bool is_merchant_address_Valid() const;

    OAIMerchantCity1 getMerchantCity() const;
    void setMerchantCity(const OAIMerchantCity1 &merchant_city);
    bool is_merchant_city_Set() const;
    bool is_merchant_city_Valid() const;

    OAIMerchantCountryCode1 getMerchantCountryCode() const;
    void setMerchantCountryCode(const OAIMerchantCountryCode1 &merchant_country_code);
    bool is_merchant_country_code_Set() const;
    bool is_merchant_country_code_Valid() const;

    OAIMerchantName1 getMerchantName() const;
    void setMerchantName(const OAIMerchantName1 &merchant_name);
    bool is_merchant_name_Set() const;
    bool is_merchant_name_Valid() const;

    OAIMerchantPostalCode1 getMerchantPostalCode() const;
    void setMerchantPostalCode(const OAIMerchantPostalCode1 &merchant_postal_code);
    bool is_merchant_postal_code_Set() const;
    bool is_merchant_postal_code_Valid() const;

    OAIMerchantState getMerchantState() const;
    void setMerchantState(const OAIMerchantState &merchant_state);
    bool is_merchant_state_Set() const;
    bool is_merchant_state_Valid() const;

    OAIMerchantTypes1 getMerchantTypes() const;
    void setMerchantTypes(const OAIMerchantTypes1 &merchant_types);
    bool is_merchant_types_Set() const;
    bool is_merchant_types_Valid() const;

    QList<QString> getNumbers() const;
    void setNumbers(const QList<QString> &numbers);
    bool is_numbers_Set() const;
    bool is_numbers_Valid() const;

    OAIPaymentType getPaymentType() const;
    void setPaymentType(const OAIPaymentType &payment_type);
    bool is_payment_type_Set() const;
    bool is_payment_type_Valid() const;

    OAITaxAmount1 getTaxAmount() const;
    void setTaxAmount(const OAITaxAmount1 &tax_amount);
    bool is_tax_amount_Set() const;
    bool is_tax_amount_Valid() const;

    OAIText getText() const;
    void setText(const OAIText &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    OAITotalAmount1 getTotalAmount() const;
    void setTotalAmount(const OAITotalAmount1 &total_amount);
    bool is_total_amount_Set() const;
    bool is_total_amount_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_amounts;
    bool m_amounts_isSet;
    bool m_amounts_isValid;

    double m_confidence_level;
    bool m_confidence_level_isSet;
    bool m_confidence_level_isValid;

    QDate m_date;
    bool m_date_isSet;
    bool m_date_isValid;

    OAIDueDate m_due_date;
    bool m_due_date_isSet;
    bool m_due_date_isValid;

    double m_elapsed;
    bool m_elapsed_isSet;
    bool m_elapsed_isValid;

    OAIEntities m_entities;
    bool m_entities_isSet;
    bool m_entities_isValid;

    QString m_error;
    bool m_error_isSet;
    bool m_error_isValid;

    OAIItemsCount m_items_count;
    bool m_items_count_isSet;
    bool m_items_count_isValid;

    QList<QString> m_line_amounts;
    bool m_line_amounts_isSet;
    bool m_line_amounts_isValid;

    OAILocationResult m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    OAIMerchantAddress1 m_merchant_address;
    bool m_merchant_address_isSet;
    bool m_merchant_address_isValid;

    OAIMerchantCity1 m_merchant_city;
    bool m_merchant_city_isSet;
    bool m_merchant_city_isValid;

    OAIMerchantCountryCode1 m_merchant_country_code;
    bool m_merchant_country_code_isSet;
    bool m_merchant_country_code_isValid;

    OAIMerchantName1 m_merchant_name;
    bool m_merchant_name_isSet;
    bool m_merchant_name_isValid;

    OAIMerchantPostalCode1 m_merchant_postal_code;
    bool m_merchant_postal_code_isSet;
    bool m_merchant_postal_code_isValid;

    OAIMerchantState m_merchant_state;
    bool m_merchant_state_isSet;
    bool m_merchant_state_isValid;

    OAIMerchantTypes1 m_merchant_types;
    bool m_merchant_types_isSet;
    bool m_merchant_types_isValid;

    QList<QString> m_numbers;
    bool m_numbers_isSet;
    bool m_numbers_isValid;

    OAIPaymentType m_payment_type;
    bool m_payment_type_isSet;
    bool m_payment_type_isValid;

    OAITaxAmount1 m_tax_amount;
    bool m_tax_amount_isSet;
    bool m_tax_amount_isValid;

    OAIText m_text;
    bool m_text_isSet;
    bool m_text_isValid;

    OAITotalAmount1 m_total_amount;
    bool m_total_amount_isSet;
    bool m_total_amount_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReceiptVerboseResult)

#endif // OAIReceiptVerboseResult_H
