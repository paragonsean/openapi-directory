/**
 * TAGGUN Receipt OCR Scanning API
 * Expects only running software, real reactions, and beautifully crafted APIs to serve your every desire to transcribe a piece of paper to digital form.
 *
 * The version of the OpenAPI document: 1.15.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHeaders.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHeaders::OAIHeaders(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHeaders::OAIHeaders() {
    this->initializeModel();
}

OAIHeaders::~OAIHeaders() {}

void OAIHeaders::initializeModel() {

    m_x_custom_key_isSet = false;
    m_x_custom_key_isValid = false;
}

void OAIHeaders::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHeaders::fromJsonObject(QJsonObject json) {

    m_x_custom_key_isValid = ::OpenAPI::fromJsonValue(m_x_custom_key, json[QString("x-custom-key")]);
    m_x_custom_key_isSet = !json[QString("x-custom-key")].isNull() && m_x_custom_key_isValid;
}

QString OAIHeaders::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHeaders::asJsonObject() const {
    QJsonObject obj;
    if (m_x_custom_key_isSet) {
        obj.insert(QString("x-custom-key"), ::OpenAPI::toJsonValue(m_x_custom_key));
    }
    return obj;
}

QString OAIHeaders::getXCustomKey() const {
    return m_x_custom_key;
}
void OAIHeaders::setXCustomKey(const QString &x_custom_key) {
    m_x_custom_key = x_custom_key;
    m_x_custom_key_isSet = true;
}

bool OAIHeaders::is_x_custom_key_Set() const{
    return m_x_custom_key_isSet;
}

bool OAIHeaders::is_x_custom_key_Valid() const{
    return m_x_custom_key_isValid;
}

bool OAIHeaders::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_x_custom_key_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHeaders::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
