/**
 * TAGGUN Receipt OCR Scanning API
 * Expects only running software, real reactions, and beautifully crafted APIs to serve your every desire to transcribe a piece of paper to digital form.
 *
 * The version of the OpenAPI document: 1.15.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBankingDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBankingDetails::OAIBankingDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBankingDetails::OAIBankingDetails() {
    this->initializeModel();
}

OAIBankingDetails::~OAIBankingDetails() {}

void OAIBankingDetails::initializeModel() {

    m_account_number_isSet = false;
    m_account_number_isValid = false;

    m_bank_name_isSet = false;
    m_bank_name_isValid = false;

    m_branch_name_isSet = false;
    m_branch_name_isValid = false;

    m_branch_number_isSet = false;
    m_branch_number_isValid = false;

    m_recipient_isSet = false;
    m_recipient_isValid = false;
}

void OAIBankingDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBankingDetails::fromJsonObject(QJsonObject json) {

    m_account_number_isValid = ::OpenAPI::fromJsonValue(m_account_number, json[QString("accountNumber")]);
    m_account_number_isSet = !json[QString("accountNumber")].isNull() && m_account_number_isValid;

    m_bank_name_isValid = ::OpenAPI::fromJsonValue(m_bank_name, json[QString("bankName")]);
    m_bank_name_isSet = !json[QString("bankName")].isNull() && m_bank_name_isValid;

    m_branch_name_isValid = ::OpenAPI::fromJsonValue(m_branch_name, json[QString("branchName")]);
    m_branch_name_isSet = !json[QString("branchName")].isNull() && m_branch_name_isValid;

    m_branch_number_isValid = ::OpenAPI::fromJsonValue(m_branch_number, json[QString("branchNumber")]);
    m_branch_number_isSet = !json[QString("branchNumber")].isNull() && m_branch_number_isValid;

    m_recipient_isValid = ::OpenAPI::fromJsonValue(m_recipient, json[QString("recipient")]);
    m_recipient_isSet = !json[QString("recipient")].isNull() && m_recipient_isValid;
}

QString OAIBankingDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBankingDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_account_number.isSet()) {
        obj.insert(QString("accountNumber"), ::OpenAPI::toJsonValue(m_account_number));
    }
    if (m_bank_name.isSet()) {
        obj.insert(QString("bankName"), ::OpenAPI::toJsonValue(m_bank_name));
    }
    if (m_branch_name.isSet()) {
        obj.insert(QString("branchName"), ::OpenAPI::toJsonValue(m_branch_name));
    }
    if (m_branch_number.isSet()) {
        obj.insert(QString("branchNumber"), ::OpenAPI::toJsonValue(m_branch_number));
    }
    if (m_recipient.isSet()) {
        obj.insert(QString("recipient"), ::OpenAPI::toJsonValue(m_recipient));
    }
    return obj;
}

OAIAccountNumber OAIBankingDetails::getAccountNumber() const {
    return m_account_number;
}
void OAIBankingDetails::setAccountNumber(const OAIAccountNumber &account_number) {
    m_account_number = account_number;
    m_account_number_isSet = true;
}

bool OAIBankingDetails::is_account_number_Set() const{
    return m_account_number_isSet;
}

bool OAIBankingDetails::is_account_number_Valid() const{
    return m_account_number_isValid;
}

OAIBankName OAIBankingDetails::getBankName() const {
    return m_bank_name;
}
void OAIBankingDetails::setBankName(const OAIBankName &bank_name) {
    m_bank_name = bank_name;
    m_bank_name_isSet = true;
}

bool OAIBankingDetails::is_bank_name_Set() const{
    return m_bank_name_isSet;
}

bool OAIBankingDetails::is_bank_name_Valid() const{
    return m_bank_name_isValid;
}

OAIBranchName OAIBankingDetails::getBranchName() const {
    return m_branch_name;
}
void OAIBankingDetails::setBranchName(const OAIBranchName &branch_name) {
    m_branch_name = branch_name;
    m_branch_name_isSet = true;
}

bool OAIBankingDetails::is_branch_name_Set() const{
    return m_branch_name_isSet;
}

bool OAIBankingDetails::is_branch_name_Valid() const{
    return m_branch_name_isValid;
}

OAIBranchNumber OAIBankingDetails::getBranchNumber() const {
    return m_branch_number;
}
void OAIBankingDetails::setBranchNumber(const OAIBranchNumber &branch_number) {
    m_branch_number = branch_number;
    m_branch_number_isSet = true;
}

bool OAIBankingDetails::is_branch_number_Set() const{
    return m_branch_number_isSet;
}

bool OAIBankingDetails::is_branch_number_Valid() const{
    return m_branch_number_isValid;
}

OAIRecipient OAIBankingDetails::getRecipient() const {
    return m_recipient;
}
void OAIBankingDetails::setRecipient(const OAIRecipient &recipient) {
    m_recipient = recipient;
    m_recipient_isSet = true;
}

bool OAIBankingDetails::is_recipient_Set() const{
    return m_recipient_isSet;
}

bool OAIBankingDetails::is_recipient_Valid() const{
    return m_recipient_isValid;
}

bool OAIBankingDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_number.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_bank_name.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_branch_name.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_branch_number.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_recipient.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBankingDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
