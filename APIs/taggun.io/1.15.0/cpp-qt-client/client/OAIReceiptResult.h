/**
 * TAGGUN Receipt OCR Scanning API
 * Expects only running software, real reactions, and beautifully crafted APIs to serve your every desire to transcribe a piece of paper to digital form.
 *
 * The version of the OpenAPI document: 1.15.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReceiptResult.h
 *
 * 
 */

#ifndef OAIReceiptResult_H
#define OAIReceiptResult_H

#include <QJsonObject>

#include "OAIDate1.h"
#include "OAIMerchantAddress.h"
#include "OAIMerchantCity.h"
#include "OAIMerchantCountryCode.h"
#include "OAIMerchantName.h"
#include "OAIMerchantPostalCode.h"
#include "OAIMerchantTypes.h"
#include "OAITaxAmount.h"
#include "OAITotalAmount.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDate1;
class OAIMerchantAddress;
class OAIMerchantCity;
class OAIMerchantCountryCode;
class OAIMerchantName;
class OAIMerchantPostalCode;
class OAIMerchantTypes;
class OAITaxAmount;
class OAITotalAmount;

class OAIReceiptResult : public OAIObject {
public:
    OAIReceiptResult();
    OAIReceiptResult(QString json);
    ~OAIReceiptResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getConfidenceLevel() const;
    void setConfidenceLevel(const double &confidence_level);
    bool is_confidence_level_Set() const;
    bool is_confidence_level_Valid() const;

    OAIDate1 getDate() const;
    void setDate(const OAIDate1 &date);
    bool is_date_Set() const;
    bool is_date_Valid() const;

    QString getError() const;
    void setError(const QString &error);
    bool is_error_Set() const;
    bool is_error_Valid() const;

    OAIMerchantAddress getMerchantAddress() const;
    void setMerchantAddress(const OAIMerchantAddress &merchant_address);
    bool is_merchant_address_Set() const;
    bool is_merchant_address_Valid() const;

    OAIMerchantCity getMerchantCity() const;
    void setMerchantCity(const OAIMerchantCity &merchant_city);
    bool is_merchant_city_Set() const;
    bool is_merchant_city_Valid() const;

    OAIMerchantCountryCode getMerchantCountryCode() const;
    void setMerchantCountryCode(const OAIMerchantCountryCode &merchant_country_code);
    bool is_merchant_country_code_Set() const;
    bool is_merchant_country_code_Valid() const;

    OAIMerchantName getMerchantName() const;
    void setMerchantName(const OAIMerchantName &merchant_name);
    bool is_merchant_name_Set() const;
    bool is_merchant_name_Valid() const;

    OAIMerchantPostalCode getMerchantPostalCode() const;
    void setMerchantPostalCode(const OAIMerchantPostalCode &merchant_postal_code);
    bool is_merchant_postal_code_Set() const;
    bool is_merchant_postal_code_Valid() const;

    OAIMerchantCity getMerchantState() const;
    void setMerchantState(const OAIMerchantCity &merchant_state);
    bool is_merchant_state_Set() const;
    bool is_merchant_state_Valid() const;

    OAIMerchantTypes getMerchantTypes() const;
    void setMerchantTypes(const OAIMerchantTypes &merchant_types);
    bool is_merchant_types_Set() const;
    bool is_merchant_types_Valid() const;

    OAITaxAmount getTaxAmount() const;
    void setTaxAmount(const OAITaxAmount &tax_amount);
    bool is_tax_amount_Set() const;
    bool is_tax_amount_Valid() const;

    OAITotalAmount getTotalAmount() const;
    void setTotalAmount(const OAITotalAmount &total_amount);
    bool is_total_amount_Set() const;
    bool is_total_amount_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_confidence_level;
    bool m_confidence_level_isSet;
    bool m_confidence_level_isValid;

    OAIDate1 m_date;
    bool m_date_isSet;
    bool m_date_isValid;

    QString m_error;
    bool m_error_isSet;
    bool m_error_isValid;

    OAIMerchantAddress m_merchant_address;
    bool m_merchant_address_isSet;
    bool m_merchant_address_isValid;

    OAIMerchantCity m_merchant_city;
    bool m_merchant_city_isSet;
    bool m_merchant_city_isValid;

    OAIMerchantCountryCode m_merchant_country_code;
    bool m_merchant_country_code_isSet;
    bool m_merchant_country_code_isValid;

    OAIMerchantName m_merchant_name;
    bool m_merchant_name_isSet;
    bool m_merchant_name_isValid;

    OAIMerchantPostalCode m_merchant_postal_code;
    bool m_merchant_postal_code_isSet;
    bool m_merchant_postal_code_isValid;

    OAIMerchantCity m_merchant_state;
    bool m_merchant_state_isSet;
    bool m_merchant_state_isValid;

    OAIMerchantTypes m_merchant_types;
    bool m_merchant_types_isSet;
    bool m_merchant_types_isValid;

    OAITaxAmount m_tax_amount;
    bool m_tax_amount_isSet;
    bool m_tax_amount_isValid;

    OAITotalAmount m_total_amount;
    bool m_total_amount_isSet;
    bool m_total_amount_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReceiptResult)

#endif // OAIReceiptResult_H
