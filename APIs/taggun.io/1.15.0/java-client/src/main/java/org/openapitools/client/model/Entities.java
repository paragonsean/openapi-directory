/*
 * TAGGUN Receipt OCR Scanning API
 * Expects only running software, real reactions, and beautifully crafted APIs to serve your every desire to transcribe a piece of paper to digital form.
 *
 * The version of the OpenAPI document: 1.15.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ABN;
import org.openapitools.client.model.BankingDetails;
import org.openapitools.client.model.ExpenseType;
import org.openapitools.client.model.FapiaoInvoice;
import org.openapitools.client.model.FapiaoInvoiceCode;
import org.openapitools.client.model.FapiaoInvoiceNumber;
import org.openapitools.client.model.FapiaoMerchantTaxId;
import org.openapitools.client.model.IBAN;
import org.openapitools.client.model.InvoiceNumber;
import org.openapitools.client.model.MasterCategory;
import org.openapitools.client.model.MerchantVerification;
import org.openapitools.client.model.Model3;
import org.openapitools.client.model.Model4;
import org.openapitools.client.model.Model5;
import org.openapitools.client.model.Model6;
import org.openapitools.client.model.Model7;
import org.openapitools.client.model.Model8;
import org.openapitools.client.model.QrCodeData;
import org.openapitools.client.model.ReceiptNumber;
import org.openapitools.client.model.ShoppingMallName;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Entities
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:10:13.543030-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Entities {
  public static final String SERIALIZED_NAME_A_B_N = "ABN";
  @SerializedName(SERIALIZED_NAME_A_B_N)
  private ABN abn;

  public static final String SERIALIZED_NAME_I_B_A_N = "IBAN";
  @SerializedName(SERIALIZED_NAME_I_B_A_N)
  private IBAN iban;

  public static final String SERIALIZED_NAME_BANKING_DETAILS = "bankingDetails";
  @SerializedName(SERIALIZED_NAME_BANKING_DETAILS)
  private BankingDetails bankingDetails;

  public static final String SERIALIZED_NAME_BELGIUM_V_A_T_NUMBERS = "belgiumVATNumbers";
  @SerializedName(SERIALIZED_NAME_BELGIUM_V_A_T_NUMBERS)
  private List<Model3> belgiumVATNumbers = new ArrayList<>();

  public static final String SERIALIZED_NAME_EXCLUDE_ITEMS = "excludeItems";
  @SerializedName(SERIALIZED_NAME_EXCLUDE_ITEMS)
  private List<Model4> excludeItems = new ArrayList<>();

  public static final String SERIALIZED_NAME_EXPENSE_TYPE = "expenseType";
  @SerializedName(SERIALIZED_NAME_EXPENSE_TYPE)
  private ExpenseType expenseType;

  public static final String SERIALIZED_NAME_FAPIAO_INVOICE = "fapiaoInvoice";
  @SerializedName(SERIALIZED_NAME_FAPIAO_INVOICE)
  private FapiaoInvoice fapiaoInvoice;

  public static final String SERIALIZED_NAME_FAPIAO_INVOICE_CODE = "fapiaoInvoiceCode";
  @SerializedName(SERIALIZED_NAME_FAPIAO_INVOICE_CODE)
  private FapiaoInvoiceCode fapiaoInvoiceCode;

  public static final String SERIALIZED_NAME_FAPIAO_INVOICE_NUMBER = "fapiaoInvoiceNumber";
  @SerializedName(SERIALIZED_NAME_FAPIAO_INVOICE_NUMBER)
  private FapiaoInvoiceNumber fapiaoInvoiceNumber;

  public static final String SERIALIZED_NAME_FAPIAO_MERCHANT_TAX_ID = "fapiaoMerchantTaxId";
  @SerializedName(SERIALIZED_NAME_FAPIAO_MERCHANT_TAX_ID)
  private FapiaoMerchantTaxId fapiaoMerchantTaxId;

  public static final String SERIALIZED_NAME_GEO_NAMES = "geoNames";
  @SerializedName(SERIALIZED_NAME_GEO_NAMES)
  private List<Model8> geoNames = new ArrayList<>();

  public static final String SERIALIZED_NAME_INVOICE_NUMBER = "invoiceNumber";
  @SerializedName(SERIALIZED_NAME_INVOICE_NUMBER)
  private InvoiceNumber invoiceNumber;

  public static final String SERIALIZED_NAME_MASTER_CATEGORY = "masterCategory";
  @SerializedName(SERIALIZED_NAME_MASTER_CATEGORY)
  private MasterCategory masterCategory;

  public static final String SERIALIZED_NAME_MERCHANT_VERIFICATION = "merchantVerification";
  @SerializedName(SERIALIZED_NAME_MERCHANT_VERIFICATION)
  private MerchantVerification merchantVerification;

  public static final String SERIALIZED_NAME_MULTI_TAX_LINE_ITEMS = "multiTaxLineItems";
  @SerializedName(SERIALIZED_NAME_MULTI_TAX_LINE_ITEMS)
  private List<Model7> multiTaxLineItems = new ArrayList<>();

  public static final String SERIALIZED_NAME_PRODUCT_LINE_ITEMS = "productLineItems";
  @SerializedName(SERIALIZED_NAME_PRODUCT_LINE_ITEMS)
  private List<Model6> productLineItems = new ArrayList<>();

  public static final String SERIALIZED_NAME_QR_CODE_DATA = "qrCodeData";
  @SerializedName(SERIALIZED_NAME_QR_CODE_DATA)
  private QrCodeData qrCodeData;

  public static final String SERIALIZED_NAME_RECEIPT_NUMBER = "receiptNumber";
  @SerializedName(SERIALIZED_NAME_RECEIPT_NUMBER)
  private ReceiptNumber receiptNumber;

  public static final String SERIALIZED_NAME_SHOPPING_MALL_NAME = "shoppingMallName";
  @SerializedName(SERIALIZED_NAME_SHOPPING_MALL_NAME)
  private ShoppingMallName shoppingMallName;

  public static final String SERIALIZED_NAME_WINE_LIST_ITEMS = "wineListItems";
  @SerializedName(SERIALIZED_NAME_WINE_LIST_ITEMS)
  private List<Model5> wineListItems = new ArrayList<>();

  public Entities() {
  }

  public Entities abn(ABN abn) {
    this.abn = abn;
    return this;
  }

  /**
   * Get abn
   * @return abn
   */
  @javax.annotation.Nullable
  public ABN getABN() {
    return abn;
  }

  public void setABN(ABN abn) {
    this.abn = abn;
  }


  public Entities iban(IBAN iban) {
    this.iban = iban;
    return this;
  }

  /**
   * Get iban
   * @return iban
   */
  @javax.annotation.Nullable
  public IBAN getIBAN() {
    return iban;
  }

  public void setIBAN(IBAN iban) {
    this.iban = iban;
  }


  public Entities bankingDetails(BankingDetails bankingDetails) {
    this.bankingDetails = bankingDetails;
    return this;
  }

  /**
   * Get bankingDetails
   * @return bankingDetails
   */
  @javax.annotation.Nullable
  public BankingDetails getBankingDetails() {
    return bankingDetails;
  }

  public void setBankingDetails(BankingDetails bankingDetails) {
    this.bankingDetails = bankingDetails;
  }


  public Entities belgiumVATNumbers(List<Model3> belgiumVATNumbers) {
    this.belgiumVATNumbers = belgiumVATNumbers;
    return this;
  }

  public Entities addBelgiumVATNumbersItem(Model3 belgiumVATNumbersItem) {
    if (this.belgiumVATNumbers == null) {
      this.belgiumVATNumbers = new ArrayList<>();
    }
    this.belgiumVATNumbers.add(belgiumVATNumbersItem);
    return this;
  }

  /**
   * Get belgiumVATNumbers
   * @return belgiumVATNumbers
   */
  @javax.annotation.Nullable
  public List<Model3> getBelgiumVATNumbers() {
    return belgiumVATNumbers;
  }

  public void setBelgiumVATNumbers(List<Model3> belgiumVATNumbers) {
    this.belgiumVATNumbers = belgiumVATNumbers;
  }


  public Entities excludeItems(List<Model4> excludeItems) {
    this.excludeItems = excludeItems;
    return this;
  }

  public Entities addExcludeItemsItem(Model4 excludeItemsItem) {
    if (this.excludeItems == null) {
      this.excludeItems = new ArrayList<>();
    }
    this.excludeItems.add(excludeItemsItem);
    return this;
  }

  /**
   * Get excludeItems
   * @return excludeItems
   */
  @javax.annotation.Nullable
  public List<Model4> getExcludeItems() {
    return excludeItems;
  }

  public void setExcludeItems(List<Model4> excludeItems) {
    this.excludeItems = excludeItems;
  }


  public Entities expenseType(ExpenseType expenseType) {
    this.expenseType = expenseType;
    return this;
  }

  /**
   * Get expenseType
   * @return expenseType
   */
  @javax.annotation.Nullable
  public ExpenseType getExpenseType() {
    return expenseType;
  }

  public void setExpenseType(ExpenseType expenseType) {
    this.expenseType = expenseType;
  }


  public Entities fapiaoInvoice(FapiaoInvoice fapiaoInvoice) {
    this.fapiaoInvoice = fapiaoInvoice;
    return this;
  }

  /**
   * Get fapiaoInvoice
   * @return fapiaoInvoice
   */
  @javax.annotation.Nullable
  public FapiaoInvoice getFapiaoInvoice() {
    return fapiaoInvoice;
  }

  public void setFapiaoInvoice(FapiaoInvoice fapiaoInvoice) {
    this.fapiaoInvoice = fapiaoInvoice;
  }


  public Entities fapiaoInvoiceCode(FapiaoInvoiceCode fapiaoInvoiceCode) {
    this.fapiaoInvoiceCode = fapiaoInvoiceCode;
    return this;
  }

  /**
   * Get fapiaoInvoiceCode
   * @return fapiaoInvoiceCode
   */
  @javax.annotation.Nullable
  public FapiaoInvoiceCode getFapiaoInvoiceCode() {
    return fapiaoInvoiceCode;
  }

  public void setFapiaoInvoiceCode(FapiaoInvoiceCode fapiaoInvoiceCode) {
    this.fapiaoInvoiceCode = fapiaoInvoiceCode;
  }


  public Entities fapiaoInvoiceNumber(FapiaoInvoiceNumber fapiaoInvoiceNumber) {
    this.fapiaoInvoiceNumber = fapiaoInvoiceNumber;
    return this;
  }

  /**
   * Get fapiaoInvoiceNumber
   * @return fapiaoInvoiceNumber
   */
  @javax.annotation.Nullable
  public FapiaoInvoiceNumber getFapiaoInvoiceNumber() {
    return fapiaoInvoiceNumber;
  }

  public void setFapiaoInvoiceNumber(FapiaoInvoiceNumber fapiaoInvoiceNumber) {
    this.fapiaoInvoiceNumber = fapiaoInvoiceNumber;
  }


  public Entities fapiaoMerchantTaxId(FapiaoMerchantTaxId fapiaoMerchantTaxId) {
    this.fapiaoMerchantTaxId = fapiaoMerchantTaxId;
    return this;
  }

  /**
   * Get fapiaoMerchantTaxId
   * @return fapiaoMerchantTaxId
   */
  @javax.annotation.Nullable
  public FapiaoMerchantTaxId getFapiaoMerchantTaxId() {
    return fapiaoMerchantTaxId;
  }

  public void setFapiaoMerchantTaxId(FapiaoMerchantTaxId fapiaoMerchantTaxId) {
    this.fapiaoMerchantTaxId = fapiaoMerchantTaxId;
  }


  public Entities geoNames(List<Model8> geoNames) {
    this.geoNames = geoNames;
    return this;
  }

  public Entities addGeoNamesItem(Model8 geoNamesItem) {
    if (this.geoNames == null) {
      this.geoNames = new ArrayList<>();
    }
    this.geoNames.add(geoNamesItem);
    return this;
  }

  /**
   * Get geoNames
   * @return geoNames
   */
  @javax.annotation.Nullable
  public List<Model8> getGeoNames() {
    return geoNames;
  }

  public void setGeoNames(List<Model8> geoNames) {
    this.geoNames = geoNames;
  }


  public Entities invoiceNumber(InvoiceNumber invoiceNumber) {
    this.invoiceNumber = invoiceNumber;
    return this;
  }

  /**
   * Get invoiceNumber
   * @return invoiceNumber
   */
  @javax.annotation.Nullable
  public InvoiceNumber getInvoiceNumber() {
    return invoiceNumber;
  }

  public void setInvoiceNumber(InvoiceNumber invoiceNumber) {
    this.invoiceNumber = invoiceNumber;
  }


  public Entities masterCategory(MasterCategory masterCategory) {
    this.masterCategory = masterCategory;
    return this;
  }

  /**
   * Get masterCategory
   * @return masterCategory
   */
  @javax.annotation.Nullable
  public MasterCategory getMasterCategory() {
    return masterCategory;
  }

  public void setMasterCategory(MasterCategory masterCategory) {
    this.masterCategory = masterCategory;
  }


  public Entities merchantVerification(MerchantVerification merchantVerification) {
    this.merchantVerification = merchantVerification;
    return this;
  }

  /**
   * Get merchantVerification
   * @return merchantVerification
   */
  @javax.annotation.Nullable
  public MerchantVerification getMerchantVerification() {
    return merchantVerification;
  }

  public void setMerchantVerification(MerchantVerification merchantVerification) {
    this.merchantVerification = merchantVerification;
  }


  public Entities multiTaxLineItems(List<Model7> multiTaxLineItems) {
    this.multiTaxLineItems = multiTaxLineItems;
    return this;
  }

  public Entities addMultiTaxLineItemsItem(Model7 multiTaxLineItemsItem) {
    if (this.multiTaxLineItems == null) {
      this.multiTaxLineItems = new ArrayList<>();
    }
    this.multiTaxLineItems.add(multiTaxLineItemsItem);
    return this;
  }

  /**
   * Get multiTaxLineItems
   * @return multiTaxLineItems
   */
  @javax.annotation.Nullable
  public List<Model7> getMultiTaxLineItems() {
    return multiTaxLineItems;
  }

  public void setMultiTaxLineItems(List<Model7> multiTaxLineItems) {
    this.multiTaxLineItems = multiTaxLineItems;
  }


  public Entities productLineItems(List<Model6> productLineItems) {
    this.productLineItems = productLineItems;
    return this;
  }

  public Entities addProductLineItemsItem(Model6 productLineItemsItem) {
    if (this.productLineItems == null) {
      this.productLineItems = new ArrayList<>();
    }
    this.productLineItems.add(productLineItemsItem);
    return this;
  }

  /**
   * Get productLineItems
   * @return productLineItems
   */
  @javax.annotation.Nullable
  public List<Model6> getProductLineItems() {
    return productLineItems;
  }

  public void setProductLineItems(List<Model6> productLineItems) {
    this.productLineItems = productLineItems;
  }


  public Entities qrCodeData(QrCodeData qrCodeData) {
    this.qrCodeData = qrCodeData;
    return this;
  }

  /**
   * Get qrCodeData
   * @return qrCodeData
   */
  @javax.annotation.Nullable
  public QrCodeData getQrCodeData() {
    return qrCodeData;
  }

  public void setQrCodeData(QrCodeData qrCodeData) {
    this.qrCodeData = qrCodeData;
  }


  public Entities receiptNumber(ReceiptNumber receiptNumber) {
    this.receiptNumber = receiptNumber;
    return this;
  }

  /**
   * Get receiptNumber
   * @return receiptNumber
   */
  @javax.annotation.Nullable
  public ReceiptNumber getReceiptNumber() {
    return receiptNumber;
  }

  public void setReceiptNumber(ReceiptNumber receiptNumber) {
    this.receiptNumber = receiptNumber;
  }


  public Entities shoppingMallName(ShoppingMallName shoppingMallName) {
    this.shoppingMallName = shoppingMallName;
    return this;
  }

  /**
   * Get shoppingMallName
   * @return shoppingMallName
   */
  @javax.annotation.Nullable
  public ShoppingMallName getShoppingMallName() {
    return shoppingMallName;
  }

  public void setShoppingMallName(ShoppingMallName shoppingMallName) {
    this.shoppingMallName = shoppingMallName;
  }


  public Entities wineListItems(List<Model5> wineListItems) {
    this.wineListItems = wineListItems;
    return this;
  }

  public Entities addWineListItemsItem(Model5 wineListItemsItem) {
    if (this.wineListItems == null) {
      this.wineListItems = new ArrayList<>();
    }
    this.wineListItems.add(wineListItemsItem);
    return this;
  }

  /**
   * Get wineListItems
   * @return wineListItems
   */
  @javax.annotation.Nullable
  public List<Model5> getWineListItems() {
    return wineListItems;
  }

  public void setWineListItems(List<Model5> wineListItems) {
    this.wineListItems = wineListItems;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Entities entities = (Entities) o;
    return Objects.equals(this.abn, entities.abn) &&
        Objects.equals(this.iban, entities.iban) &&
        Objects.equals(this.bankingDetails, entities.bankingDetails) &&
        Objects.equals(this.belgiumVATNumbers, entities.belgiumVATNumbers) &&
        Objects.equals(this.excludeItems, entities.excludeItems) &&
        Objects.equals(this.expenseType, entities.expenseType) &&
        Objects.equals(this.fapiaoInvoice, entities.fapiaoInvoice) &&
        Objects.equals(this.fapiaoInvoiceCode, entities.fapiaoInvoiceCode) &&
        Objects.equals(this.fapiaoInvoiceNumber, entities.fapiaoInvoiceNumber) &&
        Objects.equals(this.fapiaoMerchantTaxId, entities.fapiaoMerchantTaxId) &&
        Objects.equals(this.geoNames, entities.geoNames) &&
        Objects.equals(this.invoiceNumber, entities.invoiceNumber) &&
        Objects.equals(this.masterCategory, entities.masterCategory) &&
        Objects.equals(this.merchantVerification, entities.merchantVerification) &&
        Objects.equals(this.multiTaxLineItems, entities.multiTaxLineItems) &&
        Objects.equals(this.productLineItems, entities.productLineItems) &&
        Objects.equals(this.qrCodeData, entities.qrCodeData) &&
        Objects.equals(this.receiptNumber, entities.receiptNumber) &&
        Objects.equals(this.shoppingMallName, entities.shoppingMallName) &&
        Objects.equals(this.wineListItems, entities.wineListItems);
  }

  @Override
  public int hashCode() {
    return Objects.hash(abn, iban, bankingDetails, belgiumVATNumbers, excludeItems, expenseType, fapiaoInvoice, fapiaoInvoiceCode, fapiaoInvoiceNumber, fapiaoMerchantTaxId, geoNames, invoiceNumber, masterCategory, merchantVerification, multiTaxLineItems, productLineItems, qrCodeData, receiptNumber, shoppingMallName, wineListItems);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Entities {\n");
    sb.append("    abn: ").append(toIndentedString(abn)).append("\n");
    sb.append("    iban: ").append(toIndentedString(iban)).append("\n");
    sb.append("    bankingDetails: ").append(toIndentedString(bankingDetails)).append("\n");
    sb.append("    belgiumVATNumbers: ").append(toIndentedString(belgiumVATNumbers)).append("\n");
    sb.append("    excludeItems: ").append(toIndentedString(excludeItems)).append("\n");
    sb.append("    expenseType: ").append(toIndentedString(expenseType)).append("\n");
    sb.append("    fapiaoInvoice: ").append(toIndentedString(fapiaoInvoice)).append("\n");
    sb.append("    fapiaoInvoiceCode: ").append(toIndentedString(fapiaoInvoiceCode)).append("\n");
    sb.append("    fapiaoInvoiceNumber: ").append(toIndentedString(fapiaoInvoiceNumber)).append("\n");
    sb.append("    fapiaoMerchantTaxId: ").append(toIndentedString(fapiaoMerchantTaxId)).append("\n");
    sb.append("    geoNames: ").append(toIndentedString(geoNames)).append("\n");
    sb.append("    invoiceNumber: ").append(toIndentedString(invoiceNumber)).append("\n");
    sb.append("    masterCategory: ").append(toIndentedString(masterCategory)).append("\n");
    sb.append("    merchantVerification: ").append(toIndentedString(merchantVerification)).append("\n");
    sb.append("    multiTaxLineItems: ").append(toIndentedString(multiTaxLineItems)).append("\n");
    sb.append("    productLineItems: ").append(toIndentedString(productLineItems)).append("\n");
    sb.append("    qrCodeData: ").append(toIndentedString(qrCodeData)).append("\n");
    sb.append("    receiptNumber: ").append(toIndentedString(receiptNumber)).append("\n");
    sb.append("    shoppingMallName: ").append(toIndentedString(shoppingMallName)).append("\n");
    sb.append("    wineListItems: ").append(toIndentedString(wineListItems)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ABN");
    openapiFields.add("IBAN");
    openapiFields.add("bankingDetails");
    openapiFields.add("belgiumVATNumbers");
    openapiFields.add("excludeItems");
    openapiFields.add("expenseType");
    openapiFields.add("fapiaoInvoice");
    openapiFields.add("fapiaoInvoiceCode");
    openapiFields.add("fapiaoInvoiceNumber");
    openapiFields.add("fapiaoMerchantTaxId");
    openapiFields.add("geoNames");
    openapiFields.add("invoiceNumber");
    openapiFields.add("masterCategory");
    openapiFields.add("merchantVerification");
    openapiFields.add("multiTaxLineItems");
    openapiFields.add("productLineItems");
    openapiFields.add("qrCodeData");
    openapiFields.add("receiptNumber");
    openapiFields.add("shoppingMallName");
    openapiFields.add("wineListItems");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Entities
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Entities.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Entities is not found in the empty JSON string", Entities.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Entities.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Entities` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ABN`
      if (jsonObj.get("ABN") != null && !jsonObj.get("ABN").isJsonNull()) {
        ABN.validateJsonElement(jsonObj.get("ABN"));
      }
      // validate the optional field `IBAN`
      if (jsonObj.get("IBAN") != null && !jsonObj.get("IBAN").isJsonNull()) {
        IBAN.validateJsonElement(jsonObj.get("IBAN"));
      }
      // validate the optional field `bankingDetails`
      if (jsonObj.get("bankingDetails") != null && !jsonObj.get("bankingDetails").isJsonNull()) {
        BankingDetails.validateJsonElement(jsonObj.get("bankingDetails"));
      }
      if (jsonObj.get("belgiumVATNumbers") != null && !jsonObj.get("belgiumVATNumbers").isJsonNull()) {
        JsonArray jsonArraybelgiumVATNumbers = jsonObj.getAsJsonArray("belgiumVATNumbers");
        if (jsonArraybelgiumVATNumbers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("belgiumVATNumbers").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `belgiumVATNumbers` to be an array in the JSON string but got `%s`", jsonObj.get("belgiumVATNumbers").toString()));
          }

          // validate the optional field `belgiumVATNumbers` (array)
          for (int i = 0; i < jsonArraybelgiumVATNumbers.size(); i++) {
            Model3.validateJsonElement(jsonArraybelgiumVATNumbers.get(i));
          };
        }
      }
      if (jsonObj.get("excludeItems") != null && !jsonObj.get("excludeItems").isJsonNull()) {
        JsonArray jsonArrayexcludeItems = jsonObj.getAsJsonArray("excludeItems");
        if (jsonArrayexcludeItems != null) {
          // ensure the json data is an array
          if (!jsonObj.get("excludeItems").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `excludeItems` to be an array in the JSON string but got `%s`", jsonObj.get("excludeItems").toString()));
          }

          // validate the optional field `excludeItems` (array)
          for (int i = 0; i < jsonArrayexcludeItems.size(); i++) {
            Model4.validateJsonElement(jsonArrayexcludeItems.get(i));
          };
        }
      }
      // validate the optional field `expenseType`
      if (jsonObj.get("expenseType") != null && !jsonObj.get("expenseType").isJsonNull()) {
        ExpenseType.validateJsonElement(jsonObj.get("expenseType"));
      }
      // validate the optional field `fapiaoInvoice`
      if (jsonObj.get("fapiaoInvoice") != null && !jsonObj.get("fapiaoInvoice").isJsonNull()) {
        FapiaoInvoice.validateJsonElement(jsonObj.get("fapiaoInvoice"));
      }
      // validate the optional field `fapiaoInvoiceCode`
      if (jsonObj.get("fapiaoInvoiceCode") != null && !jsonObj.get("fapiaoInvoiceCode").isJsonNull()) {
        FapiaoInvoiceCode.validateJsonElement(jsonObj.get("fapiaoInvoiceCode"));
      }
      // validate the optional field `fapiaoInvoiceNumber`
      if (jsonObj.get("fapiaoInvoiceNumber") != null && !jsonObj.get("fapiaoInvoiceNumber").isJsonNull()) {
        FapiaoInvoiceNumber.validateJsonElement(jsonObj.get("fapiaoInvoiceNumber"));
      }
      // validate the optional field `fapiaoMerchantTaxId`
      if (jsonObj.get("fapiaoMerchantTaxId") != null && !jsonObj.get("fapiaoMerchantTaxId").isJsonNull()) {
        FapiaoMerchantTaxId.validateJsonElement(jsonObj.get("fapiaoMerchantTaxId"));
      }
      if (jsonObj.get("geoNames") != null && !jsonObj.get("geoNames").isJsonNull()) {
        JsonArray jsonArraygeoNames = jsonObj.getAsJsonArray("geoNames");
        if (jsonArraygeoNames != null) {
          // ensure the json data is an array
          if (!jsonObj.get("geoNames").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `geoNames` to be an array in the JSON string but got `%s`", jsonObj.get("geoNames").toString()));
          }

          // validate the optional field `geoNames` (array)
          for (int i = 0; i < jsonArraygeoNames.size(); i++) {
            Model8.validateJsonElement(jsonArraygeoNames.get(i));
          };
        }
      }
      // validate the optional field `invoiceNumber`
      if (jsonObj.get("invoiceNumber") != null && !jsonObj.get("invoiceNumber").isJsonNull()) {
        InvoiceNumber.validateJsonElement(jsonObj.get("invoiceNumber"));
      }
      // validate the optional field `masterCategory`
      if (jsonObj.get("masterCategory") != null && !jsonObj.get("masterCategory").isJsonNull()) {
        MasterCategory.validateJsonElement(jsonObj.get("masterCategory"));
      }
      // validate the optional field `merchantVerification`
      if (jsonObj.get("merchantVerification") != null && !jsonObj.get("merchantVerification").isJsonNull()) {
        MerchantVerification.validateJsonElement(jsonObj.get("merchantVerification"));
      }
      if (jsonObj.get("multiTaxLineItems") != null && !jsonObj.get("multiTaxLineItems").isJsonNull()) {
        JsonArray jsonArraymultiTaxLineItems = jsonObj.getAsJsonArray("multiTaxLineItems");
        if (jsonArraymultiTaxLineItems != null) {
          // ensure the json data is an array
          if (!jsonObj.get("multiTaxLineItems").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `multiTaxLineItems` to be an array in the JSON string but got `%s`", jsonObj.get("multiTaxLineItems").toString()));
          }

          // validate the optional field `multiTaxLineItems` (array)
          for (int i = 0; i < jsonArraymultiTaxLineItems.size(); i++) {
            Model7.validateJsonElement(jsonArraymultiTaxLineItems.get(i));
          };
        }
      }
      if (jsonObj.get("productLineItems") != null && !jsonObj.get("productLineItems").isJsonNull()) {
        JsonArray jsonArrayproductLineItems = jsonObj.getAsJsonArray("productLineItems");
        if (jsonArrayproductLineItems != null) {
          // ensure the json data is an array
          if (!jsonObj.get("productLineItems").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `productLineItems` to be an array in the JSON string but got `%s`", jsonObj.get("productLineItems").toString()));
          }

          // validate the optional field `productLineItems` (array)
          for (int i = 0; i < jsonArrayproductLineItems.size(); i++) {
            Model6.validateJsonElement(jsonArrayproductLineItems.get(i));
          };
        }
      }
      // validate the optional field `qrCodeData`
      if (jsonObj.get("qrCodeData") != null && !jsonObj.get("qrCodeData").isJsonNull()) {
        QrCodeData.validateJsonElement(jsonObj.get("qrCodeData"));
      }
      // validate the optional field `receiptNumber`
      if (jsonObj.get("receiptNumber") != null && !jsonObj.get("receiptNumber").isJsonNull()) {
        ReceiptNumber.validateJsonElement(jsonObj.get("receiptNumber"));
      }
      // validate the optional field `shoppingMallName`
      if (jsonObj.get("shoppingMallName") != null && !jsonObj.get("shoppingMallName").isJsonNull()) {
        ShoppingMallName.validateJsonElement(jsonObj.get("shoppingMallName"));
      }
      if (jsonObj.get("wineListItems") != null && !jsonObj.get("wineListItems").isJsonNull()) {
        JsonArray jsonArraywineListItems = jsonObj.getAsJsonArray("wineListItems");
        if (jsonArraywineListItems != null) {
          // ensure the json data is an array
          if (!jsonObj.get("wineListItems").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `wineListItems` to be an array in the JSON string but got `%s`", jsonObj.get("wineListItems").toString()));
          }

          // validate the optional field `wineListItems` (array)
          for (int i = 0; i < jsonArraywineListItems.size(); i++) {
            Model5.validateJsonElement(jsonArraywineListItems.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Entities.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Entities' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Entities> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Entities.class));

       return (TypeAdapter<T>) new TypeAdapter<Entities>() {
           @Override
           public void write(JsonWriter out, Entities value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Entities read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Entities given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Entities
   * @throws IOException if the JSON string is invalid with respect to Entities
   */
  public static Entities fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Entities.class);
  }

  /**
   * Convert an instance of Entities to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

