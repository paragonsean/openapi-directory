/**
 * TAGGUN Receipt OCR Scanning API
 * Expects only running software, real reactions, and beautifully crafted APIs to serve your every desire to transcribe a piece of paper to digital form.
 *
 * The version of the OpenAPI document: 1.15.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TaggunReceiptOcrScanningApi);
  }
}(this, function(expect, TaggunReceiptOcrScanningApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TaggunReceiptOcrScanningApi.ReceiptVerboseResult();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ReceiptVerboseResult', function() {
    it('should create an instance of ReceiptVerboseResult', function() {
      // uncomment below and update the code to test ReceiptVerboseResult
      //var instance = new TaggunReceiptOcrScanningApi.ReceiptVerboseResult();
      //expect(instance).to.be.a(TaggunReceiptOcrScanningApi.ReceiptVerboseResult);
    });

    it('should have the property amounts (base name: "amounts")', function() {
      // uncomment below and update the code to test the property amounts
      //var instance = new TaggunReceiptOcrScanningApi.ReceiptVerboseResult();
      //expect(instance).to.be();
    });

    it('should have the property confidenceLevel (base name: "confidenceLevel")', function() {
      // uncomment below and update the code to test the property confidenceLevel
      //var instance = new TaggunReceiptOcrScanningApi.ReceiptVerboseResult();
      //expect(instance).to.be();
    });

    it('should have the property date (base name: "date")', function() {
      // uncomment below and update the code to test the property date
      //var instance = new TaggunReceiptOcrScanningApi.ReceiptVerboseResult();
      //expect(instance).to.be();
    });

    it('should have the property dueDate (base name: "dueDate")', function() {
      // uncomment below and update the code to test the property dueDate
      //var instance = new TaggunReceiptOcrScanningApi.ReceiptVerboseResult();
      //expect(instance).to.be();
    });

    it('should have the property elapsed (base name: "elapsed")', function() {
      // uncomment below and update the code to test the property elapsed
      //var instance = new TaggunReceiptOcrScanningApi.ReceiptVerboseResult();
      //expect(instance).to.be();
    });

    it('should have the property entities (base name: "entities")', function() {
      // uncomment below and update the code to test the property entities
      //var instance = new TaggunReceiptOcrScanningApi.ReceiptVerboseResult();
      //expect(instance).to.be();
    });

    it('should have the property error (base name: "error")', function() {
      // uncomment below and update the code to test the property error
      //var instance = new TaggunReceiptOcrScanningApi.ReceiptVerboseResult();
      //expect(instance).to.be();
    });

    it('should have the property itemsCount (base name: "itemsCount")', function() {
      // uncomment below and update the code to test the property itemsCount
      //var instance = new TaggunReceiptOcrScanningApi.ReceiptVerboseResult();
      //expect(instance).to.be();
    });

    it('should have the property lineAmounts (base name: "lineAmounts")', function() {
      // uncomment below and update the code to test the property lineAmounts
      //var instance = new TaggunReceiptOcrScanningApi.ReceiptVerboseResult();
      //expect(instance).to.be();
    });

    it('should have the property location (base name: "location")', function() {
      // uncomment below and update the code to test the property location
      //var instance = new TaggunReceiptOcrScanningApi.ReceiptVerboseResult();
      //expect(instance).to.be();
    });

    it('should have the property merchantAddress (base name: "merchantAddress")', function() {
      // uncomment below and update the code to test the property merchantAddress
      //var instance = new TaggunReceiptOcrScanningApi.ReceiptVerboseResult();
      //expect(instance).to.be();
    });

    it('should have the property merchantCity (base name: "merchantCity")', function() {
      // uncomment below and update the code to test the property merchantCity
      //var instance = new TaggunReceiptOcrScanningApi.ReceiptVerboseResult();
      //expect(instance).to.be();
    });

    it('should have the property merchantCountryCode (base name: "merchantCountryCode")', function() {
      // uncomment below and update the code to test the property merchantCountryCode
      //var instance = new TaggunReceiptOcrScanningApi.ReceiptVerboseResult();
      //expect(instance).to.be();
    });

    it('should have the property merchantName (base name: "merchantName")', function() {
      // uncomment below and update the code to test the property merchantName
      //var instance = new TaggunReceiptOcrScanningApi.ReceiptVerboseResult();
      //expect(instance).to.be();
    });

    it('should have the property merchantPostalCode (base name: "merchantPostalCode")', function() {
      // uncomment below and update the code to test the property merchantPostalCode
      //var instance = new TaggunReceiptOcrScanningApi.ReceiptVerboseResult();
      //expect(instance).to.be();
    });

    it('should have the property merchantState (base name: "merchantState")', function() {
      // uncomment below and update the code to test the property merchantState
      //var instance = new TaggunReceiptOcrScanningApi.ReceiptVerboseResult();
      //expect(instance).to.be();
    });

    it('should have the property merchantTypes (base name: "merchantTypes")', function() {
      // uncomment below and update the code to test the property merchantTypes
      //var instance = new TaggunReceiptOcrScanningApi.ReceiptVerboseResult();
      //expect(instance).to.be();
    });

    it('should have the property numbers (base name: "numbers")', function() {
      // uncomment below and update the code to test the property numbers
      //var instance = new TaggunReceiptOcrScanningApi.ReceiptVerboseResult();
      //expect(instance).to.be();
    });

    it('should have the property paymentType (base name: "paymentType")', function() {
      // uncomment below and update the code to test the property paymentType
      //var instance = new TaggunReceiptOcrScanningApi.ReceiptVerboseResult();
      //expect(instance).to.be();
    });

    it('should have the property taxAmount (base name: "taxAmount")', function() {
      // uncomment below and update the code to test the property taxAmount
      //var instance = new TaggunReceiptOcrScanningApi.ReceiptVerboseResult();
      //expect(instance).to.be();
    });

    it('should have the property text (base name: "text")', function() {
      // uncomment below and update the code to test the property text
      //var instance = new TaggunReceiptOcrScanningApi.ReceiptVerboseResult();
      //expect(instance).to.be();
    });

    it('should have the property totalAmount (base name: "totalAmount")', function() {
      // uncomment below and update the code to test the property totalAmount
      //var instance = new TaggunReceiptOcrScanningApi.ReceiptVerboseResult();
      //expect(instance).to.be();
    });

  });

}));
