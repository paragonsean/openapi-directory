/**
 * TAGGUN Receipt OCR Scanning API
 * Expects only running software, real reactions, and beautifully crafted APIs to serve your every desire to transcribe a piece of paper to digital form.
 *
 * The version of the OpenAPI document: 1.15.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AccountNumber from './AccountNumber';
import BankName from './BankName';
import BranchName from './BranchName';
import BranchNumber from './BranchNumber';
import Recipient from './Recipient';

/**
 * The BankingDetails model module.
 * @module model/BankingDetails
 * @version 1.15.0
 */
class BankingDetails {
    /**
     * Constructs a new <code>BankingDetails</code>.
     * @alias module:model/BankingDetails
     */
    constructor() { 
        
        BankingDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BankingDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BankingDetails} obj Optional instance to populate.
     * @return {module:model/BankingDetails} The populated <code>BankingDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BankingDetails();

            if (data.hasOwnProperty('accountNumber')) {
                obj['accountNumber'] = AccountNumber.constructFromObject(data['accountNumber']);
            }
            if (data.hasOwnProperty('bankName')) {
                obj['bankName'] = BankName.constructFromObject(data['bankName']);
            }
            if (data.hasOwnProperty('branchName')) {
                obj['branchName'] = BranchName.constructFromObject(data['branchName']);
            }
            if (data.hasOwnProperty('branchNumber')) {
                obj['branchNumber'] = BranchNumber.constructFromObject(data['branchNumber']);
            }
            if (data.hasOwnProperty('recipient')) {
                obj['recipient'] = Recipient.constructFromObject(data['recipient']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BankingDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BankingDetails</code>.
     */
    static validateJSON(data) {
        // validate the optional field `accountNumber`
        if (data['accountNumber']) { // data not null
          AccountNumber.validateJSON(data['accountNumber']);
        }
        // validate the optional field `bankName`
        if (data['bankName']) { // data not null
          BankName.validateJSON(data['bankName']);
        }
        // validate the optional field `branchName`
        if (data['branchName']) { // data not null
          BranchName.validateJSON(data['branchName']);
        }
        // validate the optional field `branchNumber`
        if (data['branchNumber']) { // data not null
          BranchNumber.validateJSON(data['branchNumber']);
        }
        // validate the optional field `recipient`
        if (data['recipient']) { // data not null
          Recipient.validateJSON(data['recipient']);
        }

        return true;
    }


}



/**
 * @member {module:model/AccountNumber} accountNumber
 */
BankingDetails.prototype['accountNumber'] = undefined;

/**
 * @member {module:model/BankName} bankName
 */
BankingDetails.prototype['bankName'] = undefined;

/**
 * @member {module:model/BranchName} branchName
 */
BankingDetails.prototype['branchName'] = undefined;

/**
 * @member {module:model/BranchNumber} branchNumber
 */
BankingDetails.prototype['branchNumber'] = undefined;

/**
 * @member {module:model/Recipient} recipient
 */
BankingDetails.prototype['recipient'] = undefined;






export default BankingDetails;

