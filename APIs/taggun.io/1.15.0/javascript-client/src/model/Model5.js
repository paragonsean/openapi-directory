/**
 * TAGGUN Receipt OCR Scanning API
 * Expects only running software, real reactions, and beautifully crafted APIs to serve your every desire to transcribe a piece of paper to digital form.
 *
 * The version of the OpenAPI document: 1.15.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ProductName from './ProductName';
import Quantity from './Quantity';
import UnitPrice from './UnitPrice';
import WineVarietal from './WineVarietal';

/**
 * The Model5 model module.
 * @module model/Model5
 * @version 1.15.0
 */
class Model5 {
    /**
     * Constructs a new <code>Model5</code>.
     * @alias module:model/Model5
     */
    constructor() { 
        
        Model5.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Model5</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Model5} obj Optional instance to populate.
     * @return {module:model/Model5} The populated <code>Model5</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Model5();

            if (data.hasOwnProperty('productName')) {
                obj['productName'] = ProductName.constructFromObject(data['productName']);
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = Quantity.constructFromObject(data['quantity']);
            }
            if (data.hasOwnProperty('unitPrice')) {
                obj['unitPrice'] = UnitPrice.constructFromObject(data['unitPrice']);
            }
            if (data.hasOwnProperty('wineVarietal')) {
                obj['wineVarietal'] = WineVarietal.constructFromObject(data['wineVarietal']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Model5</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Model5</code>.
     */
    static validateJSON(data) {
        // validate the optional field `productName`
        if (data['productName']) { // data not null
          ProductName.validateJSON(data['productName']);
        }
        // validate the optional field `quantity`
        if (data['quantity']) { // data not null
          Quantity.validateJSON(data['quantity']);
        }
        // validate the optional field `unitPrice`
        if (data['unitPrice']) { // data not null
          UnitPrice.validateJSON(data['unitPrice']);
        }
        // validate the optional field `wineVarietal`
        if (data['wineVarietal']) { // data not null
          WineVarietal.validateJSON(data['wineVarietal']);
        }

        return true;
    }


}



/**
 * @member {module:model/ProductName} productName
 */
Model5.prototype['productName'] = undefined;

/**
 * @member {module:model/Quantity} quantity
 */
Model5.prototype['quantity'] = undefined;

/**
 * @member {module:model/UnitPrice} unitPrice
 */
Model5.prototype['unitPrice'] = undefined;

/**
 * @member {module:model/WineVarietal} wineVarietal
 */
Model5.prototype['wineVarietal'] = undefined;






export default Model5;

