# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.model1 import Model1
from openapi_server import util


class Quantity1(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data: float=None, regions: List[List[Model1]]=None, text: str=None):
        """Quantity1 - a model defined in OpenAPI

        :param data: The data of this Quantity1.
        :param regions: The regions of this Quantity1.
        :param text: The text of this Quantity1.
        """
        self.openapi_types = {
            'data': float,
            'regions': List[List[Model1]],
            'text': str
        }

        self.attribute_map = {
            'data': 'data',
            'regions': 'regions',
            'text': 'text'
        }

        self._data = data
        self._regions = regions
        self._text = text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Quantity1':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The quantity1 of this Quantity1.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data(self):
        """Gets the data of this Quantity1.


        :return: The data of this Quantity1.
        :rtype: float
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this Quantity1.


        :param data: The data of this Quantity1.
        :type data: float
        """

        self._data = data

    @property
    def regions(self):
        """Gets the regions of this Quantity1.


        :return: The regions of this Quantity1.
        :rtype: List[List[Model1]]
        """
        return self._regions

    @regions.setter
    def regions(self, regions):
        """Sets the regions of this Quantity1.


        :param regions: The regions of this Quantity1.
        :type regions: List[List[Model1]]
        """

        self._regions = regions

    @property
    def text(self):
        """Gets the text of this Quantity1.


        :return: The text of this Quantity1.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this Quantity1.


        :param text: The text of this Quantity1.
        :type text: str
        """

        self._text = text
