# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.balance_owing import BalanceOwing
from openapi_server.models.date2 import Date2
from openapi_server.models.merchant_names import MerchantNames
from openapi_server.models.product_codes import ProductCodes
from openapi_server.models.product_line_items1 import ProductLineItems1
from openapi_server import util


class Model9(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, balance_owing: BalanceOwing=None, _date: Date2=None, merchant_names: MerchantNames=None, product_codes: ProductCodes=None, product_line_items: ProductLineItems1=None):
        """Model9 - a model defined in OpenAPI

        :param balance_owing: The balance_owing of this Model9.
        :param _date: The _date of this Model9.
        :param merchant_names: The merchant_names of this Model9.
        :param product_codes: The product_codes of this Model9.
        :param product_line_items: The product_line_items of this Model9.
        """
        self.openapi_types = {
            'balance_owing': BalanceOwing,
            '_date': Date2,
            'merchant_names': MerchantNames,
            'product_codes': ProductCodes,
            'product_line_items': ProductLineItems1
        }

        self.attribute_map = {
            'balance_owing': 'balanceOwing',
            '_date': 'date',
            'merchant_names': 'merchantNames',
            'product_codes': 'productCodes',
            'product_line_items': 'productLineItems'
        }

        self._balance_owing = balance_owing
        self.__date = _date
        self._merchant_names = merchant_names
        self._product_codes = product_codes
        self._product_line_items = product_line_items

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Model9':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Model9 of this Model9.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def balance_owing(self):
        """Gets the balance_owing of this Model9.


        :return: The balance_owing of this Model9.
        :rtype: BalanceOwing
        """
        return self._balance_owing

    @balance_owing.setter
    def balance_owing(self, balance_owing):
        """Sets the balance_owing of this Model9.


        :param balance_owing: The balance_owing of this Model9.
        :type balance_owing: BalanceOwing
        """

        self._balance_owing = balance_owing

    @property
    def _date(self):
        """Gets the _date of this Model9.


        :return: The _date of this Model9.
        :rtype: Date2
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this Model9.


        :param _date: The _date of this Model9.
        :type _date: Date2
        """

        self.__date = _date

    @property
    def merchant_names(self):
        """Gets the merchant_names of this Model9.


        :return: The merchant_names of this Model9.
        :rtype: MerchantNames
        """
        return self._merchant_names

    @merchant_names.setter
    def merchant_names(self, merchant_names):
        """Sets the merchant_names of this Model9.


        :param merchant_names: The merchant_names of this Model9.
        :type merchant_names: MerchantNames
        """

        self._merchant_names = merchant_names

    @property
    def product_codes(self):
        """Gets the product_codes of this Model9.


        :return: The product_codes of this Model9.
        :rtype: ProductCodes
        """
        return self._product_codes

    @product_codes.setter
    def product_codes(self, product_codes):
        """Sets the product_codes of this Model9.


        :param product_codes: The product_codes of this Model9.
        :type product_codes: ProductCodes
        """

        self._product_codes = product_codes

    @property
    def product_line_items(self):
        """Gets the product_line_items of this Model9.


        :return: The product_line_items of this Model9.
        :rtype: ProductLineItems1
        """
        return self._product_line_items

    @product_line_items.setter
    def product_line_items(self, product_line_items):
        """Sets the product_line_items of this Model9.


        :param product_line_items: The product_line_items of this Model9.
        :type product_line_items: ProductLineItems1
        """

        self._product_line_items = product_line_items
