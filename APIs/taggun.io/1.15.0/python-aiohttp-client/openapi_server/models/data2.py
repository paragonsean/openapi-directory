# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.gross_amount import GrossAmount
from openapi_server.models.net_amount import NetAmount
from openapi_server.models.tax_amount2 import TaxAmount2
from openapi_server.models.tax_rate import TaxRate
from openapi_server.models.tax_type import TaxType
from openapi_server import util


class Data2(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, gross_amount: GrossAmount=None, net_amount: NetAmount=None, tax_amount: TaxAmount2=None, tax_rate: TaxRate=None, tax_type: TaxType=None):
        """Data2 - a model defined in OpenAPI

        :param gross_amount: The gross_amount of this Data2.
        :param net_amount: The net_amount of this Data2.
        :param tax_amount: The tax_amount of this Data2.
        :param tax_rate: The tax_rate of this Data2.
        :param tax_type: The tax_type of this Data2.
        """
        self.openapi_types = {
            'gross_amount': GrossAmount,
            'net_amount': NetAmount,
            'tax_amount': TaxAmount2,
            'tax_rate': TaxRate,
            'tax_type': TaxType
        }

        self.attribute_map = {
            'gross_amount': 'grossAmount',
            'net_amount': 'netAmount',
            'tax_amount': 'taxAmount',
            'tax_rate': 'taxRate',
            'tax_type': 'taxType'
        }

        self._gross_amount = gross_amount
        self._net_amount = net_amount
        self._tax_amount = tax_amount
        self._tax_rate = tax_rate
        self._tax_type = tax_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Data2':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The data2 of this Data2.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gross_amount(self):
        """Gets the gross_amount of this Data2.


        :return: The gross_amount of this Data2.
        :rtype: GrossAmount
        """
        return self._gross_amount

    @gross_amount.setter
    def gross_amount(self, gross_amount):
        """Sets the gross_amount of this Data2.


        :param gross_amount: The gross_amount of this Data2.
        :type gross_amount: GrossAmount
        """

        self._gross_amount = gross_amount

    @property
    def net_amount(self):
        """Gets the net_amount of this Data2.


        :return: The net_amount of this Data2.
        :rtype: NetAmount
        """
        return self._net_amount

    @net_amount.setter
    def net_amount(self, net_amount):
        """Sets the net_amount of this Data2.


        :param net_amount: The net_amount of this Data2.
        :type net_amount: NetAmount
        """

        self._net_amount = net_amount

    @property
    def tax_amount(self):
        """Gets the tax_amount of this Data2.


        :return: The tax_amount of this Data2.
        :rtype: TaxAmount2
        """
        return self._tax_amount

    @tax_amount.setter
    def tax_amount(self, tax_amount):
        """Sets the tax_amount of this Data2.


        :param tax_amount: The tax_amount of this Data2.
        :type tax_amount: TaxAmount2
        """

        self._tax_amount = tax_amount

    @property
    def tax_rate(self):
        """Gets the tax_rate of this Data2.


        :return: The tax_rate of this Data2.
        :rtype: TaxRate
        """
        return self._tax_rate

    @tax_rate.setter
    def tax_rate(self, tax_rate):
        """Sets the tax_rate of this Data2.


        :param tax_rate: The tax_rate of this Data2.
        :type tax_rate: TaxRate
        """

        self._tax_rate = tax_rate

    @property
    def tax_type(self):
        """Gets the tax_type of this Data2.


        :return: The tax_type of this Data2.
        :rtype: TaxType
        """
        return self._tax_type

    @tax_type.setter
    def tax_type(self, tax_type):
        """Sets the tax_type of this Data2.


        :param tax_type: The tax_type of this Data2.
        :type tax_type: TaxType
        """

        self._tax_type = tax_type
