# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.vies import Vies
from openapi_server import util


class Data3(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, country_code: str=None, vat_no: str=None, verification_id: str=None, vies: Vies=None):
        """Data3 - a model defined in OpenAPI

        :param country_code: The country_code of this Data3.
        :param vat_no: The vat_no of this Data3.
        :param verification_id: The verification_id of this Data3.
        :param vies: The vies of this Data3.
        """
        self.openapi_types = {
            'country_code': str,
            'vat_no': str,
            'verification_id': str,
            'vies': Vies
        }

        self.attribute_map = {
            'country_code': 'countryCode',
            'vat_no': 'vatNo',
            'verification_id': 'verificationId',
            'vies': 'vies'
        }

        self._country_code = country_code
        self._vat_no = vat_no
        self._verification_id = verification_id
        self._vies = vies

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Data3':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The data3 of this Data3.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def country_code(self):
        """Gets the country_code of this Data3.


        :return: The country_code of this Data3.
        :rtype: str
        """
        return self._country_code

    @country_code.setter
    def country_code(self, country_code):
        """Sets the country_code of this Data3.


        :param country_code: The country_code of this Data3.
        :type country_code: str
        """

        self._country_code = country_code

    @property
    def vat_no(self):
        """Gets the vat_no of this Data3.


        :return: The vat_no of this Data3.
        :rtype: str
        """
        return self._vat_no

    @vat_no.setter
    def vat_no(self, vat_no):
        """Sets the vat_no of this Data3.


        :param vat_no: The vat_no of this Data3.
        :type vat_no: str
        """

        self._vat_no = vat_no

    @property
    def verification_id(self):
        """Gets the verification_id of this Data3.


        :return: The verification_id of this Data3.
        :rtype: str
        """
        return self._verification_id

    @verification_id.setter
    def verification_id(self, verification_id):
        """Sets the verification_id of this Data3.


        :param verification_id: The verification_id of this Data3.
        :type verification_id: str
        """

        self._verification_id = verification_id

    @property
    def vies(self):
        """Gets the vies of this Data3.


        :return: The vies of this Data3.
        :rtype: Vies
        """
        return self._vies

    @vies.setter
    def vies(self, vies):
        """Sets the vies of this Data3.


        :param vies: The vies of this Data3.
        :type vies: Vies
        """

        self._vies = vies
