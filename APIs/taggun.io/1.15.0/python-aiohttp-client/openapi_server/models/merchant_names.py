# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MerchantNames(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, list: List[str]=None, return_from_the_list: bool=False, skip: bool=False):
        """MerchantNames - a model defined in OpenAPI

        :param list: The list of this MerchantNames.
        :param return_from_the_list: The return_from_the_list of this MerchantNames.
        :param skip: The skip of this MerchantNames.
        """
        self.openapi_types = {
            'list': List[str],
            'return_from_the_list': bool,
            'skip': bool
        }

        self.attribute_map = {
            'list': 'list',
            'return_from_the_list': 'returnFromTheList',
            'skip': 'skip'
        }

        self._list = list
        self._return_from_the_list = return_from_the_list
        self._skip = skip

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MerchantNames':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The merchantNames of this MerchantNames.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def list(self):
        """Gets the list of this MerchantNames.

        An array of merchant names to match

        :return: The list of this MerchantNames.
        :rtype: List[str]
        """
        return self._list

    @list.setter
    def list(self, list):
        """Sets the list of this MerchantNames.

        An array of merchant names to match

        :param list: The list of this MerchantNames.
        :type list: List[str]
        """

        self._list = list

    @property
    def return_from_the_list(self):
        """Gets the return_from_the_list of this MerchantNames.


        :return: The return_from_the_list of this MerchantNames.
        :rtype: bool
        """
        return self._return_from_the_list

    @return_from_the_list.setter
    def return_from_the_list(self, return_from_the_list):
        """Sets the return_from_the_list of this MerchantNames.


        :param return_from_the_list: The return_from_the_list of this MerchantNames.
        :type return_from_the_list: bool
        """

        self._return_from_the_list = return_from_the_list

    @property
    def skip(self):
        """Gets the skip of this MerchantNames.


        :return: The skip of this MerchantNames.
        :rtype: bool
        """
        return self._skip

    @skip.setter
    def skip(self, skip):
        """Sets the skip of this MerchantNames.


        :param skip: The skip of this MerchantNames.
        :type skip: bool
        """

        self._skip = skip
