# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReceiptFeedbackAddPayload(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, currency_code: str=None, _date: datetime=None, master_category: str=None, merchant_name: str=None, reference_id: str=None, tax_amount: float=None, total_amount: float=None):
        """ReceiptFeedbackAddPayload - a model defined in OpenAPI

        :param currency_code: The currency_code of this ReceiptFeedbackAddPayload.
        :param _date: The _date of this ReceiptFeedbackAddPayload.
        :param master_category: The master_category of this ReceiptFeedbackAddPayload.
        :param merchant_name: The merchant_name of this ReceiptFeedbackAddPayload.
        :param reference_id: The reference_id of this ReceiptFeedbackAddPayload.
        :param tax_amount: The tax_amount of this ReceiptFeedbackAddPayload.
        :param total_amount: The total_amount of this ReceiptFeedbackAddPayload.
        """
        self.openapi_types = {
            'currency_code': str,
            '_date': datetime,
            'master_category': str,
            'merchant_name': str,
            'reference_id': str,
            'tax_amount': float,
            'total_amount': float
        }

        self.attribute_map = {
            'currency_code': 'currencyCode',
            '_date': 'date',
            'master_category': 'masterCategory',
            'merchant_name': 'merchantName',
            'reference_id': 'referenceId',
            'tax_amount': 'taxAmount',
            'total_amount': 'totalAmount'
        }

        self._currency_code = currency_code
        self.__date = _date
        self._master_category = master_category
        self._merchant_name = merchant_name
        self._reference_id = reference_id
        self._tax_amount = tax_amount
        self._total_amount = total_amount

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReceiptFeedbackAddPayload':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The receiptFeedbackAddPayload of this ReceiptFeedbackAddPayload.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def currency_code(self):
        """Gets the currency_code of this ReceiptFeedbackAddPayload.


        :return: The currency_code of this ReceiptFeedbackAddPayload.
        :rtype: str
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this ReceiptFeedbackAddPayload.


        :param currency_code: The currency_code of this ReceiptFeedbackAddPayload.
        :type currency_code: str
        """

        self._currency_code = currency_code

    @property
    def _date(self):
        """Gets the _date of this ReceiptFeedbackAddPayload.


        :return: The _date of this ReceiptFeedbackAddPayload.
        :rtype: datetime
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this ReceiptFeedbackAddPayload.


        :param _date: The _date of this ReceiptFeedbackAddPayload.
        :type _date: datetime
        """

        self.__date = _date

    @property
    def master_category(self):
        """Gets the master_category of this ReceiptFeedbackAddPayload.


        :return: The master_category of this ReceiptFeedbackAddPayload.
        :rtype: str
        """
        return self._master_category

    @master_category.setter
    def master_category(self, master_category):
        """Sets the master_category of this ReceiptFeedbackAddPayload.


        :param master_category: The master_category of this ReceiptFeedbackAddPayload.
        :type master_category: str
        """

        self._master_category = master_category

    @property
    def merchant_name(self):
        """Gets the merchant_name of this ReceiptFeedbackAddPayload.


        :return: The merchant_name of this ReceiptFeedbackAddPayload.
        :rtype: str
        """
        return self._merchant_name

    @merchant_name.setter
    def merchant_name(self, merchant_name):
        """Sets the merchant_name of this ReceiptFeedbackAddPayload.


        :param merchant_name: The merchant_name of this ReceiptFeedbackAddPayload.
        :type merchant_name: str
        """

        self._merchant_name = merchant_name

    @property
    def reference_id(self):
        """Gets the reference_id of this ReceiptFeedbackAddPayload.


        :return: The reference_id of this ReceiptFeedbackAddPayload.
        :rtype: str
        """
        return self._reference_id

    @reference_id.setter
    def reference_id(self, reference_id):
        """Sets the reference_id of this ReceiptFeedbackAddPayload.


        :param reference_id: The reference_id of this ReceiptFeedbackAddPayload.
        :type reference_id: str
        """
        if reference_id is None:
            raise ValueError("Invalid value for `reference_id`, must not be `None`")

        self._reference_id = reference_id

    @property
    def tax_amount(self):
        """Gets the tax_amount of this ReceiptFeedbackAddPayload.


        :return: The tax_amount of this ReceiptFeedbackAddPayload.
        :rtype: float
        """
        return self._tax_amount

    @tax_amount.setter
    def tax_amount(self, tax_amount):
        """Sets the tax_amount of this ReceiptFeedbackAddPayload.


        :param tax_amount: The tax_amount of this ReceiptFeedbackAddPayload.
        :type tax_amount: float
        """

        self._tax_amount = tax_amount

    @property
    def total_amount(self):
        """Gets the total_amount of this ReceiptFeedbackAddPayload.


        :return: The total_amount of this ReceiptFeedbackAddPayload.
        :rtype: float
        """
        return self._total_amount

    @total_amount.setter
    def total_amount(self, total_amount):
        """Sets the total_amount of this ReceiptFeedbackAddPayload.


        :param total_amount: The total_amount of this ReceiptFeedbackAddPayload.
        :type total_amount: float
        """

        self._total_amount = total_amount
