# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.account_number import AccountNumber
from openapi_server.models.bank_name import BankName
from openapi_server.models.branch_name import BranchName
from openapi_server.models.branch_number import BranchNumber
from openapi_server.models.recipient import Recipient
from openapi_server import util


class BankingDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_number: AccountNumber=None, bank_name: BankName=None, branch_name: BranchName=None, branch_number: BranchNumber=None, recipient: Recipient=None):
        """BankingDetails - a model defined in OpenAPI

        :param account_number: The account_number of this BankingDetails.
        :param bank_name: The bank_name of this BankingDetails.
        :param branch_name: The branch_name of this BankingDetails.
        :param branch_number: The branch_number of this BankingDetails.
        :param recipient: The recipient of this BankingDetails.
        """
        self.openapi_types = {
            'account_number': AccountNumber,
            'bank_name': BankName,
            'branch_name': BranchName,
            'branch_number': BranchNumber,
            'recipient': Recipient
        }

        self.attribute_map = {
            'account_number': 'accountNumber',
            'bank_name': 'bankName',
            'branch_name': 'branchName',
            'branch_number': 'branchNumber',
            'recipient': 'recipient'
        }

        self._account_number = account_number
        self._bank_name = bank_name
        self._branch_name = branch_name
        self._branch_number = branch_number
        self._recipient = recipient

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BankingDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The bankingDetails of this BankingDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_number(self):
        """Gets the account_number of this BankingDetails.


        :return: The account_number of this BankingDetails.
        :rtype: AccountNumber
        """
        return self._account_number

    @account_number.setter
    def account_number(self, account_number):
        """Sets the account_number of this BankingDetails.


        :param account_number: The account_number of this BankingDetails.
        :type account_number: AccountNumber
        """

        self._account_number = account_number

    @property
    def bank_name(self):
        """Gets the bank_name of this BankingDetails.


        :return: The bank_name of this BankingDetails.
        :rtype: BankName
        """
        return self._bank_name

    @bank_name.setter
    def bank_name(self, bank_name):
        """Sets the bank_name of this BankingDetails.


        :param bank_name: The bank_name of this BankingDetails.
        :type bank_name: BankName
        """

        self._bank_name = bank_name

    @property
    def branch_name(self):
        """Gets the branch_name of this BankingDetails.


        :return: The branch_name of this BankingDetails.
        :rtype: BranchName
        """
        return self._branch_name

    @branch_name.setter
    def branch_name(self, branch_name):
        """Sets the branch_name of this BankingDetails.


        :param branch_name: The branch_name of this BankingDetails.
        :type branch_name: BranchName
        """

        self._branch_name = branch_name

    @property
    def branch_number(self):
        """Gets the branch_number of this BankingDetails.


        :return: The branch_number of this BankingDetails.
        :rtype: BranchNumber
        """
        return self._branch_number

    @branch_number.setter
    def branch_number(self, branch_number):
        """Sets the branch_number of this BankingDetails.


        :param branch_number: The branch_number of this BankingDetails.
        :type branch_number: BranchNumber
        """

        self._branch_number = branch_number

    @property
    def recipient(self):
        """Gets the recipient of this BankingDetails.


        :return: The recipient of this BankingDetails.
        :rtype: Recipient
        """
        return self._recipient

    @recipient.setter
    def recipient(self, recipient):
        """Sets the recipient of this BankingDetails.


        :param recipient: The recipient of this BankingDetails.
        :type recipient: Recipient
        """

        self._recipient = recipient
