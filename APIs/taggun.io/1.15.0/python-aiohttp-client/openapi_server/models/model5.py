# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.product_name import ProductName
from openapi_server.models.quantity import Quantity
from openapi_server.models.unit_price import UnitPrice
from openapi_server.models.wine_varietal import WineVarietal
from openapi_server import util


class Model5(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, product_name: ProductName=None, quantity: Quantity=None, unit_price: UnitPrice=None, wine_varietal: WineVarietal=None):
        """Model5 - a model defined in OpenAPI

        :param product_name: The product_name of this Model5.
        :param quantity: The quantity of this Model5.
        :param unit_price: The unit_price of this Model5.
        :param wine_varietal: The wine_varietal of this Model5.
        """
        self.openapi_types = {
            'product_name': ProductName,
            'quantity': Quantity,
            'unit_price': UnitPrice,
            'wine_varietal': WineVarietal
        }

        self.attribute_map = {
            'product_name': 'productName',
            'quantity': 'quantity',
            'unit_price': 'unitPrice',
            'wine_varietal': 'wineVarietal'
        }

        self._product_name = product_name
        self._quantity = quantity
        self._unit_price = unit_price
        self._wine_varietal = wine_varietal

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Model5':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Model5 of this Model5.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def product_name(self):
        """Gets the product_name of this Model5.


        :return: The product_name of this Model5.
        :rtype: ProductName
        """
        return self._product_name

    @product_name.setter
    def product_name(self, product_name):
        """Sets the product_name of this Model5.


        :param product_name: The product_name of this Model5.
        :type product_name: ProductName
        """

        self._product_name = product_name

    @property
    def quantity(self):
        """Gets the quantity of this Model5.


        :return: The quantity of this Model5.
        :rtype: Quantity
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this Model5.


        :param quantity: The quantity of this Model5.
        :type quantity: Quantity
        """

        self._quantity = quantity

    @property
    def unit_price(self):
        """Gets the unit_price of this Model5.


        :return: The unit_price of this Model5.
        :rtype: UnitPrice
        """
        return self._unit_price

    @unit_price.setter
    def unit_price(self, unit_price):
        """Sets the unit_price of this Model5.


        :param unit_price: The unit_price of this Model5.
        :type unit_price: UnitPrice
        """

        self._unit_price = unit_price

    @property
    def wine_varietal(self):
        """Gets the wine_varietal of this Model5.


        :return: The wine_varietal of this Model5.
        :rtype: WineVarietal
        """
        return self._wine_varietal

    @wine_varietal.setter
    def wine_varietal(self, wine_varietal):
        """Sets the wine_varietal of this Model5.


        :param wine_varietal: The wine_varietal of this Model5.
        :type wine_varietal: WineVarietal
        """

        self._wine_varietal = wine_varietal
