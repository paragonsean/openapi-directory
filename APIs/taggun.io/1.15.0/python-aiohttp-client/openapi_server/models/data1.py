# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.name import Name
from openapi_server.models.quantity1 import Quantity1
from openapi_server.models.total_price import TotalPrice
from openapi_server.models.unit_price1 import UnitPrice1
from openapi_server import util


class Data1(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: Name=None, quantity: Quantity1=None, total_price: TotalPrice=None, unit_price: UnitPrice1=None):
        """Data1 - a model defined in OpenAPI

        :param name: The name of this Data1.
        :param quantity: The quantity of this Data1.
        :param total_price: The total_price of this Data1.
        :param unit_price: The unit_price of this Data1.
        """
        self.openapi_types = {
            'name': Name,
            'quantity': Quantity1,
            'total_price': TotalPrice,
            'unit_price': UnitPrice1
        }

        self.attribute_map = {
            'name': 'name',
            'quantity': 'quantity',
            'total_price': 'totalPrice',
            'unit_price': 'unitPrice'
        }

        self._name = name
        self._quantity = quantity
        self._total_price = total_price
        self._unit_price = unit_price

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Data1':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The data1 of this Data1.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this Data1.


        :return: The name of this Data1.
        :rtype: Name
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Data1.


        :param name: The name of this Data1.
        :type name: Name
        """

        self._name = name

    @property
    def quantity(self):
        """Gets the quantity of this Data1.


        :return: The quantity of this Data1.
        :rtype: Quantity1
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this Data1.


        :param quantity: The quantity of this Data1.
        :type quantity: Quantity1
        """

        self._quantity = quantity

    @property
    def total_price(self):
        """Gets the total_price of this Data1.


        :return: The total_price of this Data1.
        :rtype: TotalPrice
        """
        return self._total_price

    @total_price.setter
    def total_price(self, total_price):
        """Sets the total_price of this Data1.


        :param total_price: The total_price of this Data1.
        :type total_price: TotalPrice
        """

        self._total_price = total_price

    @property
    def unit_price(self):
        """Gets the unit_price of this Data1.


        :return: The unit_price of this Data1.
        :rtype: UnitPrice1
        """
        return self._unit_price

    @unit_price.setter
    def unit_price(self, unit_price):
        """Sets the unit_price of this Data1.


        :param unit_price: The unit_price of this Data1.
        :type unit_price: UnitPrice1
        """

        self._unit_price = unit_price
