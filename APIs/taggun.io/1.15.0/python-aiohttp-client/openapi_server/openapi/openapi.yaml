openapi: 3.0.1
info:
  contact: {}
  description: "Expects only running software, real reactions, and beautifully crafted\
    \ APIs to serve your every desire to transcribe a piece of paper to digital form."
  termsOfService: https://www.taggun.io/terms
  title: TAGGUN Receipt OCR Scanning API
  version: 1.15.0
  x-apisguru-categories:
  - text
  x-logo:
    url: https://twitter.com/taggun_io/profile_image?size=original
  x-origin:
  - format: swagger
    url: https://api.taggun.io/docs/swagger.json
    version: "2.0"
  x-providerName: taggun.io
servers:
- url: https://api.taggun.io/
tags: []
paths:
  /api/account/v1/feedback:
    post:
      operationId: post_api_account_v1_feedback
      parameters:
      - description: API authentication key.
        in: header
        name: apikey
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/receiptFeedbackAddPayload'
        required: false
        x-body-name: body
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/badRequestError'
          description: Bad Request
      summary: Add manually verified receipt data to a given receipt for feedback
        and training purposes
      tags:
      - 3. Improve your results
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.3_improve_your_results_controller
  /api/account/v1/merchantname/add:
    post:
      operationId: post_api_account_v1_merchantname_add
      parameters:
      - description: API authentication key.
        in: header
        name: apikey
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/merchantNameAddPayload'
        required: false
        x-body-name: body
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Result'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/badRequestError'
          description: Bad Request
      summary: Add a keyword to your account's model to predict merchant name. Changes
        in your account's model are updated daily.
      tags:
      - 3. Improve your results
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.3_improve_your_results_controller
  /api/receipt/v1/match/file:
    post:
      deprecated: true
      operationId: post_api_receipt_v1_match_file
      parameters:
      - description: API authentication key.
        in: header
        name: apikey
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/postApiReceiptV1MatchFile_request'
        x-body-name: body
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/receiptMatchResult'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/badRequestError'
          description: Bad Request
      summary: detect and match a receipt against keywords and metadata by uploading
        an image file
      tags:
      - 4. Deprecated endpoints
      x-openapi-router-controller: openapi_server.controllers.4_deprecated_endpoints_controller
      x-codegen-request-body-name: body
  /api/receipt/v1/simple/encoded:
    post:
      operationId: post_api_receipt_v1_simple_encoded
      parameters:
      - description: API authentication key.
        in: header
        name: apikey
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/jsonPayload'
        required: false
        x-body-name: body
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/receiptResult'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/badRequestError'
          description: Bad Request
      summary: transcribe a receipt using base64 encoded image in json payload
      tags:
      - 2. Try other input format endpoints
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.2_try_other_input_format_endpoints_controller
  /api/receipt/v1/simple/file:
    post:
      operationId: post_api_receipt_v1_simple_file
      parameters:
      - description: API authentication key.
        in: header
        name: apikey
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/postApiReceiptV1SimpleFile_request'
        x-body-name: body
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/receiptResult'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/badRequestError'
          description: Bad Request
      summary: transcribe a receipt by uploading an image file
      tags:
      - 1. Getting started
      x-openapi-router-controller: openapi_server.controllers.1_getting_started_controller
      x-codegen-request-body-name: body
  /api/receipt/v1/simple/storage:
    post:
      deprecated: true
      operationId: post_api_receipt_v1_simple_storage
      parameters:
      - description: API authentication key.
        in: header
        name: apikey
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/storagePayload'
        required: false
        x-body-name: body
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/receiptResult'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/badRequestError'
          description: Bad Request
      summary: transcribe a receipt in storage
      tags:
      - 4. Deprecated endpoints
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.4_deprecated_endpoints_controller
  /api/receipt/v1/simple/url:
    post:
      operationId: post_api_receipt_v1_simple_url
      parameters:
      - description: API authentication key.
        in: header
        name: apikey
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/urlPayload'
        required: false
        x-body-name: body
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/receiptResult'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/badRequestError'
          description: Bad Request
      summary: transcribe a receipt from URL
      tags:
      - 2. Try other input format endpoints
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.2_try_other_input_format_endpoints_controller
  /api/receipt/v1/verbose/encoded:
    post:
      operationId: post_api_receipt_v1_verbose_encoded
      parameters:
      - description: API authentication key.
        in: header
        name: apikey
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/jsonPayload'
        required: false
        x-body-name: body
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/receiptVerboseResult'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/badRequestError'
          description: Bad Request
      summary: transcribe a receipt using base64 encoded image in json payload and
        return detailed result
      tags:
      - 2. Try other input format endpoints
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.2_try_other_input_format_endpoints_controller
  /api/receipt/v1/verbose/file:
    post:
      operationId: post_api_receipt_v1_verbose_file
      parameters:
      - description: API authentication key.
        in: header
        name: apikey
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/postApiReceiptV1SimpleFile_request'
        x-body-name: body
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/receiptVerboseResult'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/badRequestError'
          description: Bad Request
      summary: transcribe a receipt by uploading an image file and return detailed
        result
      tags:
      - 1. Getting started
      x-openapi-router-controller: openapi_server.controllers.1_getting_started_controller
      x-codegen-request-body-name: body
  /api/receipt/v1/verbose/storage:
    post:
      deprecated: true
      operationId: post_api_receipt_v1_verbose_storage
      parameters:
      - description: API authentication key.
        in: header
        name: apikey
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/storagePayload'
        required: false
        x-body-name: body
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/receiptVerboseResult'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/badRequestError'
          description: Bad Request
      summary: transcribe a receipt in storage and return detailed result
      tags:
      - 4. Deprecated endpoints
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.4_deprecated_endpoints_controller
  /api/receipt/v1/verbose/url:
    post:
      operationId: post_api_receipt_v1_verbose_url
      parameters:
      - description: API authentication key.
        in: header
        name: apikey
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/urlPayload'
        required: false
        x-body-name: body
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/receiptVerboseResult'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/badRequestError'
          description: Bad Request
      summary: transcribe a receipt from URL and return detailed result
      tags:
      - 2. Try other input format endpoints
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.2_try_other_input_format_endpoints_controller
  /api/validation/v1/campaign/file:
    post:
      operationId: post_api_validation_v1_campaign_file
      parameters:
      - description: API authentication key.
        in: header
        name: apikey
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/postApiValidationV1CampaignFile_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/badRequestError'
          description: Bad Request
      summary: validate and match a receipt against a campaign validation settings
        by uploading an image file
      tags:
      - 4. Campaign Validation
      x-openapi-router-controller: openapi_server.controllers.4_campaign_validation_controller
      x-codegen-request-body-name: body
  /api/validation/v1/campaign/product-validation/file:
    post:
      operationId: post_api_validation_v1_campaign_productvalidation_file
      parameters:
      - description: API authentication key.
        in: header
        name: apikey
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/postApiValidationV1CampaignProductvalidationFile_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/badRequestError'
          description: Bad Request
      summary: validate if user-submitted info like serial number are detected an
        image file
      tags:
      - 4. Campaign Validation
      x-openapi-router-controller: openapi_server.controllers.4_campaign_validation_controller
      x-codegen-request-body-name: body
  /api/validation/v1/campaign/settings/create/{campaignId}:
    post:
      operationId: post_api_validation_v1_campaign_settings_create_campaignid
      parameters:
      - description: API authentication key.
        in: header
        name: apikey
        required: true
        schema:
          type: string
      - description: The ID of the campaign to validate the receipt
        in: path
        name: campaignId
        required: true
        schema:
          maxLength: 50
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Model9'
        required: false
        x-body-name: body
      responses:
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/badRequestError'
          description: Bad Request
      summary: create campaign settings for a client
      tags:
      - 4. Campaign Validation
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.4_campaign_validation_controller
  /api/validation/v1/campaign/settings/delete/{campaignId}:
    delete:
      operationId: delete_api_validation_v1_campaign_settings_delete_campaignid
      parameters:
      - description: API authentication key.
        in: header
        name: apikey
        required: true
        schema:
          type: string
      - description: Remove campaign settings with a campaign ID
        in: path
        name: campaignId
        required: true
        schema:
          maxLength: 50
          type: string
      responses:
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/badRequestError'
          description: Bad Request
      summary: delete campaign settings for a client
      tags:
      - 4. Campaign Validation
      x-openapi-router-controller: openapi_server.controllers.4_campaign_validation_controller
  /api/validation/v1/campaign/settings/list:
    get:
      operationId: get_api_validation_v1_campaign_settings_list
      parameters:
      - description: API authentication key.
        in: header
        name: apikey
        required: true
        schema:
          type: string
      responses:
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/badRequestError'
          description: Bad Request
      summary: list all campaign setting IDs for a client
      tags:
      - 4. Campaign Validation
      x-openapi-router-controller: openapi_server.controllers.4_campaign_validation_controller
  /api/validation/v1/campaign/settings/update/{campaignId}:
    put:
      operationId: put_api_validation_v1_campaign_settings_update_campaignid
      parameters:
      - description: API authentication key.
        in: header
        name: apikey
        required: true
        schema:
          type: string
      - description: The ID of the campaign to validate the receipt
        in: path
        name: campaignId
        required: true
        schema:
          maxLength: 50
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Model9'
        required: false
        x-body-name: body
      responses:
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/badRequestError'
          description: Bad Request
      summary: update campaign settings for a client
      tags:
      - 4. Campaign Validation
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.4_campaign_validation_controller
  /api/validation/v1/campaign/settings/{campaignId}:
    get:
      operationId: get_api_validation_v1_campaign_settings_campaignid
      parameters:
      - description: API authentication key.
        in: header
        name: apikey
        required: true
        schema:
          type: string
      - description: The ID of the campaign to validate the receipt
        in: path
        name: campaignId
        required: true
        schema:
          maxLength: 50
          type: string
      responses:
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/badRequestError'
          description: Bad Request
      summary: get campaign settings for a client
      tags:
      - 4. Campaign Validation
      x-openapi-router-controller: openapi_server.controllers.4_campaign_validation_controller
components:
  schemas:
    ABN:
      example:
        confidenceLevel: 0.7216666666666667
        data: data
        text: text
        keyword: keyword
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        data:
          title: data
          type: string
        keyword:
          title: keyword
          type: string
        text:
          title: text
          type: string
      title: ABN
      type: object
    IBAN:
      example:
        confidenceLevel: 0.7216666666666667
        data: "123456"
        text: "123456"
        keyword: IBAN
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        data:
          example: "123456"
          title: data
          type: string
        keyword:
          example: IBAN
          title: keyword
          type: string
        text:
          example: "123456"
          title: text
          type: string
      title: IBAN
      type: object
    LocationResult:
      example:
        city:
          geoname_id: 2207724
          names:
            en: Devonport
        continent:
          code: OC
          geoname_id: 6255151
          names:
            de: Ozeanien
            en: Oceania
            es: Oceanía
            fr: Océanie
            ja: オセアニア
            pt-BR: Oceania
            ru: Океания
            zh-CN: 大洋洲
        country:
          geoname_id: 2186224
          iso_code: NZ
          names:
            de: Neuseeland
            en: New Zealand
            es: Nueva Zelanda
            fr: Nouvelle-Zélande
            ja: ニュージーランド
            pt-BR: Nova Zelândia
            ru: Новая Зеландия
            zh-CN: 新西兰
        location:
          accuracy_radius: 500
          latitude: -36.8297
          longitude: 174.7994
          time_zone: Pacific/Auckland
        postal:
          code: "0624"
        registered_country:
          geoname_id: 2186224
          iso_code: NZ
          names:
            de: Neuseeland
            en: New Zealand
            es: Nueva Zelanda
            fr: Nouvelle-Zélande
            ja: ニュージーランド
            pt-BR: Nova Zelândia
            ru: Новая Зеландия
            zh-CN: 新西兰
        subdivisions:
        - geoname_id: 2193734
          iso_code: AUK
          names:
            de: Auckland
            en: Auckland
            es: Auckland
            fr: Auckland
            ja: オークランド
            pt-BR: Auckland
            ru: Окленд
      properties:
        location:
          type: object
      title: LocationResult
      type: object
    Model1:
      properties:
        x:
          title: x
          type: number
        "y":
          title: "y"
          type: number
      title: Model1
      type: object
    Model2:
      items:
        $ref: '#/components/schemas/Model1'
      type: array
    Model3:
      example:
        confidenceLevel: 0.7216666666666667
        data: "0660914448"
        text: BE0660.914.448
        keyword: ""
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        data:
          example: "0660914448"
          title: data
          type: string
        keyword:
          example: ""
          title: keyword
          type: string
        text:
          example: BE0660.914.448
          title: text
          type: string
      title: Model3
      type: object
    Model4:
      example:
        confidenceLevel: 0.7216666666666667
        data: 3.0
        text: 零系可樂
        keyword: coke
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        data:
          example: 3.0
          title: data
          type: number
        keyword:
          example: coke
          title: keyword
          type: string
        text:
          example: 零系可樂
          title: text
          type: string
      title: Model4
      type: object
    Model5:
      example:
        unitPrice:
          data: 26.99
          text: cab Sauvignon $26.99
        quantity:
          data: 2.0
          text: qty 2 @ ...
        wineVarietal:
          confidenceLevel: 0.7216666666666667
          text: cab Sauvignon
          keyword: cabernet_sauvignon
        productName:
          confidenceLevel: 0.7216666666666667
          text: 19 crimes
          keyword: CDIGI_19_crimes
      properties:
        productName:
          $ref: '#/components/schemas/productName'
        quantity:
          $ref: '#/components/schemas/quantity'
        unitPrice:
          $ref: '#/components/schemas/unitPrice'
        wineVarietal:
          $ref: '#/components/schemas/wineVarietal'
      title: Model5
      type: object
    Model6:
      example:
        confidenceLevel: 0.7216666666666667
        regions:
        - - x: 437
            "y": 787
          - x: 499
            "y": 788
          - x: 499
            "y": 808
          - x: 437
            "y": 807
        data:
          unitPrice:
            regions:
            - - x: 437
                "y": 787
              - x: 499
                "y": 788
              - x: 499
                "y": 808
              - x: 437
                "y": 807
            data: 48.0
            text: ' $48.00'
          quantity:
            regions:
            - - x: 437
                "y": 787
              - x: 499
                "y": 788
              - x: 499
                "y": 808
              - x: 437
                "y": 807
            data: 2.0
            text: qty 2 @ ...
          totalPrice:
            regions:
            - - x: 437
                "y": 787
              - x: 499
                "y": 788
              - x: 499
                "y": 808
              - x: 437
                "y": 807
            data: 96.0
            text: ' $96.00'
          name:
            regions:
            - - x: 437
                "y": 787
              - x: 499
                "y": 788
              - x: 499
                "y": 808
              - x: 437
                "y": 807
            data: Infini
            text: Infini
        index: 20.0
        text: "TVA 5,50 15,01 0,83 15,83"
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        data:
          $ref: '#/components/schemas/data1'
        index:
          example: 20.0
          title: index
          type: number
        regions:
          example:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          items:
            $ref: '#/components/schemas/Model2'
          title: regions
          type: array
        text:
          example: "TVA 5,50 15,01 0,83 15,83"
          title: text
          type: string
      title: Model6
      type: object
    Model7:
      example:
        confidenceLevel: 0.7216666666666667
        regions:
        - - x: 437
            "y": 787
          - x: 499
            "y": 788
          - x: 499
            "y": 808
          - x: 437
            "y": 807
        data:
          taxRate:
            data: 0.055
            text: "5,50%"
          netAmount:
            data: 15.01
            text: "15,01"
          grossAmount:
            data: 15.83
            text: "15,83"
          taxAmount:
            data: 0.83
            text: "0,83"
          taxType:
            data: TVA
            text: TVA
        index: 20.0
        text: "TVA 5,50 15,01 0,83 15,83"
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        data:
          $ref: '#/components/schemas/data2'
        index:
          example: 20.0
          title: index
          type: number
        regions:
          example:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          items:
            $ref: '#/components/schemas/Model2'
          title: regions
          type: array
        text:
          example: "TVA 5,50 15,01 0,83 15,83"
          title: text
          type: string
      title: Model7
      type: object
    Model8:
      example:
        confidenceLevel: 0.7216666666666667
        data: 3.0
        text: France
        keyword: France
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        data:
          example: 3.0
          title: data
          type: number
        keyword:
          example: France
          title: keyword
          type: string
        text:
          example: France
          title: text
          type: string
      title: Model8
      type: object
    Model9:
      example:
        date:
          start: 2023-04-01T00:00:00Z
          end: 2024-04-01T00:00:00Z
        merchantNames:
          skip: false
          list:
          - AB Electric
          returnFromTheList: false
        balanceOwing:
          min: 0.0
          max: 100.0
          skip: false
        productCodes:
          skip: false
          list:
          - MAF-01010101
        productLineItems:
          names:
          - Apple
          - Banana
          quantity:
            min: 0.0
            max: 100.0
          totalPrice:
            min: 0.0
            max: 100.0
          skip: false
      properties:
        balanceOwing:
          $ref: '#/components/schemas/balanceOwing'
        date:
          $ref: '#/components/schemas/date2'
        merchantNames:
          $ref: '#/components/schemas/merchantNames'
        productCodes:
          $ref: '#/components/schemas/productCodes'
        productLineItems:
          $ref: '#/components/schemas/productLineItems1'
      title: Model9
      type: object
    Result:
      example:
        result: OK
      properties:
        result:
          example: OK
          title: result
          type: string
      title: Result
      type: object
    accountNumber:
      example:
        confidenceLevel: 0.7216666666666667
        regions:
        - - x: 437
            "y": 787
          - x: 499
            "y": 788
          - x: 499
            "y": 808
          - x: 437
            "y": 807
        data: "90412099"
        index: 0.8008281904610115
        text: "Account Number: 20412096"
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        data:
          example: "90412099"
          title: data
          type: string
        index:
          title: index
          type: number
        regions:
          example:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          items:
            $ref: '#/components/schemas/Model2'
          title: regions
          type: array
        text:
          example: "Account Number: 20412096"
          title: text
          type: string
      title: accountNumber
      type: object
    badRequestError:
      example:
        error: Bad Request
        message: File is required
        statusCode: 400.0
      properties:
        error:
          example: Bad Request
          title: error
          type: string
        message:
          example: File is required
          title: message
          type: string
        statusCode:
          example: 400.0
          title: statusCode
          type: number
      title: badRequestError
      type: object
    balanceOwing:
      description: A range of balance owning for validation
      example:
        min: 0.0
        max: 100.0
        skip: false
      properties:
        max:
          example: 100.0
          title: max
          type: number
        min:
          example: 0.0
          title: min
          type: number
        skip:
          default: false
          title: skip
          type: boolean
      required:
      - max
      - min
      title: balanceOwing
      type: object
    bankName:
      example:
        confidenceLevel: 0.7216666666666667
        regions:
        - - x: 437
            "y": 787
          - x: 499
            "y": 788
          - x: 499
            "y": 808
          - x: 437
            "y": 807
        data: ANZ New Zealand
        index: 6.027456183070403
        text: "ANZ New Zealand, 123 Rd, XXX City"
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        data:
          example: ANZ New Zealand
          title: data
          type: string
        index:
          title: index
          type: number
        regions:
          example:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          items:
            $ref: '#/components/schemas/Model2'
          title: regions
          type: array
        text:
          example: "ANZ New Zealand, 123 Rd, XXX City"
          title: text
          type: string
      title: bankName
      type: object
    bankingDetails:
      example:
        branchNumber:
          confidenceLevel: 0.7216666666666667
          regions:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          data: "522106"
          index: 5.962133916683182
          text: 522-106
        recipient:
          confidenceLevel: 0.7216666666666667
          regions:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          data: Jan Doe
          index: 5.637376656633329
          text: Jan Doe
        branchName:
          confidenceLevel: 0.7216666666666667
          regions:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          data: CBD Branch
          index: 1.4658129805029452
          text: CBD Branch
        bankName:
          confidenceLevel: 0.7216666666666667
          regions:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          data: ANZ New Zealand
          index: 6.027456183070403
          text: "ANZ New Zealand, 123 Rd, XXX City"
        accountNumber:
          confidenceLevel: 0.7216666666666667
          regions:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          data: "90412099"
          index: 0.8008281904610115
          text: "Account Number: 20412096"
      properties:
        accountNumber:
          $ref: '#/components/schemas/accountNumber'
        bankName:
          $ref: '#/components/schemas/bankName'
        branchName:
          $ref: '#/components/schemas/branchName'
        branchNumber:
          $ref: '#/components/schemas/branchNumber'
        recipient:
          $ref: '#/components/schemas/recipient'
      title: bankingDetails
      type: object
    belgiumVATNumbers:
      items:
        $ref: '#/components/schemas/Model3'
      title: belgiumVATNumbers
      type: array
    branchName:
      example:
        confidenceLevel: 0.7216666666666667
        regions:
        - - x: 437
            "y": 787
          - x: 499
            "y": 788
          - x: 499
            "y": 808
          - x: 437
            "y": 807
        data: CBD Branch
        index: 1.4658129805029452
        text: CBD Branch
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        data:
          example: CBD Branch
          title: data
          type: string
        index:
          title: index
          type: number
        regions:
          example:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          items:
            $ref: '#/components/schemas/Model2'
          title: regions
          type: array
        text:
          example: CBD Branch
          title: text
          type: string
      title: branchName
      type: object
    branchNumber:
      example:
        confidenceLevel: 0.7216666666666667
        regions:
        - - x: 437
            "y": 787
          - x: 499
            "y": 788
          - x: 499
            "y": 808
          - x: 437
            "y": 807
        data: "522106"
        index: 5.962133916683182
        text: 522-106
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        data:
          example: "522106"
          title: data
          type: string
        index:
          title: index
          type: number
        regions:
          example:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          items:
            $ref: '#/components/schemas/Model2'
          title: regions
          type: array
        text:
          example: 522-106
          title: text
          type: string
      title: branchNumber
      type: object
    data:
      example:
      - restaurant
      - food
      items:
        type: string
      title: data
      type: array
    data1:
      example:
        unitPrice:
          regions:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          data: 48.0
          text: ' $48.00'
        quantity:
          regions:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          data: 2.0
          text: qty 2 @ ...
        totalPrice:
          regions:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          data: 96.0
          text: ' $96.00'
        name:
          regions:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          data: Infini
          text: Infini
      properties:
        name:
          $ref: '#/components/schemas/name'
        quantity:
          $ref: '#/components/schemas/quantity1'
        totalPrice:
          $ref: '#/components/schemas/totalPrice'
        unitPrice:
          $ref: '#/components/schemas/unitPrice1'
      title: data1
      type: object
    data2:
      example:
        taxRate:
          data: 0.055
          text: "5,50%"
        netAmount:
          data: 15.01
          text: "15,01"
        grossAmount:
          data: 15.83
          text: "15,83"
        taxAmount:
          data: 0.83
          text: "0,83"
        taxType:
          data: TVA
          text: TVA
      properties:
        grossAmount:
          $ref: '#/components/schemas/grossAmount'
        netAmount:
          $ref: '#/components/schemas/netAmount'
        taxAmount:
          $ref: '#/components/schemas/taxAmount2'
        taxRate:
          $ref: '#/components/schemas/taxRate'
        taxType:
          $ref: '#/components/schemas/taxType'
      title: data2
      type: object
    data3:
      example:
        countryCode: IE
        vatNo: 950###8N
        vies:
          valid: true
          address: "1 Someplace street, Ireland"
          countryCode: IE
          name: Merchant Name
          error: IE
          vatNumber: 950###8N
        verificationId: IE950###8N
      properties:
        countryCode:
          example: IE
          title: countryCode
          type: string
        vatNo:
          example: 950###8N
          title: vatNo
          type: string
        verificationId:
          example: IE950###8N
          title: verificationId
          type: string
        vies:
          $ref: '#/components/schemas/vies'
      title: data3
      type: object
    date:
      example:
        confidenceLevel: 0.7216666666666667
        regions:
        - - x: 437
            "y": 787
          - x: 499
            "y": 788
          - x: 499
            "y": 808
          - x: 437
            "y": 807
        data: 2016-12-22T12:00:00Z
        index: 2.0
        text: 22DEC'16
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        data:
          example: 2016-12-22T12:00:00Z
          format: date-time
          title: data
          type: string
        index:
          example: 2.0
          title: index
          type: number
        regions:
          example:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          items:
            $ref: '#/components/schemas/Model2'
          title: regions
          type: array
        text:
          example: 22DEC'16
          title: text
          type: string
      title: date
      type: object
    date1:
      example:
        confidenceLevel: 0.7216666666666667
        data: 2016-12-22T12:00:00Z
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        data:
          example: 2016-12-22T12:00:00Z
          format: date-time
          title: data
          type: string
      title: date1
      type: object
    date2:
      description: A period of time for validation
      example:
        start: 2023-04-01T00:00:00Z
        end: 2024-04-01T00:00:00Z
      properties:
        end:
          example: 2024-04-01T00:00:00Z
          format: date-time
          title: end
          type: string
        start:
          example: 2023-04-01T00:00:00Z
          format: date-time
          title: start
          type: string
      required:
      - end
      - start
      title: date2
      type: object
    dueDate:
      example:
        confidenceLevel: 0.7216666666666667
        regions:
        - - x: 437
            "y": 787
          - x: 499
            "y": 788
          - x: 499
            "y": 808
          - x: 437
            "y": 807
        data: 2000-01-23T04:56:07.000+00:00
        index: 2.0
        text: 22DEC'16
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        data:
          format: date-time
          title: data
          type: string
        index:
          example: 2.0
          title: index
          type: number
        regions:
          example:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          items:
            $ref: '#/components/schemas/Model2'
          title: regions
          type: array
        text:
          example: 22DEC'16
          title: text
          type: string
      title: dueDate
      type: object
    entities:
      example:
        expenseType:
          confidenceLevel: 0.7216666666666667
          regions:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          data: restaurant
          index: 2.3021358869347655
          text: text
        multiTaxLineItems:
        - confidenceLevel: 0.7216666666666667
          regions:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          data:
            taxRate:
              data: 0.055
              text: "5,50%"
            netAmount:
              data: 15.01
              text: "15,01"
            grossAmount:
              data: 15.83
              text: "15,83"
            taxAmount:
              data: 0.83
              text: "0,83"
            taxType:
              data: TVA
              text: TVA
          index: 20.0
          text: "TVA 5,50 15,01 0,83 15,83"
        - confidenceLevel: 0.7216666666666667
          regions:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          data:
            taxRate:
              data: 0.055
              text: "5,50%"
            netAmount:
              data: 15.01
              text: "15,01"
            grossAmount:
              data: 15.83
              text: "15,83"
            taxAmount:
              data: 0.83
              text: "0,83"
            taxType:
              data: TVA
              text: TVA
          index: 20.0
          text: "TVA 5,50 15,01 0,83 15,83"
        qrCodeData:
          confidenceLevel: 0.7216666666666667
          data: "01,10,031001900211,15004826,109.72,20190617,11467310187259010073,908E"
          text: "01,10,031001900211,15004826,109.72,20190617,11467310187259010073,908E"
          keyword: ""
        IBAN:
          confidenceLevel: 0.7216666666666667
          data: "123456"
          text: "123456"
          keyword: IBAN
        geoNames:
        - confidenceLevel: 0.7216666666666667
          data: 3.0
          text: France
          keyword: France
        - confidenceLevel: 0.7216666666666667
          data: 3.0
          text: France
          keyword: France
        merchantVerification:
          confidenceLevel: 0.7216666666666667
          regions:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          data:
            countryCode: IE
            vatNo: 950###8N
            vies:
              valid: true
              address: "1 Someplace street, Ireland"
              countryCode: IE
              name: Merchant Name
              error: IE
              vatNumber: 950###8N
            verificationId: IE950###8N
          index: 3.0
          text: "VAT no: IE 95###8N"
        productLineItems:
        - confidenceLevel: 0.7216666666666667
          regions:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          data:
            unitPrice:
              regions:
              - - x: 437
                  "y": 787
                - x: 499
                  "y": 788
                - x: 499
                  "y": 808
                - x: 437
                  "y": 807
              data: 48.0
              text: ' $48.00'
            quantity:
              regions:
              - - x: 437
                  "y": 787
                - x: 499
                  "y": 788
                - x: 499
                  "y": 808
                - x: 437
                  "y": 807
              data: 2.0
              text: qty 2 @ ...
            totalPrice:
              regions:
              - - x: 437
                  "y": 787
                - x: 499
                  "y": 788
                - x: 499
                  "y": 808
                - x: 437
                  "y": 807
              data: 96.0
              text: ' $96.00'
            name:
              regions:
              - - x: 437
                  "y": 787
                - x: 499
                  "y": 788
                - x: 499
                  "y": 808
                - x: 437
                  "y": 807
              data: Infini
              text: Infini
          index: 20.0
          text: "TVA 5,50 15,01 0,83 15,83"
        - confidenceLevel: 0.7216666666666667
          regions:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          data:
            unitPrice:
              regions:
              - - x: 437
                  "y": 787
                - x: 499
                  "y": 788
                - x: 499
                  "y": 808
                - x: 437
                  "y": 807
              data: 48.0
              text: ' $48.00'
            quantity:
              regions:
              - - x: 437
                  "y": 787
                - x: 499
                  "y": 788
                - x: 499
                  "y": 808
                - x: 437
                  "y": 807
              data: 2.0
              text: qty 2 @ ...
            totalPrice:
              regions:
              - - x: 437
                  "y": 787
                - x: 499
                  "y": 788
                - x: 499
                  "y": 808
                - x: 437
                  "y": 807
              data: 96.0
              text: ' $96.00'
            name:
              regions:
              - - x: 437
                  "y": 787
                - x: 499
                  "y": 788
                - x: 499
                  "y": 808
                - x: 437
                  "y": 807
              data: Infini
              text: Infini
          index: 20.0
          text: "TVA 5,50 15,01 0,83 15,83"
        ABN:
          confidenceLevel: 0.7216666666666667
          data: data
          text: text
          keyword: keyword
        fapiaoInvoiceCode:
          confidenceLevel: 0.7216666666666667
          data: "033001800104"
          text: "033001800104"
          keyword: ""
        wineListItems:
        - unitPrice:
            data: 26.99
            text: cab Sauvignon $26.99
          quantity:
            data: 2.0
            text: qty 2 @ ...
          wineVarietal:
            confidenceLevel: 0.7216666666666667
            text: cab Sauvignon
            keyword: cabernet_sauvignon
          productName:
            confidenceLevel: 0.7216666666666667
            text: 19 crimes
            keyword: CDIGI_19_crimes
        - unitPrice:
            data: 26.99
            text: cab Sauvignon $26.99
          quantity:
            data: 2.0
            text: qty 2 @ ...
          wineVarietal:
            confidenceLevel: 0.7216666666666667
            text: cab Sauvignon
            keyword: cabernet_sauvignon
          productName:
            confidenceLevel: 0.7216666666666667
            text: 19 crimes
            keyword: CDIGI_19_crimes
        masterCategory:
          confidenceLevel: 0.7216666666666667
          regions:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          data: entertainment
          index: 7.061401241503109
          text: text
        bankingDetails:
          branchNumber:
            confidenceLevel: 0.7216666666666667
            regions:
            - - x: 437
                "y": 787
              - x: 499
                "y": 788
              - x: 499
                "y": 808
              - x: 437
                "y": 807
            data: "522106"
            index: 5.962133916683182
            text: 522-106
          recipient:
            confidenceLevel: 0.7216666666666667
            regions:
            - - x: 437
                "y": 787
              - x: 499
                "y": 788
              - x: 499
                "y": 808
              - x: 437
                "y": 807
            data: Jan Doe
            index: 5.637376656633329
            text: Jan Doe
          branchName:
            confidenceLevel: 0.7216666666666667
            regions:
            - - x: 437
                "y": 787
              - x: 499
                "y": 788
              - x: 499
                "y": 808
              - x: 437
                "y": 807
            data: CBD Branch
            index: 1.4658129805029452
            text: CBD Branch
          bankName:
            confidenceLevel: 0.7216666666666667
            regions:
            - - x: 437
                "y": 787
              - x: 499
                "y": 788
              - x: 499
                "y": 808
              - x: 437
                "y": 807
            data: ANZ New Zealand
            index: 6.027456183070403
            text: "ANZ New Zealand, 123 Rd, XXX City"
          accountNumber:
            confidenceLevel: 0.7216666666666667
            regions:
            - - x: 437
                "y": 787
              - x: 499
                "y": 788
              - x: 499
                "y": 808
              - x: 437
                "y": 807
            data: "90412099"
            index: 0.8008281904610115
            text: "Account Number: 20412096"
        invoiceNumber:
          confidenceLevel: 0.7216666666666667
          data: "123456"
          text: "123456"
          keyword: Invoice number
        excludeItems:
        - confidenceLevel: 0.7216666666666667
          data: 3.0
          text: 零系可樂
          keyword: coke
        - confidenceLevel: 0.7216666666666667
          data: 3.0
          text: 零系可樂
          keyword: coke
        fapiaoInvoice:
          confidenceLevel: 0.7216666666666667
          data: true
          text: 发票
          keyword: 发票
        fapiaoMerchantTaxId:
          confidenceLevel: 0.7216666666666667
          data: "913101156073309979"
          text: "913101156073309979"
          keyword: ""
        shoppingMallName:
          confidenceLevel: 0.7216666666666667
          regions:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          data: Bass Hill Plaza
          index: 3.0
          text: Some Shop Name - Bass Hill
        belgiumVATNumbers:
        - confidenceLevel: 0.7216666666666667
          data: "0660914448"
          text: BE0660.914.448
          keyword: ""
        - confidenceLevel: 0.7216666666666667
          data: "0660914448"
          text: BE0660.914.448
          keyword: ""
        fapiaoInvoiceNumber:
          confidenceLevel: 0.7216666666666667
          data: "80227830"
          text: "80227830"
          keyword: ""
        receiptNumber:
          confidenceLevel: 0.7216666666666667
          regions:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          data: 11/220371
          index: 3.0
          text: "ReceiptNumber: 11/220371"
          keyword: ReceiptNumber
      properties:
        ABN:
          $ref: '#/components/schemas/ABN'
        IBAN:
          $ref: '#/components/schemas/IBAN'
        bankingDetails:
          $ref: '#/components/schemas/bankingDetails'
        belgiumVATNumbers:
          items:
            $ref: '#/components/schemas/Model3'
          title: belgiumVATNumbers
          type: array
        excludeItems:
          items:
            $ref: '#/components/schemas/Model4'
          title: excludeItems
          type: array
        expenseType:
          $ref: '#/components/schemas/expenseType'
        fapiaoInvoice:
          $ref: '#/components/schemas/fapiaoInvoice'
        fapiaoInvoiceCode:
          $ref: '#/components/schemas/fapiaoInvoiceCode'
        fapiaoInvoiceNumber:
          $ref: '#/components/schemas/fapiaoInvoiceNumber'
        fapiaoMerchantTaxId:
          $ref: '#/components/schemas/fapiaoMerchantTaxId'
        geoNames:
          items:
            $ref: '#/components/schemas/Model8'
          title: geoNames
          type: array
        invoiceNumber:
          $ref: '#/components/schemas/invoiceNumber'
        masterCategory:
          $ref: '#/components/schemas/masterCategory'
        merchantVerification:
          $ref: '#/components/schemas/merchantVerification'
        multiTaxLineItems:
          items:
            $ref: '#/components/schemas/Model7'
          title: multiTaxLineItems
          type: array
        productLineItems:
          items:
            $ref: '#/components/schemas/Model6'
          title: productLineItems
          type: array
        qrCodeData:
          $ref: '#/components/schemas/qrCodeData'
        receiptNumber:
          $ref: '#/components/schemas/receiptNumber'
        shoppingMallName:
          $ref: '#/components/schemas/shoppingMallName'
        wineListItems:
          items:
            $ref: '#/components/schemas/Model5'
          title: wineListItems
          type: array
      title: entities
      type: object
    excludeItems:
      items:
        $ref: '#/components/schemas/Model4'
      title: excludeItems
      type: array
    expenseType:
      example:
        confidenceLevel: 0.7216666666666667
        regions:
        - - x: 437
            "y": 787
          - x: 499
            "y": 788
          - x: 499
            "y": 808
          - x: 437
            "y": 807
        data: restaurant
        index: 2.3021358869347655
        text: text
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        data:
          example: restaurant
          title: data
          type: string
        index:
          title: index
          type: number
        regions:
          example:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          items:
            $ref: '#/components/schemas/Model2'
          title: regions
          type: array
        text:
          title: text
          type: string
      title: expenseType
      type: object
    fapiaoInvoice:
      example:
        confidenceLevel: 0.7216666666666667
        data: true
        text: 发票
        keyword: 发票
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        data:
          example: true
          title: data
          type: boolean
        keyword:
          example: 发票
          title: keyword
          type: string
        text:
          example: 发票
          title: text
          type: string
      title: fapiaoInvoice
      type: object
    fapiaoInvoiceCode:
      example:
        confidenceLevel: 0.7216666666666667
        data: "033001800104"
        text: "033001800104"
        keyword: ""
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        data:
          example: "033001800104"
          title: data
          type: string
        keyword:
          example: ""
          title: keyword
          type: string
        text:
          example: "033001800104"
          title: text
          type: string
      title: fapiaoInvoiceCode
      type: object
    fapiaoInvoiceNumber:
      example:
        confidenceLevel: 0.7216666666666667
        data: "80227830"
        text: "80227830"
        keyword: ""
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        data:
          example: "80227830"
          title: data
          type: string
        keyword:
          example: ""
          title: keyword
          type: string
        text:
          example: "80227830"
          title: text
          type: string
      title: fapiaoInvoiceNumber
      type: object
    fapiaoMerchantTaxId:
      example:
        confidenceLevel: 0.7216666666666667
        data: "913101156073309979"
        text: "913101156073309979"
        keyword: ""
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        data:
          example: "913101156073309979"
          title: data
          type: string
        keyword:
          example: ""
          title: keyword
          type: string
        text:
          example: "913101156073309979"
          title: text
          type: string
      title: fapiaoMerchantTaxId
      type: object
    geoNames:
      items:
        $ref: '#/components/schemas/Model8'
      title: geoNames
      type: array
    grossAmount:
      example:
        data: 15.83
        text: "15,83"
      properties:
        data:
          example: 15.83
          title: data
          type: number
        text:
          example: "15,83"
          title: text
          type: string
      title: grossAmount
      type: object
    headers:
      description: Custom http headers can be set to forward to the target URL.
      properties:
        x-custom-key:
          title: x-custom-key
          type: string
      title: headers
      type: object
    invoiceNumber:
      example:
        confidenceLevel: 0.7216666666666667
        data: "123456"
        text: "123456"
        keyword: Invoice number
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        data:
          example: "123456"
          title: data
          type: string
        keyword:
          example: Invoice number
          title: keyword
          type: string
        text:
          example: "123456"
          title: text
          type: string
      title: invoiceNumber
      type: object
    itemsCount:
      example:
        confidenceLevel: 0.7216666666666667
        data: 11.0
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        data:
          example: 11.0
          title: data
          type: number
      title: itemsCount
      type: object
    jsonPayload:
      properties:
        contentType:
          example: image/jpeg
          title: contentType
          type: string
        extractTime:
          default: false
          description: "Set true to return time if found on the receipt. Otherwise,\
            \ the time is always set to 12:00:00.000."
          example: false
          title: extractTime
          type: boolean
        filename:
          example: example.jpg
          title: filename
          type: string
        ignoreMerchantName:
          description: Ignore this merchant name if detected on the receipt. Use this
            field to avoid detecting the customer name as the merchant name.
          title: ignoreMerchantName
          type: string
        image:
          example: 
          title: image
          type: string
        incognito:
          default: false
          description: Set true to avoid saving the receipt in storage
          example: false
          title: incognito
          type: boolean
        ipAddress:
          description: IP Address of the end user
          example: 32.4.2.223
          title: ipAddress
          type: string
          x-format:
            ip:
              cidr: forbidden
              version:
              - ipv4
              - ipv6
        language:
          description: "Set language as a hint. Leave empty for auto detect. Supported\
            \ languages: , en, es, fr, jp, he, iw, et, lv, lt, fi, el, zh "
          enum:
          - en
          - es
          - fr
          - jp
          - he
          - iw
          - et
          - lv
          - lt
          - fi
          - el
          - zh
          title: language
          type: string
          x-constraint:
            length: 2
        near:
          description: "A geo location to search for merchant. Typically in the format\
            \ of city, state, country."
          example: "Kalamazoo, MI, USA"
          title: near
          type: string
        referenceId:
          description: Tag a request with a unique reference ID for feedback and training
            purposes
          maxLength: 50
          title: referenceId
          type: string
        refresh:
          default: false
          description: Set true to force re-process image transcription if the receipt
            is already in storage
          example: false
          title: refresh
          type: boolean
        subAccountId:
          description: Tag a request with sub-account ID for billing purposes
          maxLength: 50
          title: subAccountId
          type: string
      required:
      - contentType
      - filename
      - image
      title: jsonPayload
      type: object
    lineAmounts:
      items:
        type: string
      title: lineAmounts
      type: array
    list:
      description: An array of merchant names to match
      example:
      - AB Electric
      items:
        type: string
      title: list
      type: array
    list1:
      description: An array of product codes to match
      example:
      - MAF-01010101
      items:
        type: string
      title: list1
      type: array
    location:
      type: object
    masterCategory:
      example:
        confidenceLevel: 0.7216666666666667
        regions:
        - - x: 437
            "y": 787
          - x: 499
            "y": 788
          - x: 499
            "y": 808
          - x: 437
            "y": 807
        data: entertainment
        index: 7.061401241503109
        text: text
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        data:
          example: entertainment
          title: data
          type: string
        index:
          title: index
          type: number
        regions:
          example:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          items:
            $ref: '#/components/schemas/Model2'
          title: regions
          type: array
        text:
          title: text
          type: string
      title: masterCategory
      type: object
    match:
      example:
        confidenceLevel: 0.7216666666666667
        regions:
        - - x: 437
            "y": 787
          - x: 499
            "y": 788
          - x: 499
            "y": 808
          - x: 437
            "y": 807
        data: LIKELY
        index: 10.0
        text: WRIGLEY
        keyword: WRIGLEY
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        data:
          description: LIKELY or UNLIKELY
          enum:
          - LIKELY
          - UNLIKELY
          example: LIKELY
          title: data
          type: string
        index:
          example: 10.0
          title: index
          type: number
        keyword:
          example: WRIGLEY
          title: keyword
          type: string
        regions:
          example:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          items:
            $ref: '#/components/schemas/Model2'
          title: regions
          type: array
        text:
          example: WRIGLEY
          title: text
          type: string
      title: match
      type: object
    merchantAddress:
      example:
        confidenceLevel: 0.7216666666666667
        data: "2 Tapora St, Auckland, 1010, New Zealand"
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        data:
          example: "2 Tapora St, Auckland, 1010, New Zealand"
          title: data
          type: string
      title: merchantAddress
      type: object
    merchantAddress1:
      example:
        confidenceLevel: 0.7216666666666667
        regions:
        - - x: 437
            "y": 787
          - x: 499
            "y": 788
          - x: 499
            "y": 808
          - x: 437
            "y": 807
        data: "2 Tapora St, Auckland, 1010, New Zealand"
        index: 2.0
        text: 22DEC'16
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        data:
          example: "2 Tapora St, Auckland, 1010, New Zealand"
          title: data
          type: string
        index:
          example: 2.0
          title: index
          type: number
        regions:
          example:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          items:
            $ref: '#/components/schemas/Model2'
          title: regions
          type: array
        text:
          example: 22DEC'16
          title: text
          type: string
      title: merchantAddress1
      type: object
    merchantCity:
      example:
        confidenceLevel: 0.7216666666666667
        data: Auckland
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        data:
          example: Auckland
          title: data
          type: string
      title: merchantCity
      type: object
    merchantCity1:
      example:
        confidenceLevel: 0.7216666666666667
        regions:
        - - x: 437
            "y": 787
          - x: 499
            "y": 788
          - x: 499
            "y": 808
          - x: 437
            "y": 807
        data: Auckland
        index: 2.0
        text: text
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        data:
          example: Auckland
          title: data
          type: string
        index:
          example: 2.0
          title: index
          type: number
        regions:
          example:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          items:
            $ref: '#/components/schemas/Model2'
          title: regions
          type: array
        text:
          title: text
          type: string
      title: merchantCity1
      type: object
    merchantCountryCode:
      example:
        confidenceLevel: 0.7216666666666667
        data: NZ
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        data:
          example: NZ
          title: data
          type: string
      title: merchantCountryCode
      type: object
    merchantCountryCode1:
      example:
        confidenceLevel: 0.7216666666666667
        regions:
        - - x: 437
            "y": 787
          - x: 499
            "y": 788
          - x: 499
            "y": 808
          - x: 437
            "y": 807
        data: NZ
        index: 2.0
        text: Auckland
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        data:
          example: NZ
          title: data
          type: string
        index:
          example: 2.0
          title: index
          type: number
        regions:
          example:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          items:
            $ref: '#/components/schemas/Model2'
          title: regions
          type: array
        text:
          example: Auckland
          title: text
          type: string
      title: merchantCountryCode1
      type: object
    merchantName:
      example:
        confidenceLevel: 0.7216666666666667
        data: Adina Apartment Hotel Auckland Britomart
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        data:
          example: Adina Apartment Hotel Auckland Britomart
          title: data
          type: string
      title: merchantName
      type: object
    merchantName1:
      example:
        confidenceLevel: 0.7216666666666667
        regions:
        - - x: 437
            "y": 787
          - x: 499
            "y": 788
          - x: 499
            "y": 808
          - x: 437
            "y": 807
        data: Adina Apartment Hotel Auckland Britomart
        index: 2.0
        text: 22DEC'16
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        data:
          example: Adina Apartment Hotel Auckland Britomart
          title: data
          type: string
        index:
          example: 2.0
          title: index
          type: number
        regions:
          example:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          items:
            $ref: '#/components/schemas/Model2'
          title: regions
          type: array
        text:
          example: 22DEC'16
          title: text
          type: string
      title: merchantName1
      type: object
    merchantNameAddPayload:
      properties:
        merchantName:
          example: Walmart
          title: merchantName
          type: string
      required:
      - merchantName
      title: merchantNameAddPayload
      type: object
    merchantNames:
      example:
        skip: false
        list:
        - AB Electric
        returnFromTheList: false
      properties:
        list:
          description: An array of merchant names to match
          example:
          - AB Electric
          items:
            type: string
          title: list
          type: array
        returnFromTheList:
          default: false
          title: returnFromTheList
          type: boolean
        skip:
          default: false
          title: skip
          type: boolean
      title: merchantNames
      type: object
    merchantPostalCode:
      example:
        confidenceLevel: 0.7216666666666667
        data: "5001"
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        data:
          example: "5001"
          title: data
          type: string
      title: merchantPostalCode
      type: object
    merchantPostalCode1:
      example:
        confidenceLevel: 0.7216666666666667
        regions:
        - - x: 437
            "y": 787
          - x: 499
            "y": 788
          - x: 499
            "y": 808
          - x: 437
            "y": 807
        data: "1010"
        index: 2.0
        text: "Auckland, 1010"
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        data:
          example: "1010"
          title: data
          type: string
        index:
          example: 2.0
          title: index
          type: number
        regions:
          example:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          items:
            $ref: '#/components/schemas/Model2'
          title: regions
          type: array
        text:
          example: "Auckland, 1010"
          title: text
          type: string
      title: merchantPostalCode1
      type: object
    merchantState:
      example:
        confidenceLevel: 0.7216666666666667
        regions:
        - - x: 437
            "y": 787
          - x: 499
            "y": 788
          - x: 499
            "y": 808
          - x: 437
            "y": 807
        data: Auckland
        index: 2.0
        text: Auckland
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        data:
          example: Auckland
          title: data
          type: string
        index:
          example: 2.0
          title: index
          type: number
        regions:
          example:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          items:
            $ref: '#/components/schemas/Model2'
          title: regions
          type: array
        text:
          example: Auckland
          title: text
          type: string
      title: merchantState
      type: object
    merchantTypes:
      example:
        confidenceLevel: 0.7216666666666667
        data:
        - restaurant
        - food
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        data:
          example:
          - restaurant
          - food
          items:
            type: string
          title: data
          type: array
      title: merchantTypes
      type: object
    merchantTypes1:
      example:
        confidenceLevel: 0.7216666666666667
        regions:
        - - x: 437
            "y": 787
          - x: 499
            "y": 788
          - x: 499
            "y": 808
          - x: 437
            "y": 807
        data:
        - restaurant
        - food
        index: 2.0
        text: 22DEC'16
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        data:
          example:
          - restaurant
          - food
          items:
            type: string
          title: data
          type: array
        index:
          example: 2.0
          title: index
          type: number
        regions:
          example:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          items:
            $ref: '#/components/schemas/Model2'
          title: regions
          type: array
        text:
          example: 22DEC'16
          title: text
          type: string
      title: merchantTypes1
      type: object
    merchantVerification:
      example:
        confidenceLevel: 0.7216666666666667
        regions:
        - - x: 437
            "y": 787
          - x: 499
            "y": 788
          - x: 499
            "y": 808
          - x: 437
            "y": 807
        data:
          countryCode: IE
          vatNo: 950###8N
          vies:
            valid: true
            address: "1 Someplace street, Ireland"
            countryCode: IE
            name: Merchant Name
            error: IE
            vatNumber: 950###8N
          verificationId: IE950###8N
        index: 3.0
        text: "VAT no: IE 95###8N"
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        data:
          $ref: '#/components/schemas/data3'
        index:
          example: 3.0
          title: index
          type: number
        regions:
          example:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          items:
            $ref: '#/components/schemas/Model2'
          title: regions
          type: array
        text:
          example: "VAT no: IE 95###8N"
          title: text
          type: string
      title: merchantVerification
      type: object
    multiTaxLineItems:
      items:
        $ref: '#/components/schemas/Model7'
      title: multiTaxLineItems
      type: array
    name:
      example:
        regions:
        - - x: 437
            "y": 787
          - x: 499
            "y": 788
          - x: 499
            "y": 808
          - x: 437
            "y": 807
        data: Infini
        text: Infini
      properties:
        data:
          example: Infini
          title: data
          type: string
        regions:
          example:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          items:
            $ref: '#/components/schemas/Model2'
          title: regions
          type: array
        text:
          example: Infini
          title: text
          type: string
      title: name
      type: object
    names:
      description: An array of product names to match
      example:
      - Apple
      - Banana
      items:
        type: string
      title: names
      type: array
    netAmount:
      example:
        data: 15.01
        text: "15,01"
      properties:
        data:
          example: 15.01
          title: data
          type: number
        text:
          example: "15,01"
          title: text
          type: string
      title: netAmount
      type: object
    paymentType:
      example:
        confidenceLevel: 0.7216666666666667
        regions:
        - - x: 437
            "y": 787
          - x: 499
            "y": 788
          - x: 499
            "y": 808
          - x: 437
            "y": 807
        data: mastercard
        index: 2.0
        text: 22DEC'16
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        data:
          example: mastercard
          title: data
          type: string
        index:
          example: 2.0
          title: index
          type: number
        regions:
          example:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          items:
            $ref: '#/components/schemas/Model2'
          title: regions
          type: array
        text:
          example: 22DEC'16
          title: text
          type: string
      title: paymentType
      type: object
    productCodes:
      example:
        skip: false
        list:
        - MAF-01010101
      properties:
        list:
          description: An array of product codes to match
          example:
          - MAF-01010101
          items:
            type: string
          title: list1
          type: array
        skip:
          default: false
          title: skip
          type: boolean
      title: productCodes
      type: object
    productLineItems:
      items:
        $ref: '#/components/schemas/Model6'
      title: productLineItems
      type: array
    productLineItems1:
      description: "A range of product name, price, quantity for validation"
      example:
        names:
        - Apple
        - Banana
        quantity:
          min: 0.0
          max: 100.0
        totalPrice:
          min: 0.0
          max: 100.0
        skip: false
      properties:
        names:
          description: An array of product names to match
          example:
          - Apple
          - Banana
          items:
            type: string
          title: names
          type: array
        quantity:
          $ref: '#/components/schemas/totalPrice1'
        skip:
          default: false
          title: skip
          type: boolean
        totalPrice:
          $ref: '#/components/schemas/totalPrice1'
      title: productLineItems1
      type: object
    productName:
      example:
        confidenceLevel: 0.7216666666666667
        text: 19 crimes
        keyword: CDIGI_19_crimes
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        keyword:
          example: CDIGI_19_crimes
          title: keyword
          type: string
        text:
          example: 19 crimes
          title: text
          type: string
      title: productName
      type: object
    qrCodeData:
      example:
        confidenceLevel: 0.7216666666666667
        data: "01,10,031001900211,15004826,109.72,20190617,11467310187259010073,908E"
        text: "01,10,031001900211,15004826,109.72,20190617,11467310187259010073,908E"
        keyword: ""
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        data:
          example: "01,10,031001900211,15004826,109.72,20190617,11467310187259010073,908E"
          title: data
          type: string
        keyword:
          example: ""
          title: keyword
          type: string
        text:
          example: "01,10,031001900211,15004826,109.72,20190617,11467310187259010073,908E"
          title: text
          type: string
      title: qrCodeData
      type: object
    quantity:
      example:
        data: 2.0
        text: qty 2 @ ...
      properties:
        data:
          example: 2.0
          title: data
          type: number
        text:
          example: qty 2 @ ...
          title: text
          type: string
      title: quantity
      type: object
    quantity1:
      example:
        regions:
        - - x: 437
            "y": 787
          - x: 499
            "y": 788
          - x: 499
            "y": 808
          - x: 437
            "y": 807
        data: 2.0
        text: qty 2 @ ...
      properties:
        data:
          example: 2.0
          title: data
          type: number
        regions:
          example:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          items:
            $ref: '#/components/schemas/Model2'
          title: regions
          type: array
        text:
          example: qty 2 @ ...
          title: text
          type: string
      title: quantity1
      type: object
    receiptFeedbackAddPayload:
      properties:
        currencyCode:
          example: NZD
          title: currencyCode
          type: string
        date:
          example: 2016-12-22T12:00:00Z
          format: date-time
          title: date
          type: string
        masterCategory:
          example: Hotel
          title: masterCategory
          type: string
        merchantName:
          example: Walmart
          title: merchantName
          type: string
        referenceId:
          example: unique_reference_id
          title: referenceId
          type: string
        taxAmount:
          example: 3.04
          title: taxAmount
          type: number
        totalAmount:
          example: 23.3
          title: totalAmount
          type: number
      required:
      - referenceId
      title: receiptFeedbackAddPayload
      type: object
    receiptMatchResult:
      example:
        date:
          confidenceLevel: 0.7216666666666667
          regions:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          data: 2016-12-22T12:00:00Z
          index: 2.0
          text: 22DEC'16
        confidenceLevel: 0.7216666666666667
        match:
          confidenceLevel: 0.7216666666666667
          regions:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          data: LIKELY
          index: 10.0
          text: WRIGLEY
          keyword: WRIGLEY
        error: error
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        date:
          $ref: '#/components/schemas/date'
        error:
          title: error
          type: string
        match:
          $ref: '#/components/schemas/match'
      title: receiptMatchResult
      type: object
    receiptNumber:
      example:
        confidenceLevel: 0.7216666666666667
        regions:
        - - x: 437
            "y": 787
          - x: 499
            "y": 788
          - x: 499
            "y": 808
          - x: 437
            "y": 807
        data: 11/220371
        index: 3.0
        text: "ReceiptNumber: 11/220371"
        keyword: ReceiptNumber
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        data:
          example: 11/220371
          title: data
          type: string
        index:
          example: 3.0
          title: index
          type: number
        keyword:
          example: ReceiptNumber
          title: keyword
          type: string
        regions:
          example:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          items:
            $ref: '#/components/schemas/Model2'
          title: regions
          type: array
        text:
          example: "ReceiptNumber: 11/220371"
          title: text
          type: string
      title: receiptNumber
      type: object
    receiptResult:
      example:
        date:
          confidenceLevel: 0.7216666666666667
          data: 2016-12-22T12:00:00Z
        totalAmount:
          confidenceLevel: 0.7216666666666667
          data: 23.3
        confidenceLevel: 0.7216666666666667
        merchantCity:
          confidenceLevel: 0.7216666666666667
          data: Auckland
        merchantCountryCode:
          confidenceLevel: 0.7216666666666667
          data: NZ
        merchantTypes:
          confidenceLevel: 0.7216666666666667
          data:
          - restaurant
          - food
        merchantPostalCode:
          confidenceLevel: 0.7216666666666667
          data: "5001"
        merchantAddress:
          confidenceLevel: 0.7216666666666667
          data: "2 Tapora St, Auckland, 1010, New Zealand"
        error: error
        taxAmount:
          confidenceLevel: 0.7216666666666667
          data: 3.04
        merchantState:
          confidenceLevel: 0.7216666666666667
          data: Auckland
        merchantName:
          confidenceLevel: 0.7216666666666667
          data: Adina Apartment Hotel Auckland Britomart
      properties:
        confidenceLevel:
          description: Overall confidence level
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        date:
          $ref: '#/components/schemas/date1'
        error:
          title: error
          type: string
        merchantAddress:
          $ref: '#/components/schemas/merchantAddress'
        merchantCity:
          $ref: '#/components/schemas/merchantCity'
        merchantCountryCode:
          $ref: '#/components/schemas/merchantCountryCode'
        merchantName:
          $ref: '#/components/schemas/merchantName'
        merchantPostalCode:
          $ref: '#/components/schemas/merchantPostalCode'
        merchantState:
          $ref: '#/components/schemas/merchantCity'
        merchantTypes:
          $ref: '#/components/schemas/merchantTypes'
        taxAmount:
          $ref: '#/components/schemas/taxAmount'
        totalAmount:
          $ref: '#/components/schemas/totalAmount'
      title: receiptResult
      type: object
    receiptVerboseResult:
      example:
        date:
          confidenceLevel: 0.7216666666666667
          regions:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          data: 2016-12-22T12:00:00Z
          index: 2.0
          text: 22DEC'16
        confidenceLevel: 0.7216666666666667
        merchantCity:
          confidenceLevel: 0.7216666666666667
          regions:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          data: Auckland
          index: 2.0
          text: text
        merchantCountryCode:
          confidenceLevel: 0.7216666666666667
          regions:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          data: NZ
          index: 2.0
          text: Auckland
        merchantTypes:
          confidenceLevel: 0.7216666666666667
          regions:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          data:
          - restaurant
          - food
          index: 2.0
          text: 22DEC'16
        lineAmounts:
        - lineAmounts
        - lineAmounts
        dueDate:
          confidenceLevel: 0.7216666666666667
          regions:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          data: 2000-01-23T04:56:07.000+00:00
          index: 2.0
          text: 22DEC'16
        numbers:
        - numbers
        - numbers
        error: error
        merchantState:
          confidenceLevel: 0.7216666666666667
          regions:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          data: Auckland
          index: 2.0
          text: Auckland
        itemsCount:
          confidenceLevel: 0.7216666666666667
          data: 11.0
        merchantName:
          confidenceLevel: 0.7216666666666667
          regions:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          data: Adina Apartment Hotel Auckland Britomart
          index: 2.0
          text: 22DEC'16
        paymentType:
          confidenceLevel: 0.7216666666666667
          regions:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          data: mastercard
          index: 2.0
          text: 22DEC'16
        elapsed: 24200.0
        totalAmount:
          confidenceLevel: 0.7216666666666667
          regions:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          data: 23.3
          index: 11.0
          text: "23.30"
          keyword: TOTAL
          currencyCode: NZD
        amounts:
        - amounts
        - amounts
        entities:
          expenseType:
            confidenceLevel: 0.7216666666666667
            regions:
            - - x: 437
                "y": 787
              - x: 499
                "y": 788
              - x: 499
                "y": 808
              - x: 437
                "y": 807
            data: restaurant
            index: 2.3021358869347655
            text: text
          multiTaxLineItems:
          - confidenceLevel: 0.7216666666666667
            regions:
            - - x: 437
                "y": 787
              - x: 499
                "y": 788
              - x: 499
                "y": 808
              - x: 437
                "y": 807
            data:
              taxRate:
                data: 0.055
                text: "5,50%"
              netAmount:
                data: 15.01
                text: "15,01"
              grossAmount:
                data: 15.83
                text: "15,83"
              taxAmount:
                data: 0.83
                text: "0,83"
              taxType:
                data: TVA
                text: TVA
            index: 20.0
            text: "TVA 5,50 15,01 0,83 15,83"
          - confidenceLevel: 0.7216666666666667
            regions:
            - - x: 437
                "y": 787
              - x: 499
                "y": 788
              - x: 499
                "y": 808
              - x: 437
                "y": 807
            data:
              taxRate:
                data: 0.055
                text: "5,50%"
              netAmount:
                data: 15.01
                text: "15,01"
              grossAmount:
                data: 15.83
                text: "15,83"
              taxAmount:
                data: 0.83
                text: "0,83"
              taxType:
                data: TVA
                text: TVA
            index: 20.0
            text: "TVA 5,50 15,01 0,83 15,83"
          qrCodeData:
            confidenceLevel: 0.7216666666666667
            data: "01,10,031001900211,15004826,109.72,20190617,11467310187259010073,908E"
            text: "01,10,031001900211,15004826,109.72,20190617,11467310187259010073,908E"
            keyword: ""
          IBAN:
            confidenceLevel: 0.7216666666666667
            data: "123456"
            text: "123456"
            keyword: IBAN
          geoNames:
          - confidenceLevel: 0.7216666666666667
            data: 3.0
            text: France
            keyword: France
          - confidenceLevel: 0.7216666666666667
            data: 3.0
            text: France
            keyword: France
          merchantVerification:
            confidenceLevel: 0.7216666666666667
            regions:
            - - x: 437
                "y": 787
              - x: 499
                "y": 788
              - x: 499
                "y": 808
              - x: 437
                "y": 807
            data:
              countryCode: IE
              vatNo: 950###8N
              vies:
                valid: true
                address: "1 Someplace street, Ireland"
                countryCode: IE
                name: Merchant Name
                error: IE
                vatNumber: 950###8N
              verificationId: IE950###8N
            index: 3.0
            text: "VAT no: IE 95###8N"
          productLineItems:
          - confidenceLevel: 0.7216666666666667
            regions:
            - - x: 437
                "y": 787
              - x: 499
                "y": 788
              - x: 499
                "y": 808
              - x: 437
                "y": 807
            data:
              unitPrice:
                regions:
                - - x: 437
                    "y": 787
                  - x: 499
                    "y": 788
                  - x: 499
                    "y": 808
                  - x: 437
                    "y": 807
                data: 48.0
                text: ' $48.00'
              quantity:
                regions:
                - - x: 437
                    "y": 787
                  - x: 499
                    "y": 788
                  - x: 499
                    "y": 808
                  - x: 437
                    "y": 807
                data: 2.0
                text: qty 2 @ ...
              totalPrice:
                regions:
                - - x: 437
                    "y": 787
                  - x: 499
                    "y": 788
                  - x: 499
                    "y": 808
                  - x: 437
                    "y": 807
                data: 96.0
                text: ' $96.00'
              name:
                regions:
                - - x: 437
                    "y": 787
                  - x: 499
                    "y": 788
                  - x: 499
                    "y": 808
                  - x: 437
                    "y": 807
                data: Infini
                text: Infini
            index: 20.0
            text: "TVA 5,50 15,01 0,83 15,83"
          - confidenceLevel: 0.7216666666666667
            regions:
            - - x: 437
                "y": 787
              - x: 499
                "y": 788
              - x: 499
                "y": 808
              - x: 437
                "y": 807
            data:
              unitPrice:
                regions:
                - - x: 437
                    "y": 787
                  - x: 499
                    "y": 788
                  - x: 499
                    "y": 808
                  - x: 437
                    "y": 807
                data: 48.0
                text: ' $48.00'
              quantity:
                regions:
                - - x: 437
                    "y": 787
                  - x: 499
                    "y": 788
                  - x: 499
                    "y": 808
                  - x: 437
                    "y": 807
                data: 2.0
                text: qty 2 @ ...
              totalPrice:
                regions:
                - - x: 437
                    "y": 787
                  - x: 499
                    "y": 788
                  - x: 499
                    "y": 808
                  - x: 437
                    "y": 807
                data: 96.0
                text: ' $96.00'
              name:
                regions:
                - - x: 437
                    "y": 787
                  - x: 499
                    "y": 788
                  - x: 499
                    "y": 808
                  - x: 437
                    "y": 807
                data: Infini
                text: Infini
            index: 20.0
            text: "TVA 5,50 15,01 0,83 15,83"
          ABN:
            confidenceLevel: 0.7216666666666667
            data: data
            text: text
            keyword: keyword
          fapiaoInvoiceCode:
            confidenceLevel: 0.7216666666666667
            data: "033001800104"
            text: "033001800104"
            keyword: ""
          wineListItems:
          - unitPrice:
              data: 26.99
              text: cab Sauvignon $26.99
            quantity:
              data: 2.0
              text: qty 2 @ ...
            wineVarietal:
              confidenceLevel: 0.7216666666666667
              text: cab Sauvignon
              keyword: cabernet_sauvignon
            productName:
              confidenceLevel: 0.7216666666666667
              text: 19 crimes
              keyword: CDIGI_19_crimes
          - unitPrice:
              data: 26.99
              text: cab Sauvignon $26.99
            quantity:
              data: 2.0
              text: qty 2 @ ...
            wineVarietal:
              confidenceLevel: 0.7216666666666667
              text: cab Sauvignon
              keyword: cabernet_sauvignon
            productName:
              confidenceLevel: 0.7216666666666667
              text: 19 crimes
              keyword: CDIGI_19_crimes
          masterCategory:
            confidenceLevel: 0.7216666666666667
            regions:
            - - x: 437
                "y": 787
              - x: 499
                "y": 788
              - x: 499
                "y": 808
              - x: 437
                "y": 807
            data: entertainment
            index: 7.061401241503109
            text: text
          bankingDetails:
            branchNumber:
              confidenceLevel: 0.7216666666666667
              regions:
              - - x: 437
                  "y": 787
                - x: 499
                  "y": 788
                - x: 499
                  "y": 808
                - x: 437
                  "y": 807
              data: "522106"
              index: 5.962133916683182
              text: 522-106
            recipient:
              confidenceLevel: 0.7216666666666667
              regions:
              - - x: 437
                  "y": 787
                - x: 499
                  "y": 788
                - x: 499
                  "y": 808
                - x: 437
                  "y": 807
              data: Jan Doe
              index: 5.637376656633329
              text: Jan Doe
            branchName:
              confidenceLevel: 0.7216666666666667
              regions:
              - - x: 437
                  "y": 787
                - x: 499
                  "y": 788
                - x: 499
                  "y": 808
                - x: 437
                  "y": 807
              data: CBD Branch
              index: 1.4658129805029452
              text: CBD Branch
            bankName:
              confidenceLevel: 0.7216666666666667
              regions:
              - - x: 437
                  "y": 787
                - x: 499
                  "y": 788
                - x: 499
                  "y": 808
                - x: 437
                  "y": 807
              data: ANZ New Zealand
              index: 6.027456183070403
              text: "ANZ New Zealand, 123 Rd, XXX City"
            accountNumber:
              confidenceLevel: 0.7216666666666667
              regions:
              - - x: 437
                  "y": 787
                - x: 499
                  "y": 788
                - x: 499
                  "y": 808
                - x: 437
                  "y": 807
              data: "90412099"
              index: 0.8008281904610115
              text: "Account Number: 20412096"
          invoiceNumber:
            confidenceLevel: 0.7216666666666667
            data: "123456"
            text: "123456"
            keyword: Invoice number
          excludeItems:
          - confidenceLevel: 0.7216666666666667
            data: 3.0
            text: 零系可樂
            keyword: coke
          - confidenceLevel: 0.7216666666666667
            data: 3.0
            text: 零系可樂
            keyword: coke
          fapiaoInvoice:
            confidenceLevel: 0.7216666666666667
            data: true
            text: 发票
            keyword: 发票
          fapiaoMerchantTaxId:
            confidenceLevel: 0.7216666666666667
            data: "913101156073309979"
            text: "913101156073309979"
            keyword: ""
          shoppingMallName:
            confidenceLevel: 0.7216666666666667
            regions:
            - - x: 437
                "y": 787
              - x: 499
                "y": 788
              - x: 499
                "y": 808
              - x: 437
                "y": 807
            data: Bass Hill Plaza
            index: 3.0
            text: Some Shop Name - Bass Hill
          belgiumVATNumbers:
          - confidenceLevel: 0.7216666666666667
            data: "0660914448"
            text: BE0660.914.448
            keyword: ""
          - confidenceLevel: 0.7216666666666667
            data: "0660914448"
            text: BE0660.914.448
            keyword: ""
          fapiaoInvoiceNumber:
            confidenceLevel: 0.7216666666666667
            data: "80227830"
            text: "80227830"
            keyword: ""
          receiptNumber:
            confidenceLevel: 0.7216666666666667
            regions:
            - - x: 437
                "y": 787
              - x: 499
                "y": 788
              - x: 499
                "y": 808
              - x: 437
                "y": 807
            data: 11/220371
            index: 3.0
            text: "ReceiptNumber: 11/220371"
            keyword: ReceiptNumber
        merchantPostalCode:
          confidenceLevel: 0.7216666666666667
          regions:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          data: "1010"
          index: 2.0
          text: "Auckland, 1010"
        merchantAddress:
          confidenceLevel: 0.7216666666666667
          regions:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          data: "2 Tapora St, Auckland, 1010, New Zealand"
          index: 2.0
          text: 22DEC'16
        location:
          city:
            geoname_id: 2207724
            names:
              en: Devonport
          continent:
            code: OC
            geoname_id: 6255151
            names:
              de: Ozeanien
              en: Oceania
              es: Oceanía
              fr: Océanie
              ja: オセアニア
              pt-BR: Oceania
              ru: Океания
              zh-CN: 大洋洲
          country:
            geoname_id: 2186224
            iso_code: NZ
            names:
              de: Neuseeland
              en: New Zealand
              es: Nueva Zelanda
              fr: Nouvelle-Zélande
              ja: ニュージーランド
              pt-BR: Nova Zelândia
              ru: Новая Зеландия
              zh-CN: 新西兰
          location:
            accuracy_radius: 500
            latitude: -36.8297
            longitude: 174.7994
            time_zone: Pacific/Auckland
          postal:
            code: "0624"
          registered_country:
            geoname_id: 2186224
            iso_code: NZ
            names:
              de: Neuseeland
              en: New Zealand
              es: Nueva Zelanda
              fr: Nouvelle-Zélande
              ja: ニュージーランド
              pt-BR: Nova Zelândia
              ru: Новая Зеландия
              zh-CN: 新西兰
          subdivisions:
          - geoname_id: 2193734
            iso_code: AUK
            names:
              de: Auckland
              en: Auckland
              es: Auckland
              fr: Auckland
              ja: オークランド
              pt-BR: Auckland
              ru: Окленд
        text:
          regions:
          - regions
          - regions
          text: |-
            Lorem ipsum
            beer isyum
        taxAmount:
          confidenceLevel: 0.7216666666666667
          regions:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          data: 3.04
          index: 7.0
          text: "3.04"
          keyword: GST
          currencyCode: NZD
      properties:
        amounts:
          items:
            type: string
          title: lineAmounts
          type: array
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        date:
          $ref: '#/components/schemas/date'
        dueDate:
          $ref: '#/components/schemas/dueDate'
        elapsed:
          example: 24200.0
          title: elapsed
          type: number
        entities:
          $ref: '#/components/schemas/entities'
        error:
          title: error
          type: string
        itemsCount:
          $ref: '#/components/schemas/itemsCount'
        lineAmounts:
          items:
            type: string
          title: lineAmounts
          type: array
        location:
          $ref: '#/components/schemas/LocationResult'
        merchantAddress:
          $ref: '#/components/schemas/merchantAddress1'
        merchantCity:
          $ref: '#/components/schemas/merchantCity1'
        merchantCountryCode:
          $ref: '#/components/schemas/merchantCountryCode1'
        merchantName:
          $ref: '#/components/schemas/merchantName1'
        merchantPostalCode:
          $ref: '#/components/schemas/merchantPostalCode1'
        merchantState:
          $ref: '#/components/schemas/merchantState'
        merchantTypes:
          $ref: '#/components/schemas/merchantTypes1'
        numbers:
          items:
            type: string
          title: lineAmounts
          type: array
        paymentType:
          $ref: '#/components/schemas/paymentType'
        taxAmount:
          $ref: '#/components/schemas/taxAmount1'
        text:
          $ref: '#/components/schemas/text'
        totalAmount:
          $ref: '#/components/schemas/totalAmount1'
      title: receiptVerboseResult
      type: object
    recipient:
      example:
        confidenceLevel: 0.7216666666666667
        regions:
        - - x: 437
            "y": 787
          - x: 499
            "y": 788
          - x: 499
            "y": 808
          - x: 437
            "y": 807
        data: Jan Doe
        index: 5.637376656633329
        text: Jan Doe
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        data:
          example: Jan Doe
          title: data
          type: string
        index:
          title: index
          type: number
        regions:
          example:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          items:
            $ref: '#/components/schemas/Model2'
          title: regions
          type: array
        text:
          example: Jan Doe
          title: text
          type: string
      title: recipient
      type: object
    regions:
      example:
      - - x: 437
          "y": 787
        - x: 499
          "y": 788
        - x: 499
          "y": 808
        - x: 437
          "y": 807
      items:
        $ref: '#/components/schemas/Model2'
      title: regions
      type: array
    shoppingMallName:
      example:
        confidenceLevel: 0.7216666666666667
        regions:
        - - x: 437
            "y": 787
          - x: 499
            "y": 788
          - x: 499
            "y": 808
          - x: 437
            "y": 807
        data: Bass Hill Plaza
        index: 3.0
        text: Some Shop Name - Bass Hill
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        data:
          example: Bass Hill Plaza
          title: data
          type: string
        index:
          example: 3.0
          title: index
          type: number
        regions:
          example:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          items:
            $ref: '#/components/schemas/Model2'
          title: regions
          type: array
        text:
          example: Some Shop Name - Bass Hill
          title: text
          type: string
      title: shoppingMallName
      type: object
    storagePayload:
      properties:
        contentType:
          example: image/jpeg
          title: contentType
          type: string
        extractTime:
          default: false
          description: "Set true to return time if found on the receipt. Otherwise,\
            \ the time is always set to 12:00:00.000."
          example: false
          title: extractTime
          type: boolean
        ignoreMerchantName:
          description: Ignore this merchant name if detected on the receipt. Use this
            field to avoid detecting the customer name as the merchant name.
          title: ignoreMerchantName
          type: string
        ipAddress:
          description: IP Address of the end user
          example: 32.4.2.223
          title: ipAddress
          type: string
          x-format:
            ip:
              cidr: forbidden
              version:
              - ipv4
              - ipv6
        language:
          description: "Set language as a hint. Leave empty for auto detect. Supported\
            \ languages: , en, es, fr, jp, he, iw, et, lv, lt, fi, el, zh "
          enum:
          - en
          - es
          - fr
          - jp
          - he
          - iw
          - et
          - lv
          - lt
          - fi
          - el
          - zh
          title: language
          type: string
          x-constraint:
            length: 2
        md5:
          description: MD5 hash of the receipt
          title: md5
          type: string
        near:
          description: "A geo location to search for merchant. Typically in the format\
            \ of city, state, country."
          example: "Kalamazoo, MI, USA"
          title: near
          type: string
        referenceId:
          description: Tag a request with a unique reference ID for feedback and training
            purposes
          maxLength: 50
          title: referenceId
          type: string
        refresh:
          default: false
          description: Refresh cache if exists
          example: false
          title: refresh
          type: boolean
        subAccountId:
          description: Tag a request with sub-account ID for billing purposes
          maxLength: 50
          title: subAccountId
          type: string
      required:
      - contentType
      - md5
      title: storagePayload
      type: object
    taxAmount:
      example:
        confidenceLevel: 0.7216666666666667
        data: 3.04
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        data:
          example: 3.04
          title: data
          type: number
      title: taxAmount
      type: object
    taxAmount1:
      example:
        confidenceLevel: 0.7216666666666667
        regions:
        - - x: 437
            "y": 787
          - x: 499
            "y": 788
          - x: 499
            "y": 808
          - x: 437
            "y": 807
        data: 3.04
        index: 7.0
        text: "3.04"
        keyword: GST
        currencyCode: NZD
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        currencyCode:
          example: NZD
          title: currencyCode
          type: string
        data:
          example: 3.04
          title: data
          type: number
        index:
          example: 7.0
          title: index
          type: number
        keyword:
          example: GST
          title: keyword
          type: string
        regions:
          example:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          items:
            $ref: '#/components/schemas/Model2'
          title: regions
          type: array
        text:
          example: "3.04"
          title: text
          type: string
      title: taxAmount1
      type: object
    taxAmount2:
      example:
        data: 0.83
        text: "0,83"
      properties:
        data:
          example: 0.83
          title: data
          type: number
        text:
          example: "0,83"
          title: text
          type: string
      title: taxAmount2
      type: object
    taxRate:
      example:
        data: 0.055
        text: "5,50%"
      properties:
        data:
          example: 0.055
          title: data
          type: number
        text:
          example: "5,50%"
          title: text
          type: string
      title: taxRate
      type: object
    taxType:
      example:
        data: TVA
        text: TVA
      properties:
        data:
          example: TVA
          title: data
          type: string
        text:
          example: TVA
          title: text
          type: string
      title: taxType
      type: object
    text:
      example:
        regions:
        - regions
        - regions
        text: |-
          Lorem ipsum
          beer isyum
      properties:
        regions:
          items:
            type: string
          title: lineAmounts
          type: array
        text:
          example: |-
            Lorem ipsum
            beer isyum
          title: text
          type: string
      title: text
      type: object
    totalAmount:
      example:
        confidenceLevel: 0.7216666666666667
        data: 23.3
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        data:
          example: 23.3
          title: data
          type: number
      title: totalAmount
      type: object
    totalAmount1:
      example:
        confidenceLevel: 0.7216666666666667
        regions:
        - - x: 437
            "y": 787
          - x: 499
            "y": 788
          - x: 499
            "y": 808
          - x: 437
            "y": 807
        data: 23.3
        index: 11.0
        text: "23.30"
        keyword: TOTAL
        currencyCode: NZD
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        currencyCode:
          example: NZD
          title: currencyCode
          type: string
        data:
          example: 23.3
          title: data
          type: number
        index:
          example: 11.0
          title: index
          type: number
        keyword:
          example: TOTAL
          title: keyword
          type: string
        regions:
          example:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          items:
            $ref: '#/components/schemas/Model2'
          title: regions
          type: array
        text:
          example: "23.30"
          title: text
          type: string
      title: totalAmount1
      type: object
    totalPrice:
      example:
        regions:
        - - x: 437
            "y": 787
          - x: 499
            "y": 788
          - x: 499
            "y": 808
          - x: 437
            "y": 807
        data: 96.0
        text: ' $96.00'
      properties:
        data:
          example: 96.0
          title: data
          type: number
        regions:
          example:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          items:
            $ref: '#/components/schemas/Model2'
          title: regions
          type: array
        text:
          example: ' $96.00'
          title: text
          type: string
      title: totalPrice
      type: object
    totalPrice1:
      example:
        min: 0.0
        max: 100.0
      properties:
        max:
          example: 100.0
          title: max
          type: number
        min:
          example: 0.0
          title: min
          type: number
      required:
      - max
      - min
      title: totalPrice1
      type: object
    unitPrice:
      example:
        data: 26.99
        text: cab Sauvignon $26.99
      properties:
        data:
          example: 26.99
          title: data
          type: number
        text:
          example: cab Sauvignon $26.99
          title: text
          type: string
      title: unitPrice
      type: object
    unitPrice1:
      example:
        regions:
        - - x: 437
            "y": 787
          - x: 499
            "y": 788
          - x: 499
            "y": 808
          - x: 437
            "y": 807
        data: 48.0
        text: ' $48.00'
      properties:
        data:
          example: 48.0
          title: data
          type: number
        regions:
          example:
          - - x: 437
              "y": 787
            - x: 499
              "y": 788
            - x: 499
              "y": 808
            - x: 437
              "y": 807
          items:
            $ref: '#/components/schemas/Model2'
          title: regions
          type: array
        text:
          example: ' $48.00'
          title: text
          type: string
      title: unitPrice1
      type: object
    urlPayload:
      properties:
        extractTime:
          default: false
          description: "Set true to return time if found on the receipt. Otherwise,\
            \ the time is always set to 12:00:00.000."
          example: false
          title: extractTime
          type: boolean
        headers:
          $ref: '#/components/schemas/headers'
        ignoreMerchantName:
          description: Ignore this merchant name if detected on the receipt. Use this
            field to avoid detecting the customer name as the merchant name.
          title: ignoreMerchantName
          type: string
        incognito:
          default: false
          description: Set true to avoid saving the receipt in storage
          example: false
          title: incognito
          type: boolean
        ipAddress:
          description: IP Address of the end user
          example: 32.4.2.223
          title: ipAddress
          type: string
          x-format:
            ip:
              cidr: forbidden
              version:
              - ipv4
              - ipv6
        language:
          description: "Set language as a hint. Leave empty for auto detect. Supported\
            \ languages: , en, es, fr, jp, he, iw, et, lv, lt, fi, el, zh "
          enum:
          - en
          - es
          - fr
          - jp
          - he
          - iw
          - et
          - lv
          - lt
          - fi
          - el
          - zh
          title: language
          type: string
          x-constraint:
            length: 2
        near:
          description: "A geo location to search for merchant. Typically in the format\
            \ of city, state, country."
          example: "Kalamazoo, MI, USA"
          title: near
          type: string
        referenceId:
          description: Tag a request with a unique reference ID for feedback and training
            purposes
          maxLength: 50
          title: referenceId
          type: string
        refresh:
          default: false
          description: Set true to force re-process image transcription if the receipt
            is already in storage
          example: false
          title: refresh
          type: boolean
        subAccountId:
          description: Tag a request with sub-account ID for billing purposes
          maxLength: 50
          title: subAccountId
          type: string
        url:
          description: The target URL that contains a receipt file. Only https protocol
            is accepted.
          example: https://www.taggun.io/api/receipt/v1/benchmark/download/be17cfba5acae69032b7856fd89f4286
          title: url
          type: string
          x-format:
            uri: true
      required:
      - url
      title: urlPayload
      type: object
    vies:
      example:
        valid: true
        address: "1 Someplace street, Ireland"
        countryCode: IE
        name: Merchant Name
        error: IE
        vatNumber: 950###8N
      properties:
        address:
          example: "1 Someplace street, Ireland"
          title: address
          type: string
        countryCode:
          example: IE
          title: countryCode
          type: string
        error:
          example: IE
          title: error
          type: string
        name:
          example: Merchant Name
          title: name
          type: string
        valid:
          title: valid
          type: boolean
        vatNumber:
          example: 950###8N
          title: vatNumber
          type: string
      title: vies
      type: object
    wineListItems:
      items:
        $ref: '#/components/schemas/Model5'
      title: wineListItems
      type: array
    wineVarietal:
      example:
        confidenceLevel: 0.7216666666666667
        text: cab Sauvignon
        keyword: cabernet_sauvignon
      properties:
        confidenceLevel:
          example: 0.7216666666666667
          title: confidenceLevel
          type: number
        keyword:
          example: cabernet_sauvignon
          title: keyword
          type: string
        text:
          example: cab Sauvignon
          title: text
          type: string
      title: wineVarietal
      type: object
    postApiReceiptV1MatchFile_request:
      properties:
        file:
          description: "file less than 20MB. Accepted file types: PDF, JPG, PNG, GIF"
          format: binary
          type: string
          x-meta:
            swaggerType: file
        refresh:
          default: false
          description: Set true to force re-process image transcription if the receipt
            is already in storage
          type: boolean
        incognito:
          default: false
          description: Set true to avoid saving the receipt in storage
          type: boolean
        ipAddress:
          description: IP Address of the end user
          type: string
        primaryKeywords:
          description: An array of primary keywords to match
          items:
            type: string
          type: array
        secondaryKeywords:
          description: An array of secondary keywords to match (lower confidence level
            than primaryKeywords)
          items:
            type: string
          type: array
        stopWords:
          description: An array of stop words that negate the result to be UNLIKELY
          items:
            type: string
          type: array
        language:
          description: "Set language as a hint. Leave empty for auto detect. Supported\
            \ languages: , en, es, fr, jp, he, iw, et, lv, lt, fi, el, zh "
          enum:
          - en
          - es
          - fr
          - jp
          - he
          - iw
          - et
          - lv
          - lt
          - fi
          - el
          - zh
          type: string
          x-constraint:
            length: 2
      type: object
    postApiReceiptV1SimpleFile_request:
      properties:
        file:
          description: "file less than 20MB. Accepted file types: PDF, JPG, PNG, GIF,\
            \ HEIC"
          format: binary
          type: string
          x-meta:
            swaggerType: file
        refresh:
          default: false
          description: Set true to force re-process image transcription if the receipt
            is already in storage
          type: boolean
        incognito:
          default: false
          description: Set true to avoid saving the receipt in storage
          type: boolean
        ipAddress:
          description: IP Address of the end user
          type: string
          x-format:
            ip:
              cidr: forbidden
              version:
              - ipv4
              - ipv6
        near:
          description: "A geo location to search for merchant. Typically in the format\
            \ of city, state, country."
          type: string
        ignoreMerchantName:
          description: Ignore this merchant name if detected on the receipt. Use this
            field to avoid detecting the customer name as the merchant name.
          type: string
        language:
          description: "Set language as a hint. Leave empty for auto detect. Supported\
            \ languages: , en, es, fr, jp, he, iw, et, lv, lt, fi, el, zh "
          enum:
          - en
          - es
          - fr
          - jp
          - he
          - iw
          - et
          - lv
          - lt
          - fi
          - el
          - zh
          type: string
          x-constraint:
            length: 2
        extractTime:
          default: false
          description: "Set true to return time if found on the receipt. Otherwise,\
            \ the time is always set to 12:00:00.000."
          type: boolean
        subAccountId:
          description: Tag a request with sub-account ID for billing purposes
          maxLength: 50
          type: string
        referenceId:
          description: Tag a request with a unique reference ID for feedback and training
            purposes
          maxLength: 50
          type: string
      type: object
    postApiValidationV1CampaignFile_request:
      properties:
        file:
          description: "file less than 20MB. Accepted file types: PDF, JPG, PNG, GIF,\
            \ HEIC"
          format: binary
          type: string
          x-meta:
            swaggerType: file
        incognito:
          default: false
          description: Set true to avoid saving the receipt in storage
          type: boolean
        ipAddress:
          description: IP Address of the end user
          type: string
          x-format:
            ip:
              cidr: forbidden
              version:
              - ipv4
              - ipv6
        near:
          description: "A geo location to search for merchant. Typically in the format\
            \ of city, state, country."
          type: string
        campaignId:
          description: The ID of the campaign to validate the receipt
          maxLength: 50
          type: string
        referenceId:
          description: Tag a request with a unique reference ID for feedback and training
            purposes
          maxLength: 50
          type: string
      required:
      - campaignId
      type: object
    postApiValidationV1CampaignProductvalidationFile_request:
      properties:
        file:
          description: "file less than 20MB. Accepted file types: PDF, JPG, PNG, GIF,\
            \ HEIC"
          format: binary
          type: string
          x-meta:
            swaggerType: file
        productVerificationNumber:
          description: The number of the product to validate the receipt
          maxLength: 50
          type: string
        incognito:
          default: false
          description: Set true to avoid saving the receipt in storage
          type: boolean
        subAccountId:
          description: Tag a request with sub-account ID for billing purposes
          maxLength: 50
          type: string
        referenceId:
          description: Tag a request with a unique reference ID for feedback and training
            purposes
          maxLength: 50
          type: string
      required:
      - productVerificationNumber
      type: object
x-original-swagger-version: "2.0"
