/**
 * brainbi
 * Welcome to the official API of the brainbi platform. Using this API you can freely integrate our analytics platform with any other solution.  Please refer to the following documentation and in case of any issues, please contact us at service@brainbi.net.  Please note: for this API you will use your email and password from the brainbi.net platform to gather a Bearer Token for any API calls (use Login and get token). Once you are finished with your calls, please do a logout to remove your token and keep your account safe (use logout).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* Products service.
* @module api/ProductsApi
* @version 1.0.0
*/
export default class ProductsApi {

    /**
    * Constructs a new ProductsApi. 
    * @alias module:api/ProductsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the betaScrapeProductCopy operation.
     * @callback module:api/ProductsApi~betaScrapeProductCopyCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * [BETA] Scrape Product Copy
     * To update a product, please use the listed attributes listed underneath. 
     * @param {Object} opts Optional parameters
     * @param {String} [url] 
     * @param {module:api/ProductsApi~betaScrapeProductCopyCallback} callback The callback function, accepting three arguments: error, data, response
     */
    betaScrapeProductCopy(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'url': opts['url']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/octet-stream'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/analyze/pricing', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the products operation.
     * @callback module:api/ProductsApi~productsCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Products
     * This resource lists all products that are currently saved in you account.
     * @param {Object} opts Optional parameters
     * @param {String} [] 
     * @param {module:api/ProductsApi~productsCallback} callback The callback function, accepting three arguments: error, data, response
     */
    products(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        '': opts['']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/products', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the products1 operation.
     * @callback module:api/ProductsApi~products1Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Products
     * Products
     * @param {Object} opts Optional parameters
     * @param {String} [] 
     * @param {module:api/ProductsApi~products1Callback} callback The callback function, accepting three arguments: error, data, response
     */
    products1(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        '': opts['']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/octet-stream'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/products/1137', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
