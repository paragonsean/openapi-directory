/**
 * brainbi
 * Welcome to the official API of the brainbi platform. Using this API you can freely integrate our analytics platform with any other solution.  Please refer to the following documentation and in case of any issues, please contact us at service@brainbi.net.  Please note: for this API you will use your email and password from the brainbi.net platform to gather a Bearer Token for any API calls (use Login and get token). Once you are finished with your calls, please do a logout to remove your token and keep your account safe (use logout).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import CustomersApi from './api/CustomersApi';
import DefaultApi from './api/DefaultApi';
import OrdersApi from './api/OrdersApi';
import PricingRulesApi from './api/PricingRulesApi';
import ProductsApi from './api/ProductsApi';
import SEOApi from './api/SEOApi';


/**
* Welcome to the official API of the brainbi platform. Using this API you can freely integrate our analytics platform with any other solution.  Please refer to the following documentation and in case of any issues, please contact us at service@brainbi.net.  Please note: for this API you will use your email and password from the brainbi.net platform to gather a Bearer Token for any API calls (use Login and get token). Once you are finished with your calls, please do a logout to remove your token and keep your account safe (use logout)..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var Brainbi = require('index'); // See note below*.
* var xxxSvc = new Brainbi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new Brainbi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new Brainbi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new Brainbi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
    * The CustomersApi service constructor.
    * @property {module:api/CustomersApi}
    */
    CustomersApi,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi,

    /**
    * The OrdersApi service constructor.
    * @property {module:api/OrdersApi}
    */
    OrdersApi,

    /**
    * The PricingRulesApi service constructor.
    * @property {module:api/PricingRulesApi}
    */
    PricingRulesApi,

    /**
    * The ProductsApi service constructor.
    * @property {module:api/ProductsApi}
    */
    ProductsApi,

    /**
    * The SEOApi service constructor.
    * @property {module:api/SEOApi}
    */
    SEOApi
};
