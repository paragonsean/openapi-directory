/**
 * Platform API
 * The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@ably.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOccupancy.h
 *
 * An Occupancy instance indicating the occupancy of a channel. For events indicating regional activity of a channel this indicates activity in that region, not global activity.
 */

#ifndef OAIOccupancy_H
#define OAIOccupancy_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIOccupancy : public OAIObject {
public:
    OAIOccupancy();
    OAIOccupancy(QString json);
    ~OAIOccupancy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getPresenceConnections() const;
    void setPresenceConnections(const qint32 &presence_connections);
    bool is_presence_connections_Set() const;
    bool is_presence_connections_Valid() const;

    qint32 getPresenceMembers() const;
    void setPresenceMembers(const qint32 &presence_members);
    bool is_presence_members_Set() const;
    bool is_presence_members_Valid() const;

    qint32 getPresenceSubscribers() const;
    void setPresenceSubscribers(const qint32 &presence_subscribers);
    bool is_presence_subscribers_Set() const;
    bool is_presence_subscribers_Valid() const;

    qint32 getPublishers() const;
    void setPublishers(const qint32 &publishers);
    bool is_publishers_Set() const;
    bool is_publishers_Valid() const;

    qint32 getSubscribers() const;
    void setSubscribers(const qint32 &subscribers);
    bool is_subscribers_Set() const;
    bool is_subscribers_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_presence_connections;
    bool m_presence_connections_isSet;
    bool m_presence_connections_isValid;

    qint32 m_presence_members;
    bool m_presence_members_isSet;
    bool m_presence_members_isValid;

    qint32 m_presence_subscribers;
    bool m_presence_subscribers_isSet;
    bool m_presence_subscribers_isValid;

    qint32 m_publishers;
    bool m_publishers_isSet;
    bool m_publishers_isValid;

    qint32 m_subscribers;
    bool m_subscribers_isSet;
    bool m_subscribers_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOccupancy)

#endif // OAIOccupancy_H
