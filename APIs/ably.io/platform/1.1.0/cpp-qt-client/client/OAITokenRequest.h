/**
 * Platform API
 * The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@ably.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITokenRequest.h
 *
 * 
 */

#ifndef OAITokenRequest_H
#define OAITokenRequest_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITokenRequest : public OAIObject {
public:
    OAITokenRequest();
    OAITokenRequest(QString json);
    ~OAITokenRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIObject getCapability() const;
    void setCapability(const OAIObject &capability);
    bool is_capability_Set() const;
    bool is_capability_Valid() const;

    QString getClientId() const;
    void setClientId(const QString &client_id);
    bool is_client_id_Set() const;
    bool is_client_id_Valid() const;

    QString getKeyName() const;
    void setKeyName(const QString &key_name);
    bool is_key_name_Set() const;
    bool is_key_name_Valid() const;

    QString getNonce() const;
    void setNonce(const QString &nonce);
    bool is_nonce_Set() const;
    bool is_nonce_Valid() const;

    qint32 getTimestamp() const;
    void setTimestamp(const qint32 &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIObject m_capability;
    bool m_capability_isSet;
    bool m_capability_isValid;

    QString m_client_id;
    bool m_client_id_isSet;
    bool m_client_id_isValid;

    QString m_key_name;
    bool m_key_name_isSet;
    bool m_key_name_isValid;

    QString m_nonce;
    bool m_nonce_isSet;
    bool m_nonce_isValid;

    qint32 m_timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITokenRequest)

#endif // OAITokenRequest_H
