/**
 * Platform API
 * The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@ably.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPush_fcm.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPush_fcm::OAIPush_fcm(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPush_fcm::OAIPush_fcm() {
    this->initializeModel();
}

OAIPush_fcm::~OAIPush_fcm() {}

void OAIPush_fcm::initializeModel() {

    m_notification_isSet = false;
    m_notification_isValid = false;
}

void OAIPush_fcm::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPush_fcm::fromJsonObject(QJsonObject json) {

    m_notification_isValid = ::OpenAPI::fromJsonValue(m_notification, json[QString("notification")]);
    m_notification_isSet = !json[QString("notification")].isNull() && m_notification_isValid;
}

QString OAIPush_fcm::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPush_fcm::asJsonObject() const {
    QJsonObject obj;
    if (m_notification.isSet()) {
        obj.insert(QString("notification"), ::OpenAPI::toJsonValue(m_notification));
    }
    return obj;
}

OAINotification OAIPush_fcm::getNotification() const {
    return m_notification;
}
void OAIPush_fcm::setNotification(const OAINotification &notification) {
    m_notification = notification;
    m_notification_isSet = true;
}

bool OAIPush_fcm::is_notification_Set() const{
    return m_notification_isSet;
}

bool OAIPush_fcm::is_notification_Valid() const{
    return m_notification_isValid;
}

bool OAIPush_fcm::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_notification.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPush_fcm::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
