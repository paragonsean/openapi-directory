/**
 * Platform API
 * The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@ably.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPush.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPush::OAIPush(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPush::OAIPush() {
    this->initializeModel();
}

OAIPush::~OAIPush() {}

void OAIPush::initializeModel() {

    m_apns_isSet = false;
    m_apns_isValid = false;

    m_data_isSet = false;
    m_data_isValid = false;

    m_fcm_isSet = false;
    m_fcm_isValid = false;

    m_notification_isSet = false;
    m_notification_isValid = false;

    m_web_isSet = false;
    m_web_isValid = false;
}

void OAIPush::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPush::fromJsonObject(QJsonObject json) {

    m_apns_isValid = ::OpenAPI::fromJsonValue(m_apns, json[QString("apns")]);
    m_apns_isSet = !json[QString("apns")].isNull() && m_apns_isValid;

    m_data_isValid = ::OpenAPI::fromJsonValue(m_data, json[QString("data")]);
    m_data_isSet = !json[QString("data")].isNull() && m_data_isValid;

    m_fcm_isValid = ::OpenAPI::fromJsonValue(m_fcm, json[QString("fcm")]);
    m_fcm_isSet = !json[QString("fcm")].isNull() && m_fcm_isValid;

    m_notification_isValid = ::OpenAPI::fromJsonValue(m_notification, json[QString("notification")]);
    m_notification_isSet = !json[QString("notification")].isNull() && m_notification_isValid;

    m_web_isValid = ::OpenAPI::fromJsonValue(m_web, json[QString("web")]);
    m_web_isSet = !json[QString("web")].isNull() && m_web_isValid;
}

QString OAIPush::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPush::asJsonObject() const {
    QJsonObject obj;
    if (m_apns.isSet()) {
        obj.insert(QString("apns"), ::OpenAPI::toJsonValue(m_apns));
    }
    if (m_data_isSet) {
        obj.insert(QString("data"), ::OpenAPI::toJsonValue(m_data));
    }
    if (m_fcm.isSet()) {
        obj.insert(QString("fcm"), ::OpenAPI::toJsonValue(m_fcm));
    }
    if (m_notification.isSet()) {
        obj.insert(QString("notification"), ::OpenAPI::toJsonValue(m_notification));
    }
    if (m_web.isSet()) {
        obj.insert(QString("web"), ::OpenAPI::toJsonValue(m_web));
    }
    return obj;
}

OAIPush_apns OAIPush::getApns() const {
    return m_apns;
}
void OAIPush::setApns(const OAIPush_apns &apns) {
    m_apns = apns;
    m_apns_isSet = true;
}

bool OAIPush::is_apns_Set() const{
    return m_apns_isSet;
}

bool OAIPush::is_apns_Valid() const{
    return m_apns_isValid;
}

QString OAIPush::getData() const {
    return m_data;
}
void OAIPush::setData(const QString &data) {
    m_data = data;
    m_data_isSet = true;
}

bool OAIPush::is_data_Set() const{
    return m_data_isSet;
}

bool OAIPush::is_data_Valid() const{
    return m_data_isValid;
}

OAIPush_fcm OAIPush::getFcm() const {
    return m_fcm;
}
void OAIPush::setFcm(const OAIPush_fcm &fcm) {
    m_fcm = fcm;
    m_fcm_isSet = true;
}

bool OAIPush::is_fcm_Set() const{
    return m_fcm_isSet;
}

bool OAIPush::is_fcm_Valid() const{
    return m_fcm_isValid;
}

OAINotification OAIPush::getNotification() const {
    return m_notification;
}
void OAIPush::setNotification(const OAINotification &notification) {
    m_notification = notification;
    m_notification_isSet = true;
}

bool OAIPush::is_notification_Set() const{
    return m_notification_isSet;
}

bool OAIPush::is_notification_Valid() const{
    return m_notification_isValid;
}

OAIPush_web OAIPush::getWeb() const {
    return m_web;
}
void OAIPush::setWeb(const OAIPush_web &web) {
    m_web = web;
    m_web_isSet = true;
}

bool OAIPush::is_web_Set() const{
    return m_web_isSet;
}

bool OAIPush::is_web_Valid() const{
    return m_web_isValid;
}

bool OAIPush::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_apns.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fcm.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_notification.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_web.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPush::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
