/**
 * Platform API
 * The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@ably.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRecipient.h
 *
 * Push recipient details for a device.
 */

#ifndef OAIRecipient_H
#define OAIRecipient_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRecipient : public OAIObject {
public:
    OAIRecipient();
    OAIRecipient(QString json);
    ~OAIRecipient() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClientId() const;
    void setClientId(const QString &client_id);
    bool is_client_id_Set() const;
    bool is_client_id_Valid() const;

    QString getDeviceId() const;
    void setDeviceId(const QString &device_id);
    bool is_device_id_Set() const;
    bool is_device_id_Valid() const;

    QString getDeviceToken() const;
    void setDeviceToken(const QString &device_token);
    bool is_device_token_Set() const;
    bool is_device_token_Valid() const;

    QString getRegistrationToken() const;
    void setRegistrationToken(const QString &registration_token);
    bool is_registration_token_Set() const;
    bool is_registration_token_Valid() const;

    QString getTransportType() const;
    void setTransportType(const QString &transport_type);
    bool is_transport_type_Set() const;
    bool is_transport_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_client_id;
    bool m_client_id_isSet;
    bool m_client_id_isValid;

    QString m_device_id;
    bool m_device_id_isSet;
    bool m_device_id_isValid;

    QString m_device_token;
    bool m_device_token_isSet;
    bool m_device_token_isValid;

    QString m_registration_token;
    bool m_registration_token_isSet;
    bool m_registration_token_isValid;

    QString m_transport_type;
    bool m_transport_type_isSet;
    bool m_transport_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRecipient)

#endif // OAIRecipient_H
