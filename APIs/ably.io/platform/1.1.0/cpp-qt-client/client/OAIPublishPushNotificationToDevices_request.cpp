/**
 * Platform API
 * The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@ably.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPublishPushNotificationToDevices_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPublishPushNotificationToDevices_request::OAIPublishPushNotificationToDevices_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPublishPushNotificationToDevices_request::OAIPublishPushNotificationToDevices_request() {
    this->initializeModel();
}

OAIPublishPushNotificationToDevices_request::~OAIPublishPushNotificationToDevices_request() {}

void OAIPublishPushNotificationToDevices_request::initializeModel() {

    m_push_isSet = false;
    m_push_isValid = false;

    m_recipient_isSet = false;
    m_recipient_isValid = false;
}

void OAIPublishPushNotificationToDevices_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPublishPushNotificationToDevices_request::fromJsonObject(QJsonObject json) {

    m_push_isValid = ::OpenAPI::fromJsonValue(m_push, json[QString("push")]);
    m_push_isSet = !json[QString("push")].isNull() && m_push_isValid;

    m_recipient_isValid = ::OpenAPI::fromJsonValue(m_recipient, json[QString("recipient")]);
    m_recipient_isSet = !json[QString("recipient")].isNull() && m_recipient_isValid;
}

QString OAIPublishPushNotificationToDevices_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPublishPushNotificationToDevices_request::asJsonObject() const {
    QJsonObject obj;
    if (m_push.isSet()) {
        obj.insert(QString("push"), ::OpenAPI::toJsonValue(m_push));
    }
    if (m_recipient.isSet()) {
        obj.insert(QString("recipient"), ::OpenAPI::toJsonValue(m_recipient));
    }
    return obj;
}

OAIPush OAIPublishPushNotificationToDevices_request::getPush() const {
    return m_push;
}
void OAIPublishPushNotificationToDevices_request::setPush(const OAIPush &push) {
    m_push = push;
    m_push_isSet = true;
}

bool OAIPublishPushNotificationToDevices_request::is_push_Set() const{
    return m_push_isSet;
}

bool OAIPublishPushNotificationToDevices_request::is_push_Valid() const{
    return m_push_isValid;
}

OAIRecipient OAIPublishPushNotificationToDevices_request::getRecipient() const {
    return m_recipient;
}
void OAIPublishPushNotificationToDevices_request::setRecipient(const OAIRecipient &recipient) {
    m_recipient = recipient;
    m_recipient_isSet = true;
}

bool OAIPublishPushNotificationToDevices_request::is_recipient_Set() const{
    return m_recipient_isSet;
}

bool OAIPublishPushNotificationToDevices_request::is_recipient_Valid() const{
    return m_recipient_isValid;
}

bool OAIPublishPushNotificationToDevices_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_push.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_recipient.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPublishPushNotificationToDevices_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_recipient_isValid && true;
}

} // namespace OpenAPI
