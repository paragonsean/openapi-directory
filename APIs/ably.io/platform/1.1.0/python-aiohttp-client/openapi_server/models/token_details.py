# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TokenDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, capability: str=None, expires: int=None, issued: int=None, key_name: str=None, token: str=None):
        """TokenDetails - a model defined in OpenAPI

        :param capability: The capability of this TokenDetails.
        :param expires: The expires of this TokenDetails.
        :param issued: The issued of this TokenDetails.
        :param key_name: The key_name of this TokenDetails.
        :param token: The token of this TokenDetails.
        """
        self.openapi_types = {
            'capability': str,
            'expires': int,
            'issued': int,
            'key_name': str,
            'token': str
        }

        self.attribute_map = {
            'capability': 'capability',
            'expires': 'expires',
            'issued': 'issued',
            'key_name': 'keyName',
            'token': 'token'
        }

        self._capability = capability
        self._expires = expires
        self._issued = issued
        self._key_name = key_name
        self._token = token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TokenDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TokenDetails of this TokenDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def capability(self):
        """Gets the capability of this TokenDetails.

        Regular expression representation of the capabilities of the token.

        :return: The capability of this TokenDetails.
        :rtype: str
        """
        return self._capability

    @capability.setter
    def capability(self, capability):
        """Sets the capability of this TokenDetails.

        Regular expression representation of the capabilities of the token.

        :param capability: The capability of this TokenDetails.
        :type capability: str
        """

        self._capability = capability

    @property
    def expires(self):
        """Gets the expires of this TokenDetails.

        Timestamp of token expiration.

        :return: The expires of this TokenDetails.
        :rtype: int
        """
        return self._expires

    @expires.setter
    def expires(self, expires):
        """Sets the expires of this TokenDetails.

        Timestamp of token expiration.

        :param expires: The expires of this TokenDetails.
        :type expires: int
        """

        self._expires = expires

    @property
    def issued(self):
        """Gets the issued of this TokenDetails.

        Timestamp of token creation.

        :return: The issued of this TokenDetails.
        :rtype: int
        """
        return self._issued

    @issued.setter
    def issued(self, issued):
        """Sets the issued of this TokenDetails.

        Timestamp of token creation.

        :param issued: The issued of this TokenDetails.
        :type issued: int
        """

        self._issued = issued

    @property
    def key_name(self):
        """Gets the key_name of this TokenDetails.

        Name of the key used to create the token

        :return: The key_name of this TokenDetails.
        :rtype: str
        """
        return self._key_name

    @key_name.setter
    def key_name(self, key_name):
        """Sets the key_name of this TokenDetails.

        Name of the key used to create the token

        :param key_name: The key_name of this TokenDetails.
        :type key_name: str
        """

        self._key_name = key_name

    @property
    def token(self):
        """Gets the token of this TokenDetails.

        The Ably Token.

        :return: The token of this TokenDetails.
        :rtype: str
        """
        return self._token

    @token.setter
    def token(self, token):
        """Sets the token of this TokenDetails.

        The Ably Token.

        :param token: The token of this TokenDetails.
        :type token: str
        """

        self._token = token
