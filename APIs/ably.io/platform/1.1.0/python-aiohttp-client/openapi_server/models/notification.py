# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Notification(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, body: str=None, collapse_key: str=None, icon: str=None, sound: str=None, title: str=None):
        """Notification - a model defined in OpenAPI

        :param body: The body of this Notification.
        :param collapse_key: The collapse_key of this Notification.
        :param icon: The icon of this Notification.
        :param sound: The sound of this Notification.
        :param title: The title of this Notification.
        """
        self.openapi_types = {
            'body': str,
            'collapse_key': str,
            'icon': str,
            'sound': str,
            'title': str
        }

        self.attribute_map = {
            'body': 'body',
            'collapse_key': 'collapseKey',
            'icon': 'icon',
            'sound': 'sound',
            'title': 'title'
        }

        self._body = body
        self._collapse_key = collapse_key
        self._icon = icon
        self._sound = sound
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Notification':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Notification of this Notification.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def body(self):
        """Gets the body of this Notification.

        Text below title on the expanded notification.

        :return: The body of this Notification.
        :rtype: str
        """
        return self._body

    @body.setter
    def body(self, body):
        """Sets the body of this Notification.

        Text below title on the expanded notification.

        :param body: The body of this Notification.
        :type body: str
        """

        self._body = body

    @property
    def collapse_key(self):
        """Gets the collapse_key of this Notification.

        Platform-specific, used to group notifications together.

        :return: The collapse_key of this Notification.
        :rtype: str
        """
        return self._collapse_key

    @collapse_key.setter
    def collapse_key(self, collapse_key):
        """Sets the collapse_key of this Notification.

        Platform-specific, used to group notifications together.

        :param collapse_key: The collapse_key of this Notification.
        :type collapse_key: str
        """

        self._collapse_key = collapse_key

    @property
    def icon(self):
        """Gets the icon of this Notification.

        Platform-specific icon for the notification.

        :return: The icon of this Notification.
        :rtype: str
        """
        return self._icon

    @icon.setter
    def icon(self, icon):
        """Sets the icon of this Notification.

        Platform-specific icon for the notification.

        :param icon: The icon of this Notification.
        :type icon: str
        """

        self._icon = icon

    @property
    def sound(self):
        """Gets the sound of this Notification.

        Platform-specific sound for the notification.

        :return: The sound of this Notification.
        :rtype: str
        """
        return self._sound

    @sound.setter
    def sound(self, sound):
        """Sets the sound of this Notification.

        Platform-specific sound for the notification.

        :param sound: The sound of this Notification.
        :type sound: str
        """

        self._sound = sound

    @property
    def title(self):
        """Gets the title of this Notification.

        Title to display at the notification.

        :return: The title of this Notification.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this Notification.

        Title to display at the notification.

        :param title: The title of this Notification.
        :type title: str
        """

        self._title = title
