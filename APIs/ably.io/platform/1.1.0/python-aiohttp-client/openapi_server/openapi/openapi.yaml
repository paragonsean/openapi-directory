openapi: 3.0.1
info:
  contact:
    email: support@ably.io
    name: Ably Support
    url: https://www.ably.io/contact
    x-twitter: ablyrealtime
  description: "The [REST API specification](https://www.ably.io/documentation/rest-api)\
    \ for Ably."
  title: Platform API
  version: 1.1.0
  x-apisguru-categories:
  - cloud
  x-logo:
    url: https://twitter.com/ablyrealtime/profile_image?size=original
  x-origin:
  - format: openapi
    url: https://raw.githubusercontent.com/ably/open-specs/main/definitions/platform-v1.yaml
    version: "3.0"
  x-providerName: ably.io
  x-serviceName: platform
servers:
- url: https://rest.ably.io
security:
- basicAuth: []
- bearerAuth: []
paths:
  /channels:
    get:
      description: Enumerate all active channels of the application
      operationId: get_metadata_of_all_channels
      parameters:
      - description: The version of the API you wish to use.
        explode: false
        in: header
        name: X-Ably-Version
        required: false
        schema:
          type: string
        style: simple
      - description: The response format you would like
        explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - json
          - jsonp
          - msgpack
          - html
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          type: integer
        style: form
      - description: Optionally limits the query to only those channels whose name
          starts with the given prefix
        explode: true
        in: query
        name: prefix
        required: false
        schema:
          type: string
        style: form
      - description: optionally specifies whether to return just channel names (by=id)
          or ChannelDetails (by=value)
        explode: true
        in: query
        name: by
        required: false
        schema:
          enum:
          - value
          - id
          type: string
        style: form
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getMetadataOfAllChannels_2XX_response'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/getMetadataOfAllChannels_2XX_response'
            text/html:
              schema:
                type: string
          description: OK
          headers:
            link:
              $ref: '#/components/headers/Link'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/Error'
            text/html:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
          headers:
            x-ably-errorcode:
              $ref: '#/components/headers/ErrorCode'
            x-ably-errormessage:
              $ref: '#/components/headers/ErrorMessage'
            x-ably-serverid:
              $ref: '#/components/headers/ServerId'
      summary: Enumerate all active channels of the application
      tags:
      - Status
      x-openapi-router-controller: openapi_server.controllers.status_controller
  /channels/{channel_id}:
    get:
      description: Get metadata of a channel
      operationId: get_metadata_of_channel
      parameters:
      - description: The version of the API you wish to use.
        explode: false
        in: header
        name: X-Ably-Version
        required: false
        schema:
          type: string
        style: simple
      - description: The response format you would like
        explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - json
          - jsonp
          - msgpack
          - html
          type: string
        style: form
      - description: "The [Channel's ID](https://www.ably.io/documentation/rest/channels)."
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelDetails'
          description: OK
          headers:
            x-ably-serverid:
              $ref: '#/components/headers/ServerId'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/Error'
            text/html:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
          headers:
            x-ably-errorcode:
              $ref: '#/components/headers/ErrorCode'
            x-ably-errormessage:
              $ref: '#/components/headers/ErrorMessage'
            x-ably-serverid:
              $ref: '#/components/headers/ServerId'
      summary: Get metadata of a channel
      tags:
      - Status
      x-openapi-router-controller: openapi_server.controllers.status_controller
  /channels/{channel_id}/messages:
    get:
      description: Get message history for a channel
      operationId: get_messages_by_channel
      parameters:
      - description: The version of the API you wish to use.
        explode: false
        in: header
        name: X-Ably-Version
        required: false
        schema:
          type: string
        style: simple
      - description: The response format you would like
        explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - json
          - jsonp
          - msgpack
          - html
          type: string
        style: form
      - description: "The [Channel's ID](https://www.ably.io/documentation/rest/channels)."
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: start
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: end
        required: false
        schema:
          default: now
          type: string
        style: form
      - explode: true
        in: query
        name: direction
        required: false
        schema:
          default: backwards
          enum:
          - forwards
          - backwards
          type: string
        style: form
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Message'
                type: array
            application/x-msgpack:
              schema:
                items:
                  $ref: '#/components/schemas/Message'
                type: array
            text/html:
              schema:
                type: string
          description: OK
          headers:
            link:
              $ref: '#/components/headers/Link'
            x-ably-serverid:
              $ref: '#/components/headers/ServerId'
        default:
          description: Error
          headers:
            x-ably-errorcode:
              $ref: '#/components/headers/ErrorCode'
            x-ably-errormessage:
              $ref: '#/components/headers/ErrorMessage'
            x-ably-serverid:
              $ref: '#/components/headers/ServerId'
      summary: Get message history for a channel
      tags:
      - History
      x-openapi-router-controller: openapi_server.controllers.history_controller
    post:
      description: Publish a message to the specified channel
      operationId: publish_messages_to_channel
      parameters:
      - description: The version of the API you wish to use.
        explode: false
        in: header
        name: X-Ably-Version
        required: false
        schema:
          type: string
        style: simple
      - description: The response format you would like
        explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - json
          - jsonp
          - msgpack
          - html
          type: string
        style: form
      - description: "The [Channel's ID](https://www.ably.io/documentation/rest/channels)."
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/Message'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Message'
        x-body-name: body
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/publishMessagesToChannel_2XX_response'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/publishMessagesToChannel_2XX_response'
            text/html:
              schema:
                $ref: '#/components/schemas/publishMessagesToChannel_2XX_response'
          description: OK
          headers:
            x-ably-serverid:
              $ref: '#/components/headers/ServerId'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/Error'
            text/html:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
          headers:
            x-ably-errorcode:
              $ref: '#/components/headers/ErrorCode'
            x-ably-errormessage:
              $ref: '#/components/headers/ErrorMessage'
            x-ably-serverid:
              $ref: '#/components/headers/ServerId'
      summary: Publish a message to a channel
      tags:
      - Publishing
      x-openapi-router-controller: openapi_server.controllers.publishing_controller
      x-codegen-request-body-name: body
  /channels/{channel_id}/presence:
    get:
      description: Get presence on a channel
      operationId: get_presence_of_channel
      parameters:
      - description: The version of the API you wish to use.
        explode: false
        in: header
        name: X-Ably-Version
        required: false
        schema:
          type: string
        style: simple
      - description: The response format you would like
        explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - json
          - jsonp
          - msgpack
          - html
          type: string
        style: form
      - description: "The [Channel's ID](https://www.ably.io/documentation/rest/channels)."
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: clientId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: connectionId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PresenceMessage'
                type: array
            application/x-msgpack:
              schema:
                items:
                  $ref: '#/components/schemas/PresenceMessage'
                type: array
            text/html:
              schema:
                type: string
          description: OK
          headers:
            link:
              $ref: '#/components/headers/Link'
            x-ably-serverid:
              $ref: '#/components/headers/ServerId'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/Error'
            text/html:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
          headers:
            x-ably-errorcode:
              $ref: '#/components/headers/ErrorCode'
            x-ably-errormessage:
              $ref: '#/components/headers/ErrorMessage'
            x-ably-serverid:
              $ref: '#/components/headers/ServerId'
      summary: Get presence of a channel
      tags:
      - Status
      x-openapi-router-controller: openapi_server.controllers.status_controller
  /channels/{channel_id}/presence/history:
    get:
      description: Get presence on a channel
      operationId: get_presence_history_of_channel
      parameters:
      - description: The version of the API you wish to use.
        explode: false
        in: header
        name: X-Ably-Version
        required: false
        schema:
          type: string
        style: simple
      - description: The response format you would like
        explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - json
          - jsonp
          - msgpack
          - html
          type: string
        style: form
      - description: "The [Channel's ID](https://www.ably.io/documentation/rest/channels)."
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: start
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: end
        required: false
        schema:
          default: now
          type: string
        style: form
      - explode: true
        in: query
        name: direction
        required: false
        schema:
          default: backwards
          enum:
          - forwards
          - backwards
          type: string
        style: form
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PresenceMessage'
                type: array
            application/x-msgpack:
              schema:
                items:
                  $ref: '#/components/schemas/PresenceMessage'
                type: array
            text/html:
              schema:
                type: string
          description: OK
          headers:
            link:
              $ref: '#/components/headers/Link'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/Error'
            text/html:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
          headers:
            x-ably-errorcode:
              $ref: '#/components/headers/ErrorCode'
            x-ably-errormessage:
              $ref: '#/components/headers/ErrorMessage'
            x-ably-serverid:
              $ref: '#/components/headers/ServerId'
      summary: Get presence history of a channel
      tags:
      - History
      x-openapi-router-controller: openapi_server.controllers.history_controller
  /keys/{keyName}/requestToken:
    post:
      description: "This is the means by which clients obtain access tokens to use\
        \ the service. You can see how to construct an Ably TokenRequest in the [Ably\
        \ TokenRequest spec](https://www.ably.io/documentation/rest-api/token-request-spec)\
        \ documentation, although we recommend you use an Ably SDK rather to create\
        \ a TokenRequest, as the construction of a TokenRequest is complex. The resulting\
        \ token response object contains the token properties as defined in Ably TokenRequest\
        \ spec. Authentication is not required if using a Signed TokenRequest."
      operationId: request_access_token
      parameters:
      - description: The version of the API you wish to use.
        explode: false
        in: header
        name: X-Ably-Version
        required: false
        schema:
          type: string
        style: simple
      - description: The response format you would like
        explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - json
          - jsonp
          - msgpack
          - html
          type: string
        style: form
      - description: "The [key name](https://www.ably.io/documentation/rest-api/token-request-spec#api-key-format)\
          \ comprises of the app ID and key ID of an API key."
        explode: false
        in: path
        name: keyName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              capability:
                channel1:
                - publish
                - subscribe
                wildcard:channels:*:
                - publish
              keyName: YourKey.Name
              timestamp: "1559124196551"
            schema:
              $ref: '#/components/schemas/requestAccessToken_request'
        x-body-name: body
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenDetails'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/TokenDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/Error'
            text/html:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
          headers:
            x-ably-errorcode:
              $ref: '#/components/headers/ErrorCode'
            x-ably-errormessage:
              $ref: '#/components/headers/ErrorMessage'
            x-ably-serverid:
              $ref: '#/components/headers/ServerId'
      summary: Request an access token
      tags:
      - Authentication
      x-openapi-router-controller: openapi_server.controllers.authentication_controller
      x-codegen-request-body-name: body
  /push/channelSubscriptions:
    delete:
      description: Delete a device details object.
      operationId: delete_push_device_details
      parameters:
      - description: The version of the API you wish to use.
        explode: false
        in: header
        name: X-Ably-Version
        required: false
        schema:
          type: string
        style: simple
      - description: The response format you would like
        explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - json
          - jsonp
          - msgpack
          - html
          type: string
        style: form
      - description: Filter to restrict to subscriptions associated with that channel.
        explode: true
        in: query
        name: channel
        required: false
        schema:
          type: string
        style: form
      - description: "Must be set when clientId is empty, cannot be used with clientId."
        explode: true
        in: query
        name: deviceId
        required: false
        schema:
          type: string
        style: form
      - description: "Must be set when deviceId is empty, cannot be used with deviceId."
        explode: true
        in: query
        name: clientId
        required: false
        schema:
          type: string
        style: form
      responses:
        "2XX":
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/Error'
            text/html:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
          headers:
            x-ably-errorcode:
              $ref: '#/components/headers/ErrorCode'
            x-ably-errormessage:
              $ref: '#/components/headers/ErrorMessage'
            x-ably-serverid:
              $ref: '#/components/headers/ServerId'
      summary: Delete a registered device's update token
      tags:
      - Push
      x-openapi-router-controller: openapi_server.controllers.push_controller
    get:
      description: Get a list of push notification subscriptions to channels.
      operationId: get_push_subscriptions_on_channels
      parameters:
      - description: The version of the API you wish to use.
        explode: false
        in: header
        name: X-Ably-Version
        required: false
        schema:
          type: string
        style: simple
      - description: The response format you would like
        explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - json
          - jsonp
          - msgpack
          - html
          type: string
        style: form
      - description: Filter to restrict to subscriptions associated with that channel.
        explode: true
        in: query
        name: channel
        required: false
        schema:
          type: string
        style: form
      - description: Optional filter to restrict to devices associated with that deviceId.
          Cannot be used with clientId.
        explode: true
        in: query
        name: deviceId
        required: false
        schema:
          type: string
        style: form
      - description: Optional filter to restrict to devices associated with that clientId.
          Cannot be used with deviceId.
        explode: true
        in: query
        name: clientId
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 1000
          type: integer
        style: form
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/Error'
            text/html:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
          headers:
            x-ably-errorcode:
              $ref: '#/components/headers/ErrorCode'
            x-ably-errormessage:
              $ref: '#/components/headers/ErrorMessage'
            x-ably-serverid:
              $ref: '#/components/headers/ServerId'
      summary: List channel subscriptions
      tags:
      - Push
      x-openapi-router-controller: openapi_server.controllers.push_controller
    post:
      description: Subscribe either a single device or all devices associated with
        a client ID to receive push notifications from messages sent to a channel.
      operationId: subscribe_push_device_to_channel
      parameters:
      - description: The version of the API you wish to use.
        explode: false
        in: header
        name: X-Ably-Version
        required: false
        schema:
          type: string
        style: simple
      - description: The response format you would like
        explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - json
          - jsonp
          - msgpack
          - html
          type: string
        style: form
      requestBody:
        content:
          application/json:
            example:
              channel: my:channel
              clientId: myClientId
            schema:
              $ref: '#/components/schemas/subscribePushDeviceToChannel_request'
          application/x-msgpack:
            example:
              channel: my:channel
              clientId: myClientId
            schema:
              $ref: '#/components/schemas/subscribePushDeviceToChannel_request'
          application/x-www-form-urlencoded:
            example:
              channel: my:channel
              clientId: myClientId
            schema:
              $ref: '#/components/schemas/subscribePushDeviceToChannel_request'
        x-body-name: body
      responses:
        "2XX":
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/Error'
            text/html:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
          headers:
            x-ably-errorcode:
              $ref: '#/components/headers/ErrorCode'
            x-ably-errormessage:
              $ref: '#/components/headers/ErrorMessage'
            x-ably-serverid:
              $ref: '#/components/headers/ServerId'
      summary: Subscribe a device to a channel
      tags:
      - Push
      x-openapi-router-controller: openapi_server.controllers.push_controller
      x-codegen-request-body-name: body
  /push/channels:
    get:
      description: Returns a paginated response of channel names.
      operationId: get_channels_with_push_subscribers
      parameters:
      - description: The version of the API you wish to use.
        explode: false
        in: header
        name: X-Ably-Version
        required: false
        schema:
          type: string
        style: simple
      - description: The response format you would like
        explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - json
          - jsonp
          - msgpack
          - html
          type: string
        style: form
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
            application/x-msgpack:
              schema:
                items:
                  type: string
                type: array
            text/html:
              schema:
                items:
                  type: string
                type: array
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/Error'
            text/html:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
          headers:
            x-ably-errorcode:
              $ref: '#/components/headers/ErrorCode'
            x-ably-errormessage:
              $ref: '#/components/headers/ErrorMessage'
            x-ably-serverid:
              $ref: '#/components/headers/ServerId'
      summary: List all channels with at least one subscribed device
      tags:
      - Push
      x-openapi-router-controller: openapi_server.controllers.push_controller
  /push/deviceRegistrations:
    delete:
      description: Unregisters devices. All their subscriptions for receiving push
        notifications through channels will also be deleted.
      operationId: unregister_all_push_devices
      parameters:
      - description: The version of the API you wish to use.
        explode: false
        in: header
        name: X-Ably-Version
        required: false
        schema:
          type: string
        style: simple
      - description: The response format you would like
        explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - json
          - jsonp
          - msgpack
          - html
          type: string
        style: form
      - description: Optional filter to restrict to devices associated with that deviceId.
          Cannot be used with clientId.
        explode: true
        in: query
        name: deviceId
        required: false
        schema:
          type: string
        style: form
      - description: Optional filter to restrict to devices associated with that clientId.
          Cannot be used with deviceId.
        explode: true
        in: query
        name: clientId
        required: false
        schema:
          type: string
        style: form
      responses:
        "2XX":
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/Error'
            text/html:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
          headers:
            x-ably-errorcode:
              $ref: '#/components/headers/ErrorCode'
            x-ably-errormessage:
              $ref: '#/components/headers/ErrorMessage'
            x-ably-serverid:
              $ref: '#/components/headers/ServerId'
      summary: Unregister matching devices for push notifications
      tags:
      - Push
      x-openapi-router-controller: openapi_server.controllers.push_controller
    get:
      description: List of device details of devices registed for push notifications.
      operationId: get_registered_push_devices
      parameters:
      - description: The version of the API you wish to use.
        explode: false
        in: header
        name: X-Ably-Version
        required: false
        schema:
          type: string
        style: simple
      - description: The response format you would like
        explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - json
          - jsonp
          - msgpack
          - html
          type: string
        style: form
      - description: Optional filter to restrict to devices associated with that deviceId.
        explode: true
        in: query
        name: deviceId
        required: false
        schema:
          type: string
        style: form
      - description: Optional filter to restrict to devices associated with that clientId.
        explode: true
        in: query
        name: clientId
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 1000
          type: integer
        style: form
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceDetails'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/DeviceDetails'
            text/html:
              schema:
                $ref: '#/components/schemas/DeviceDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/Error'
            text/html:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
          headers:
            x-ably-errorcode:
              $ref: '#/components/headers/ErrorCode'
            x-ably-errormessage:
              $ref: '#/components/headers/ErrorMessage'
            x-ably-serverid:
              $ref: '#/components/headers/ServerId'
      summary: List devices registered for receiving push notifications
      tags:
      - Push
      x-openapi-router-controller: openapi_server.controllers.push_controller
    post:
      description: "Register a device’s details, including the information necessary\
        \ to deliver push notifications to it. Requires \"push-admin\" capability."
      operationId: register_push_device
      parameters:
      - description: The version of the API you wish to use.
        explode: false
        in: header
        name: X-Ably-Version
        required: false
        schema:
          type: string
        style: simple
      - description: The response format you would like
        explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - json
          - jsonp
          - msgpack
          - html
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceDetails'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/DeviceDetails'
        x-body-name: body
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceDetails'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/DeviceDetails'
            text/html:
              schema:
                $ref: '#/components/schemas/DeviceDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/Error'
            text/html:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
          headers:
            x-ably-errorcode:
              $ref: '#/components/headers/ErrorCode'
            x-ably-errormessage:
              $ref: '#/components/headers/ErrorMessage'
            x-ably-serverid:
              $ref: '#/components/headers/ServerId'
      summary: Register a device for receiving push notifications
      tags:
      - Push
      x-openapi-router-controller: openapi_server.controllers.push_controller
      x-codegen-request-body-name: body
  /push/deviceRegistrations/{device_id}:
    delete:
      description: Unregisters a single device by its device ID. All its subscriptions
        for receiving push notifications through channels will also be deleted.
      operationId: unregister_push_device
      parameters:
      - description: The version of the API you wish to use.
        explode: false
        in: header
        name: X-Ably-Version
        required: false
        schema:
          type: string
        style: simple
      - description: The response format you would like
        explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - json
          - jsonp
          - msgpack
          - html
          type: string
        style: form
      - description: Device's ID.
        explode: false
        in: path
        name: device_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/Error'
            text/html:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
          headers:
            x-ably-errorcode:
              $ref: '#/components/headers/ErrorCode'
            x-ably-errormessage:
              $ref: '#/components/headers/ErrorMessage'
            x-ably-serverid:
              $ref: '#/components/headers/ServerId'
      summary: Unregister a single device for push notifications
      tags:
      - Push
      x-openapi-router-controller: openapi_server.controllers.push_controller
    get:
      description: Get the full details of a device.
      operationId: get_push_device_details
      parameters:
      - description: The version of the API you wish to use.
        explode: false
        in: header
        name: X-Ably-Version
        required: false
        schema:
          type: string
        style: simple
      - description: The response format you would like
        explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - json
          - jsonp
          - msgpack
          - html
          type: string
        style: form
      - description: Device's ID.
        explode: false
        in: path
        name: device_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceDetails'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/DeviceDetails'
            text/html:
              schema:
                $ref: '#/components/schemas/DeviceDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/Error'
            text/html:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
          headers:
            x-ably-errorcode:
              $ref: '#/components/headers/ErrorCode'
            x-ably-errormessage:
              $ref: '#/components/headers/ErrorMessage'
            x-ably-serverid:
              $ref: '#/components/headers/ServerId'
      summary: Get a device registration
      tags:
      - Push
      x-openapi-router-controller: openapi_server.controllers.push_controller
    patch:
      description: "Specific attributes of an existing registration can be updated.\
        \ Only clientId, metadata and push.recipient are mutable."
      operationId: patch_push_device_details
      parameters:
      - description: The version of the API you wish to use.
        explode: false
        in: header
        name: X-Ably-Version
        required: false
        schema:
          type: string
        style: simple
      - description: The response format you would like
        explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - json
          - jsonp
          - msgpack
          - html
          type: string
        style: form
      - description: Device's ID.
        explode: false
        in: path
        name: device_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceDetails'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/DeviceDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeviceDetails'
        x-body-name: body
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceDetails'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/DeviceDetails'
            text/html:
              schema:
                $ref: '#/components/schemas/DeviceDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/Error'
            text/html:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
          headers:
            x-ably-errorcode:
              $ref: '#/components/headers/ErrorCode'
            x-ably-errormessage:
              $ref: '#/components/headers/ErrorMessage'
            x-ably-serverid:
              $ref: '#/components/headers/ServerId'
      summary: Update a device registration
      tags:
      - Push
      x-openapi-router-controller: openapi_server.controllers.push_controller
      x-codegen-request-body-name: body
    put:
      description: "Device registrations can be upserted (the existing registration\
        \ is replaced entirely) with a PUT operation. Only clientId, metadata and\
        \ push.recipient are mutable."
      operationId: put_push_device_details
      parameters:
      - description: The version of the API you wish to use.
        explode: false
        in: header
        name: X-Ably-Version
        required: false
        schema:
          type: string
        style: simple
      - description: The response format you would like
        explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - json
          - jsonp
          - msgpack
          - html
          type: string
        style: form
      - description: Device's ID.
        explode: false
        in: path
        name: device_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceDetails'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/DeviceDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeviceDetails'
        x-body-name: body
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceDetails'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/DeviceDetails'
            text/html:
              schema:
                $ref: '#/components/schemas/DeviceDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/Error'
            text/html:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
          headers:
            x-ably-errorcode:
              $ref: '#/components/headers/ErrorCode'
            x-ably-errormessage:
              $ref: '#/components/headers/ErrorMessage'
            x-ably-serverid:
              $ref: '#/components/headers/ServerId'
      summary: Update a device registration
      tags:
      - Push
      x-openapi-router-controller: openapi_server.controllers.push_controller
      x-codegen-request-body-name: body
  /push/deviceRegistrations/{device_id}/resetUpdateToken:
    get:
      description: Gets an updated device details object.
      operationId: update_push_device_details
      parameters:
      - description: The version of the API you wish to use.
        explode: false
        in: header
        name: X-Ably-Version
        required: false
        schema:
          type: string
        style: simple
      - description: The response format you would like
        explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - json
          - jsonp
          - msgpack
          - html
          type: string
        style: form
      - description: Device's ID.
        explode: false
        in: path
        name: device_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceDetails'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/DeviceDetails'
            text/html:
              schema:
                $ref: '#/components/schemas/DeviceDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/Error'
            text/html:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
          headers:
            x-ably-errorcode:
              $ref: '#/components/headers/ErrorCode'
            x-ably-errormessage:
              $ref: '#/components/headers/ErrorMessage'
            x-ably-serverid:
              $ref: '#/components/headers/ServerId'
      summary: Reset a registered device's update token
      tags:
      - Push
      x-openapi-router-controller: openapi_server.controllers.push_controller
  /push/publish:
    post:
      description: A convenience endpoint to deliver a push notification payload to
        a single device or set of devices identified by their client identifier.
      operationId: publish_push_notification_to_devices
      parameters:
      - description: The version of the API you wish to use.
        explode: false
        in: header
        name: X-Ably-Version
        required: false
        schema:
          type: string
        style: simple
      - description: The response format you would like
        explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - json
          - jsonp
          - msgpack
          - html
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/publishPushNotificationToDevices_request'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/publishPushNotificationToDevices_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/publishPushNotificationToDevices_request'
        x-body-name: body
      responses:
        "2XX":
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/Error'
            text/html:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
          headers:
            x-ably-errorcode:
              $ref: '#/components/headers/ErrorCode'
            x-ably-errormessage:
              $ref: '#/components/headers/ErrorMessage'
            x-ably-serverid:
              $ref: '#/components/headers/ServerId'
      summary: Publish a push notification to device(s)
      tags:
      - Push
      x-openapi-router-controller: openapi_server.controllers.push_controller
      x-codegen-request-body-name: body
  /stats:
    get:
      description: "The Ably system can be queried to obtain usage statistics for\
        \ a given application, and results are provided aggregated across all channels\
        \ in use in the application in the specified period. Stats may be used to\
        \ track usage against account quotas."
      operationId: get_stats
      parameters:
      - description: The version of the API you wish to use.
        explode: false
        in: header
        name: X-Ably-Version
        required: false
        schema:
          type: string
        style: simple
      - description: The response format you would like
        explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - json
          - jsonp
          - msgpack
          - html
          type: string
        style: form
      - explode: true
        in: query
        name: start
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: end
        required: false
        schema:
          default: now
          type: string
        style: form
      - explode: true
        in: query
        name: direction
        required: false
        schema:
          default: backwards
          enum:
          - forwards
          - backwards
          type: string
        style: form
      - description: Specifies the unit of aggregation in the returned results.
        explode: true
        in: query
        name: unit
        required: false
        schema:
          default: minute
          enum:
          - minute
          - hour
          - day
          - month
          type: string
        style: form
      responses:
        "2XX":
          content:
            application/json:
              schema:
                type: object
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/Error'
            text/html:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
          headers:
            x-ably-errorcode:
              $ref: '#/components/headers/ErrorCode'
            x-ably-errormessage:
              $ref: '#/components/headers/ErrorMessage'
            x-ably-serverid:
              $ref: '#/components/headers/ServerId'
      summary: Retrieve usage statistics for an application
      tags:
      - Stats
      x-openapi-router-controller: openapi_server.controllers.stats_controller
  /time:
    get:
      description: This returns the service time in milliseconds since the epoch.
      operationId: get_time
      parameters:
      - description: The version of the API you wish to use.
        explode: false
        in: header
        name: X-Ably-Version
        required: false
        schema:
          type: string
        style: simple
      - description: The response format you would like
        explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - json
          - jsonp
          - msgpack
          - html
          type: string
        style: form
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  type: integer
                type: array
            application/x-msgpack:
              schema:
                items:
                  type: integer
                type: array
            text/html:
              schema:
                type: string
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/Error'
            text/html:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
          headers:
            x-ably-errorcode:
              $ref: '#/components/headers/ErrorCode'
            x-ably-errormessage:
              $ref: '#/components/headers/ErrorMessage'
            x-ably-serverid:
              $ref: '#/components/headers/ServerId'
      security: []
      summary: Get the service time
      tags:
      - Stats
      x-openapi-router-controller: openapi_server.controllers.stats_controller
components:
  headers:
    ErrorCode:
      description: The error code.
      explode: false
      schema:
        type: integer
      style: simple
    ErrorMessage:
      description: The error message.
      explode: false
      schema:
        type: string
      style: simple
    Link:
      description: "Links to related resources, in the format defined by [RFC 5988](https://tools.ietf.org/html/rfc5988#section-5).\
        \ This will potentially include a link with relation type `next`, `first`,\
        \ and `current`, where appropiate."
      explode: false
      required: true
      schema:
        pattern: "(<(.*)?>; rel=\\\"(first|current|last)?\\\",)*(<(.*)?>; rel=\\\"\
          (first|current|last)?\\\")+"
        type: string
      style: simple
    ServerId:
      description: The ID for the server communicated with.
      explode: false
      required: true
      schema:
        type: string
      style: simple
  parameters:
    channelId:
      description: "The [Channel's ID](https://www.ably.io/documentation/rest/channels)."
      explode: false
      in: path
      name: channel_id
      required: true
      schema:
        type: string
      style: simple
    deviceId:
      description: Device's ID.
      explode: false
      in: path
      name: device_id
      required: true
      schema:
        type: string
      style: simple
    filterDirection:
      explode: true
      in: query
      name: direction
      required: false
      schema:
        default: backwards
        enum:
        - forwards
        - backwards
        type: string
      style: form
    filterEnd:
      explode: true
      in: query
      name: end
      required: false
      schema:
        default: now
        type: string
      style: form
    filterLimit:
      explode: true
      in: query
      name: limit
      required: false
      schema:
        type: integer
      style: form
    filterStart:
      explode: true
      in: query
      name: start
      required: false
      schema:
        type: string
      style: form
    key_name:
      description: "The [key name](https://www.ably.io/documentation/rest-api/token-request-spec#api-key-format)\
        \ comprises of the app ID and key ID of an API key."
      explode: false
      in: path
      name: keyName
      required: true
      schema:
        type: string
      style: simple
    responseFormat:
      description: The response format you would like
      explode: true
      in: query
      name: format
      required: false
      schema:
        enum:
        - json
        - jsonp
        - msgpack
        - html
        type: string
      style: form
    versionHeader:
      description: The version of the API you wish to use.
      explode: false
      in: header
      name: X-Ably-Version
      required: false
      schema:
        type: string
      style: simple
  responses:
    Error:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
        application/x-msgpack:
          schema:
            $ref: '#/components/schemas/Error'
        text/html:
          schema:
            $ref: '#/components/schemas/Error'
      description: Error
      headers:
        x-ably-errorcode:
          $ref: '#/components/headers/ErrorCode'
        x-ably-errormessage:
          $ref: '#/components/headers/ErrorMessage'
        x-ably-serverid:
          $ref: '#/components/headers/ServerId'
  schemas:
    ChannelDetails:
      example:
        isGlobalMaster: true
        region: region
        channelId: channelId
        status:
          occupancy:
            presenceMembers: 6
            presenceSubscribers: 1
            subscribers: 5
            publishers: 5
            presenceConnections: 0
          isActive: true
      properties:
        channelId:
          description: "The required name of the channel including any qualifier,\
            \ if any."
          title: channelId
          type: string
        isGlobalMaster:
          description: "In events relating to the activity of a channel in a specific\
            \ region, this optionally identifies whether or not that region is responsible\
            \ for global coordination of the channel."
          title: isGlobalMaster
          type: boolean
        region:
          description: "In events relating to the activity of a channel in a specific\
            \ region, this optionally identifies the region."
          title: region
          type: string
        status:
          $ref: '#/components/schemas/ChannelStatus'
      required:
      - channelId
      title: ChannelDetails
      type: object
    ChannelStatus:
      description: A ChannelStatus instance.
      example:
        occupancy:
          presenceMembers: 6
          presenceSubscribers: 1
          subscribers: 5
          publishers: 5
          presenceConnections: 0
        isActive: true
      properties:
        isActive:
          description: "A required boolean value indicating whether the channel that\
            \ is the subject of the event is active. For events indicating regional\
            \ activity of a channel this indicates activity in that region, not global\
            \ activity."
          title: isActive
          type: boolean
        occupancy:
          $ref: '#/components/schemas/Occupancy'
      required:
      - isActive
      title: ChannelStatus
      type: object
    DeviceDetails:
      example:
        deviceSecret: deviceSecret
        metadata: "{}"
        clientId: clientId
        formFactor: phone
        push.recipient:
          registrationToken: registrationToken
          clientId: clientId
          transportType: apns
          deviceId: deviceId
          deviceToken: deviceToken
        id: id
        push.state: Active
        platform: ios
      properties:
        clientId:
          description: Optional trusted client identifier for the device.
          title: clientId
          type: string
        deviceSecret:
          description: Secret value for the device.
          title: deviceSecret
          type: string
        formFactor:
          description: Form factor of the push device.
          enum:
          - phone
          - tablet
          - desktop
          - tv
          - watch
          - car
          - embedded
          title: formFactor
          type: string
        id:
          description: Unique identifier for the device generated by the device itself.
          title: id
          type: string
        metadata:
          description: Optional metadata object for this device. The metadata for
            a device may only be set by clients with push-admin privileges and will
            be used more extensively in the future with smart notifications.
          title: metadata
          type: object
        platform:
          description: Platform of the push device.
          enum:
          - ios
          - android
          title: platform
          type: string
        push.recipient:
          $ref: '#/components/schemas/Recipient'
        push.state:
          description: the current state of the push device.
          enum:
          - Active
          - Failing
          - Failed
          readOnly: true
          title: push.state
          type: string
      title: DeviceDetails
      type: object
    Error:
      description: Returned error from failed REST.
      example:
        code: 2
        href: href
        message: message
        serverId: serverId
        statusCode: 7
      properties:
        code:
          description: Error code.
          title: code
          type: integer
        href:
          description: Link to help with error.
          title: href
          type: string
        message:
          description: Message explaining the error's cause.
          title: message
          type: string
        serverId:
          description: Server ID with which error was encountered.
          title: serverId
          type: string
        statusCode:
          description: Status error code.
          title: statusCode
          type: integer
      title: Error
      type: object
    Extras:
      description: "Extras object. Currently only allows for [push](https://www.ably.io/documentation/general/push/publish#channel-broadcast-example)\
        \ extra."
      example:
        push:
          fcm:
            notification:
              collapseKey: collapseKey
              sound: sound
              icon: icon
              body: body
              title: title
          notification:
            collapseKey: collapseKey
            sound: sound
            icon: icon
            body: body
            title: title
          data: data
          web:
            notification:
              collapseKey: collapseKey
              sound: sound
              icon: icon
              body: body
              title: title
          apns:
            notification:
              collapseKey: collapseKey
              sound: sound
              icon: icon
              body: body
              title: title
      properties:
        push:
          $ref: '#/components/schemas/Push'
      title: Extras
      type: object
    Message:
      description: Message object.
      example:
        clientId: clientId
        data: data
        name: name
        connectionId: connectionId
        extras:
          push:
            fcm:
              notification:
                collapseKey: collapseKey
                sound: sound
                icon: icon
                body: body
                title: title
            notification:
              collapseKey: collapseKey
              sound: sound
              icon: icon
              body: body
              title: title
            data: data
            web:
              notification:
                collapseKey: collapseKey
                sound: sound
                icon: icon
                body: body
                title: title
            apns:
              notification:
                collapseKey: collapseKey
                sound: sound
                icon: icon
                body: body
                title: title
        id: id
        encoding: encoding
        timestamp: 0
      properties:
        clientId:
          description: "The [client ID](https://www.ably.io/documentation/core-features/authentication#identified-clients)\
            \ of the publisher of this message."
          title: clientId
          type: string
        connectionId:
          description: The connection ID of the publisher of this message.
          title: connectionId
          type: string
        data:
          description: "The string encoded payload, with the encoding specified below."
          title: data
          type: string
        encoding:
          description: "This will typically be empty as all messages received from\
            \ Ably are automatically decoded client-side using this value. However,\
            \ if the message encoding cannot be processed, this attribute will contain\
            \ the remaining transformations not applied to the data payload."
          title: encoding
          type: string
        extras:
          $ref: '#/components/schemas/Extras'
        id:
          description: "A Unique ID that can be specified by the publisher for [idempotent\
            \ publishing](https://www.ably.io/documentation/rest/messages#idempotent)."
          readOnly: true
          title: id
          type: string
        name:
          description: "The event name, if provided."
          title: name
          type: string
        timestamp:
          description: "Timestamp when the message was received by the Ably, as milliseconds\
            \ since the epoch."
          format: int64
          readOnly: true
          title: timestamp
          type: integer
      title: Message
      type: object
    Notification:
      example:
        collapseKey: collapseKey
        sound: sound
        icon: icon
        body: body
        title: title
      properties:
        body:
          description: Text below title on the expanded notification.
          title: body
          type: string
        collapseKey:
          description: "Platform-specific, used to group notifications together."
          title: collapseKey
          type: string
        icon:
          description: Platform-specific icon for the notification.
          title: icon
          type: string
        sound:
          description: Platform-specific sound for the notification.
          title: sound
          type: string
        title:
          description: Title to display at the notification.
          title: title
          type: string
      title: Notification
      type: object
    Occupancy:
      description: "An Occupancy instance indicating the occupancy of a channel. For\
        \ events indicating regional activity of a channel this indicates activity\
        \ in that region, not global activity."
      example:
        presenceMembers: 6
        presenceSubscribers: 1
        subscribers: 5
        publishers: 5
        presenceConnections: 0
      properties:
        presenceConnections:
          description: The number of connections that are authorised to enter members
            into the presence channel.
          title: presenceConnections
          type: integer
        presenceMembers:
          description: The number of members currently entered into the presence channel.
          title: presenceMembers
          type: integer
        presenceSubscribers:
          description: The number of connections that are authorised to subscribe
            to presence messages.
          title: presenceSubscribers
          type: integer
        publishers:
          description: The number of connections attached to the channel that are
            authorised to publish.
          title: publishers
          type: integer
        subscribers:
          description: The number of connections attached that are authorised to subscribe
            to messages.
          title: subscribers
          type: integer
      title: Occupancy
      type: object
    PresenceMessage:
      example:
        clientId: clientId
        data: data
        action: ABSENT
        connectionId: connectionId
        extras:
          push:
            fcm:
              notification:
                collapseKey: collapseKey
                sound: sound
                icon: icon
                body: body
                title: title
            notification:
              collapseKey: collapseKey
              sound: sound
              icon: icon
              body: body
              title: title
            data: data
            web:
              notification:
                collapseKey: collapseKey
                sound: sound
                icon: icon
                body: body
                title: title
            apns:
              notification:
                collapseKey: collapseKey
                sound: sound
                icon: icon
                body: body
                title: title
        id: id
        encoding: encoding
        timestamp: 0
      properties:
        action:
          description: The event signified by a PresenceMessage.
          enum:
          - ABSENT
          - PRESENT
          - ENTER
          - LEAVE
          - UPDATE
          readOnly: true
          title: action
          type: string
        clientId:
          description: The client ID of the publisher of this presence update.
          title: clientId
          type: string
        connectionId:
          description: The connection ID of the publisher of this presence update.
          title: connectionId
          type: string
        data:
          description: "The presence update payload, if provided."
          title: data
          type: string
        encoding:
          description: "This will typically be empty as all presence updates received\
            \ from Ably are automatically decoded client-side using this value. However,\
            \ if the message encoding cannot be processed, this attribute will contain\
            \ the remaining transformations not applied to the data payload."
          title: encoding
          type: string
        extras:
          $ref: '#/components/schemas/Extras'
        id:
          description: Unique ID assigned by Ably to this presence update.
          readOnly: true
          title: id
          type: string
        timestamp:
          description: "Timestamp when the presence update was received by Ably, as\
            \ milliseconds since the epoch."
          format: int64
          readOnly: true
          title: timestamp
          type: integer
      title: PresenceMessage
      type: object
    Push:
      example:
        fcm:
          notification:
            collapseKey: collapseKey
            sound: sound
            icon: icon
            body: body
            title: title
        notification:
          collapseKey: collapseKey
          sound: sound
          icon: icon
          body: body
          title: title
        data: data
        web:
          notification:
            collapseKey: collapseKey
            sound: sound
            icon: icon
            body: body
            title: title
        apns:
          notification:
            collapseKey: collapseKey
            sound: sound
            icon: icon
            body: body
            title: title
      properties:
        apns:
          $ref: '#/components/schemas/Push_apns'
        data:
          description: "Arbitrary [key-value string-to-string payload](https://www.ably.io/documentation/general/push/publish#channel-broadcast-example)."
          title: data
          type: string
        fcm:
          $ref: '#/components/schemas/Push_fcm'
        notification:
          $ref: '#/components/schemas/Notification'
        web:
          $ref: '#/components/schemas/Push_web'
      title: Push
      type: object
    Recipient:
      description: Push recipient details for a device.
      example:
        registrationToken: registrationToken
        clientId: clientId
        transportType: apns
        deviceId: deviceId
        deviceToken: deviceToken
      properties:
        clientId:
          description: Client ID of recipient
          title: clientId
          type: string
          writeOnly: true
        deviceId:
          description: Client ID of recipient
          title: deviceId
          type: string
          writeOnly: true
        deviceToken:
          description: "when using APNs, specifies the required device token."
          title: deviceToken
          type: string
        registrationToken:
          description: "when using GCM or FCM, specifies the required registration\
            \ token."
          title: registrationToken
          type: string
        transportType:
          description: Defines which push platform is being used.
          enum:
          - apns
          - fcm
          - gcm
          title: transportType
          type: string
      title: Recipient
      type: object
    SignedTokenRequest:
      allOf:
      - $ref: '#/components/schemas/TokenRequest'
      - properties:
          mac:
            description: "A signature, generated as an HMAC of each of the above components,\
              \ using the key secret value."
            type: string
        required:
        - mac
        type: object
      title: SignedTokenRequest
    TokenDetails:
      example:
        capability: capability
        expires: 0
        keyName: keyName
        issued: 6
        token: token
      properties:
        capability:
          description: Regular expression representation of the capabilities of the
            token.
          title: capability
          type: string
        expires:
          description: Timestamp of token expiration.
          title: expires
          type: integer
        issued:
          description: Timestamp of token creation.
          title: issued
          type: integer
        keyName:
          description: Name of the key used to create the token
          title: keyName
          type: string
        token:
          description: The Ably Token.
          title: token
          type: string
      title: TokenDetails
      type: object
    TokenRequest:
      properties:
        capability:
          description: "The [capabilities](https://www.ably.io/documentation/core-features/authentication#capabilities-explained)\
            \ (i.e. a set of channel names/namespaces and, for each, a set of operations)\
            \ which should be a subset of the set of capabilities associated with\
            \ the key specified in keyName."
          example:
            channel1:
            - publish
            - subscribe
          title: capability
          type: object
        clientId:
          description: "The [client ID](https://www.ably.io/documentation/core-features/authentication#identified-clients)\
            \ to be assosciated with the token. Can be set to * to allow for any client\
            \ ID to be used."
          title: clientId
          type: string
        keyName:
          description: Name of the key used for the TokenRequest. The keyName comprises
            of the app ID and key ID on an API Key.
          example: xVLyHw.LMJZxw
          title: keyName
          type: string
        nonce:
          description: "An unquoted, un-escaped random string of at least 16 characters.\
            \ Used to ensure the Ably TokenRequest cannot be reused."
          title: nonce
          type: string
        timestamp:
          description: Time of creation of the Ably TokenRequest.
          title: timestamp
          type: integer
      required:
      - capability
      - keyName
      - nonce
      - timestamp
      title: TokenRequest
      type: object
    getMetadataOfAllChannels_2XX_response:
      oneOf:
      - items:
          $ref: '#/components/schemas/ChannelDetails'
        type: array
      - items:
          type: string
        type: array
      title: getMetadataOfAllChannels_2XX_response
    publishMessagesToChannel_2XX_response:
      example:
        channel: channel
        messageId: messageId
      properties:
        channel:
          title: channel
          type: string
        messageId:
          title: messageId
          type: string
      title: publishMessagesToChannel_2XX_response
      type: object
    requestAccessToken_request:
      oneOf:
      - $ref: '#/components/schemas/TokenRequest'
      - $ref: '#/components/schemas/SignedTokenRequest'
      title: requestAccessToken_request
    subscribePushDeviceToChannel_request_oneOf:
      properties:
        channel:
          description: Channel name.
          title: channel
          type: string
        deviceId:
          description: "Must be set when clientId is empty, cannot be used with clientId."
          title: deviceId
          type: string
      title: subscribePushDeviceToChannel_request_oneOf
      type: object
    subscribePushDeviceToChannel_request_oneOf_1:
      properties:
        channel:
          description: Channel name.
          title: channel
          type: string
        clientId:
          description: "Must be set when deviceId is empty, cannot be used with deviceId."
          title: clientId
          type: string
      title: subscribePushDeviceToChannel_request_oneOf_1
      type: object
    subscribePushDeviceToChannel_request:
      oneOf:
      - $ref: '#/components/schemas/subscribePushDeviceToChannel_request_oneOf'
      - $ref: '#/components/schemas/subscribePushDeviceToChannel_request_oneOf_1'
      title: subscribePushDeviceToChannel_request
    publishPushNotificationToDevices_request:
      properties:
        push:
          $ref: '#/components/schemas/Push'
        recipient:
          $ref: '#/components/schemas/Recipient'
      required:
      - recipient
      title: publishPushNotificationToDevices_request
      type: object
    Push_apns:
      description: "Extends and overrides generic values when delivering via APNs.\
        \ [See examples](https://www.ably.io/documentation/general/push/publish#payload-structure)"
      example:
        notification:
          collapseKey: collapseKey
          sound: sound
          icon: icon
          body: body
          title: title
      properties:
        notification:
          $ref: '#/components/schemas/Notification'
      title: Push_apns
      type: object
    Push_fcm:
      description: "Extends and overrides generic values when delivering via GCM/FCM.\
        \ [See examples](https://www.ably.io/documentation/general/push/publish#payload-structure)"
      example:
        notification:
          collapseKey: collapseKey
          sound: sound
          icon: icon
          body: body
          title: title
      properties:
        notification:
          $ref: '#/components/schemas/Notification'
      title: Push_fcm
      type: object
    Push_web:
      description: "Extends and overrides generic values when delivering via web.\
        \ [See examples](https://www.ably.io/documentation/general/push/publish#payload-structure)"
      example:
        notification:
          collapseKey: collapseKey
          sound: sound
          icon: icon
          body: body
          title: title
      properties:
        notification:
          $ref: '#/components/schemas/Notification'
      title: Push_web
      type: object
  securitySchemes:
    basicAuth:
      description: "Basic Authentication using an [API key](https://www.ably.io/documentation/core-features/authentication#basic-authentication)."
      scheme: basic
      type: http
      x-basicInfoFunc: openapi_server.controllers.security_controller.info_from_basicAuth
    bearerAuth:
      description: "Token Authentication using an [Ably Token](https://www.ably.io/documentation/core-features/authentication#basic-authentication),\
        \ or optionally an [Ably JWT](https://www.ably.io/documentation/core-features/authentication#ably-jwt-process)."
      scheme: bearer
      type: http
      x-bearerInfoFunc: openapi_server.controllers.security_controller.info_from_bearerAuth
