/*
 * Platform API
 * The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@ably.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ChannelDetails;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.GetMetadataOfAllChannels2XXResponse;
import org.openapitools.client.model.PresenceMessage;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for StatusApi
 */
@Disabled
public class StatusApiTest {

    private final StatusApi api = new StatusApi();

    /**
     * Enumerate all active channels of the application
     *
     * Enumerate all active channels of the application
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMetadataOfAllChannelsTest() throws ApiException {
        String xAblyVersion = null;
        String format = null;
        Integer limit = null;
        String prefix = null;
        String by = null;
        GetMetadataOfAllChannels2XXResponse response = api.getMetadataOfAllChannels(xAblyVersion, format, limit, prefix, by);
        // TODO: test validations
    }

    /**
     * Get metadata of a channel
     *
     * Get metadata of a channel
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMetadataOfChannelTest() throws ApiException {
        String channelId = null;
        String xAblyVersion = null;
        String format = null;
        ChannelDetails response = api.getMetadataOfChannel(channelId, xAblyVersion, format);
        // TODO: test validations
    }

    /**
     * Get presence of a channel
     *
     * Get presence on a channel
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPresenceOfChannelTest() throws ApiException {
        String channelId = null;
        String xAblyVersion = null;
        String format = null;
        String clientId = null;
        String connectionId = null;
        Integer limit = null;
        List<PresenceMessage> response = api.getPresenceOfChannel(channelId, xAblyVersion, format, clientId, connectionId, limit);
        // TODO: test validations
    }

}
