/**
 * Platform API
 * The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@ably.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Error from '../model/Error';
import Message from '../model/Message';
import PublishMessagesToChannel2XXResponse from '../model/PublishMessagesToChannel2XXResponse';

/**
* Publishing service.
* @module api/PublishingApi
* @version 1.1.0
*/
export default class PublishingApi {

    /**
    * Constructs a new PublishingApi. 
    * @alias module:api/PublishingApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the publishMessagesToChannel operation.
     * @callback module:api/PublishingApi~publishMessagesToChannelCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PublishMessagesToChannel2XXResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Publish a message to a channel
     * Publish a message to the specified channel
     * @param {String} channelId The [Channel's ID](https://www.ably.io/documentation/rest/channels).
     * @param {Object} opts Optional parameters
     * @param {String} [xAblyVersion] The version of the API you wish to use.
     * @param {module:model/String} [format] The response format you would like
     * @param {module:model/Message} [message] 
     * @param {module:api/PublishingApi~publishMessagesToChannelCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PublishMessagesToChannel2XXResponse}
     */
    publishMessagesToChannel(channelId, opts, callback) {
      opts = opts || {};
      let postBody = opts['message'];
      // verify the required parameter 'channelId' is set
      if (channelId === undefined || channelId === null) {
        throw new Error("Missing the required parameter 'channelId' when calling publishMessagesToChannel");
      }

      let pathParams = {
        'channel_id': channelId
      };
      let queryParams = {
        'format': opts['format']
      };
      let headerParams = {
        'X-Ably-Version': opts['xAblyVersion']
      };
      let formParams = {
      };

      let authNames = ['basicAuth', 'bearerAuth'];
      let contentTypes = ['application/json', 'application/x-msgpack', 'application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'application/x-msgpack', 'text/html'];
      let returnType = PublishMessagesToChannel2XXResponse;
      return this.apiClient.callApi(
        '/channels/{channel_id}/messages', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
