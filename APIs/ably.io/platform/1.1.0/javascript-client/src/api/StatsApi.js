/**
 * Platform API
 * The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@ably.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Error from '../model/Error';

/**
* Stats service.
* @module api/StatsApi
* @version 1.1.0
*/
export default class StatsApi {

    /**
    * Constructs a new StatsApi. 
    * @alias module:api/StatsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getStats operation.
     * @callback module:api/StatsApi~getStatsCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve usage statistics for an application
     * The Ably system can be queried to obtain usage statistics for a given application, and results are provided aggregated across all channels in use in the application in the specified period. Stats may be used to track usage against account quotas.
     * @param {Object} opts Optional parameters
     * @param {String} [xAblyVersion] The version of the API you wish to use.
     * @param {module:model/String} [format] The response format you would like
     * @param {String} [start] 
     * @param {Number} [limit] 
     * @param {String} [end = 'now')] 
     * @param {module:model/String} [direction = 'backwards')] 
     * @param {module:model/String} [unit = 'minute')] Specifies the unit of aggregation in the returned results.
     * @param {module:api/StatsApi~getStatsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getStats(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'format': opts['format'],
        'start': opts['start'],
        'limit': opts['limit'],
        'end': opts['end'],
        'direction': opts['direction'],
        'unit': opts['unit']
      };
      let headerParams = {
        'X-Ably-Version': opts['xAblyVersion']
      };
      let formParams = {
      };

      let authNames = ['basicAuth', 'bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/x-msgpack', 'text/html'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/stats', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getTime operation.
     * @callback module:api/StatsApi~getTimeCallback
     * @param {String} error Error message, if any.
     * @param {Array.<Number>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the service time
     * This returns the service time in milliseconds since the epoch.
     * @param {Object} opts Optional parameters
     * @param {String} [xAblyVersion] The version of the API you wish to use.
     * @param {module:model/String} [format] The response format you would like
     * @param {module:api/StatsApi~getTimeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<Number>}
     */
    getTime(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'format': opts['format']
      };
      let headerParams = {
        'X-Ably-Version': opts['xAblyVersion']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/x-msgpack', 'text/html'];
      let returnType = ['Number'];
      return this.apiClient.callApi(
        '/time', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
