/**
 * Platform API
 * The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@ably.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SignedTokenRequest from './SignedTokenRequest';
import TokenRequest from './TokenRequest';

/**
 * The RequestAccessTokenRequest model module.
 * @module model/RequestAccessTokenRequest
 * @version 1.1.0
 */
class RequestAccessTokenRequest {
    /**
     * Constructs a new <code>RequestAccessTokenRequest</code>.
     * @alias module:model/RequestAccessTokenRequest
     * @param {(module:model/SignedTokenRequest|module:model/TokenRequest)} instance The actual instance to initialize RequestAccessTokenRequest.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "TokenRequest") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                TokenRequest.validateJSON(instance); // throw an exception if no match
                // create TokenRequest from JS object
                this.actualInstance = TokenRequest.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into TokenRequest
            errorMessages.push("Failed to construct TokenRequest: " + err)
        }

        try {
            if (typeof instance === "SignedTokenRequest") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                SignedTokenRequest.validateJSON(instance); // throw an exception if no match
                // create SignedTokenRequest from JS object
                this.actualInstance = SignedTokenRequest.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into SignedTokenRequest
            errorMessages.push("Failed to construct SignedTokenRequest: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `RequestAccessTokenRequest` with oneOf schemas SignedTokenRequest, TokenRequest. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `RequestAccessTokenRequest` with oneOf schemas SignedTokenRequest, TokenRequest. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>RequestAccessTokenRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RequestAccessTokenRequest} obj Optional instance to populate.
     * @return {module:model/RequestAccessTokenRequest} The populated <code>RequestAccessTokenRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        return new RequestAccessTokenRequest(data);
    }

    /**
     * Gets the actual instance, which can be <code>SignedTokenRequest</code>, <code>TokenRequest</code>.
     * @return {(module:model/SignedTokenRequest|module:model/TokenRequest)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>SignedTokenRequest</code>, <code>TokenRequest</code>.
     * @param {(module:model/SignedTokenRequest|module:model/TokenRequest)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = RequestAccessTokenRequest.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of RequestAccessTokenRequest from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/RequestAccessTokenRequest} An instance of RequestAccessTokenRequest.
     */
    static fromJSON = function(json_string){
        return RequestAccessTokenRequest.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * The [capabilities](https://www.ably.io/documentation/core-features/authentication#capabilities-explained) (i.e. a set of channel names/namespaces and, for each, a set of operations) which should be a subset of the set of capabilities associated with the key specified in keyName.
 * @member {Object} capability
 */
RequestAccessTokenRequest.prototype['capability'] = undefined;

/**
 * The [client ID](https://www.ably.io/documentation/core-features/authentication#identified-clients) to be assosciated with the token. Can be set to * to allow for any client ID to be used.
 * @member {String} clientId
 */
RequestAccessTokenRequest.prototype['clientId'] = undefined;

/**
 * Name of the key used for the TokenRequest. The keyName comprises of the app ID and key ID on an API Key.
 * @member {String} keyName
 */
RequestAccessTokenRequest.prototype['keyName'] = undefined;

/**
 * An unquoted, un-escaped random string of at least 16 characters. Used to ensure the Ably TokenRequest cannot be reused.
 * @member {String} nonce
 */
RequestAccessTokenRequest.prototype['nonce'] = undefined;

/**
 * Time of creation of the Ably TokenRequest.
 * @member {Number} timestamp
 */
RequestAccessTokenRequest.prototype['timestamp'] = undefined;

/**
 * A signature, generated as an HMAC of each of the above components, using the key secret value.
 * @member {String} mac
 */
RequestAccessTokenRequest.prototype['mac'] = undefined;


RequestAccessTokenRequest.OneOf = ["SignedTokenRequest", "TokenRequest"];

export default RequestAccessTokenRequest;

