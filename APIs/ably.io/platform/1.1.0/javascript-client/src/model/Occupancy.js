/**
 * Platform API
 * The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@ably.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Occupancy model module.
 * @module model/Occupancy
 * @version 1.1.0
 */
class Occupancy {
    /**
     * Constructs a new <code>Occupancy</code>.
     * An Occupancy instance indicating the occupancy of a channel. For events indicating regional activity of a channel this indicates activity in that region, not global activity.
     * @alias module:model/Occupancy
     */
    constructor() { 
        
        Occupancy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Occupancy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Occupancy} obj Optional instance to populate.
     * @return {module:model/Occupancy} The populated <code>Occupancy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Occupancy();

            if (data.hasOwnProperty('presenceConnections')) {
                obj['presenceConnections'] = ApiClient.convertToType(data['presenceConnections'], 'Number');
            }
            if (data.hasOwnProperty('presenceMembers')) {
                obj['presenceMembers'] = ApiClient.convertToType(data['presenceMembers'], 'Number');
            }
            if (data.hasOwnProperty('presenceSubscribers')) {
                obj['presenceSubscribers'] = ApiClient.convertToType(data['presenceSubscribers'], 'Number');
            }
            if (data.hasOwnProperty('publishers')) {
                obj['publishers'] = ApiClient.convertToType(data['publishers'], 'Number');
            }
            if (data.hasOwnProperty('subscribers')) {
                obj['subscribers'] = ApiClient.convertToType(data['subscribers'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Occupancy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Occupancy</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * The number of connections that are authorised to enter members into the presence channel.
 * @member {Number} presenceConnections
 */
Occupancy.prototype['presenceConnections'] = undefined;

/**
 * The number of members currently entered into the presence channel.
 * @member {Number} presenceMembers
 */
Occupancy.prototype['presenceMembers'] = undefined;

/**
 * The number of connections that are authorised to subscribe to presence messages.
 * @member {Number} presenceSubscribers
 */
Occupancy.prototype['presenceSubscribers'] = undefined;

/**
 * The number of connections attached to the channel that are authorised to publish.
 * @member {Number} publishers
 */
Occupancy.prototype['publishers'] = undefined;

/**
 * The number of connections attached that are authorised to subscribe to messages.
 * @member {Number} subscribers
 */
Occupancy.prototype['subscribers'] = undefined;






export default Occupancy;

