/**
 * Platform API
 * The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@ably.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ChannelStatus from './ChannelStatus';

/**
 * The ChannelDetails model module.
 * @module model/ChannelDetails
 * @version 1.1.0
 */
class ChannelDetails {
    /**
     * Constructs a new <code>ChannelDetails</code>.
     * @alias module:model/ChannelDetails
     * @param channelId {String} The required name of the channel including any qualifier, if any.
     */
    constructor(channelId) { 
        
        ChannelDetails.initialize(this, channelId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, channelId) { 
        obj['channelId'] = channelId;
    }

    /**
     * Constructs a <code>ChannelDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChannelDetails} obj Optional instance to populate.
     * @return {module:model/ChannelDetails} The populated <code>ChannelDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChannelDetails();

            if (data.hasOwnProperty('channelId')) {
                obj['channelId'] = ApiClient.convertToType(data['channelId'], 'String');
            }
            if (data.hasOwnProperty('isGlobalMaster')) {
                obj['isGlobalMaster'] = ApiClient.convertToType(data['isGlobalMaster'], 'Boolean');
            }
            if (data.hasOwnProperty('region')) {
                obj['region'] = ApiClient.convertToType(data['region'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ChannelStatus.constructFromObject(data['status']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ChannelDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ChannelDetails</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ChannelDetails.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['channelId'] && !(typeof data['channelId'] === 'string' || data['channelId'] instanceof String)) {
            throw new Error("Expected the field `channelId` to be a primitive type in the JSON string but got " + data['channelId']);
        }
        // ensure the json data is a string
        if (data['region'] && !(typeof data['region'] === 'string' || data['region'] instanceof String)) {
            throw new Error("Expected the field `region` to be a primitive type in the JSON string but got " + data['region']);
        }
        // validate the optional field `status`
        if (data['status']) { // data not null
          ChannelStatus.validateJSON(data['status']);
        }

        return true;
    }


}

ChannelDetails.RequiredProperties = ["channelId"];

/**
 * The required name of the channel including any qualifier, if any.
 * @member {String} channelId
 */
ChannelDetails.prototype['channelId'] = undefined;

/**
 * In events relating to the activity of a channel in a specific region, this optionally identifies whether or not that region is responsible for global coordination of the channel.
 * @member {Boolean} isGlobalMaster
 */
ChannelDetails.prototype['isGlobalMaster'] = undefined;

/**
 * In events relating to the activity of a channel in a specific region, this optionally identifies the region.
 * @member {String} region
 */
ChannelDetails.prototype['region'] = undefined;

/**
 * @member {module:model/ChannelStatus} status
 */
ChannelDetails.prototype['status'] = undefined;






export default ChannelDetails;

