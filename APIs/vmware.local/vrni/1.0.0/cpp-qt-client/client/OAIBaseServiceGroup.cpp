/**
 * vRealize Network Insight API Reference
 * vRealize Network Insight API Reference
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBaseServiceGroup.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBaseServiceGroup::OAIBaseServiceGroup(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBaseServiceGroup::OAIBaseServiceGroup() {
    this->initializeModel();
}

OAIBaseServiceGroup::~OAIBaseServiceGroup() {}

void OAIBaseServiceGroup::initializeModel() {

    m_entity_id_isSet = false;
    m_entity_id_isValid = false;

    m_entity_type_isSet = false;
    m_entity_type_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_members_isSet = false;
    m_members_isValid = false;
}

void OAIBaseServiceGroup::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBaseServiceGroup::fromJsonObject(QJsonObject json) {

    m_entity_id_isValid = ::OpenAPI::fromJsonValue(m_entity_id, json[QString("entity_id")]);
    m_entity_id_isSet = !json[QString("entity_id")].isNull() && m_entity_id_isValid;

    m_entity_type_isValid = ::OpenAPI::fromJsonValue(m_entity_type, json[QString("entity_type")]);
    m_entity_type_isSet = !json[QString("entity_type")].isNull() && m_entity_type_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_members_isValid = ::OpenAPI::fromJsonValue(m_members, json[QString("members")]);
    m_members_isSet = !json[QString("members")].isNull() && m_members_isValid;
}

QString OAIBaseServiceGroup::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBaseServiceGroup::asJsonObject() const {
    QJsonObject obj;
    if (m_entity_id_isSet) {
        obj.insert(QString("entity_id"), ::OpenAPI::toJsonValue(m_entity_id));
    }
    if (m_entity_type.isSet()) {
        obj.insert(QString("entity_type"), ::OpenAPI::toJsonValue(m_entity_type));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_members.size() > 0) {
        obj.insert(QString("members"), ::OpenAPI::toJsonValue(m_members));
    }
    return obj;
}

QString OAIBaseServiceGroup::getEntityId() const {
    return m_entity_id;
}
void OAIBaseServiceGroup::setEntityId(const QString &entity_id) {
    m_entity_id = entity_id;
    m_entity_id_isSet = true;
}

bool OAIBaseServiceGroup::is_entity_id_Set() const{
    return m_entity_id_isSet;
}

bool OAIBaseServiceGroup::is_entity_id_Valid() const{
    return m_entity_id_isValid;
}

OAIEntityType OAIBaseServiceGroup::getEntityType() const {
    return m_entity_type;
}
void OAIBaseServiceGroup::setEntityType(const OAIEntityType &entity_type) {
    m_entity_type = entity_type;
    m_entity_type_isSet = true;
}

bool OAIBaseServiceGroup::is_entity_type_Set() const{
    return m_entity_type_isSet;
}

bool OAIBaseServiceGroup::is_entity_type_Valid() const{
    return m_entity_type_isValid;
}

QString OAIBaseServiceGroup::getName() const {
    return m_name;
}
void OAIBaseServiceGroup::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIBaseServiceGroup::is_name_Set() const{
    return m_name_isSet;
}

bool OAIBaseServiceGroup::is_name_Valid() const{
    return m_name_isValid;
}

QList<OAIReference> OAIBaseServiceGroup::getMembers() const {
    return m_members;
}
void OAIBaseServiceGroup::setMembers(const QList<OAIReference> &members) {
    m_members = members;
    m_members_isSet = true;
}

bool OAIBaseServiceGroup::is_members_Set() const{
    return m_members_isSet;
}

bool OAIBaseServiceGroup::is_members_Valid() const{
    return m_members_isValid;
}

bool OAIBaseServiceGroup::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_entity_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_entity_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_members.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBaseServiceGroup::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
