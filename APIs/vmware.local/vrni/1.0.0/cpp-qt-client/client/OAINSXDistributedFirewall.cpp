/**
 * vRealize Network Insight API Reference
 * vRealize Network Insight API Reference
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINSXDistributedFirewall.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINSXDistributedFirewall::OAINSXDistributedFirewall(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINSXDistributedFirewall::OAINSXDistributedFirewall() {
    this->initializeModel();
}

OAINSXDistributedFirewall::~OAINSXDistributedFirewall() {}

void OAINSXDistributedFirewall::initializeModel() {

    m_entity_id_isSet = false;
    m_entity_id_isValid = false;

    m_entity_type_isSet = false;
    m_entity_type_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_exclusions_isSet = false;
    m_exclusions_isValid = false;

    m_firewall_rules_isSet = false;
    m_firewall_rules_isValid = false;

    m_vendor_id_isSet = false;
    m_vendor_id_isValid = false;
}

void OAINSXDistributedFirewall::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINSXDistributedFirewall::fromJsonObject(QJsonObject json) {

    m_entity_id_isValid = ::OpenAPI::fromJsonValue(m_entity_id, json[QString("entity_id")]);
    m_entity_id_isSet = !json[QString("entity_id")].isNull() && m_entity_id_isValid;

    m_entity_type_isValid = ::OpenAPI::fromJsonValue(m_entity_type, json[QString("entity_type")]);
    m_entity_type_isSet = !json[QString("entity_type")].isNull() && m_entity_type_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_exclusions_isValid = ::OpenAPI::fromJsonValue(m_exclusions, json[QString("exclusions")]);
    m_exclusions_isSet = !json[QString("exclusions")].isNull() && m_exclusions_isValid;

    m_firewall_rules_isValid = ::OpenAPI::fromJsonValue(m_firewall_rules, json[QString("firewall_rules")]);
    m_firewall_rules_isSet = !json[QString("firewall_rules")].isNull() && m_firewall_rules_isValid;

    m_vendor_id_isValid = ::OpenAPI::fromJsonValue(m_vendor_id, json[QString("vendor_id")]);
    m_vendor_id_isSet = !json[QString("vendor_id")].isNull() && m_vendor_id_isValid;
}

QString OAINSXDistributedFirewall::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINSXDistributedFirewall::asJsonObject() const {
    QJsonObject obj;
    if (m_entity_id_isSet) {
        obj.insert(QString("entity_id"), ::OpenAPI::toJsonValue(m_entity_id));
    }
    if (m_entity_type.isSet()) {
        obj.insert(QString("entity_type"), ::OpenAPI::toJsonValue(m_entity_type));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_exclusions.size() > 0) {
        obj.insert(QString("exclusions"), ::OpenAPI::toJsonValue(m_exclusions));
    }
    if (m_firewall_rules.size() > 0) {
        obj.insert(QString("firewall_rules"), ::OpenAPI::toJsonValue(m_firewall_rules));
    }
    if (m_vendor_id_isSet) {
        obj.insert(QString("vendor_id"), ::OpenAPI::toJsonValue(m_vendor_id));
    }
    return obj;
}

QString OAINSXDistributedFirewall::getEntityId() const {
    return m_entity_id;
}
void OAINSXDistributedFirewall::setEntityId(const QString &entity_id) {
    m_entity_id = entity_id;
    m_entity_id_isSet = true;
}

bool OAINSXDistributedFirewall::is_entity_id_Set() const{
    return m_entity_id_isSet;
}

bool OAINSXDistributedFirewall::is_entity_id_Valid() const{
    return m_entity_id_isValid;
}

OAIEntityType OAINSXDistributedFirewall::getEntityType() const {
    return m_entity_type;
}
void OAINSXDistributedFirewall::setEntityType(const OAIEntityType &entity_type) {
    m_entity_type = entity_type;
    m_entity_type_isSet = true;
}

bool OAINSXDistributedFirewall::is_entity_type_Set() const{
    return m_entity_type_isSet;
}

bool OAINSXDistributedFirewall::is_entity_type_Valid() const{
    return m_entity_type_isValid;
}

QString OAINSXDistributedFirewall::getName() const {
    return m_name;
}
void OAINSXDistributedFirewall::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAINSXDistributedFirewall::is_name_Set() const{
    return m_name_isSet;
}

bool OAINSXDistributedFirewall::is_name_Valid() const{
    return m_name_isValid;
}

QList<OAIReference> OAINSXDistributedFirewall::getExclusions() const {
    return m_exclusions;
}
void OAINSXDistributedFirewall::setExclusions(const QList<OAIReference> &exclusions) {
    m_exclusions = exclusions;
    m_exclusions_isSet = true;
}

bool OAINSXDistributedFirewall::is_exclusions_Set() const{
    return m_exclusions_isSet;
}

bool OAINSXDistributedFirewall::is_exclusions_Valid() const{
    return m_exclusions_isValid;
}

QList<OAIRuleSet> OAINSXDistributedFirewall::getFirewallRules() const {
    return m_firewall_rules;
}
void OAINSXDistributedFirewall::setFirewallRules(const QList<OAIRuleSet> &firewall_rules) {
    m_firewall_rules = firewall_rules;
    m_firewall_rules_isSet = true;
}

bool OAINSXDistributedFirewall::is_firewall_rules_Set() const{
    return m_firewall_rules_isSet;
}

bool OAINSXDistributedFirewall::is_firewall_rules_Valid() const{
    return m_firewall_rules_isValid;
}

QString OAINSXDistributedFirewall::getVendorId() const {
    return m_vendor_id;
}
void OAINSXDistributedFirewall::setVendorId(const QString &vendor_id) {
    m_vendor_id = vendor_id;
    m_vendor_id_isSet = true;
}

bool OAINSXDistributedFirewall::is_vendor_id_Set() const{
    return m_vendor_id_isSet;
}

bool OAINSXDistributedFirewall::is_vendor_id_Valid() const{
    return m_vendor_id_isValid;
}

bool OAINSXDistributedFirewall::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_entity_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_entity_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_exclusions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_firewall_rules.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_vendor_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINSXDistributedFirewall::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
