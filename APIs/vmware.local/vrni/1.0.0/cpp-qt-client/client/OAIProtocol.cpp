/**
 * vRealize Network Insight API Reference
 * vRealize Network Insight API Reference
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProtocol.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProtocol::OAIProtocol(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProtocol::OAIProtocol() {
    this->initializeModel();
}

OAIProtocol::~OAIProtocol() {}

void OAIProtocol::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIProtocol::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIProtocol::fromJson(QString jsonString) {
    
    if ( jsonString.compare("TCP", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProtocol::TCP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UDP", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProtocol::UDP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("OTHER", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProtocol::OTHER;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIProtocol::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIProtocol::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIProtocol::TCP:
            val = "TCP";
            break;
        case eOAIProtocol::UDP:
            val = "UDP";
            break;
        case eOAIProtocol::OTHER:
            val = "OTHER";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIProtocol::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIProtocol::eOAIProtocol OAIProtocol::getValue() const {
    return m_value;
}

void OAIProtocol::setValue(const OAIProtocol::eOAIProtocol& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIProtocol::isSet() const {
    
    return m_value_isSet;
}

bool OAIProtocol::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
