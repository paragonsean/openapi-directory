/**
 * vRealize Network Insight API Reference
 * vRealize Network Insight API Reference
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFirewallAction.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFirewallAction::OAIFirewallAction(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFirewallAction::OAIFirewallAction() {
    this->initializeModel();
}

OAIFirewallAction::~OAIFirewallAction() {}

void OAIFirewallAction::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIFirewallAction::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIFirewallAction::fromJson(QString jsonString) {
    
    if ( jsonString.compare("ALLOW", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFirewallAction::ALLOW;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ACCEPT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFirewallAction::ACCEPT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DENY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFirewallAction::DENY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DROP", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFirewallAction::DROP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("REJECT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFirewallAction::REJECT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("REDIRECT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFirewallAction::REDIRECT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DO_NOT_REDIRECT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFirewallAction::DO_NOT_REDIRECT;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIFirewallAction::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIFirewallAction::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIFirewallAction::ALLOW:
            val = "ALLOW";
            break;
        case eOAIFirewallAction::ACCEPT:
            val = "ACCEPT";
            break;
        case eOAIFirewallAction::DENY:
            val = "DENY";
            break;
        case eOAIFirewallAction::DROP:
            val = "DROP";
            break;
        case eOAIFirewallAction::REJECT:
            val = "REJECT";
            break;
        case eOAIFirewallAction::REDIRECT:
            val = "REDIRECT";
            break;
        case eOAIFirewallAction::DO_NOT_REDIRECT:
            val = "DO_NOT_REDIRECT";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIFirewallAction::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIFirewallAction::eOAIFirewallAction OAIFirewallAction::getValue() const {
    return m_value;
}

void OAIFirewallAction::setValue(const OAIFirewallAction::eOAIFirewallAction& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIFirewallAction::isSet() const {
    
    return m_value_isSet;
}

bool OAIFirewallAction::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
