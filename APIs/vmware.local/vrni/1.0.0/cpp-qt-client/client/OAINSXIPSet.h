/**
 * vRealize Network Insight API Reference
 * vRealize Network Insight API Reference
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINSXIPSet.h
 *
 * 
 */

#ifndef OAINSXIPSet_H
#define OAINSXIPSet_H

#include <QJsonObject>

#include "OAIBaseIPSet.h"
#include "OAIEntityType.h"
#include "OAIIpAddressRange.h"
#include "OAIIpNumericRange.h"
#include "OAIIpV4Address.h"
#include "OAIReference.h"
#include "OAIRuleSet.h"
#include "OAIScopeEnum.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRuleSet;
class OAIIpV4Address;
class OAIIpNumericRange;
class OAIIpAddressRange;
class OAIReference;

class OAINSXIPSet : public OAIObject {
public:
    OAINSXIPSet();
    OAINSXIPSet(QString json);
    ~OAINSXIPSet() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEntityId() const;
    void setEntityId(const QString &entity_id);
    bool is_entity_id_Set() const;
    bool is_entity_id_Valid() const;

    OAIEntityType getEntityType() const;
    void setEntityType(const OAIEntityType &entity_type);
    bool is_entity_type_Set() const;
    bool is_entity_type_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<OAIRuleSet> getDirectDestinationRules() const;
    void setDirectDestinationRules(const QList<OAIRuleSet> &direct_destination_rules);
    bool is_direct_destination_rules_Set() const;
    bool is_direct_destination_rules_Valid() const;

    QList<OAIRuleSet> getDirectSourceRules() const;
    void setDirectSourceRules(const QList<OAIRuleSet> &direct_source_rules);
    bool is_direct_source_rules_Set() const;
    bool is_direct_source_rules_Valid() const;

    QList<OAIRuleSet> getIndirectDestinationRules() const;
    void setIndirectDestinationRules(const QList<OAIRuleSet> &indirect_destination_rules);
    bool is_indirect_destination_rules_Set() const;
    bool is_indirect_destination_rules_Valid() const;

    QList<OAIRuleSet> getIndirectSourceRules() const;
    void setIndirectSourceRules(const QList<OAIRuleSet> &indirect_source_rules);
    bool is_indirect_source_rules_Set() const;
    bool is_indirect_source_rules_Valid() const;

    QList<OAIIpV4Address> getIpAddresses() const;
    void setIpAddresses(const QList<OAIIpV4Address> &ip_addresses);
    bool is_ip_addresses_Set() const;
    bool is_ip_addresses_Valid() const;

    QList<OAIIpNumericRange> getIpNumericRanges() const;
    void setIpNumericRanges(const QList<OAIIpNumericRange> &ip_numeric_ranges);
    bool is_ip_numeric_ranges_Set() const;
    bool is_ip_numeric_ranges_Valid() const;

    QList<OAIIpAddressRange> getIpRanges() const;
    void setIpRanges(const QList<OAIIpAddressRange> &ip_ranges);
    bool is_ip_ranges_Set() const;
    bool is_ip_ranges_Valid() const;

    QList<OAIReference> getParentSecurityGroups() const;
    void setParentSecurityGroups(const QList<OAIReference> &parent_security_groups);
    bool is_parent_security_groups_Set() const;
    bool is_parent_security_groups_Valid() const;

    qint32 getTranslatedVmCount() const;
    void setTranslatedVmCount(const qint32 &translated_vm_count);
    bool is_translated_vm_count_Set() const;
    bool is_translated_vm_count_Valid() const;

    QString getVendor() const;
    void setVendor(const QString &vendor);
    bool is_vendor_Set() const;
    bool is_vendor_Valid() const;

    QString getVendorId() const;
    void setVendorId(const QString &vendor_id);
    bool is_vendor_id_Set() const;
    bool is_vendor_id_Valid() const;

    QList<OAIReference> getNsxManagers() const;
    void setNsxManagers(const QList<OAIReference> &nsx_managers);
    bool is_nsx_managers_Set() const;
    bool is_nsx_managers_Valid() const;

    OAIScopeEnum getScope() const;
    void setScope(const OAIScopeEnum &scope);
    bool is_scope_Set() const;
    bool is_scope_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_entity_id;
    bool m_entity_id_isSet;
    bool m_entity_id_isValid;

    OAIEntityType m_entity_type;
    bool m_entity_type_isSet;
    bool m_entity_type_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<OAIRuleSet> m_direct_destination_rules;
    bool m_direct_destination_rules_isSet;
    bool m_direct_destination_rules_isValid;

    QList<OAIRuleSet> m_direct_source_rules;
    bool m_direct_source_rules_isSet;
    bool m_direct_source_rules_isValid;

    QList<OAIRuleSet> m_indirect_destination_rules;
    bool m_indirect_destination_rules_isSet;
    bool m_indirect_destination_rules_isValid;

    QList<OAIRuleSet> m_indirect_source_rules;
    bool m_indirect_source_rules_isSet;
    bool m_indirect_source_rules_isValid;

    QList<OAIIpV4Address> m_ip_addresses;
    bool m_ip_addresses_isSet;
    bool m_ip_addresses_isValid;

    QList<OAIIpNumericRange> m_ip_numeric_ranges;
    bool m_ip_numeric_ranges_isSet;
    bool m_ip_numeric_ranges_isValid;

    QList<OAIIpAddressRange> m_ip_ranges;
    bool m_ip_ranges_isSet;
    bool m_ip_ranges_isValid;

    QList<OAIReference> m_parent_security_groups;
    bool m_parent_security_groups_isSet;
    bool m_parent_security_groups_isValid;

    qint32 m_translated_vm_count;
    bool m_translated_vm_count_isSet;
    bool m_translated_vm_count_isValid;

    QString m_vendor;
    bool m_vendor_isSet;
    bool m_vendor_isValid;

    QString m_vendor_id;
    bool m_vendor_id_isSet;
    bool m_vendor_id_isValid;

    QList<OAIReference> m_nsx_managers;
    bool m_nsx_managers_isSet;
    bool m_nsx_managers_isValid;

    OAIScopeEnum m_scope;
    bool m_scope_isSet;
    bool m_scope_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINSXIPSet)

#endif // OAINSXIPSet_H
