/**
 * vRealize Network Insight API Reference
 * vRealize Network Insight API Reference
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRuleSet.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRuleSet::OAIRuleSet(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRuleSet::OAIRuleSet() {
    this->initializeModel();
}

OAIRuleSet::~OAIRuleSet() {}

void OAIRuleSet::initializeModel() {

    m_firewall_isSet = false;
    m_firewall_isValid = false;

    m_rule_set_type_isSet = false;
    m_rule_set_type_isValid = false;

    m_rules_isSet = false;
    m_rules_isValid = false;
}

void OAIRuleSet::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRuleSet::fromJsonObject(QJsonObject json) {

    m_firewall_isValid = ::OpenAPI::fromJsonValue(m_firewall, json[QString("firewall")]);
    m_firewall_isSet = !json[QString("firewall")].isNull() && m_firewall_isValid;

    m_rule_set_type_isValid = ::OpenAPI::fromJsonValue(m_rule_set_type, json[QString("rule_set_type")]);
    m_rule_set_type_isSet = !json[QString("rule_set_type")].isNull() && m_rule_set_type_isValid;

    m_rules_isValid = ::OpenAPI::fromJsonValue(m_rules, json[QString("rules")]);
    m_rules_isSet = !json[QString("rules")].isNull() && m_rules_isValid;
}

QString OAIRuleSet::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRuleSet::asJsonObject() const {
    QJsonObject obj;
    if (m_firewall.isSet()) {
        obj.insert(QString("firewall"), ::OpenAPI::toJsonValue(m_firewall));
    }
    if (m_rule_set_type_isSet) {
        obj.insert(QString("rule_set_type"), ::OpenAPI::toJsonValue(m_rule_set_type));
    }
    if (m_rules.size() > 0) {
        obj.insert(QString("rules"), ::OpenAPI::toJsonValue(m_rules));
    }
    return obj;
}

OAIReference OAIRuleSet::getFirewall() const {
    return m_firewall;
}
void OAIRuleSet::setFirewall(const OAIReference &firewall) {
    m_firewall = firewall;
    m_firewall_isSet = true;
}

bool OAIRuleSet::is_firewall_Set() const{
    return m_firewall_isSet;
}

bool OAIRuleSet::is_firewall_Valid() const{
    return m_firewall_isValid;
}

QString OAIRuleSet::getRuleSetType() const {
    return m_rule_set_type;
}
void OAIRuleSet::setRuleSetType(const QString &rule_set_type) {
    m_rule_set_type = rule_set_type;
    m_rule_set_type_isSet = true;
}

bool OAIRuleSet::is_rule_set_type_Set() const{
    return m_rule_set_type_isSet;
}

bool OAIRuleSet::is_rule_set_type_Valid() const{
    return m_rule_set_type_isValid;
}

QList<OAIReference> OAIRuleSet::getRules() const {
    return m_rules;
}
void OAIRuleSet::setRules(const QList<OAIReference> &rules) {
    m_rules = rules;
    m_rules_isSet = true;
}

bool OAIRuleSet::is_rules_Set() const{
    return m_rules_isSet;
}

bool OAIRuleSet::is_rules_Valid() const{
    return m_rules_isValid;
}

bool OAIRuleSet::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_firewall.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_rule_set_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rules.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRuleSet::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
