/**
 * vRealize Network Insight API Reference
 * vRealize Network Insight API Reference
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINSXSecurityGroup.h
 *
 * 
 */

#ifndef OAINSXSecurityGroup_H
#define OAINSXSecurityGroup_H

#include <QJsonObject>

#include "OAIBaseSecurityGroup.h"
#include "OAIEntityType.h"
#include "OAIReference.h"
#include "OAIRuleSet.h"
#include "OAIScopeEnum.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIReference;
class OAIRuleSet;

class OAINSXSecurityGroup : public OAIObject {
public:
    OAINSXSecurityGroup();
    OAINSXSecurityGroup(QString json);
    ~OAINSXSecurityGroup() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEntityId() const;
    void setEntityId(const QString &entity_id);
    bool is_entity_id_Set() const;
    bool is_entity_id_Valid() const;

    OAIEntityType getEntityType() const;
    void setEntityType(const OAIEntityType &entity_type);
    bool is_entity_type_Set() const;
    bool is_entity_type_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<OAIReference> getMembers() const;
    void setMembers(const QList<OAIReference> &members);
    bool is_members_Set() const;
    bool is_members_Valid() const;

    QList<OAIRuleSet> getDirectDestinationRules() const;
    void setDirectDestinationRules(const QList<OAIRuleSet> &direct_destination_rules);
    bool is_direct_destination_rules_Set() const;
    bool is_direct_destination_rules_Valid() const;

    QList<OAIReference> getDirectMembers() const;
    void setDirectMembers(const QList<OAIReference> &direct_members);
    bool is_direct_members_Set() const;
    bool is_direct_members_Valid() const;

    QList<OAIRuleSet> getDirectSourceRules() const;
    void setDirectSourceRules(const QList<OAIRuleSet> &direct_source_rules);
    bool is_direct_source_rules_Set() const;
    bool is_direct_source_rules_Valid() const;

    QList<OAIReference> getExcludedMembers() const;
    void setExcludedMembers(const QList<OAIReference> &excluded_members);
    bool is_excluded_members_Set() const;
    bool is_excluded_members_Valid() const;

    QList<OAIRuleSet> getIndirectDestinationRules() const;
    void setIndirectDestinationRules(const QList<OAIRuleSet> &indirect_destination_rules);
    bool is_indirect_destination_rules_Set() const;
    bool is_indirect_destination_rules_Valid() const;

    QList<OAIRuleSet> getIndirectSourceRules() const;
    void setIndirectSourceRules(const QList<OAIRuleSet> &indirect_source_rules);
    bool is_indirect_source_rules_Set() const;
    bool is_indirect_source_rules_Valid() const;

    QList<OAIReference> getParents() const;
    void setParents(const QList<OAIReference> &parents);
    bool is_parents_Set() const;
    bool is_parents_Valid() const;

    qint32 getTranslatedVmCount() const;
    void setTranslatedVmCount(const qint32 &translated_vm_count);
    bool is_translated_vm_count_Set() const;
    bool is_translated_vm_count_Valid() const;

    QString getVendorId() const;
    void setVendorId(const QString &vendor_id);
    bool is_vendor_id_Set() const;
    bool is_vendor_id_Valid() const;

    QList<OAIReference> getIpSets() const;
    void setIpSets(const QList<OAIReference> &ip_sets);
    bool is_ip_sets_Set() const;
    bool is_ip_sets_Valid() const;

    QList<OAIReference> getNsxManagers() const;
    void setNsxManagers(const QList<OAIReference> &nsx_managers);
    bool is_nsx_managers_Set() const;
    bool is_nsx_managers_Valid() const;

    OAIScopeEnum getScope() const;
    void setScope(const OAIScopeEnum &scope);
    bool is_scope_Set() const;
    bool is_scope_Valid() const;

    QList<OAIReference> getSecurityTags() const;
    void setSecurityTags(const QList<OAIReference> &security_tags);
    bool is_security_tags_Set() const;
    bool is_security_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_entity_id;
    bool m_entity_id_isSet;
    bool m_entity_id_isValid;

    OAIEntityType m_entity_type;
    bool m_entity_type_isSet;
    bool m_entity_type_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<OAIReference> m_members;
    bool m_members_isSet;
    bool m_members_isValid;

    QList<OAIRuleSet> m_direct_destination_rules;
    bool m_direct_destination_rules_isSet;
    bool m_direct_destination_rules_isValid;

    QList<OAIReference> m_direct_members;
    bool m_direct_members_isSet;
    bool m_direct_members_isValid;

    QList<OAIRuleSet> m_direct_source_rules;
    bool m_direct_source_rules_isSet;
    bool m_direct_source_rules_isValid;

    QList<OAIReference> m_excluded_members;
    bool m_excluded_members_isSet;
    bool m_excluded_members_isValid;

    QList<OAIRuleSet> m_indirect_destination_rules;
    bool m_indirect_destination_rules_isSet;
    bool m_indirect_destination_rules_isValid;

    QList<OAIRuleSet> m_indirect_source_rules;
    bool m_indirect_source_rules_isSet;
    bool m_indirect_source_rules_isValid;

    QList<OAIReference> m_parents;
    bool m_parents_isSet;
    bool m_parents_isValid;

    qint32 m_translated_vm_count;
    bool m_translated_vm_count_isSet;
    bool m_translated_vm_count_isValid;

    QString m_vendor_id;
    bool m_vendor_id_isSet;
    bool m_vendor_id_isValid;

    QList<OAIReference> m_ip_sets;
    bool m_ip_sets_isSet;
    bool m_ip_sets_isValid;

    QList<OAIReference> m_nsx_managers;
    bool m_nsx_managers_isSet;
    bool m_nsx_managers_isValid;

    OAIScopeEnum m_scope;
    bool m_scope_isSet;
    bool m_scope_isValid;

    QList<OAIReference> m_security_tags;
    bool m_security_tags_isSet;
    bool m_security_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINSXSecurityGroup)

#endif // OAINSXSecurityGroup_H
