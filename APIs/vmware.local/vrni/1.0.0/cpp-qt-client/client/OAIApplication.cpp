/**
 * vRealize Network Insight API Reference
 * vRealize Network Insight API Reference
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplication.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplication::OAIApplication(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplication::OAIApplication() {
    this->initializeModel();
}

OAIApplication::~OAIApplication() {}

void OAIApplication::initializeModel() {

    m_entity_id_isSet = false;
    m_entity_id_isValid = false;

    m_entity_type_isSet = false;
    m_entity_type_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_created_by_isSet = false;
    m_created_by_isValid = false;

    m_last_modified_by_isSet = false;
    m_last_modified_by_isValid = false;

    m_last_modified_time_isSet = false;
    m_last_modified_time_isValid = false;
}

void OAIApplication::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApplication::fromJsonObject(QJsonObject json) {

    m_entity_id_isValid = ::OpenAPI::fromJsonValue(m_entity_id, json[QString("entity_id")]);
    m_entity_id_isSet = !json[QString("entity_id")].isNull() && m_entity_id_isValid;

    m_entity_type_isValid = ::OpenAPI::fromJsonValue(m_entity_type, json[QString("entity_type")]);
    m_entity_type_isSet = !json[QString("entity_type")].isNull() && m_entity_type_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("create_time")]);
    m_create_time_isSet = !json[QString("create_time")].isNull() && m_create_time_isValid;

    m_created_by_isValid = ::OpenAPI::fromJsonValue(m_created_by, json[QString("created_by")]);
    m_created_by_isSet = !json[QString("created_by")].isNull() && m_created_by_isValid;

    m_last_modified_by_isValid = ::OpenAPI::fromJsonValue(m_last_modified_by, json[QString("last_modified_by")]);
    m_last_modified_by_isSet = !json[QString("last_modified_by")].isNull() && m_last_modified_by_isValid;

    m_last_modified_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_time, json[QString("last_modified_time")]);
    m_last_modified_time_isSet = !json[QString("last_modified_time")].isNull() && m_last_modified_time_isValid;
}

QString OAIApplication::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApplication::asJsonObject() const {
    QJsonObject obj;
    if (m_entity_id_isSet) {
        obj.insert(QString("entity_id"), ::OpenAPI::toJsonValue(m_entity_id));
    }
    if (m_entity_type.isSet()) {
        obj.insert(QString("entity_type"), ::OpenAPI::toJsonValue(m_entity_type));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("create_time"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_created_by_isSet) {
        obj.insert(QString("created_by"), ::OpenAPI::toJsonValue(m_created_by));
    }
    if (m_last_modified_by_isSet) {
        obj.insert(QString("last_modified_by"), ::OpenAPI::toJsonValue(m_last_modified_by));
    }
    if (m_last_modified_time_isSet) {
        obj.insert(QString("last_modified_time"), ::OpenAPI::toJsonValue(m_last_modified_time));
    }
    return obj;
}

QString OAIApplication::getEntityId() const {
    return m_entity_id;
}
void OAIApplication::setEntityId(const QString &entity_id) {
    m_entity_id = entity_id;
    m_entity_id_isSet = true;
}

bool OAIApplication::is_entity_id_Set() const{
    return m_entity_id_isSet;
}

bool OAIApplication::is_entity_id_Valid() const{
    return m_entity_id_isValid;
}

OAIEntityType OAIApplication::getEntityType() const {
    return m_entity_type;
}
void OAIApplication::setEntityType(const OAIEntityType &entity_type) {
    m_entity_type = entity_type;
    m_entity_type_isSet = true;
}

bool OAIApplication::is_entity_type_Set() const{
    return m_entity_type_isSet;
}

bool OAIApplication::is_entity_type_Valid() const{
    return m_entity_type_isValid;
}

QString OAIApplication::getName() const {
    return m_name;
}
void OAIApplication::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIApplication::is_name_Set() const{
    return m_name_isSet;
}

bool OAIApplication::is_name_Valid() const{
    return m_name_isValid;
}

qint64 OAIApplication::getCreateTime() const {
    return m_create_time;
}
void OAIApplication::setCreateTime(const qint64 &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIApplication::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIApplication::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIApplication::getCreatedBy() const {
    return m_created_by;
}
void OAIApplication::setCreatedBy(const QString &created_by) {
    m_created_by = created_by;
    m_created_by_isSet = true;
}

bool OAIApplication::is_created_by_Set() const{
    return m_created_by_isSet;
}

bool OAIApplication::is_created_by_Valid() const{
    return m_created_by_isValid;
}

QString OAIApplication::getLastModifiedBy() const {
    return m_last_modified_by;
}
void OAIApplication::setLastModifiedBy(const QString &last_modified_by) {
    m_last_modified_by = last_modified_by;
    m_last_modified_by_isSet = true;
}

bool OAIApplication::is_last_modified_by_Set() const{
    return m_last_modified_by_isSet;
}

bool OAIApplication::is_last_modified_by_Valid() const{
    return m_last_modified_by_isValid;
}

qint64 OAIApplication::getLastModifiedTime() const {
    return m_last_modified_time;
}
void OAIApplication::setLastModifiedTime(const qint64 &last_modified_time) {
    m_last_modified_time = last_modified_time;
    m_last_modified_time_isSet = true;
}

bool OAIApplication::is_last_modified_time_Set() const{
    return m_last_modified_time_isSet;
}

bool OAIApplication::is_last_modified_time_Valid() const{
    return m_last_modified_time_isValid;
}

bool OAIApplication::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_entity_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_entity_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApplication::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
