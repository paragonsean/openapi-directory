/**
 * vRealize Network Insight API Reference
 * vRealize Network Insight API Reference
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFlow.h
 *
 * 
 */

#ifndef OAIFlow_H
#define OAIFlow_H

#include <QJsonObject>

#include "OAIBaseEntity.h"
#include "OAIEntityType.h"
#include "OAIFirewallAction.h"
#include "OAIFlowTag.h"
#include "OAIFlowTrafficType.h"
#include "OAIIpV4Address.h"
#include "OAIPortRange.h"
#include "OAIProtocol.h"
#include "OAIReference.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIReference;
class OAIIpV4Address;
class OAIPortRange;

class OAIFlow : public OAIObject {
public:
    OAIFlow();
    OAIFlow(QString json);
    ~OAIFlow() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEntityId() const;
    void setEntityId(const QString &entity_id);
    bool is_entity_id_Set() const;
    bool is_entity_id_Valid() const;

    OAIEntityType getEntityType() const;
    void setEntityType(const OAIEntityType &entity_type);
    bool is_entity_type_Set() const;
    bool is_entity_type_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIReference getDestinationCluster() const;
    void setDestinationCluster(const OAIReference &destination_cluster);
    bool is_destination_cluster_Set() const;
    bool is_destination_cluster_Valid() const;

    OAIReference getDestinationDatacenter() const;
    void setDestinationDatacenter(const OAIReference &destination_datacenter);
    bool is_destination_datacenter_Set() const;
    bool is_destination_datacenter_Valid() const;

    QList<OAIReference> getDestinationFolders() const;
    void setDestinationFolders(const QList<OAIReference> &destination_folders);
    bool is_destination_folders_Set() const;
    bool is_destination_folders_Valid() const;

    OAIReference getDestinationHost() const;
    void setDestinationHost(const OAIReference &destination_host);
    bool is_destination_host_Set() const;
    bool is_destination_host_Valid() const;

    OAIIpV4Address getDestinationIp() const;
    void setDestinationIp(const OAIIpV4Address &destination_ip);
    bool is_destination_ip_Set() const;
    bool is_destination_ip_Valid() const;

    QList<OAIReference> getDestinationIpSets() const;
    void setDestinationIpSets(const QList<OAIReference> &destination_ip_sets);
    bool is_destination_ip_sets_Set() const;
    bool is_destination_ip_sets_Valid() const;

    OAIReference getDestinationL2Network() const;
    void setDestinationL2Network(const OAIReference &destination_l2_network);
    bool is_destination_l2_network_Set() const;
    bool is_destination_l2_network_Valid() const;

    OAIReference getDestinationResourcePool() const;
    void setDestinationResourcePool(const OAIReference &destination_resource_pool);
    bool is_destination_resource_pool_Set() const;
    bool is_destination_resource_pool_Valid() const;

    QList<OAIReference> getDestinationSecurityGroups() const;
    void setDestinationSecurityGroups(const QList<OAIReference> &destination_security_groups);
    bool is_destination_security_groups_Set() const;
    bool is_destination_security_groups_Valid() const;

    QList<OAIReference> getDestinationSecurityTags() const;
    void setDestinationSecurityTags(const QList<OAIReference> &destination_security_tags);
    bool is_destination_security_tags_Set() const;
    bool is_destination_security_tags_Valid() const;

    OAIReference getDestinationVm() const;
    void setDestinationVm(const OAIReference &destination_vm);
    bool is_destination_vm_Set() const;
    bool is_destination_vm_Valid() const;

    QList<QString> getDestinationVmTags() const;
    void setDestinationVmTags(const QList<QString> &destination_vm_tags);
    bool is_destination_vm_tags_Set() const;
    bool is_destination_vm_tags_Valid() const;

    OAIReference getDestinationVnic() const;
    void setDestinationVnic(const OAIReference &destination_vnic);
    bool is_destination_vnic_Set() const;
    bool is_destination_vnic_Valid() const;

    OAIReference getDestinationVpc() const;
    void setDestinationVpc(const OAIReference &destination_vpc);
    bool is_destination_vpc_Set() const;
    bool is_destination_vpc_Valid() const;

    OAIFirewallAction getFirewallAction() const;
    void setFirewallAction(const OAIFirewallAction &firewall_action);
    bool is_firewall_action_Set() const;
    bool is_firewall_action_Valid() const;

    QList<OAIFlowTag> getFlowTag() const;
    void setFlowTag(const QList<OAIFlowTag> &flow_tag);
    bool is_flow_tag_Set() const;
    bool is_flow_tag_Valid() const;

    OAIPortRange getPort() const;
    void setPort(const OAIPortRange &port);
    bool is_port_Set() const;
    bool is_port_Valid() const;

    OAIProtocol getProtocol() const;
    void setProtocol(const OAIProtocol &protocol);
    bool is_protocol_Set() const;
    bool is_protocol_Valid() const;

    OAIReference getSourceCluster() const;
    void setSourceCluster(const OAIReference &source_cluster);
    bool is_source_cluster_Set() const;
    bool is_source_cluster_Valid() const;

    OAIReference getSourceDatacenter() const;
    void setSourceDatacenter(const OAIReference &source_datacenter);
    bool is_source_datacenter_Set() const;
    bool is_source_datacenter_Valid() const;

    QList<OAIReference> getSourceFolders() const;
    void setSourceFolders(const QList<OAIReference> &source_folders);
    bool is_source_folders_Set() const;
    bool is_source_folders_Valid() const;

    OAIReference getSourceHost() const;
    void setSourceHost(const OAIReference &source_host);
    bool is_source_host_Set() const;
    bool is_source_host_Valid() const;

    OAIIpV4Address getSourceIp() const;
    void setSourceIp(const OAIIpV4Address &source_ip);
    bool is_source_ip_Set() const;
    bool is_source_ip_Valid() const;

    QList<OAIReference> getSourceIpSets() const;
    void setSourceIpSets(const QList<OAIReference> &source_ip_sets);
    bool is_source_ip_sets_Set() const;
    bool is_source_ip_sets_Valid() const;

    OAIReference getSourceL2Network() const;
    void setSourceL2Network(const OAIReference &source_l2_network);
    bool is_source_l2_network_Set() const;
    bool is_source_l2_network_Valid() const;

    OAIReference getSourceResourcePool() const;
    void setSourceResourcePool(const OAIReference &source_resource_pool);
    bool is_source_resource_pool_Set() const;
    bool is_source_resource_pool_Valid() const;

    QList<OAIReference> getSourceSecurityGroups() const;
    void setSourceSecurityGroups(const QList<OAIReference> &source_security_groups);
    bool is_source_security_groups_Set() const;
    bool is_source_security_groups_Valid() const;

    QList<OAIReference> getSourceSecurityTags() const;
    void setSourceSecurityTags(const QList<OAIReference> &source_security_tags);
    bool is_source_security_tags_Set() const;
    bool is_source_security_tags_Valid() const;

    OAIReference getSourceVm() const;
    void setSourceVm(const OAIReference &source_vm);
    bool is_source_vm_Set() const;
    bool is_source_vm_Valid() const;

    QList<QString> getSourceVmTags() const;
    void setSourceVmTags(const QList<QString> &source_vm_tags);
    bool is_source_vm_tags_Set() const;
    bool is_source_vm_tags_Valid() const;

    OAIReference getSourceVnic() const;
    void setSourceVnic(const OAIReference &source_vnic);
    bool is_source_vnic_Set() const;
    bool is_source_vnic_Valid() const;

    OAIReference getSourceVpc() const;
    void setSourceVpc(const OAIReference &source_vpc);
    bool is_source_vpc_Set() const;
    bool is_source_vpc_Valid() const;

    OAIFlowTrafficType getTrafficType() const;
    void setTrafficType(const OAIFlowTrafficType &traffic_type);
    bool is_traffic_type_Set() const;
    bool is_traffic_type_Valid() const;

    bool isWithinHost() const;
    void setWithinHost(const bool &within_host);
    bool is_within_host_Set() const;
    bool is_within_host_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_entity_id;
    bool m_entity_id_isSet;
    bool m_entity_id_isValid;

    OAIEntityType m_entity_type;
    bool m_entity_type_isSet;
    bool m_entity_type_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIReference m_destination_cluster;
    bool m_destination_cluster_isSet;
    bool m_destination_cluster_isValid;

    OAIReference m_destination_datacenter;
    bool m_destination_datacenter_isSet;
    bool m_destination_datacenter_isValid;

    QList<OAIReference> m_destination_folders;
    bool m_destination_folders_isSet;
    bool m_destination_folders_isValid;

    OAIReference m_destination_host;
    bool m_destination_host_isSet;
    bool m_destination_host_isValid;

    OAIIpV4Address m_destination_ip;
    bool m_destination_ip_isSet;
    bool m_destination_ip_isValid;

    QList<OAIReference> m_destination_ip_sets;
    bool m_destination_ip_sets_isSet;
    bool m_destination_ip_sets_isValid;

    OAIReference m_destination_l2_network;
    bool m_destination_l2_network_isSet;
    bool m_destination_l2_network_isValid;

    OAIReference m_destination_resource_pool;
    bool m_destination_resource_pool_isSet;
    bool m_destination_resource_pool_isValid;

    QList<OAIReference> m_destination_security_groups;
    bool m_destination_security_groups_isSet;
    bool m_destination_security_groups_isValid;

    QList<OAIReference> m_destination_security_tags;
    bool m_destination_security_tags_isSet;
    bool m_destination_security_tags_isValid;

    OAIReference m_destination_vm;
    bool m_destination_vm_isSet;
    bool m_destination_vm_isValid;

    QList<QString> m_destination_vm_tags;
    bool m_destination_vm_tags_isSet;
    bool m_destination_vm_tags_isValid;

    OAIReference m_destination_vnic;
    bool m_destination_vnic_isSet;
    bool m_destination_vnic_isValid;

    OAIReference m_destination_vpc;
    bool m_destination_vpc_isSet;
    bool m_destination_vpc_isValid;

    OAIFirewallAction m_firewall_action;
    bool m_firewall_action_isSet;
    bool m_firewall_action_isValid;

    QList<OAIFlowTag> m_flow_tag;
    bool m_flow_tag_isSet;
    bool m_flow_tag_isValid;

    OAIPortRange m_port;
    bool m_port_isSet;
    bool m_port_isValid;

    OAIProtocol m_protocol;
    bool m_protocol_isSet;
    bool m_protocol_isValid;

    OAIReference m_source_cluster;
    bool m_source_cluster_isSet;
    bool m_source_cluster_isValid;

    OAIReference m_source_datacenter;
    bool m_source_datacenter_isSet;
    bool m_source_datacenter_isValid;

    QList<OAIReference> m_source_folders;
    bool m_source_folders_isSet;
    bool m_source_folders_isValid;

    OAIReference m_source_host;
    bool m_source_host_isSet;
    bool m_source_host_isValid;

    OAIIpV4Address m_source_ip;
    bool m_source_ip_isSet;
    bool m_source_ip_isValid;

    QList<OAIReference> m_source_ip_sets;
    bool m_source_ip_sets_isSet;
    bool m_source_ip_sets_isValid;

    OAIReference m_source_l2_network;
    bool m_source_l2_network_isSet;
    bool m_source_l2_network_isValid;

    OAIReference m_source_resource_pool;
    bool m_source_resource_pool_isSet;
    bool m_source_resource_pool_isValid;

    QList<OAIReference> m_source_security_groups;
    bool m_source_security_groups_isSet;
    bool m_source_security_groups_isValid;

    QList<OAIReference> m_source_security_tags;
    bool m_source_security_tags_isSet;
    bool m_source_security_tags_isValid;

    OAIReference m_source_vm;
    bool m_source_vm_isSet;
    bool m_source_vm_isValid;

    QList<QString> m_source_vm_tags;
    bool m_source_vm_tags_isSet;
    bool m_source_vm_tags_isValid;

    OAIReference m_source_vnic;
    bool m_source_vnic_isSet;
    bool m_source_vnic_isValid;

    OAIReference m_source_vpc;
    bool m_source_vpc_isSet;
    bool m_source_vpc_isValid;

    OAIFlowTrafficType m_traffic_type;
    bool m_traffic_type_isSet;
    bool m_traffic_type_isValid;

    bool m_within_host;
    bool m_within_host_isSet;
    bool m_within_host_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFlow)

#endif // OAIFlow_H
