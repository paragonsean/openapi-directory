/**
 * vRealize Network Insight API Reference
 * vRealize Network Insight API Reference
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICluster.h
 *
 * 
 */

#ifndef OAICluster_H
#define OAICluster_H

#include <QJsonObject>

#include "OAIBaseEntity.h"
#include "OAIEntityType.h"
#include "OAIReference.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIReference;

class OAICluster : public OAIObject {
public:
    OAICluster();
    OAICluster(QString json);
    ~OAICluster() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEntityId() const;
    void setEntityId(const QString &entity_id);
    bool is_entity_id_Set() const;
    bool is_entity_id_Valid() const;

    OAIEntityType getEntityType() const;
    void setEntityType(const OAIEntityType &entity_type);
    bool is_entity_type_Set() const;
    bool is_entity_type_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIReference getNsxManager() const;
    void setNsxManager(const OAIReference &nsx_manager);
    bool is_nsx_manager_Set() const;
    bool is_nsx_manager_Valid() const;

    qint32 getNumCpuCores() const;
    void setNumCpuCores(const qint32 &num_cpu_cores);
    bool is_num_cpu_cores_Set() const;
    bool is_num_cpu_cores_Valid() const;

    qint32 getNumDatastores() const;
    void setNumDatastores(const qint32 &num_datastores);
    bool is_num_datastores_Set() const;
    bool is_num_datastores_Valid() const;

    qint32 getNumHosts() const;
    void setNumHosts(const qint32 &num_hosts);
    bool is_num_hosts_Set() const;
    bool is_num_hosts_Valid() const;

    qint32 getTotalCpus() const;
    void setTotalCpus(const qint32 &total_cpus);
    bool is_total_cpus_Set() const;
    bool is_total_cpus_Valid() const;

    qint64 getTotalMemory() const;
    void setTotalMemory(const qint64 &total_memory);
    bool is_total_memory_Set() const;
    bool is_total_memory_Valid() const;

    OAIReference getVcenterManager() const;
    void setVcenterManager(const OAIReference &vcenter_manager);
    bool is_vcenter_manager_Set() const;
    bool is_vcenter_manager_Valid() const;

    QString getVendorId() const;
    void setVendorId(const QString &vendor_id);
    bool is_vendor_id_Set() const;
    bool is_vendor_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_entity_id;
    bool m_entity_id_isSet;
    bool m_entity_id_isValid;

    OAIEntityType m_entity_type;
    bool m_entity_type_isSet;
    bool m_entity_type_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIReference m_nsx_manager;
    bool m_nsx_manager_isSet;
    bool m_nsx_manager_isValid;

    qint32 m_num_cpu_cores;
    bool m_num_cpu_cores_isSet;
    bool m_num_cpu_cores_isValid;

    qint32 m_num_datastores;
    bool m_num_datastores_isSet;
    bool m_num_datastores_isValid;

    qint32 m_num_hosts;
    bool m_num_hosts_isSet;
    bool m_num_hosts_isValid;

    qint32 m_total_cpus;
    bool m_total_cpus_isSet;
    bool m_total_cpus_isValid;

    qint64 m_total_memory;
    bool m_total_memory_isSet;
    bool m_total_memory_isValid;

    OAIReference m_vcenter_manager;
    bool m_vcenter_manager_isSet;
    bool m_vcenter_manager_isValid;

    QString m_vendor_id;
    bool m_vendor_id_isSet;
    bool m_vendor_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICluster)

#endif // OAICluster_H
