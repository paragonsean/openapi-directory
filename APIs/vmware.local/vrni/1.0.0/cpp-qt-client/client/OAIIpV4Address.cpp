/**
 * vRealize Network Insight API Reference
 * vRealize Network Insight API Reference
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIpV4Address.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIpV4Address::OAIIpV4Address(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIpV4Address::OAIIpV4Address() {
    this->initializeModel();
}

OAIIpV4Address::~OAIIpV4Address() {}

void OAIIpV4Address::initializeModel() {

    m_ip_address_isSet = false;
    m_ip_address_isValid = false;

    m_netmask_isSet = false;
    m_netmask_isValid = false;

    m_network_address_isSet = false;
    m_network_address_isValid = false;
}

void OAIIpV4Address::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIpV4Address::fromJsonObject(QJsonObject json) {

    m_ip_address_isValid = ::OpenAPI::fromJsonValue(m_ip_address, json[QString("ip_address")]);
    m_ip_address_isSet = !json[QString("ip_address")].isNull() && m_ip_address_isValid;

    m_netmask_isValid = ::OpenAPI::fromJsonValue(m_netmask, json[QString("netmask")]);
    m_netmask_isSet = !json[QString("netmask")].isNull() && m_netmask_isValid;

    m_network_address_isValid = ::OpenAPI::fromJsonValue(m_network_address, json[QString("network_address")]);
    m_network_address_isSet = !json[QString("network_address")].isNull() && m_network_address_isValid;
}

QString OAIIpV4Address::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIpV4Address::asJsonObject() const {
    QJsonObject obj;
    if (m_ip_address_isSet) {
        obj.insert(QString("ip_address"), ::OpenAPI::toJsonValue(m_ip_address));
    }
    if (m_netmask_isSet) {
        obj.insert(QString("netmask"), ::OpenAPI::toJsonValue(m_netmask));
    }
    if (m_network_address_isSet) {
        obj.insert(QString("network_address"), ::OpenAPI::toJsonValue(m_network_address));
    }
    return obj;
}

QString OAIIpV4Address::getIpAddress() const {
    return m_ip_address;
}
void OAIIpV4Address::setIpAddress(const QString &ip_address) {
    m_ip_address = ip_address;
    m_ip_address_isSet = true;
}

bool OAIIpV4Address::is_ip_address_Set() const{
    return m_ip_address_isSet;
}

bool OAIIpV4Address::is_ip_address_Valid() const{
    return m_ip_address_isValid;
}

QString OAIIpV4Address::getNetmask() const {
    return m_netmask;
}
void OAIIpV4Address::setNetmask(const QString &netmask) {
    m_netmask = netmask;
    m_netmask_isSet = true;
}

bool OAIIpV4Address::is_netmask_Set() const{
    return m_netmask_isSet;
}

bool OAIIpV4Address::is_netmask_Valid() const{
    return m_netmask_isValid;
}

QString OAIIpV4Address::getNetworkAddress() const {
    return m_network_address;
}
void OAIIpV4Address::setNetworkAddress(const QString &network_address) {
    m_network_address = network_address;
    m_network_address_isSet = true;
}

bool OAIIpV4Address::is_network_address_Set() const{
    return m_network_address_isSet;
}

bool OAIIpV4Address::is_network_address_Valid() const{
    return m_network_address_isValid;
}

bool OAIIpV4Address::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ip_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_netmask_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_network_address_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIpV4Address::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
