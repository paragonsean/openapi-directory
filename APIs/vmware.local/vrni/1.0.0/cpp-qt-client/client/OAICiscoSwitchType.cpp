/**
 * vRealize Network Insight API Reference
 * vRealize Network Insight API Reference
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICiscoSwitchType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICiscoSwitchType::OAICiscoSwitchType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICiscoSwitchType::OAICiscoSwitchType() {
    this->initializeModel();
}

OAICiscoSwitchType::~OAICiscoSwitchType() {}

void OAICiscoSwitchType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAICiscoSwitchType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAICiscoSwitchType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("CATALYST_3000", Qt::CaseInsensitive) == 0) {
        m_value = eOAICiscoSwitchType::CATALYST_3000;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CATALYST_4500", Qt::CaseInsensitive) == 0) {
        m_value = eOAICiscoSwitchType::CATALYST_4500;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CATALYST_6500", Qt::CaseInsensitive) == 0) {
        m_value = eOAICiscoSwitchType::CATALYST_6500;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NEXUS_5K", Qt::CaseInsensitive) == 0) {
        m_value = eOAICiscoSwitchType::NEXUS_5K;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NEXUS_7K", Qt::CaseInsensitive) == 0) {
        m_value = eOAICiscoSwitchType::NEXUS_7K;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NEXUS_9K", Qt::CaseInsensitive) == 0) {
        m_value = eOAICiscoSwitchType::NEXUS_9K;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAICiscoSwitchType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAICiscoSwitchType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAICiscoSwitchType::CATALYST_3000:
            val = "CATALYST_3000";
            break;
        case eOAICiscoSwitchType::CATALYST_4500:
            val = "CATALYST_4500";
            break;
        case eOAICiscoSwitchType::CATALYST_6500:
            val = "CATALYST_6500";
            break;
        case eOAICiscoSwitchType::NEXUS_5K:
            val = "NEXUS_5K";
            break;
        case eOAICiscoSwitchType::NEXUS_7K:
            val = "NEXUS_7K";
            break;
        case eOAICiscoSwitchType::NEXUS_9K:
            val = "NEXUS_9K";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAICiscoSwitchType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAICiscoSwitchType::eOAICiscoSwitchType OAICiscoSwitchType::getValue() const {
    return m_value;
}

void OAICiscoSwitchType::setValue(const OAICiscoSwitchType::eOAICiscoSwitchType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAICiscoSwitchType::isSet() const {
    
    return m_value_isSet;
}

bool OAICiscoSwitchType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
