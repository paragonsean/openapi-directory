/**
 * vRealize Network Insight API Reference
 * vRealize Network Insight API Reference
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMicroSecGroup.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMicroSecGroup::OAIMicroSecGroup(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMicroSecGroup::OAIMicroSecGroup() {
    this->initializeModel();
}

OAIMicroSecGroup::~OAIMicroSecGroup() {}

void OAIMicroSecGroup::initializeModel() {

    m_entity_isSet = false;
    m_entity_isValid = false;
}

void OAIMicroSecGroup::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMicroSecGroup::fromJsonObject(QJsonObject json) {

    m_entity_isValid = ::OpenAPI::fromJsonValue(m_entity, json[QString("entity")]);
    m_entity_isSet = !json[QString("entity")].isNull() && m_entity_isValid;
}

QString OAIMicroSecGroup::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMicroSecGroup::asJsonObject() const {
    QJsonObject obj;
    if (m_entity.isSet()) {
        obj.insert(QString("entity"), ::OpenAPI::toJsonValue(m_entity));
    }
    return obj;
}

OAIReference OAIMicroSecGroup::getEntity() const {
    return m_entity;
}
void OAIMicroSecGroup::setEntity(const OAIReference &entity) {
    m_entity = entity;
    m_entity_isSet = true;
}

bool OAIMicroSecGroup::is_entity_Set() const{
    return m_entity_isSet;
}

bool OAIMicroSecGroup::is_entity_Valid() const{
    return m_entity_isValid;
}

bool OAIMicroSecGroup::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_entity.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMicroSecGroup::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
