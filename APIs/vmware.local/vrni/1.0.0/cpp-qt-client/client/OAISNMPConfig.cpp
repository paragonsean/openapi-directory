/**
 * vRealize Network Insight API Reference
 * vRealize Network Insight API Reference
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISNMPConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISNMPConfig::OAISNMPConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISNMPConfig::OAISNMPConfig() {
    this->initializeModel();
}

OAISNMPConfig::~OAISNMPConfig() {}

void OAISNMPConfig::initializeModel() {

    m_config_snmp_2c_isSet = false;
    m_config_snmp_2c_isValid = false;

    m_config_snmp_3_isSet = false;
    m_config_snmp_3_isValid = false;

    m_snmp_enabled_isSet = false;
    m_snmp_enabled_isValid = false;

    m_snmp_version_isSet = false;
    m_snmp_version_isValid = false;
}

void OAISNMPConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISNMPConfig::fromJsonObject(QJsonObject json) {

    m_config_snmp_2c_isValid = ::OpenAPI::fromJsonValue(m_config_snmp_2c, json[QString("config_snmp_2c")]);
    m_config_snmp_2c_isSet = !json[QString("config_snmp_2c")].isNull() && m_config_snmp_2c_isValid;

    m_config_snmp_3_isValid = ::OpenAPI::fromJsonValue(m_config_snmp_3, json[QString("config_snmp_3")]);
    m_config_snmp_3_isSet = !json[QString("config_snmp_3")].isNull() && m_config_snmp_3_isValid;

    m_snmp_enabled_isValid = ::OpenAPI::fromJsonValue(m_snmp_enabled, json[QString("snmp_enabled")]);
    m_snmp_enabled_isSet = !json[QString("snmp_enabled")].isNull() && m_snmp_enabled_isValid;

    m_snmp_version_isValid = ::OpenAPI::fromJsonValue(m_snmp_version, json[QString("snmp_version")]);
    m_snmp_version_isSet = !json[QString("snmp_version")].isNull() && m_snmp_version_isValid;
}

QString OAISNMPConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISNMPConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_config_snmp_2c.isSet()) {
        obj.insert(QString("config_snmp_2c"), ::OpenAPI::toJsonValue(m_config_snmp_2c));
    }
    if (m_config_snmp_3.isSet()) {
        obj.insert(QString("config_snmp_3"), ::OpenAPI::toJsonValue(m_config_snmp_3));
    }
    if (m_snmp_enabled_isSet) {
        obj.insert(QString("snmp_enabled"), ::OpenAPI::toJsonValue(m_snmp_enabled));
    }
    if (m_snmp_version_isSet) {
        obj.insert(QString("snmp_version"), ::OpenAPI::toJsonValue(m_snmp_version));
    }
    return obj;
}

OAISNMP2cConfig OAISNMPConfig::getConfigSnmp2c() const {
    return m_config_snmp_2c;
}
void OAISNMPConfig::setConfigSnmp2c(const OAISNMP2cConfig &config_snmp_2c) {
    m_config_snmp_2c = config_snmp_2c;
    m_config_snmp_2c_isSet = true;
}

bool OAISNMPConfig::is_config_snmp_2c_Set() const{
    return m_config_snmp_2c_isSet;
}

bool OAISNMPConfig::is_config_snmp_2c_Valid() const{
    return m_config_snmp_2c_isValid;
}

OAISNMP3Config OAISNMPConfig::getConfigSnmp3() const {
    return m_config_snmp_3;
}
void OAISNMPConfig::setConfigSnmp3(const OAISNMP3Config &config_snmp_3) {
    m_config_snmp_3 = config_snmp_3;
    m_config_snmp_3_isSet = true;
}

bool OAISNMPConfig::is_config_snmp_3_Set() const{
    return m_config_snmp_3_isSet;
}

bool OAISNMPConfig::is_config_snmp_3_Valid() const{
    return m_config_snmp_3_isValid;
}

bool OAISNMPConfig::isSnmpEnabled() const {
    return m_snmp_enabled;
}
void OAISNMPConfig::setSnmpEnabled(const bool &snmp_enabled) {
    m_snmp_enabled = snmp_enabled;
    m_snmp_enabled_isSet = true;
}

bool OAISNMPConfig::is_snmp_enabled_Set() const{
    return m_snmp_enabled_isSet;
}

bool OAISNMPConfig::is_snmp_enabled_Valid() const{
    return m_snmp_enabled_isValid;
}

QString OAISNMPConfig::getSnmpVersion() const {
    return m_snmp_version;
}
void OAISNMPConfig::setSnmpVersion(const QString &snmp_version) {
    m_snmp_version = snmp_version;
    m_snmp_version_isSet = true;
}

bool OAISNMPConfig::is_snmp_version_Set() const{
    return m_snmp_version_isSet;
}

bool OAISNMPConfig::is_snmp_version_Valid() const{
    return m_snmp_version_isValid;
}

bool OAISNMPConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_config_snmp_2c.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_config_snmp_3.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_snmp_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_snmp_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISNMPConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
