/**
 * vRealize Network Insight API Reference
 * vRealize Network Insight API Reference
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRecommendedRules.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRecommendedRules::OAIRecommendedRules(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRecommendedRules::OAIRecommendedRules() {
    this->initializeModel();
}

OAIRecommendedRules::~OAIRecommendedRules() {}

void OAIRecommendedRules::initializeModel() {

    m_results_isSet = false;
    m_results_isValid = false;

    m_time_range_isSet = false;
    m_time_range_isValid = false;
}

void OAIRecommendedRules::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRecommendedRules::fromJsonObject(QJsonObject json) {

    m_results_isValid = ::OpenAPI::fromJsonValue(m_results, json[QString("results")]);
    m_results_isSet = !json[QString("results")].isNull() && m_results_isValid;

    m_time_range_isValid = ::OpenAPI::fromJsonValue(m_time_range, json[QString("time_range")]);
    m_time_range_isSet = !json[QString("time_range")].isNull() && m_time_range_isValid;
}

QString OAIRecommendedRules::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRecommendedRules::asJsonObject() const {
    QJsonObject obj;
    if (m_results.size() > 0) {
        obj.insert(QString("results"), ::OpenAPI::toJsonValue(m_results));
    }
    if (m_time_range.isSet()) {
        obj.insert(QString("time_range"), ::OpenAPI::toJsonValue(m_time_range));
    }
    return obj;
}

QList<OAIRecommendedRule> OAIRecommendedRules::getResults() const {
    return m_results;
}
void OAIRecommendedRules::setResults(const QList<OAIRecommendedRule> &results) {
    m_results = results;
    m_results_isSet = true;
}

bool OAIRecommendedRules::is_results_Set() const{
    return m_results_isSet;
}

bool OAIRecommendedRules::is_results_Valid() const{
    return m_results_isValid;
}

OAITimeRange OAIRecommendedRules::getTimeRange() const {
    return m_time_range;
}
void OAIRecommendedRules::setTimeRange(const OAITimeRange &time_range) {
    m_time_range = time_range;
    m_time_range_isSet = true;
}

bool OAIRecommendedRules::is_time_range_Set() const{
    return m_time_range_isSet;
}

bool OAIRecommendedRules::is_time_range_Valid() const{
    return m_time_range_isValid;
}

bool OAIRecommendedRules::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_results.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_range.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRecommendedRules::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
