/**
 * vRealize Network Insight API Reference
 * vRealize Network Insight API Reference
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINamesResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINamesResponse::OAINamesResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINamesResponse::OAINamesResponse() {
    this->initializeModel();
}

OAINamesResponse::~OAINamesResponse() {}

void OAINamesResponse::initializeModel() {

    m_entities_isSet = false;
    m_entities_isValid = false;
}

void OAINamesResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINamesResponse::fromJsonObject(QJsonObject json) {

    m_entities_isValid = ::OpenAPI::fromJsonValue(m_entities, json[QString("entities")]);
    m_entities_isSet = !json[QString("entities")].isNull() && m_entities_isValid;
}

QString OAINamesResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINamesResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_entities.size() > 0) {
        obj.insert(QString("entities"), ::OpenAPI::toJsonValue(m_entities));
    }
    return obj;
}

QList<OAIEntityName> OAINamesResponse::getEntities() const {
    return m_entities;
}
void OAINamesResponse::setEntities(const QList<OAIEntityName> &entities) {
    m_entities = entities;
    m_entities_isSet = true;
}

bool OAINamesResponse::is_entities_Set() const{
    return m_entities_isSet;
}

bool OAINamesResponse::is_entities_Valid() const{
    return m_entities_isValid;
}

bool OAINamesResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_entities.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINamesResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
