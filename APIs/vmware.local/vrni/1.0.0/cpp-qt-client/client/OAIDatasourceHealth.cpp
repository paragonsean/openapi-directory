/**
 * vRealize Network Insight API Reference
 * vRealize Network Insight API Reference
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDatasourceHealth.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDatasourceHealth::OAIDatasourceHealth(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDatasourceHealth::OAIDatasourceHealth() {
    this->initializeModel();
}

OAIDatasourceHealth::~OAIDatasourceHealth() {}

void OAIDatasourceHealth::initializeModel() {

    m_health_error_code_isSet = false;
    m_health_error_code_isValid = false;

    m_health_message_isSet = false;
    m_health_message_isValid = false;

    m_health_status_isSet = false;
    m_health_status_isValid = false;
}

void OAIDatasourceHealth::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDatasourceHealth::fromJsonObject(QJsonObject json) {

    m_health_error_code_isValid = ::OpenAPI::fromJsonValue(m_health_error_code, json[QString("health_error_code")]);
    m_health_error_code_isSet = !json[QString("health_error_code")].isNull() && m_health_error_code_isValid;

    m_health_message_isValid = ::OpenAPI::fromJsonValue(m_health_message, json[QString("health_message")]);
    m_health_message_isSet = !json[QString("health_message")].isNull() && m_health_message_isValid;

    m_health_status_isValid = ::OpenAPI::fromJsonValue(m_health_status, json[QString("health_status")]);
    m_health_status_isSet = !json[QString("health_status")].isNull() && m_health_status_isValid;
}

QString OAIDatasourceHealth::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDatasourceHealth::asJsonObject() const {
    QJsonObject obj;
    if (m_health_error_code_isSet) {
        obj.insert(QString("health_error_code"), ::OpenAPI::toJsonValue(m_health_error_code));
    }
    if (m_health_message_isSet) {
        obj.insert(QString("health_message"), ::OpenAPI::toJsonValue(m_health_message));
    }
    if (m_health_status_isSet) {
        obj.insert(QString("health_status"), ::OpenAPI::toJsonValue(m_health_status));
    }
    return obj;
}

QString OAIDatasourceHealth::getHealthErrorCode() const {
    return m_health_error_code;
}
void OAIDatasourceHealth::setHealthErrorCode(const QString &health_error_code) {
    m_health_error_code = health_error_code;
    m_health_error_code_isSet = true;
}

bool OAIDatasourceHealth::is_health_error_code_Set() const{
    return m_health_error_code_isSet;
}

bool OAIDatasourceHealth::is_health_error_code_Valid() const{
    return m_health_error_code_isValid;
}

QString OAIDatasourceHealth::getHealthMessage() const {
    return m_health_message;
}
void OAIDatasourceHealth::setHealthMessage(const QString &health_message) {
    m_health_message = health_message;
    m_health_message_isSet = true;
}

bool OAIDatasourceHealth::is_health_message_Set() const{
    return m_health_message_isSet;
}

bool OAIDatasourceHealth::is_health_message_Valid() const{
    return m_health_message_isValid;
}

QString OAIDatasourceHealth::getHealthStatus() const {
    return m_health_status;
}
void OAIDatasourceHealth::setHealthStatus(const QString &health_status) {
    m_health_status = health_status;
    m_health_status_isSet = true;
}

bool OAIDatasourceHealth::is_health_status_Set() const{
    return m_health_status_isSet;
}

bool OAIDatasourceHealth::is_health_status_Valid() const{
    return m_health_status_isValid;
}

bool OAIDatasourceHealth::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_health_error_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_health_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_health_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDatasourceHealth::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
