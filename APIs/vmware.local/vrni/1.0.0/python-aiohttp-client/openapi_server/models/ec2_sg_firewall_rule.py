# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.base_firewall_rule import BaseFirewallRule
from openapi_server.models.ec2_firewall_direction import EC2FirewallDirection
from openapi_server.models.entity_type import EntityType
from openapi_server.models.firewall_action import FirewallAction
from openapi_server.models.port_range import PortRange
from openapi_server.models.reference import Reference
from openapi_server import util


class EC2SGFirewallRule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entity_id: str=None, entity_type: EntityType=None, name: str=None, action: FirewallAction=None, destination_any: bool=None, destination_inversion: bool=None, destinations: List[Reference]=None, disabled: bool=None, port_ranges: List[PortRange]=None, rule_id: str=None, section_id: str=None, section_name: str=None, sequence_number: int=None, service_any: bool=None, services: List[Reference]=None, source_any: bool=None, source_inversion: bool=None, sources: List[Reference]=None, direction: EC2FirewallDirection=None, owner_security_group: Reference=None, vpc: Reference=None):
        """EC2SGFirewallRule - a model defined in OpenAPI

        :param entity_id: The entity_id of this EC2SGFirewallRule.
        :param entity_type: The entity_type of this EC2SGFirewallRule.
        :param name: The name of this EC2SGFirewallRule.
        :param action: The action of this EC2SGFirewallRule.
        :param destination_any: The destination_any of this EC2SGFirewallRule.
        :param destination_inversion: The destination_inversion of this EC2SGFirewallRule.
        :param destinations: The destinations of this EC2SGFirewallRule.
        :param disabled: The disabled of this EC2SGFirewallRule.
        :param port_ranges: The port_ranges of this EC2SGFirewallRule.
        :param rule_id: The rule_id of this EC2SGFirewallRule.
        :param section_id: The section_id of this EC2SGFirewallRule.
        :param section_name: The section_name of this EC2SGFirewallRule.
        :param sequence_number: The sequence_number of this EC2SGFirewallRule.
        :param service_any: The service_any of this EC2SGFirewallRule.
        :param services: The services of this EC2SGFirewallRule.
        :param source_any: The source_any of this EC2SGFirewallRule.
        :param source_inversion: The source_inversion of this EC2SGFirewallRule.
        :param sources: The sources of this EC2SGFirewallRule.
        :param direction: The direction of this EC2SGFirewallRule.
        :param owner_security_group: The owner_security_group of this EC2SGFirewallRule.
        :param vpc: The vpc of this EC2SGFirewallRule.
        """
        self.openapi_types = {
            'entity_id': str,
            'entity_type': EntityType,
            'name': str,
            'action': FirewallAction,
            'destination_any': bool,
            'destination_inversion': bool,
            'destinations': List[Reference],
            'disabled': bool,
            'port_ranges': List[PortRange],
            'rule_id': str,
            'section_id': str,
            'section_name': str,
            'sequence_number': int,
            'service_any': bool,
            'services': List[Reference],
            'source_any': bool,
            'source_inversion': bool,
            'sources': List[Reference],
            'direction': EC2FirewallDirection,
            'owner_security_group': Reference,
            'vpc': Reference
        }

        self.attribute_map = {
            'entity_id': 'entity_id',
            'entity_type': 'entity_type',
            'name': 'name',
            'action': 'action',
            'destination_any': 'destination_any',
            'destination_inversion': 'destination_inversion',
            'destinations': 'destinations',
            'disabled': 'disabled',
            'port_ranges': 'port_ranges',
            'rule_id': 'rule_id',
            'section_id': 'section_id',
            'section_name': 'section_name',
            'sequence_number': 'sequence_number',
            'service_any': 'service_any',
            'services': 'services',
            'source_any': 'source_any',
            'source_inversion': 'source_inversion',
            'sources': 'sources',
            'direction': 'direction',
            'owner_security_group': 'owner_security_group',
            'vpc': 'vpc'
        }

        self._entity_id = entity_id
        self._entity_type = entity_type
        self._name = name
        self._action = action
        self._destination_any = destination_any
        self._destination_inversion = destination_inversion
        self._destinations = destinations
        self._disabled = disabled
        self._port_ranges = port_ranges
        self._rule_id = rule_id
        self._section_id = section_id
        self._section_name = section_name
        self._sequence_number = sequence_number
        self._service_any = service_any
        self._services = services
        self._source_any = source_any
        self._source_inversion = source_inversion
        self._sources = sources
        self._direction = direction
        self._owner_security_group = owner_security_group
        self._vpc = vpc

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EC2SGFirewallRule':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EC2SGFirewallRule of this EC2SGFirewallRule.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entity_id(self):
        """Gets the entity_id of this EC2SGFirewallRule.


        :return: The entity_id of this EC2SGFirewallRule.
        :rtype: str
        """
        return self._entity_id

    @entity_id.setter
    def entity_id(self, entity_id):
        """Sets the entity_id of this EC2SGFirewallRule.


        :param entity_id: The entity_id of this EC2SGFirewallRule.
        :type entity_id: str
        """

        self._entity_id = entity_id

    @property
    def entity_type(self):
        """Gets the entity_type of this EC2SGFirewallRule.


        :return: The entity_type of this EC2SGFirewallRule.
        :rtype: EntityType
        """
        return self._entity_type

    @entity_type.setter
    def entity_type(self, entity_type):
        """Sets the entity_type of this EC2SGFirewallRule.


        :param entity_type: The entity_type of this EC2SGFirewallRule.
        :type entity_type: EntityType
        """

        self._entity_type = entity_type

    @property
    def name(self):
        """Gets the name of this EC2SGFirewallRule.


        :return: The name of this EC2SGFirewallRule.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this EC2SGFirewallRule.


        :param name: The name of this EC2SGFirewallRule.
        :type name: str
        """

        self._name = name

    @property
    def action(self):
        """Gets the action of this EC2SGFirewallRule.


        :return: The action of this EC2SGFirewallRule.
        :rtype: FirewallAction
        """
        return self._action

    @action.setter
    def action(self, action):
        """Sets the action of this EC2SGFirewallRule.


        :param action: The action of this EC2SGFirewallRule.
        :type action: FirewallAction
        """

        self._action = action

    @property
    def destination_any(self):
        """Gets the destination_any of this EC2SGFirewallRule.


        :return: The destination_any of this EC2SGFirewallRule.
        :rtype: bool
        """
        return self._destination_any

    @destination_any.setter
    def destination_any(self, destination_any):
        """Sets the destination_any of this EC2SGFirewallRule.


        :param destination_any: The destination_any of this EC2SGFirewallRule.
        :type destination_any: bool
        """

        self._destination_any = destination_any

    @property
    def destination_inversion(self):
        """Gets the destination_inversion of this EC2SGFirewallRule.


        :return: The destination_inversion of this EC2SGFirewallRule.
        :rtype: bool
        """
        return self._destination_inversion

    @destination_inversion.setter
    def destination_inversion(self, destination_inversion):
        """Sets the destination_inversion of this EC2SGFirewallRule.


        :param destination_inversion: The destination_inversion of this EC2SGFirewallRule.
        :type destination_inversion: bool
        """

        self._destination_inversion = destination_inversion

    @property
    def destinations(self):
        """Gets the destinations of this EC2SGFirewallRule.


        :return: The destinations of this EC2SGFirewallRule.
        :rtype: List[Reference]
        """
        return self._destinations

    @destinations.setter
    def destinations(self, destinations):
        """Sets the destinations of this EC2SGFirewallRule.


        :param destinations: The destinations of this EC2SGFirewallRule.
        :type destinations: List[Reference]
        """

        self._destinations = destinations

    @property
    def disabled(self):
        """Gets the disabled of this EC2SGFirewallRule.


        :return: The disabled of this EC2SGFirewallRule.
        :rtype: bool
        """
        return self._disabled

    @disabled.setter
    def disabled(self, disabled):
        """Sets the disabled of this EC2SGFirewallRule.


        :param disabled: The disabled of this EC2SGFirewallRule.
        :type disabled: bool
        """

        self._disabled = disabled

    @property
    def port_ranges(self):
        """Gets the port_ranges of this EC2SGFirewallRule.


        :return: The port_ranges of this EC2SGFirewallRule.
        :rtype: List[PortRange]
        """
        return self._port_ranges

    @port_ranges.setter
    def port_ranges(self, port_ranges):
        """Sets the port_ranges of this EC2SGFirewallRule.


        :param port_ranges: The port_ranges of this EC2SGFirewallRule.
        :type port_ranges: List[PortRange]
        """

        self._port_ranges = port_ranges

    @property
    def rule_id(self):
        """Gets the rule_id of this EC2SGFirewallRule.


        :return: The rule_id of this EC2SGFirewallRule.
        :rtype: str
        """
        return self._rule_id

    @rule_id.setter
    def rule_id(self, rule_id):
        """Sets the rule_id of this EC2SGFirewallRule.


        :param rule_id: The rule_id of this EC2SGFirewallRule.
        :type rule_id: str
        """

        self._rule_id = rule_id

    @property
    def section_id(self):
        """Gets the section_id of this EC2SGFirewallRule.


        :return: The section_id of this EC2SGFirewallRule.
        :rtype: str
        """
        return self._section_id

    @section_id.setter
    def section_id(self, section_id):
        """Sets the section_id of this EC2SGFirewallRule.


        :param section_id: The section_id of this EC2SGFirewallRule.
        :type section_id: str
        """

        self._section_id = section_id

    @property
    def section_name(self):
        """Gets the section_name of this EC2SGFirewallRule.


        :return: The section_name of this EC2SGFirewallRule.
        :rtype: str
        """
        return self._section_name

    @section_name.setter
    def section_name(self, section_name):
        """Sets the section_name of this EC2SGFirewallRule.


        :param section_name: The section_name of this EC2SGFirewallRule.
        :type section_name: str
        """

        self._section_name = section_name

    @property
    def sequence_number(self):
        """Gets the sequence_number of this EC2SGFirewallRule.


        :return: The sequence_number of this EC2SGFirewallRule.
        :rtype: int
        """
        return self._sequence_number

    @sequence_number.setter
    def sequence_number(self, sequence_number):
        """Sets the sequence_number of this EC2SGFirewallRule.


        :param sequence_number: The sequence_number of this EC2SGFirewallRule.
        :type sequence_number: int
        """

        self._sequence_number = sequence_number

    @property
    def service_any(self):
        """Gets the service_any of this EC2SGFirewallRule.


        :return: The service_any of this EC2SGFirewallRule.
        :rtype: bool
        """
        return self._service_any

    @service_any.setter
    def service_any(self, service_any):
        """Sets the service_any of this EC2SGFirewallRule.


        :param service_any: The service_any of this EC2SGFirewallRule.
        :type service_any: bool
        """

        self._service_any = service_any

    @property
    def services(self):
        """Gets the services of this EC2SGFirewallRule.


        :return: The services of this EC2SGFirewallRule.
        :rtype: List[Reference]
        """
        return self._services

    @services.setter
    def services(self, services):
        """Sets the services of this EC2SGFirewallRule.


        :param services: The services of this EC2SGFirewallRule.
        :type services: List[Reference]
        """

        self._services = services

    @property
    def source_any(self):
        """Gets the source_any of this EC2SGFirewallRule.


        :return: The source_any of this EC2SGFirewallRule.
        :rtype: bool
        """
        return self._source_any

    @source_any.setter
    def source_any(self, source_any):
        """Sets the source_any of this EC2SGFirewallRule.


        :param source_any: The source_any of this EC2SGFirewallRule.
        :type source_any: bool
        """

        self._source_any = source_any

    @property
    def source_inversion(self):
        """Gets the source_inversion of this EC2SGFirewallRule.


        :return: The source_inversion of this EC2SGFirewallRule.
        :rtype: bool
        """
        return self._source_inversion

    @source_inversion.setter
    def source_inversion(self, source_inversion):
        """Sets the source_inversion of this EC2SGFirewallRule.


        :param source_inversion: The source_inversion of this EC2SGFirewallRule.
        :type source_inversion: bool
        """

        self._source_inversion = source_inversion

    @property
    def sources(self):
        """Gets the sources of this EC2SGFirewallRule.


        :return: The sources of this EC2SGFirewallRule.
        :rtype: List[Reference]
        """
        return self._sources

    @sources.setter
    def sources(self, sources):
        """Sets the sources of this EC2SGFirewallRule.


        :param sources: The sources of this EC2SGFirewallRule.
        :type sources: List[Reference]
        """

        self._sources = sources

    @property
    def direction(self):
        """Gets the direction of this EC2SGFirewallRule.


        :return: The direction of this EC2SGFirewallRule.
        :rtype: EC2FirewallDirection
        """
        return self._direction

    @direction.setter
    def direction(self, direction):
        """Sets the direction of this EC2SGFirewallRule.


        :param direction: The direction of this EC2SGFirewallRule.
        :type direction: EC2FirewallDirection
        """

        self._direction = direction

    @property
    def owner_security_group(self):
        """Gets the owner_security_group of this EC2SGFirewallRule.


        :return: The owner_security_group of this EC2SGFirewallRule.
        :rtype: Reference
        """
        return self._owner_security_group

    @owner_security_group.setter
    def owner_security_group(self, owner_security_group):
        """Sets the owner_security_group of this EC2SGFirewallRule.


        :param owner_security_group: The owner_security_group of this EC2SGFirewallRule.
        :type owner_security_group: Reference
        """

        self._owner_security_group = owner_security_group

    @property
    def vpc(self):
        """Gets the vpc of this EC2SGFirewallRule.


        :return: The vpc of this EC2SGFirewallRule.
        :rtype: Reference
        """
        return self._vpc

    @vpc.setter
    def vpc(self, vpc):
        """Sets the vpc of this EC2SGFirewallRule.


        :param vpc: The vpc of this EC2SGFirewallRule.
        :type vpc: Reference
        """

        self._vpc = vpc
