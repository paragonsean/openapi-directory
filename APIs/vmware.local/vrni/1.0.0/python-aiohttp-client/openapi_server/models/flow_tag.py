# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FlowTag(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    TAG_TRAFFIC_TYPE_UNKNOWN = 'TAG_TRAFFIC_TYPE_UNKNOWN'
    TAG_INTERNET_TRAFFIC = 'TAG_INTERNET_TRAFFIC'
    TAG_EAST_WEST_TRAFFIC = 'TAG_EAST_WEST_TRAFFIC'
    TAG_VM_VM_TRAFFIC = 'TAG_VM_VM_TRAFFIC'
    TAG_VM_PHY_TRAFFIC = 'TAG_VM_PHY_TRAFFIC'
    TAG_PHY_PHY_TRAFFIC = 'TAG_PHY_PHY_TRAFFIC'
    TAG_SRC_IP_VMKNIC = 'TAG_SRC_IP_VMKNIC'
    TAG_DST_IP_VMKNIC = 'TAG_DST_IP_VMKNIC'
    TAG_SRC_IP_VM = 'TAG_SRC_IP_VM'
    TAG_DST_IP_VM = 'TAG_DST_IP_VM'
    TAG_SRC_IP_INTERNET = 'TAG_SRC_IP_INTERNET'
    TAG_DST_IP_INTERNET = 'TAG_DST_IP_INTERNET'
    TAG_SRC_IP_PHYSICAL = 'TAG_SRC_IP_PHYSICAL'
    TAG_DST_IP_PHYSICAL = 'TAG_DST_IP_PHYSICAL'
    TAG_SAME_HOST = 'TAG_SAME_HOST'
    TAG_DIFF_HOST = 'TAG_DIFF_HOST'
    TAG_SHARED_SERVICE = 'TAG_SHARED_SERVICE'
    TAG_NOT_SHARED_SERVICE = 'TAG_NOT_SHARED_SERVICE'
    TAG_NETWORK_SWITCHED = 'TAG_NETWORK_SWITCHED'
    TAG_NETWORK_ROUTED = 'TAG_NETWORK_ROUTED'
    TAG_NETWORK_UNKNOWN = 'TAG_NETWORK_UNKNOWN'
    TAG_SRC_IP_VTEP = 'TAG_SRC_IP_VTEP'
    TAG_DST_IP_VTEP = 'TAG_DST_IP_VTEP'
    TAG_UNICAST = 'TAG_UNICAST'
    TAG_BROADCAST = 'TAG_BROADCAST'
    TAG_MULTICAST = 'TAG_MULTICAST'
    TAG_SRC_IP_LINK_LOCAL = 'TAG_SRC_IP_LINK_LOCAL'
    TAG_DST_IP_LINK_LOCAL = 'TAG_DST_IP_LINK_LOCAL'
    TAG_SRC_IP_CLASS_E = 'TAG_SRC_IP_CLASS_E'
    TAG_DST_IP_CLASS_E = 'TAG_DST_IP_CLASS_E'
    TAG_SRC_IP_CLASS_A_RESERVED = 'TAG_SRC_IP_CLASS_A_RESERVED'
    TAG_DST_IP_CLASS_A_RESERVED = 'TAG_DST_IP_CLASS_A_RESERVED'
    TAG_INVALID_IP_PACKETS = 'TAG_INVALID_IP_PACKETS'
    TAG_NOT_ANALYZED = 'TAG_NOT_ANALYZED'
    TAG_GENERIC_INTERNET_SRC_IP = 'TAG_GENERIC_INTERNET_SRC_IP'
    TAG_SNAT_DNAT_FLOW = 'TAG_SNAT_DNAT_FLOW'
    TAG_MULTINICS = 'TAG_MULTINICS'
    TAG_SRC_VC = 'TAG_SRC_VC'
    TAG_DST_VC = 'TAG_DST_VC'
    TAG_SRC_AWS = 'TAG_SRC_AWS'
    TAG_DST_AWS = 'TAG_DST_AWS'
    TAG_WITHIN_DC = 'TAG_WITHIN_DC'
    TAG_DIFF_DC = 'TAG_DIFF_DC'
    TAG_WITHIN_VPC = 'TAG_WITHIN_VPC'
    TAG_DIFF_VPC = 'TAG_DIFF_VPC'

    def __init__(self):
        """FlowTag - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FlowTag':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FlowTag of this FlowTag.
        """
        return util.deserialize_model(dikt, cls)
