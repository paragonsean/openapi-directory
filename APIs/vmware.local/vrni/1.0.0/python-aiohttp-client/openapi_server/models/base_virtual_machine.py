# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.base_entity import BaseEntity
from openapi_server.models.entity_type import EntityType
from openapi_server.models.ip_v4_address import IpV4Address
from openapi_server.models.reference import Reference
from openapi_server.models.rule_set import RuleSet
from openapi_server import util


class BaseVirtualMachine(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entity_id: str=None, entity_type: EntityType=None, name: str=None, default_gateway: str=None, destination_firewall_rules: List[RuleSet]=None, ip_addresses: List[IpV4Address]=None, ip_sets: List[Reference]=None, security_groups: List[Reference]=None, source_firewall_rules: List[RuleSet]=None, vnics: List[Reference]=None):
        """BaseVirtualMachine - a model defined in OpenAPI

        :param entity_id: The entity_id of this BaseVirtualMachine.
        :param entity_type: The entity_type of this BaseVirtualMachine.
        :param name: The name of this BaseVirtualMachine.
        :param default_gateway: The default_gateway of this BaseVirtualMachine.
        :param destination_firewall_rules: The destination_firewall_rules of this BaseVirtualMachine.
        :param ip_addresses: The ip_addresses of this BaseVirtualMachine.
        :param ip_sets: The ip_sets of this BaseVirtualMachine.
        :param security_groups: The security_groups of this BaseVirtualMachine.
        :param source_firewall_rules: The source_firewall_rules of this BaseVirtualMachine.
        :param vnics: The vnics of this BaseVirtualMachine.
        """
        self.openapi_types = {
            'entity_id': str,
            'entity_type': EntityType,
            'name': str,
            'default_gateway': str,
            'destination_firewall_rules': List[RuleSet],
            'ip_addresses': List[IpV4Address],
            'ip_sets': List[Reference],
            'security_groups': List[Reference],
            'source_firewall_rules': List[RuleSet],
            'vnics': List[Reference]
        }

        self.attribute_map = {
            'entity_id': 'entity_id',
            'entity_type': 'entity_type',
            'name': 'name',
            'default_gateway': 'default_gateway',
            'destination_firewall_rules': 'destination_firewall_rules',
            'ip_addresses': 'ip_addresses',
            'ip_sets': 'ip_sets',
            'security_groups': 'security_groups',
            'source_firewall_rules': 'source_firewall_rules',
            'vnics': 'vnics'
        }

        self._entity_id = entity_id
        self._entity_type = entity_type
        self._name = name
        self._default_gateway = default_gateway
        self._destination_firewall_rules = destination_firewall_rules
        self._ip_addresses = ip_addresses
        self._ip_sets = ip_sets
        self._security_groups = security_groups
        self._source_firewall_rules = source_firewall_rules
        self._vnics = vnics

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BaseVirtualMachine':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BaseVirtualMachine of this BaseVirtualMachine.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entity_id(self):
        """Gets the entity_id of this BaseVirtualMachine.


        :return: The entity_id of this BaseVirtualMachine.
        :rtype: str
        """
        return self._entity_id

    @entity_id.setter
    def entity_id(self, entity_id):
        """Sets the entity_id of this BaseVirtualMachine.


        :param entity_id: The entity_id of this BaseVirtualMachine.
        :type entity_id: str
        """

        self._entity_id = entity_id

    @property
    def entity_type(self):
        """Gets the entity_type of this BaseVirtualMachine.


        :return: The entity_type of this BaseVirtualMachine.
        :rtype: EntityType
        """
        return self._entity_type

    @entity_type.setter
    def entity_type(self, entity_type):
        """Sets the entity_type of this BaseVirtualMachine.


        :param entity_type: The entity_type of this BaseVirtualMachine.
        :type entity_type: EntityType
        """

        self._entity_type = entity_type

    @property
    def name(self):
        """Gets the name of this BaseVirtualMachine.


        :return: The name of this BaseVirtualMachine.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this BaseVirtualMachine.


        :param name: The name of this BaseVirtualMachine.
        :type name: str
        """

        self._name = name

    @property
    def default_gateway(self):
        """Gets the default_gateway of this BaseVirtualMachine.


        :return: The default_gateway of this BaseVirtualMachine.
        :rtype: str
        """
        return self._default_gateway

    @default_gateway.setter
    def default_gateway(self, default_gateway):
        """Sets the default_gateway of this BaseVirtualMachine.


        :param default_gateway: The default_gateway of this BaseVirtualMachine.
        :type default_gateway: str
        """

        self._default_gateway = default_gateway

    @property
    def destination_firewall_rules(self):
        """Gets the destination_firewall_rules of this BaseVirtualMachine.


        :return: The destination_firewall_rules of this BaseVirtualMachine.
        :rtype: List[RuleSet]
        """
        return self._destination_firewall_rules

    @destination_firewall_rules.setter
    def destination_firewall_rules(self, destination_firewall_rules):
        """Sets the destination_firewall_rules of this BaseVirtualMachine.


        :param destination_firewall_rules: The destination_firewall_rules of this BaseVirtualMachine.
        :type destination_firewall_rules: List[RuleSet]
        """

        self._destination_firewall_rules = destination_firewall_rules

    @property
    def ip_addresses(self):
        """Gets the ip_addresses of this BaseVirtualMachine.


        :return: The ip_addresses of this BaseVirtualMachine.
        :rtype: List[IpV4Address]
        """
        return self._ip_addresses

    @ip_addresses.setter
    def ip_addresses(self, ip_addresses):
        """Sets the ip_addresses of this BaseVirtualMachine.


        :param ip_addresses: The ip_addresses of this BaseVirtualMachine.
        :type ip_addresses: List[IpV4Address]
        """

        self._ip_addresses = ip_addresses

    @property
    def ip_sets(self):
        """Gets the ip_sets of this BaseVirtualMachine.


        :return: The ip_sets of this BaseVirtualMachine.
        :rtype: List[Reference]
        """
        return self._ip_sets

    @ip_sets.setter
    def ip_sets(self, ip_sets):
        """Sets the ip_sets of this BaseVirtualMachine.


        :param ip_sets: The ip_sets of this BaseVirtualMachine.
        :type ip_sets: List[Reference]
        """

        self._ip_sets = ip_sets

    @property
    def security_groups(self):
        """Gets the security_groups of this BaseVirtualMachine.


        :return: The security_groups of this BaseVirtualMachine.
        :rtype: List[Reference]
        """
        return self._security_groups

    @security_groups.setter
    def security_groups(self, security_groups):
        """Sets the security_groups of this BaseVirtualMachine.


        :param security_groups: The security_groups of this BaseVirtualMachine.
        :type security_groups: List[Reference]
        """

        self._security_groups = security_groups

    @property
    def source_firewall_rules(self):
        """Gets the source_firewall_rules of this BaseVirtualMachine.


        :return: The source_firewall_rules of this BaseVirtualMachine.
        :rtype: List[RuleSet]
        """
        return self._source_firewall_rules

    @source_firewall_rules.setter
    def source_firewall_rules(self, source_firewall_rules):
        """Sets the source_firewall_rules of this BaseVirtualMachine.


        :param source_firewall_rules: The source_firewall_rules of this BaseVirtualMachine.
        :type source_firewall_rules: List[RuleSet]
        """

        self._source_firewall_rules = source_firewall_rules

    @property
    def vnics(self):
        """Gets the vnics of this BaseVirtualMachine.


        :return: The vnics of this BaseVirtualMachine.
        :rtype: List[Reference]
        """
        return self._vnics

    @vnics.setter
    def vnics(self, vnics):
        """Sets the vnics of this BaseVirtualMachine.


        :param vnics: The vnics of this BaseVirtualMachine.
        :type vnics: List[Reference]
        """

        self._vnics = vnics
