# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.base_l2_network import BaseL2Network
from openapi_server.models.entity_type import EntityType
from openapi_server.models.reference import Reference
from openapi_server.models.scope_enum import ScopeEnum
from openapi_server import util


class VxlanLayer2Network(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entity_id: str=None, entity_type: EntityType=None, name: str=None, gateways: List[str]=None, network_addresses: List[str]=None, nsx_managers: List[Reference]=None, scope: ScopeEnum=None, segment_id: int=None, vteps: List[Reference]=None):
        """VxlanLayer2Network - a model defined in OpenAPI

        :param entity_id: The entity_id of this VxlanLayer2Network.
        :param entity_type: The entity_type of this VxlanLayer2Network.
        :param name: The name of this VxlanLayer2Network.
        :param gateways: The gateways of this VxlanLayer2Network.
        :param network_addresses: The network_addresses of this VxlanLayer2Network.
        :param nsx_managers: The nsx_managers of this VxlanLayer2Network.
        :param scope: The scope of this VxlanLayer2Network.
        :param segment_id: The segment_id of this VxlanLayer2Network.
        :param vteps: The vteps of this VxlanLayer2Network.
        """
        self.openapi_types = {
            'entity_id': str,
            'entity_type': EntityType,
            'name': str,
            'gateways': List[str],
            'network_addresses': List[str],
            'nsx_managers': List[Reference],
            'scope': ScopeEnum,
            'segment_id': int,
            'vteps': List[Reference]
        }

        self.attribute_map = {
            'entity_id': 'entity_id',
            'entity_type': 'entity_type',
            'name': 'name',
            'gateways': 'gateways',
            'network_addresses': 'network_addresses',
            'nsx_managers': 'nsx_managers',
            'scope': 'scope',
            'segment_id': 'segment_id',
            'vteps': 'vteps'
        }

        self._entity_id = entity_id
        self._entity_type = entity_type
        self._name = name
        self._gateways = gateways
        self._network_addresses = network_addresses
        self._nsx_managers = nsx_managers
        self._scope = scope
        self._segment_id = segment_id
        self._vteps = vteps

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VxlanLayer2Network':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VxlanLayer2Network of this VxlanLayer2Network.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entity_id(self):
        """Gets the entity_id of this VxlanLayer2Network.


        :return: The entity_id of this VxlanLayer2Network.
        :rtype: str
        """
        return self._entity_id

    @entity_id.setter
    def entity_id(self, entity_id):
        """Sets the entity_id of this VxlanLayer2Network.


        :param entity_id: The entity_id of this VxlanLayer2Network.
        :type entity_id: str
        """

        self._entity_id = entity_id

    @property
    def entity_type(self):
        """Gets the entity_type of this VxlanLayer2Network.


        :return: The entity_type of this VxlanLayer2Network.
        :rtype: EntityType
        """
        return self._entity_type

    @entity_type.setter
    def entity_type(self, entity_type):
        """Sets the entity_type of this VxlanLayer2Network.


        :param entity_type: The entity_type of this VxlanLayer2Network.
        :type entity_type: EntityType
        """

        self._entity_type = entity_type

    @property
    def name(self):
        """Gets the name of this VxlanLayer2Network.


        :return: The name of this VxlanLayer2Network.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this VxlanLayer2Network.


        :param name: The name of this VxlanLayer2Network.
        :type name: str
        """

        self._name = name

    @property
    def gateways(self):
        """Gets the gateways of this VxlanLayer2Network.


        :return: The gateways of this VxlanLayer2Network.
        :rtype: List[str]
        """
        return self._gateways

    @gateways.setter
    def gateways(self, gateways):
        """Sets the gateways of this VxlanLayer2Network.


        :param gateways: The gateways of this VxlanLayer2Network.
        :type gateways: List[str]
        """

        self._gateways = gateways

    @property
    def network_addresses(self):
        """Gets the network_addresses of this VxlanLayer2Network.


        :return: The network_addresses of this VxlanLayer2Network.
        :rtype: List[str]
        """
        return self._network_addresses

    @network_addresses.setter
    def network_addresses(self, network_addresses):
        """Sets the network_addresses of this VxlanLayer2Network.


        :param network_addresses: The network_addresses of this VxlanLayer2Network.
        :type network_addresses: List[str]
        """

        self._network_addresses = network_addresses

    @property
    def nsx_managers(self):
        """Gets the nsx_managers of this VxlanLayer2Network.


        :return: The nsx_managers of this VxlanLayer2Network.
        :rtype: List[Reference]
        """
        return self._nsx_managers

    @nsx_managers.setter
    def nsx_managers(self, nsx_managers):
        """Sets the nsx_managers of this VxlanLayer2Network.


        :param nsx_managers: The nsx_managers of this VxlanLayer2Network.
        :type nsx_managers: List[Reference]
        """

        self._nsx_managers = nsx_managers

    @property
    def scope(self):
        """Gets the scope of this VxlanLayer2Network.


        :return: The scope of this VxlanLayer2Network.
        :rtype: ScopeEnum
        """
        return self._scope

    @scope.setter
    def scope(self, scope):
        """Sets the scope of this VxlanLayer2Network.


        :param scope: The scope of this VxlanLayer2Network.
        :type scope: ScopeEnum
        """

        self._scope = scope

    @property
    def segment_id(self):
        """Gets the segment_id of this VxlanLayer2Network.


        :return: The segment_id of this VxlanLayer2Network.
        :rtype: int
        """
        return self._segment_id

    @segment_id.setter
    def segment_id(self, segment_id):
        """Sets the segment_id of this VxlanLayer2Network.


        :param segment_id: The segment_id of this VxlanLayer2Network.
        :type segment_id: int
        """

        self._segment_id = segment_id

    @property
    def vteps(self):
        """Gets the vteps of this VxlanLayer2Network.


        :return: The vteps of this VxlanLayer2Network.
        :rtype: List[Reference]
        """
        return self._vteps

    @vteps.setter
    def vteps(self, vteps):
        """Sets the vteps of this VxlanLayer2Network.


        :param vteps: The vteps of this VxlanLayer2Network.
        :type vteps: List[Reference]
        """

        self._vteps = vteps
