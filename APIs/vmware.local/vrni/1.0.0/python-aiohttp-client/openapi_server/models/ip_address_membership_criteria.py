# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IpAddressMembershipCriteria(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ip_addresses: List[str]=None):
        """IpAddressMembershipCriteria - a model defined in OpenAPI

        :param ip_addresses: The ip_addresses of this IpAddressMembershipCriteria.
        """
        self.openapi_types = {
            'ip_addresses': List[str]
        }

        self.attribute_map = {
            'ip_addresses': 'ip_addresses'
        }

        self._ip_addresses = ip_addresses

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IpAddressMembershipCriteria':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IpAddressMembershipCriteria of this IpAddressMembershipCriteria.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ip_addresses(self):
        """Gets the ip_addresses of this IpAddressMembershipCriteria.


        :return: The ip_addresses of this IpAddressMembershipCriteria.
        :rtype: List[str]
        """
        return self._ip_addresses

    @ip_addresses.setter
    def ip_addresses(self, ip_addresses):
        """Sets the ip_addresses of this IpAddressMembershipCriteria.


        :param ip_addresses: The ip_addresses of this IpAddressMembershipCriteria.
        :type ip_addresses: List[str]
        """

        self._ip_addresses = ip_addresses
