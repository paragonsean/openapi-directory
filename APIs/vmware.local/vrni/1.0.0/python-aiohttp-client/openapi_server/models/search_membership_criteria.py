# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.all_entity_type import AllEntityType
from openapi_server import util


class SearchMembershipCriteria(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entity_type: AllEntityType=None, filter: str=None):
        """SearchMembershipCriteria - a model defined in OpenAPI

        :param entity_type: The entity_type of this SearchMembershipCriteria.
        :param filter: The filter of this SearchMembershipCriteria.
        """
        self.openapi_types = {
            'entity_type': AllEntityType,
            'filter': str
        }

        self.attribute_map = {
            'entity_type': 'entity_type',
            'filter': 'filter'
        }

        self._entity_type = entity_type
        self._filter = filter

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SearchMembershipCriteria':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SearchMembershipCriteria of this SearchMembershipCriteria.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entity_type(self):
        """Gets the entity_type of this SearchMembershipCriteria.


        :return: The entity_type of this SearchMembershipCriteria.
        :rtype: AllEntityType
        """
        return self._entity_type

    @entity_type.setter
    def entity_type(self, entity_type):
        """Sets the entity_type of this SearchMembershipCriteria.


        :param entity_type: The entity_type of this SearchMembershipCriteria.
        :type entity_type: AllEntityType
        """

        self._entity_type = entity_type

    @property
    def filter(self):
        """Gets the filter of this SearchMembershipCriteria.

        As defined in search end point

        :return: The filter of this SearchMembershipCriteria.
        :rtype: str
        """
        return self._filter

    @filter.setter
    def filter(self, filter):
        """Sets the filter of this SearchMembershipCriteria.

        As defined in search end point

        :param filter: The filter of this SearchMembershipCriteria.
        :type filter: str
        """

        self._filter = filter
