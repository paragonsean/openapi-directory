# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.base_entity import BaseEntity
from openapi_server.models.entity_type import EntityType
from openapi_server import util


class BaseL2Network(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entity_id: str=None, entity_type: EntityType=None, name: str=None, gateways: List[str]=None, network_addresses: List[str]=None):
        """BaseL2Network - a model defined in OpenAPI

        :param entity_id: The entity_id of this BaseL2Network.
        :param entity_type: The entity_type of this BaseL2Network.
        :param name: The name of this BaseL2Network.
        :param gateways: The gateways of this BaseL2Network.
        :param network_addresses: The network_addresses of this BaseL2Network.
        """
        self.openapi_types = {
            'entity_id': str,
            'entity_type': EntityType,
            'name': str,
            'gateways': List[str],
            'network_addresses': List[str]
        }

        self.attribute_map = {
            'entity_id': 'entity_id',
            'entity_type': 'entity_type',
            'name': 'name',
            'gateways': 'gateways',
            'network_addresses': 'network_addresses'
        }

        self._entity_id = entity_id
        self._entity_type = entity_type
        self._name = name
        self._gateways = gateways
        self._network_addresses = network_addresses

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BaseL2Network':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BaseL2Network of this BaseL2Network.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entity_id(self):
        """Gets the entity_id of this BaseL2Network.


        :return: The entity_id of this BaseL2Network.
        :rtype: str
        """
        return self._entity_id

    @entity_id.setter
    def entity_id(self, entity_id):
        """Sets the entity_id of this BaseL2Network.


        :param entity_id: The entity_id of this BaseL2Network.
        :type entity_id: str
        """

        self._entity_id = entity_id

    @property
    def entity_type(self):
        """Gets the entity_type of this BaseL2Network.


        :return: The entity_type of this BaseL2Network.
        :rtype: EntityType
        """
        return self._entity_type

    @entity_type.setter
    def entity_type(self, entity_type):
        """Sets the entity_type of this BaseL2Network.


        :param entity_type: The entity_type of this BaseL2Network.
        :type entity_type: EntityType
        """

        self._entity_type = entity_type

    @property
    def name(self):
        """Gets the name of this BaseL2Network.


        :return: The name of this BaseL2Network.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this BaseL2Network.


        :param name: The name of this BaseL2Network.
        :type name: str
        """

        self._name = name

    @property
    def gateways(self):
        """Gets the gateways of this BaseL2Network.


        :return: The gateways of this BaseL2Network.
        :rtype: List[str]
        """
        return self._gateways

    @gateways.setter
    def gateways(self, gateways):
        """Sets the gateways of this BaseL2Network.


        :param gateways: The gateways of this BaseL2Network.
        :type gateways: List[str]
        """

        self._gateways = gateways

    @property
    def network_addresses(self):
        """Gets the network_addresses of this BaseL2Network.


        :return: The network_addresses of this BaseL2Network.
        :rtype: List[str]
        """
        return self._network_addresses

    @network_addresses.setter
    def network_addresses(self, network_addresses):
        """Sets the network_addresses of this BaseL2Network.


        :param network_addresses: The network_addresses of this BaseL2Network.
        :type network_addresses: List[str]
        """

        self._network_addresses = network_addresses
