# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EntityType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    VIRTUALMACHINE = 'VirtualMachine'
    EC2INSTANCE = 'EC2Instance'
    HOST = 'Host'
    VNIC = 'Vnic'
    VMKNIC = 'Vmknic'
    VXLANLAYER2NETWORK = 'VxlanLayer2Network'
    VLANL2NETWORK = 'VlanL2Network'
    CLUSTER = 'Cluster'
    SECURITYTAG = 'SecurityTag'
    RESOURCEPOOL = 'ResourcePool'
    NSXIPSET = 'NSXIPSet'
    EC2IPSET = 'EC2IPSet'
    NSXSECURITYGROUP = 'NSXSecurityGroup'
    EC2SECURITYGROUP = 'EC2SecurityGroup'
    FLOW = 'Flow'
    PROBLEMEVENT = 'ProblemEvent'
    APPLICATION = 'Application'
    TIER = 'Tier'
    NSXFIREWALLRULE = 'NSXFirewallRule'
    EC2SGFIREWALLRULE = 'EC2SGFirewallRule'
    NSXREDIRECTRULE = 'NSXRedirectRule'
    VCENTERMANAGER = 'VCenterManager'
    NSXVMANAGER = 'NSXVManager'
    NSXSERVICE = 'NSXService'
    EC2SERVICE = 'EC2Service'
    VPC = 'VPC'
    NSXDISTRIBUTEDFIREWALL = 'NSXDistributedFirewall'
    EC2FIREWALL = 'EC2Firewall'
    NSXSERVICEGROUP = 'NSXServiceGroup'
    DISTRIBUTEDVIRTUALSWITCH = 'DistributedVirtualSwitch'
    DISTRIBUTEDVIRTUALPORTGROUP = 'DistributedVirtualPortgroup'
    VCDATACENTER = 'VCDatacenter'
    DATASTORE = 'Datastore'
    FOLDER = 'Folder'

    def __init__(self):
        """EntityType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EntityType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EntityType of this EntityType.
        """
        return util.deserialize_model(dikt, cls)
