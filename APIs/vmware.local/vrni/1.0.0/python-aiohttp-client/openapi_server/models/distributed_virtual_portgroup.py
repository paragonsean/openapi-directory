# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.base_entity import BaseEntity
from openapi_server.models.entity_type import EntityType
from openapi_server.models.reference import Reference
from openapi_server import util


class DistributedVirtualPortgroup(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entity_id: str=None, entity_type: EntityType=None, name: str=None, distributed_virtual_switch: Reference=None, vcenter_manager: Reference=None, vendor_id: str=None):
        """DistributedVirtualPortgroup - a model defined in OpenAPI

        :param entity_id: The entity_id of this DistributedVirtualPortgroup.
        :param entity_type: The entity_type of this DistributedVirtualPortgroup.
        :param name: The name of this DistributedVirtualPortgroup.
        :param distributed_virtual_switch: The distributed_virtual_switch of this DistributedVirtualPortgroup.
        :param vcenter_manager: The vcenter_manager of this DistributedVirtualPortgroup.
        :param vendor_id: The vendor_id of this DistributedVirtualPortgroup.
        """
        self.openapi_types = {
            'entity_id': str,
            'entity_type': EntityType,
            'name': str,
            'distributed_virtual_switch': Reference,
            'vcenter_manager': Reference,
            'vendor_id': str
        }

        self.attribute_map = {
            'entity_id': 'entity_id',
            'entity_type': 'entity_type',
            'name': 'name',
            'distributed_virtual_switch': 'distributed_virtual_switch',
            'vcenter_manager': 'vcenter_manager',
            'vendor_id': 'vendor_id'
        }

        self._entity_id = entity_id
        self._entity_type = entity_type
        self._name = name
        self._distributed_virtual_switch = distributed_virtual_switch
        self._vcenter_manager = vcenter_manager
        self._vendor_id = vendor_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DistributedVirtualPortgroup':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DistributedVirtualPortgroup of this DistributedVirtualPortgroup.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entity_id(self):
        """Gets the entity_id of this DistributedVirtualPortgroup.


        :return: The entity_id of this DistributedVirtualPortgroup.
        :rtype: str
        """
        return self._entity_id

    @entity_id.setter
    def entity_id(self, entity_id):
        """Sets the entity_id of this DistributedVirtualPortgroup.


        :param entity_id: The entity_id of this DistributedVirtualPortgroup.
        :type entity_id: str
        """

        self._entity_id = entity_id

    @property
    def entity_type(self):
        """Gets the entity_type of this DistributedVirtualPortgroup.


        :return: The entity_type of this DistributedVirtualPortgroup.
        :rtype: EntityType
        """
        return self._entity_type

    @entity_type.setter
    def entity_type(self, entity_type):
        """Sets the entity_type of this DistributedVirtualPortgroup.


        :param entity_type: The entity_type of this DistributedVirtualPortgroup.
        :type entity_type: EntityType
        """

        self._entity_type = entity_type

    @property
    def name(self):
        """Gets the name of this DistributedVirtualPortgroup.


        :return: The name of this DistributedVirtualPortgroup.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DistributedVirtualPortgroup.


        :param name: The name of this DistributedVirtualPortgroup.
        :type name: str
        """

        self._name = name

    @property
    def distributed_virtual_switch(self):
        """Gets the distributed_virtual_switch of this DistributedVirtualPortgroup.


        :return: The distributed_virtual_switch of this DistributedVirtualPortgroup.
        :rtype: Reference
        """
        return self._distributed_virtual_switch

    @distributed_virtual_switch.setter
    def distributed_virtual_switch(self, distributed_virtual_switch):
        """Sets the distributed_virtual_switch of this DistributedVirtualPortgroup.


        :param distributed_virtual_switch: The distributed_virtual_switch of this DistributedVirtualPortgroup.
        :type distributed_virtual_switch: Reference
        """

        self._distributed_virtual_switch = distributed_virtual_switch

    @property
    def vcenter_manager(self):
        """Gets the vcenter_manager of this DistributedVirtualPortgroup.


        :return: The vcenter_manager of this DistributedVirtualPortgroup.
        :rtype: Reference
        """
        return self._vcenter_manager

    @vcenter_manager.setter
    def vcenter_manager(self, vcenter_manager):
        """Sets the vcenter_manager of this DistributedVirtualPortgroup.


        :param vcenter_manager: The vcenter_manager of this DistributedVirtualPortgroup.
        :type vcenter_manager: Reference
        """

        self._vcenter_manager = vcenter_manager

    @property
    def vendor_id(self):
        """Gets the vendor_id of this DistributedVirtualPortgroup.


        :return: The vendor_id of this DistributedVirtualPortgroup.
        :rtype: str
        """
        return self._vendor_id

    @vendor_id.setter
    def vendor_id(self, vendor_id):
        """Sets the vendor_id of this DistributedVirtualPortgroup.


        :param vendor_id: The vendor_id of this DistributedVirtualPortgroup.
        :type vendor_id: str
        """

        self._vendor_id = vendor_id
