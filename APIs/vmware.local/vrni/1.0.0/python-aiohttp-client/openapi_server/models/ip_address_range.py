# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IpAddressRange(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, end_ip: str=None, start_ip: str=None):
        """IpAddressRange - a model defined in OpenAPI

        :param end_ip: The end_ip of this IpAddressRange.
        :param start_ip: The start_ip of this IpAddressRange.
        """
        self.openapi_types = {
            'end_ip': str,
            'start_ip': str
        }

        self.attribute_map = {
            'end_ip': 'end_ip',
            'start_ip': 'start_ip'
        }

        self._end_ip = end_ip
        self._start_ip = start_ip

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IpAddressRange':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IpAddressRange of this IpAddressRange.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def end_ip(self):
        """Gets the end_ip of this IpAddressRange.


        :return: The end_ip of this IpAddressRange.
        :rtype: str
        """
        return self._end_ip

    @end_ip.setter
    def end_ip(self, end_ip):
        """Sets the end_ip of this IpAddressRange.


        :param end_ip: The end_ip of this IpAddressRange.
        :type end_ip: str
        """

        self._end_ip = end_ip

    @property
    def start_ip(self):
        """Gets the start_ip of this IpAddressRange.


        :return: The start_ip of this IpAddressRange.
        :rtype: str
        """
        return self._start_ip

    @start_ip.setter
    def start_ip(self, start_ip):
        """Sets the start_ip of this IpAddressRange.


        :param start_ip: The start_ip of this IpAddressRange.
        :type start_ip: str
        """

        self._start_ip = start_ip
