# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.micro_sec_group import MicroSecGroup
from openapi_server.models.time_range import TimeRange
from openapi_server import util


class RecommendedRulesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, group_1: MicroSecGroup=None, group_2: MicroSecGroup=None, time_range: TimeRange=None):
        """RecommendedRulesRequest - a model defined in OpenAPI

        :param group_1: The group_1 of this RecommendedRulesRequest.
        :param group_2: The group_2 of this RecommendedRulesRequest.
        :param time_range: The time_range of this RecommendedRulesRequest.
        """
        self.openapi_types = {
            'group_1': MicroSecGroup,
            'group_2': MicroSecGroup,
            'time_range': TimeRange
        }

        self.attribute_map = {
            'group_1': 'group_1',
            'group_2': 'group_2',
            'time_range': 'time_range'
        }

        self._group_1 = group_1
        self._group_2 = group_2
        self._time_range = time_range

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RecommendedRulesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RecommendedRulesRequest of this RecommendedRulesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def group_1(self):
        """Gets the group_1 of this RecommendedRulesRequest.


        :return: The group_1 of this RecommendedRulesRequest.
        :rtype: MicroSecGroup
        """
        return self._group_1

    @group_1.setter
    def group_1(self, group_1):
        """Sets the group_1 of this RecommendedRulesRequest.


        :param group_1: The group_1 of this RecommendedRulesRequest.
        :type group_1: MicroSecGroup
        """

        self._group_1 = group_1

    @property
    def group_2(self):
        """Gets the group_2 of this RecommendedRulesRequest.


        :return: The group_2 of this RecommendedRulesRequest.
        :rtype: MicroSecGroup
        """
        return self._group_2

    @group_2.setter
    def group_2(self, group_2):
        """Sets the group_2 of this RecommendedRulesRequest.


        :param group_2: The group_2 of this RecommendedRulesRequest.
        :type group_2: MicroSecGroup
        """

        self._group_2 = group_2

    @property
    def time_range(self):
        """Gets the time_range of this RecommendedRulesRequest.


        :return: The time_range of this RecommendedRulesRequest.
        :rtype: TimeRange
        """
        return self._time_range

    @time_range.setter
    def time_range(self, time_range):
        """Sets the time_range of this RecommendedRulesRequest.


        :param time_range: The time_range of this RecommendedRulesRequest.
        :type time_range: TimeRange
        """

        self._time_range = time_range
