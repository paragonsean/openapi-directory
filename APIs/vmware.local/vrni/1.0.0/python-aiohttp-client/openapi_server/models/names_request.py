# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.name_request_param import NameRequestParam
from openapi_server import util


class NamesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entities: List[NameRequestParam]=None):
        """NamesRequest - a model defined in OpenAPI

        :param entities: The entities of this NamesRequest.
        """
        self.openapi_types = {
            'entities': List[NameRequestParam]
        }

        self.attribute_map = {
            'entities': 'entities'
        }

        self._entities = entities

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NamesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NamesRequest of this NamesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entities(self):
        """Gets the entities of this NamesRequest.


        :return: The entities of this NamesRequest.
        :rtype: List[NameRequestParam]
        """
        return self._entities

    @entities.setter
    def entities(self, entities):
        """Sets the entities of this NamesRequest.


        :param entities: The entities of this NamesRequest.
        :type entities: List[NameRequestParam]
        """

        self._entities = entities
