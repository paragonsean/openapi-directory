/**
 * vRealize Network Insight API Reference
 * vRealize Network Insight API Reference
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.VRealizeNetworkInsightApiReference);
  }
}(this, function(expect, VRealizeNetworkInsightApiReference) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new VRealizeNetworkInsightApiReference.EntitiesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('EntitiesApi', function() {
    describe('getCluster', function() {
      it('should call getCluster successfully', function(done) {
        //uncomment below and update the code to test getCluster
        //instance.getCluster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDatacenter', function() {
      it('should call getDatacenter successfully', function(done) {
        //uncomment below and update the code to test getDatacenter
        //instance.getDatacenter(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDatastore', function() {
      it('should call getDatastore successfully', function(done) {
        //uncomment below and update the code to test getDatastore
        //instance.getDatastore(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDistributedVirtualPortgroup', function() {
      it('should call getDistributedVirtualPortgroup successfully', function(done) {
        //uncomment below and update the code to test getDistributedVirtualPortgroup
        //instance.getDistributedVirtualPortgroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDistributedVirtualSwitch', function() {
      it('should call getDistributedVirtualSwitch successfully', function(done) {
        //uncomment below and update the code to test getDistributedVirtualSwitch
        //instance.getDistributedVirtualSwitch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFirewall', function() {
      it('should call getFirewall successfully', function(done) {
        //uncomment below and update the code to test getFirewall
        //instance.getFirewall(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFirewallRule', function() {
      it('should call getFirewallRule successfully', function(done) {
        //uncomment below and update the code to test getFirewallRule
        //instance.getFirewallRule(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFlow', function() {
      it('should call getFlow successfully', function(done) {
        //uncomment below and update the code to test getFlow
        //instance.getFlow(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFlows', function() {
      it('should call getFlows successfully', function(done) {
        //uncomment below and update the code to test getFlows
        //instance.getFlows(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFolder', function() {
      it('should call getFolder successfully', function(done) {
        //uncomment below and update the code to test getFolder
        //instance.getFolder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getHost', function() {
      it('should call getHost successfully', function(done) {
        //uncomment below and update the code to test getHost
        //instance.getHost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getIPSet', function() {
      it('should call getIPSet successfully', function(done) {
        //uncomment below and update the code to test getIPSet
        //instance.getIPSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLayer2Network', function() {
      it('should call getLayer2Network successfully', function(done) {
        //uncomment below and update the code to test getLayer2Network
        //instance.getLayer2Network(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNSXManager', function() {
      it('should call getNSXManager successfully', function(done) {
        //uncomment below and update the code to test getNSXManager
        //instance.getNSXManager(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getName', function() {
      it('should call getName successfully', function(done) {
        //uncomment below and update the code to test getName
        //instance.getName(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNames', function() {
      it('should call getNames successfully', function(done) {
        //uncomment below and update the code to test getNames
        //instance.getNames(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getProblemEvent', function() {
      it('should call getProblemEvent successfully', function(done) {
        //uncomment below and update the code to test getProblemEvent
        //instance.getProblemEvent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSecurityGroup', function() {
      it('should call getSecurityGroup successfully', function(done) {
        //uncomment below and update the code to test getSecurityGroup
        //instance.getSecurityGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSecurityTag', function() {
      it('should call getSecurityTag successfully', function(done) {
        //uncomment below and update the code to test getSecurityTag
        //instance.getSecurityTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getService', function() {
      it('should call getService successfully', function(done) {
        //uncomment below and update the code to test getService
        //instance.getService(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getServiceGroup', function() {
      it('should call getServiceGroup successfully', function(done) {
        //uncomment below and update the code to test getServiceGroup
        //instance.getServiceGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getVcenterManager', function() {
      it('should call getVcenterManager successfully', function(done) {
        //uncomment below and update the code to test getVcenterManager
        //instance.getVcenterManager(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getVm', function() {
      it('should call getVm successfully', function(done) {
        //uncomment below and update the code to test getVm
        //instance.getVm(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getVmknic', function() {
      it('should call getVmknic successfully', function(done) {
        //uncomment below and update the code to test getVmknic
        //instance.getVmknic(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getVnic', function() {
      it('should call getVnic successfully', function(done) {
        //uncomment below and update the code to test getVnic
        //instance.getVnic(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listClusters', function() {
      it('should call listClusters successfully', function(done) {
        //uncomment below and update the code to test listClusters
        //instance.listClusters(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDatacenters', function() {
      it('should call listDatacenters successfully', function(done) {
        //uncomment below and update the code to test listDatacenters
        //instance.listDatacenters(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDatastores', function() {
      it('should call listDatastores successfully', function(done) {
        //uncomment below and update the code to test listDatastores
        //instance.listDatastores(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDistributedVirtualPortgroups', function() {
      it('should call listDistributedVirtualPortgroups successfully', function(done) {
        //uncomment below and update the code to test listDistributedVirtualPortgroups
        //instance.listDistributedVirtualPortgroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDistributedVirtualSwitches', function() {
      it('should call listDistributedVirtualSwitches successfully', function(done) {
        //uncomment below and update the code to test listDistributedVirtualSwitches
        //instance.listDistributedVirtualSwitches(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listFirewallRules', function() {
      it('should call listFirewallRules successfully', function(done) {
        //uncomment below and update the code to test listFirewallRules
        //instance.listFirewallRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listFirewalls', function() {
      it('should call listFirewalls successfully', function(done) {
        //uncomment below and update the code to test listFirewalls
        //instance.listFirewalls(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listFolders', function() {
      it('should call listFolders successfully', function(done) {
        //uncomment below and update the code to test listFolders
        //instance.listFolders(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listHosts', function() {
      it('should call listHosts successfully', function(done) {
        //uncomment below and update the code to test listHosts
        //instance.listHosts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listIPSets', function() {
      it('should call listIPSets successfully', function(done) {
        //uncomment below and update the code to test listIPSets
        //instance.listIPSets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listLayer2Networks', function() {
      it('should call listLayer2Networks successfully', function(done) {
        //uncomment below and update the code to test listLayer2Networks
        //instance.listLayer2Networks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNSXManagers', function() {
      it('should call listNSXManagers successfully', function(done) {
        //uncomment below and update the code to test listNSXManagers
        //instance.listNSXManagers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listProblemEvents', function() {
      it('should call listProblemEvents successfully', function(done) {
        //uncomment below and update the code to test listProblemEvents
        //instance.listProblemEvents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSecurityGroups', function() {
      it('should call listSecurityGroups successfully', function(done) {
        //uncomment below and update the code to test listSecurityGroups
        //instance.listSecurityGroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSecurityTags', function() {
      it('should call listSecurityTags successfully', function(done) {
        //uncomment below and update the code to test listSecurityTags
        //instance.listSecurityTags(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listServiceGroups', function() {
      it('should call listServiceGroups successfully', function(done) {
        //uncomment below and update the code to test listServiceGroups
        //instance.listServiceGroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listServices', function() {
      it('should call listServices successfully', function(done) {
        //uncomment below and update the code to test listServices
        //instance.listServices(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listVcenterManagers', function() {
      it('should call listVcenterManagers successfully', function(done) {
        //uncomment below and update the code to test listVcenterManagers
        //instance.listVcenterManagers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listVmknics', function() {
      it('should call listVmknics successfully', function(done) {
        //uncomment below and update the code to test listVmknics
        //instance.listVmknics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listVms', function() {
      it('should call listVms successfully', function(done) {
        //uncomment below and update the code to test listVms
        //instance.listVms(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listVnics', function() {
      it('should call listVnics successfully', function(done) {
        //uncomment below and update the code to test listVnics
        //instance.listVnics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
