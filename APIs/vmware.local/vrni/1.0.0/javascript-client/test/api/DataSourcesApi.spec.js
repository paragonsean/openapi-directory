/**
 * vRealize Network Insight API Reference
 * vRealize Network Insight API Reference
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.VRealizeNetworkInsightApiReference);
  }
}(this, function(expect, VRealizeNetworkInsightApiReference) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new VRealizeNetworkInsightApiReference.DataSourcesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DataSourcesApi', function() {
    describe('addAristaSwitch', function() {
      it('should call addAristaSwitch successfully', function(done) {
        //uncomment below and update the code to test addAristaSwitch
        //instance.addAristaSwitch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addBrocadeSwitch', function() {
      it('should call addBrocadeSwitch successfully', function(done) {
        //uncomment below and update the code to test addBrocadeSwitch
        //instance.addBrocadeSwitch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addCheckpointFirewall', function() {
      it('should call addCheckpointFirewall successfully', function(done) {
        //uncomment below and update the code to test addCheckpointFirewall
        //instance.addCheckpointFirewall(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addCiscoSwitch', function() {
      it('should call addCiscoSwitch successfully', function(done) {
        //uncomment below and update the code to test addCiscoSwitch
        //instance.addCiscoSwitch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addDellSwitch', function() {
      it('should call addDellSwitch successfully', function(done) {
        //uncomment below and update the code to test addDellSwitch
        //instance.addDellSwitch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addHpovManager', function() {
      it('should call addHpovManager successfully', function(done) {
        //uncomment below and update the code to test addHpovManager
        //instance.addHpovManager(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addHpvcManager', function() {
      it('should call addHpvcManager successfully', function(done) {
        //uncomment below and update the code to test addHpvcManager
        //instance.addHpvcManager(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addJuniperSwitch', function() {
      it('should call addJuniperSwitch successfully', function(done) {
        //uncomment below and update the code to test addJuniperSwitch
        //instance.addJuniperSwitch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addNsxvManagerDatasource', function() {
      it('should call addNsxvManagerDatasource successfully', function(done) {
        //uncomment below and update the code to test addNsxvManagerDatasource
        //instance.addNsxvManagerDatasource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addPanoramaFirewall', function() {
      it('should call addPanoramaFirewall successfully', function(done) {
        //uncomment below and update the code to test addPanoramaFirewall
        //instance.addPanoramaFirewall(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addUcsManager', function() {
      it('should call addUcsManager successfully', function(done) {
        //uncomment below and update the code to test addUcsManager
        //instance.addUcsManager(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addVcenterDatasource', function() {
      it('should call addVcenterDatasource successfully', function(done) {
        //uncomment below and update the code to test addVcenterDatasource
        //instance.addVcenterDatasource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAristaSwitch', function() {
      it('should call deleteAristaSwitch successfully', function(done) {
        //uncomment below and update the code to test deleteAristaSwitch
        //instance.deleteAristaSwitch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteBrocadeSwitch', function() {
      it('should call deleteBrocadeSwitch successfully', function(done) {
        //uncomment below and update the code to test deleteBrocadeSwitch
        //instance.deleteBrocadeSwitch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCheckpointFirewall', function() {
      it('should call deleteCheckpointFirewall successfully', function(done) {
        //uncomment below and update the code to test deleteCheckpointFirewall
        //instance.deleteCheckpointFirewall(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCiscoSwitch', function() {
      it('should call deleteCiscoSwitch successfully', function(done) {
        //uncomment below and update the code to test deleteCiscoSwitch
        //instance.deleteCiscoSwitch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteDellSwitch', function() {
      it('should call deleteDellSwitch successfully', function(done) {
        //uncomment below and update the code to test deleteDellSwitch
        //instance.deleteDellSwitch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteHpovManager', function() {
      it('should call deleteHpovManager successfully', function(done) {
        //uncomment below and update the code to test deleteHpovManager
        //instance.deleteHpovManager(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteHpvcManager', function() {
      it('should call deleteHpvcManager successfully', function(done) {
        //uncomment below and update the code to test deleteHpvcManager
        //instance.deleteHpvcManager(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteJuniperSwitch', function() {
      it('should call deleteJuniperSwitch successfully', function(done) {
        //uncomment below and update the code to test deleteJuniperSwitch
        //instance.deleteJuniperSwitch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNsxvManager', function() {
      it('should call deleteNsxvManager successfully', function(done) {
        //uncomment below and update the code to test deleteNsxvManager
        //instance.deleteNsxvManager(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePanoramaFirewall', function() {
      it('should call deletePanoramaFirewall successfully', function(done) {
        //uncomment below and update the code to test deletePanoramaFirewall
        //instance.deletePanoramaFirewall(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteUcsManager', function() {
      it('should call deleteUcsManager successfully', function(done) {
        //uncomment below and update the code to test deleteUcsManager
        //instance.deleteUcsManager(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteVcenter', function() {
      it('should call deleteVcenter successfully', function(done) {
        //uncomment below and update the code to test deleteVcenter
        //instance.deleteVcenter(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('disableAristaSwitch', function() {
      it('should call disableAristaSwitch successfully', function(done) {
        //uncomment below and update the code to test disableAristaSwitch
        //instance.disableAristaSwitch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('disableBrocadeSwitch', function() {
      it('should call disableBrocadeSwitch successfully', function(done) {
        //uncomment below and update the code to test disableBrocadeSwitch
        //instance.disableBrocadeSwitch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('disableCheckpointFirewall', function() {
      it('should call disableCheckpointFirewall successfully', function(done) {
        //uncomment below and update the code to test disableCheckpointFirewall
        //instance.disableCheckpointFirewall(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('disableCiscoSwitch', function() {
      it('should call disableCiscoSwitch successfully', function(done) {
        //uncomment below and update the code to test disableCiscoSwitch
        //instance.disableCiscoSwitch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('disableDellSwitch', function() {
      it('should call disableDellSwitch successfully', function(done) {
        //uncomment below and update the code to test disableDellSwitch
        //instance.disableDellSwitch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('disableHpovManager', function() {
      it('should call disableHpovManager successfully', function(done) {
        //uncomment below and update the code to test disableHpovManager
        //instance.disableHpovManager(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('disableHpvcManager', function() {
      it('should call disableHpvcManager successfully', function(done) {
        //uncomment below and update the code to test disableHpvcManager
        //instance.disableHpvcManager(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('disableJuniperSwitch', function() {
      it('should call disableJuniperSwitch successfully', function(done) {
        //uncomment below and update the code to test disableJuniperSwitch
        //instance.disableJuniperSwitch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('disableNsxvManager', function() {
      it('should call disableNsxvManager successfully', function(done) {
        //uncomment below and update the code to test disableNsxvManager
        //instance.disableNsxvManager(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('disablePanoramaFirewall', function() {
      it('should call disablePanoramaFirewall successfully', function(done) {
        //uncomment below and update the code to test disablePanoramaFirewall
        //instance.disablePanoramaFirewall(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('disableUcsManager', function() {
      it('should call disableUcsManager successfully', function(done) {
        //uncomment below and update the code to test disableUcsManager
        //instance.disableUcsManager(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('disableVcenter', function() {
      it('should call disableVcenter successfully', function(done) {
        //uncomment below and update the code to test disableVcenter
        //instance.disableVcenter(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('enableAristaSwitch', function() {
      it('should call enableAristaSwitch successfully', function(done) {
        //uncomment below and update the code to test enableAristaSwitch
        //instance.enableAristaSwitch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('enableBrocadeSwitch', function() {
      it('should call enableBrocadeSwitch successfully', function(done) {
        //uncomment below and update the code to test enableBrocadeSwitch
        //instance.enableBrocadeSwitch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('enableCheckpointFirewall', function() {
      it('should call enableCheckpointFirewall successfully', function(done) {
        //uncomment below and update the code to test enableCheckpointFirewall
        //instance.enableCheckpointFirewall(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('enableCiscoSwitch', function() {
      it('should call enableCiscoSwitch successfully', function(done) {
        //uncomment below and update the code to test enableCiscoSwitch
        //instance.enableCiscoSwitch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('enableDellSwitch', function() {
      it('should call enableDellSwitch successfully', function(done) {
        //uncomment below and update the code to test enableDellSwitch
        //instance.enableDellSwitch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('enableHpovManager', function() {
      it('should call enableHpovManager successfully', function(done) {
        //uncomment below and update the code to test enableHpovManager
        //instance.enableHpovManager(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('enableHpvcManager', function() {
      it('should call enableHpvcManager successfully', function(done) {
        //uncomment below and update the code to test enableHpvcManager
        //instance.enableHpvcManager(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('enableJuniperSwitch', function() {
      it('should call enableJuniperSwitch successfully', function(done) {
        //uncomment below and update the code to test enableJuniperSwitch
        //instance.enableJuniperSwitch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('enableNsxvManager', function() {
      it('should call enableNsxvManager successfully', function(done) {
        //uncomment below and update the code to test enableNsxvManager
        //instance.enableNsxvManager(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('enablePanoramaFirewall', function() {
      it('should call enablePanoramaFirewall successfully', function(done) {
        //uncomment below and update the code to test enablePanoramaFirewall
        //instance.enablePanoramaFirewall(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('enableUcsManager', function() {
      it('should call enableUcsManager successfully', function(done) {
        //uncomment below and update the code to test enableUcsManager
        //instance.enableUcsManager(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('enableVcenter', function() {
      it('should call enableVcenter successfully', function(done) {
        //uncomment below and update the code to test enableVcenter
        //instance.enableVcenter(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAristaSwitch', function() {
      it('should call getAristaSwitch successfully', function(done) {
        //uncomment below and update the code to test getAristaSwitch
        //instance.getAristaSwitch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAristaSwitchSnmpConfig', function() {
      it('should call getAristaSwitchSnmpConfig successfully', function(done) {
        //uncomment below and update the code to test getAristaSwitchSnmpConfig
        //instance.getAristaSwitchSnmpConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBrocadeSwitch', function() {
      it('should call getBrocadeSwitch successfully', function(done) {
        //uncomment below and update the code to test getBrocadeSwitch
        //instance.getBrocadeSwitch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBrocadeSwitchSnmpConfig', function() {
      it('should call getBrocadeSwitchSnmpConfig successfully', function(done) {
        //uncomment below and update the code to test getBrocadeSwitchSnmpConfig
        //instance.getBrocadeSwitchSnmpConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCheckpointFirewall', function() {
      it('should call getCheckpointFirewall successfully', function(done) {
        //uncomment below and update the code to test getCheckpointFirewall
        //instance.getCheckpointFirewall(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCiscoSwitch', function() {
      it('should call getCiscoSwitch successfully', function(done) {
        //uncomment below and update the code to test getCiscoSwitch
        //instance.getCiscoSwitch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCiscoSwitchSnmpConfig', function() {
      it('should call getCiscoSwitchSnmpConfig successfully', function(done) {
        //uncomment below and update the code to test getCiscoSwitchSnmpConfig
        //instance.getCiscoSwitchSnmpConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDellSwitch', function() {
      it('should call getDellSwitch successfully', function(done) {
        //uncomment below and update the code to test getDellSwitch
        //instance.getDellSwitch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDellSwitchSnmpConfig', function() {
      it('should call getDellSwitchSnmpConfig successfully', function(done) {
        //uncomment below and update the code to test getDellSwitchSnmpConfig
        //instance.getDellSwitchSnmpConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getHpovManager', function() {
      it('should call getHpovManager successfully', function(done) {
        //uncomment below and update the code to test getHpovManager
        //instance.getHpovManager(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getHpvcManager', function() {
      it('should call getHpvcManager successfully', function(done) {
        //uncomment below and update the code to test getHpvcManager
        //instance.getHpvcManager(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getJuniperSwitch', function() {
      it('should call getJuniperSwitch successfully', function(done) {
        //uncomment below and update the code to test getJuniperSwitch
        //instance.getJuniperSwitch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getJuniperSwitchSnmpConfig', function() {
      it('should call getJuniperSwitchSnmpConfig successfully', function(done) {
        //uncomment below and update the code to test getJuniperSwitchSnmpConfig
        //instance.getJuniperSwitchSnmpConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNsxvControllerCluster', function() {
      it('should call getNsxvControllerCluster successfully', function(done) {
        //uncomment below and update the code to test getNsxvControllerCluster
        //instance.getNsxvControllerCluster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNsxvManager', function() {
      it('should call getNsxvManager successfully', function(done) {
        //uncomment below and update the code to test getNsxvManager
        //instance.getNsxvManager(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPanoramaFirewall', function() {
      it('should call getPanoramaFirewall successfully', function(done) {
        //uncomment below and update the code to test getPanoramaFirewall
        //instance.getPanoramaFirewall(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUcsManager', function() {
      it('should call getUcsManager successfully', function(done) {
        //uncomment below and update the code to test getUcsManager
        //instance.getUcsManager(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUcsSnmpConfig', function() {
      it('should call getUcsSnmpConfig successfully', function(done) {
        //uncomment below and update the code to test getUcsSnmpConfig
        //instance.getUcsSnmpConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getVcenter', function() {
      it('should call getVcenter successfully', function(done) {
        //uncomment below and update the code to test getVcenter
        //instance.getVcenter(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAristaSwitches', function() {
      it('should call listAristaSwitches successfully', function(done) {
        //uncomment below and update the code to test listAristaSwitches
        //instance.listAristaSwitches(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listBrocadeSwitches', function() {
      it('should call listBrocadeSwitches successfully', function(done) {
        //uncomment below and update the code to test listBrocadeSwitches
        //instance.listBrocadeSwitches(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listCheckpointFirewalls', function() {
      it('should call listCheckpointFirewalls successfully', function(done) {
        //uncomment below and update the code to test listCheckpointFirewalls
        //instance.listCheckpointFirewalls(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listCiscoSwitches', function() {
      it('should call listCiscoSwitches successfully', function(done) {
        //uncomment below and update the code to test listCiscoSwitches
        //instance.listCiscoSwitches(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDellSwitches', function() {
      it('should call listDellSwitches successfully', function(done) {
        //uncomment below and update the code to test listDellSwitches
        //instance.listDellSwitches(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listHpovManagers', function() {
      it('should call listHpovManagers successfully', function(done) {
        //uncomment below and update the code to test listHpovManagers
        //instance.listHpovManagers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listHpvcManagers', function() {
      it('should call listHpvcManagers successfully', function(done) {
        //uncomment below and update the code to test listHpvcManagers
        //instance.listHpvcManagers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listJuniperSwitches', function() {
      it('should call listJuniperSwitches successfully', function(done) {
        //uncomment below and update the code to test listJuniperSwitches
        //instance.listJuniperSwitches(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNsxvManagers', function() {
      it('should call listNsxvManagers successfully', function(done) {
        //uncomment below and update the code to test listNsxvManagers
        //instance.listNsxvManagers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listPanoramaFirewalls', function() {
      it('should call listPanoramaFirewalls successfully', function(done) {
        //uncomment below and update the code to test listPanoramaFirewalls
        //instance.listPanoramaFirewalls(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listUcsManagers', function() {
      it('should call listUcsManagers successfully', function(done) {
        //uncomment below and update the code to test listUcsManagers
        //instance.listUcsManagers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listVcenters', function() {
      it('should call listVcenters successfully', function(done) {
        //uncomment below and update the code to test listVcenters
        //instance.listVcenters(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAristaSwitch', function() {
      it('should call updateAristaSwitch successfully', function(done) {
        //uncomment below and update the code to test updateAristaSwitch
        //instance.updateAristaSwitch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAristaSwitchSnmpConfig', function() {
      it('should call updateAristaSwitchSnmpConfig successfully', function(done) {
        //uncomment below and update the code to test updateAristaSwitchSnmpConfig
        //instance.updateAristaSwitchSnmpConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateBrocadeSwitch', function() {
      it('should call updateBrocadeSwitch successfully', function(done) {
        //uncomment below and update the code to test updateBrocadeSwitch
        //instance.updateBrocadeSwitch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateBrocadeSwitchSnmpConfig', function() {
      it('should call updateBrocadeSwitchSnmpConfig successfully', function(done) {
        //uncomment below and update the code to test updateBrocadeSwitchSnmpConfig
        //instance.updateBrocadeSwitchSnmpConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateCheckpointFirewall', function() {
      it('should call updateCheckpointFirewall successfully', function(done) {
        //uncomment below and update the code to test updateCheckpointFirewall
        //instance.updateCheckpointFirewall(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateCiscoSwitch', function() {
      it('should call updateCiscoSwitch successfully', function(done) {
        //uncomment below and update the code to test updateCiscoSwitch
        //instance.updateCiscoSwitch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateCiscoSwitchSnmpConfig', function() {
      it('should call updateCiscoSwitchSnmpConfig successfully', function(done) {
        //uncomment below and update the code to test updateCiscoSwitchSnmpConfig
        //instance.updateCiscoSwitchSnmpConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateDellSwitch', function() {
      it('should call updateDellSwitch successfully', function(done) {
        //uncomment below and update the code to test updateDellSwitch
        //instance.updateDellSwitch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateDellSwitchSnmpConfig', function() {
      it('should call updateDellSwitchSnmpConfig successfully', function(done) {
        //uncomment below and update the code to test updateDellSwitchSnmpConfig
        //instance.updateDellSwitchSnmpConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateHpovManager', function() {
      it('should call updateHpovManager successfully', function(done) {
        //uncomment below and update the code to test updateHpovManager
        //instance.updateHpovManager(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateHpvcManager', function() {
      it('should call updateHpvcManager successfully', function(done) {
        //uncomment below and update the code to test updateHpvcManager
        //instance.updateHpvcManager(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateJuniperSwitch', function() {
      it('should call updateJuniperSwitch successfully', function(done) {
        //uncomment below and update the code to test updateJuniperSwitch
        //instance.updateJuniperSwitch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateJuniperSwitchSnmpConfig', function() {
      it('should call updateJuniperSwitchSnmpConfig successfully', function(done) {
        //uncomment below and update the code to test updateJuniperSwitchSnmpConfig
        //instance.updateJuniperSwitchSnmpConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNsxvControllerCluster', function() {
      it('should call updateNsxvControllerCluster successfully', function(done) {
        //uncomment below and update the code to test updateNsxvControllerCluster
        //instance.updateNsxvControllerCluster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNsxvManager', function() {
      it('should call updateNsxvManager successfully', function(done) {
        //uncomment below and update the code to test updateNsxvManager
        //instance.updateNsxvManager(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePanoramaFirewall', function() {
      it('should call updatePanoramaFirewall successfully', function(done) {
        //uncomment below and update the code to test updatePanoramaFirewall
        //instance.updatePanoramaFirewall(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateUcsManager', function() {
      it('should call updateUcsManager successfully', function(done) {
        //uncomment below and update the code to test updateUcsManager
        //instance.updateUcsManager(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateUcsSnmpConfig', function() {
      it('should call updateUcsSnmpConfig successfully', function(done) {
        //uncomment below and update the code to test updateUcsSnmpConfig
        //instance.updateUcsSnmpConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateVcenter', function() {
      it('should call updateVcenter successfully', function(done) {
        //uncomment below and update the code to test updateVcenter
        //instance.updateVcenter(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
