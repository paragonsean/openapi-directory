/**
 * vRealize Network Insight API Reference
 * vRealize Network Insight API Reference
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EntityType from './EntityType';
import Group from './Group';
import Reference from './Reference';
import RuleSet from './RuleSet';

/**
 * The BaseSecurityGroup model module.
 * @module model/BaseSecurityGroup
 * @version 1.0.0
 */
class BaseSecurityGroup {
    /**
     * Constructs a new <code>BaseSecurityGroup</code>.
     * @alias module:model/BaseSecurityGroup
     * @extends module:model/Group
     * @implements module:model/Group
     */
    constructor() { 
        Group.initialize(this);
        BaseSecurityGroup.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BaseSecurityGroup</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BaseSecurityGroup} obj Optional instance to populate.
     * @return {module:model/BaseSecurityGroup} The populated <code>BaseSecurityGroup</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BaseSecurityGroup();
            Group.constructFromObject(data, obj);
            Group.constructFromObject(data, obj);

            if (data.hasOwnProperty('direct_destination_rules')) {
                obj['direct_destination_rules'] = ApiClient.convertToType(data['direct_destination_rules'], [RuleSet]);
            }
            if (data.hasOwnProperty('direct_members')) {
                obj['direct_members'] = ApiClient.convertToType(data['direct_members'], [Reference]);
            }
            if (data.hasOwnProperty('direct_source_rules')) {
                obj['direct_source_rules'] = ApiClient.convertToType(data['direct_source_rules'], [RuleSet]);
            }
            if (data.hasOwnProperty('excluded_members')) {
                obj['excluded_members'] = ApiClient.convertToType(data['excluded_members'], [Reference]);
            }
            if (data.hasOwnProperty('indirect_destination_rules')) {
                obj['indirect_destination_rules'] = ApiClient.convertToType(data['indirect_destination_rules'], [RuleSet]);
            }
            if (data.hasOwnProperty('indirect_source_rules')) {
                obj['indirect_source_rules'] = ApiClient.convertToType(data['indirect_source_rules'], [RuleSet]);
            }
            if (data.hasOwnProperty('members')) {
                obj['members'] = ApiClient.convertToType(data['members'], [Reference]);
            }
            if (data.hasOwnProperty('parents')) {
                obj['parents'] = ApiClient.convertToType(data['parents'], [Reference]);
            }
            if (data.hasOwnProperty('translated_vm_count')) {
                obj['translated_vm_count'] = ApiClient.convertToType(data['translated_vm_count'], 'Number');
            }
            if (data.hasOwnProperty('vendor_id')) {
                obj['vendor_id'] = ApiClient.convertToType(data['vendor_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BaseSecurityGroup</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BaseSecurityGroup</code>.
     */
    static validateJSON(data) {
        if (data['direct_destination_rules']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['direct_destination_rules'])) {
                throw new Error("Expected the field `direct_destination_rules` to be an array in the JSON data but got " + data['direct_destination_rules']);
            }
            // validate the optional field `direct_destination_rules` (array)
            for (const item of data['direct_destination_rules']) {
                RuleSet.validateJSON(item);
            };
        }
        if (data['direct_members']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['direct_members'])) {
                throw new Error("Expected the field `direct_members` to be an array in the JSON data but got " + data['direct_members']);
            }
            // validate the optional field `direct_members` (array)
            for (const item of data['direct_members']) {
                Reference.validateJSON(item);
            };
        }
        if (data['direct_source_rules']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['direct_source_rules'])) {
                throw new Error("Expected the field `direct_source_rules` to be an array in the JSON data but got " + data['direct_source_rules']);
            }
            // validate the optional field `direct_source_rules` (array)
            for (const item of data['direct_source_rules']) {
                RuleSet.validateJSON(item);
            };
        }
        if (data['excluded_members']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['excluded_members'])) {
                throw new Error("Expected the field `excluded_members` to be an array in the JSON data but got " + data['excluded_members']);
            }
            // validate the optional field `excluded_members` (array)
            for (const item of data['excluded_members']) {
                Reference.validateJSON(item);
            };
        }
        if (data['indirect_destination_rules']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['indirect_destination_rules'])) {
                throw new Error("Expected the field `indirect_destination_rules` to be an array in the JSON data but got " + data['indirect_destination_rules']);
            }
            // validate the optional field `indirect_destination_rules` (array)
            for (const item of data['indirect_destination_rules']) {
                RuleSet.validateJSON(item);
            };
        }
        if (data['indirect_source_rules']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['indirect_source_rules'])) {
                throw new Error("Expected the field `indirect_source_rules` to be an array in the JSON data but got " + data['indirect_source_rules']);
            }
            // validate the optional field `indirect_source_rules` (array)
            for (const item of data['indirect_source_rules']) {
                RuleSet.validateJSON(item);
            };
        }
        if (data['members']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['members'])) {
                throw new Error("Expected the field `members` to be an array in the JSON data but got " + data['members']);
            }
            // validate the optional field `members` (array)
            for (const item of data['members']) {
                Reference.validateJSON(item);
            };
        }
        if (data['parents']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['parents'])) {
                throw new Error("Expected the field `parents` to be an array in the JSON data but got " + data['parents']);
            }
            // validate the optional field `parents` (array)
            for (const item of data['parents']) {
                Reference.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['vendor_id'] && !(typeof data['vendor_id'] === 'string' || data['vendor_id'] instanceof String)) {
            throw new Error("Expected the field `vendor_id` to be a primitive type in the JSON string but got " + data['vendor_id']);
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/RuleSet>} direct_destination_rules
 */
BaseSecurityGroup.prototype['direct_destination_rules'] = undefined;

/**
 * @member {Array.<module:model/Reference>} direct_members
 */
BaseSecurityGroup.prototype['direct_members'] = undefined;

/**
 * @member {Array.<module:model/RuleSet>} direct_source_rules
 */
BaseSecurityGroup.prototype['direct_source_rules'] = undefined;

/**
 * @member {Array.<module:model/Reference>} excluded_members
 */
BaseSecurityGroup.prototype['excluded_members'] = undefined;

/**
 * @member {Array.<module:model/RuleSet>} indirect_destination_rules
 */
BaseSecurityGroup.prototype['indirect_destination_rules'] = undefined;

/**
 * @member {Array.<module:model/RuleSet>} indirect_source_rules
 */
BaseSecurityGroup.prototype['indirect_source_rules'] = undefined;

/**
 * @member {Array.<module:model/Reference>} members
 */
BaseSecurityGroup.prototype['members'] = undefined;

/**
 * @member {Array.<module:model/Reference>} parents
 */
BaseSecurityGroup.prototype['parents'] = undefined;

/**
 * @member {Number} translated_vm_count
 */
BaseSecurityGroup.prototype['translated_vm_count'] = undefined;

/**
 * @member {String} vendor_id
 */
BaseSecurityGroup.prototype['vendor_id'] = undefined;


// Implement Group interface:
/**
 * @member {String} entity_id
 */
Group.prototype['entity_id'] = undefined;
/**
 * @member {module:model/EntityType} entity_type
 */
Group.prototype['entity_type'] = undefined;
/**
 * @member {String} name
 */
Group.prototype['name'] = undefined;
/**
 * @member {Array.<module:model/Reference>} members
 */
Group.prototype['members'] = undefined;




export default BaseSecurityGroup;

