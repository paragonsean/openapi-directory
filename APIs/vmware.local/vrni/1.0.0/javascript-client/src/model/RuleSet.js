/**
 * vRealize Network Insight API Reference
 * vRealize Network Insight API Reference
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Reference from './Reference';

/**
 * The RuleSet model module.
 * @module model/RuleSet
 * @version 1.0.0
 */
class RuleSet {
    /**
     * Constructs a new <code>RuleSet</code>.
     * @alias module:model/RuleSet
     */
    constructor() { 
        
        RuleSet.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RuleSet</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RuleSet} obj Optional instance to populate.
     * @return {module:model/RuleSet} The populated <code>RuleSet</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RuleSet();

            if (data.hasOwnProperty('firewall')) {
                obj['firewall'] = Reference.constructFromObject(data['firewall']);
            }
            if (data.hasOwnProperty('rule_set_type')) {
                obj['rule_set_type'] = ApiClient.convertToType(data['rule_set_type'], 'String');
            }
            if (data.hasOwnProperty('rules')) {
                obj['rules'] = ApiClient.convertToType(data['rules'], [Reference]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RuleSet</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RuleSet</code>.
     */
    static validateJSON(data) {
        // validate the optional field `firewall`
        if (data['firewall']) { // data not null
          Reference.validateJSON(data['firewall']);
        }
        // ensure the json data is a string
        if (data['rule_set_type'] && !(typeof data['rule_set_type'] === 'string' || data['rule_set_type'] instanceof String)) {
            throw new Error("Expected the field `rule_set_type` to be a primitive type in the JSON string but got " + data['rule_set_type']);
        }
        if (data['rules']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['rules'])) {
                throw new Error("Expected the field `rules` to be an array in the JSON data but got " + data['rules']);
            }
            // validate the optional field `rules` (array)
            for (const item of data['rules']) {
                Reference.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {module:model/Reference} firewall
 */
RuleSet.prototype['firewall'] = undefined;

/**
 * @member {module:model/RuleSet.RuleSetTypeEnum} rule_set_type
 */
RuleSet.prototype['rule_set_type'] = undefined;

/**
 * @member {Array.<module:model/Reference>} rules
 */
RuleSet.prototype['rules'] = undefined;





/**
 * Allowed values for the <code>rule_set_type</code> property.
 * @enum {String}
 * @readonly
 */
RuleSet['RuleSetTypeEnum'] = {

    /**
     * value: "NSX_STANDARD"
     * @const
     */
    "NSX_STANDARD": "NSX_STANDARD",

    /**
     * value: "NSX_REDIRECT"
     * @const
     */
    "NSX_REDIRECT": "NSX_REDIRECT",

    /**
     * value: "AWS_STANDARD"
     * @const
     */
    "AWS_STANDARD": "AWS_STANDARD"
};



export default RuleSet;

