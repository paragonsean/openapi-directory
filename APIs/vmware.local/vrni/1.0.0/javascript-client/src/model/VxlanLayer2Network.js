/**
 * vRealize Network Insight API Reference
 * vRealize Network Insight API Reference
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BaseL2Network from './BaseL2Network';
import EntityType from './EntityType';
import Reference from './Reference';
import ScopeEnum from './ScopeEnum';

/**
 * The VxlanLayer2Network model module.
 * @module model/VxlanLayer2Network
 * @version 1.0.0
 */
class VxlanLayer2Network {
    /**
     * Constructs a new <code>VxlanLayer2Network</code>.
     * @alias module:model/VxlanLayer2Network
     * @extends module:model/BaseL2Network
     * @implements module:model/BaseL2Network
     */
    constructor() { 
        BaseL2Network.initialize(this);
        VxlanLayer2Network.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VxlanLayer2Network</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VxlanLayer2Network} obj Optional instance to populate.
     * @return {module:model/VxlanLayer2Network} The populated <code>VxlanLayer2Network</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VxlanLayer2Network();
            BaseL2Network.constructFromObject(data, obj);
            BaseL2Network.constructFromObject(data, obj);

            if (data.hasOwnProperty('nsx_managers')) {
                obj['nsx_managers'] = ApiClient.convertToType(data['nsx_managers'], [Reference]);
            }
            if (data.hasOwnProperty('scope')) {
                obj['scope'] = ScopeEnum.constructFromObject(data['scope']);
            }
            if (data.hasOwnProperty('segment_id')) {
                obj['segment_id'] = ApiClient.convertToType(data['segment_id'], 'Number');
            }
            if (data.hasOwnProperty('vteps')) {
                obj['vteps'] = ApiClient.convertToType(data['vteps'], [Reference]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VxlanLayer2Network</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VxlanLayer2Network</code>.
     */
    static validateJSON(data) {
        if (data['nsx_managers']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['nsx_managers'])) {
                throw new Error("Expected the field `nsx_managers` to be an array in the JSON data but got " + data['nsx_managers']);
            }
            // validate the optional field `nsx_managers` (array)
            for (const item of data['nsx_managers']) {
                Reference.validateJSON(item);
            };
        }
        if (data['vteps']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['vteps'])) {
                throw new Error("Expected the field `vteps` to be an array in the JSON data but got " + data['vteps']);
            }
            // validate the optional field `vteps` (array)
            for (const item of data['vteps']) {
                Reference.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/Reference>} nsx_managers
 */
VxlanLayer2Network.prototype['nsx_managers'] = undefined;

/**
 * @member {module:model/ScopeEnum} scope
 */
VxlanLayer2Network.prototype['scope'] = undefined;

/**
 * @member {Number} segment_id
 */
VxlanLayer2Network.prototype['segment_id'] = undefined;

/**
 * @member {Array.<module:model/Reference>} vteps
 */
VxlanLayer2Network.prototype['vteps'] = undefined;


// Implement BaseL2Network interface:
/**
 * @member {String} entity_id
 */
BaseL2Network.prototype['entity_id'] = undefined;
/**
 * @member {module:model/EntityType} entity_type
 */
BaseL2Network.prototype['entity_type'] = undefined;
/**
 * @member {String} name
 */
BaseL2Network.prototype['name'] = undefined;
/**
 * @member {Array.<String>} gateways
 */
BaseL2Network.prototype['gateways'] = undefined;
/**
 * @member {Array.<String>} network_addresses
 */
BaseL2Network.prototype['network_addresses'] = undefined;




export default VxlanLayer2Network;

