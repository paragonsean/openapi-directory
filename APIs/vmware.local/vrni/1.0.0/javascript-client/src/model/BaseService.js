/**
 * vRealize Network Insight API Reference
 * vRealize Network Insight API Reference
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BaseEntity from './BaseEntity';
import EntityType from './EntityType';
import PortRange from './PortRange';

/**
 * The BaseService model module.
 * @module model/BaseService
 * @version 1.0.0
 */
class BaseService {
    /**
     * Constructs a new <code>BaseService</code>.
     * @alias module:model/BaseService
     * @extends module:model/BaseEntity
     * @implements module:model/BaseEntity
     */
    constructor() { 
        BaseEntity.initialize(this);
        BaseService.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BaseService</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BaseService} obj Optional instance to populate.
     * @return {module:model/BaseService} The populated <code>BaseService</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BaseService();
            BaseEntity.constructFromObject(data, obj);
            BaseEntity.constructFromObject(data, obj);

            if (data.hasOwnProperty('port_ranges')) {
                obj['port_ranges'] = ApiClient.convertToType(data['port_ranges'], [PortRange]);
            }
            if (data.hasOwnProperty('protocol')) {
                obj['protocol'] = ApiClient.convertToType(data['protocol'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BaseService</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BaseService</code>.
     */
    static validateJSON(data) {
        if (data['port_ranges']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['port_ranges'])) {
                throw new Error("Expected the field `port_ranges` to be an array in the JSON data but got " + data['port_ranges']);
            }
            // validate the optional field `port_ranges` (array)
            for (const item of data['port_ranges']) {
                PortRange.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['protocol'] && !(typeof data['protocol'] === 'string' || data['protocol'] instanceof String)) {
            throw new Error("Expected the field `protocol` to be a primitive type in the JSON string but got " + data['protocol']);
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/PortRange>} port_ranges
 */
BaseService.prototype['port_ranges'] = undefined;

/**
 * @member {String} protocol
 */
BaseService.prototype['protocol'] = undefined;


// Implement BaseEntity interface:
/**
 * @member {String} entity_id
 */
BaseEntity.prototype['entity_id'] = undefined;
/**
 * @member {module:model/EntityType} entity_type
 */
BaseEntity.prototype['entity_type'] = undefined;
/**
 * @member {String} name
 */
BaseEntity.prototype['name'] = undefined;




export default BaseService;

