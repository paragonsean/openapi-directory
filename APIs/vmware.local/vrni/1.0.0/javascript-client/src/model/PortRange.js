/**
 * vRealize Network Insight API Reference
 * vRealize Network Insight API Reference
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PortRange model module.
 * @module model/PortRange
 * @version 1.0.0
 */
class PortRange {
    /**
     * Constructs a new <code>PortRange</code>.
     * @alias module:model/PortRange
     */
    constructor() { 
        
        PortRange.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PortRange</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PortRange} obj Optional instance to populate.
     * @return {module:model/PortRange} The populated <code>PortRange</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PortRange();

            if (data.hasOwnProperty('display')) {
                obj['display'] = ApiClient.convertToType(data['display'], 'String');
            }
            if (data.hasOwnProperty('end')) {
                obj['end'] = ApiClient.convertToType(data['end'], 'Number');
            }
            if (data.hasOwnProperty('iana_name')) {
                obj['iana_name'] = ApiClient.convertToType(data['iana_name'], 'String');
            }
            if (data.hasOwnProperty('iana_port_display')) {
                obj['iana_port_display'] = ApiClient.convertToType(data['iana_port_display'], 'String');
            }
            if (data.hasOwnProperty('start')) {
                obj['start'] = ApiClient.convertToType(data['start'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PortRange</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PortRange</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['display'] && !(typeof data['display'] === 'string' || data['display'] instanceof String)) {
            throw new Error("Expected the field `display` to be a primitive type in the JSON string but got " + data['display']);
        }
        // ensure the json data is a string
        if (data['iana_name'] && !(typeof data['iana_name'] === 'string' || data['iana_name'] instanceof String)) {
            throw new Error("Expected the field `iana_name` to be a primitive type in the JSON string but got " + data['iana_name']);
        }
        // ensure the json data is a string
        if (data['iana_port_display'] && !(typeof data['iana_port_display'] === 'string' || data['iana_port_display'] instanceof String)) {
            throw new Error("Expected the field `iana_port_display` to be a primitive type in the JSON string but got " + data['iana_port_display']);
        }

        return true;
    }


}



/**
 * @member {String} display
 */
PortRange.prototype['display'] = undefined;

/**
 * @member {Number} end
 */
PortRange.prototype['end'] = undefined;

/**
 * @member {String} iana_name
 */
PortRange.prototype['iana_name'] = undefined;

/**
 * @member {String} iana_port_display
 */
PortRange.prototype['iana_port_display'] = undefined;

/**
 * @member {Number} start
 */
PortRange.prototype['start'] = undefined;






export default PortRange;

