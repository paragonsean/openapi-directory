/**
 * vRealize Network Insight API Reference
 * vRealize Network Insight API Reference
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BaseEntity from './BaseEntity';
import EntityType from './EntityType';
import IpAddressRange from './IpAddressRange';
import IpNumericRange from './IpNumericRange';
import IpV4Address from './IpV4Address';
import Reference from './Reference';
import RuleSet from './RuleSet';

/**
 * The BaseIPSet model module.
 * @module model/BaseIPSet
 * @version 1.0.0
 */
class BaseIPSet {
    /**
     * Constructs a new <code>BaseIPSet</code>.
     * @alias module:model/BaseIPSet
     * @extends module:model/BaseEntity
     * @implements module:model/BaseEntity
     */
    constructor() { 
        BaseEntity.initialize(this);
        BaseIPSet.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BaseIPSet</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BaseIPSet} obj Optional instance to populate.
     * @return {module:model/BaseIPSet} The populated <code>BaseIPSet</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BaseIPSet();
            BaseEntity.constructFromObject(data, obj);
            BaseEntity.constructFromObject(data, obj);

            if (data.hasOwnProperty('direct_destination_rules')) {
                obj['direct_destination_rules'] = ApiClient.convertToType(data['direct_destination_rules'], [RuleSet]);
            }
            if (data.hasOwnProperty('direct_source_rules')) {
                obj['direct_source_rules'] = ApiClient.convertToType(data['direct_source_rules'], [RuleSet]);
            }
            if (data.hasOwnProperty('indirect_destination_rules')) {
                obj['indirect_destination_rules'] = ApiClient.convertToType(data['indirect_destination_rules'], [RuleSet]);
            }
            if (data.hasOwnProperty('indirect_source_rules')) {
                obj['indirect_source_rules'] = ApiClient.convertToType(data['indirect_source_rules'], [RuleSet]);
            }
            if (data.hasOwnProperty('ip_addresses')) {
                obj['ip_addresses'] = ApiClient.convertToType(data['ip_addresses'], [IpV4Address]);
            }
            if (data.hasOwnProperty('ip_numeric_ranges')) {
                obj['ip_numeric_ranges'] = ApiClient.convertToType(data['ip_numeric_ranges'], [IpNumericRange]);
            }
            if (data.hasOwnProperty('ip_ranges')) {
                obj['ip_ranges'] = ApiClient.convertToType(data['ip_ranges'], [IpAddressRange]);
            }
            if (data.hasOwnProperty('parent_security_groups')) {
                obj['parent_security_groups'] = ApiClient.convertToType(data['parent_security_groups'], [Reference]);
            }
            if (data.hasOwnProperty('translated_vm_count')) {
                obj['translated_vm_count'] = ApiClient.convertToType(data['translated_vm_count'], 'Number');
            }
            if (data.hasOwnProperty('vendor')) {
                obj['vendor'] = ApiClient.convertToType(data['vendor'], 'String');
            }
            if (data.hasOwnProperty('vendor_id')) {
                obj['vendor_id'] = ApiClient.convertToType(data['vendor_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BaseIPSet</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BaseIPSet</code>.
     */
    static validateJSON(data) {
        if (data['direct_destination_rules']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['direct_destination_rules'])) {
                throw new Error("Expected the field `direct_destination_rules` to be an array in the JSON data but got " + data['direct_destination_rules']);
            }
            // validate the optional field `direct_destination_rules` (array)
            for (const item of data['direct_destination_rules']) {
                RuleSet.validateJSON(item);
            };
        }
        if (data['direct_source_rules']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['direct_source_rules'])) {
                throw new Error("Expected the field `direct_source_rules` to be an array in the JSON data but got " + data['direct_source_rules']);
            }
            // validate the optional field `direct_source_rules` (array)
            for (const item of data['direct_source_rules']) {
                RuleSet.validateJSON(item);
            };
        }
        if (data['indirect_destination_rules']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['indirect_destination_rules'])) {
                throw new Error("Expected the field `indirect_destination_rules` to be an array in the JSON data but got " + data['indirect_destination_rules']);
            }
            // validate the optional field `indirect_destination_rules` (array)
            for (const item of data['indirect_destination_rules']) {
                RuleSet.validateJSON(item);
            };
        }
        if (data['indirect_source_rules']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['indirect_source_rules'])) {
                throw new Error("Expected the field `indirect_source_rules` to be an array in the JSON data but got " + data['indirect_source_rules']);
            }
            // validate the optional field `indirect_source_rules` (array)
            for (const item of data['indirect_source_rules']) {
                RuleSet.validateJSON(item);
            };
        }
        if (data['ip_addresses']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['ip_addresses'])) {
                throw new Error("Expected the field `ip_addresses` to be an array in the JSON data but got " + data['ip_addresses']);
            }
            // validate the optional field `ip_addresses` (array)
            for (const item of data['ip_addresses']) {
                IpV4Address.validateJSON(item);
            };
        }
        if (data['ip_numeric_ranges']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['ip_numeric_ranges'])) {
                throw new Error("Expected the field `ip_numeric_ranges` to be an array in the JSON data but got " + data['ip_numeric_ranges']);
            }
            // validate the optional field `ip_numeric_ranges` (array)
            for (const item of data['ip_numeric_ranges']) {
                IpNumericRange.validateJSON(item);
            };
        }
        if (data['ip_ranges']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['ip_ranges'])) {
                throw new Error("Expected the field `ip_ranges` to be an array in the JSON data but got " + data['ip_ranges']);
            }
            // validate the optional field `ip_ranges` (array)
            for (const item of data['ip_ranges']) {
                IpAddressRange.validateJSON(item);
            };
        }
        if (data['parent_security_groups']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['parent_security_groups'])) {
                throw new Error("Expected the field `parent_security_groups` to be an array in the JSON data but got " + data['parent_security_groups']);
            }
            // validate the optional field `parent_security_groups` (array)
            for (const item of data['parent_security_groups']) {
                Reference.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['vendor'] && !(typeof data['vendor'] === 'string' || data['vendor'] instanceof String)) {
            throw new Error("Expected the field `vendor` to be a primitive type in the JSON string but got " + data['vendor']);
        }
        // ensure the json data is a string
        if (data['vendor_id'] && !(typeof data['vendor_id'] === 'string' || data['vendor_id'] instanceof String)) {
            throw new Error("Expected the field `vendor_id` to be a primitive type in the JSON string but got " + data['vendor_id']);
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/RuleSet>} direct_destination_rules
 */
BaseIPSet.prototype['direct_destination_rules'] = undefined;

/**
 * @member {Array.<module:model/RuleSet>} direct_source_rules
 */
BaseIPSet.prototype['direct_source_rules'] = undefined;

/**
 * @member {Array.<module:model/RuleSet>} indirect_destination_rules
 */
BaseIPSet.prototype['indirect_destination_rules'] = undefined;

/**
 * @member {Array.<module:model/RuleSet>} indirect_source_rules
 */
BaseIPSet.prototype['indirect_source_rules'] = undefined;

/**
 * @member {Array.<module:model/IpV4Address>} ip_addresses
 */
BaseIPSet.prototype['ip_addresses'] = undefined;

/**
 * @member {Array.<module:model/IpNumericRange>} ip_numeric_ranges
 */
BaseIPSet.prototype['ip_numeric_ranges'] = undefined;

/**
 * @member {Array.<module:model/IpAddressRange>} ip_ranges
 */
BaseIPSet.prototype['ip_ranges'] = undefined;

/**
 * @member {Array.<module:model/Reference>} parent_security_groups
 */
BaseIPSet.prototype['parent_security_groups'] = undefined;

/**
 * @member {Number} translated_vm_count
 */
BaseIPSet.prototype['translated_vm_count'] = undefined;

/**
 * @member {String} vendor
 */
BaseIPSet.prototype['vendor'] = undefined;

/**
 * @member {String} vendor_id
 */
BaseIPSet.prototype['vendor_id'] = undefined;


// Implement BaseEntity interface:
/**
 * @member {String} entity_id
 */
BaseEntity.prototype['entity_id'] = undefined;
/**
 * @member {module:model/EntityType} entity_type
 */
BaseEntity.prototype['entity_type'] = undefined;
/**
 * @member {String} name
 */
BaseEntity.prototype['name'] = undefined;




export default BaseIPSet;

