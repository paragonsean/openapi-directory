/*
 * vRealize Network Insight API Reference
 * vRealize Network Insight API Reference
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiError;
import org.openapitools.client.model.BaseFirewallRule;
import org.openapitools.client.model.BaseIPSet;
import org.openapitools.client.model.BaseL2Network;
import org.openapitools.client.model.BaseNSXManager;
import org.openapitools.client.model.BaseSecurityGroup;
import org.openapitools.client.model.BaseService;
import org.openapitools.client.model.BaseServiceGroup;
import org.openapitools.client.model.BaseVirtualMachine;
import org.openapitools.client.model.BaseVnic;
import java.math.BigDecimal;
import org.openapitools.client.model.Cluster;
import org.openapitools.client.model.Datastore;
import org.openapitools.client.model.DistributedVirtualPortgroup;
import org.openapitools.client.model.DistributedVirtualSwitch;
import org.openapitools.client.model.EntityName;
import org.openapitools.client.model.Flow;
import org.openapitools.client.model.Folder;
import org.openapitools.client.model.Host;
import org.openapitools.client.model.NamesRequest;
import org.openapitools.client.model.NamesResponse;
import org.openapitools.client.model.PagedListResponseWithTime;
import org.openapitools.client.model.ProblemEvent;
import org.openapitools.client.model.SecurityTag;
import org.openapitools.client.model.VCDatacenter;
import org.openapitools.client.model.VCenterManager;
import org.openapitools.client.model.Vmknic;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EntitiesApi
 */
@Disabled
public class EntitiesApiTest {

    private final EntitiesApi api = new EntitiesApi();

    /**
     * Show cluster details
     *
     * Show cluster details
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getClusterTest() throws ApiException {
        String id = null;
        Long time = null;
        Cluster response = api.getCluster(id, time);
        // TODO: test validations
    }

    /**
     * Show vCenter datacenter details
     *
     * Show vCenter datacenter details
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDatacenterTest() throws ApiException {
        String id = null;
        Long time = null;
        VCDatacenter response = api.getDatacenter(id, time);
        // TODO: test validations
    }

    /**
     * Show datastore details
     *
     * Show datastore details
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDatastoreTest() throws ApiException {
        String id = null;
        Long time = null;
        Datastore response = api.getDatastore(id, time);
        // TODO: test validations
    }

    /**
     * Show distributed virtual portgroup details
     *
     * Show distributed virtual portgroup details
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDistributedVirtualPortgroupTest() throws ApiException {
        String id = null;
        Long time = null;
        DistributedVirtualPortgroup response = api.getDistributedVirtualPortgroup(id, time);
        // TODO: test validations
    }

    /**
     * Show distributed virtual switch details
     *
     * Show distributed virtual switch details
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDistributedVirtualSwitchTest() throws ApiException {
        String id = null;
        Long time = null;
        DistributedVirtualSwitch response = api.getDistributedVirtualSwitch(id, time);
        // TODO: test validations
    }

    /**
     * Show firewall details
     *
     * Show firewall details
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFirewallTest() throws ApiException {
        String id = null;
        Long time = null;
        BaseFirewallRule response = api.getFirewall(id, time);
        // TODO: test validations
    }

    /**
     * Show firewall rule details
     *
     * Show firewall rule details
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFirewallRuleTest() throws ApiException {
        String id = null;
        Long time = null;
        api.getFirewallRule(id, time);
        // TODO: test validations
    }

    /**
     * Show flow details
     *
     * Show flow details
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFlowTest() throws ApiException {
        String id = null;
        Long time = null;
        Flow response = api.getFlow(id, time);
        // TODO: test validations
    }

    /**
     * List flows
     *
     * List flows
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFlowsTest() throws ApiException {
        BigDecimal size = null;
        String cursor = null;
        BigDecimal startTime = null;
        BigDecimal endTime = null;
        PagedListResponseWithTime response = api.getFlows(size, cursor, startTime, endTime);
        // TODO: test validations
    }

    /**
     * Show folder details
     *
     * Show folder details
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFolderTest() throws ApiException {
        String id = null;
        Long time = null;
        Folder response = api.getFolder(id, time);
        // TODO: test validations
    }

    /**
     * Show host details
     *
     * Show host details
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getHostTest() throws ApiException {
        String id = null;
        Long time = null;
        Host response = api.getHost(id, time);
        // TODO: test validations
    }

    /**
     * Show ip set details
     *
     * Show ip set details
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getIPSetTest() throws ApiException {
        String id = null;
        Long time = null;
        BaseIPSet response = api.getIPSet(id, time);
        // TODO: test validations
    }

    /**
     * Show layer2 network details
     *
     * Show layer2 network details
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getLayer2NetworkTest() throws ApiException {
        String id = null;
        Long time = null;
        BaseL2Network response = api.getLayer2Network(id, time);
        // TODO: test validations
    }

    /**
     * Show nsx manager details
     *
     * Show nsx manager details
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNSXManagerTest() throws ApiException {
        String id = null;
        Long time = null;
        BaseNSXManager response = api.getNSXManager(id, time);
        // TODO: test validations
    }

    /**
     * Get name of an entity
     *
     * Get name of an entity
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNameTest() throws ApiException {
        String id = null;
        Long time = null;
        EntityName response = api.getName(id, time);
        // TODO: test validations
    }

    /**
     * Get names for entities
     *
     * Get names for entities.Limit of 1000 entities in a single request.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNamesTest() throws ApiException {
        NamesRequest namesRequest = null;
        NamesResponse response = api.getNames(namesRequest);
        // TODO: test validations
    }

    /**
     * Show problem details
     *
     * Show problem event details.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProblemEventTest() throws ApiException {
        String id = null;
        Long time = null;
        api.getProblemEvent(id, time);
        // TODO: test validations
    }

    /**
     * Show security group details
     *
     * Show security group details
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSecurityGroupTest() throws ApiException {
        String id = null;
        Long time = null;
        BaseSecurityGroup response = api.getSecurityGroup(id, time);
        // TODO: test validations
    }

    /**
     * Show security tag details
     *
     * Show security tag details
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSecurityTagTest() throws ApiException {
        String id = null;
        Long time = null;
        SecurityTag response = api.getSecurityTag(id, time);
        // TODO: test validations
    }

    /**
     * Show service details
     *
     * Show service details
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getServiceTest() throws ApiException {
        String id = null;
        Long time = null;
        BaseService response = api.getService(id, time);
        // TODO: test validations
    }

    /**
     * Show service group details
     *
     * Show service group details
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getServiceGroupTest() throws ApiException {
        String id = null;
        Long time = null;
        BaseServiceGroup response = api.getServiceGroup(id, time);
        // TODO: test validations
    }

    /**
     * Show vCenter manager details
     *
     * Show vCenter manager details
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getVcenterManagerTest() throws ApiException {
        String id = null;
        Long time = null;
        VCenterManager response = api.getVcenterManager(id, time);
        // TODO: test validations
    }

    /**
     * Show vm details
     *
     * Show vm details
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getVmTest() throws ApiException {
        String id = null;
        Long time = null;
        BaseVirtualMachine response = api.getVm(id, time);
        // TODO: test validations
    }

    /**
     * Show vmknic details
     *
     * Show vmknic details
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getVmknicTest() throws ApiException {
        String id = null;
        Long time = null;
        Vmknic response = api.getVmknic(id, time);
        // TODO: test validations
    }

    /**
     * Show vnic details
     *
     * Show vnic details
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getVnicTest() throws ApiException {
        String id = null;
        Long time = null;
        BaseVnic response = api.getVnic(id, time);
        // TODO: test validations
    }

    /**
     * List clusters
     *
     * List clusters
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listClustersTest() throws ApiException {
        BigDecimal size = null;
        String cursor = null;
        BigDecimal startTime = null;
        BigDecimal endTime = null;
        PagedListResponseWithTime response = api.listClusters(size, cursor, startTime, endTime);
        // TODO: test validations
    }

    /**
     * List vCenter datacenters
     *
     * List vCenter datacenters
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listDatacentersTest() throws ApiException {
        BigDecimal size = null;
        String cursor = null;
        BigDecimal startTime = null;
        BigDecimal endTime = null;
        PagedListResponseWithTime response = api.listDatacenters(size, cursor, startTime, endTime);
        // TODO: test validations
    }

    /**
     * List datastores
     *
     * List datastores
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listDatastoresTest() throws ApiException {
        BigDecimal size = null;
        String cursor = null;
        BigDecimal startTime = null;
        BigDecimal endTime = null;
        PagedListResponseWithTime response = api.listDatastores(size, cursor, startTime, endTime);
        // TODO: test validations
    }

    /**
     * List distributed virtual portgroups
     *
     * List distributed virtual portgroups
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listDistributedVirtualPortgroupsTest() throws ApiException {
        BigDecimal size = null;
        String cursor = null;
        BigDecimal startTime = null;
        BigDecimal endTime = null;
        PagedListResponseWithTime response = api.listDistributedVirtualPortgroups(size, cursor, startTime, endTime);
        // TODO: test validations
    }

    /**
     * List distributed virtual switches
     *
     * List distributed virtual switches
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listDistributedVirtualSwitchesTest() throws ApiException {
        BigDecimal size = null;
        String cursor = null;
        BigDecimal startTime = null;
        BigDecimal endTime = null;
        PagedListResponseWithTime response = api.listDistributedVirtualSwitches(size, cursor, startTime, endTime);
        // TODO: test validations
    }

    /**
     * List firewall rules
     *
     * List firewall rules
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listFirewallRulesTest() throws ApiException {
        BigDecimal size = null;
        String cursor = null;
        BigDecimal startTime = null;
        BigDecimal endTime = null;
        PagedListResponseWithTime response = api.listFirewallRules(size, cursor, startTime, endTime);
        // TODO: test validations
    }

    /**
     * List firewalls
     *
     * List firewalls
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listFirewallsTest() throws ApiException {
        BigDecimal size = null;
        String cursor = null;
        BigDecimal startTime = null;
        BigDecimal endTime = null;
        PagedListResponseWithTime response = api.listFirewalls(size, cursor, startTime, endTime);
        // TODO: test validations
    }

    /**
     * List folders
     *
     * List folders
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listFoldersTest() throws ApiException {
        BigDecimal size = null;
        String cursor = null;
        BigDecimal startTime = null;
        BigDecimal endTime = null;
        PagedListResponseWithTime response = api.listFolders(size, cursor, startTime, endTime);
        // TODO: test validations
    }

    /**
     * List hosts
     *
     * List hosts
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listHostsTest() throws ApiException {
        BigDecimal size = null;
        String cursor = null;
        BigDecimal startTime = null;
        BigDecimal endTime = null;
        PagedListResponseWithTime response = api.listHosts(size, cursor, startTime, endTime);
        // TODO: test validations
    }

    /**
     * List ip sets
     *
     * List ip sets
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listIPSetsTest() throws ApiException {
        BigDecimal size = null;
        String cursor = null;
        BigDecimal startTime = null;
        BigDecimal endTime = null;
        PagedListResponseWithTime response = api.listIPSets(size, cursor, startTime, endTime);
        // TODO: test validations
    }

    /**
     * List layer2 networks
     *
     * List layer2 networks
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listLayer2NetworksTest() throws ApiException {
        BigDecimal size = null;
        String cursor = null;
        BigDecimal startTime = null;
        BigDecimal endTime = null;
        PagedListResponseWithTime response = api.listLayer2Networks(size, cursor, startTime, endTime);
        // TODO: test validations
    }

    /**
     * List nsx managers
     *
     * List nsx managers
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listNSXManagersTest() throws ApiException {
        BigDecimal size = null;
        String cursor = null;
        BigDecimal startTime = null;
        BigDecimal endTime = null;
        PagedListResponseWithTime response = api.listNSXManagers(size, cursor, startTime, endTime);
        // TODO: test validations
    }

    /**
     * List problems
     *
     * List problem events.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listProblemEventsTest() throws ApiException {
        BigDecimal size = null;
        String cursor = null;
        BigDecimal startTime = null;
        BigDecimal endTime = null;
        PagedListResponseWithTime response = api.listProblemEvents(size, cursor, startTime, endTime);
        // TODO: test validations
    }

    /**
     * List security groups
     *
     * List security groups
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listSecurityGroupsTest() throws ApiException {
        BigDecimal size = null;
        String cursor = null;
        BigDecimal startTime = null;
        BigDecimal endTime = null;
        PagedListResponseWithTime response = api.listSecurityGroups(size, cursor, startTime, endTime);
        // TODO: test validations
    }

    /**
     * List security tags
     *
     * List security tags
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listSecurityTagsTest() throws ApiException {
        BigDecimal size = null;
        String cursor = null;
        BigDecimal startTime = null;
        BigDecimal endTime = null;
        PagedListResponseWithTime response = api.listSecurityTags(size, cursor, startTime, endTime);
        // TODO: test validations
    }

    /**
     * List service groups
     *
     * List service groups
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listServiceGroupsTest() throws ApiException {
        BigDecimal size = null;
        String cursor = null;
        BigDecimal startTime = null;
        BigDecimal endTime = null;
        PagedListResponseWithTime response = api.listServiceGroups(size, cursor, startTime, endTime);
        // TODO: test validations
    }

    /**
     * List services
     *
     * List services
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listServicesTest() throws ApiException {
        BigDecimal size = null;
        String cursor = null;
        BigDecimal startTime = null;
        BigDecimal endTime = null;
        PagedListResponseWithTime response = api.listServices(size, cursor, startTime, endTime);
        // TODO: test validations
    }

    /**
     * List vCenter managers
     *
     * List vCenter managers
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listVcenterManagersTest() throws ApiException {
        BigDecimal size = null;
        String cursor = null;
        BigDecimal startTime = null;
        BigDecimal endTime = null;
        PagedListResponseWithTime response = api.listVcenterManagers(size, cursor, startTime, endTime);
        // TODO: test validations
    }

    /**
     * List vmknics
     *
     * List vmknics
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listVmknicsTest() throws ApiException {
        BigDecimal size = null;
        String cursor = null;
        BigDecimal startTime = null;
        BigDecimal endTime = null;
        PagedListResponseWithTime response = api.listVmknics(size, cursor, startTime, endTime);
        // TODO: test validations
    }

    /**
     * List vms
     *
     * List vms
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listVmsTest() throws ApiException {
        BigDecimal size = null;
        String cursor = null;
        BigDecimal startTime = null;
        BigDecimal endTime = null;
        PagedListResponseWithTime response = api.listVms(size, cursor, startTime, endTime);
        // TODO: test validations
    }

    /**
     * List vnics
     *
     * List vnics
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listVnicsTest() throws ApiException {
        BigDecimal size = null;
        String cursor = null;
        BigDecimal startTime = null;
        BigDecimal endTime = null;
        PagedListResponseWithTime response = api.listVnics(size, cursor, startTime, endTime);
        // TODO: test validations
    }

}
