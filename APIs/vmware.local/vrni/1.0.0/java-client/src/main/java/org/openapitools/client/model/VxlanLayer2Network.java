/*
 * vRealize Network Insight API Reference
 * vRealize Network Insight API Reference
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.BaseL2Network;
import org.openapitools.client.model.EntityType;
import org.openapitools.client.model.Reference;
import org.openapitools.client.model.ScopeEnum;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * VxlanLayer2Network
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:01:28.864194-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class VxlanLayer2Network extends BaseL2Network {
  public static final String SERIALIZED_NAME_NSX_MANAGERS = "nsx_managers";
  @SerializedName(SERIALIZED_NAME_NSX_MANAGERS)
  private List<Reference> nsxManagers = new ArrayList<>();

  public static final String SERIALIZED_NAME_SCOPE = "scope";
  @SerializedName(SERIALIZED_NAME_SCOPE)
  private ScopeEnum scope;

  public static final String SERIALIZED_NAME_SEGMENT_ID = "segment_id";
  @SerializedName(SERIALIZED_NAME_SEGMENT_ID)
  private Integer segmentId;

  public static final String SERIALIZED_NAME_VTEPS = "vteps";
  @SerializedName(SERIALIZED_NAME_VTEPS)
  private List<Reference> vteps = new ArrayList<>();

  public VxlanLayer2Network() {
    this.entityType = this.getClass().getSimpleName();
  }

  public VxlanLayer2Network nsxManagers(List<Reference> nsxManagers) {
    this.nsxManagers = nsxManagers;
    return this;
  }

  public VxlanLayer2Network addNsxManagersItem(Reference nsxManagersItem) {
    if (this.nsxManagers == null) {
      this.nsxManagers = new ArrayList<>();
    }
    this.nsxManagers.add(nsxManagersItem);
    return this;
  }

  /**
   * Get nsxManagers
   * @return nsxManagers
   */
  @javax.annotation.Nullable
  public List<Reference> getNsxManagers() {
    return nsxManagers;
  }

  public void setNsxManagers(List<Reference> nsxManagers) {
    this.nsxManagers = nsxManagers;
  }


  public VxlanLayer2Network scope(ScopeEnum scope) {
    this.scope = scope;
    return this;
  }

  /**
   * Get scope
   * @return scope
   */
  @javax.annotation.Nullable
  public ScopeEnum getScope() {
    return scope;
  }

  public void setScope(ScopeEnum scope) {
    this.scope = scope;
  }


  public VxlanLayer2Network segmentId(Integer segmentId) {
    this.segmentId = segmentId;
    return this;
  }

  /**
   * Get segmentId
   * @return segmentId
   */
  @javax.annotation.Nullable
  public Integer getSegmentId() {
    return segmentId;
  }

  public void setSegmentId(Integer segmentId) {
    this.segmentId = segmentId;
  }


  public VxlanLayer2Network vteps(List<Reference> vteps) {
    this.vteps = vteps;
    return this;
  }

  public VxlanLayer2Network addVtepsItem(Reference vtepsItem) {
    if (this.vteps == null) {
      this.vteps = new ArrayList<>();
    }
    this.vteps.add(vtepsItem);
    return this;
  }

  /**
   * Get vteps
   * @return vteps
   */
  @javax.annotation.Nullable
  public List<Reference> getVteps() {
    return vteps;
  }

  public void setVteps(List<Reference> vteps) {
    this.vteps = vteps;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VxlanLayer2Network vxlanLayer2Network = (VxlanLayer2Network) o;
    return Objects.equals(this.nsxManagers, vxlanLayer2Network.nsxManagers) &&
        Objects.equals(this.scope, vxlanLayer2Network.scope) &&
        Objects.equals(this.segmentId, vxlanLayer2Network.segmentId) &&
        Objects.equals(this.vteps, vxlanLayer2Network.vteps) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nsxManagers, scope, segmentId, vteps, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VxlanLayer2Network {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    nsxManagers: ").append(toIndentedString(nsxManagers)).append("\n");
    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    sb.append("    segmentId: ").append(toIndentedString(segmentId)).append("\n");
    sb.append("    vteps: ").append(toIndentedString(vteps)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("entity_id");
    openapiFields.add("entity_type");
    openapiFields.add("name");
    openapiFields.add("gateways");
    openapiFields.add("network_addresses");
    openapiFields.add("nsx_managers");
    openapiFields.add("scope");
    openapiFields.add("segment_id");
    openapiFields.add("vteps");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to VxlanLayer2Network
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!VxlanLayer2Network.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in VxlanLayer2Network is not found in the empty JSON string", VxlanLayer2Network.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!VxlanLayer2Network.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `VxlanLayer2Network` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!VxlanLayer2Network.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'VxlanLayer2Network' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<VxlanLayer2Network> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(VxlanLayer2Network.class));

       return (TypeAdapter<T>) new TypeAdapter<VxlanLayer2Network>() {
           @Override
           public void write(JsonWriter out, VxlanLayer2Network value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public VxlanLayer2Network read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of VxlanLayer2Network given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of VxlanLayer2Network
   * @throws IOException if the JSON string is invalid with respect to VxlanLayer2Network
   */
  public static VxlanLayer2Network fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, VxlanLayer2Network.class);
  }

  /**
   * Convert an instance of VxlanLayer2Network to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

