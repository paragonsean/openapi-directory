/*
 * vRealize Network Insight API Reference
 * vRealize Network Insight API Reference
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.BaseEntity;
import org.openapitools.client.model.EntityType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * BaseL2Network
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:01:28.864194-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BaseL2Network extends BaseEntity {
  public static final String SERIALIZED_NAME_GATEWAYS = "gateways";
  @SerializedName(SERIALIZED_NAME_GATEWAYS)
  private List<String> gateways = new ArrayList<>();

  public static final String SERIALIZED_NAME_NETWORK_ADDRESSES = "network_addresses";
  @SerializedName(SERIALIZED_NAME_NETWORK_ADDRESSES)
  private List<String> networkAddresses = new ArrayList<>();

  public BaseL2Network() {
    this.entityType = this.getClass().getSimpleName();
  }

  public BaseL2Network gateways(List<String> gateways) {
    this.gateways = gateways;
    return this;
  }

  public BaseL2Network addGatewaysItem(String gatewaysItem) {
    if (this.gateways == null) {
      this.gateways = new ArrayList<>();
    }
    this.gateways.add(gatewaysItem);
    return this;
  }

  /**
   * Get gateways
   * @return gateways
   */
  @javax.annotation.Nullable
  public List<String> getGateways() {
    return gateways;
  }

  public void setGateways(List<String> gateways) {
    this.gateways = gateways;
  }


  public BaseL2Network networkAddresses(List<String> networkAddresses) {
    this.networkAddresses = networkAddresses;
    return this;
  }

  public BaseL2Network addNetworkAddressesItem(String networkAddressesItem) {
    if (this.networkAddresses == null) {
      this.networkAddresses = new ArrayList<>();
    }
    this.networkAddresses.add(networkAddressesItem);
    return this;
  }

  /**
   * Get networkAddresses
   * @return networkAddresses
   */
  @javax.annotation.Nullable
  public List<String> getNetworkAddresses() {
    return networkAddresses;
  }

  public void setNetworkAddresses(List<String> networkAddresses) {
    this.networkAddresses = networkAddresses;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BaseL2Network baseL2Network = (BaseL2Network) o;
    return Objects.equals(this.gateways, baseL2Network.gateways) &&
        Objects.equals(this.networkAddresses, baseL2Network.networkAddresses) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(gateways, networkAddresses, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BaseL2Network {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    gateways: ").append(toIndentedString(gateways)).append("\n");
    sb.append("    networkAddresses: ").append(toIndentedString(networkAddresses)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("entity_id");
    openapiFields.add("entity_type");
    openapiFields.add("name");
    openapiFields.add("gateways");
    openapiFields.add("network_addresses");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BaseL2Network
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BaseL2Network.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BaseL2Network is not found in the empty JSON string", BaseL2Network.openapiRequiredFields.toString()));
        }
      }

      String discriminatorValue = jsonElement.getAsJsonObject().get("entity_type").getAsString();
      switch (discriminatorValue) {
        case "VlanL2Network":
          VlanL2Network.validateJsonElement(jsonElement);
          break;
        case "VxlanLayer2Network":
          VxlanLayer2Network.validateJsonElement(jsonElement);
          break;
        default:
          throw new IllegalArgumentException(String.format("The value of the `entity_type` field `%s` does not match any key defined in the discriminator's mapping.", discriminatorValue));
      }
  }


  /**
   * Create an instance of BaseL2Network given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BaseL2Network
   * @throws IOException if the JSON string is invalid with respect to BaseL2Network
   */
  public static BaseL2Network fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BaseL2Network.class);
  }

  /**
   * Convert an instance of BaseL2Network to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

