/*
 * vRealize Network Insight API Reference
 * vRealize Network Insight API Reference
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.BaseEntity;
import org.openapitools.client.model.EntityType;
import org.openapitools.client.model.Reference;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Cluster
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:01:28.864194-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Cluster extends BaseEntity {
  public static final String SERIALIZED_NAME_NSX_MANAGER = "nsx_manager";
  @SerializedName(SERIALIZED_NAME_NSX_MANAGER)
  private Reference nsxManager;

  public static final String SERIALIZED_NAME_NUM_CPU_CORES = "num_cpu_cores";
  @SerializedName(SERIALIZED_NAME_NUM_CPU_CORES)
  private Integer numCpuCores;

  public static final String SERIALIZED_NAME_NUM_DATASTORES = "num_datastores";
  @SerializedName(SERIALIZED_NAME_NUM_DATASTORES)
  private Integer numDatastores;

  public static final String SERIALIZED_NAME_NUM_HOSTS = "num_hosts";
  @SerializedName(SERIALIZED_NAME_NUM_HOSTS)
  private Integer numHosts;

  public static final String SERIALIZED_NAME_TOTAL_CPUS = "total_cpus";
  @SerializedName(SERIALIZED_NAME_TOTAL_CPUS)
  private Integer totalCpus;

  public static final String SERIALIZED_NAME_TOTAL_MEMORY = "total_memory";
  @SerializedName(SERIALIZED_NAME_TOTAL_MEMORY)
  private Long totalMemory;

  public static final String SERIALIZED_NAME_VCENTER_MANAGER = "vcenter_manager";
  @SerializedName(SERIALIZED_NAME_VCENTER_MANAGER)
  private Reference vcenterManager;

  public static final String SERIALIZED_NAME_VENDOR_ID = "vendor_id";
  @SerializedName(SERIALIZED_NAME_VENDOR_ID)
  private String vendorId;

  public Cluster() {
    this.entityType = this.getClass().getSimpleName();
  }

  public Cluster nsxManager(Reference nsxManager) {
    this.nsxManager = nsxManager;
    return this;
  }

  /**
   * Get nsxManager
   * @return nsxManager
   */
  @javax.annotation.Nullable
  public Reference getNsxManager() {
    return nsxManager;
  }

  public void setNsxManager(Reference nsxManager) {
    this.nsxManager = nsxManager;
  }


  public Cluster numCpuCores(Integer numCpuCores) {
    this.numCpuCores = numCpuCores;
    return this;
  }

  /**
   * Get numCpuCores
   * @return numCpuCores
   */
  @javax.annotation.Nullable
  public Integer getNumCpuCores() {
    return numCpuCores;
  }

  public void setNumCpuCores(Integer numCpuCores) {
    this.numCpuCores = numCpuCores;
  }


  public Cluster numDatastores(Integer numDatastores) {
    this.numDatastores = numDatastores;
    return this;
  }

  /**
   * Get numDatastores
   * @return numDatastores
   */
  @javax.annotation.Nullable
  public Integer getNumDatastores() {
    return numDatastores;
  }

  public void setNumDatastores(Integer numDatastores) {
    this.numDatastores = numDatastores;
  }


  public Cluster numHosts(Integer numHosts) {
    this.numHosts = numHosts;
    return this;
  }

  /**
   * Get numHosts
   * @return numHosts
   */
  @javax.annotation.Nullable
  public Integer getNumHosts() {
    return numHosts;
  }

  public void setNumHosts(Integer numHosts) {
    this.numHosts = numHosts;
  }


  public Cluster totalCpus(Integer totalCpus) {
    this.totalCpus = totalCpus;
    return this;
  }

  /**
   * Get totalCpus
   * @return totalCpus
   */
  @javax.annotation.Nullable
  public Integer getTotalCpus() {
    return totalCpus;
  }

  public void setTotalCpus(Integer totalCpus) {
    this.totalCpus = totalCpus;
  }


  public Cluster totalMemory(Long totalMemory) {
    this.totalMemory = totalMemory;
    return this;
  }

  /**
   * Get totalMemory
   * @return totalMemory
   */
  @javax.annotation.Nullable
  public Long getTotalMemory() {
    return totalMemory;
  }

  public void setTotalMemory(Long totalMemory) {
    this.totalMemory = totalMemory;
  }


  public Cluster vcenterManager(Reference vcenterManager) {
    this.vcenterManager = vcenterManager;
    return this;
  }

  /**
   * Get vcenterManager
   * @return vcenterManager
   */
  @javax.annotation.Nullable
  public Reference getVcenterManager() {
    return vcenterManager;
  }

  public void setVcenterManager(Reference vcenterManager) {
    this.vcenterManager = vcenterManager;
  }


  public Cluster vendorId(String vendorId) {
    this.vendorId = vendorId;
    return this;
  }

  /**
   * Get vendorId
   * @return vendorId
   */
  @javax.annotation.Nullable
  public String getVendorId() {
    return vendorId;
  }

  public void setVendorId(String vendorId) {
    this.vendorId = vendorId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Cluster cluster = (Cluster) o;
    return Objects.equals(this.nsxManager, cluster.nsxManager) &&
        Objects.equals(this.numCpuCores, cluster.numCpuCores) &&
        Objects.equals(this.numDatastores, cluster.numDatastores) &&
        Objects.equals(this.numHosts, cluster.numHosts) &&
        Objects.equals(this.totalCpus, cluster.totalCpus) &&
        Objects.equals(this.totalMemory, cluster.totalMemory) &&
        Objects.equals(this.vcenterManager, cluster.vcenterManager) &&
        Objects.equals(this.vendorId, cluster.vendorId) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nsxManager, numCpuCores, numDatastores, numHosts, totalCpus, totalMemory, vcenterManager, vendorId, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Cluster {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    nsxManager: ").append(toIndentedString(nsxManager)).append("\n");
    sb.append("    numCpuCores: ").append(toIndentedString(numCpuCores)).append("\n");
    sb.append("    numDatastores: ").append(toIndentedString(numDatastores)).append("\n");
    sb.append("    numHosts: ").append(toIndentedString(numHosts)).append("\n");
    sb.append("    totalCpus: ").append(toIndentedString(totalCpus)).append("\n");
    sb.append("    totalMemory: ").append(toIndentedString(totalMemory)).append("\n");
    sb.append("    vcenterManager: ").append(toIndentedString(vcenterManager)).append("\n");
    sb.append("    vendorId: ").append(toIndentedString(vendorId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("entity_id");
    openapiFields.add("entity_type");
    openapiFields.add("name");
    openapiFields.add("nsx_manager");
    openapiFields.add("num_cpu_cores");
    openapiFields.add("num_datastores");
    openapiFields.add("num_hosts");
    openapiFields.add("total_cpus");
    openapiFields.add("total_memory");
    openapiFields.add("vcenter_manager");
    openapiFields.add("vendor_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Cluster
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Cluster.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Cluster is not found in the empty JSON string", Cluster.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Cluster.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Cluster` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Cluster.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Cluster' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Cluster> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Cluster.class));

       return (TypeAdapter<T>) new TypeAdapter<Cluster>() {
           @Override
           public void write(JsonWriter out, Cluster value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Cluster read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Cluster given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Cluster
   * @throws IOException if the JSON string is invalid with respect to Cluster
   */
  public static Cluster fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Cluster.class);
  }

  /**
   * Convert an instance of Cluster to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

