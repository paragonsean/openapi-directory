/*
 * vRealize Network Insight API Reference
 * vRealize Network Insight API Reference
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.EntityType;
import org.openapitools.client.model.Group;
import org.openapitools.client.model.Reference;
import org.openapitools.client.model.RuleSet;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * BaseSecurityGroup
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:01:28.864194-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BaseSecurityGroup extends Group {
  public static final String SERIALIZED_NAME_DIRECT_DESTINATION_RULES = "direct_destination_rules";
  @SerializedName(SERIALIZED_NAME_DIRECT_DESTINATION_RULES)
  private List<RuleSet> directDestinationRules = new ArrayList<>();

  public static final String SERIALIZED_NAME_DIRECT_MEMBERS = "direct_members";
  @SerializedName(SERIALIZED_NAME_DIRECT_MEMBERS)
  private List<Reference> directMembers = new ArrayList<>();

  public static final String SERIALIZED_NAME_DIRECT_SOURCE_RULES = "direct_source_rules";
  @SerializedName(SERIALIZED_NAME_DIRECT_SOURCE_RULES)
  private List<RuleSet> directSourceRules = new ArrayList<>();

  public static final String SERIALIZED_NAME_EXCLUDED_MEMBERS = "excluded_members";
  @SerializedName(SERIALIZED_NAME_EXCLUDED_MEMBERS)
  private List<Reference> excludedMembers = new ArrayList<>();

  public static final String SERIALIZED_NAME_INDIRECT_DESTINATION_RULES = "indirect_destination_rules";
  @SerializedName(SERIALIZED_NAME_INDIRECT_DESTINATION_RULES)
  private List<RuleSet> indirectDestinationRules = new ArrayList<>();

  public static final String SERIALIZED_NAME_INDIRECT_SOURCE_RULES = "indirect_source_rules";
  @SerializedName(SERIALIZED_NAME_INDIRECT_SOURCE_RULES)
  private List<RuleSet> indirectSourceRules = new ArrayList<>();

  public static final String SERIALIZED_NAME_MEMBERS = "members";
  @SerializedName(SERIALIZED_NAME_MEMBERS)
  private List<Reference> members = new ArrayList<>();

  public static final String SERIALIZED_NAME_PARENTS = "parents";
  @SerializedName(SERIALIZED_NAME_PARENTS)
  private List<Reference> parents = new ArrayList<>();

  public static final String SERIALIZED_NAME_TRANSLATED_VM_COUNT = "translated_vm_count";
  @SerializedName(SERIALIZED_NAME_TRANSLATED_VM_COUNT)
  private Integer translatedVmCount;

  public static final String SERIALIZED_NAME_VENDOR_ID = "vendor_id";
  @SerializedName(SERIALIZED_NAME_VENDOR_ID)
  private String vendorId;

  public BaseSecurityGroup() {
    this.entityType = this.getClass().getSimpleName();
  }

  public BaseSecurityGroup directDestinationRules(List<RuleSet> directDestinationRules) {
    this.directDestinationRules = directDestinationRules;
    return this;
  }

  public BaseSecurityGroup addDirectDestinationRulesItem(RuleSet directDestinationRulesItem) {
    if (this.directDestinationRules == null) {
      this.directDestinationRules = new ArrayList<>();
    }
    this.directDestinationRules.add(directDestinationRulesItem);
    return this;
  }

  /**
   * Get directDestinationRules
   * @return directDestinationRules
   */
  @javax.annotation.Nullable
  public List<RuleSet> getDirectDestinationRules() {
    return directDestinationRules;
  }

  public void setDirectDestinationRules(List<RuleSet> directDestinationRules) {
    this.directDestinationRules = directDestinationRules;
  }


  public BaseSecurityGroup directMembers(List<Reference> directMembers) {
    this.directMembers = directMembers;
    return this;
  }

  public BaseSecurityGroup addDirectMembersItem(Reference directMembersItem) {
    if (this.directMembers == null) {
      this.directMembers = new ArrayList<>();
    }
    this.directMembers.add(directMembersItem);
    return this;
  }

  /**
   * Get directMembers
   * @return directMembers
   */
  @javax.annotation.Nullable
  public List<Reference> getDirectMembers() {
    return directMembers;
  }

  public void setDirectMembers(List<Reference> directMembers) {
    this.directMembers = directMembers;
  }


  public BaseSecurityGroup directSourceRules(List<RuleSet> directSourceRules) {
    this.directSourceRules = directSourceRules;
    return this;
  }

  public BaseSecurityGroup addDirectSourceRulesItem(RuleSet directSourceRulesItem) {
    if (this.directSourceRules == null) {
      this.directSourceRules = new ArrayList<>();
    }
    this.directSourceRules.add(directSourceRulesItem);
    return this;
  }

  /**
   * Get directSourceRules
   * @return directSourceRules
   */
  @javax.annotation.Nullable
  public List<RuleSet> getDirectSourceRules() {
    return directSourceRules;
  }

  public void setDirectSourceRules(List<RuleSet> directSourceRules) {
    this.directSourceRules = directSourceRules;
  }


  public BaseSecurityGroup excludedMembers(List<Reference> excludedMembers) {
    this.excludedMembers = excludedMembers;
    return this;
  }

  public BaseSecurityGroup addExcludedMembersItem(Reference excludedMembersItem) {
    if (this.excludedMembers == null) {
      this.excludedMembers = new ArrayList<>();
    }
    this.excludedMembers.add(excludedMembersItem);
    return this;
  }

  /**
   * Get excludedMembers
   * @return excludedMembers
   */
  @javax.annotation.Nullable
  public List<Reference> getExcludedMembers() {
    return excludedMembers;
  }

  public void setExcludedMembers(List<Reference> excludedMembers) {
    this.excludedMembers = excludedMembers;
  }


  public BaseSecurityGroup indirectDestinationRules(List<RuleSet> indirectDestinationRules) {
    this.indirectDestinationRules = indirectDestinationRules;
    return this;
  }

  public BaseSecurityGroup addIndirectDestinationRulesItem(RuleSet indirectDestinationRulesItem) {
    if (this.indirectDestinationRules == null) {
      this.indirectDestinationRules = new ArrayList<>();
    }
    this.indirectDestinationRules.add(indirectDestinationRulesItem);
    return this;
  }

  /**
   * Get indirectDestinationRules
   * @return indirectDestinationRules
   */
  @javax.annotation.Nullable
  public List<RuleSet> getIndirectDestinationRules() {
    return indirectDestinationRules;
  }

  public void setIndirectDestinationRules(List<RuleSet> indirectDestinationRules) {
    this.indirectDestinationRules = indirectDestinationRules;
  }


  public BaseSecurityGroup indirectSourceRules(List<RuleSet> indirectSourceRules) {
    this.indirectSourceRules = indirectSourceRules;
    return this;
  }

  public BaseSecurityGroup addIndirectSourceRulesItem(RuleSet indirectSourceRulesItem) {
    if (this.indirectSourceRules == null) {
      this.indirectSourceRules = new ArrayList<>();
    }
    this.indirectSourceRules.add(indirectSourceRulesItem);
    return this;
  }

  /**
   * Get indirectSourceRules
   * @return indirectSourceRules
   */
  @javax.annotation.Nullable
  public List<RuleSet> getIndirectSourceRules() {
    return indirectSourceRules;
  }

  public void setIndirectSourceRules(List<RuleSet> indirectSourceRules) {
    this.indirectSourceRules = indirectSourceRules;
  }


  public BaseSecurityGroup members(List<Reference> members) {
    this.members = members;
    return this;
  }

  public BaseSecurityGroup addMembersItem(Reference membersItem) {
    if (this.members == null) {
      this.members = new ArrayList<>();
    }
    this.members.add(membersItem);
    return this;
  }

  /**
   * Get members
   * @return members
   */
  @javax.annotation.Nullable
  public List<Reference> getMembers() {
    return members;
  }

  public void setMembers(List<Reference> members) {
    this.members = members;
  }


  public BaseSecurityGroup parents(List<Reference> parents) {
    this.parents = parents;
    return this;
  }

  public BaseSecurityGroup addParentsItem(Reference parentsItem) {
    if (this.parents == null) {
      this.parents = new ArrayList<>();
    }
    this.parents.add(parentsItem);
    return this;
  }

  /**
   * Get parents
   * @return parents
   */
  @javax.annotation.Nullable
  public List<Reference> getParents() {
    return parents;
  }

  public void setParents(List<Reference> parents) {
    this.parents = parents;
  }


  public BaseSecurityGroup translatedVmCount(Integer translatedVmCount) {
    this.translatedVmCount = translatedVmCount;
    return this;
  }

  /**
   * Get translatedVmCount
   * @return translatedVmCount
   */
  @javax.annotation.Nullable
  public Integer getTranslatedVmCount() {
    return translatedVmCount;
  }

  public void setTranslatedVmCount(Integer translatedVmCount) {
    this.translatedVmCount = translatedVmCount;
  }


  public BaseSecurityGroup vendorId(String vendorId) {
    this.vendorId = vendorId;
    return this;
  }

  /**
   * Get vendorId
   * @return vendorId
   */
  @javax.annotation.Nullable
  public String getVendorId() {
    return vendorId;
  }

  public void setVendorId(String vendorId) {
    this.vendorId = vendorId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BaseSecurityGroup baseSecurityGroup = (BaseSecurityGroup) o;
    return Objects.equals(this.directDestinationRules, baseSecurityGroup.directDestinationRules) &&
        Objects.equals(this.directMembers, baseSecurityGroup.directMembers) &&
        Objects.equals(this.directSourceRules, baseSecurityGroup.directSourceRules) &&
        Objects.equals(this.excludedMembers, baseSecurityGroup.excludedMembers) &&
        Objects.equals(this.indirectDestinationRules, baseSecurityGroup.indirectDestinationRules) &&
        Objects.equals(this.indirectSourceRules, baseSecurityGroup.indirectSourceRules) &&
        Objects.equals(this.members, baseSecurityGroup.members) &&
        Objects.equals(this.parents, baseSecurityGroup.parents) &&
        Objects.equals(this.translatedVmCount, baseSecurityGroup.translatedVmCount) &&
        Objects.equals(this.vendorId, baseSecurityGroup.vendorId) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(directDestinationRules, directMembers, directSourceRules, excludedMembers, indirectDestinationRules, indirectSourceRules, members, parents, translatedVmCount, vendorId, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BaseSecurityGroup {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    directDestinationRules: ").append(toIndentedString(directDestinationRules)).append("\n");
    sb.append("    directMembers: ").append(toIndentedString(directMembers)).append("\n");
    sb.append("    directSourceRules: ").append(toIndentedString(directSourceRules)).append("\n");
    sb.append("    excludedMembers: ").append(toIndentedString(excludedMembers)).append("\n");
    sb.append("    indirectDestinationRules: ").append(toIndentedString(indirectDestinationRules)).append("\n");
    sb.append("    indirectSourceRules: ").append(toIndentedString(indirectSourceRules)).append("\n");
    sb.append("    members: ").append(toIndentedString(members)).append("\n");
    sb.append("    parents: ").append(toIndentedString(parents)).append("\n");
    sb.append("    translatedVmCount: ").append(toIndentedString(translatedVmCount)).append("\n");
    sb.append("    vendorId: ").append(toIndentedString(vendorId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("entity_id");
    openapiFields.add("entity_type");
    openapiFields.add("name");
    openapiFields.add("members");
    openapiFields.add("direct_destination_rules");
    openapiFields.add("direct_members");
    openapiFields.add("direct_source_rules");
    openapiFields.add("excluded_members");
    openapiFields.add("indirect_destination_rules");
    openapiFields.add("indirect_source_rules");
    openapiFields.add("parents");
    openapiFields.add("translated_vm_count");
    openapiFields.add("vendor_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BaseSecurityGroup
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BaseSecurityGroup.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BaseSecurityGroup is not found in the empty JSON string", BaseSecurityGroup.openapiRequiredFields.toString()));
        }
      }

      String discriminatorValue = jsonElement.getAsJsonObject().get("entity_type").getAsString();
      switch (discriminatorValue) {
        case "EC2SecurityGroup":
          EC2SecurityGroup.validateJsonElement(jsonElement);
          break;
        case "NSXSecurityGroup":
          NSXSecurityGroup.validateJsonElement(jsonElement);
          break;
        default:
          throw new IllegalArgumentException(String.format("The value of the `entity_type` field `%s` does not match any key defined in the discriminator's mapping.", discriminatorValue));
      }
  }


  /**
   * Create an instance of BaseSecurityGroup given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BaseSecurityGroup
   * @throws IOException if the JSON string is invalid with respect to BaseSecurityGroup
   */
  public static BaseSecurityGroup fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BaseSecurityGroup.class);
  }

  /**
   * Convert an instance of BaseSecurityGroup to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

