/*
 * vRealize Network Insight API Reference
 * vRealize Network Insight API Reference
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.BaseEntity;
import org.openapitools.client.model.EntityType;
import org.openapitools.client.model.FirewallAction;
import org.openapitools.client.model.FlowTag;
import org.openapitools.client.model.FlowTrafficType;
import org.openapitools.client.model.IpV4Address;
import org.openapitools.client.model.PortRange;
import org.openapitools.client.model.Protocol;
import org.openapitools.client.model.Reference;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Flow
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:01:28.864194-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Flow extends BaseEntity {
  public static final String SERIALIZED_NAME_DESTINATION_CLUSTER = "destination_cluster";
  @SerializedName(SERIALIZED_NAME_DESTINATION_CLUSTER)
  private Reference destinationCluster;

  public static final String SERIALIZED_NAME_DESTINATION_DATACENTER = "destination_datacenter";
  @SerializedName(SERIALIZED_NAME_DESTINATION_DATACENTER)
  private Reference destinationDatacenter;

  public static final String SERIALIZED_NAME_DESTINATION_FOLDERS = "destination_folders";
  @SerializedName(SERIALIZED_NAME_DESTINATION_FOLDERS)
  private List<Reference> destinationFolders = new ArrayList<>();

  public static final String SERIALIZED_NAME_DESTINATION_HOST = "destination_host";
  @SerializedName(SERIALIZED_NAME_DESTINATION_HOST)
  private Reference destinationHost;

  public static final String SERIALIZED_NAME_DESTINATION_IP = "destination_ip";
  @SerializedName(SERIALIZED_NAME_DESTINATION_IP)
  private IpV4Address destinationIp;

  public static final String SERIALIZED_NAME_DESTINATION_IP_SETS = "destination_ip_sets";
  @SerializedName(SERIALIZED_NAME_DESTINATION_IP_SETS)
  private List<Reference> destinationIpSets = new ArrayList<>();

  public static final String SERIALIZED_NAME_DESTINATION_L2_NETWORK = "destination_l2_network";
  @SerializedName(SERIALIZED_NAME_DESTINATION_L2_NETWORK)
  private Reference destinationL2Network;

  public static final String SERIALIZED_NAME_DESTINATION_RESOURCE_POOL = "destination_resource_pool";
  @SerializedName(SERIALIZED_NAME_DESTINATION_RESOURCE_POOL)
  private Reference destinationResourcePool;

  public static final String SERIALIZED_NAME_DESTINATION_SECURITY_GROUPS = "destination_security_groups";
  @SerializedName(SERIALIZED_NAME_DESTINATION_SECURITY_GROUPS)
  private List<Reference> destinationSecurityGroups = new ArrayList<>();

  public static final String SERIALIZED_NAME_DESTINATION_SECURITY_TAGS = "destination_security_tags";
  @SerializedName(SERIALIZED_NAME_DESTINATION_SECURITY_TAGS)
  private List<Reference> destinationSecurityTags = new ArrayList<>();

  public static final String SERIALIZED_NAME_DESTINATION_VM = "destination_vm";
  @SerializedName(SERIALIZED_NAME_DESTINATION_VM)
  private Reference destinationVm;

  public static final String SERIALIZED_NAME_DESTINATION_VM_TAGS = "destination_vm_tags";
  @SerializedName(SERIALIZED_NAME_DESTINATION_VM_TAGS)
  private List<String> destinationVmTags = new ArrayList<>();

  public static final String SERIALIZED_NAME_DESTINATION_VNIC = "destination_vnic";
  @SerializedName(SERIALIZED_NAME_DESTINATION_VNIC)
  private Reference destinationVnic;

  public static final String SERIALIZED_NAME_DESTINATION_VPC = "destination_vpc";
  @SerializedName(SERIALIZED_NAME_DESTINATION_VPC)
  private Reference destinationVpc;

  public static final String SERIALIZED_NAME_FIREWALL_ACTION = "firewall_action";
  @SerializedName(SERIALIZED_NAME_FIREWALL_ACTION)
  private FirewallAction firewallAction;

  public static final String SERIALIZED_NAME_FLOW_TAG = "flow_tag";
  @SerializedName(SERIALIZED_NAME_FLOW_TAG)
  private List<FlowTag> flowTag = new ArrayList<>();

  public static final String SERIALIZED_NAME_PORT = "port";
  @SerializedName(SERIALIZED_NAME_PORT)
  private PortRange port;

  public static final String SERIALIZED_NAME_PROTOCOL = "protocol";
  @SerializedName(SERIALIZED_NAME_PROTOCOL)
  private Protocol protocol;

  public static final String SERIALIZED_NAME_SOURCE_CLUSTER = "source_cluster";
  @SerializedName(SERIALIZED_NAME_SOURCE_CLUSTER)
  private Reference sourceCluster;

  public static final String SERIALIZED_NAME_SOURCE_DATACENTER = "source_datacenter";
  @SerializedName(SERIALIZED_NAME_SOURCE_DATACENTER)
  private Reference sourceDatacenter;

  public static final String SERIALIZED_NAME_SOURCE_FOLDERS = "source_folders";
  @SerializedName(SERIALIZED_NAME_SOURCE_FOLDERS)
  private List<Reference> sourceFolders = new ArrayList<>();

  public static final String SERIALIZED_NAME_SOURCE_HOST = "source_host";
  @SerializedName(SERIALIZED_NAME_SOURCE_HOST)
  private Reference sourceHost;

  public static final String SERIALIZED_NAME_SOURCE_IP = "source_ip";
  @SerializedName(SERIALIZED_NAME_SOURCE_IP)
  private IpV4Address sourceIp;

  public static final String SERIALIZED_NAME_SOURCE_IP_SETS = "source_ip_sets";
  @SerializedName(SERIALIZED_NAME_SOURCE_IP_SETS)
  private List<Reference> sourceIpSets = new ArrayList<>();

  public static final String SERIALIZED_NAME_SOURCE_L2_NETWORK = "source_l2_network";
  @SerializedName(SERIALIZED_NAME_SOURCE_L2_NETWORK)
  private Reference sourceL2Network;

  public static final String SERIALIZED_NAME_SOURCE_RESOURCE_POOL = "source_resource_pool";
  @SerializedName(SERIALIZED_NAME_SOURCE_RESOURCE_POOL)
  private Reference sourceResourcePool;

  public static final String SERIALIZED_NAME_SOURCE_SECURITY_GROUPS = "source_security_groups";
  @SerializedName(SERIALIZED_NAME_SOURCE_SECURITY_GROUPS)
  private List<Reference> sourceSecurityGroups = new ArrayList<>();

  public static final String SERIALIZED_NAME_SOURCE_SECURITY_TAGS = "source_security_tags";
  @SerializedName(SERIALIZED_NAME_SOURCE_SECURITY_TAGS)
  private List<Reference> sourceSecurityTags = new ArrayList<>();

  public static final String SERIALIZED_NAME_SOURCE_VM = "source_vm";
  @SerializedName(SERIALIZED_NAME_SOURCE_VM)
  private Reference sourceVm;

  public static final String SERIALIZED_NAME_SOURCE_VM_TAGS = "source_vm_tags";
  @SerializedName(SERIALIZED_NAME_SOURCE_VM_TAGS)
  private List<String> sourceVmTags = new ArrayList<>();

  public static final String SERIALIZED_NAME_SOURCE_VNIC = "source_vnic";
  @SerializedName(SERIALIZED_NAME_SOURCE_VNIC)
  private Reference sourceVnic;

  public static final String SERIALIZED_NAME_SOURCE_VPC = "source_vpc";
  @SerializedName(SERIALIZED_NAME_SOURCE_VPC)
  private Reference sourceVpc;

  public static final String SERIALIZED_NAME_TRAFFIC_TYPE = "traffic_type";
  @SerializedName(SERIALIZED_NAME_TRAFFIC_TYPE)
  private FlowTrafficType trafficType;

  public static final String SERIALIZED_NAME_WITHIN_HOST = "within_host";
  @SerializedName(SERIALIZED_NAME_WITHIN_HOST)
  private Boolean withinHost;

  public Flow() {
    this.entityType = this.getClass().getSimpleName();
  }

  public Flow destinationCluster(Reference destinationCluster) {
    this.destinationCluster = destinationCluster;
    return this;
  }

  /**
   * Get destinationCluster
   * @return destinationCluster
   */
  @javax.annotation.Nullable
  public Reference getDestinationCluster() {
    return destinationCluster;
  }

  public void setDestinationCluster(Reference destinationCluster) {
    this.destinationCluster = destinationCluster;
  }


  public Flow destinationDatacenter(Reference destinationDatacenter) {
    this.destinationDatacenter = destinationDatacenter;
    return this;
  }

  /**
   * Get destinationDatacenter
   * @return destinationDatacenter
   */
  @javax.annotation.Nullable
  public Reference getDestinationDatacenter() {
    return destinationDatacenter;
  }

  public void setDestinationDatacenter(Reference destinationDatacenter) {
    this.destinationDatacenter = destinationDatacenter;
  }


  public Flow destinationFolders(List<Reference> destinationFolders) {
    this.destinationFolders = destinationFolders;
    return this;
  }

  public Flow addDestinationFoldersItem(Reference destinationFoldersItem) {
    if (this.destinationFolders == null) {
      this.destinationFolders = new ArrayList<>();
    }
    this.destinationFolders.add(destinationFoldersItem);
    return this;
  }

  /**
   * Get destinationFolders
   * @return destinationFolders
   */
  @javax.annotation.Nullable
  public List<Reference> getDestinationFolders() {
    return destinationFolders;
  }

  public void setDestinationFolders(List<Reference> destinationFolders) {
    this.destinationFolders = destinationFolders;
  }


  public Flow destinationHost(Reference destinationHost) {
    this.destinationHost = destinationHost;
    return this;
  }

  /**
   * Get destinationHost
   * @return destinationHost
   */
  @javax.annotation.Nullable
  public Reference getDestinationHost() {
    return destinationHost;
  }

  public void setDestinationHost(Reference destinationHost) {
    this.destinationHost = destinationHost;
  }


  public Flow destinationIp(IpV4Address destinationIp) {
    this.destinationIp = destinationIp;
    return this;
  }

  /**
   * Get destinationIp
   * @return destinationIp
   */
  @javax.annotation.Nullable
  public IpV4Address getDestinationIp() {
    return destinationIp;
  }

  public void setDestinationIp(IpV4Address destinationIp) {
    this.destinationIp = destinationIp;
  }


  public Flow destinationIpSets(List<Reference> destinationIpSets) {
    this.destinationIpSets = destinationIpSets;
    return this;
  }

  public Flow addDestinationIpSetsItem(Reference destinationIpSetsItem) {
    if (this.destinationIpSets == null) {
      this.destinationIpSets = new ArrayList<>();
    }
    this.destinationIpSets.add(destinationIpSetsItem);
    return this;
  }

  /**
   * Get destinationIpSets
   * @return destinationIpSets
   */
  @javax.annotation.Nullable
  public List<Reference> getDestinationIpSets() {
    return destinationIpSets;
  }

  public void setDestinationIpSets(List<Reference> destinationIpSets) {
    this.destinationIpSets = destinationIpSets;
  }


  public Flow destinationL2Network(Reference destinationL2Network) {
    this.destinationL2Network = destinationL2Network;
    return this;
  }

  /**
   * Get destinationL2Network
   * @return destinationL2Network
   */
  @javax.annotation.Nullable
  public Reference getDestinationL2Network() {
    return destinationL2Network;
  }

  public void setDestinationL2Network(Reference destinationL2Network) {
    this.destinationL2Network = destinationL2Network;
  }


  public Flow destinationResourcePool(Reference destinationResourcePool) {
    this.destinationResourcePool = destinationResourcePool;
    return this;
  }

  /**
   * Get destinationResourcePool
   * @return destinationResourcePool
   */
  @javax.annotation.Nullable
  public Reference getDestinationResourcePool() {
    return destinationResourcePool;
  }

  public void setDestinationResourcePool(Reference destinationResourcePool) {
    this.destinationResourcePool = destinationResourcePool;
  }


  public Flow destinationSecurityGroups(List<Reference> destinationSecurityGroups) {
    this.destinationSecurityGroups = destinationSecurityGroups;
    return this;
  }

  public Flow addDestinationSecurityGroupsItem(Reference destinationSecurityGroupsItem) {
    if (this.destinationSecurityGroups == null) {
      this.destinationSecurityGroups = new ArrayList<>();
    }
    this.destinationSecurityGroups.add(destinationSecurityGroupsItem);
    return this;
  }

  /**
   * Get destinationSecurityGroups
   * @return destinationSecurityGroups
   */
  @javax.annotation.Nullable
  public List<Reference> getDestinationSecurityGroups() {
    return destinationSecurityGroups;
  }

  public void setDestinationSecurityGroups(List<Reference> destinationSecurityGroups) {
    this.destinationSecurityGroups = destinationSecurityGroups;
  }


  public Flow destinationSecurityTags(List<Reference> destinationSecurityTags) {
    this.destinationSecurityTags = destinationSecurityTags;
    return this;
  }

  public Flow addDestinationSecurityTagsItem(Reference destinationSecurityTagsItem) {
    if (this.destinationSecurityTags == null) {
      this.destinationSecurityTags = new ArrayList<>();
    }
    this.destinationSecurityTags.add(destinationSecurityTagsItem);
    return this;
  }

  /**
   * Get destinationSecurityTags
   * @return destinationSecurityTags
   */
  @javax.annotation.Nullable
  public List<Reference> getDestinationSecurityTags() {
    return destinationSecurityTags;
  }

  public void setDestinationSecurityTags(List<Reference> destinationSecurityTags) {
    this.destinationSecurityTags = destinationSecurityTags;
  }


  public Flow destinationVm(Reference destinationVm) {
    this.destinationVm = destinationVm;
    return this;
  }

  /**
   * Get destinationVm
   * @return destinationVm
   */
  @javax.annotation.Nullable
  public Reference getDestinationVm() {
    return destinationVm;
  }

  public void setDestinationVm(Reference destinationVm) {
    this.destinationVm = destinationVm;
  }


  public Flow destinationVmTags(List<String> destinationVmTags) {
    this.destinationVmTags = destinationVmTags;
    return this;
  }

  public Flow addDestinationVmTagsItem(String destinationVmTagsItem) {
    if (this.destinationVmTags == null) {
      this.destinationVmTags = new ArrayList<>();
    }
    this.destinationVmTags.add(destinationVmTagsItem);
    return this;
  }

  /**
   * Get destinationVmTags
   * @return destinationVmTags
   */
  @javax.annotation.Nullable
  public List<String> getDestinationVmTags() {
    return destinationVmTags;
  }

  public void setDestinationVmTags(List<String> destinationVmTags) {
    this.destinationVmTags = destinationVmTags;
  }


  public Flow destinationVnic(Reference destinationVnic) {
    this.destinationVnic = destinationVnic;
    return this;
  }

  /**
   * Get destinationVnic
   * @return destinationVnic
   */
  @javax.annotation.Nullable
  public Reference getDestinationVnic() {
    return destinationVnic;
  }

  public void setDestinationVnic(Reference destinationVnic) {
    this.destinationVnic = destinationVnic;
  }


  public Flow destinationVpc(Reference destinationVpc) {
    this.destinationVpc = destinationVpc;
    return this;
  }

  /**
   * Get destinationVpc
   * @return destinationVpc
   */
  @javax.annotation.Nullable
  public Reference getDestinationVpc() {
    return destinationVpc;
  }

  public void setDestinationVpc(Reference destinationVpc) {
    this.destinationVpc = destinationVpc;
  }


  public Flow firewallAction(FirewallAction firewallAction) {
    this.firewallAction = firewallAction;
    return this;
  }

  /**
   * Get firewallAction
   * @return firewallAction
   */
  @javax.annotation.Nullable
  public FirewallAction getFirewallAction() {
    return firewallAction;
  }

  public void setFirewallAction(FirewallAction firewallAction) {
    this.firewallAction = firewallAction;
  }


  public Flow flowTag(List<FlowTag> flowTag) {
    this.flowTag = flowTag;
    return this;
  }

  public Flow addFlowTagItem(FlowTag flowTagItem) {
    if (this.flowTag == null) {
      this.flowTag = new ArrayList<>();
    }
    this.flowTag.add(flowTagItem);
    return this;
  }

  /**
   * Get flowTag
   * @return flowTag
   */
  @javax.annotation.Nullable
  public List<FlowTag> getFlowTag() {
    return flowTag;
  }

  public void setFlowTag(List<FlowTag> flowTag) {
    this.flowTag = flowTag;
  }


  public Flow port(PortRange port) {
    this.port = port;
    return this;
  }

  /**
   * Get port
   * @return port
   */
  @javax.annotation.Nullable
  public PortRange getPort() {
    return port;
  }

  public void setPort(PortRange port) {
    this.port = port;
  }


  public Flow protocol(Protocol protocol) {
    this.protocol = protocol;
    return this;
  }

  /**
   * Get protocol
   * @return protocol
   */
  @javax.annotation.Nullable
  public Protocol getProtocol() {
    return protocol;
  }

  public void setProtocol(Protocol protocol) {
    this.protocol = protocol;
  }


  public Flow sourceCluster(Reference sourceCluster) {
    this.sourceCluster = sourceCluster;
    return this;
  }

  /**
   * Get sourceCluster
   * @return sourceCluster
   */
  @javax.annotation.Nullable
  public Reference getSourceCluster() {
    return sourceCluster;
  }

  public void setSourceCluster(Reference sourceCluster) {
    this.sourceCluster = sourceCluster;
  }


  public Flow sourceDatacenter(Reference sourceDatacenter) {
    this.sourceDatacenter = sourceDatacenter;
    return this;
  }

  /**
   * Get sourceDatacenter
   * @return sourceDatacenter
   */
  @javax.annotation.Nullable
  public Reference getSourceDatacenter() {
    return sourceDatacenter;
  }

  public void setSourceDatacenter(Reference sourceDatacenter) {
    this.sourceDatacenter = sourceDatacenter;
  }


  public Flow sourceFolders(List<Reference> sourceFolders) {
    this.sourceFolders = sourceFolders;
    return this;
  }

  public Flow addSourceFoldersItem(Reference sourceFoldersItem) {
    if (this.sourceFolders == null) {
      this.sourceFolders = new ArrayList<>();
    }
    this.sourceFolders.add(sourceFoldersItem);
    return this;
  }

  /**
   * Get sourceFolders
   * @return sourceFolders
   */
  @javax.annotation.Nullable
  public List<Reference> getSourceFolders() {
    return sourceFolders;
  }

  public void setSourceFolders(List<Reference> sourceFolders) {
    this.sourceFolders = sourceFolders;
  }


  public Flow sourceHost(Reference sourceHost) {
    this.sourceHost = sourceHost;
    return this;
  }

  /**
   * Get sourceHost
   * @return sourceHost
   */
  @javax.annotation.Nullable
  public Reference getSourceHost() {
    return sourceHost;
  }

  public void setSourceHost(Reference sourceHost) {
    this.sourceHost = sourceHost;
  }


  public Flow sourceIp(IpV4Address sourceIp) {
    this.sourceIp = sourceIp;
    return this;
  }

  /**
   * Get sourceIp
   * @return sourceIp
   */
  @javax.annotation.Nullable
  public IpV4Address getSourceIp() {
    return sourceIp;
  }

  public void setSourceIp(IpV4Address sourceIp) {
    this.sourceIp = sourceIp;
  }


  public Flow sourceIpSets(List<Reference> sourceIpSets) {
    this.sourceIpSets = sourceIpSets;
    return this;
  }

  public Flow addSourceIpSetsItem(Reference sourceIpSetsItem) {
    if (this.sourceIpSets == null) {
      this.sourceIpSets = new ArrayList<>();
    }
    this.sourceIpSets.add(sourceIpSetsItem);
    return this;
  }

  /**
   * Get sourceIpSets
   * @return sourceIpSets
   */
  @javax.annotation.Nullable
  public List<Reference> getSourceIpSets() {
    return sourceIpSets;
  }

  public void setSourceIpSets(List<Reference> sourceIpSets) {
    this.sourceIpSets = sourceIpSets;
  }


  public Flow sourceL2Network(Reference sourceL2Network) {
    this.sourceL2Network = sourceL2Network;
    return this;
  }

  /**
   * Get sourceL2Network
   * @return sourceL2Network
   */
  @javax.annotation.Nullable
  public Reference getSourceL2Network() {
    return sourceL2Network;
  }

  public void setSourceL2Network(Reference sourceL2Network) {
    this.sourceL2Network = sourceL2Network;
  }


  public Flow sourceResourcePool(Reference sourceResourcePool) {
    this.sourceResourcePool = sourceResourcePool;
    return this;
  }

  /**
   * Get sourceResourcePool
   * @return sourceResourcePool
   */
  @javax.annotation.Nullable
  public Reference getSourceResourcePool() {
    return sourceResourcePool;
  }

  public void setSourceResourcePool(Reference sourceResourcePool) {
    this.sourceResourcePool = sourceResourcePool;
  }


  public Flow sourceSecurityGroups(List<Reference> sourceSecurityGroups) {
    this.sourceSecurityGroups = sourceSecurityGroups;
    return this;
  }

  public Flow addSourceSecurityGroupsItem(Reference sourceSecurityGroupsItem) {
    if (this.sourceSecurityGroups == null) {
      this.sourceSecurityGroups = new ArrayList<>();
    }
    this.sourceSecurityGroups.add(sourceSecurityGroupsItem);
    return this;
  }

  /**
   * Get sourceSecurityGroups
   * @return sourceSecurityGroups
   */
  @javax.annotation.Nullable
  public List<Reference> getSourceSecurityGroups() {
    return sourceSecurityGroups;
  }

  public void setSourceSecurityGroups(List<Reference> sourceSecurityGroups) {
    this.sourceSecurityGroups = sourceSecurityGroups;
  }


  public Flow sourceSecurityTags(List<Reference> sourceSecurityTags) {
    this.sourceSecurityTags = sourceSecurityTags;
    return this;
  }

  public Flow addSourceSecurityTagsItem(Reference sourceSecurityTagsItem) {
    if (this.sourceSecurityTags == null) {
      this.sourceSecurityTags = new ArrayList<>();
    }
    this.sourceSecurityTags.add(sourceSecurityTagsItem);
    return this;
  }

  /**
   * Get sourceSecurityTags
   * @return sourceSecurityTags
   */
  @javax.annotation.Nullable
  public List<Reference> getSourceSecurityTags() {
    return sourceSecurityTags;
  }

  public void setSourceSecurityTags(List<Reference> sourceSecurityTags) {
    this.sourceSecurityTags = sourceSecurityTags;
  }


  public Flow sourceVm(Reference sourceVm) {
    this.sourceVm = sourceVm;
    return this;
  }

  /**
   * Get sourceVm
   * @return sourceVm
   */
  @javax.annotation.Nullable
  public Reference getSourceVm() {
    return sourceVm;
  }

  public void setSourceVm(Reference sourceVm) {
    this.sourceVm = sourceVm;
  }


  public Flow sourceVmTags(List<String> sourceVmTags) {
    this.sourceVmTags = sourceVmTags;
    return this;
  }

  public Flow addSourceVmTagsItem(String sourceVmTagsItem) {
    if (this.sourceVmTags == null) {
      this.sourceVmTags = new ArrayList<>();
    }
    this.sourceVmTags.add(sourceVmTagsItem);
    return this;
  }

  /**
   * Get sourceVmTags
   * @return sourceVmTags
   */
  @javax.annotation.Nullable
  public List<String> getSourceVmTags() {
    return sourceVmTags;
  }

  public void setSourceVmTags(List<String> sourceVmTags) {
    this.sourceVmTags = sourceVmTags;
  }


  public Flow sourceVnic(Reference sourceVnic) {
    this.sourceVnic = sourceVnic;
    return this;
  }

  /**
   * Get sourceVnic
   * @return sourceVnic
   */
  @javax.annotation.Nullable
  public Reference getSourceVnic() {
    return sourceVnic;
  }

  public void setSourceVnic(Reference sourceVnic) {
    this.sourceVnic = sourceVnic;
  }


  public Flow sourceVpc(Reference sourceVpc) {
    this.sourceVpc = sourceVpc;
    return this;
  }

  /**
   * Get sourceVpc
   * @return sourceVpc
   */
  @javax.annotation.Nullable
  public Reference getSourceVpc() {
    return sourceVpc;
  }

  public void setSourceVpc(Reference sourceVpc) {
    this.sourceVpc = sourceVpc;
  }


  public Flow trafficType(FlowTrafficType trafficType) {
    this.trafficType = trafficType;
    return this;
  }

  /**
   * Get trafficType
   * @return trafficType
   */
  @javax.annotation.Nullable
  public FlowTrafficType getTrafficType() {
    return trafficType;
  }

  public void setTrafficType(FlowTrafficType trafficType) {
    this.trafficType = trafficType;
  }


  public Flow withinHost(Boolean withinHost) {
    this.withinHost = withinHost;
    return this;
  }

  /**
   * Get withinHost
   * @return withinHost
   */
  @javax.annotation.Nullable
  public Boolean getWithinHost() {
    return withinHost;
  }

  public void setWithinHost(Boolean withinHost) {
    this.withinHost = withinHost;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Flow flow = (Flow) o;
    return Objects.equals(this.destinationCluster, flow.destinationCluster) &&
        Objects.equals(this.destinationDatacenter, flow.destinationDatacenter) &&
        Objects.equals(this.destinationFolders, flow.destinationFolders) &&
        Objects.equals(this.destinationHost, flow.destinationHost) &&
        Objects.equals(this.destinationIp, flow.destinationIp) &&
        Objects.equals(this.destinationIpSets, flow.destinationIpSets) &&
        Objects.equals(this.destinationL2Network, flow.destinationL2Network) &&
        Objects.equals(this.destinationResourcePool, flow.destinationResourcePool) &&
        Objects.equals(this.destinationSecurityGroups, flow.destinationSecurityGroups) &&
        Objects.equals(this.destinationSecurityTags, flow.destinationSecurityTags) &&
        Objects.equals(this.destinationVm, flow.destinationVm) &&
        Objects.equals(this.destinationVmTags, flow.destinationVmTags) &&
        Objects.equals(this.destinationVnic, flow.destinationVnic) &&
        Objects.equals(this.destinationVpc, flow.destinationVpc) &&
        Objects.equals(this.firewallAction, flow.firewallAction) &&
        Objects.equals(this.flowTag, flow.flowTag) &&
        Objects.equals(this.port, flow.port) &&
        Objects.equals(this.protocol, flow.protocol) &&
        Objects.equals(this.sourceCluster, flow.sourceCluster) &&
        Objects.equals(this.sourceDatacenter, flow.sourceDatacenter) &&
        Objects.equals(this.sourceFolders, flow.sourceFolders) &&
        Objects.equals(this.sourceHost, flow.sourceHost) &&
        Objects.equals(this.sourceIp, flow.sourceIp) &&
        Objects.equals(this.sourceIpSets, flow.sourceIpSets) &&
        Objects.equals(this.sourceL2Network, flow.sourceL2Network) &&
        Objects.equals(this.sourceResourcePool, flow.sourceResourcePool) &&
        Objects.equals(this.sourceSecurityGroups, flow.sourceSecurityGroups) &&
        Objects.equals(this.sourceSecurityTags, flow.sourceSecurityTags) &&
        Objects.equals(this.sourceVm, flow.sourceVm) &&
        Objects.equals(this.sourceVmTags, flow.sourceVmTags) &&
        Objects.equals(this.sourceVnic, flow.sourceVnic) &&
        Objects.equals(this.sourceVpc, flow.sourceVpc) &&
        Objects.equals(this.trafficType, flow.trafficType) &&
        Objects.equals(this.withinHost, flow.withinHost) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(destinationCluster, destinationDatacenter, destinationFolders, destinationHost, destinationIp, destinationIpSets, destinationL2Network, destinationResourcePool, destinationSecurityGroups, destinationSecurityTags, destinationVm, destinationVmTags, destinationVnic, destinationVpc, firewallAction, flowTag, port, protocol, sourceCluster, sourceDatacenter, sourceFolders, sourceHost, sourceIp, sourceIpSets, sourceL2Network, sourceResourcePool, sourceSecurityGroups, sourceSecurityTags, sourceVm, sourceVmTags, sourceVnic, sourceVpc, trafficType, withinHost, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Flow {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    destinationCluster: ").append(toIndentedString(destinationCluster)).append("\n");
    sb.append("    destinationDatacenter: ").append(toIndentedString(destinationDatacenter)).append("\n");
    sb.append("    destinationFolders: ").append(toIndentedString(destinationFolders)).append("\n");
    sb.append("    destinationHost: ").append(toIndentedString(destinationHost)).append("\n");
    sb.append("    destinationIp: ").append(toIndentedString(destinationIp)).append("\n");
    sb.append("    destinationIpSets: ").append(toIndentedString(destinationIpSets)).append("\n");
    sb.append("    destinationL2Network: ").append(toIndentedString(destinationL2Network)).append("\n");
    sb.append("    destinationResourcePool: ").append(toIndentedString(destinationResourcePool)).append("\n");
    sb.append("    destinationSecurityGroups: ").append(toIndentedString(destinationSecurityGroups)).append("\n");
    sb.append("    destinationSecurityTags: ").append(toIndentedString(destinationSecurityTags)).append("\n");
    sb.append("    destinationVm: ").append(toIndentedString(destinationVm)).append("\n");
    sb.append("    destinationVmTags: ").append(toIndentedString(destinationVmTags)).append("\n");
    sb.append("    destinationVnic: ").append(toIndentedString(destinationVnic)).append("\n");
    sb.append("    destinationVpc: ").append(toIndentedString(destinationVpc)).append("\n");
    sb.append("    firewallAction: ").append(toIndentedString(firewallAction)).append("\n");
    sb.append("    flowTag: ").append(toIndentedString(flowTag)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    protocol: ").append(toIndentedString(protocol)).append("\n");
    sb.append("    sourceCluster: ").append(toIndentedString(sourceCluster)).append("\n");
    sb.append("    sourceDatacenter: ").append(toIndentedString(sourceDatacenter)).append("\n");
    sb.append("    sourceFolders: ").append(toIndentedString(sourceFolders)).append("\n");
    sb.append("    sourceHost: ").append(toIndentedString(sourceHost)).append("\n");
    sb.append("    sourceIp: ").append(toIndentedString(sourceIp)).append("\n");
    sb.append("    sourceIpSets: ").append(toIndentedString(sourceIpSets)).append("\n");
    sb.append("    sourceL2Network: ").append(toIndentedString(sourceL2Network)).append("\n");
    sb.append("    sourceResourcePool: ").append(toIndentedString(sourceResourcePool)).append("\n");
    sb.append("    sourceSecurityGroups: ").append(toIndentedString(sourceSecurityGroups)).append("\n");
    sb.append("    sourceSecurityTags: ").append(toIndentedString(sourceSecurityTags)).append("\n");
    sb.append("    sourceVm: ").append(toIndentedString(sourceVm)).append("\n");
    sb.append("    sourceVmTags: ").append(toIndentedString(sourceVmTags)).append("\n");
    sb.append("    sourceVnic: ").append(toIndentedString(sourceVnic)).append("\n");
    sb.append("    sourceVpc: ").append(toIndentedString(sourceVpc)).append("\n");
    sb.append("    trafficType: ").append(toIndentedString(trafficType)).append("\n");
    sb.append("    withinHost: ").append(toIndentedString(withinHost)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("entity_id");
    openapiFields.add("entity_type");
    openapiFields.add("name");
    openapiFields.add("destination_cluster");
    openapiFields.add("destination_datacenter");
    openapiFields.add("destination_folders");
    openapiFields.add("destination_host");
    openapiFields.add("destination_ip");
    openapiFields.add("destination_ip_sets");
    openapiFields.add("destination_l2_network");
    openapiFields.add("destination_resource_pool");
    openapiFields.add("destination_security_groups");
    openapiFields.add("destination_security_tags");
    openapiFields.add("destination_vm");
    openapiFields.add("destination_vm_tags");
    openapiFields.add("destination_vnic");
    openapiFields.add("destination_vpc");
    openapiFields.add("firewall_action");
    openapiFields.add("flow_tag");
    openapiFields.add("port");
    openapiFields.add("protocol");
    openapiFields.add("source_cluster");
    openapiFields.add("source_datacenter");
    openapiFields.add("source_folders");
    openapiFields.add("source_host");
    openapiFields.add("source_ip");
    openapiFields.add("source_ip_sets");
    openapiFields.add("source_l2_network");
    openapiFields.add("source_resource_pool");
    openapiFields.add("source_security_groups");
    openapiFields.add("source_security_tags");
    openapiFields.add("source_vm");
    openapiFields.add("source_vm_tags");
    openapiFields.add("source_vnic");
    openapiFields.add("source_vpc");
    openapiFields.add("traffic_type");
    openapiFields.add("within_host");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Flow
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Flow.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Flow is not found in the empty JSON string", Flow.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Flow.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Flow` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Flow.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Flow' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Flow> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Flow.class));

       return (TypeAdapter<T>) new TypeAdapter<Flow>() {
           @Override
           public void write(JsonWriter out, Flow value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Flow read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Flow given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Flow
   * @throws IOException if the JSON string is invalid with respect to Flow
   */
  public static Flow fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Flow.class);
  }

  /**
   * Convert an instance of Flow to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

