/*
 * vRealize Network Insight API Reference
 * vRealize Network Insight API Reference
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.BaseEntity;
import org.openapitools.client.model.EntityType;
import org.openapitools.client.model.FirewallAction;
import org.openapitools.client.model.PortRange;
import org.openapitools.client.model.Reference;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * BaseFirewallRule
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:01:28.864194-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BaseFirewallRule extends BaseEntity {
  public static final String SERIALIZED_NAME_ACTION = "action";
  @SerializedName(SERIALIZED_NAME_ACTION)
  private FirewallAction action;

  public static final String SERIALIZED_NAME_DESTINATION_ANY = "destination_any";
  @SerializedName(SERIALIZED_NAME_DESTINATION_ANY)
  private Boolean destinationAny;

  public static final String SERIALIZED_NAME_DESTINATION_INVERSION = "destination_inversion";
  @SerializedName(SERIALIZED_NAME_DESTINATION_INVERSION)
  private Boolean destinationInversion;

  public static final String SERIALIZED_NAME_DESTINATIONS = "destinations";
  @SerializedName(SERIALIZED_NAME_DESTINATIONS)
  private List<Reference> destinations = new ArrayList<>();

  public static final String SERIALIZED_NAME_DISABLED = "disabled";
  @SerializedName(SERIALIZED_NAME_DISABLED)
  private Boolean disabled;

  public static final String SERIALIZED_NAME_PORT_RANGES = "port_ranges";
  @SerializedName(SERIALIZED_NAME_PORT_RANGES)
  private List<PortRange> portRanges = new ArrayList<>();

  public static final String SERIALIZED_NAME_RULE_ID = "rule_id";
  @SerializedName(SERIALIZED_NAME_RULE_ID)
  private String ruleId;

  public static final String SERIALIZED_NAME_SECTION_ID = "section_id";
  @SerializedName(SERIALIZED_NAME_SECTION_ID)
  private String sectionId;

  public static final String SERIALIZED_NAME_SECTION_NAME = "section_name";
  @SerializedName(SERIALIZED_NAME_SECTION_NAME)
  private String sectionName;

  public static final String SERIALIZED_NAME_SEQUENCE_NUMBER = "sequence_number";
  @SerializedName(SERIALIZED_NAME_SEQUENCE_NUMBER)
  private Integer sequenceNumber;

  public static final String SERIALIZED_NAME_SERVICE_ANY = "service_any";
  @SerializedName(SERIALIZED_NAME_SERVICE_ANY)
  private Boolean serviceAny;

  public static final String SERIALIZED_NAME_SERVICES = "services";
  @SerializedName(SERIALIZED_NAME_SERVICES)
  private List<Reference> services = new ArrayList<>();

  public static final String SERIALIZED_NAME_SOURCE_ANY = "source_any";
  @SerializedName(SERIALIZED_NAME_SOURCE_ANY)
  private Boolean sourceAny;

  public static final String SERIALIZED_NAME_SOURCE_INVERSION = "source_inversion";
  @SerializedName(SERIALIZED_NAME_SOURCE_INVERSION)
  private Boolean sourceInversion;

  public static final String SERIALIZED_NAME_SOURCES = "sources";
  @SerializedName(SERIALIZED_NAME_SOURCES)
  private List<Reference> sources = new ArrayList<>();

  public BaseFirewallRule() {
    this.entityType = this.getClass().getSimpleName();
  }

  public BaseFirewallRule action(FirewallAction action) {
    this.action = action;
    return this;
  }

  /**
   * Get action
   * @return action
   */
  @javax.annotation.Nullable
  public FirewallAction getAction() {
    return action;
  }

  public void setAction(FirewallAction action) {
    this.action = action;
  }


  public BaseFirewallRule destinationAny(Boolean destinationAny) {
    this.destinationAny = destinationAny;
    return this;
  }

  /**
   * Get destinationAny
   * @return destinationAny
   */
  @javax.annotation.Nullable
  public Boolean getDestinationAny() {
    return destinationAny;
  }

  public void setDestinationAny(Boolean destinationAny) {
    this.destinationAny = destinationAny;
  }


  public BaseFirewallRule destinationInversion(Boolean destinationInversion) {
    this.destinationInversion = destinationInversion;
    return this;
  }

  /**
   * Get destinationInversion
   * @return destinationInversion
   */
  @javax.annotation.Nullable
  public Boolean getDestinationInversion() {
    return destinationInversion;
  }

  public void setDestinationInversion(Boolean destinationInversion) {
    this.destinationInversion = destinationInversion;
  }


  public BaseFirewallRule destinations(List<Reference> destinations) {
    this.destinations = destinations;
    return this;
  }

  public BaseFirewallRule addDestinationsItem(Reference destinationsItem) {
    if (this.destinations == null) {
      this.destinations = new ArrayList<>();
    }
    this.destinations.add(destinationsItem);
    return this;
  }

  /**
   * Get destinations
   * @return destinations
   */
  @javax.annotation.Nullable
  public List<Reference> getDestinations() {
    return destinations;
  }

  public void setDestinations(List<Reference> destinations) {
    this.destinations = destinations;
  }


  public BaseFirewallRule disabled(Boolean disabled) {
    this.disabled = disabled;
    return this;
  }

  /**
   * Get disabled
   * @return disabled
   */
  @javax.annotation.Nullable
  public Boolean getDisabled() {
    return disabled;
  }

  public void setDisabled(Boolean disabled) {
    this.disabled = disabled;
  }


  public BaseFirewallRule portRanges(List<PortRange> portRanges) {
    this.portRanges = portRanges;
    return this;
  }

  public BaseFirewallRule addPortRangesItem(PortRange portRangesItem) {
    if (this.portRanges == null) {
      this.portRanges = new ArrayList<>();
    }
    this.portRanges.add(portRangesItem);
    return this;
  }

  /**
   * Get portRanges
   * @return portRanges
   */
  @javax.annotation.Nullable
  public List<PortRange> getPortRanges() {
    return portRanges;
  }

  public void setPortRanges(List<PortRange> portRanges) {
    this.portRanges = portRanges;
  }


  public BaseFirewallRule ruleId(String ruleId) {
    this.ruleId = ruleId;
    return this;
  }

  /**
   * Get ruleId
   * @return ruleId
   */
  @javax.annotation.Nullable
  public String getRuleId() {
    return ruleId;
  }

  public void setRuleId(String ruleId) {
    this.ruleId = ruleId;
  }


  public BaseFirewallRule sectionId(String sectionId) {
    this.sectionId = sectionId;
    return this;
  }

  /**
   * Get sectionId
   * @return sectionId
   */
  @javax.annotation.Nullable
  public String getSectionId() {
    return sectionId;
  }

  public void setSectionId(String sectionId) {
    this.sectionId = sectionId;
  }


  public BaseFirewallRule sectionName(String sectionName) {
    this.sectionName = sectionName;
    return this;
  }

  /**
   * Get sectionName
   * @return sectionName
   */
  @javax.annotation.Nullable
  public String getSectionName() {
    return sectionName;
  }

  public void setSectionName(String sectionName) {
    this.sectionName = sectionName;
  }


  public BaseFirewallRule sequenceNumber(Integer sequenceNumber) {
    this.sequenceNumber = sequenceNumber;
    return this;
  }

  /**
   * Get sequenceNumber
   * @return sequenceNumber
   */
  @javax.annotation.Nullable
  public Integer getSequenceNumber() {
    return sequenceNumber;
  }

  public void setSequenceNumber(Integer sequenceNumber) {
    this.sequenceNumber = sequenceNumber;
  }


  public BaseFirewallRule serviceAny(Boolean serviceAny) {
    this.serviceAny = serviceAny;
    return this;
  }

  /**
   * Get serviceAny
   * @return serviceAny
   */
  @javax.annotation.Nullable
  public Boolean getServiceAny() {
    return serviceAny;
  }

  public void setServiceAny(Boolean serviceAny) {
    this.serviceAny = serviceAny;
  }


  public BaseFirewallRule services(List<Reference> services) {
    this.services = services;
    return this;
  }

  public BaseFirewallRule addServicesItem(Reference servicesItem) {
    if (this.services == null) {
      this.services = new ArrayList<>();
    }
    this.services.add(servicesItem);
    return this;
  }

  /**
   * Get services
   * @return services
   */
  @javax.annotation.Nullable
  public List<Reference> getServices() {
    return services;
  }

  public void setServices(List<Reference> services) {
    this.services = services;
  }


  public BaseFirewallRule sourceAny(Boolean sourceAny) {
    this.sourceAny = sourceAny;
    return this;
  }

  /**
   * Get sourceAny
   * @return sourceAny
   */
  @javax.annotation.Nullable
  public Boolean getSourceAny() {
    return sourceAny;
  }

  public void setSourceAny(Boolean sourceAny) {
    this.sourceAny = sourceAny;
  }


  public BaseFirewallRule sourceInversion(Boolean sourceInversion) {
    this.sourceInversion = sourceInversion;
    return this;
  }

  /**
   * Get sourceInversion
   * @return sourceInversion
   */
  @javax.annotation.Nullable
  public Boolean getSourceInversion() {
    return sourceInversion;
  }

  public void setSourceInversion(Boolean sourceInversion) {
    this.sourceInversion = sourceInversion;
  }


  public BaseFirewallRule sources(List<Reference> sources) {
    this.sources = sources;
    return this;
  }

  public BaseFirewallRule addSourcesItem(Reference sourcesItem) {
    if (this.sources == null) {
      this.sources = new ArrayList<>();
    }
    this.sources.add(sourcesItem);
    return this;
  }

  /**
   * Get sources
   * @return sources
   */
  @javax.annotation.Nullable
  public List<Reference> getSources() {
    return sources;
  }

  public void setSources(List<Reference> sources) {
    this.sources = sources;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BaseFirewallRule baseFirewallRule = (BaseFirewallRule) o;
    return Objects.equals(this.action, baseFirewallRule.action) &&
        Objects.equals(this.destinationAny, baseFirewallRule.destinationAny) &&
        Objects.equals(this.destinationInversion, baseFirewallRule.destinationInversion) &&
        Objects.equals(this.destinations, baseFirewallRule.destinations) &&
        Objects.equals(this.disabled, baseFirewallRule.disabled) &&
        Objects.equals(this.portRanges, baseFirewallRule.portRanges) &&
        Objects.equals(this.ruleId, baseFirewallRule.ruleId) &&
        Objects.equals(this.sectionId, baseFirewallRule.sectionId) &&
        Objects.equals(this.sectionName, baseFirewallRule.sectionName) &&
        Objects.equals(this.sequenceNumber, baseFirewallRule.sequenceNumber) &&
        Objects.equals(this.serviceAny, baseFirewallRule.serviceAny) &&
        Objects.equals(this.services, baseFirewallRule.services) &&
        Objects.equals(this.sourceAny, baseFirewallRule.sourceAny) &&
        Objects.equals(this.sourceInversion, baseFirewallRule.sourceInversion) &&
        Objects.equals(this.sources, baseFirewallRule.sources) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, destinationAny, destinationInversion, destinations, disabled, portRanges, ruleId, sectionId, sectionName, sequenceNumber, serviceAny, services, sourceAny, sourceInversion, sources, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BaseFirewallRule {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    destinationAny: ").append(toIndentedString(destinationAny)).append("\n");
    sb.append("    destinationInversion: ").append(toIndentedString(destinationInversion)).append("\n");
    sb.append("    destinations: ").append(toIndentedString(destinations)).append("\n");
    sb.append("    disabled: ").append(toIndentedString(disabled)).append("\n");
    sb.append("    portRanges: ").append(toIndentedString(portRanges)).append("\n");
    sb.append("    ruleId: ").append(toIndentedString(ruleId)).append("\n");
    sb.append("    sectionId: ").append(toIndentedString(sectionId)).append("\n");
    sb.append("    sectionName: ").append(toIndentedString(sectionName)).append("\n");
    sb.append("    sequenceNumber: ").append(toIndentedString(sequenceNumber)).append("\n");
    sb.append("    serviceAny: ").append(toIndentedString(serviceAny)).append("\n");
    sb.append("    services: ").append(toIndentedString(services)).append("\n");
    sb.append("    sourceAny: ").append(toIndentedString(sourceAny)).append("\n");
    sb.append("    sourceInversion: ").append(toIndentedString(sourceInversion)).append("\n");
    sb.append("    sources: ").append(toIndentedString(sources)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("entity_id");
    openapiFields.add("entity_type");
    openapiFields.add("name");
    openapiFields.add("action");
    openapiFields.add("destination_any");
    openapiFields.add("destination_inversion");
    openapiFields.add("destinations");
    openapiFields.add("disabled");
    openapiFields.add("port_ranges");
    openapiFields.add("rule_id");
    openapiFields.add("section_id");
    openapiFields.add("section_name");
    openapiFields.add("sequence_number");
    openapiFields.add("service_any");
    openapiFields.add("services");
    openapiFields.add("source_any");
    openapiFields.add("source_inversion");
    openapiFields.add("sources");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BaseFirewallRule
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BaseFirewallRule.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BaseFirewallRule is not found in the empty JSON string", BaseFirewallRule.openapiRequiredFields.toString()));
        }
      }

      String discriminatorValue = jsonElement.getAsJsonObject().get("entity_type").getAsString();
      switch (discriminatorValue) {
        case "EC2SGFirewallRule":
          EC2SGFirewallRule.validateJsonElement(jsonElement);
          break;
        case "NSXFirewallRule":
          NSXFirewallRule.validateJsonElement(jsonElement);
          break;
        case "NSXRedirectRule":
          NSXRedirectRule.validateJsonElement(jsonElement);
          break;
        default:
          throw new IllegalArgumentException(String.format("The value of the `entity_type` field `%s` does not match any key defined in the discriminator's mapping.", discriminatorValue));
      }
  }


  /**
   * Create an instance of BaseFirewallRule given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BaseFirewallRule
   * @throws IOException if the JSON string is invalid with respect to BaseFirewallRule
   */
  public static BaseFirewallRule fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BaseFirewallRule.class);
  }

  /**
   * Convert an instance of BaseFirewallRule to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

