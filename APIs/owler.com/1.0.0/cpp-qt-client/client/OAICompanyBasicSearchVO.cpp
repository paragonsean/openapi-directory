/**
 * Owler
 * Search for information on companies using a website or company name and get access to Company Data, News, Blog Posts, Competitor Lists and much more.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICompanyBasicSearchVO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICompanyBasicSearchVO::OAICompanyBasicSearchVO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICompanyBasicSearchVO::OAICompanyBasicSearchVO() {
    this->initializeModel();
}

OAICompanyBasicSearchVO::~OAICompanyBasicSearchVO() {}

void OAICompanyBasicSearchVO::initializeModel() {

    m_company_id_isSet = false;
    m_company_id_isValid = false;

    m_hq_address_isSet = false;
    m_hq_address_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_perm_id_isSet = false;
    m_perm_id_isValid = false;

    m_profile_url_isSet = false;
    m_profile_url_isValid = false;

    m_short_name_isSet = false;
    m_short_name_isValid = false;

    m_website_isSet = false;
    m_website_isValid = false;
}

void OAICompanyBasicSearchVO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICompanyBasicSearchVO::fromJsonObject(QJsonObject json) {

    m_company_id_isValid = ::OpenAPI::fromJsonValue(m_company_id, json[QString("company_id")]);
    m_company_id_isSet = !json[QString("company_id")].isNull() && m_company_id_isValid;

    m_hq_address_isValid = ::OpenAPI::fromJsonValue(m_hq_address, json[QString("hq_address")]);
    m_hq_address_isSet = !json[QString("hq_address")].isNull() && m_hq_address_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_perm_id_isValid = ::OpenAPI::fromJsonValue(m_perm_id, json[QString("perm_id")]);
    m_perm_id_isSet = !json[QString("perm_id")].isNull() && m_perm_id_isValid;

    m_profile_url_isValid = ::OpenAPI::fromJsonValue(m_profile_url, json[QString("profile_url")]);
    m_profile_url_isSet = !json[QString("profile_url")].isNull() && m_profile_url_isValid;

    m_short_name_isValid = ::OpenAPI::fromJsonValue(m_short_name, json[QString("short_name")]);
    m_short_name_isSet = !json[QString("short_name")].isNull() && m_short_name_isValid;

    m_website_isValid = ::OpenAPI::fromJsonValue(m_website, json[QString("website")]);
    m_website_isSet = !json[QString("website")].isNull() && m_website_isValid;
}

QString OAICompanyBasicSearchVO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICompanyBasicSearchVO::asJsonObject() const {
    QJsonObject obj;
    if (m_company_id_isSet) {
        obj.insert(QString("company_id"), ::OpenAPI::toJsonValue(m_company_id));
    }
    if (m_hq_address.isSet()) {
        obj.insert(QString("hq_address"), ::OpenAPI::toJsonValue(m_hq_address));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_perm_id_isSet) {
        obj.insert(QString("perm_id"), ::OpenAPI::toJsonValue(m_perm_id));
    }
    if (m_profile_url_isSet) {
        obj.insert(QString("profile_url"), ::OpenAPI::toJsonValue(m_profile_url));
    }
    if (m_short_name_isSet) {
        obj.insert(QString("short_name"), ::OpenAPI::toJsonValue(m_short_name));
    }
    if (m_website_isSet) {
        obj.insert(QString("website"), ::OpenAPI::toJsonValue(m_website));
    }
    return obj;
}

qint64 OAICompanyBasicSearchVO::getCompanyId() const {
    return m_company_id;
}
void OAICompanyBasicSearchVO::setCompanyId(const qint64 &company_id) {
    m_company_id = company_id;
    m_company_id_isSet = true;
}

bool OAICompanyBasicSearchVO::is_company_id_Set() const{
    return m_company_id_isSet;
}

bool OAICompanyBasicSearchVO::is_company_id_Valid() const{
    return m_company_id_isValid;
}

OAIAddress OAICompanyBasicSearchVO::getHqAddress() const {
    return m_hq_address;
}
void OAICompanyBasicSearchVO::setHqAddress(const OAIAddress &hq_address) {
    m_hq_address = hq_address;
    m_hq_address_isSet = true;
}

bool OAICompanyBasicSearchVO::is_hq_address_Set() const{
    return m_hq_address_isSet;
}

bool OAICompanyBasicSearchVO::is_hq_address_Valid() const{
    return m_hq_address_isValid;
}

QString OAICompanyBasicSearchVO::getName() const {
    return m_name;
}
void OAICompanyBasicSearchVO::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICompanyBasicSearchVO::is_name_Set() const{
    return m_name_isSet;
}

bool OAICompanyBasicSearchVO::is_name_Valid() const{
    return m_name_isValid;
}

QString OAICompanyBasicSearchVO::getPermId() const {
    return m_perm_id;
}
void OAICompanyBasicSearchVO::setPermId(const QString &perm_id) {
    m_perm_id = perm_id;
    m_perm_id_isSet = true;
}

bool OAICompanyBasicSearchVO::is_perm_id_Set() const{
    return m_perm_id_isSet;
}

bool OAICompanyBasicSearchVO::is_perm_id_Valid() const{
    return m_perm_id_isValid;
}

QString OAICompanyBasicSearchVO::getProfileUrl() const {
    return m_profile_url;
}
void OAICompanyBasicSearchVO::setProfileUrl(const QString &profile_url) {
    m_profile_url = profile_url;
    m_profile_url_isSet = true;
}

bool OAICompanyBasicSearchVO::is_profile_url_Set() const{
    return m_profile_url_isSet;
}

bool OAICompanyBasicSearchVO::is_profile_url_Valid() const{
    return m_profile_url_isValid;
}

QString OAICompanyBasicSearchVO::getShortName() const {
    return m_short_name;
}
void OAICompanyBasicSearchVO::setShortName(const QString &short_name) {
    m_short_name = short_name;
    m_short_name_isSet = true;
}

bool OAICompanyBasicSearchVO::is_short_name_Set() const{
    return m_short_name_isSet;
}

bool OAICompanyBasicSearchVO::is_short_name_Valid() const{
    return m_short_name_isValid;
}

QString OAICompanyBasicSearchVO::getWebsite() const {
    return m_website;
}
void OAICompanyBasicSearchVO::setWebsite(const QString &website) {
    m_website = website;
    m_website_isSet = true;
}

bool OAICompanyBasicSearchVO::is_website_Set() const{
    return m_website_isSet;
}

bool OAICompanyBasicSearchVO::is_website_Valid() const{
    return m_website_isValid;
}

bool OAICompanyBasicSearchVO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_company_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hq_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_perm_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_short_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_website_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICompanyBasicSearchVO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
