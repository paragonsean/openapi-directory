/**
 * Owler
 * Search for information on companies using a website or company name and get access to Company Data, News, Blog Posts, Competitor Lists and much more.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICompetitors.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICompetitors::OAICompetitors(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICompetitors::OAICompetitors() {
    this->initializeModel();
}

OAICompetitors::~OAICompetitors() {}

void OAICompetitors::initializeModel() {

    m_competitor_isSet = false;
    m_competitor_isValid = false;

    m_pagination_id_isSet = false;
    m_pagination_id_isValid = false;
}

void OAICompetitors::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICompetitors::fromJsonObject(QJsonObject json) {

    m_competitor_isValid = ::OpenAPI::fromJsonValue(m_competitor, json[QString("competitor")]);
    m_competitor_isSet = !json[QString("competitor")].isNull() && m_competitor_isValid;

    m_pagination_id_isValid = ::OpenAPI::fromJsonValue(m_pagination_id, json[QString("pagination_id")]);
    m_pagination_id_isSet = !json[QString("pagination_id")].isNull() && m_pagination_id_isValid;
}

QString OAICompetitors::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICompetitors::asJsonObject() const {
    QJsonObject obj;
    if (m_competitor.size() > 0) {
        obj.insert(QString("competitor"), ::OpenAPI::toJsonValue(m_competitor));
    }
    if (m_pagination_id_isSet) {
        obj.insert(QString("pagination_id"), ::OpenAPI::toJsonValue(m_pagination_id));
    }
    return obj;
}

QList<OAICompetitorBasicVO> OAICompetitors::getCompetitor() const {
    return m_competitor;
}
void OAICompetitors::setCompetitor(const QList<OAICompetitorBasicVO> &competitor) {
    m_competitor = competitor;
    m_competitor_isSet = true;
}

bool OAICompetitors::is_competitor_Set() const{
    return m_competitor_isSet;
}

bool OAICompetitors::is_competitor_Valid() const{
    return m_competitor_isValid;
}

QString OAICompetitors::getPaginationId() const {
    return m_pagination_id;
}
void OAICompetitors::setPaginationId(const QString &pagination_id) {
    m_pagination_id = pagination_id;
    m_pagination_id_isSet = true;
}

bool OAICompetitors::is_pagination_id_Set() const{
    return m_pagination_id_isSet;
}

bool OAICompetitors::is_pagination_id_Valid() const{
    return m_pagination_id_isValid;
}

bool OAICompetitors::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_competitor.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_pagination_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICompetitors::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
