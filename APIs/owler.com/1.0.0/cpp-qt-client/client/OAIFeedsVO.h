/**
 * Owler
 * Search for information on companies using a website or company name and get access to Company Data, News, Blog Posts, Competitor Lists and much more.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFeedsVO.h
 *
 * 
 */

#ifndef OAIFeedsVO_H
#define OAIFeedsVO_H

#include <QJsonObject>

#include "OAICompanyBasicVO.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICompanyBasicVO;

class OAIFeedsVO : public OAIObject {
public:
    OAIFeedsVO();
    OAIFeedsVO(QString json);
    ~OAIFeedsVO() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCategory() const;
    void setCategory(const QString &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    OAICompanyBasicVO getCompany() const;
    void setCompany(const OAICompanyBasicVO &company);
    bool is_company_Set() const;
    bool is_company_Valid() const;

    QString getEnclosureImage() const;
    void setEnclosureImage(const QString &enclosure_image);
    bool is_enclosure_image_Set() const;
    bool is_enclosure_image_Valid() const;

    QString getFeedDate() const;
    void setFeedDate(const QString &feed_date);
    bool is_feed_date_Set() const;
    bool is_feed_date_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getOwlerFeedUrl() const;
    void setOwlerFeedUrl(const QString &owler_feed_url);
    bool is_owler_feed_url_Set() const;
    bool is_owler_feed_url_Valid() const;

    QString getPublisherLogo() const;
    void setPublisherLogo(const QString &publisher_logo);
    bool is_publisher_logo_Set() const;
    bool is_publisher_logo_Valid() const;

    QString getPublisherName() const;
    void setPublisherName(const QString &publisher_name);
    bool is_publisher_name_Set() const;
    bool is_publisher_name_Valid() const;

    QString getSourceUrl() const;
    void setSourceUrl(const QString &source_url);
    bool is_source_url_Set() const;
    bool is_source_url_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    OAICompanyBasicVO m_company;
    bool m_company_isSet;
    bool m_company_isValid;

    QString m_enclosure_image;
    bool m_enclosure_image_isSet;
    bool m_enclosure_image_isValid;

    QString m_feed_date;
    bool m_feed_date_isSet;
    bool m_feed_date_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_owler_feed_url;
    bool m_owler_feed_url_isSet;
    bool m_owler_feed_url_isValid;

    QString m_publisher_logo;
    bool m_publisher_logo_isSet;
    bool m_publisher_logo_isValid;

    QString m_publisher_name;
    bool m_publisher_name_isSet;
    bool m_publisher_name_isValid;

    QString m_source_url;
    bool m_source_url_isSet;
    bool m_source_url_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFeedsVO)

#endif // OAIFeedsVO_H
