/**
 * Owler
 * Search for information on companies using a website or company name and get access to Company Data, News, Blog Posts, Competitor Lists and much more.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Competitors from '../model/Competitors';

/**
* CompetitorPremiumAPI service.
* @module api/CompetitorPremiumAPIApi
* @version 1.0.0
*/
export default class CompetitorPremiumAPIApi {

    /**
    * Constructs a new CompetitorPremiumAPIApi. 
    * @alias module:api/CompetitorPremiumAPIApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the v1CompanyCompetitorpremiumIdCompanyIdGet operation.
     * @callback module:api/CompetitorPremiumAPIApi~v1CompanyCompetitorpremiumIdCompanyIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Competitors} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Competitor information by Id
     * The Competitors API provides basic information about all competitors of a given company Id
     * @param {String} companyId Company Id
     * @param {Object} opts Optional parameters
     * @param {String} [paginationId] Pass pagination_id as * in the first API request. The API response will return top competitors along with the next pagination_id which can be passed in the subsequent API request to get the next set of competitors. Repeat this process until needed or till the pagination_id returned is blank. Note:Every response will have maximum of 50 competitors.
     * @param {module:model/String} [format = 'json')] Format of the response content - json (by default if not specified), xml
     * @param {module:api/CompetitorPremiumAPIApi~v1CompanyCompetitorpremiumIdCompanyIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Competitors}
     */
    v1CompanyCompetitorpremiumIdCompanyIdGet(companyId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'companyId' is set
      if (companyId === undefined || companyId === null) {
        throw new Error("Missing the required parameter 'companyId' when calling v1CompanyCompetitorpremiumIdCompanyIdGet");
      }

      let pathParams = {
        'companyId': companyId
      };
      let queryParams = {
        'pagination_id': opts['paginationId'],
        'format': opts['format']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['user_key'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = Competitors;
      return this.apiClient.callApi(
        '/v1/company/competitorpremium/id/{companyId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1CompanyCompetitorpremiumUrlWebsiteGet operation.
     * @callback module:api/CompetitorPremiumAPIApi~v1CompanyCompetitorpremiumUrlWebsiteGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Competitors} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Competitor information by Url
     * The Competitors API provides basic information about all competitors of a given company Id
     * @param {String} website Company Id
     * @param {Object} opts Optional parameters
     * @param {String} [paginationId] Pass pagination_id as * in the first API request. The API response will return top competitors along with the next pagination_id which can be passed in the subsequent API request to get the next set of competitors. Repeat this process until needed or till the pagination_id returned is blank. Note:Every response will have maximum of 50 competitors.
     * @param {module:model/String} [format = 'json')] Format of the response content - json (by default if not specified), xml
     * @param {module:api/CompetitorPremiumAPIApi~v1CompanyCompetitorpremiumUrlWebsiteGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Competitors}
     */
    v1CompanyCompetitorpremiumUrlWebsiteGet(website, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'website' is set
      if (website === undefined || website === null) {
        throw new Error("Missing the required parameter 'website' when calling v1CompanyCompetitorpremiumUrlWebsiteGet");
      }

      let pathParams = {
        'website': website
      };
      let queryParams = {
        'pagination_id': opts['paginationId'],
        'format': opts['format']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['user_key'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = Competitors;
      return this.apiClient.callApi(
        '/v1/company/competitorpremium/url/{website}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
