/**
 * Owler
 * Search for information on companies using a website or company name and get access to Company Data, News, Blog Posts, Competitor Lists and much more.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Acquisition from './model/Acquisition';
import Address from './model/Address';
import BasicResults from './model/BasicResults';
import Ceo from './model/Ceo';
import Company from './model/Company';
import CompanyBasicSearchVO from './model/CompanyBasicSearchVO';
import CompanyBasicVO from './model/CompanyBasicVO';
import CompanyCompetitorVO from './model/CompanyCompetitorVO';
import CompanySearchResultVO from './model/CompanySearchResultVO';
import CompetitorBasicVO from './model/CompetitorBasicVO';
import Competitors from './model/Competitors';
import FeedsVO from './model/FeedsVO';
import Funding from './model/Funding';
import Investor from './model/Investor';
import Results from './model/Results';
import SectorVO from './model/SectorVO';
import Stock from './model/Stock';
import CompanyAPIApi from './api/CompanyAPIApi';
import CompanyPremiumAPIApi from './api/CompanyPremiumAPIApi';
import CompetitorAPIApi from './api/CompetitorAPIApi';
import CompetitorPremiumAPIApi from './api/CompetitorPremiumAPIApi';
import FeedAPIApi from './api/FeedAPIApi';


/**
* Search for information on companies using a website or company name and get access to Company Data, News, Blog Posts, Competitor Lists and much more..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var Owler = require('index'); // See note below*.
* var xxxSvc = new Owler.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new Owler.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new Owler.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new Owler.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Acquisition model constructor.
     * @property {module:model/Acquisition}
     */
    Acquisition,

    /**
     * The Address model constructor.
     * @property {module:model/Address}
     */
    Address,

    /**
     * The BasicResults model constructor.
     * @property {module:model/BasicResults}
     */
    BasicResults,

    /**
     * The Ceo model constructor.
     * @property {module:model/Ceo}
     */
    Ceo,

    /**
     * The Company model constructor.
     * @property {module:model/Company}
     */
    Company,

    /**
     * The CompanyBasicSearchVO model constructor.
     * @property {module:model/CompanyBasicSearchVO}
     */
    CompanyBasicSearchVO,

    /**
     * The CompanyBasicVO model constructor.
     * @property {module:model/CompanyBasicVO}
     */
    CompanyBasicVO,

    /**
     * The CompanyCompetitorVO model constructor.
     * @property {module:model/CompanyCompetitorVO}
     */
    CompanyCompetitorVO,

    /**
     * The CompanySearchResultVO model constructor.
     * @property {module:model/CompanySearchResultVO}
     */
    CompanySearchResultVO,

    /**
     * The CompetitorBasicVO model constructor.
     * @property {module:model/CompetitorBasicVO}
     */
    CompetitorBasicVO,

    /**
     * The Competitors model constructor.
     * @property {module:model/Competitors}
     */
    Competitors,

    /**
     * The FeedsVO model constructor.
     * @property {module:model/FeedsVO}
     */
    FeedsVO,

    /**
     * The Funding model constructor.
     * @property {module:model/Funding}
     */
    Funding,

    /**
     * The Investor model constructor.
     * @property {module:model/Investor}
     */
    Investor,

    /**
     * The Results model constructor.
     * @property {module:model/Results}
     */
    Results,

    /**
     * The SectorVO model constructor.
     * @property {module:model/SectorVO}
     */
    SectorVO,

    /**
     * The Stock model constructor.
     * @property {module:model/Stock}
     */
    Stock,

    /**
    * The CompanyAPIApi service constructor.
    * @property {module:api/CompanyAPIApi}
    */
    CompanyAPIApi,

    /**
    * The CompanyPremiumAPIApi service constructor.
    * @property {module:api/CompanyPremiumAPIApi}
    */
    CompanyPremiumAPIApi,

    /**
    * The CompetitorAPIApi service constructor.
    * @property {module:api/CompetitorAPIApi}
    */
    CompetitorAPIApi,

    /**
    * The CompetitorPremiumAPIApi service constructor.
    * @property {module:api/CompetitorPremiumAPIApi}
    */
    CompetitorPremiumAPIApi,

    /**
    * The FeedAPIApi service constructor.
    * @property {module:api/FeedAPIApi}
    */
    FeedAPIApi
};
