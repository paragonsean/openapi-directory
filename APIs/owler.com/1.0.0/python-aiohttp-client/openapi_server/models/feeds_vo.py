# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.company_basic_vo import CompanyBasicVO
from openapi_server import util


class FeedsVO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, category: str=None, company: CompanyBasicVO=None, enclosure_image: str=None, feed_date: str=None, id: str=None, owler_feed_url: str=None, publisher_logo: str=None, publisher_name: str=None, source_url: str=None, title: str=None):
        """FeedsVO - a model defined in OpenAPI

        :param category: The category of this FeedsVO.
        :param company: The company of this FeedsVO.
        :param enclosure_image: The enclosure_image of this FeedsVO.
        :param feed_date: The feed_date of this FeedsVO.
        :param id: The id of this FeedsVO.
        :param owler_feed_url: The owler_feed_url of this FeedsVO.
        :param publisher_logo: The publisher_logo of this FeedsVO.
        :param publisher_name: The publisher_name of this FeedsVO.
        :param source_url: The source_url of this FeedsVO.
        :param title: The title of this FeedsVO.
        """
        self.openapi_types = {
            'category': str,
            'company': CompanyBasicVO,
            'enclosure_image': str,
            'feed_date': str,
            'id': str,
            'owler_feed_url': str,
            'publisher_logo': str,
            'publisher_name': str,
            'source_url': str,
            'title': str
        }

        self.attribute_map = {
            'category': 'category',
            'company': 'company',
            'enclosure_image': 'enclosure_image',
            'feed_date': 'feed_date',
            'id': 'id',
            'owler_feed_url': 'owler_feed_url',
            'publisher_logo': 'publisher_logo',
            'publisher_name': 'publisher_name',
            'source_url': 'source_url',
            'title': 'title'
        }

        self._category = category
        self._company = company
        self._enclosure_image = enclosure_image
        self._feed_date = feed_date
        self._id = id
        self._owler_feed_url = owler_feed_url
        self._publisher_logo = publisher_logo
        self._publisher_name = publisher_name
        self._source_url = source_url
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FeedsVO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FeedsVO of this FeedsVO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def category(self):
        """Gets the category of this FeedsVO.


        :return: The category of this FeedsVO.
        :rtype: str
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this FeedsVO.


        :param category: The category of this FeedsVO.
        :type category: str
        """

        self._category = category

    @property
    def company(self):
        """Gets the company of this FeedsVO.


        :return: The company of this FeedsVO.
        :rtype: CompanyBasicVO
        """
        return self._company

    @company.setter
    def company(self, company):
        """Sets the company of this FeedsVO.


        :param company: The company of this FeedsVO.
        :type company: CompanyBasicVO
        """

        self._company = company

    @property
    def enclosure_image(self):
        """Gets the enclosure_image of this FeedsVO.


        :return: The enclosure_image of this FeedsVO.
        :rtype: str
        """
        return self._enclosure_image

    @enclosure_image.setter
    def enclosure_image(self, enclosure_image):
        """Sets the enclosure_image of this FeedsVO.


        :param enclosure_image: The enclosure_image of this FeedsVO.
        :type enclosure_image: str
        """

        self._enclosure_image = enclosure_image

    @property
    def feed_date(self):
        """Gets the feed_date of this FeedsVO.


        :return: The feed_date of this FeedsVO.
        :rtype: str
        """
        return self._feed_date

    @feed_date.setter
    def feed_date(self, feed_date):
        """Sets the feed_date of this FeedsVO.


        :param feed_date: The feed_date of this FeedsVO.
        :type feed_date: str
        """

        self._feed_date = feed_date

    @property
    def id(self):
        """Gets the id of this FeedsVO.


        :return: The id of this FeedsVO.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this FeedsVO.


        :param id: The id of this FeedsVO.
        :type id: str
        """

        self._id = id

    @property
    def owler_feed_url(self):
        """Gets the owler_feed_url of this FeedsVO.


        :return: The owler_feed_url of this FeedsVO.
        :rtype: str
        """
        return self._owler_feed_url

    @owler_feed_url.setter
    def owler_feed_url(self, owler_feed_url):
        """Sets the owler_feed_url of this FeedsVO.


        :param owler_feed_url: The owler_feed_url of this FeedsVO.
        :type owler_feed_url: str
        """

        self._owler_feed_url = owler_feed_url

    @property
    def publisher_logo(self):
        """Gets the publisher_logo of this FeedsVO.


        :return: The publisher_logo of this FeedsVO.
        :rtype: str
        """
        return self._publisher_logo

    @publisher_logo.setter
    def publisher_logo(self, publisher_logo):
        """Sets the publisher_logo of this FeedsVO.


        :param publisher_logo: The publisher_logo of this FeedsVO.
        :type publisher_logo: str
        """

        self._publisher_logo = publisher_logo

    @property
    def publisher_name(self):
        """Gets the publisher_name of this FeedsVO.


        :return: The publisher_name of this FeedsVO.
        :rtype: str
        """
        return self._publisher_name

    @publisher_name.setter
    def publisher_name(self, publisher_name):
        """Sets the publisher_name of this FeedsVO.


        :param publisher_name: The publisher_name of this FeedsVO.
        :type publisher_name: str
        """

        self._publisher_name = publisher_name

    @property
    def source_url(self):
        """Gets the source_url of this FeedsVO.


        :return: The source_url of this FeedsVO.
        :rtype: str
        """
        return self._source_url

    @source_url.setter
    def source_url(self, source_url):
        """Sets the source_url of this FeedsVO.


        :param source_url: The source_url of this FeedsVO.
        :type source_url: str
        """

        self._source_url = source_url

    @property
    def title(self):
        """Gets the title of this FeedsVO.


        :return: The title of this FeedsVO.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this FeedsVO.


        :param title: The title of this FeedsVO.
        :type title: str
        """

        self._title = title
