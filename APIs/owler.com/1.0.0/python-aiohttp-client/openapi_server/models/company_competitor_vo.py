# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.company_basic_vo import CompanyBasicVO
from openapi_server import util


class CompanyCompetitorVO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, competitor: List[CompanyBasicVO]=None):
        """CompanyCompetitorVO - a model defined in OpenAPI

        :param competitor: The competitor of this CompanyCompetitorVO.
        """
        self.openapi_types = {
            'competitor': List[CompanyBasicVO]
        }

        self.attribute_map = {
            'competitor': 'competitor'
        }

        self._competitor = competitor

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CompanyCompetitorVO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CompanyCompetitorVO of this CompanyCompetitorVO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def competitor(self):
        """Gets the competitor of this CompanyCompetitorVO.


        :return: The competitor of this CompanyCompetitorVO.
        :rtype: List[CompanyBasicVO]
        """
        return self._competitor

    @competitor.setter
    def competitor(self, competitor):
        """Sets the competitor of this CompanyCompetitorVO.


        :param competitor: The competitor of this CompanyCompetitorVO.
        :type competitor: List[CompanyBasicVO]
        """

        self._competitor = competitor
