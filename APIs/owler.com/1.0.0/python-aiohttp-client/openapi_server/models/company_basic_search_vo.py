# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.address import Address
from openapi_server import util


class CompanyBasicSearchVO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, company_id: int=None, hq_address: Address=None, name: str=None, perm_id: str=None, profile_url: str=None, short_name: str=None, website: str=None):
        """CompanyBasicSearchVO - a model defined in OpenAPI

        :param company_id: The company_id of this CompanyBasicSearchVO.
        :param hq_address: The hq_address of this CompanyBasicSearchVO.
        :param name: The name of this CompanyBasicSearchVO.
        :param perm_id: The perm_id of this CompanyBasicSearchVO.
        :param profile_url: The profile_url of this CompanyBasicSearchVO.
        :param short_name: The short_name of this CompanyBasicSearchVO.
        :param website: The website of this CompanyBasicSearchVO.
        """
        self.openapi_types = {
            'company_id': int,
            'hq_address': Address,
            'name': str,
            'perm_id': str,
            'profile_url': str,
            'short_name': str,
            'website': str
        }

        self.attribute_map = {
            'company_id': 'company_id',
            'hq_address': 'hq_address',
            'name': 'name',
            'perm_id': 'perm_id',
            'profile_url': 'profile_url',
            'short_name': 'short_name',
            'website': 'website'
        }

        self._company_id = company_id
        self._hq_address = hq_address
        self._name = name
        self._perm_id = perm_id
        self._profile_url = profile_url
        self._short_name = short_name
        self._website = website

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CompanyBasicSearchVO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CompanyBasicSearchVO of this CompanyBasicSearchVO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def company_id(self):
        """Gets the company_id of this CompanyBasicSearchVO.


        :return: The company_id of this CompanyBasicSearchVO.
        :rtype: int
        """
        return self._company_id

    @company_id.setter
    def company_id(self, company_id):
        """Sets the company_id of this CompanyBasicSearchVO.


        :param company_id: The company_id of this CompanyBasicSearchVO.
        :type company_id: int
        """

        self._company_id = company_id

    @property
    def hq_address(self):
        """Gets the hq_address of this CompanyBasicSearchVO.


        :return: The hq_address of this CompanyBasicSearchVO.
        :rtype: Address
        """
        return self._hq_address

    @hq_address.setter
    def hq_address(self, hq_address):
        """Sets the hq_address of this CompanyBasicSearchVO.


        :param hq_address: The hq_address of this CompanyBasicSearchVO.
        :type hq_address: Address
        """

        self._hq_address = hq_address

    @property
    def name(self):
        """Gets the name of this CompanyBasicSearchVO.


        :return: The name of this CompanyBasicSearchVO.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CompanyBasicSearchVO.


        :param name: The name of this CompanyBasicSearchVO.
        :type name: str
        """

        self._name = name

    @property
    def perm_id(self):
        """Gets the perm_id of this CompanyBasicSearchVO.


        :return: The perm_id of this CompanyBasicSearchVO.
        :rtype: str
        """
        return self._perm_id

    @perm_id.setter
    def perm_id(self, perm_id):
        """Sets the perm_id of this CompanyBasicSearchVO.


        :param perm_id: The perm_id of this CompanyBasicSearchVO.
        :type perm_id: str
        """

        self._perm_id = perm_id

    @property
    def profile_url(self):
        """Gets the profile_url of this CompanyBasicSearchVO.


        :return: The profile_url of this CompanyBasicSearchVO.
        :rtype: str
        """
        return self._profile_url

    @profile_url.setter
    def profile_url(self, profile_url):
        """Sets the profile_url of this CompanyBasicSearchVO.


        :param profile_url: The profile_url of this CompanyBasicSearchVO.
        :type profile_url: str
        """

        self._profile_url = profile_url

    @property
    def short_name(self):
        """Gets the short_name of this CompanyBasicSearchVO.


        :return: The short_name of this CompanyBasicSearchVO.
        :rtype: str
        """
        return self._short_name

    @short_name.setter
    def short_name(self, short_name):
        """Sets the short_name of this CompanyBasicSearchVO.


        :param short_name: The short_name of this CompanyBasicSearchVO.
        :type short_name: str
        """

        self._short_name = short_name

    @property
    def website(self):
        """Gets the website of this CompanyBasicSearchVO.


        :return: The website of this CompanyBasicSearchVO.
        :rtype: str
        """
        return self._website

    @website.setter
    def website(self, website):
        """Sets the website of this CompanyBasicSearchVO.


        :param website: The website of this CompanyBasicSearchVO.
        :type website: str
        """

        self._website = website
