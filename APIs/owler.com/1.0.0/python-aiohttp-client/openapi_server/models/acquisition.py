# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Acquisition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, acquirer_company_id: str=None, amount: str=None, company_id: str=None, _date: str=None, name: str=None, status: str=None, undisclosed: str=None, website: str=None):
        """Acquisition - a model defined in OpenAPI

        :param acquirer_company_id: The acquirer_company_id of this Acquisition.
        :param amount: The amount of this Acquisition.
        :param company_id: The company_id of this Acquisition.
        :param _date: The _date of this Acquisition.
        :param name: The name of this Acquisition.
        :param status: The status of this Acquisition.
        :param undisclosed: The undisclosed of this Acquisition.
        :param website: The website of this Acquisition.
        """
        self.openapi_types = {
            'acquirer_company_id': str,
            'amount': str,
            'company_id': str,
            '_date': str,
            'name': str,
            'status': str,
            'undisclosed': str,
            'website': str
        }

        self.attribute_map = {
            'acquirer_company_id': 'acquirer_company_id',
            'amount': 'amount',
            'company_id': 'company_id',
            '_date': 'date',
            'name': 'name',
            'status': 'status',
            'undisclosed': 'undisclosed',
            'website': 'website'
        }

        self._acquirer_company_id = acquirer_company_id
        self._amount = amount
        self._company_id = company_id
        self.__date = _date
        self._name = name
        self._status = status
        self._undisclosed = undisclosed
        self._website = website

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Acquisition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Acquisition of this Acquisition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def acquirer_company_id(self):
        """Gets the acquirer_company_id of this Acquisition.


        :return: The acquirer_company_id of this Acquisition.
        :rtype: str
        """
        return self._acquirer_company_id

    @acquirer_company_id.setter
    def acquirer_company_id(self, acquirer_company_id):
        """Sets the acquirer_company_id of this Acquisition.


        :param acquirer_company_id: The acquirer_company_id of this Acquisition.
        :type acquirer_company_id: str
        """

        self._acquirer_company_id = acquirer_company_id

    @property
    def amount(self):
        """Gets the amount of this Acquisition.


        :return: The amount of this Acquisition.
        :rtype: str
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this Acquisition.


        :param amount: The amount of this Acquisition.
        :type amount: str
        """

        self._amount = amount

    @property
    def company_id(self):
        """Gets the company_id of this Acquisition.


        :return: The company_id of this Acquisition.
        :rtype: str
        """
        return self._company_id

    @company_id.setter
    def company_id(self, company_id):
        """Sets the company_id of this Acquisition.


        :param company_id: The company_id of this Acquisition.
        :type company_id: str
        """

        self._company_id = company_id

    @property
    def _date(self):
        """Gets the _date of this Acquisition.


        :return: The _date of this Acquisition.
        :rtype: str
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this Acquisition.


        :param _date: The _date of this Acquisition.
        :type _date: str
        """

        self.__date = _date

    @property
    def name(self):
        """Gets the name of this Acquisition.


        :return: The name of this Acquisition.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Acquisition.


        :param name: The name of this Acquisition.
        :type name: str
        """

        self._name = name

    @property
    def status(self):
        """Gets the status of this Acquisition.


        :return: The status of this Acquisition.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Acquisition.


        :param status: The status of this Acquisition.
        :type status: str
        """

        self._status = status

    @property
    def undisclosed(self):
        """Gets the undisclosed of this Acquisition.


        :return: The undisclosed of this Acquisition.
        :rtype: str
        """
        return self._undisclosed

    @undisclosed.setter
    def undisclosed(self, undisclosed):
        """Sets the undisclosed of this Acquisition.


        :param undisclosed: The undisclosed of this Acquisition.
        :type undisclosed: str
        """

        self._undisclosed = undisclosed

    @property
    def website(self):
        """Gets the website of this Acquisition.


        :return: The website of this Acquisition.
        :rtype: str
        """
        return self._website

    @website.setter
    def website(self, website):
        """Sets the website of this Acquisition.


        :param website: The website of this Acquisition.
        :type website: str
        """

        self._website = website
