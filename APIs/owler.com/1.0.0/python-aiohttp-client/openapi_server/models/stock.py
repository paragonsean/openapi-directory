# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Stock(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, exchange: str=None, ticker: str=None):
        """Stock - a model defined in OpenAPI

        :param exchange: The exchange of this Stock.
        :param ticker: The ticker of this Stock.
        """
        self.openapi_types = {
            'exchange': str,
            'ticker': str
        }

        self.attribute_map = {
            'exchange': 'exchange',
            'ticker': 'ticker'
        }

        self._exchange = exchange
        self._ticker = ticker

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Stock':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Stock of this Stock.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def exchange(self):
        """Gets the exchange of this Stock.


        :return: The exchange of this Stock.
        :rtype: str
        """
        return self._exchange

    @exchange.setter
    def exchange(self, exchange):
        """Sets the exchange of this Stock.


        :param exchange: The exchange of this Stock.
        :type exchange: str
        """

        self._exchange = exchange

    @property
    def ticker(self):
        """Gets the ticker of this Stock.


        :return: The ticker of this Stock.
        :rtype: str
        """
        return self._ticker

    @ticker.setter
    def ticker(self, ticker):
        """Sets the ticker of this Stock.


        :param ticker: The ticker of this Stock.
        :type ticker: str
        """

        self._ticker = ticker
