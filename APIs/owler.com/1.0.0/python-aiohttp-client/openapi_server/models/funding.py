# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.investor import Investor
from openapi_server import util


class Funding(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount: str=None, _date: str=None, investor: List[Investor]=None, type: str=None, undisclosed: str=None):
        """Funding - a model defined in OpenAPI

        :param amount: The amount of this Funding.
        :param _date: The _date of this Funding.
        :param investor: The investor of this Funding.
        :param type: The type of this Funding.
        :param undisclosed: The undisclosed of this Funding.
        """
        self.openapi_types = {
            'amount': str,
            '_date': str,
            'investor': List[Investor],
            'type': str,
            'undisclosed': str
        }

        self.attribute_map = {
            'amount': 'amount',
            '_date': 'date',
            'investor': 'investor',
            'type': 'type',
            'undisclosed': 'undisclosed'
        }

        self._amount = amount
        self.__date = _date
        self._investor = investor
        self._type = type
        self._undisclosed = undisclosed

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Funding':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Funding of this Funding.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount(self):
        """Gets the amount of this Funding.


        :return: The amount of this Funding.
        :rtype: str
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this Funding.


        :param amount: The amount of this Funding.
        :type amount: str
        """

        self._amount = amount

    @property
    def _date(self):
        """Gets the _date of this Funding.


        :return: The _date of this Funding.
        :rtype: str
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this Funding.


        :param _date: The _date of this Funding.
        :type _date: str
        """

        self.__date = _date

    @property
    def investor(self):
        """Gets the investor of this Funding.


        :return: The investor of this Funding.
        :rtype: List[Investor]
        """
        return self._investor

    @investor.setter
    def investor(self, investor):
        """Sets the investor of this Funding.


        :param investor: The investor of this Funding.
        :type investor: List[Investor]
        """

        self._investor = investor

    @property
    def type(self):
        """Gets the type of this Funding.


        :return: The type of this Funding.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Funding.


        :param type: The type of this Funding.
        :type type: str
        """

        self._type = type

    @property
    def undisclosed(self):
        """Gets the undisclosed of this Funding.


        :return: The undisclosed of this Funding.
        :rtype: str
        """
        return self._undisclosed

    @undisclosed.setter
    def undisclosed(self, undisclosed):
        """Sets the undisclosed of this Funding.


        :param undisclosed: The undisclosed of this Funding.
        :type undisclosed: str
        """

        self._undisclosed = undisclosed
