/*
 * Owler
 * Search for information on companies using a website or company name and get access to Company Data, News, Blog Posts, Competitor Lists and much more.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Acquisition;
import org.openapitools.client.model.Address;
import org.openapitools.client.model.Ceo;
import org.openapitools.client.model.Funding;
import org.openapitools.client.model.SectorVO;
import org.openapitools.client.model.Stock;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Company
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:40:41.195333-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Company {
  public static final String SERIALIZED_NAME_ACQUISITION = "acquisition";
  @SerializedName(SERIALIZED_NAME_ACQUISITION)
  private List<Acquisition> acquisition = new ArrayList<>();

  public static final String SERIALIZED_NAME_CEO = "ceo";
  @SerializedName(SERIALIZED_NAME_CEO)
  private Ceo ceo;

  public static final String SERIALIZED_NAME_COMPANY_ID = "company_id";
  @SerializedName(SERIALIZED_NAME_COMPANY_ID)
  private Long companyId;

  /**
   * Gets or Sets companyType
   */
  @JsonAdapter(CompanyTypeEnum.Adapter.class)
  public enum CompanyTypeEnum {
    PRIVATE("Private"),
    
    PUBLIC("Public"),
    
    PRODUCT_BRAND_SERVICE("Product/Brand/Service"),
    
    NGO_NPO_NFP_ORGANIZATION_ASSOCIATION("NGO/NPO/NFP/Organization/Association"),
    
    INVESTMENT_COMPANY("Investment Company"),
    
    GOVERNMENT("Government");

    private String value;

    CompanyTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CompanyTypeEnum fromValue(String value) {
      for (CompanyTypeEnum b : CompanyTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<CompanyTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CompanyTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CompanyTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return CompanyTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      CompanyTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_COMPANY_TYPE = "company_type";
  @SerializedName(SERIALIZED_NAME_COMPANY_TYPE)
  private CompanyTypeEnum companyType;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_EMPLOYEE_COUNT = "employee_count";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_COUNT)
  private String employeeCount;

  public static final String SERIALIZED_NAME_FACEBOOK_LINK = "facebook_link";
  @SerializedName(SERIALIZED_NAME_FACEBOOK_LINK)
  private String facebookLink;

  public static final String SERIALIZED_NAME_FOUNDED_DATE = "founded_date";
  @SerializedName(SERIALIZED_NAME_FOUNDED_DATE)
  private String foundedDate;

  public static final String SERIALIZED_NAME_FUNDING = "funding";
  @SerializedName(SERIALIZED_NAME_FUNDING)
  private List<Funding> funding = new ArrayList<>();

  public static final String SERIALIZED_NAME_HQ_ADDRESS = "hq_address";
  @SerializedName(SERIALIZED_NAME_HQ_ADDRESS)
  private Address hqAddress;

  public static final String SERIALIZED_NAME_INDUSTRIES = "industries";
  @SerializedName(SERIALIZED_NAME_INDUSTRIES)
  private List<String> industries = new ArrayList<>();

  public static final String SERIALIZED_NAME_LINKEDIN_LINK = "linkedin_link";
  @SerializedName(SERIALIZED_NAME_LINKEDIN_LINK)
  private String linkedinLink;

  public static final String SERIALIZED_NAME_LOGO_URL = "logo_url";
  @SerializedName(SERIALIZED_NAME_LOGO_URL)
  private String logoUrl;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PERM_ID = "perm_id";
  @SerializedName(SERIALIZED_NAME_PERM_ID)
  private String permId;

  public static final String SERIALIZED_NAME_PORTFOLIO_COMPANY_IDS = "portfolio_company_ids";
  @SerializedName(SERIALIZED_NAME_PORTFOLIO_COMPANY_IDS)
  private List<Integer> portfolioCompanyIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_PROFILE_URL = "profile_url";
  @SerializedName(SERIALIZED_NAME_PROFILE_URL)
  private String profileUrl;

  public static final String SERIALIZED_NAME_REVENUE = "revenue";
  @SerializedName(SERIALIZED_NAME_REVENUE)
  private String revenue;

  public static final String SERIALIZED_NAME_SECTORS = "sectors";
  @SerializedName(SERIALIZED_NAME_SECTORS)
  private List<SectorVO> sectors = new ArrayList<>();

  public static final String SERIALIZED_NAME_SHORT_NAME = "short_name";
  @SerializedName(SERIALIZED_NAME_SHORT_NAME)
  private String shortName;

  public static final String SERIALIZED_NAME_STOCK = "stock";
  @SerializedName(SERIALIZED_NAME_STOCK)
  private Stock stock;

  public static final String SERIALIZED_NAME_TWITTER_LINK = "twitter_link";
  @SerializedName(SERIALIZED_NAME_TWITTER_LINK)
  private String twitterLink;

  public static final String SERIALIZED_NAME_WEBSITE = "website";
  @SerializedName(SERIALIZED_NAME_WEBSITE)
  private String website;

  public static final String SERIALIZED_NAME_YOUTUBE_LINK = "youtube_link";
  @SerializedName(SERIALIZED_NAME_YOUTUBE_LINK)
  private String youtubeLink;

  public Company() {
  }

  public Company acquisition(List<Acquisition> acquisition) {
    this.acquisition = acquisition;
    return this;
  }

  public Company addAcquisitionItem(Acquisition acquisitionItem) {
    if (this.acquisition == null) {
      this.acquisition = new ArrayList<>();
    }
    this.acquisition.add(acquisitionItem);
    return this;
  }

  /**
   * Get acquisition
   * @return acquisition
   */
  @javax.annotation.Nullable
  public List<Acquisition> getAcquisition() {
    return acquisition;
  }

  public void setAcquisition(List<Acquisition> acquisition) {
    this.acquisition = acquisition;
  }


  public Company ceo(Ceo ceo) {
    this.ceo = ceo;
    return this;
  }

  /**
   * Get ceo
   * @return ceo
   */
  @javax.annotation.Nullable
  public Ceo getCeo() {
    return ceo;
  }

  public void setCeo(Ceo ceo) {
    this.ceo = ceo;
  }


  public Company companyId(Long companyId) {
    this.companyId = companyId;
    return this;
  }

  /**
   * Get companyId
   * @return companyId
   */
  @javax.annotation.Nonnull
  public Long getCompanyId() {
    return companyId;
  }

  public void setCompanyId(Long companyId) {
    this.companyId = companyId;
  }


  public Company companyType(CompanyTypeEnum companyType) {
    this.companyType = companyType;
    return this;
  }

  /**
   * Get companyType
   * @return companyType
   */
  @javax.annotation.Nullable
  public CompanyTypeEnum getCompanyType() {
    return companyType;
  }

  public void setCompanyType(CompanyTypeEnum companyType) {
    this.companyType = companyType;
  }


  public Company description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public Company employeeCount(String employeeCount) {
    this.employeeCount = employeeCount;
    return this;
  }

  /**
   * Get employeeCount
   * @return employeeCount
   */
  @javax.annotation.Nullable
  public String getEmployeeCount() {
    return employeeCount;
  }

  public void setEmployeeCount(String employeeCount) {
    this.employeeCount = employeeCount;
  }


  public Company facebookLink(String facebookLink) {
    this.facebookLink = facebookLink;
    return this;
  }

  /**
   * Get facebookLink
   * @return facebookLink
   */
  @javax.annotation.Nullable
  public String getFacebookLink() {
    return facebookLink;
  }

  public void setFacebookLink(String facebookLink) {
    this.facebookLink = facebookLink;
  }


  public Company foundedDate(String foundedDate) {
    this.foundedDate = foundedDate;
    return this;
  }

  /**
   * Get foundedDate
   * @return foundedDate
   */
  @javax.annotation.Nullable
  public String getFoundedDate() {
    return foundedDate;
  }

  public void setFoundedDate(String foundedDate) {
    this.foundedDate = foundedDate;
  }


  public Company funding(List<Funding> funding) {
    this.funding = funding;
    return this;
  }

  public Company addFundingItem(Funding fundingItem) {
    if (this.funding == null) {
      this.funding = new ArrayList<>();
    }
    this.funding.add(fundingItem);
    return this;
  }

  /**
   * Get funding
   * @return funding
   */
  @javax.annotation.Nullable
  public List<Funding> getFunding() {
    return funding;
  }

  public void setFunding(List<Funding> funding) {
    this.funding = funding;
  }


  public Company hqAddress(Address hqAddress) {
    this.hqAddress = hqAddress;
    return this;
  }

  /**
   * Get hqAddress
   * @return hqAddress
   */
  @javax.annotation.Nullable
  public Address getHqAddress() {
    return hqAddress;
  }

  public void setHqAddress(Address hqAddress) {
    this.hqAddress = hqAddress;
  }


  public Company industries(List<String> industries) {
    this.industries = industries;
    return this;
  }

  public Company addIndustriesItem(String industriesItem) {
    if (this.industries == null) {
      this.industries = new ArrayList<>();
    }
    this.industries.add(industriesItem);
    return this;
  }

  /**
   * Get industries
   * @return industries
   */
  @javax.annotation.Nullable
  public List<String> getIndustries() {
    return industries;
  }

  public void setIndustries(List<String> industries) {
    this.industries = industries;
  }


  public Company linkedinLink(String linkedinLink) {
    this.linkedinLink = linkedinLink;
    return this;
  }

  /**
   * Get linkedinLink
   * @return linkedinLink
   */
  @javax.annotation.Nullable
  public String getLinkedinLink() {
    return linkedinLink;
  }

  public void setLinkedinLink(String linkedinLink) {
    this.linkedinLink = linkedinLink;
  }


  public Company logoUrl(String logoUrl) {
    this.logoUrl = logoUrl;
    return this;
  }

  /**
   * Get logoUrl
   * @return logoUrl
   */
  @javax.annotation.Nonnull
  public String getLogoUrl() {
    return logoUrl;
  }

  public void setLogoUrl(String logoUrl) {
    this.logoUrl = logoUrl;
  }


  public Company name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public Company permId(String permId) {
    this.permId = permId;
    return this;
  }

  /**
   * Get permId
   * @return permId
   */
  @javax.annotation.Nullable
  public String getPermId() {
    return permId;
  }

  public void setPermId(String permId) {
    this.permId = permId;
  }


  public Company portfolioCompanyIds(List<Integer> portfolioCompanyIds) {
    this.portfolioCompanyIds = portfolioCompanyIds;
    return this;
  }

  public Company addPortfolioCompanyIdsItem(Integer portfolioCompanyIdsItem) {
    if (this.portfolioCompanyIds == null) {
      this.portfolioCompanyIds = new ArrayList<>();
    }
    this.portfolioCompanyIds.add(portfolioCompanyIdsItem);
    return this;
  }

  /**
   * Get portfolioCompanyIds
   * @return portfolioCompanyIds
   */
  @javax.annotation.Nullable
  public List<Integer> getPortfolioCompanyIds() {
    return portfolioCompanyIds;
  }

  public void setPortfolioCompanyIds(List<Integer> portfolioCompanyIds) {
    this.portfolioCompanyIds = portfolioCompanyIds;
  }


  public Company profileUrl(String profileUrl) {
    this.profileUrl = profileUrl;
    return this;
  }

  /**
   * Get profileUrl
   * @return profileUrl
   */
  @javax.annotation.Nonnull
  public String getProfileUrl() {
    return profileUrl;
  }

  public void setProfileUrl(String profileUrl) {
    this.profileUrl = profileUrl;
  }


  public Company revenue(String revenue) {
    this.revenue = revenue;
    return this;
  }

  /**
   * Get revenue
   * @return revenue
   */
  @javax.annotation.Nullable
  public String getRevenue() {
    return revenue;
  }

  public void setRevenue(String revenue) {
    this.revenue = revenue;
  }


  public Company sectors(List<SectorVO> sectors) {
    this.sectors = sectors;
    return this;
  }

  public Company addSectorsItem(SectorVO sectorsItem) {
    if (this.sectors == null) {
      this.sectors = new ArrayList<>();
    }
    this.sectors.add(sectorsItem);
    return this;
  }

  /**
   * Get sectors
   * @return sectors
   */
  @javax.annotation.Nullable
  public List<SectorVO> getSectors() {
    return sectors;
  }

  public void setSectors(List<SectorVO> sectors) {
    this.sectors = sectors;
  }


  public Company shortName(String shortName) {
    this.shortName = shortName;
    return this;
  }

  /**
   * Get shortName
   * @return shortName
   */
  @javax.annotation.Nullable
  public String getShortName() {
    return shortName;
  }

  public void setShortName(String shortName) {
    this.shortName = shortName;
  }


  public Company stock(Stock stock) {
    this.stock = stock;
    return this;
  }

  /**
   * Get stock
   * @return stock
   */
  @javax.annotation.Nullable
  public Stock getStock() {
    return stock;
  }

  public void setStock(Stock stock) {
    this.stock = stock;
  }


  public Company twitterLink(String twitterLink) {
    this.twitterLink = twitterLink;
    return this;
  }

  /**
   * Get twitterLink
   * @return twitterLink
   */
  @javax.annotation.Nullable
  public String getTwitterLink() {
    return twitterLink;
  }

  public void setTwitterLink(String twitterLink) {
    this.twitterLink = twitterLink;
  }


  public Company website(String website) {
    this.website = website;
    return this;
  }

  /**
   * Get website
   * @return website
   */
  @javax.annotation.Nonnull
  public String getWebsite() {
    return website;
  }

  public void setWebsite(String website) {
    this.website = website;
  }


  public Company youtubeLink(String youtubeLink) {
    this.youtubeLink = youtubeLink;
    return this;
  }

  /**
   * Get youtubeLink
   * @return youtubeLink
   */
  @javax.annotation.Nullable
  public String getYoutubeLink() {
    return youtubeLink;
  }

  public void setYoutubeLink(String youtubeLink) {
    this.youtubeLink = youtubeLink;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Company company = (Company) o;
    return Objects.equals(this.acquisition, company.acquisition) &&
        Objects.equals(this.ceo, company.ceo) &&
        Objects.equals(this.companyId, company.companyId) &&
        Objects.equals(this.companyType, company.companyType) &&
        Objects.equals(this.description, company.description) &&
        Objects.equals(this.employeeCount, company.employeeCount) &&
        Objects.equals(this.facebookLink, company.facebookLink) &&
        Objects.equals(this.foundedDate, company.foundedDate) &&
        Objects.equals(this.funding, company.funding) &&
        Objects.equals(this.hqAddress, company.hqAddress) &&
        Objects.equals(this.industries, company.industries) &&
        Objects.equals(this.linkedinLink, company.linkedinLink) &&
        Objects.equals(this.logoUrl, company.logoUrl) &&
        Objects.equals(this.name, company.name) &&
        Objects.equals(this.permId, company.permId) &&
        Objects.equals(this.portfolioCompanyIds, company.portfolioCompanyIds) &&
        Objects.equals(this.profileUrl, company.profileUrl) &&
        Objects.equals(this.revenue, company.revenue) &&
        Objects.equals(this.sectors, company.sectors) &&
        Objects.equals(this.shortName, company.shortName) &&
        Objects.equals(this.stock, company.stock) &&
        Objects.equals(this.twitterLink, company.twitterLink) &&
        Objects.equals(this.website, company.website) &&
        Objects.equals(this.youtubeLink, company.youtubeLink);
  }

  @Override
  public int hashCode() {
    return Objects.hash(acquisition, ceo, companyId, companyType, description, employeeCount, facebookLink, foundedDate, funding, hqAddress, industries, linkedinLink, logoUrl, name, permId, portfolioCompanyIds, profileUrl, revenue, sectors, shortName, stock, twitterLink, website, youtubeLink);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Company {\n");
    sb.append("    acquisition: ").append(toIndentedString(acquisition)).append("\n");
    sb.append("    ceo: ").append(toIndentedString(ceo)).append("\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    companyType: ").append(toIndentedString(companyType)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    employeeCount: ").append(toIndentedString(employeeCount)).append("\n");
    sb.append("    facebookLink: ").append(toIndentedString(facebookLink)).append("\n");
    sb.append("    foundedDate: ").append(toIndentedString(foundedDate)).append("\n");
    sb.append("    funding: ").append(toIndentedString(funding)).append("\n");
    sb.append("    hqAddress: ").append(toIndentedString(hqAddress)).append("\n");
    sb.append("    industries: ").append(toIndentedString(industries)).append("\n");
    sb.append("    linkedinLink: ").append(toIndentedString(linkedinLink)).append("\n");
    sb.append("    logoUrl: ").append(toIndentedString(logoUrl)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    permId: ").append(toIndentedString(permId)).append("\n");
    sb.append("    portfolioCompanyIds: ").append(toIndentedString(portfolioCompanyIds)).append("\n");
    sb.append("    profileUrl: ").append(toIndentedString(profileUrl)).append("\n");
    sb.append("    revenue: ").append(toIndentedString(revenue)).append("\n");
    sb.append("    sectors: ").append(toIndentedString(sectors)).append("\n");
    sb.append("    shortName: ").append(toIndentedString(shortName)).append("\n");
    sb.append("    stock: ").append(toIndentedString(stock)).append("\n");
    sb.append("    twitterLink: ").append(toIndentedString(twitterLink)).append("\n");
    sb.append("    website: ").append(toIndentedString(website)).append("\n");
    sb.append("    youtubeLink: ").append(toIndentedString(youtubeLink)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("acquisition");
    openapiFields.add("ceo");
    openapiFields.add("company_id");
    openapiFields.add("company_type");
    openapiFields.add("description");
    openapiFields.add("employee_count");
    openapiFields.add("facebook_link");
    openapiFields.add("founded_date");
    openapiFields.add("funding");
    openapiFields.add("hq_address");
    openapiFields.add("industries");
    openapiFields.add("linkedin_link");
    openapiFields.add("logo_url");
    openapiFields.add("name");
    openapiFields.add("perm_id");
    openapiFields.add("portfolio_company_ids");
    openapiFields.add("profile_url");
    openapiFields.add("revenue");
    openapiFields.add("sectors");
    openapiFields.add("short_name");
    openapiFields.add("stock");
    openapiFields.add("twitter_link");
    openapiFields.add("website");
    openapiFields.add("youtube_link");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("company_id");
    openapiRequiredFields.add("logo_url");
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("profile_url");
    openapiRequiredFields.add("website");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Company
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Company.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Company is not found in the empty JSON string", Company.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Company.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Company` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : Company.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("acquisition") != null && !jsonObj.get("acquisition").isJsonNull()) {
        JsonArray jsonArrayacquisition = jsonObj.getAsJsonArray("acquisition");
        if (jsonArrayacquisition != null) {
          // ensure the json data is an array
          if (!jsonObj.get("acquisition").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `acquisition` to be an array in the JSON string but got `%s`", jsonObj.get("acquisition").toString()));
          }

          // validate the optional field `acquisition` (array)
          for (int i = 0; i < jsonArrayacquisition.size(); i++) {
            Acquisition.validateJsonElement(jsonArrayacquisition.get(i));
          };
        }
      }
      // validate the optional field `ceo`
      if (jsonObj.get("ceo") != null && !jsonObj.get("ceo").isJsonNull()) {
        Ceo.validateJsonElement(jsonObj.get("ceo"));
      }
      if ((jsonObj.get("company_type") != null && !jsonObj.get("company_type").isJsonNull()) && !jsonObj.get("company_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `company_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("company_type").toString()));
      }
      // validate the optional field `company_type`
      if (jsonObj.get("company_type") != null && !jsonObj.get("company_type").isJsonNull()) {
        CompanyTypeEnum.validateJsonElement(jsonObj.get("company_type"));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("employee_count") != null && !jsonObj.get("employee_count").isJsonNull()) && !jsonObj.get("employee_count").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employee_count` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employee_count").toString()));
      }
      if ((jsonObj.get("facebook_link") != null && !jsonObj.get("facebook_link").isJsonNull()) && !jsonObj.get("facebook_link").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `facebook_link` to be a primitive type in the JSON string but got `%s`", jsonObj.get("facebook_link").toString()));
      }
      if ((jsonObj.get("founded_date") != null && !jsonObj.get("founded_date").isJsonNull()) && !jsonObj.get("founded_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `founded_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("founded_date").toString()));
      }
      if (jsonObj.get("funding") != null && !jsonObj.get("funding").isJsonNull()) {
        JsonArray jsonArrayfunding = jsonObj.getAsJsonArray("funding");
        if (jsonArrayfunding != null) {
          // ensure the json data is an array
          if (!jsonObj.get("funding").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `funding` to be an array in the JSON string but got `%s`", jsonObj.get("funding").toString()));
          }

          // validate the optional field `funding` (array)
          for (int i = 0; i < jsonArrayfunding.size(); i++) {
            Funding.validateJsonElement(jsonArrayfunding.get(i));
          };
        }
      }
      // validate the optional field `hq_address`
      if (jsonObj.get("hq_address") != null && !jsonObj.get("hq_address").isJsonNull()) {
        Address.validateJsonElement(jsonObj.get("hq_address"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("industries") != null && !jsonObj.get("industries").isJsonNull() && !jsonObj.get("industries").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `industries` to be an array in the JSON string but got `%s`", jsonObj.get("industries").toString()));
      }
      if ((jsonObj.get("linkedin_link") != null && !jsonObj.get("linkedin_link").isJsonNull()) && !jsonObj.get("linkedin_link").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `linkedin_link` to be a primitive type in the JSON string but got `%s`", jsonObj.get("linkedin_link").toString()));
      }
      if (!jsonObj.get("logo_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logo_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logo_url").toString()));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("perm_id") != null && !jsonObj.get("perm_id").isJsonNull()) && !jsonObj.get("perm_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `perm_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("perm_id").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("portfolio_company_ids") != null && !jsonObj.get("portfolio_company_ids").isJsonNull() && !jsonObj.get("portfolio_company_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `portfolio_company_ids` to be an array in the JSON string but got `%s`", jsonObj.get("portfolio_company_ids").toString()));
      }
      if (!jsonObj.get("profile_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `profile_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("profile_url").toString()));
      }
      if ((jsonObj.get("revenue") != null && !jsonObj.get("revenue").isJsonNull()) && !jsonObj.get("revenue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `revenue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("revenue").toString()));
      }
      if (jsonObj.get("sectors") != null && !jsonObj.get("sectors").isJsonNull()) {
        JsonArray jsonArraysectors = jsonObj.getAsJsonArray("sectors");
        if (jsonArraysectors != null) {
          // ensure the json data is an array
          if (!jsonObj.get("sectors").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `sectors` to be an array in the JSON string but got `%s`", jsonObj.get("sectors").toString()));
          }

          // validate the optional field `sectors` (array)
          for (int i = 0; i < jsonArraysectors.size(); i++) {
            SectorVO.validateJsonElement(jsonArraysectors.get(i));
          };
        }
      }
      if ((jsonObj.get("short_name") != null && !jsonObj.get("short_name").isJsonNull()) && !jsonObj.get("short_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `short_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("short_name").toString()));
      }
      // validate the optional field `stock`
      if (jsonObj.get("stock") != null && !jsonObj.get("stock").isJsonNull()) {
        Stock.validateJsonElement(jsonObj.get("stock"));
      }
      if ((jsonObj.get("twitter_link") != null && !jsonObj.get("twitter_link").isJsonNull()) && !jsonObj.get("twitter_link").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `twitter_link` to be a primitive type in the JSON string but got `%s`", jsonObj.get("twitter_link").toString()));
      }
      if (!jsonObj.get("website").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `website` to be a primitive type in the JSON string but got `%s`", jsonObj.get("website").toString()));
      }
      if ((jsonObj.get("youtube_link") != null && !jsonObj.get("youtube_link").isJsonNull()) && !jsonObj.get("youtube_link").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `youtube_link` to be a primitive type in the JSON string but got `%s`", jsonObj.get("youtube_link").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Company.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Company' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Company> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Company.class));

       return (TypeAdapter<T>) new TypeAdapter<Company>() {
           @Override
           public void write(JsonWriter out, Company value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Company read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Company given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Company
   * @throws IOException if the JSON string is invalid with respect to Company
   */
  public static Company fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Company.class);
  }

  /**
   * Convert an instance of Company to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

