/*
 * Owler
 * Search for information on companies using a website or company name and get access to Company Data, News, Blog Posts, Competitor Lists and much more.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CompanyBasicVO;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * FeedsVO
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:40:41.195333-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class FeedsVO {
  public static final String SERIALIZED_NAME_CATEGORY = "category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  private String category;

  public static final String SERIALIZED_NAME_COMPANY = "company";
  @SerializedName(SERIALIZED_NAME_COMPANY)
  private CompanyBasicVO company;

  public static final String SERIALIZED_NAME_ENCLOSURE_IMAGE = "enclosure_image";
  @SerializedName(SERIALIZED_NAME_ENCLOSURE_IMAGE)
  private String enclosureImage;

  public static final String SERIALIZED_NAME_FEED_DATE = "feed_date";
  @SerializedName(SERIALIZED_NAME_FEED_DATE)
  private String feedDate;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_OWLER_FEED_URL = "owler_feed_url";
  @SerializedName(SERIALIZED_NAME_OWLER_FEED_URL)
  private String owlerFeedUrl;

  public static final String SERIALIZED_NAME_PUBLISHER_LOGO = "publisher_logo";
  @SerializedName(SERIALIZED_NAME_PUBLISHER_LOGO)
  private String publisherLogo;

  public static final String SERIALIZED_NAME_PUBLISHER_NAME = "publisher_name";
  @SerializedName(SERIALIZED_NAME_PUBLISHER_NAME)
  private String publisherName;

  public static final String SERIALIZED_NAME_SOURCE_URL = "source_url";
  @SerializedName(SERIALIZED_NAME_SOURCE_URL)
  private String sourceUrl;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public FeedsVO() {
  }

  public FeedsVO category(String category) {
    this.category = category;
    return this;
  }

  /**
   * Get category
   * @return category
   */
  @javax.annotation.Nullable
  public String getCategory() {
    return category;
  }

  public void setCategory(String category) {
    this.category = category;
  }


  public FeedsVO company(CompanyBasicVO company) {
    this.company = company;
    return this;
  }

  /**
   * Get company
   * @return company
   */
  @javax.annotation.Nullable
  public CompanyBasicVO getCompany() {
    return company;
  }

  public void setCompany(CompanyBasicVO company) {
    this.company = company;
  }


  public FeedsVO enclosureImage(String enclosureImage) {
    this.enclosureImage = enclosureImage;
    return this;
  }

  /**
   * Get enclosureImage
   * @return enclosureImage
   */
  @javax.annotation.Nullable
  public String getEnclosureImage() {
    return enclosureImage;
  }

  public void setEnclosureImage(String enclosureImage) {
    this.enclosureImage = enclosureImage;
  }


  public FeedsVO feedDate(String feedDate) {
    this.feedDate = feedDate;
    return this;
  }

  /**
   * Get feedDate
   * @return feedDate
   */
  @javax.annotation.Nullable
  public String getFeedDate() {
    return feedDate;
  }

  public void setFeedDate(String feedDate) {
    this.feedDate = feedDate;
  }


  public FeedsVO id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public FeedsVO owlerFeedUrl(String owlerFeedUrl) {
    this.owlerFeedUrl = owlerFeedUrl;
    return this;
  }

  /**
   * Get owlerFeedUrl
   * @return owlerFeedUrl
   */
  @javax.annotation.Nullable
  public String getOwlerFeedUrl() {
    return owlerFeedUrl;
  }

  public void setOwlerFeedUrl(String owlerFeedUrl) {
    this.owlerFeedUrl = owlerFeedUrl;
  }


  public FeedsVO publisherLogo(String publisherLogo) {
    this.publisherLogo = publisherLogo;
    return this;
  }

  /**
   * Get publisherLogo
   * @return publisherLogo
   */
  @javax.annotation.Nullable
  public String getPublisherLogo() {
    return publisherLogo;
  }

  public void setPublisherLogo(String publisherLogo) {
    this.publisherLogo = publisherLogo;
  }


  public FeedsVO publisherName(String publisherName) {
    this.publisherName = publisherName;
    return this;
  }

  /**
   * Get publisherName
   * @return publisherName
   */
  @javax.annotation.Nullable
  public String getPublisherName() {
    return publisherName;
  }

  public void setPublisherName(String publisherName) {
    this.publisherName = publisherName;
  }


  public FeedsVO sourceUrl(String sourceUrl) {
    this.sourceUrl = sourceUrl;
    return this;
  }

  /**
   * Get sourceUrl
   * @return sourceUrl
   */
  @javax.annotation.Nullable
  public String getSourceUrl() {
    return sourceUrl;
  }

  public void setSourceUrl(String sourceUrl) {
    this.sourceUrl = sourceUrl;
  }


  public FeedsVO title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   * @return title
   */
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FeedsVO feedsVO = (FeedsVO) o;
    return Objects.equals(this.category, feedsVO.category) &&
        Objects.equals(this.company, feedsVO.company) &&
        Objects.equals(this.enclosureImage, feedsVO.enclosureImage) &&
        Objects.equals(this.feedDate, feedsVO.feedDate) &&
        Objects.equals(this.id, feedsVO.id) &&
        Objects.equals(this.owlerFeedUrl, feedsVO.owlerFeedUrl) &&
        Objects.equals(this.publisherLogo, feedsVO.publisherLogo) &&
        Objects.equals(this.publisherName, feedsVO.publisherName) &&
        Objects.equals(this.sourceUrl, feedsVO.sourceUrl) &&
        Objects.equals(this.title, feedsVO.title);
  }

  @Override
  public int hashCode() {
    return Objects.hash(category, company, enclosureImage, feedDate, id, owlerFeedUrl, publisherLogo, publisherName, sourceUrl, title);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FeedsVO {\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    company: ").append(toIndentedString(company)).append("\n");
    sb.append("    enclosureImage: ").append(toIndentedString(enclosureImage)).append("\n");
    sb.append("    feedDate: ").append(toIndentedString(feedDate)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    owlerFeedUrl: ").append(toIndentedString(owlerFeedUrl)).append("\n");
    sb.append("    publisherLogo: ").append(toIndentedString(publisherLogo)).append("\n");
    sb.append("    publisherName: ").append(toIndentedString(publisherName)).append("\n");
    sb.append("    sourceUrl: ").append(toIndentedString(sourceUrl)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("category");
    openapiFields.add("company");
    openapiFields.add("enclosure_image");
    openapiFields.add("feed_date");
    openapiFields.add("id");
    openapiFields.add("owler_feed_url");
    openapiFields.add("publisher_logo");
    openapiFields.add("publisher_name");
    openapiFields.add("source_url");
    openapiFields.add("title");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to FeedsVO
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!FeedsVO.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FeedsVO is not found in the empty JSON string", FeedsVO.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!FeedsVO.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `FeedsVO` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("category") != null && !jsonObj.get("category").isJsonNull()) && !jsonObj.get("category").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `category` to be a primitive type in the JSON string but got `%s`", jsonObj.get("category").toString()));
      }
      // validate the optional field `company`
      if (jsonObj.get("company") != null && !jsonObj.get("company").isJsonNull()) {
        CompanyBasicVO.validateJsonElement(jsonObj.get("company"));
      }
      if ((jsonObj.get("enclosure_image") != null && !jsonObj.get("enclosure_image").isJsonNull()) && !jsonObj.get("enclosure_image").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `enclosure_image` to be a primitive type in the JSON string but got `%s`", jsonObj.get("enclosure_image").toString()));
      }
      if ((jsonObj.get("feed_date") != null && !jsonObj.get("feed_date").isJsonNull()) && !jsonObj.get("feed_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `feed_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("feed_date").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("owler_feed_url") != null && !jsonObj.get("owler_feed_url").isJsonNull()) && !jsonObj.get("owler_feed_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `owler_feed_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("owler_feed_url").toString()));
      }
      if ((jsonObj.get("publisher_logo") != null && !jsonObj.get("publisher_logo").isJsonNull()) && !jsonObj.get("publisher_logo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `publisher_logo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("publisher_logo").toString()));
      }
      if ((jsonObj.get("publisher_name") != null && !jsonObj.get("publisher_name").isJsonNull()) && !jsonObj.get("publisher_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `publisher_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("publisher_name").toString()));
      }
      if ((jsonObj.get("source_url") != null && !jsonObj.get("source_url").isJsonNull()) && !jsonObj.get("source_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `source_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("source_url").toString()));
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FeedsVO.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FeedsVO' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FeedsVO> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FeedsVO.class));

       return (TypeAdapter<T>) new TypeAdapter<FeedsVO>() {
           @Override
           public void write(JsonWriter out, FeedsVO value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public FeedsVO read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of FeedsVO given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of FeedsVO
   * @throws IOException if the JSON string is invalid with respect to FeedsVO
   */
  public static FeedsVO fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FeedsVO.class);
  }

  /**
   * Convert an instance of FeedsVO to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

