/*
 * Owler
 * Search for information on companies using a website or company name and get access to Company Data, News, Blog Posts, Competitor Lists and much more.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.Competitors;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class CompetitorPremiumApiApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public CompetitorPremiumApiApi() {
        this(Configuration.getDefaultApiClient());
    }

    public CompetitorPremiumApiApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for v1CompanyCompetitorpremiumIdCompanyIdGet
     * @param companyId Company Id (required)
     * @param paginationId Pass pagination_id as * in the first API request. The API response will return top competitors along with the next pagination_id which can be passed in the subsequent API request to get the next set of competitors. Repeat this process until needed or till the pagination_id returned is blank. Note:Every response will have maximum of 50 competitors. (optional)
     * @param format Format of the response content - json (by default if not specified), xml (optional, default to json)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Competitors Data </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid Parameters </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Authentication Failed </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Resource Not Found </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v1CompanyCompetitorpremiumIdCompanyIdGetCall(String companyId, String paginationId, String format, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/company/competitorpremium/id/{companyId}"
            .replace("{" + "companyId" + "}", localVarApiClient.escapeString(companyId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (paginationId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pagination_id", paginationId));
        }

        if (format != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("format", format));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "user_key" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call v1CompanyCompetitorpremiumIdCompanyIdGetValidateBeforeCall(String companyId, String paginationId, String format, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'companyId' is set
        if (companyId == null) {
            throw new ApiException("Missing the required parameter 'companyId' when calling v1CompanyCompetitorpremiumIdCompanyIdGet(Async)");
        }

        return v1CompanyCompetitorpremiumIdCompanyIdGetCall(companyId, paginationId, format, _callback);

    }

    /**
     * Get Competitor information by Id
     * The Competitors API provides basic information about all competitors of a given company Id
     * @param companyId Company Id (required)
     * @param paginationId Pass pagination_id as * in the first API request. The API response will return top competitors along with the next pagination_id which can be passed in the subsequent API request to get the next set of competitors. Repeat this process until needed or till the pagination_id returned is blank. Note:Every response will have maximum of 50 competitors. (optional)
     * @param format Format of the response content - json (by default if not specified), xml (optional, default to json)
     * @return Competitors
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Competitors Data </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid Parameters </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Authentication Failed </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Resource Not Found </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public Competitors v1CompanyCompetitorpremiumIdCompanyIdGet(String companyId, String paginationId, String format) throws ApiException {
        ApiResponse<Competitors> localVarResp = v1CompanyCompetitorpremiumIdCompanyIdGetWithHttpInfo(companyId, paginationId, format);
        return localVarResp.getData();
    }

    /**
     * Get Competitor information by Id
     * The Competitors API provides basic information about all competitors of a given company Id
     * @param companyId Company Id (required)
     * @param paginationId Pass pagination_id as * in the first API request. The API response will return top competitors along with the next pagination_id which can be passed in the subsequent API request to get the next set of competitors. Repeat this process until needed or till the pagination_id returned is blank. Note:Every response will have maximum of 50 competitors. (optional)
     * @param format Format of the response content - json (by default if not specified), xml (optional, default to json)
     * @return ApiResponse&lt;Competitors&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Competitors Data </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid Parameters </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Authentication Failed </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Resource Not Found </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Competitors> v1CompanyCompetitorpremiumIdCompanyIdGetWithHttpInfo(String companyId, String paginationId, String format) throws ApiException {
        okhttp3.Call localVarCall = v1CompanyCompetitorpremiumIdCompanyIdGetValidateBeforeCall(companyId, paginationId, format, null);
        Type localVarReturnType = new TypeToken<Competitors>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get Competitor information by Id (asynchronously)
     * The Competitors API provides basic information about all competitors of a given company Id
     * @param companyId Company Id (required)
     * @param paginationId Pass pagination_id as * in the first API request. The API response will return top competitors along with the next pagination_id which can be passed in the subsequent API request to get the next set of competitors. Repeat this process until needed or till the pagination_id returned is blank. Note:Every response will have maximum of 50 competitors. (optional)
     * @param format Format of the response content - json (by default if not specified), xml (optional, default to json)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Competitors Data </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid Parameters </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Authentication Failed </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Resource Not Found </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v1CompanyCompetitorpremiumIdCompanyIdGetAsync(String companyId, String paginationId, String format, final ApiCallback<Competitors> _callback) throws ApiException {

        okhttp3.Call localVarCall = v1CompanyCompetitorpremiumIdCompanyIdGetValidateBeforeCall(companyId, paginationId, format, _callback);
        Type localVarReturnType = new TypeToken<Competitors>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for v1CompanyCompetitorpremiumUrlWebsiteGet
     * @param website Company Id (required)
     * @param paginationId Pass pagination_id as * in the first API request. The API response will return top competitors along with the next pagination_id which can be passed in the subsequent API request to get the next set of competitors. Repeat this process until needed or till the pagination_id returned is blank. Note:Every response will have maximum of 50 competitors. (optional)
     * @param format Format of the response content - json (by default if not specified), xml (optional, default to json)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Competitors Data </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid Parameters </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Authentication Failed </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Resource Not Found </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v1CompanyCompetitorpremiumUrlWebsiteGetCall(String website, String paginationId, String format, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/company/competitorpremium/url/{website}"
            .replace("{" + "website" + "}", localVarApiClient.escapeString(website.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (paginationId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pagination_id", paginationId));
        }

        if (format != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("format", format));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "user_key" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call v1CompanyCompetitorpremiumUrlWebsiteGetValidateBeforeCall(String website, String paginationId, String format, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'website' is set
        if (website == null) {
            throw new ApiException("Missing the required parameter 'website' when calling v1CompanyCompetitorpremiumUrlWebsiteGet(Async)");
        }

        return v1CompanyCompetitorpremiumUrlWebsiteGetCall(website, paginationId, format, _callback);

    }

    /**
     * Get Competitor information by Url
     * The Competitors API provides basic information about all competitors of a given company Id
     * @param website Company Id (required)
     * @param paginationId Pass pagination_id as * in the first API request. The API response will return top competitors along with the next pagination_id which can be passed in the subsequent API request to get the next set of competitors. Repeat this process until needed or till the pagination_id returned is blank. Note:Every response will have maximum of 50 competitors. (optional)
     * @param format Format of the response content - json (by default if not specified), xml (optional, default to json)
     * @return Competitors
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Competitors Data </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid Parameters </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Authentication Failed </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Resource Not Found </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public Competitors v1CompanyCompetitorpremiumUrlWebsiteGet(String website, String paginationId, String format) throws ApiException {
        ApiResponse<Competitors> localVarResp = v1CompanyCompetitorpremiumUrlWebsiteGetWithHttpInfo(website, paginationId, format);
        return localVarResp.getData();
    }

    /**
     * Get Competitor information by Url
     * The Competitors API provides basic information about all competitors of a given company Id
     * @param website Company Id (required)
     * @param paginationId Pass pagination_id as * in the first API request. The API response will return top competitors along with the next pagination_id which can be passed in the subsequent API request to get the next set of competitors. Repeat this process until needed or till the pagination_id returned is blank. Note:Every response will have maximum of 50 competitors. (optional)
     * @param format Format of the response content - json (by default if not specified), xml (optional, default to json)
     * @return ApiResponse&lt;Competitors&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Competitors Data </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid Parameters </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Authentication Failed </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Resource Not Found </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Competitors> v1CompanyCompetitorpremiumUrlWebsiteGetWithHttpInfo(String website, String paginationId, String format) throws ApiException {
        okhttp3.Call localVarCall = v1CompanyCompetitorpremiumUrlWebsiteGetValidateBeforeCall(website, paginationId, format, null);
        Type localVarReturnType = new TypeToken<Competitors>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get Competitor information by Url (asynchronously)
     * The Competitors API provides basic information about all competitors of a given company Id
     * @param website Company Id (required)
     * @param paginationId Pass pagination_id as * in the first API request. The API response will return top competitors along with the next pagination_id which can be passed in the subsequent API request to get the next set of competitors. Repeat this process until needed or till the pagination_id returned is blank. Note:Every response will have maximum of 50 competitors. (optional)
     * @param format Format of the response content - json (by default if not specified), xml (optional, default to json)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Competitors Data </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid Parameters </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Authentication Failed </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Resource Not Found </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v1CompanyCompetitorpremiumUrlWebsiteGetAsync(String website, String paginationId, String format, final ApiCallback<Competitors> _callback) throws ApiException {

        okhttp3.Call localVarCall = v1CompanyCompetitorpremiumUrlWebsiteGetValidateBeforeCall(website, paginationId, format, _callback);
        Type localVarReturnType = new TypeToken<Competitors>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
