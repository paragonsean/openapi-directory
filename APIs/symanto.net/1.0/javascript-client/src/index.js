/**
 * Psycholinguistic Text Analytics
 * We aim to provide the deepest understanding of people through psychology & AI
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@symanto.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import LanguageDetection from './model/LanguageDetection';
import LanguagePredicted from './model/LanguagePredicted';
import Post from './model/Post';
import PostPredicted from './model/PostPredicted';
import Prediction from './model/Prediction';
import Sentiment from './model/Sentiment';
import Topic from './model/Topic';
import TopicSentiment from './model/TopicSentiment';
import TopicSentimentOutput from './model/TopicSentimentOutput';
import ValidationError from './model/ValidationError';
import ValidationErrors from './model/ValidationErrors';
import TextAnalysisApi from './api/TextAnalysisApi';


/**
* We aim to provide the deepest understanding of people through psychology &amp; AI.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var PsycholinguisticTextAnalytics = require('index'); // See note below*.
* var xxxSvc = new PsycholinguisticTextAnalytics.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new PsycholinguisticTextAnalytics.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new PsycholinguisticTextAnalytics.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new PsycholinguisticTextAnalytics.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The LanguageDetection model constructor.
     * @property {module:model/LanguageDetection}
     */
    LanguageDetection,

    /**
     * The LanguagePredicted model constructor.
     * @property {module:model/LanguagePredicted}
     */
    LanguagePredicted,

    /**
     * The Post model constructor.
     * @property {module:model/Post}
     */
    Post,

    /**
     * The PostPredicted model constructor.
     * @property {module:model/PostPredicted}
     */
    PostPredicted,

    /**
     * The Prediction model constructor.
     * @property {module:model/Prediction}
     */
    Prediction,

    /**
     * The Sentiment model constructor.
     * @property {module:model/Sentiment}
     */
    Sentiment,

    /**
     * The Topic model constructor.
     * @property {module:model/Topic}
     */
    Topic,

    /**
     * The TopicSentiment model constructor.
     * @property {module:model/TopicSentiment}
     */
    TopicSentiment,

    /**
     * The TopicSentimentOutput model constructor.
     * @property {module:model/TopicSentimentOutput}
     */
    TopicSentimentOutput,

    /**
     * The ValidationError model constructor.
     * @property {module:model/ValidationError}
     */
    ValidationError,

    /**
     * The ValidationErrors model constructor.
     * @property {module:model/ValidationErrors}
     */
    ValidationErrors,

    /**
    * The TextAnalysisApi service constructor.
    * @property {module:api/TextAnalysisApi}
    */
    TextAnalysisApi
};
