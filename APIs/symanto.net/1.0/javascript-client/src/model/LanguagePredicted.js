/**
 * Psycholinguistic Text Analytics
 * We aim to provide the deepest understanding of people through psychology & AI
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@symanto.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LanguagePredicted model module.
 * @module model/LanguagePredicted
 * @version 1.0
 */
class LanguagePredicted {
    /**
     * Constructs a new <code>LanguagePredicted</code>.
     * @alias module:model/LanguagePredicted
     * @param detectedLanguage {String} the detected language_code corresponding to the input text.
     */
    constructor(detectedLanguage) { 
        
        LanguagePredicted.initialize(this, detectedLanguage);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, detectedLanguage) { 
        obj['detected_language'] = detectedLanguage;
    }

    /**
     * Constructs a <code>LanguagePredicted</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LanguagePredicted} obj Optional instance to populate.
     * @return {module:model/LanguagePredicted} The populated <code>LanguagePredicted</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LanguagePredicted();

            if (data.hasOwnProperty('detected_language')) {
                obj['detected_language'] = ApiClient.convertToType(data['detected_language'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LanguagePredicted</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LanguagePredicted</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of LanguagePredicted.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['detected_language'] && !(typeof data['detected_language'] === 'string' || data['detected_language'] instanceof String)) {
            throw new Error("Expected the field `detected_language` to be a primitive type in the JSON string but got " + data['detected_language']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }

        return true;
    }


}

LanguagePredicted.RequiredProperties = ["detected_language"];

/**
 * the detected language_code corresponding to the input text.
 * @member {String} detected_language
 */
LanguagePredicted.prototype['detected_language'] = undefined;

/**
 * id of the post.
 * @member {String} id
 */
LanguagePredicted.prototype['id'] = undefined;






export default LanguagePredicted;

