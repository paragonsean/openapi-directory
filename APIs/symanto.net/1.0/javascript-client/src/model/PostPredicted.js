/**
 * Psycholinguistic Text Analytics
 * We aim to provide the deepest understanding of people through psychology & AI
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@symanto.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Prediction from './Prediction';

/**
 * The PostPredicted model module.
 * @module model/PostPredicted
 * @version 1.0
 */
class PostPredicted {
    /**
     * Constructs a new <code>PostPredicted</code>.
     * @alias module:model/PostPredicted
     * @param predictions {Array.<module:model/Prediction>} the list of predictions.
     */
    constructor(predictions) { 
        
        PostPredicted.initialize(this, predictions);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, predictions) { 
        obj['predictions'] = predictions;
    }

    /**
     * Constructs a <code>PostPredicted</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PostPredicted} obj Optional instance to populate.
     * @return {module:model/PostPredicted} The populated <code>PostPredicted</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PostPredicted();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('predictions')) {
                obj['predictions'] = ApiClient.convertToType(data['predictions'], [Prediction]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PostPredicted</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PostPredicted</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PostPredicted.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        if (data['predictions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['predictions'])) {
                throw new Error("Expected the field `predictions` to be an array in the JSON data but got " + data['predictions']);
            }
            // validate the optional field `predictions` (array)
            for (const item of data['predictions']) {
                Prediction.validateJSON(item);
            };
        }

        return true;
    }


}

PostPredicted.RequiredProperties = ["predictions"];

/**
 * id of the post.
 * @member {String} id
 */
PostPredicted.prototype['id'] = undefined;

/**
 * the list of predictions.
 * @member {Array.<module:model/Prediction>} predictions
 */
PostPredicted.prototype['predictions'] = undefined;






export default PostPredicted;

