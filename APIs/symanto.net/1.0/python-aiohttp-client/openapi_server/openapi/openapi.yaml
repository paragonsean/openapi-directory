openapi: 3.0.3
info:
  contact:
    email: support@symanto.net
    name: Symanto Support
    url: https://developers.symanto.net
  description: We aim to provide the deepest understanding of people through psychology
    & AI
  termsOfService: https://developers.symanto.net/terms-of-service
  title: Psycholinguistic Text Analytics
  version: "1.0"
  x-apisguru-categories:
  - text
  x-logo:
    backgroundColor: '#FFFFFF'
    url: https://www.symanto.com/wp-content/uploads/2020/06/symanto.svg
  x-origin:
  - format: openapi
    url: https://api.symanto.net/docs/v1/openapi.json
    version: "3.0"
  x-providerName: symanto.net
servers:
- url: https://api.symanto.net
security:
- apiKeyHeader: []
paths:
  /communication:
    post:
      description: |-
        Identify the purpose and writing style of a written text.

        Supported Languages: [`ar`, `de`, `en`, `es`, `fr`, `it`, `nl`, `pt`, `ru`, `tr`, `zh`]

        Returned labels:
        * action-seeking
        * fact-oriented
        * information-seeking
        * self-revealing
      operationId: communication
      parameters:
      - explode: true
        in: query
        name: all
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PredictionResults'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrors'
          description: Validation Error
      summary: Communication & Tonality
      tags:
      - Text Analysis
      x-openapi-router-controller: openapi_server.controllers.text_analysis_controller
      x-codegen-request-body-name: body
  /ekman-emotion:
    post:
      description: |-
        Detect the emotions of the text based on Ekman.

        Supported Langauges: [`en`, `de`, `es`]

        Returned labels:
        * anger
        * disgust
        * fear
        * joy
        * sadness
        * surprise
        * no-emotion
      operationId: ekman_emotion
      parameters:
      - explode: true
        in: query
        name: all
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PredictionResults'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrors'
          description: Validation Error
      summary: Emotion Analysis
      tags:
      - Text Analysis
      x-openapi-router-controller: openapi_server.controllers.text_analysis_controller
      x-codegen-request-body-name: body
  /emotion:
    post:
      description: |-
        Detect the emotions of the text.

        Supported Langauges: [`en`, `de`, `es`]

        Returned labels:
        * anger
        * joy
        * love
        * sadness
        * surprise
        * uncategorized
      operationId: emotion
      parameters:
      - explode: true
        in: query
        name: all
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PredictionResults'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrors'
          description: Validation Error
      summary: Emotion Analysis
      tags:
      - Text Analysis
      x-openapi-router-controller: openapi_server.controllers.text_analysis_controller
      x-codegen-request-body-name: body
  /language-detection:
    post:
      description: |-
        Identifies what language a text is written in. Only languages that our API supports can be analyzed.

        Returned labels:
        * language_code of the detected language
      operationId: language_detection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LanguageDetectionRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LanguageDetectionResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrors'
          description: Validation Error
      summary: Language Detection
      tags:
      - Text Analysis
      x-openapi-router-controller: openapi_server.controllers.text_analysis_controller
      x-codegen-request-body-name: body
  /personality:
    post:
      description: |-
        Predict the personality trait of author of any written text.

        Supported Languages: [`ar`, `de`, `en`, `es`, `fr`, `it`, `nl`, `pt`, `ru`, `tr`, `zh`]

        Returned labels:

        * emotional
        * rational
      operationId: personality
      parameters:
      - explode: true
        in: query
        name: all
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PredictionResults'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrors'
          description: Validation Error
      summary: Personality Traits
      tags:
      - Text Analysis
      x-openapi-router-controller: openapi_server.controllers.text_analysis_controller
      x-codegen-request-body-name: body
  /sentiment:
    post:
      description: |-
        Evaluate the overall tonality of the text.

        Supported Languages: [`en`, `de`, `es`]

        Returned labels:
        * positive
        * negative
      operationId: sentiment
      parameters:
      - explode: true
        in: query
        name: all
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PredictionResults'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrors'
          description: Validation Error
      summary: Sentiment Analysis
      tags:
      - Text Analysis
      x-openapi-router-controller: openapi_server.controllers.text_analysis_controller
      x-codegen-request-body-name: body
  /topic-sentiment:
    post:
      operationId: topic_sentiment
      parameters:
      - description: Provide analysis domain for better extraction (optional)
        explode: true
        in: query
        name: domain
        required: false
        schema:
          enum:
          - Ecom
          - Employee
          - Hotel
          - Restaurant
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicSentimentResponse'
          description: ""
      summary: Extracts topics and sentiments and relates them.
      tags:
      - Text Analysis
      x-openapi-router-controller: openapi_server.controllers.text_analysis_controller
      x-codegen-request-body-name: body
components:
  schemas:
    LanguageDetection:
      example:
        id: id
        text: text
      properties:
        id:
          description: id of the text.
          title: id
          type: string
        text:
          description: the text itself.
          title: text
          type: string
      required:
      - text
      title: LanguageDetection
      type: object
    LanguageDetectionRequest:
      items:
        $ref: '#/components/schemas/LanguageDetection'
      maxItems: 64
      minItems: 1
      type: array
    LanguageDetectionResponse:
      items:
        $ref: '#/components/schemas/LanguagePredicted'
      type: array
    LanguagePredicted:
      example:
        detected_language: detected_language
        id: id
      properties:
        detected_language:
          description: the detected language_code corresponding to the input text.
          title: detected_language
          type: string
        id:
          description: id of the post.
          title: id
          type: string
      required:
      - detected_language
      title: LanguagePredicted
      type: object
    Post:
      example:
        language: en
        id: "1"
        text: I love the service
      properties:
        id:
          description: id of the post.
          example: "1"
          title: id
          type: string
        language:
          description: language_code of the text.
          example: en
          title: language
          type: string
        text:
          description: the text to be analysed.
          example: I love the service
          title: text
          type: string
      required:
      - language
      - text
      title: Post
      type: object
    PostPredicted:
      example:
        id: id
        predictions:
        - probability: 0.8008281904610115
          prediction: prediction
        - probability: 0.8008281904610115
          prediction: prediction
      properties:
        id:
          description: id of the post.
          title: id
          type: string
        predictions:
          description: the list of predictions.
          items:
            $ref: '#/components/schemas/Prediction'
          title: predictions
          type: array
      required:
      - predictions
      title: PostPredicted
      type: object
    PostRequest:
      items:
        $ref: '#/components/schemas/Post'
      maxItems: 32
      minItems: 1
      title: Posts
      type: array
    Prediction:
      example:
        probability: 0.8008281904610115
        prediction: prediction
      properties:
        prediction:
          description: the predicted label.
          title: Prediction
          type: string
        probability:
          description: the probability of the predicted label.
          title: Probability
          type: number
      required:
      - prediction
      - probability
      title: Prediction
      type: object
    PredictionResults:
      items:
        $ref: '#/components/schemas/PostPredicted'
      title: Prediction Results
      type: array
    Sentiment:
      example:
        negationTerm: negationTerm
        start: 1
        parentCategory: parentCategory
        scale: 6.027456183070403
        end: 0
        positive: true
        text: text
        category: category
      properties:
        category:
          title: category
          type: string
        end:
          format: int32
          title: end
          type: integer
        negationTerm:
          title: negationTerm
          type: string
        parentCategory:
          title: parentCategory
          type: string
        positive:
          title: positive
          type: boolean
        scale:
          format: double
          title: scale
          type: number
        start:
          format: int32
          title: start
          type: integer
        text:
          title: text
          type: string
      title: Sentiment
      type: object
    Topic:
      example:
        start: 2
        topic: topic
        end: 5
        text: text
        category: category
        polarity: 5.637376656633329
      properties:
        category:
          title: category
          type: string
        end:
          format: int32
          title: end
          type: integer
        polarity:
          format: double
          title: polarity
          type: number
        start:
          format: int32
          title: start
          type: integer
        text:
          title: text
          type: string
        topic:
          title: topic
          type: string
      title: Topic
      type: object
    TopicSentiment:
      example:
        sentence: sentence
        sentiment:
          negationTerm: negationTerm
          start: 1
          parentCategory: parentCategory
          scale: 6.027456183070403
          end: 0
          positive: true
          text: text
          category: category
        topic:
          start: 2
          topic: topic
          end: 5
          text: text
          category: category
          polarity: 5.637376656633329
      properties:
        sentence:
          title: sentence
          type: string
        sentiment:
          $ref: '#/components/schemas/Sentiment'
        topic:
          $ref: '#/components/schemas/Topic'
      title: TopicSentiment
      type: object
    TopicSentimentOutput:
      example:
        topicSentiments:
        - sentence: sentence
          sentiment:
            negationTerm: negationTerm
            start: 1
            parentCategory: parentCategory
            scale: 6.027456183070403
            end: 0
            positive: true
            text: text
            category: category
          topic:
            start: 2
            topic: topic
            end: 5
            text: text
            category: category
            polarity: 5.637376656633329
        - sentence: sentence
          sentiment:
            negationTerm: negationTerm
            start: 1
            parentCategory: parentCategory
            scale: 6.027456183070403
            end: 0
            positive: true
            text: text
            category: category
          topic:
            start: 2
            topic: topic
            end: 5
            text: text
            category: category
            polarity: 5.637376656633329
        topics:
        - start: 2
          topic: topic
          end: 5
          text: text
          category: category
          polarity: 5.637376656633329
        - start: 2
          topic: topic
          end: 5
          text: text
          category: category
          polarity: 5.637376656633329
        language: language
        sentiments:
        - negationTerm: negationTerm
          start: 1
          parentCategory: parentCategory
          scale: 6.027456183070403
          end: 0
          positive: true
          text: text
          category: category
        - negationTerm: negationTerm
          start: 1
          parentCategory: parentCategory
          scale: 6.027456183070403
          end: 0
          positive: true
          text: text
          category: category
        id: id
        text: text
      properties:
        id:
          title: id
          type: string
        language:
          title: language
          type: string
        sentiments:
          items:
            $ref: '#/components/schemas/Sentiment'
          title: sentiments
          type: array
        text:
          title: text
          type: string
        topicSentiments:
          items:
            $ref: '#/components/schemas/TopicSentiment'
          title: topicSentiments
          type: array
        topics:
          items:
            $ref: '#/components/schemas/Topic'
          title: topics
          type: array
      title: TopicSentimentOutput
      type: object
    TopicSentimentResponse:
      items:
        $ref: '#/components/schemas/TopicSentimentOutput'
      type: array
    ValidationError:
      example:
        msg: msg
        loc:
        - loc
        - loc
        type: type
      properties:
        loc:
          items:
            type: string
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
    ValidationErrors:
      example:
        detail:
        - msg: msg
          loc:
          - loc
          - loc
          type: type
        - msg: msg
          loc:
          - loc
          - loc
          type: type
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: ValidationErrors
      type: object
  securitySchemes:
    apiKeyHeader:
      in: header
      name: x-api-key
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_apiKeyHeader
