# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LanguagePredicted(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, detected_language: str=None, id: str=None):
        """LanguagePredicted - a model defined in OpenAPI

        :param detected_language: The detected_language of this LanguagePredicted.
        :param id: The id of this LanguagePredicted.
        """
        self.openapi_types = {
            'detected_language': str,
            'id': str
        }

        self.attribute_map = {
            'detected_language': 'detected_language',
            'id': 'id'
        }

        self._detected_language = detected_language
        self._id = id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LanguagePredicted':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LanguagePredicted of this LanguagePredicted.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def detected_language(self):
        """Gets the detected_language of this LanguagePredicted.

        the detected language_code corresponding to the input text.

        :return: The detected_language of this LanguagePredicted.
        :rtype: str
        """
        return self._detected_language

    @detected_language.setter
    def detected_language(self, detected_language):
        """Sets the detected_language of this LanguagePredicted.

        the detected language_code corresponding to the input text.

        :param detected_language: The detected_language of this LanguagePredicted.
        :type detected_language: str
        """
        if detected_language is None:
            raise ValueError("Invalid value for `detected_language`, must not be `None`")

        self._detected_language = detected_language

    @property
    def id(self):
        """Gets the id of this LanguagePredicted.

        id of the post.

        :return: The id of this LanguagePredicted.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this LanguagePredicted.

        id of the post.

        :param id: The id of this LanguagePredicted.
        :type id: str
        """

        self._id = id
