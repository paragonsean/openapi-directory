/**
 * Psycholinguistic Text Analytics
 * We aim to provide the deepest understanding of people through psychology & AI
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@symanto.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISentiment.h
 *
 * 
 */

#ifndef OAISentiment_H
#define OAISentiment_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISentiment : public OAIObject {
public:
    OAISentiment();
    OAISentiment(QString json);
    ~OAISentiment() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCategory() const;
    void setCategory(const QString &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    qint32 getEnd() const;
    void setEnd(const qint32 &end);
    bool is_end_Set() const;
    bool is_end_Valid() const;

    QString getNegationTerm() const;
    void setNegationTerm(const QString &negation_term);
    bool is_negation_term_Set() const;
    bool is_negation_term_Valid() const;

    QString getParentCategory() const;
    void setParentCategory(const QString &parent_category);
    bool is_parent_category_Set() const;
    bool is_parent_category_Valid() const;

    bool isPositive() const;
    void setPositive(const bool &positive);
    bool is_positive_Set() const;
    bool is_positive_Valid() const;

    double getScale() const;
    void setScale(const double &scale);
    bool is_scale_Set() const;
    bool is_scale_Valid() const;

    qint32 getStart() const;
    void setStart(const qint32 &start);
    bool is_start_Set() const;
    bool is_start_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    qint32 m_end;
    bool m_end_isSet;
    bool m_end_isValid;

    QString m_negation_term;
    bool m_negation_term_isSet;
    bool m_negation_term_isValid;

    QString m_parent_category;
    bool m_parent_category_isSet;
    bool m_parent_category_isValid;

    bool m_positive;
    bool m_positive_isSet;
    bool m_positive_isValid;

    double m_scale;
    bool m_scale_isSet;
    bool m_scale_isValid;

    qint32 m_start;
    bool m_start_isSet;
    bool m_start_isValid;

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISentiment)

#endif // OAISentiment_H
