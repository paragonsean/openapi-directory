/*
 * LinQR
 * This is LinQR QR Code API documentation. This API allows you to generate custom, visually attractive QR Codes. The cloud infrastructure guarantees high availability and autoscalability of the service. You can generate hundreds of thousands of images this way and use them however you like.  We realize that your API use case may require custom solutions, and perhaps we lack functionality that is very important to you. In that case feel free to write an email to our support and tell us about it. We have repeatedly added new functions of our service directly after the requests of our users.  **General remarks:**  - maximum request size is fixed at 32MB.  - request timeout is fixed at 180 seconds.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@linqr.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.net.URI;
import java.time.LocalDate;
import java.util.Arrays;
import org.openapitools.client.model.Bcc;
import org.openapitools.client.model.Cc;
import org.openapitools.client.model.CellPhone;
import org.openapitools.client.model.ContactData;
import org.openapitools.client.model.CryptoPaymentData;
import org.openapitools.client.model.Cryptocurrency;
import org.openapitools.client.model.Email;
import org.openapitools.client.model.EmailData;
import org.openapitools.client.model.Fax;
import org.openapitools.client.model.GeolocationData;
import org.openapitools.client.model.GeolocationUriFormat;
import org.openapitools.client.model.HomePhone;
import org.openapitools.client.model.PhoneData;
import org.openapitools.client.model.Photo;
import org.openapitools.client.model.SMSData;
import org.openapitools.client.model.Title;
import org.openapitools.client.model.To1;
import org.openapitools.client.model.Url;
import org.openapitools.client.model.Videophone;
import org.openapitools.client.model.WiFiData;
import org.openapitools.client.model.WiFiSecurity;
import org.openapitools.client.model.WorkPhone;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for AutoData
 */
public class AutoDataTest {
    private final AutoData model = new AutoData();

    /**
     * Model tests for AutoData
     */
    @Test
    public void testAutoData() {
        // TODO: test AutoData
    }

    /**
     * Test the property 'hidden'
     */
    @Test
    public void hiddenTest() {
        // TODO: test hidden
    }

    /**
     * Test the property 'password'
     */
    @Test
    public void passwordTest() {
        // TODO: test password
    }

    /**
     * Test the property 'security'
     */
    @Test
    public void securityTest() {
        // TODO: test security
    }

    /**
     * Test the property 'ssid'
     */
    @Test
    public void ssidTest() {
        // TODO: test ssid
    }

    /**
     * Test the property 'bcc'
     */
    @Test
    public void bccTest() {
        // TODO: test bcc
    }

    /**
     * Test the property 'body'
     */
    @Test
    public void bodyTest() {
        // TODO: test body
    }

    /**
     * Test the property 'cc'
     */
    @Test
    public void ccTest() {
        // TODO: test cc
    }

    /**
     * Test the property 'subject'
     */
    @Test
    public void subjectTest() {
        // TODO: test subject
    }

    /**
     * Test the property 'to'
     */
    @Test
    public void toTest() {
        // TODO: test to
    }

    /**
     * Test the property 'birthday'
     */
    @Test
    public void birthdayTest() {
        // TODO: test birthday
    }

    /**
     * Test the property 'cellPhone'
     */
    @Test
    public void cellPhoneTest() {
        // TODO: test cellPhone
    }

    /**
     * Test the property 'city'
     */
    @Test
    public void cityTest() {
        // TODO: test city
    }

    /**
     * Test the property 'country'
     */
    @Test
    public void countryTest() {
        // TODO: test country
    }

    /**
     * Test the property 'displayName'
     */
    @Test
    public void displayNameTest() {
        // TODO: test displayName
    }

    /**
     * Test the property 'email'
     */
    @Test
    public void emailTest() {
        // TODO: test email
    }

    /**
     * Test the property 'encoding'
     */
    @Test
    public void encodingTest() {
        // TODO: test encoding
    }

    /**
     * Test the property 'fax'
     */
    @Test
    public void faxTest() {
        // TODO: test fax
    }

    /**
     * Test the property 'firstName'
     */
    @Test
    public void firstNameTest() {
        // TODO: test firstName
    }

    /**
     * Test the property 'homePhone'
     */
    @Test
    public void homePhoneTest() {
        // TODO: test homePhone
    }

    /**
     * Test the property 'lastName'
     */
    @Test
    public void lastNameTest() {
        // TODO: test lastName
    }

    /**
     * Test the property 'latitude'
     */
    @Test
    public void latitudeTest() {
        // TODO: test latitude
    }

    /**
     * Test the property 'longitude'
     */
    @Test
    public void longitudeTest() {
        // TODO: test longitude
    }

    /**
     * Test the property 'memo'
     */
    @Test
    public void memoTest() {
        // TODO: test memo
    }

    /**
     * Test the property 'nickname'
     */
    @Test
    public void nicknameTest() {
        // TODO: test nickname
    }

    /**
     * Test the property 'organization'
     */
    @Test
    public void organizationTest() {
        // TODO: test organization
    }

    /**
     * Test the property 'phone'
     */
    @Test
    public void phoneTest() {
        // TODO: test phone
    }

    /**
     * Test the property 'photo'
     */
    @Test
    public void photoTest() {
        // TODO: test photo
    }

    /**
     * Test the property 'poBox'
     */
    @Test
    public void poBoxTest() {
        // TODO: test poBox
    }

    /**
     * Test the property 'region'
     */
    @Test
    public void regionTest() {
        // TODO: test region
    }

    /**
     * Test the property 'revision'
     */
    @Test
    public void revisionTest() {
        // TODO: test revision
    }

    /**
     * Test the property 'source'
     */
    @Test
    public void sourceTest() {
        // TODO: test source
    }

    /**
     * Test the property 'street'
     */
    @Test
    public void streetTest() {
        // TODO: test street
    }

    /**
     * Test the property 'title'
     */
    @Test
    public void titleTest() {
        // TODO: test title
    }

    /**
     * Test the property 'url'
     */
    @Test
    public void urlTest() {
        // TODO: test url
    }

    /**
     * Test the property 'videophone'
     */
    @Test
    public void videophoneTest() {
        // TODO: test videophone
    }

    /**
     * Test the property 'workPhone'
     */
    @Test
    public void workPhoneTest() {
        // TODO: test workPhone
    }

    /**
     * Test the property 'zipCode'
     */
    @Test
    public void zipCodeTest() {
        // TODO: test zipCode
    }

    /**
     * Test the property 'houseNumber'
     */
    @Test
    public void houseNumberTest() {
        // TODO: test houseNumber
    }

    /**
     * Test the property 'prefecture'
     */
    @Test
    public void prefectureTest() {
        // TODO: test prefecture
    }

    /**
     * Test the property 'reading'
     */
    @Test
    public void readingTest() {
        // TODO: test reading
    }

    /**
     * Test the property 'roomNumber'
     */
    @Test
    public void roomNumberTest() {
        // TODO: test roomNumber
    }

    /**
     * Test the property 'address'
     */
    @Test
    public void addressTest() {
        // TODO: test address
    }

    /**
     * Test the property 'amount'
     */
    @Test
    public void amountTest() {
        // TODO: test amount
    }

    /**
     * Test the property 'currency'
     */
    @Test
    public void currencyTest() {
        // TODO: test currency
    }

    /**
     * Test the property 'label'
     */
    @Test
    public void labelTest() {
        // TODO: test label
    }

    /**
     * Test the property 'message'
     */
    @Test
    public void messageTest() {
        // TODO: test message
    }

    /**
     * Test the property 'format'
     */
    @Test
    public void formatTest() {
        // TODO: test format
    }

}
