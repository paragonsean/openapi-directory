/*
 * LinQR
 * This is LinQR QR Code API documentation. This API allows you to generate custom, visually attractive QR Codes. The cloud infrastructure guarantees high availability and autoscalability of the service. You can generate hundreds of thousands of images this way and use them however you like.  We realize that your API use case may require custom solutions, and perhaps we lack functionality that is very important to you. In that case feel free to write an email to our support and tell us about it. We have repeatedly added new functions of our service directly after the requests of our users.  **General remarks:**  - maximum request size is fixed at 32MB.  - request timeout is fixed at 180 seconds.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@linqr.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AutoQRCode;
import org.openapitools.client.model.AutoQRCodeMultipartBody;
import org.openapitools.client.model.ContactQRCode;
import org.openapitools.client.model.ContactQRCodeMultipartBody;
import org.openapitools.client.model.CryptoPaymentQRCode;
import org.openapitools.client.model.CryptoPaymentQRCodeMultipartBody;
import org.openapitools.client.model.EmailQRCode;
import org.openapitools.client.model.EmailQRCodeMultipartBody;
import java.io.File;
import org.openapitools.client.model.GenericError;
import org.openapitools.client.model.GeolocationQRCode;
import org.openapitools.client.model.GeolocationQRCodeMultipartBody;
import org.openapitools.client.model.HTTPValidationError;
import org.openapitools.client.model.PhoneQRCode;
import org.openapitools.client.model.PhoneQRCodeMultipartBody;
import org.openapitools.client.model.SMSQRCode;
import org.openapitools.client.model.SMSQRCodeMultipartBody;
import org.openapitools.client.model.TextQRCode;
import org.openapitools.client.model.TextQRCodeMultipartBody;
import org.openapitools.client.model.WiFiQRCode;
import org.openapitools.client.model.WiFiQRCodeMultipartBody;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SingleQrCodeApi
 */
@Disabled
public class SingleQrCodeApiTest {

    private final SingleQrCodeApi api = new SingleQrCodeApi();

    /**
     * Contact QR Code
     *
     * This endpoint allows you to create a QR Code that allows user to quickly add contact information to the phone book. The code contains an appropriately encoded electronic business card. After scanning, the device prompts to save the contact in the phone book.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dispatcherQrcodeContactPostTest() throws ApiException {
        ContactQRCode contactQRCode = null;
        File response = api.dispatcherQrcodeContactPost(contactQRCode);
        // TODO: test validations
    }

    /**
     * Cryptocurrency payment QR Code
     *
     * This endpoint allows you to create a QR Code that allows user to make a quick cryptocurrency transfer. The code contains appropriately encoded data for the payment. After scanning the code, the cryptocurrency wallet application asks user to perform the transfer without rewriting all necessary data.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dispatcherQrcodeCryptoPostTest() throws ApiException {
        CryptoPaymentQRCode cryptoPaymentQRCode = null;
        File response = api.dispatcherQrcodeCryptoPost(cryptoPaymentQRCode);
        // TODO: test validations
    }

    /**
     * Email QR Code
     *
     * This endpoint allows the creation of a QR Code allowing the user to quickly send an email. The code contains an appropriately encoded message template. After scanning, the device starts the e-mail client with pre-filled specified fields.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dispatcherQrcodeEmailPostTest() throws ApiException {
        EmailQRCode emailQRCode = null;
        File response = api.dispatcherQrcodeEmailPost(emailQRCode);
        // TODO: test validations
    }

    /**
     * Geolocation QR Code
     *
     * This endpoint allows you to create a QR Code that allows to share location with the user. The code contains appropriately encoded geographic coordinates. After scanning the code, device maps application is invoked, pointing to the selected location (address).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dispatcherQrcodeGeoPostTest() throws ApiException {
        GeolocationQRCode geolocationQRCode = null;
        File response = api.dispatcherQrcodeGeoPost(geolocationQRCode);
        // TODO: test validations
    }

    /**
     * Telephone QR Code
     *
     * This endpoint allows you to create a QR Code that allows user to make quick telephone call. The code contains appropriately encoded telephone number. After scanning the code, device dialer is invoked with prefilled phone number. To make a call, the user only needs to press the green phone key.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dispatcherQrcodePhonePostTest() throws ApiException {
        PhoneQRCode phoneQRCode = null;
        File response = api.dispatcherQrcodePhonePost(phoneQRCode);
        // TODO: test validations
    }

    /**
     * Arbitrary data type QR Code
     *
     * This endpoint aggregates the functionality of all other endpoints in the group. The data type in the &#x60;data&#x60; field is recognized automatically and the data is encoded in an appropriate way.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dispatcherQrcodePostTest() throws ApiException {
        AutoQRCode autoQRCode = null;
        File response = api.dispatcherQrcodePost(autoQRCode);
        // TODO: test validations
    }

    /**
     * SMS QR Code
     *
     * This endpoint allows you to create a QR Code that allows user to quickly send SMS. The code contains appropriately encoded recipient number and message template. After scanning the code, device message application is invoked with prefilled phone number and text, ready to be sent. To send a SMS, the user only needs to press *Send* button.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dispatcherQrcodeSmsPostTest() throws ApiException {
        SMSQRCode smSQRCode = null;
        File response = api.dispatcherQrcodeSmsPost(smSQRCode);
        // TODO: test validations
    }

    /**
     * Text QR Code
     *
     * This endpoint allows you to create a QR Code containing any text, in particular, an URL that may redirect the user to the website. After QR code is scanned, website will be displayed to the user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dispatcherQrcodeTextPostTest() throws ApiException {
        TextQRCode textQRCode = null;
        File response = api.dispatcherQrcodeTextPost(textQRCode);
        // TODO: test validations
    }

    /**
     * WiFi QR Code
     *
     * This endpoint allows you to create a QR Code that allows user to quickly connect to a WiFi network. The code contains properly encoded network credentials. After scanning, the device can automatically connect to the network without having to enter the password manually.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dispatcherQrcodeWifiPostTest() throws ApiException {
        WiFiQRCode wiFiQRCode = null;
        File response = api.dispatcherQrcodeWifiPost(wiFiQRCode);
        // TODO: test validations
    }

}
