/**
 * LinQR
 * This is LinQR QR Code API documentation. This API allows you to generate custom, visually attractive QR Codes. The cloud infrastructure guarantees high availability and autoscalability of the service. You can generate hundreds of thousands of images this way and use them however you like.  We realize that your API use case may require custom solutions, and perhaps we lack functionality that is very important to you. In that case feel free to write an email to our support and tell us about it. We have repeatedly added new functions of our service directly after the requests of our users.  **General remarks:**  - maximum request size is fixed at 32MB.  - request timeout is fixed at 180 seconds.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@linqr.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.LinQr);
  }
}(this, function(expect, LinQr) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new LinQr.VCardData();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('VCardData', function() {
    it('should create an instance of VCardData', function() {
      // uncomment below and update the code to test VCardData
      //var instance = new LinQr.VCardData();
      //expect(instance).to.be.a(LinQr.VCardData);
    });

    it('should have the property birthday (base name: "birthday")', function() {
      // uncomment below and update the code to test the property birthday
      //var instance = new LinQr.VCardData();
      //expect(instance).to.be();
    });

    it('should have the property cellPhone (base name: "cell_phone")', function() {
      // uncomment below and update the code to test the property cellPhone
      //var instance = new LinQr.VCardData();
      //expect(instance).to.be();
    });

    it('should have the property city (base name: "city")', function() {
      // uncomment below and update the code to test the property city
      //var instance = new LinQr.VCardData();
      //expect(instance).to.be();
    });

    it('should have the property country (base name: "country")', function() {
      // uncomment below and update the code to test the property country
      //var instance = new LinQr.VCardData();
      //expect(instance).to.be();
    });

    it('should have the property displayName (base name: "display_name")', function() {
      // uncomment below and update the code to test the property displayName
      //var instance = new LinQr.VCardData();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new LinQr.VCardData();
      //expect(instance).to.be();
    });

    it('should have the property encoding (base name: "encoding")', function() {
      // uncomment below and update the code to test the property encoding
      //var instance = new LinQr.VCardData();
      //expect(instance).to.be();
    });

    it('should have the property fax (base name: "fax")', function() {
      // uncomment below and update the code to test the property fax
      //var instance = new LinQr.VCardData();
      //expect(instance).to.be();
    });

    it('should have the property firstName (base name: "first_name")', function() {
      // uncomment below and update the code to test the property firstName
      //var instance = new LinQr.VCardData();
      //expect(instance).to.be();
    });

    it('should have the property homePhone (base name: "home_phone")', function() {
      // uncomment below and update the code to test the property homePhone
      //var instance = new LinQr.VCardData();
      //expect(instance).to.be();
    });

    it('should have the property lastName (base name: "last_name")', function() {
      // uncomment below and update the code to test the property lastName
      //var instance = new LinQr.VCardData();
      //expect(instance).to.be();
    });

    it('should have the property latitude (base name: "latitude")', function() {
      // uncomment below and update the code to test the property latitude
      //var instance = new LinQr.VCardData();
      //expect(instance).to.be();
    });

    it('should have the property longitude (base name: "longitude")', function() {
      // uncomment below and update the code to test the property longitude
      //var instance = new LinQr.VCardData();
      //expect(instance).to.be();
    });

    it('should have the property memo (base name: "memo")', function() {
      // uncomment below and update the code to test the property memo
      //var instance = new LinQr.VCardData();
      //expect(instance).to.be();
    });

    it('should have the property nickname (base name: "nickname")', function() {
      // uncomment below and update the code to test the property nickname
      //var instance = new LinQr.VCardData();
      //expect(instance).to.be();
    });

    it('should have the property organization (base name: "organization")', function() {
      // uncomment below and update the code to test the property organization
      //var instance = new LinQr.VCardData();
      //expect(instance).to.be();
    });

    it('should have the property phone (base name: "phone")', function() {
      // uncomment below and update the code to test the property phone
      //var instance = new LinQr.VCardData();
      //expect(instance).to.be();
    });

    it('should have the property photo (base name: "photo")', function() {
      // uncomment below and update the code to test the property photo
      //var instance = new LinQr.VCardData();
      //expect(instance).to.be();
    });

    it('should have the property poBox (base name: "po_box")', function() {
      // uncomment below and update the code to test the property poBox
      //var instance = new LinQr.VCardData();
      //expect(instance).to.be();
    });

    it('should have the property region (base name: "region")', function() {
      // uncomment below and update the code to test the property region
      //var instance = new LinQr.VCardData();
      //expect(instance).to.be();
    });

    it('should have the property revision (base name: "revision")', function() {
      // uncomment below and update the code to test the property revision
      //var instance = new LinQr.VCardData();
      //expect(instance).to.be();
    });

    it('should have the property source (base name: "source")', function() {
      // uncomment below and update the code to test the property source
      //var instance = new LinQr.VCardData();
      //expect(instance).to.be();
    });

    it('should have the property street (base name: "street")', function() {
      // uncomment below and update the code to test the property street
      //var instance = new LinQr.VCardData();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new LinQr.VCardData();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instance = new LinQr.VCardData();
      //expect(instance).to.be();
    });

    it('should have the property videophone (base name: "videophone")', function() {
      // uncomment below and update the code to test the property videophone
      //var instance = new LinQr.VCardData();
      //expect(instance).to.be();
    });

    it('should have the property workPhone (base name: "work_phone")', function() {
      // uncomment below and update the code to test the property workPhone
      //var instance = new LinQr.VCardData();
      //expect(instance).to.be();
    });

    it('should have the property zipCode (base name: "zip_code")', function() {
      // uncomment below and update the code to test the property zipCode
      //var instance = new LinQr.VCardData();
      //expect(instance).to.be();
    });

  });

}));
