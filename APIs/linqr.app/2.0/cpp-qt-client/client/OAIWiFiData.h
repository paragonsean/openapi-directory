/**
 * LinQR
 * This is LinQR QR Code API documentation. This API allows you to generate custom, visually attractive QR Codes. The cloud infrastructure guarantees high availability and autoscalability of the service. You can generate hundreds of thousands of images this way and use them however you like.  We realize that your API use case may require custom solutions, and perhaps we lack functionality that is very important to you. In that case feel free to write an email to our support and tell us about it. We have repeatedly added new functions of our service directly after the requests of our users.  **General remarks:**  - maximum request size is fixed at 32MB.  - request timeout is fixed at 180 seconds.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@linqr.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWiFiData.h
 *
 * 
 */

#ifndef OAIWiFiData_H
#define OAIWiFiData_H

#include <QJsonObject>

#include "OAIWiFiSecurity.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIWiFiData : public OAIObject {
public:
    OAIWiFiData();
    OAIWiFiData(QString json);
    ~OAIWiFiData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isHidden() const;
    void setHidden(const bool &hidden);
    bool is_hidden_Set() const;
    bool is_hidden_Valid() const;

    QString getPassword() const;
    void setPassword(const QString &password);
    bool is_password_Set() const;
    bool is_password_Valid() const;

    OAIWiFiSecurity getSecurity() const;
    void setSecurity(const OAIWiFiSecurity &security);
    bool is_security_Set() const;
    bool is_security_Valid() const;

    QString getSsid() const;
    void setSsid(const QString &ssid);
    bool is_ssid_Set() const;
    bool is_ssid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_hidden;
    bool m_hidden_isSet;
    bool m_hidden_isValid;

    QString m_password;
    bool m_password_isSet;
    bool m_password_isValid;

    OAIWiFiSecurity m_security;
    bool m_security_isSet;
    bool m_security_isValid;

    QString m_ssid;
    bool m_ssid_isSet;
    bool m_ssid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWiFiData)

#endif // OAIWiFiData_H
