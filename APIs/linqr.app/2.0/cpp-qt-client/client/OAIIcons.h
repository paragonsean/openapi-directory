/**
 * LinQR
 * This is LinQR QR Code API documentation. This API allows you to generate custom, visually attractive QR Codes. The cloud infrastructure guarantees high availability and autoscalability of the service. You can generate hundreds of thousands of images this way and use them however you like.  We realize that your API use case may require custom solutions, and perhaps we lack functionality that is very important to you. In that case feel free to write an email to our support and tell us about it. We have repeatedly added new functions of our service directly after the requests of our users.  **General remarks:**  - maximum request size is fixed at 32MB.  - request timeout is fixed at 180 seconds.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@linqr.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIcons.h
 *
 * An enumeration.
 */

#ifndef OAIIcons_H
#define OAIIcons_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIIcons : public OAIEnum {
public:
    OAIIcons();
    OAIIcons(QString json);
    ~OAIIcons() override;

    QString asJson() const override;
    QJsonValue asJsonValue() const override;
    void fromJsonValue(QJsonValue json) override;
    void fromJson(QString jsonString) override;

    enum class eOAIIcons {
        INVALID_VALUE_OPENAPI_GENERATED = 0,
        APPSTORE, 
        BITCOIN, 
        CALENDAR, 
        ETHEREUM, 
        FACEBOOK, 
        GITHUB, 
        GITLAB, 
        GLOBE, 
        GOOGLEPLAY, 
        GPS, 
        HEART, 
        INSTAGRAM, 
        LINK, 
        LINKEDIN, 
        MAIL, 
        PHONE, 
        PHOTO, 
        PINTEREST, 
        SNAPCHAT, 
        TIKTOK, 
        TUMBLR, 
        TWITTER, 
        VIMEO, 
        VKONTAKTE, 
        WALLET, 
        WHATSAPP, 
        WIFI, 
        YOUTUBE
    };
    OAIIcons::eOAIIcons getValue() const;
    void setValue(const OAIIcons::eOAIIcons& value);
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    eOAIIcons m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIcons)

#endif // OAIIcons_H
