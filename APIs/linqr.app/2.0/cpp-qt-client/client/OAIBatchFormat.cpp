/**
 * LinQR
 * This is LinQR QR Code API documentation. This API allows you to generate custom, visually attractive QR Codes. The cloud infrastructure guarantees high availability and autoscalability of the service. You can generate hundreds of thousands of images this way and use them however you like.  We realize that your API use case may require custom solutions, and perhaps we lack functionality that is very important to you. In that case feel free to write an email to our support and tell us about it. We have repeatedly added new functions of our service directly after the requests of our users.  **General remarks:**  - maximum request size is fixed at 32MB.  - request timeout is fixed at 180 seconds.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@linqr.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchFormat.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchFormat::OAIBatchFormat(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchFormat::OAIBatchFormat() {
    this->initializeModel();
}

OAIBatchFormat::~OAIBatchFormat() {}

void OAIBatchFormat::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIBatchFormat::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIBatchFormat::fromJson(QString jsonString) {
    
    if ( jsonString.compare("zip", Qt::CaseInsensitive) == 0) {
        m_value = eOAIBatchFormat::ZIP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("tgz", Qt::CaseInsensitive) == 0) {
        m_value = eOAIBatchFormat::TGZ;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIBatchFormat::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIBatchFormat::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIBatchFormat::ZIP:
            val = "zip";
            break;
        case eOAIBatchFormat::TGZ:
            val = "tgz";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIBatchFormat::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIBatchFormat::eOAIBatchFormat OAIBatchFormat::getValue() const {
    return m_value;
}

void OAIBatchFormat::setValue(const OAIBatchFormat::eOAIBatchFormat& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIBatchFormat::isSet() const {
    
    return m_value_isSet;
}

bool OAIBatchFormat::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
