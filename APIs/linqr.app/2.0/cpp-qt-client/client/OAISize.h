/**
 * LinQR
 * This is LinQR QR Code API documentation. This API allows you to generate custom, visually attractive QR Codes. The cloud infrastructure guarantees high availability and autoscalability of the service. You can generate hundreds of thousands of images this way and use them however you like.  We realize that your API use case may require custom solutions, and perhaps we lack functionality that is very important to you. In that case feel free to write an email to our support and tell us about it. We have repeatedly added new functions of our service directly after the requests of our users.  **General remarks:**  - maximum request size is fixed at 32MB.  - request timeout is fixed at 180 seconds.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@linqr.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISize.h
 *
 * 
 */

#ifndef OAISize_H
#define OAISize_H

#include <QJsonObject>

#include "OAIECLevel.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISize : public OAIObject {
public:
    OAISize();
    OAISize(QString json);
    ~OAISize() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIECLevel getErrorCorrection() const;
    void setErrorCorrection(const OAIECLevel &error_correction);
    bool is_error_correction_Set() const;
    bool is_error_correction_Valid() const;

    qint32 getQuietZone() const;
    void setQuietZone(const qint32 &quiet_zone);
    bool is_quiet_zone_Set() const;
    bool is_quiet_zone_Valid() const;

    qint32 getWidth() const;
    void setWidth(const qint32 &width);
    bool is_width_Set() const;
    bool is_width_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIECLevel m_error_correction;
    bool m_error_correction_isSet;
    bool m_error_correction_isValid;

    qint32 m_quiet_zone;
    bool m_quiet_zone_isSet;
    bool m_quiet_zone_isValid;

    qint32 m_width;
    bool m_width_isSet;
    bool m_width_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISize)

#endif // OAISize_H
