# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ModuleShapes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    ARROW = 'arrow'
    CIRCLE = 'circle'
    CLASSIC = 'classic'
    DEFAULT = 'default'
    HEART = 'heart'
    HEAVYROUND = 'heavyround'
    HORIZONTAL_LINES = 'horizontal_lines'
    LIGHTROUND = 'lightround'
    SHARP = 'sharp'
    SIEVE = 'sieve'
    VERTICAL_LINES = 'vertical_lines'

    def __init__(self):
        """ModuleShapes - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ModuleShapes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ModuleShapes of this ModuleShapes.
        """
        return util.deserialize_model(dikt, cls)
