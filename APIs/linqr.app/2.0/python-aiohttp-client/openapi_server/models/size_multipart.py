# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SizeMultipart(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, quiet_zone: int=4, width: int=200):
        """SizeMultipart - a model defined in OpenAPI

        :param quiet_zone: The quiet_zone of this SizeMultipart.
        :param width: The width of this SizeMultipart.
        """
        self.openapi_types = {
            'quiet_zone': int,
            'width': int
        }

        self.attribute_map = {
            'quiet_zone': 'quiet_zone',
            'width': 'width'
        }

        self._quiet_zone = quiet_zone
        self._width = width

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SizeMultipart':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SizeMultipart of this SizeMultipart.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def quiet_zone(self):
        """Gets the quiet_zone of this SizeMultipart.

        Default size of margin with background color around the generated QR Code. This length is expressed as number of modules of the Code. Recommended value is 4, but most readers allow you to read the code with smaller or zero margin.  For more information please refer to: <a href=\"https://www.qrcode.com/en/howto/code.html\" rel=\"noopener noreferrer\" target=\"_blank\" >QRCode.com</a>.

        :return: The quiet_zone of this SizeMultipart.
        :rtype: int
        """
        return self._quiet_zone

    @quiet_zone.setter
    def quiet_zone(self, quiet_zone):
        """Sets the quiet_zone of this SizeMultipart.

        Default size of margin with background color around the generated QR Code. This length is expressed as number of modules of the Code. Recommended value is 4, but most readers allow you to read the code with smaller or zero margin.  For more information please refer to: <a href=\"https://www.qrcode.com/en/howto/code.html\" rel=\"noopener noreferrer\" target=\"_blank\" >QRCode.com</a>.

        :param quiet_zone: The quiet_zone of this SizeMultipart.
        :type quiet_zone: int
        """
        if quiet_zone is not None and quiet_zone < 0:
            raise ValueError("Invalid value for `quiet_zone`, must be a value greater than or equal to `0`")

        self._quiet_zone = quiet_zone

    @property
    def width(self):
        """Gets the width of this SizeMultipart.

        Width (and height, as the QR Codes are squares) in pixels of the generated image. If the requested value is `float` it will be casted to nearest `int`.

        :return: The width of this SizeMultipart.
        :rtype: int
        """
        return self._width

    @width.setter
    def width(self, width):
        """Sets the width of this SizeMultipart.

        Width (and height, as the QR Codes are squares) in pixels of the generated image. If the requested value is `float` it will be casted to nearest `int`.

        :param width: The width of this SizeMultipart.
        :type width: int
        """
        if width is not None and width > 2500:
            raise ValueError("Invalid value for `width`, must be a value less than or equal to `2500`")
        if width is not None and width < 100:
            raise ValueError("Invalid value for `width`, must be a value greater than or equal to `100`")

        self._width = width
