# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EmbeddedImageMultipart(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, modules: bool=True):
        """EmbeddedImageMultipart - a model defined in OpenAPI

        :param modules: The modules of this EmbeddedImageMultipart.
        """
        self.openapi_types = {
            'modules': bool
        }

        self.attribute_map = {
            'modules': 'modules'
        }

        self._modules = modules

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EmbeddedImageMultipart':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EmbeddedImageMultipart of this EmbeddedImageMultipart.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def modules(self):
        """Gets the modules of this EmbeddedImageMultipart.

        This property determines whether the QR Code modules located under the image area are visible or not. It can be useful for cleaning the background of a partially transparent or non-square image.

        :return: The modules of this EmbeddedImageMultipart.
        :rtype: bool
        """
        return self._modules

    @modules.setter
    def modules(self, modules):
        """Sets the modules of this EmbeddedImageMultipart.

        This property determines whether the QR Code modules located under the image area are visible or not. It can be useful for cleaning the background of a partially transparent or non-square image.

        :param modules: The modules of this EmbeddedImageMultipart.
        :type modules: bool
        """

        self._modules = modules
