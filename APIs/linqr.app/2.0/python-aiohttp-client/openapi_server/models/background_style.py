# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BackgroundStyle(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, color: str=None):
        """BackgroundStyle - a model defined in OpenAPI

        :param color: The color of this BackgroundStyle.
        """
        self.openapi_types = {
            'color': str
        }

        self.attribute_map = {
            'color': 'color'
        }

        self._color = color

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BackgroundStyle':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BackgroundStyle of this BackgroundStyle.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def color(self):
        """Gets the color of this BackgroundStyle.

        Background color for QR Code. If value is not specified, background area is removed resulting in transparent or white (for output formats not supporting transparency) background depending on chosen file format.

        :return: The color of this BackgroundStyle.
        :rtype: str
        """
        return self._color

    @color.setter
    def color(self, color):
        """Sets the color of this BackgroundStyle.

        Background color for QR Code. If value is not specified, background area is removed resulting in transparent or white (for output formats not supporting transparency) background depending on chosen file format.

        :param color: The color of this BackgroundStyle.
        :type color: str
        """

        self._color = color
