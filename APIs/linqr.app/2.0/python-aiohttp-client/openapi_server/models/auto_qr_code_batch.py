# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.auto_qr_code import AutoQRCode
from openapi_server.models.batch_output_file import BatchOutputFile
from openapi_server import util


class AutoQRCodeBatch(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, items: List[AutoQRCode]=None, output: BatchOutputFile=None):
        """AutoQRCodeBatch - a model defined in OpenAPI

        :param items: The items of this AutoQRCodeBatch.
        :param output: The output of this AutoQRCodeBatch.
        """
        self.openapi_types = {
            'items': List[AutoQRCode],
            'output': BatchOutputFile
        }

        self.attribute_map = {
            'items': 'items',
            'output': 'output'
        }

        self._items = items
        self._output = output

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AutoQRCodeBatch':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AutoQRCodeBatch of this AutoQRCodeBatch.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def items(self):
        """Gets the items of this AutoQRCodeBatch.

        `items` property allows you to specify an array of QR Codes to generate. The elements of the array must be valid objects analogous to those required for single code generation.

        :return: The items of this AutoQRCodeBatch.
        :rtype: List[AutoQRCode]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this AutoQRCodeBatch.

        `items` property allows you to specify an array of QR Codes to generate. The elements of the array must be valid objects analogous to those required for single code generation.

        :param items: The items of this AutoQRCodeBatch.
        :type items: List[AutoQRCode]
        """
        if items is None:
            raise ValueError("Invalid value for `items`, must not be `None`")

        self._items = items

    @property
    def output(self):
        """Gets the output of this AutoQRCodeBatch.

        `output` property allows you to specify the name and extension (type) of the file returned by the API

        :return: The output of this AutoQRCodeBatch.
        :rtype: BatchOutputFile
        """
        return self._output

    @output.setter
    def output(self, output):
        """Sets the output of this AutoQRCodeBatch.

        `output` property allows you to specify the name and extension (type) of the file returned by the API

        :param output: The output of this AutoQRCodeBatch.
        :type output: BatchOutputFile
        """

        self._output = output
