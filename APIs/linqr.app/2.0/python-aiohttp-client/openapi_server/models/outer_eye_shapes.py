# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OuterEyeShapes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    CIRCLE = 'circle'
    CUSHION = 'cushion'
    DEFAULT = 'default'
    DIAMOND = 'diamond'
    DOTS = 'dots'
    HEAVYROUND = 'heavyround'
    HORIZONTAL_LINES = 'horizontal_lines'
    LEAF = 'leaf'
    LEFT_EYE = 'left_eye'
    LIGHTROUND = 'lightround'
    RIGHT_EYE = 'right_eye'
    SHIELD = 'shield'
    SIEVE = 'sieve'
    STAR = 'star'
    VERTICAL_LINES = 'vertical_lines'

    def __init__(self):
        """OuterEyeShapes - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OuterEyeShapes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OuterEyeShapes of this OuterEyeShapes.
        """
        return util.deserialize_model(dikt, cls)
