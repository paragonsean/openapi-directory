/**
 * Qualpay Payment Gateway API
 * This document describes the Qualpay Payment Gateway API.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ShippingAddress from './ShippingAddress';

/**
 * The Customer model module.
 * @module model/Customer
 * @version 1.7.0
 */
class Customer {
    /**
     * Constructs a new <code>Customer</code>.
     * @alias module:model/Customer
     */
    constructor() { 
        
        Customer.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Customer</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Customer} obj Optional instance to populate.
     * @return {module:model/Customer} The populated <code>Customer</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Customer();

            if (data.hasOwnProperty('billing_addr1')) {
                obj['billing_addr1'] = ApiClient.convertToType(data['billing_addr1'], 'String');
            }
            if (data.hasOwnProperty('billing_addr2')) {
                obj['billing_addr2'] = ApiClient.convertToType(data['billing_addr2'], 'String');
            }
            if (data.hasOwnProperty('billing_city')) {
                obj['billing_city'] = ApiClient.convertToType(data['billing_city'], 'String');
            }
            if (data.hasOwnProperty('billing_country')) {
                obj['billing_country'] = ApiClient.convertToType(data['billing_country'], 'String');
            }
            if (data.hasOwnProperty('billing_country_code')) {
                obj['billing_country_code'] = ApiClient.convertToType(data['billing_country_code'], 'String');
            }
            if (data.hasOwnProperty('billing_state')) {
                obj['billing_state'] = ApiClient.convertToType(data['billing_state'], 'String');
            }
            if (data.hasOwnProperty('billing_zip')) {
                obj['billing_zip'] = ApiClient.convertToType(data['billing_zip'], 'String');
            }
            if (data.hasOwnProperty('billing_zip4')) {
                obj['billing_zip4'] = ApiClient.convertToType(data['billing_zip4'], 'String');
            }
            if (data.hasOwnProperty('customer_email')) {
                obj['customer_email'] = ApiClient.convertToType(data['customer_email'], 'String');
            }
            if (data.hasOwnProperty('customer_firm_name')) {
                obj['customer_firm_name'] = ApiClient.convertToType(data['customer_firm_name'], 'String');
            }
            if (data.hasOwnProperty('customer_first_name')) {
                obj['customer_first_name'] = ApiClient.convertToType(data['customer_first_name'], 'String');
            }
            if (data.hasOwnProperty('customer_last_name')) {
                obj['customer_last_name'] = ApiClient.convertToType(data['customer_last_name'], 'String');
            }
            if (data.hasOwnProperty('customer_phone')) {
                obj['customer_phone'] = ApiClient.convertToType(data['customer_phone'], 'String');
            }
            if (data.hasOwnProperty('shipping_addresses')) {
                obj['shipping_addresses'] = ApiClient.convertToType(data['shipping_addresses'], [ShippingAddress]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Customer</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Customer</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['billing_addr1'] && !(typeof data['billing_addr1'] === 'string' || data['billing_addr1'] instanceof String)) {
            throw new Error("Expected the field `billing_addr1` to be a primitive type in the JSON string but got " + data['billing_addr1']);
        }
        // ensure the json data is a string
        if (data['billing_addr2'] && !(typeof data['billing_addr2'] === 'string' || data['billing_addr2'] instanceof String)) {
            throw new Error("Expected the field `billing_addr2` to be a primitive type in the JSON string but got " + data['billing_addr2']);
        }
        // ensure the json data is a string
        if (data['billing_city'] && !(typeof data['billing_city'] === 'string' || data['billing_city'] instanceof String)) {
            throw new Error("Expected the field `billing_city` to be a primitive type in the JSON string but got " + data['billing_city']);
        }
        // ensure the json data is a string
        if (data['billing_country'] && !(typeof data['billing_country'] === 'string' || data['billing_country'] instanceof String)) {
            throw new Error("Expected the field `billing_country` to be a primitive type in the JSON string but got " + data['billing_country']);
        }
        // ensure the json data is a string
        if (data['billing_country_code'] && !(typeof data['billing_country_code'] === 'string' || data['billing_country_code'] instanceof String)) {
            throw new Error("Expected the field `billing_country_code` to be a primitive type in the JSON string but got " + data['billing_country_code']);
        }
        // ensure the json data is a string
        if (data['billing_state'] && !(typeof data['billing_state'] === 'string' || data['billing_state'] instanceof String)) {
            throw new Error("Expected the field `billing_state` to be a primitive type in the JSON string but got " + data['billing_state']);
        }
        // ensure the json data is a string
        if (data['billing_zip'] && !(typeof data['billing_zip'] === 'string' || data['billing_zip'] instanceof String)) {
            throw new Error("Expected the field `billing_zip` to be a primitive type in the JSON string but got " + data['billing_zip']);
        }
        // ensure the json data is a string
        if (data['billing_zip4'] && !(typeof data['billing_zip4'] === 'string' || data['billing_zip4'] instanceof String)) {
            throw new Error("Expected the field `billing_zip4` to be a primitive type in the JSON string but got " + data['billing_zip4']);
        }
        // ensure the json data is a string
        if (data['customer_email'] && !(typeof data['customer_email'] === 'string' || data['customer_email'] instanceof String)) {
            throw new Error("Expected the field `customer_email` to be a primitive type in the JSON string but got " + data['customer_email']);
        }
        // ensure the json data is a string
        if (data['customer_firm_name'] && !(typeof data['customer_firm_name'] === 'string' || data['customer_firm_name'] instanceof String)) {
            throw new Error("Expected the field `customer_firm_name` to be a primitive type in the JSON string but got " + data['customer_firm_name']);
        }
        // ensure the json data is a string
        if (data['customer_first_name'] && !(typeof data['customer_first_name'] === 'string' || data['customer_first_name'] instanceof String)) {
            throw new Error("Expected the field `customer_first_name` to be a primitive type in the JSON string but got " + data['customer_first_name']);
        }
        // ensure the json data is a string
        if (data['customer_last_name'] && !(typeof data['customer_last_name'] === 'string' || data['customer_last_name'] instanceof String)) {
            throw new Error("Expected the field `customer_last_name` to be a primitive type in the JSON string but got " + data['customer_last_name']);
        }
        // ensure the json data is a string
        if (data['customer_phone'] && !(typeof data['customer_phone'] === 'string' || data['customer_phone'] instanceof String)) {
            throw new Error("Expected the field `customer_phone` to be a primitive type in the JSON string but got " + data['customer_phone']);
        }
        if (data['shipping_addresses']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['shipping_addresses'])) {
                throw new Error("Expected the field `shipping_addresses` to be an array in the JSON data but got " + data['shipping_addresses']);
            }
            // validate the optional field `shipping_addresses` (array)
            for (const item of data['shipping_addresses']) {
                ShippingAddress.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * <strong>Format: </strong>Variable length<br><strong>Description: </strong>Customer billing address street.
 * @member {String} billing_addr1
 */
Customer.prototype['billing_addr1'] = undefined;

/**
 * <strong>Format: </strong>Variable length<br><strong>Description: </strong>Customer billing address, line 2.
 * @member {String} billing_addr2
 */
Customer.prototype['billing_addr2'] = undefined;

/**
 * <strong>Format: </strong>Variable length<br><strong>Description: </strong>Customer billing city.
 * @member {String} billing_city
 */
Customer.prototype['billing_city'] = undefined;

/**
 * <strong>Format: </strong>Variable length<br><strong>Description: </strong>Customer billing country.
 * @member {String} billing_country
 */
Customer.prototype['billing_country'] = undefined;

/**
 * <strong>Format: </strong>Fixed length, 3 N<br><strong>Description: </strong>ISO numeric country code for the billing address. Refer to <a href=\"/developer/api/reference#country-codes\"target=\"_blank\">Country Codes</a> for a list of country codes.
 * @member {String} billing_country_code
 */
Customer.prototype['billing_country_code'] = undefined;

/**
 * <strong>Format: </strong>Variable length<br><strong>Description: </strong>Customer billing state (abbreviated).
 * @member {String} billing_state
 */
Customer.prototype['billing_state'] = undefined;

/**
 * <strong>Format: </strong>Variable length<br><strong>Description: </strong>Customer billing zip code.
 * @member {String} billing_zip
 */
Customer.prototype['billing_zip'] = undefined;

/**
 * <strong>Format: </strong>Fixed length, 4 N<br><strong>Description: </strong>Customer billing zip+4 code if applicable.
 * @member {String} billing_zip4
 */
Customer.prototype['billing_zip4'] = undefined;

/**
 * <strong>Format: </strong>Variable length, up to 64 AN<br><strong>Description: </strong>Customer e-mail address.
 * @member {String} customer_email
 */
Customer.prototype['customer_email'] = undefined;

/**
 * <strong>Format: </strong>Variable length, up to 64 AN<br><strong>Description: </strong>Customer Business name if applicable.<br><strong>Conditional Requirement: </strong>Either customer first and last name or firm name is required. 
 * @member {String} customer_firm_name
 */
Customer.prototype['customer_firm_name'] = undefined;

/**
 * <strong>Format: </strong>Variable length, up to 32 AN<br><strong>Description: </strong>Customer first name.<br><strong>Conditional Requirement: </strong>Either customer first and last name or firm name is required. 
 * @member {String} customer_first_name
 */
Customer.prototype['customer_first_name'] = undefined;

/**
 * <strong>Format: </strong>Variable length, up to 32 AN<br><strong>Description: </strong>Customer last name.<br><strong>Conditional Requirement: </strong>Either customer first and last name or firm name is required. 
 * @member {String} customer_last_name
 */
Customer.prototype['customer_last_name'] = undefined;

/**
 * <strong>Format: </strong>Variable length, up to 16 N<br><strong>Description: </strong>Customer phone number.
 * @member {String} customer_phone
 */
Customer.prototype['customer_phone'] = undefined;

/**
 * List of shipping addresses for customer.
 * @member {Array.<module:model/ShippingAddress>} shipping_addresses
 */
Customer.prototype['shipping_addresses'] = undefined;






export default Customer;

