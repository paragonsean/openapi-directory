/*
 * Qualpay Payment Gateway API
 * This document describes the Qualpay Payment Gateway API.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ShippingAddress;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Customer
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:30:08.449119-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Customer {
  public static final String SERIALIZED_NAME_BILLING_ADDR1 = "billing_addr1";
  @SerializedName(SERIALIZED_NAME_BILLING_ADDR1)
  private String billingAddr1;

  public static final String SERIALIZED_NAME_BILLING_ADDR2 = "billing_addr2";
  @SerializedName(SERIALIZED_NAME_BILLING_ADDR2)
  private String billingAddr2;

  public static final String SERIALIZED_NAME_BILLING_CITY = "billing_city";
  @SerializedName(SERIALIZED_NAME_BILLING_CITY)
  private String billingCity;

  public static final String SERIALIZED_NAME_BILLING_COUNTRY = "billing_country";
  @SerializedName(SERIALIZED_NAME_BILLING_COUNTRY)
  private String billingCountry;

  public static final String SERIALIZED_NAME_BILLING_COUNTRY_CODE = "billing_country_code";
  @SerializedName(SERIALIZED_NAME_BILLING_COUNTRY_CODE)
  private String billingCountryCode;

  public static final String SERIALIZED_NAME_BILLING_STATE = "billing_state";
  @SerializedName(SERIALIZED_NAME_BILLING_STATE)
  private String billingState;

  public static final String SERIALIZED_NAME_BILLING_ZIP = "billing_zip";
  @SerializedName(SERIALIZED_NAME_BILLING_ZIP)
  private String billingZip;

  public static final String SERIALIZED_NAME_BILLING_ZIP4 = "billing_zip4";
  @SerializedName(SERIALIZED_NAME_BILLING_ZIP4)
  private String billingZip4;

  public static final String SERIALIZED_NAME_CUSTOMER_EMAIL = "customer_email";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_EMAIL)
  private String customerEmail;

  public static final String SERIALIZED_NAME_CUSTOMER_FIRM_NAME = "customer_firm_name";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_FIRM_NAME)
  private String customerFirmName;

  public static final String SERIALIZED_NAME_CUSTOMER_FIRST_NAME = "customer_first_name";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_FIRST_NAME)
  private String customerFirstName;

  public static final String SERIALIZED_NAME_CUSTOMER_LAST_NAME = "customer_last_name";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_LAST_NAME)
  private String customerLastName;

  public static final String SERIALIZED_NAME_CUSTOMER_PHONE = "customer_phone";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_PHONE)
  private String customerPhone;

  public static final String SERIALIZED_NAME_SHIPPING_ADDRESSES = "shipping_addresses";
  @SerializedName(SERIALIZED_NAME_SHIPPING_ADDRESSES)
  private List<ShippingAddress> shippingAddresses = new ArrayList<>();

  public Customer() {
  }

  public Customer billingAddr1(String billingAddr1) {
    this.billingAddr1 = billingAddr1;
    return this;
  }

  /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;Customer billing address street.
   * @return billingAddr1
   */
  @javax.annotation.Nullable
  public String getBillingAddr1() {
    return billingAddr1;
  }

  public void setBillingAddr1(String billingAddr1) {
    this.billingAddr1 = billingAddr1;
  }


  public Customer billingAddr2(String billingAddr2) {
    this.billingAddr2 = billingAddr2;
    return this;
  }

  /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;Customer billing address, line 2.
   * @return billingAddr2
   */
  @javax.annotation.Nullable
  public String getBillingAddr2() {
    return billingAddr2;
  }

  public void setBillingAddr2(String billingAddr2) {
    this.billingAddr2 = billingAddr2;
  }


  public Customer billingCity(String billingCity) {
    this.billingCity = billingCity;
    return this;
  }

  /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;Customer billing city.
   * @return billingCity
   */
  @javax.annotation.Nullable
  public String getBillingCity() {
    return billingCity;
  }

  public void setBillingCity(String billingCity) {
    this.billingCity = billingCity;
  }


  public Customer billingCountry(String billingCountry) {
    this.billingCountry = billingCountry;
    return this;
  }

  /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;Customer billing country.
   * @return billingCountry
   */
  @javax.annotation.Nullable
  public String getBillingCountry() {
    return billingCountry;
  }

  public void setBillingCountry(String billingCountry) {
    this.billingCountry = billingCountry;
  }


  public Customer billingCountryCode(String billingCountryCode) {
    this.billingCountryCode = billingCountryCode;
    return this;
  }

  /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Fixed length, 3 N&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;ISO numeric country code for the billing address. Refer to &lt;a href&#x3D;\&quot;/developer/api/reference#country-codes\&quot;target&#x3D;\&quot;_blank\&quot;&gt;Country Codes&lt;/a&gt; for a list of country codes.
   * @return billingCountryCode
   */
  @javax.annotation.Nullable
  public String getBillingCountryCode() {
    return billingCountryCode;
  }

  public void setBillingCountryCode(String billingCountryCode) {
    this.billingCountryCode = billingCountryCode;
  }


  public Customer billingState(String billingState) {
    this.billingState = billingState;
    return this;
  }

  /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;Customer billing state (abbreviated).
   * @return billingState
   */
  @javax.annotation.Nullable
  public String getBillingState() {
    return billingState;
  }

  public void setBillingState(String billingState) {
    this.billingState = billingState;
  }


  public Customer billingZip(String billingZip) {
    this.billingZip = billingZip;
    return this;
  }

  /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;Customer billing zip code.
   * @return billingZip
   */
  @javax.annotation.Nullable
  public String getBillingZip() {
    return billingZip;
  }

  public void setBillingZip(String billingZip) {
    this.billingZip = billingZip;
  }


  public Customer billingZip4(String billingZip4) {
    this.billingZip4 = billingZip4;
    return this;
  }

  /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Fixed length, 4 N&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;Customer billing zip+4 code if applicable.
   * @return billingZip4
   */
  @javax.annotation.Nullable
  public String getBillingZip4() {
    return billingZip4;
  }

  public void setBillingZip4(String billingZip4) {
    this.billingZip4 = billingZip4;
  }


  public Customer customerEmail(String customerEmail) {
    this.customerEmail = customerEmail;
    return this;
  }

  /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 64 AN&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;Customer e-mail address.
   * @return customerEmail
   */
  @javax.annotation.Nullable
  public String getCustomerEmail() {
    return customerEmail;
  }

  public void setCustomerEmail(String customerEmail) {
    this.customerEmail = customerEmail;
  }


  public Customer customerFirmName(String customerFirmName) {
    this.customerFirmName = customerFirmName;
    return this;
  }

  /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 64 AN&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;Customer Business name if applicable.&lt;br&gt;&lt;strong&gt;Conditional Requirement: &lt;/strong&gt;Either customer first and last name or firm name is required. 
   * @return customerFirmName
   */
  @javax.annotation.Nullable
  public String getCustomerFirmName() {
    return customerFirmName;
  }

  public void setCustomerFirmName(String customerFirmName) {
    this.customerFirmName = customerFirmName;
  }


  public Customer customerFirstName(String customerFirstName) {
    this.customerFirstName = customerFirstName;
    return this;
  }

  /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 32 AN&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;Customer first name.&lt;br&gt;&lt;strong&gt;Conditional Requirement: &lt;/strong&gt;Either customer first and last name or firm name is required. 
   * @return customerFirstName
   */
  @javax.annotation.Nullable
  public String getCustomerFirstName() {
    return customerFirstName;
  }

  public void setCustomerFirstName(String customerFirstName) {
    this.customerFirstName = customerFirstName;
  }


  public Customer customerLastName(String customerLastName) {
    this.customerLastName = customerLastName;
    return this;
  }

  /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 32 AN&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;Customer last name.&lt;br&gt;&lt;strong&gt;Conditional Requirement: &lt;/strong&gt;Either customer first and last name or firm name is required. 
   * @return customerLastName
   */
  @javax.annotation.Nullable
  public String getCustomerLastName() {
    return customerLastName;
  }

  public void setCustomerLastName(String customerLastName) {
    this.customerLastName = customerLastName;
  }


  public Customer customerPhone(String customerPhone) {
    this.customerPhone = customerPhone;
    return this;
  }

  /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 16 N&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;Customer phone number.
   * @return customerPhone
   */
  @javax.annotation.Nullable
  public String getCustomerPhone() {
    return customerPhone;
  }

  public void setCustomerPhone(String customerPhone) {
    this.customerPhone = customerPhone;
  }


  public Customer shippingAddresses(List<ShippingAddress> shippingAddresses) {
    this.shippingAddresses = shippingAddresses;
    return this;
  }

  public Customer addShippingAddressesItem(ShippingAddress shippingAddressesItem) {
    if (this.shippingAddresses == null) {
      this.shippingAddresses = new ArrayList<>();
    }
    this.shippingAddresses.add(shippingAddressesItem);
    return this;
  }

  /**
   * List of shipping addresses for customer.
   * @return shippingAddresses
   */
  @javax.annotation.Nullable
  public List<ShippingAddress> getShippingAddresses() {
    return shippingAddresses;
  }

  public void setShippingAddresses(List<ShippingAddress> shippingAddresses) {
    this.shippingAddresses = shippingAddresses;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Customer customer = (Customer) o;
    return Objects.equals(this.billingAddr1, customer.billingAddr1) &&
        Objects.equals(this.billingAddr2, customer.billingAddr2) &&
        Objects.equals(this.billingCity, customer.billingCity) &&
        Objects.equals(this.billingCountry, customer.billingCountry) &&
        Objects.equals(this.billingCountryCode, customer.billingCountryCode) &&
        Objects.equals(this.billingState, customer.billingState) &&
        Objects.equals(this.billingZip, customer.billingZip) &&
        Objects.equals(this.billingZip4, customer.billingZip4) &&
        Objects.equals(this.customerEmail, customer.customerEmail) &&
        Objects.equals(this.customerFirmName, customer.customerFirmName) &&
        Objects.equals(this.customerFirstName, customer.customerFirstName) &&
        Objects.equals(this.customerLastName, customer.customerLastName) &&
        Objects.equals(this.customerPhone, customer.customerPhone) &&
        Objects.equals(this.shippingAddresses, customer.shippingAddresses);
  }

  @Override
  public int hashCode() {
    return Objects.hash(billingAddr1, billingAddr2, billingCity, billingCountry, billingCountryCode, billingState, billingZip, billingZip4, customerEmail, customerFirmName, customerFirstName, customerLastName, customerPhone, shippingAddresses);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Customer {\n");
    sb.append("    billingAddr1: ").append(toIndentedString(billingAddr1)).append("\n");
    sb.append("    billingAddr2: ").append(toIndentedString(billingAddr2)).append("\n");
    sb.append("    billingCity: ").append(toIndentedString(billingCity)).append("\n");
    sb.append("    billingCountry: ").append(toIndentedString(billingCountry)).append("\n");
    sb.append("    billingCountryCode: ").append(toIndentedString(billingCountryCode)).append("\n");
    sb.append("    billingState: ").append(toIndentedString(billingState)).append("\n");
    sb.append("    billingZip: ").append(toIndentedString(billingZip)).append("\n");
    sb.append("    billingZip4: ").append(toIndentedString(billingZip4)).append("\n");
    sb.append("    customerEmail: ").append(toIndentedString(customerEmail)).append("\n");
    sb.append("    customerFirmName: ").append(toIndentedString(customerFirmName)).append("\n");
    sb.append("    customerFirstName: ").append(toIndentedString(customerFirstName)).append("\n");
    sb.append("    customerLastName: ").append(toIndentedString(customerLastName)).append("\n");
    sb.append("    customerPhone: ").append(toIndentedString(customerPhone)).append("\n");
    sb.append("    shippingAddresses: ").append(toIndentedString(shippingAddresses)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("billing_addr1");
    openapiFields.add("billing_addr2");
    openapiFields.add("billing_city");
    openapiFields.add("billing_country");
    openapiFields.add("billing_country_code");
    openapiFields.add("billing_state");
    openapiFields.add("billing_zip");
    openapiFields.add("billing_zip4");
    openapiFields.add("customer_email");
    openapiFields.add("customer_firm_name");
    openapiFields.add("customer_first_name");
    openapiFields.add("customer_last_name");
    openapiFields.add("customer_phone");
    openapiFields.add("shipping_addresses");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Customer
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Customer.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Customer is not found in the empty JSON string", Customer.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Customer.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Customer` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("billing_addr1") != null && !jsonObj.get("billing_addr1").isJsonNull()) && !jsonObj.get("billing_addr1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billing_addr1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billing_addr1").toString()));
      }
      if ((jsonObj.get("billing_addr2") != null && !jsonObj.get("billing_addr2").isJsonNull()) && !jsonObj.get("billing_addr2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billing_addr2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billing_addr2").toString()));
      }
      if ((jsonObj.get("billing_city") != null && !jsonObj.get("billing_city").isJsonNull()) && !jsonObj.get("billing_city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billing_city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billing_city").toString()));
      }
      if ((jsonObj.get("billing_country") != null && !jsonObj.get("billing_country").isJsonNull()) && !jsonObj.get("billing_country").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billing_country` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billing_country").toString()));
      }
      if ((jsonObj.get("billing_country_code") != null && !jsonObj.get("billing_country_code").isJsonNull()) && !jsonObj.get("billing_country_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billing_country_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billing_country_code").toString()));
      }
      if ((jsonObj.get("billing_state") != null && !jsonObj.get("billing_state").isJsonNull()) && !jsonObj.get("billing_state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billing_state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billing_state").toString()));
      }
      if ((jsonObj.get("billing_zip") != null && !jsonObj.get("billing_zip").isJsonNull()) && !jsonObj.get("billing_zip").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billing_zip` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billing_zip").toString()));
      }
      if ((jsonObj.get("billing_zip4") != null && !jsonObj.get("billing_zip4").isJsonNull()) && !jsonObj.get("billing_zip4").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billing_zip4` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billing_zip4").toString()));
      }
      if ((jsonObj.get("customer_email") != null && !jsonObj.get("customer_email").isJsonNull()) && !jsonObj.get("customer_email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customer_email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customer_email").toString()));
      }
      if ((jsonObj.get("customer_firm_name") != null && !jsonObj.get("customer_firm_name").isJsonNull()) && !jsonObj.get("customer_firm_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customer_firm_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customer_firm_name").toString()));
      }
      if ((jsonObj.get("customer_first_name") != null && !jsonObj.get("customer_first_name").isJsonNull()) && !jsonObj.get("customer_first_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customer_first_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customer_first_name").toString()));
      }
      if ((jsonObj.get("customer_last_name") != null && !jsonObj.get("customer_last_name").isJsonNull()) && !jsonObj.get("customer_last_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customer_last_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customer_last_name").toString()));
      }
      if ((jsonObj.get("customer_phone") != null && !jsonObj.get("customer_phone").isJsonNull()) && !jsonObj.get("customer_phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customer_phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customer_phone").toString()));
      }
      if (jsonObj.get("shipping_addresses") != null && !jsonObj.get("shipping_addresses").isJsonNull()) {
        JsonArray jsonArrayshippingAddresses = jsonObj.getAsJsonArray("shipping_addresses");
        if (jsonArrayshippingAddresses != null) {
          // ensure the json data is an array
          if (!jsonObj.get("shipping_addresses").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `shipping_addresses` to be an array in the JSON string but got `%s`", jsonObj.get("shipping_addresses").toString()));
          }

          // validate the optional field `shipping_addresses` (array)
          for (int i = 0; i < jsonArrayshippingAddresses.size(); i++) {
            ShippingAddress.validateJsonElement(jsonArrayshippingAddresses.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Customer.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Customer' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Customer> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Customer.class));

       return (TypeAdapter<T>) new TypeAdapter<Customer>() {
           @Override
           public void write(JsonWriter out, Customer value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Customer read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Customer given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Customer
   * @throws IOException if the JSON string is invalid with respect to Customer
   */
  public static Customer fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Customer.class);
  }

  /**
   * Convert an instance of Customer to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

