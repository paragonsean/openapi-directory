/*
 * Qualpay Payment Gateway API
 * This document describes the Qualpay Payment Gateway API.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PGApiEmailReceiptRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:30:08.449119-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PGApiEmailReceiptRequest {
  public static final String SERIALIZED_NAME_DEVELOPER_ID = "developer_id";
  @SerializedName(SERIALIZED_NAME_DEVELOPER_ID)
  private String developerId;

  public static final String SERIALIZED_NAME_EMAIL_ADDRESS = "email_address";
  @SerializedName(SERIALIZED_NAME_EMAIL_ADDRESS)
  private List<String> emailAddress = new ArrayList<>();

  public static final String SERIALIZED_NAME_LOGO_URL = "logo_url";
  @SerializedName(SERIALIZED_NAME_LOGO_URL)
  private String logoUrl;

  public static final String SERIALIZED_NAME_MERCHANT_ID = "merchant_id";
  @SerializedName(SERIALIZED_NAME_MERCHANT_ID)
  private Long merchantId;

  public static final String SERIALIZED_NAME_VENDOR_ID = "vendor_id";
  @SerializedName(SERIALIZED_NAME_VENDOR_ID)
  private Long vendorId;

  public PGApiEmailReceiptRequest() {
  }

  public PGApiEmailReceiptRequest developerId(String developerId) {
    this.developerId = developerId;
    return this;
  }

  /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 32 AN&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;Use to indicate which company developed the integration to Qualpay or the name of the payment solution that is connected to Qualpay.  Suggested usage is softwareABCv1.0 or companyXYZv2.0. 
   * @return developerId
   */
  @javax.annotation.Nullable
  public String getDeveloperId() {
    return developerId;
  }

  public void setDeveloperId(String developerId) {
    this.developerId = developerId;
  }


  public PGApiEmailReceiptRequest emailAddress(List<String> emailAddress) {
    this.emailAddress = emailAddress;
    return this;
  }

  public PGApiEmailReceiptRequest addEmailAddressItem(String emailAddressItem) {
    if (this.emailAddress == null) {
      this.emailAddress = new ArrayList<>();
    }
    this.emailAddress.add(emailAddressItem);
    return this;
  }

  /**
   *  AN&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;An array of email addresses to which the transaction receipt should be sent to. 
   * @return emailAddress
   */
  @javax.annotation.Nonnull
  public List<String> getEmailAddress() {
    return emailAddress;
  }

  public void setEmailAddress(List<String> emailAddress) {
    this.emailAddress = emailAddress;
  }


  public PGApiEmailReceiptRequest logoUrl(String logoUrl) {
    this.logoUrl = logoUrl;
    return this;
  }

  /**
   *  AN&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;A link to the logo image that will be included in the transaction receipt. 
   * @return logoUrl
   */
  @javax.annotation.Nullable
  public String getLogoUrl() {
    return logoUrl;
  }

  public void setLogoUrl(String logoUrl) {
    this.logoUrl = logoUrl;
  }


  public PGApiEmailReceiptRequest merchantId(Long merchantId) {
    this.merchantId = merchantId;
    return this;
  }

  /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 12 N&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;Unique identifier on the Qualpay system.
   * @return merchantId
   */
  @javax.annotation.Nonnull
  public Long getMerchantId() {
    return merchantId;
  }

  public void setMerchantId(Long merchantId) {
    this.merchantId = merchantId;
  }


  public PGApiEmailReceiptRequest vendorId(Long vendorId) {
    this.vendorId = vendorId;
    return this;
  }

  /**
   * &lt;strong&gt;Format: &lt;/strong&gt;Variable length, up to 12 N&lt;br&gt;&lt;strong&gt;Description: &lt;/strong&gt;Identifies the vendor to which this email receipt request applies.
   * @return vendorId
   */
  @javax.annotation.Nullable
  public Long getVendorId() {
    return vendorId;
  }

  public void setVendorId(Long vendorId) {
    this.vendorId = vendorId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PGApiEmailReceiptRequest pgApiEmailReceiptRequest = (PGApiEmailReceiptRequest) o;
    return Objects.equals(this.developerId, pgApiEmailReceiptRequest.developerId) &&
        Objects.equals(this.emailAddress, pgApiEmailReceiptRequest.emailAddress) &&
        Objects.equals(this.logoUrl, pgApiEmailReceiptRequest.logoUrl) &&
        Objects.equals(this.merchantId, pgApiEmailReceiptRequest.merchantId) &&
        Objects.equals(this.vendorId, pgApiEmailReceiptRequest.vendorId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(developerId, emailAddress, logoUrl, merchantId, vendorId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PGApiEmailReceiptRequest {\n");
    sb.append("    developerId: ").append(toIndentedString(developerId)).append("\n");
    sb.append("    emailAddress: ").append(toIndentedString(emailAddress)).append("\n");
    sb.append("    logoUrl: ").append(toIndentedString(logoUrl)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    vendorId: ").append(toIndentedString(vendorId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("developer_id");
    openapiFields.add("email_address");
    openapiFields.add("logo_url");
    openapiFields.add("merchant_id");
    openapiFields.add("vendor_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("email_address");
    openapiRequiredFields.add("merchant_id");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PGApiEmailReceiptRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PGApiEmailReceiptRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PGApiEmailReceiptRequest is not found in the empty JSON string", PGApiEmailReceiptRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PGApiEmailReceiptRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PGApiEmailReceiptRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : PGApiEmailReceiptRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("developer_id") != null && !jsonObj.get("developer_id").isJsonNull()) && !jsonObj.get("developer_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `developer_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("developer_id").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("email_address") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("email_address").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `email_address` to be an array in the JSON string but got `%s`", jsonObj.get("email_address").toString()));
      }
      if ((jsonObj.get("logo_url") != null && !jsonObj.get("logo_url").isJsonNull()) && !jsonObj.get("logo_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logo_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logo_url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PGApiEmailReceiptRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PGApiEmailReceiptRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PGApiEmailReceiptRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PGApiEmailReceiptRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<PGApiEmailReceiptRequest>() {
           @Override
           public void write(JsonWriter out, PGApiEmailReceiptRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PGApiEmailReceiptRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PGApiEmailReceiptRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PGApiEmailReceiptRequest
   * @throws IOException if the JSON string is invalid with respect to PGApiEmailReceiptRequest
   */
  public static PGApiEmailReceiptRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PGApiEmailReceiptRequest.class);
  }

  /**
   * Convert an instance of PGApiEmailReceiptRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

