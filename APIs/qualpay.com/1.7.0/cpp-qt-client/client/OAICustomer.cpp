/**
 * Qualpay Payment Gateway API
 * This document describes the Qualpay Payment Gateway API.
 *
 * The version of the OpenAPI document: 1.7.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustomer.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustomer::OAICustomer(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustomer::OAICustomer() {
    this->initializeModel();
}

OAICustomer::~OAICustomer() {}

void OAICustomer::initializeModel() {

    m_billing_addr1_isSet = false;
    m_billing_addr1_isValid = false;

    m_billing_addr2_isSet = false;
    m_billing_addr2_isValid = false;

    m_billing_city_isSet = false;
    m_billing_city_isValid = false;

    m_billing_country_isSet = false;
    m_billing_country_isValid = false;

    m_billing_country_code_isSet = false;
    m_billing_country_code_isValid = false;

    m_billing_state_isSet = false;
    m_billing_state_isValid = false;

    m_billing_zip_isSet = false;
    m_billing_zip_isValid = false;

    m_billing_zip4_isSet = false;
    m_billing_zip4_isValid = false;

    m_customer_email_isSet = false;
    m_customer_email_isValid = false;

    m_customer_firm_name_isSet = false;
    m_customer_firm_name_isValid = false;

    m_customer_first_name_isSet = false;
    m_customer_first_name_isValid = false;

    m_customer_last_name_isSet = false;
    m_customer_last_name_isValid = false;

    m_customer_phone_isSet = false;
    m_customer_phone_isValid = false;

    m_shipping_addresses_isSet = false;
    m_shipping_addresses_isValid = false;
}

void OAICustomer::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustomer::fromJsonObject(QJsonObject json) {

    m_billing_addr1_isValid = ::OpenAPI::fromJsonValue(m_billing_addr1, json[QString("billing_addr1")]);
    m_billing_addr1_isSet = !json[QString("billing_addr1")].isNull() && m_billing_addr1_isValid;

    m_billing_addr2_isValid = ::OpenAPI::fromJsonValue(m_billing_addr2, json[QString("billing_addr2")]);
    m_billing_addr2_isSet = !json[QString("billing_addr2")].isNull() && m_billing_addr2_isValid;

    m_billing_city_isValid = ::OpenAPI::fromJsonValue(m_billing_city, json[QString("billing_city")]);
    m_billing_city_isSet = !json[QString("billing_city")].isNull() && m_billing_city_isValid;

    m_billing_country_isValid = ::OpenAPI::fromJsonValue(m_billing_country, json[QString("billing_country")]);
    m_billing_country_isSet = !json[QString("billing_country")].isNull() && m_billing_country_isValid;

    m_billing_country_code_isValid = ::OpenAPI::fromJsonValue(m_billing_country_code, json[QString("billing_country_code")]);
    m_billing_country_code_isSet = !json[QString("billing_country_code")].isNull() && m_billing_country_code_isValid;

    m_billing_state_isValid = ::OpenAPI::fromJsonValue(m_billing_state, json[QString("billing_state")]);
    m_billing_state_isSet = !json[QString("billing_state")].isNull() && m_billing_state_isValid;

    m_billing_zip_isValid = ::OpenAPI::fromJsonValue(m_billing_zip, json[QString("billing_zip")]);
    m_billing_zip_isSet = !json[QString("billing_zip")].isNull() && m_billing_zip_isValid;

    m_billing_zip4_isValid = ::OpenAPI::fromJsonValue(m_billing_zip4, json[QString("billing_zip4")]);
    m_billing_zip4_isSet = !json[QString("billing_zip4")].isNull() && m_billing_zip4_isValid;

    m_customer_email_isValid = ::OpenAPI::fromJsonValue(m_customer_email, json[QString("customer_email")]);
    m_customer_email_isSet = !json[QString("customer_email")].isNull() && m_customer_email_isValid;

    m_customer_firm_name_isValid = ::OpenAPI::fromJsonValue(m_customer_firm_name, json[QString("customer_firm_name")]);
    m_customer_firm_name_isSet = !json[QString("customer_firm_name")].isNull() && m_customer_firm_name_isValid;

    m_customer_first_name_isValid = ::OpenAPI::fromJsonValue(m_customer_first_name, json[QString("customer_first_name")]);
    m_customer_first_name_isSet = !json[QString("customer_first_name")].isNull() && m_customer_first_name_isValid;

    m_customer_last_name_isValid = ::OpenAPI::fromJsonValue(m_customer_last_name, json[QString("customer_last_name")]);
    m_customer_last_name_isSet = !json[QString("customer_last_name")].isNull() && m_customer_last_name_isValid;

    m_customer_phone_isValid = ::OpenAPI::fromJsonValue(m_customer_phone, json[QString("customer_phone")]);
    m_customer_phone_isSet = !json[QString("customer_phone")].isNull() && m_customer_phone_isValid;

    m_shipping_addresses_isValid = ::OpenAPI::fromJsonValue(m_shipping_addresses, json[QString("shipping_addresses")]);
    m_shipping_addresses_isSet = !json[QString("shipping_addresses")].isNull() && m_shipping_addresses_isValid;
}

QString OAICustomer::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustomer::asJsonObject() const {
    QJsonObject obj;
    if (m_billing_addr1_isSet) {
        obj.insert(QString("billing_addr1"), ::OpenAPI::toJsonValue(m_billing_addr1));
    }
    if (m_billing_addr2_isSet) {
        obj.insert(QString("billing_addr2"), ::OpenAPI::toJsonValue(m_billing_addr2));
    }
    if (m_billing_city_isSet) {
        obj.insert(QString("billing_city"), ::OpenAPI::toJsonValue(m_billing_city));
    }
    if (m_billing_country_isSet) {
        obj.insert(QString("billing_country"), ::OpenAPI::toJsonValue(m_billing_country));
    }
    if (m_billing_country_code_isSet) {
        obj.insert(QString("billing_country_code"), ::OpenAPI::toJsonValue(m_billing_country_code));
    }
    if (m_billing_state_isSet) {
        obj.insert(QString("billing_state"), ::OpenAPI::toJsonValue(m_billing_state));
    }
    if (m_billing_zip_isSet) {
        obj.insert(QString("billing_zip"), ::OpenAPI::toJsonValue(m_billing_zip));
    }
    if (m_billing_zip4_isSet) {
        obj.insert(QString("billing_zip4"), ::OpenAPI::toJsonValue(m_billing_zip4));
    }
    if (m_customer_email_isSet) {
        obj.insert(QString("customer_email"), ::OpenAPI::toJsonValue(m_customer_email));
    }
    if (m_customer_firm_name_isSet) {
        obj.insert(QString("customer_firm_name"), ::OpenAPI::toJsonValue(m_customer_firm_name));
    }
    if (m_customer_first_name_isSet) {
        obj.insert(QString("customer_first_name"), ::OpenAPI::toJsonValue(m_customer_first_name));
    }
    if (m_customer_last_name_isSet) {
        obj.insert(QString("customer_last_name"), ::OpenAPI::toJsonValue(m_customer_last_name));
    }
    if (m_customer_phone_isSet) {
        obj.insert(QString("customer_phone"), ::OpenAPI::toJsonValue(m_customer_phone));
    }
    if (m_shipping_addresses.size() > 0) {
        obj.insert(QString("shipping_addresses"), ::OpenAPI::toJsonValue(m_shipping_addresses));
    }
    return obj;
}

QString OAICustomer::getBillingAddr1() const {
    return m_billing_addr1;
}
void OAICustomer::setBillingAddr1(const QString &billing_addr1) {
    m_billing_addr1 = billing_addr1;
    m_billing_addr1_isSet = true;
}

bool OAICustomer::is_billing_addr1_Set() const{
    return m_billing_addr1_isSet;
}

bool OAICustomer::is_billing_addr1_Valid() const{
    return m_billing_addr1_isValid;
}

QString OAICustomer::getBillingAddr2() const {
    return m_billing_addr2;
}
void OAICustomer::setBillingAddr2(const QString &billing_addr2) {
    m_billing_addr2 = billing_addr2;
    m_billing_addr2_isSet = true;
}

bool OAICustomer::is_billing_addr2_Set() const{
    return m_billing_addr2_isSet;
}

bool OAICustomer::is_billing_addr2_Valid() const{
    return m_billing_addr2_isValid;
}

QString OAICustomer::getBillingCity() const {
    return m_billing_city;
}
void OAICustomer::setBillingCity(const QString &billing_city) {
    m_billing_city = billing_city;
    m_billing_city_isSet = true;
}

bool OAICustomer::is_billing_city_Set() const{
    return m_billing_city_isSet;
}

bool OAICustomer::is_billing_city_Valid() const{
    return m_billing_city_isValid;
}

QString OAICustomer::getBillingCountry() const {
    return m_billing_country;
}
void OAICustomer::setBillingCountry(const QString &billing_country) {
    m_billing_country = billing_country;
    m_billing_country_isSet = true;
}

bool OAICustomer::is_billing_country_Set() const{
    return m_billing_country_isSet;
}

bool OAICustomer::is_billing_country_Valid() const{
    return m_billing_country_isValid;
}

QString OAICustomer::getBillingCountryCode() const {
    return m_billing_country_code;
}
void OAICustomer::setBillingCountryCode(const QString &billing_country_code) {
    m_billing_country_code = billing_country_code;
    m_billing_country_code_isSet = true;
}

bool OAICustomer::is_billing_country_code_Set() const{
    return m_billing_country_code_isSet;
}

bool OAICustomer::is_billing_country_code_Valid() const{
    return m_billing_country_code_isValid;
}

QString OAICustomer::getBillingState() const {
    return m_billing_state;
}
void OAICustomer::setBillingState(const QString &billing_state) {
    m_billing_state = billing_state;
    m_billing_state_isSet = true;
}

bool OAICustomer::is_billing_state_Set() const{
    return m_billing_state_isSet;
}

bool OAICustomer::is_billing_state_Valid() const{
    return m_billing_state_isValid;
}

QString OAICustomer::getBillingZip() const {
    return m_billing_zip;
}
void OAICustomer::setBillingZip(const QString &billing_zip) {
    m_billing_zip = billing_zip;
    m_billing_zip_isSet = true;
}

bool OAICustomer::is_billing_zip_Set() const{
    return m_billing_zip_isSet;
}

bool OAICustomer::is_billing_zip_Valid() const{
    return m_billing_zip_isValid;
}

QString OAICustomer::getBillingZip4() const {
    return m_billing_zip4;
}
void OAICustomer::setBillingZip4(const QString &billing_zip4) {
    m_billing_zip4 = billing_zip4;
    m_billing_zip4_isSet = true;
}

bool OAICustomer::is_billing_zip4_Set() const{
    return m_billing_zip4_isSet;
}

bool OAICustomer::is_billing_zip4_Valid() const{
    return m_billing_zip4_isValid;
}

QString OAICustomer::getCustomerEmail() const {
    return m_customer_email;
}
void OAICustomer::setCustomerEmail(const QString &customer_email) {
    m_customer_email = customer_email;
    m_customer_email_isSet = true;
}

bool OAICustomer::is_customer_email_Set() const{
    return m_customer_email_isSet;
}

bool OAICustomer::is_customer_email_Valid() const{
    return m_customer_email_isValid;
}

QString OAICustomer::getCustomerFirmName() const {
    return m_customer_firm_name;
}
void OAICustomer::setCustomerFirmName(const QString &customer_firm_name) {
    m_customer_firm_name = customer_firm_name;
    m_customer_firm_name_isSet = true;
}

bool OAICustomer::is_customer_firm_name_Set() const{
    return m_customer_firm_name_isSet;
}

bool OAICustomer::is_customer_firm_name_Valid() const{
    return m_customer_firm_name_isValid;
}

QString OAICustomer::getCustomerFirstName() const {
    return m_customer_first_name;
}
void OAICustomer::setCustomerFirstName(const QString &customer_first_name) {
    m_customer_first_name = customer_first_name;
    m_customer_first_name_isSet = true;
}

bool OAICustomer::is_customer_first_name_Set() const{
    return m_customer_first_name_isSet;
}

bool OAICustomer::is_customer_first_name_Valid() const{
    return m_customer_first_name_isValid;
}

QString OAICustomer::getCustomerLastName() const {
    return m_customer_last_name;
}
void OAICustomer::setCustomerLastName(const QString &customer_last_name) {
    m_customer_last_name = customer_last_name;
    m_customer_last_name_isSet = true;
}

bool OAICustomer::is_customer_last_name_Set() const{
    return m_customer_last_name_isSet;
}

bool OAICustomer::is_customer_last_name_Valid() const{
    return m_customer_last_name_isValid;
}

QString OAICustomer::getCustomerPhone() const {
    return m_customer_phone;
}
void OAICustomer::setCustomerPhone(const QString &customer_phone) {
    m_customer_phone = customer_phone;
    m_customer_phone_isSet = true;
}

bool OAICustomer::is_customer_phone_Set() const{
    return m_customer_phone_isSet;
}

bool OAICustomer::is_customer_phone_Valid() const{
    return m_customer_phone_isValid;
}

QList<OAIShippingAddress> OAICustomer::getShippingAddresses() const {
    return m_shipping_addresses;
}
void OAICustomer::setShippingAddresses(const QList<OAIShippingAddress> &shipping_addresses) {
    m_shipping_addresses = shipping_addresses;
    m_shipping_addresses_isSet = true;
}

bool OAICustomer::is_shipping_addresses_Set() const{
    return m_shipping_addresses_isSet;
}

bool OAICustomer::is_shipping_addresses_Valid() const{
    return m_shipping_addresses_isValid;
}

bool OAICustomer::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_billing_addr1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_billing_addr2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_billing_city_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_billing_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_billing_country_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_billing_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_billing_zip_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_billing_zip4_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_firm_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_phone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_addresses.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustomer::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
