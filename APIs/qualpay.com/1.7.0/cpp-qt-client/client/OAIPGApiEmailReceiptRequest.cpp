/**
 * Qualpay Payment Gateway API
 * This document describes the Qualpay Payment Gateway API.
 *
 * The version of the OpenAPI document: 1.7.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPGApiEmailReceiptRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPGApiEmailReceiptRequest::OAIPGApiEmailReceiptRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPGApiEmailReceiptRequest::OAIPGApiEmailReceiptRequest() {
    this->initializeModel();
}

OAIPGApiEmailReceiptRequest::~OAIPGApiEmailReceiptRequest() {}

void OAIPGApiEmailReceiptRequest::initializeModel() {

    m_developer_id_isSet = false;
    m_developer_id_isValid = false;

    m_email_address_isSet = false;
    m_email_address_isValid = false;

    m_logo_url_isSet = false;
    m_logo_url_isValid = false;

    m_merchant_id_isSet = false;
    m_merchant_id_isValid = false;

    m_vendor_id_isSet = false;
    m_vendor_id_isValid = false;
}

void OAIPGApiEmailReceiptRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPGApiEmailReceiptRequest::fromJsonObject(QJsonObject json) {

    m_developer_id_isValid = ::OpenAPI::fromJsonValue(m_developer_id, json[QString("developer_id")]);
    m_developer_id_isSet = !json[QString("developer_id")].isNull() && m_developer_id_isValid;

    m_email_address_isValid = ::OpenAPI::fromJsonValue(m_email_address, json[QString("email_address")]);
    m_email_address_isSet = !json[QString("email_address")].isNull() && m_email_address_isValid;

    m_logo_url_isValid = ::OpenAPI::fromJsonValue(m_logo_url, json[QString("logo_url")]);
    m_logo_url_isSet = !json[QString("logo_url")].isNull() && m_logo_url_isValid;

    m_merchant_id_isValid = ::OpenAPI::fromJsonValue(m_merchant_id, json[QString("merchant_id")]);
    m_merchant_id_isSet = !json[QString("merchant_id")].isNull() && m_merchant_id_isValid;

    m_vendor_id_isValid = ::OpenAPI::fromJsonValue(m_vendor_id, json[QString("vendor_id")]);
    m_vendor_id_isSet = !json[QString("vendor_id")].isNull() && m_vendor_id_isValid;
}

QString OAIPGApiEmailReceiptRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPGApiEmailReceiptRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_developer_id_isSet) {
        obj.insert(QString("developer_id"), ::OpenAPI::toJsonValue(m_developer_id));
    }
    if (m_email_address.size() > 0) {
        obj.insert(QString("email_address"), ::OpenAPI::toJsonValue(m_email_address));
    }
    if (m_logo_url_isSet) {
        obj.insert(QString("logo_url"), ::OpenAPI::toJsonValue(m_logo_url));
    }
    if (m_merchant_id_isSet) {
        obj.insert(QString("merchant_id"), ::OpenAPI::toJsonValue(m_merchant_id));
    }
    if (m_vendor_id_isSet) {
        obj.insert(QString("vendor_id"), ::OpenAPI::toJsonValue(m_vendor_id));
    }
    return obj;
}

QString OAIPGApiEmailReceiptRequest::getDeveloperId() const {
    return m_developer_id;
}
void OAIPGApiEmailReceiptRequest::setDeveloperId(const QString &developer_id) {
    m_developer_id = developer_id;
    m_developer_id_isSet = true;
}

bool OAIPGApiEmailReceiptRequest::is_developer_id_Set() const{
    return m_developer_id_isSet;
}

bool OAIPGApiEmailReceiptRequest::is_developer_id_Valid() const{
    return m_developer_id_isValid;
}

QList<QString> OAIPGApiEmailReceiptRequest::getEmailAddress() const {
    return m_email_address;
}
void OAIPGApiEmailReceiptRequest::setEmailAddress(const QList<QString> &email_address) {
    m_email_address = email_address;
    m_email_address_isSet = true;
}

bool OAIPGApiEmailReceiptRequest::is_email_address_Set() const{
    return m_email_address_isSet;
}

bool OAIPGApiEmailReceiptRequest::is_email_address_Valid() const{
    return m_email_address_isValid;
}

QString OAIPGApiEmailReceiptRequest::getLogoUrl() const {
    return m_logo_url;
}
void OAIPGApiEmailReceiptRequest::setLogoUrl(const QString &logo_url) {
    m_logo_url = logo_url;
    m_logo_url_isSet = true;
}

bool OAIPGApiEmailReceiptRequest::is_logo_url_Set() const{
    return m_logo_url_isSet;
}

bool OAIPGApiEmailReceiptRequest::is_logo_url_Valid() const{
    return m_logo_url_isValid;
}

qint64 OAIPGApiEmailReceiptRequest::getMerchantId() const {
    return m_merchant_id;
}
void OAIPGApiEmailReceiptRequest::setMerchantId(const qint64 &merchant_id) {
    m_merchant_id = merchant_id;
    m_merchant_id_isSet = true;
}

bool OAIPGApiEmailReceiptRequest::is_merchant_id_Set() const{
    return m_merchant_id_isSet;
}

bool OAIPGApiEmailReceiptRequest::is_merchant_id_Valid() const{
    return m_merchant_id_isValid;
}

qint64 OAIPGApiEmailReceiptRequest::getVendorId() const {
    return m_vendor_id;
}
void OAIPGApiEmailReceiptRequest::setVendorId(const qint64 &vendor_id) {
    m_vendor_id = vendor_id;
    m_vendor_id_isSet = true;
}

bool OAIPGApiEmailReceiptRequest::is_vendor_id_Set() const{
    return m_vendor_id_isSet;
}

bool OAIPGApiEmailReceiptRequest::is_vendor_id_Valid() const{
    return m_vendor_id_isValid;
}

bool OAIPGApiEmailReceiptRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_developer_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_address.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_logo_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_merchant_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vendor_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPGApiEmailReceiptRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_email_address_isValid && m_merchant_id_isValid && true;
}

} // namespace OpenAPI
