/**
 * Qualpay Payment Gateway API
 * This document describes the Qualpay Payment Gateway API.
 *
 * The version of the OpenAPI document: 1.7.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPGApiVoidResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPGApiVoidResponse::OAIPGApiVoidResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPGApiVoidResponse::OAIPGApiVoidResponse() {
    this->initializeModel();
}

OAIPGApiVoidResponse::~OAIPGApiVoidResponse() {}

void OAIPGApiVoidResponse::initializeModel() {

    m_echo_fields_isSet = false;
    m_echo_fields_isValid = false;

    m_pg_id_isSet = false;
    m_pg_id_isValid = false;

    m_rcode_isSet = false;
    m_rcode_isValid = false;

    m_rmsg_isSet = false;
    m_rmsg_isValid = false;
}

void OAIPGApiVoidResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPGApiVoidResponse::fromJsonObject(QJsonObject json) {

    m_echo_fields_isValid = ::OpenAPI::fromJsonValue(m_echo_fields, json[QString("echo_fields")]);
    m_echo_fields_isSet = !json[QString("echo_fields")].isNull() && m_echo_fields_isValid;

    m_pg_id_isValid = ::OpenAPI::fromJsonValue(m_pg_id, json[QString("pg_id")]);
    m_pg_id_isSet = !json[QString("pg_id")].isNull() && m_pg_id_isValid;

    m_rcode_isValid = ::OpenAPI::fromJsonValue(m_rcode, json[QString("rcode")]);
    m_rcode_isSet = !json[QString("rcode")].isNull() && m_rcode_isValid;

    m_rmsg_isValid = ::OpenAPI::fromJsonValue(m_rmsg, json[QString("rmsg")]);
    m_rmsg_isSet = !json[QString("rmsg")].isNull() && m_rmsg_isValid;
}

QString OAIPGApiVoidResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPGApiVoidResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_echo_fields_isSet) {
        obj.insert(QString("echo_fields"), ::OpenAPI::toJsonValue(m_echo_fields));
    }
    if (m_pg_id_isSet) {
        obj.insert(QString("pg_id"), ::OpenAPI::toJsonValue(m_pg_id));
    }
    if (m_rcode_isSet) {
        obj.insert(QString("rcode"), ::OpenAPI::toJsonValue(m_rcode));
    }
    if (m_rmsg_isSet) {
        obj.insert(QString("rmsg"), ::OpenAPI::toJsonValue(m_rmsg));
    }
    return obj;
}

QString OAIPGApiVoidResponse::getEchoFields() const {
    return m_echo_fields;
}
void OAIPGApiVoidResponse::setEchoFields(const QString &echo_fields) {
    m_echo_fields = echo_fields;
    m_echo_fields_isSet = true;
}

bool OAIPGApiVoidResponse::is_echo_fields_Set() const{
    return m_echo_fields_isSet;
}

bool OAIPGApiVoidResponse::is_echo_fields_Valid() const{
    return m_echo_fields_isValid;
}

QString OAIPGApiVoidResponse::getPgId() const {
    return m_pg_id;
}
void OAIPGApiVoidResponse::setPgId(const QString &pg_id) {
    m_pg_id = pg_id;
    m_pg_id_isSet = true;
}

bool OAIPGApiVoidResponse::is_pg_id_Set() const{
    return m_pg_id_isSet;
}

bool OAIPGApiVoidResponse::is_pg_id_Valid() const{
    return m_pg_id_isValid;
}

QString OAIPGApiVoidResponse::getRcode() const {
    return m_rcode;
}
void OAIPGApiVoidResponse::setRcode(const QString &rcode) {
    m_rcode = rcode;
    m_rcode_isSet = true;
}

bool OAIPGApiVoidResponse::is_rcode_Set() const{
    return m_rcode_isSet;
}

bool OAIPGApiVoidResponse::is_rcode_Valid() const{
    return m_rcode_isValid;
}

QString OAIPGApiVoidResponse::getRmsg() const {
    return m_rmsg;
}
void OAIPGApiVoidResponse::setRmsg(const QString &rmsg) {
    m_rmsg = rmsg;
    m_rmsg_isSet = true;
}

bool OAIPGApiVoidResponse::is_rmsg_Set() const{
    return m_rmsg_isSet;
}

bool OAIPGApiVoidResponse::is_rmsg_Valid() const{
    return m_rmsg_isValid;
}

bool OAIPGApiVoidResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_echo_fields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pg_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rcode_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rmsg_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPGApiVoidResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
