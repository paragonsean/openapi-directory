/**
 * Qualpay Payment Gateway API
 * This document describes the Qualpay Payment Gateway API.
 *
 * The version of the OpenAPI document: 1.7.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIShippingAddress.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIShippingAddress::OAIShippingAddress(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIShippingAddress::OAIShippingAddress() {
    this->initializeModel();
}

OAIShippingAddress::~OAIShippingAddress() {}

void OAIShippingAddress::initializeModel() {

    m_primary_isSet = false;
    m_primary_isValid = false;

    m_shipping_addr1_isSet = false;
    m_shipping_addr1_isValid = false;

    m_shipping_addr2_isSet = false;
    m_shipping_addr2_isValid = false;

    m_shipping_city_isSet = false;
    m_shipping_city_isValid = false;

    m_shipping_country_isSet = false;
    m_shipping_country_isValid = false;

    m_shipping_country_code_isSet = false;
    m_shipping_country_code_isValid = false;

    m_shipping_firm_name_isSet = false;
    m_shipping_firm_name_isValid = false;

    m_shipping_first_name_isSet = false;
    m_shipping_first_name_isValid = false;

    m_shipping_last_name_isSet = false;
    m_shipping_last_name_isValid = false;

    m_shipping_state_isSet = false;
    m_shipping_state_isValid = false;

    m_shipping_zip_isSet = false;
    m_shipping_zip_isValid = false;

    m_shipping_zip4_isSet = false;
    m_shipping_zip4_isValid = false;
}

void OAIShippingAddress::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIShippingAddress::fromJsonObject(QJsonObject json) {

    m_primary_isValid = ::OpenAPI::fromJsonValue(m_primary, json[QString("primary")]);
    m_primary_isSet = !json[QString("primary")].isNull() && m_primary_isValid;

    m_shipping_addr1_isValid = ::OpenAPI::fromJsonValue(m_shipping_addr1, json[QString("shipping_addr1")]);
    m_shipping_addr1_isSet = !json[QString("shipping_addr1")].isNull() && m_shipping_addr1_isValid;

    m_shipping_addr2_isValid = ::OpenAPI::fromJsonValue(m_shipping_addr2, json[QString("shipping_addr2")]);
    m_shipping_addr2_isSet = !json[QString("shipping_addr2")].isNull() && m_shipping_addr2_isValid;

    m_shipping_city_isValid = ::OpenAPI::fromJsonValue(m_shipping_city, json[QString("shipping_city")]);
    m_shipping_city_isSet = !json[QString("shipping_city")].isNull() && m_shipping_city_isValid;

    m_shipping_country_isValid = ::OpenAPI::fromJsonValue(m_shipping_country, json[QString("shipping_country")]);
    m_shipping_country_isSet = !json[QString("shipping_country")].isNull() && m_shipping_country_isValid;

    m_shipping_country_code_isValid = ::OpenAPI::fromJsonValue(m_shipping_country_code, json[QString("shipping_country_code")]);
    m_shipping_country_code_isSet = !json[QString("shipping_country_code")].isNull() && m_shipping_country_code_isValid;

    m_shipping_firm_name_isValid = ::OpenAPI::fromJsonValue(m_shipping_firm_name, json[QString("shipping_firm_name")]);
    m_shipping_firm_name_isSet = !json[QString("shipping_firm_name")].isNull() && m_shipping_firm_name_isValid;

    m_shipping_first_name_isValid = ::OpenAPI::fromJsonValue(m_shipping_first_name, json[QString("shipping_first_name")]);
    m_shipping_first_name_isSet = !json[QString("shipping_first_name")].isNull() && m_shipping_first_name_isValid;

    m_shipping_last_name_isValid = ::OpenAPI::fromJsonValue(m_shipping_last_name, json[QString("shipping_last_name")]);
    m_shipping_last_name_isSet = !json[QString("shipping_last_name")].isNull() && m_shipping_last_name_isValid;

    m_shipping_state_isValid = ::OpenAPI::fromJsonValue(m_shipping_state, json[QString("shipping_state")]);
    m_shipping_state_isSet = !json[QString("shipping_state")].isNull() && m_shipping_state_isValid;

    m_shipping_zip_isValid = ::OpenAPI::fromJsonValue(m_shipping_zip, json[QString("shipping_zip")]);
    m_shipping_zip_isSet = !json[QString("shipping_zip")].isNull() && m_shipping_zip_isValid;

    m_shipping_zip4_isValid = ::OpenAPI::fromJsonValue(m_shipping_zip4, json[QString("shipping_zip4")]);
    m_shipping_zip4_isSet = !json[QString("shipping_zip4")].isNull() && m_shipping_zip4_isValid;
}

QString OAIShippingAddress::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIShippingAddress::asJsonObject() const {
    QJsonObject obj;
    if (m_primary_isSet) {
        obj.insert(QString("primary"), ::OpenAPI::toJsonValue(m_primary));
    }
    if (m_shipping_addr1_isSet) {
        obj.insert(QString("shipping_addr1"), ::OpenAPI::toJsonValue(m_shipping_addr1));
    }
    if (m_shipping_addr2_isSet) {
        obj.insert(QString("shipping_addr2"), ::OpenAPI::toJsonValue(m_shipping_addr2));
    }
    if (m_shipping_city_isSet) {
        obj.insert(QString("shipping_city"), ::OpenAPI::toJsonValue(m_shipping_city));
    }
    if (m_shipping_country_isSet) {
        obj.insert(QString("shipping_country"), ::OpenAPI::toJsonValue(m_shipping_country));
    }
    if (m_shipping_country_code_isSet) {
        obj.insert(QString("shipping_country_code"), ::OpenAPI::toJsonValue(m_shipping_country_code));
    }
    if (m_shipping_firm_name_isSet) {
        obj.insert(QString("shipping_firm_name"), ::OpenAPI::toJsonValue(m_shipping_firm_name));
    }
    if (m_shipping_first_name_isSet) {
        obj.insert(QString("shipping_first_name"), ::OpenAPI::toJsonValue(m_shipping_first_name));
    }
    if (m_shipping_last_name_isSet) {
        obj.insert(QString("shipping_last_name"), ::OpenAPI::toJsonValue(m_shipping_last_name));
    }
    if (m_shipping_state_isSet) {
        obj.insert(QString("shipping_state"), ::OpenAPI::toJsonValue(m_shipping_state));
    }
    if (m_shipping_zip_isSet) {
        obj.insert(QString("shipping_zip"), ::OpenAPI::toJsonValue(m_shipping_zip));
    }
    if (m_shipping_zip4_isSet) {
        obj.insert(QString("shipping_zip4"), ::OpenAPI::toJsonValue(m_shipping_zip4));
    }
    return obj;
}

bool OAIShippingAddress::isPrimary() const {
    return m_primary;
}
void OAIShippingAddress::setPrimary(const bool &primary) {
    m_primary = primary;
    m_primary_isSet = true;
}

bool OAIShippingAddress::is_primary_Set() const{
    return m_primary_isSet;
}

bool OAIShippingAddress::is_primary_Valid() const{
    return m_primary_isValid;
}

QString OAIShippingAddress::getShippingAddr1() const {
    return m_shipping_addr1;
}
void OAIShippingAddress::setShippingAddr1(const QString &shipping_addr1) {
    m_shipping_addr1 = shipping_addr1;
    m_shipping_addr1_isSet = true;
}

bool OAIShippingAddress::is_shipping_addr1_Set() const{
    return m_shipping_addr1_isSet;
}

bool OAIShippingAddress::is_shipping_addr1_Valid() const{
    return m_shipping_addr1_isValid;
}

QString OAIShippingAddress::getShippingAddr2() const {
    return m_shipping_addr2;
}
void OAIShippingAddress::setShippingAddr2(const QString &shipping_addr2) {
    m_shipping_addr2 = shipping_addr2;
    m_shipping_addr2_isSet = true;
}

bool OAIShippingAddress::is_shipping_addr2_Set() const{
    return m_shipping_addr2_isSet;
}

bool OAIShippingAddress::is_shipping_addr2_Valid() const{
    return m_shipping_addr2_isValid;
}

QString OAIShippingAddress::getShippingCity() const {
    return m_shipping_city;
}
void OAIShippingAddress::setShippingCity(const QString &shipping_city) {
    m_shipping_city = shipping_city;
    m_shipping_city_isSet = true;
}

bool OAIShippingAddress::is_shipping_city_Set() const{
    return m_shipping_city_isSet;
}

bool OAIShippingAddress::is_shipping_city_Valid() const{
    return m_shipping_city_isValid;
}

QString OAIShippingAddress::getShippingCountry() const {
    return m_shipping_country;
}
void OAIShippingAddress::setShippingCountry(const QString &shipping_country) {
    m_shipping_country = shipping_country;
    m_shipping_country_isSet = true;
}

bool OAIShippingAddress::is_shipping_country_Set() const{
    return m_shipping_country_isSet;
}

bool OAIShippingAddress::is_shipping_country_Valid() const{
    return m_shipping_country_isValid;
}

QString OAIShippingAddress::getShippingCountryCode() const {
    return m_shipping_country_code;
}
void OAIShippingAddress::setShippingCountryCode(const QString &shipping_country_code) {
    m_shipping_country_code = shipping_country_code;
    m_shipping_country_code_isSet = true;
}

bool OAIShippingAddress::is_shipping_country_code_Set() const{
    return m_shipping_country_code_isSet;
}

bool OAIShippingAddress::is_shipping_country_code_Valid() const{
    return m_shipping_country_code_isValid;
}

QString OAIShippingAddress::getShippingFirmName() const {
    return m_shipping_firm_name;
}
void OAIShippingAddress::setShippingFirmName(const QString &shipping_firm_name) {
    m_shipping_firm_name = shipping_firm_name;
    m_shipping_firm_name_isSet = true;
}

bool OAIShippingAddress::is_shipping_firm_name_Set() const{
    return m_shipping_firm_name_isSet;
}

bool OAIShippingAddress::is_shipping_firm_name_Valid() const{
    return m_shipping_firm_name_isValid;
}

QString OAIShippingAddress::getShippingFirstName() const {
    return m_shipping_first_name;
}
void OAIShippingAddress::setShippingFirstName(const QString &shipping_first_name) {
    m_shipping_first_name = shipping_first_name;
    m_shipping_first_name_isSet = true;
}

bool OAIShippingAddress::is_shipping_first_name_Set() const{
    return m_shipping_first_name_isSet;
}

bool OAIShippingAddress::is_shipping_first_name_Valid() const{
    return m_shipping_first_name_isValid;
}

QString OAIShippingAddress::getShippingLastName() const {
    return m_shipping_last_name;
}
void OAIShippingAddress::setShippingLastName(const QString &shipping_last_name) {
    m_shipping_last_name = shipping_last_name;
    m_shipping_last_name_isSet = true;
}

bool OAIShippingAddress::is_shipping_last_name_Set() const{
    return m_shipping_last_name_isSet;
}

bool OAIShippingAddress::is_shipping_last_name_Valid() const{
    return m_shipping_last_name_isValid;
}

QString OAIShippingAddress::getShippingState() const {
    return m_shipping_state;
}
void OAIShippingAddress::setShippingState(const QString &shipping_state) {
    m_shipping_state = shipping_state;
    m_shipping_state_isSet = true;
}

bool OAIShippingAddress::is_shipping_state_Set() const{
    return m_shipping_state_isSet;
}

bool OAIShippingAddress::is_shipping_state_Valid() const{
    return m_shipping_state_isValid;
}

QString OAIShippingAddress::getShippingZip() const {
    return m_shipping_zip;
}
void OAIShippingAddress::setShippingZip(const QString &shipping_zip) {
    m_shipping_zip = shipping_zip;
    m_shipping_zip_isSet = true;
}

bool OAIShippingAddress::is_shipping_zip_Set() const{
    return m_shipping_zip_isSet;
}

bool OAIShippingAddress::is_shipping_zip_Valid() const{
    return m_shipping_zip_isValid;
}

QString OAIShippingAddress::getShippingZip4() const {
    return m_shipping_zip4;
}
void OAIShippingAddress::setShippingZip4(const QString &shipping_zip4) {
    m_shipping_zip4 = shipping_zip4;
    m_shipping_zip4_isSet = true;
}

bool OAIShippingAddress::is_shipping_zip4_Set() const{
    return m_shipping_zip4_isSet;
}

bool OAIShippingAddress::is_shipping_zip4_Valid() const{
    return m_shipping_zip4_isValid;
}

bool OAIShippingAddress::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_primary_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_addr1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_addr2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_city_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_country_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_firm_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_zip_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_zip4_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIShippingAddress::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_shipping_addr1_isValid && m_shipping_city_isValid && m_shipping_first_name_isValid && m_shipping_last_name_isValid && m_shipping_state_isValid && m_shipping_zip_isValid && true;
}

} // namespace OpenAPI
