# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PGApiTransactionResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amt_tran: float=None, auth_avs_result: str=None, auth_code: str=None, auth_cvv2_result: str=None, card_id: str=None, echo_fields: str=None, merchant_advice_code: str=None, pg_id: str=None, rcode: str=None, rmsg: str=None):
        """PGApiTransactionResponse - a model defined in OpenAPI

        :param amt_tran: The amt_tran of this PGApiTransactionResponse.
        :param auth_avs_result: The auth_avs_result of this PGApiTransactionResponse.
        :param auth_code: The auth_code of this PGApiTransactionResponse.
        :param auth_cvv2_result: The auth_cvv2_result of this PGApiTransactionResponse.
        :param card_id: The card_id of this PGApiTransactionResponse.
        :param echo_fields: The echo_fields of this PGApiTransactionResponse.
        :param merchant_advice_code: The merchant_advice_code of this PGApiTransactionResponse.
        :param pg_id: The pg_id of this PGApiTransactionResponse.
        :param rcode: The rcode of this PGApiTransactionResponse.
        :param rmsg: The rmsg of this PGApiTransactionResponse.
        """
        self.openapi_types = {
            'amt_tran': float,
            'auth_avs_result': str,
            'auth_code': str,
            'auth_cvv2_result': str,
            'card_id': str,
            'echo_fields': str,
            'merchant_advice_code': str,
            'pg_id': str,
            'rcode': str,
            'rmsg': str
        }

        self.attribute_map = {
            'amt_tran': 'amt_tran',
            'auth_avs_result': 'auth_avs_result',
            'auth_code': 'auth_code',
            'auth_cvv2_result': 'auth_cvv2_result',
            'card_id': 'card_id',
            'echo_fields': 'echo_fields',
            'merchant_advice_code': 'merchant_advice_code',
            'pg_id': 'pg_id',
            'rcode': 'rcode',
            'rmsg': 'rmsg'
        }

        self._amt_tran = amt_tran
        self._auth_avs_result = auth_avs_result
        self._auth_code = auth_code
        self._auth_cvv2_result = auth_cvv2_result
        self._card_id = card_id
        self._echo_fields = echo_fields
        self._merchant_advice_code = merchant_advice_code
        self._pg_id = pg_id
        self._rcode = rcode
        self._rmsg = rmsg

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PGApiTransactionResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PGApiTransactionResponse of this PGApiTransactionResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amt_tran(self):
        """Gets the amt_tran of this PGApiTransactionResponse.

        <strong>Format: </strong>Variable length, up to 12,2 N<br><strong>Description: </strong>Transaction amount, returned only on partial approvals.

        :return: The amt_tran of this PGApiTransactionResponse.
        :rtype: float
        """
        return self._amt_tran

    @amt_tran.setter
    def amt_tran(self, amt_tran):
        """Sets the amt_tran of this PGApiTransactionResponse.

        <strong>Format: </strong>Variable length, up to 12,2 N<br><strong>Description: </strong>Transaction amount, returned only on partial approvals.

        :param amt_tran: The amt_tran of this PGApiTransactionResponse.
        :type amt_tran: float
        """

        self._amt_tran = amt_tran

    @property
    def auth_avs_result(self):
        """Gets the auth_avs_result of this PGApiTransactionResponse.

        <strong>Format: </strong>Fixed length, 1 AN<br><strong>Description: </strong>AVS result from card issuer (if avs_zip and optionally avs_address were provided in the request). Refer to <a href=\"/developer/api/reference#avs-result-codes\"target=\"_blank\">Payment Result Codes for AVS</a> for possible values.

        :return: The auth_avs_result of this PGApiTransactionResponse.
        :rtype: str
        """
        return self._auth_avs_result

    @auth_avs_result.setter
    def auth_avs_result(self, auth_avs_result):
        """Sets the auth_avs_result of this PGApiTransactionResponse.

        <strong>Format: </strong>Fixed length, 1 AN<br><strong>Description: </strong>AVS result from card issuer (if avs_zip and optionally avs_address were provided in the request). Refer to <a href=\"/developer/api/reference#avs-result-codes\"target=\"_blank\">Payment Result Codes for AVS</a> for possible values.

        :param auth_avs_result: The auth_avs_result of this PGApiTransactionResponse.
        :type auth_avs_result: str
        """

        self._auth_avs_result = auth_avs_result

    @property
    def auth_code(self):
        """Gets the auth_code of this PGApiTransactionResponse.

        <strong>Format: </strong>Fixed length, 6 AN<br><strong>Description: </strong>Card issuer authorization code returned on successful authorization request.

        :return: The auth_code of this PGApiTransactionResponse.
        :rtype: str
        """
        return self._auth_code

    @auth_code.setter
    def auth_code(self, auth_code):
        """Sets the auth_code of this PGApiTransactionResponse.

        <strong>Format: </strong>Fixed length, 6 AN<br><strong>Description: </strong>Card issuer authorization code returned on successful authorization request.

        :param auth_code: The auth_code of this PGApiTransactionResponse.
        :type auth_code: str
        """

        self._auth_code = auth_code

    @property
    def auth_cvv2_result(self):
        """Gets the auth_cvv2_result of this PGApiTransactionResponse.

        <strong>Format: </strong>Fixed length, 1 AN<br><strong>Description: </strong>CVV2 result from card issuer (if CVV2 data was sent in the request). Refer to <a href=\"/developer/api/reference#cvv2-result-codes\"target=\"_blank\">Payment Result Codes for CVV2</a> for possible values.

        :return: The auth_cvv2_result of this PGApiTransactionResponse.
        :rtype: str
        """
        return self._auth_cvv2_result

    @auth_cvv2_result.setter
    def auth_cvv2_result(self, auth_cvv2_result):
        """Sets the auth_cvv2_result of this PGApiTransactionResponse.

        <strong>Format: </strong>Fixed length, 1 AN<br><strong>Description: </strong>CVV2 result from card issuer (if CVV2 data was sent in the request). Refer to <a href=\"/developer/api/reference#cvv2-result-codes\"target=\"_blank\">Payment Result Codes for CVV2</a> for possible values.

        :param auth_cvv2_result: The auth_cvv2_result of this PGApiTransactionResponse.
        :type auth_cvv2_result: str
        """

        self._auth_cvv2_result = auth_cvv2_result

    @property
    def card_id(self):
        """Gets the card_id of this PGApiTransactionResponse.

        <strong>Format: </strong>Fixed length, 32 AN<br><strong>Description: </strong>32-byte value returned after successful tokenize request or when an authorization or sale transaction requests tokenization of the cardholder data.

        :return: The card_id of this PGApiTransactionResponse.
        :rtype: str
        """
        return self._card_id

    @card_id.setter
    def card_id(self, card_id):
        """Sets the card_id of this PGApiTransactionResponse.

        <strong>Format: </strong>Fixed length, 32 AN<br><strong>Description: </strong>32-byte value returned after successful tokenize request or when an authorization or sale transaction requests tokenization of the cardholder data.

        :param card_id: The card_id of this PGApiTransactionResponse.
        :type card_id: str
        """

        self._card_id = card_id

    @property
    def echo_fields(self):
        """Gets the echo_fields of this PGApiTransactionResponse.

        <strong>Format: </strong>Variable length<br><strong>Description: </strong>Data that was provided in echo_fields in the request.

        :return: The echo_fields of this PGApiTransactionResponse.
        :rtype: str
        """
        return self._echo_fields

    @echo_fields.setter
    def echo_fields(self, echo_fields):
        """Sets the echo_fields of this PGApiTransactionResponse.

        <strong>Format: </strong>Variable length<br><strong>Description: </strong>Data that was provided in echo_fields in the request.

        :param echo_fields: The echo_fields of this PGApiTransactionResponse.
        :type echo_fields: str
        """

        self._echo_fields = echo_fields

    @property
    def merchant_advice_code(self):
        """Gets the merchant_advice_code of this PGApiTransactionResponse.

        <strong>Format: </strong>Fixed length, 4 AN<br><strong>Description: </strong>Recurring transaction advice for MasterCard authorizations.<ul><li>M001 = New account information available</li><li>M002 = Try again later</li><li>M003 = Do not try again for recurring payments transaction</li><li>M004 = Token requirements not fulfilled for this token type</li><li>M021 = Recurring payment cancellation</li></ul>

        :return: The merchant_advice_code of this PGApiTransactionResponse.
        :rtype: str
        """
        return self._merchant_advice_code

    @merchant_advice_code.setter
    def merchant_advice_code(self, merchant_advice_code):
        """Sets the merchant_advice_code of this PGApiTransactionResponse.

        <strong>Format: </strong>Fixed length, 4 AN<br><strong>Description: </strong>Recurring transaction advice for MasterCard authorizations.<ul><li>M001 = New account information available</li><li>M002 = Try again later</li><li>M003 = Do not try again for recurring payments transaction</li><li>M004 = Token requirements not fulfilled for this token type</li><li>M021 = Recurring payment cancellation</li></ul>

        :param merchant_advice_code: The merchant_advice_code of this PGApiTransactionResponse.
        :type merchant_advice_code: str
        """

        self._merchant_advice_code = merchant_advice_code

    @property
    def pg_id(self):
        """Gets the pg_id of this PGApiTransactionResponse.

        <strong>Format: </strong>Fixed length, 32 AN<br><strong>Description: </strong>32-byte unique identifier generated by the payment gateway, returned in all valid responses.

        :return: The pg_id of this PGApiTransactionResponse.
        :rtype: str
        """
        return self._pg_id

    @pg_id.setter
    def pg_id(self, pg_id):
        """Sets the pg_id of this PGApiTransactionResponse.

        <strong>Format: </strong>Fixed length, 32 AN<br><strong>Description: </strong>32-byte unique identifier generated by the payment gateway, returned in all valid responses.

        :param pg_id: The pg_id of this PGApiTransactionResponse.
        :type pg_id: str
        """

        self._pg_id = pg_id

    @property
    def rcode(self):
        """Gets the rcode of this PGApiTransactionResponse.

        <strong>Format: </strong>Fixed length, 3 AN<br><strong>Description: </strong>Response code from the payment gateway. \"000\" indicates success. Refer to <a href=\"/developer/api/reference#api-response-codes\"target=\"_blank\">Platform API Response Codes</a> for entire list of Payment Gateway Response Codes.

        :return: The rcode of this PGApiTransactionResponse.
        :rtype: str
        """
        return self._rcode

    @rcode.setter
    def rcode(self, rcode):
        """Sets the rcode of this PGApiTransactionResponse.

        <strong>Format: </strong>Fixed length, 3 AN<br><strong>Description: </strong>Response code from the payment gateway. \"000\" indicates success. Refer to <a href=\"/developer/api/reference#api-response-codes\"target=\"_blank\">Platform API Response Codes</a> for entire list of Payment Gateway Response Codes.

        :param rcode: The rcode of this PGApiTransactionResponse.
        :type rcode: str
        """

        self._rcode = rcode

    @property
    def rmsg(self):
        """Gets the rmsg of this PGApiTransactionResponse.

        <strong>Format: </strong>Variable length<br><strong>Description: </strong>Response text from the payment gateway.

        :return: The rmsg of this PGApiTransactionResponse.
        :rtype: str
        """
        return self._rmsg

    @rmsg.setter
    def rmsg(self, rmsg):
        """Sets the rmsg of this PGApiTransactionResponse.

        <strong>Format: </strong>Variable length<br><strong>Description: </strong>Response text from the payment gateway.

        :param rmsg: The rmsg of this PGApiTransactionResponse.
        :type rmsg: str
        """

        self._rmsg = rmsg
