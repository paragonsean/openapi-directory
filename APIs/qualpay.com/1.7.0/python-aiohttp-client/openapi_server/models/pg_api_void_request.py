# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PGApiVoidRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, developer_id: str=None, echo_fields: str=None, loc_id: str=None, merchant_id: int=None, profile_id: str=None, report_data: str=None, retry_attempt: int=None, retry_id: int=None, session_id: str=None, user_id: int=None, vendor_id: int=None):
        """PGApiVoidRequest - a model defined in OpenAPI

        :param developer_id: The developer_id of this PGApiVoidRequest.
        :param echo_fields: The echo_fields of this PGApiVoidRequest.
        :param loc_id: The loc_id of this PGApiVoidRequest.
        :param merchant_id: The merchant_id of this PGApiVoidRequest.
        :param profile_id: The profile_id of this PGApiVoidRequest.
        :param report_data: The report_data of this PGApiVoidRequest.
        :param retry_attempt: The retry_attempt of this PGApiVoidRequest.
        :param retry_id: The retry_id of this PGApiVoidRequest.
        :param session_id: The session_id of this PGApiVoidRequest.
        :param user_id: The user_id of this PGApiVoidRequest.
        :param vendor_id: The vendor_id of this PGApiVoidRequest.
        """
        self.openapi_types = {
            'developer_id': str,
            'echo_fields': str,
            'loc_id': str,
            'merchant_id': int,
            'profile_id': str,
            'report_data': str,
            'retry_attempt': int,
            'retry_id': int,
            'session_id': str,
            'user_id': int,
            'vendor_id': int
        }

        self.attribute_map = {
            'developer_id': 'developer_id',
            'echo_fields': 'echo_fields',
            'loc_id': 'loc_id',
            'merchant_id': 'merchant_id',
            'profile_id': 'profile_id',
            'report_data': 'report_data',
            'retry_attempt': 'retry_attempt',
            'retry_id': 'retry_id',
            'session_id': 'session_id',
            'user_id': 'user_id',
            'vendor_id': 'vendor_id'
        }

        self._developer_id = developer_id
        self._echo_fields = echo_fields
        self._loc_id = loc_id
        self._merchant_id = merchant_id
        self._profile_id = profile_id
        self._report_data = report_data
        self._retry_attempt = retry_attempt
        self._retry_id = retry_id
        self._session_id = session_id
        self._user_id = user_id
        self._vendor_id = vendor_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PGApiVoidRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PGApiVoidRequest of this PGApiVoidRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def developer_id(self):
        """Gets the developer_id of this PGApiVoidRequest.

        <strong>Format: </strong>Variable length, up to 32 AN<br><strong>Description: </strong>Use to indicate which company developed the integration to Qualpay or the name of the payment solution that is connected to Qualpay.  Suggested usage is softwareABCv1.0 or companyXYZv2.0. 

        :return: The developer_id of this PGApiVoidRequest.
        :rtype: str
        """
        return self._developer_id

    @developer_id.setter
    def developer_id(self, developer_id):
        """Sets the developer_id of this PGApiVoidRequest.

        <strong>Format: </strong>Variable length, up to 32 AN<br><strong>Description: </strong>Use to indicate which company developed the integration to Qualpay or the name of the payment solution that is connected to Qualpay.  Suggested usage is softwareABCv1.0 or companyXYZv2.0. 

        :param developer_id: The developer_id of this PGApiVoidRequest.
        :type developer_id: str
        """

        self._developer_id = developer_id

    @property
    def echo_fields(self):
        """Gets the echo_fields of this PGApiVoidRequest.

        <strong>Format: </strong>Variable length<br><strong>Description: </strong>This field contains a JSON array of field data that will be echoed back in the response message.

        :return: The echo_fields of this PGApiVoidRequest.
        :rtype: str
        """
        return self._echo_fields

    @echo_fields.setter
    def echo_fields(self, echo_fields):
        """Sets the echo_fields of this PGApiVoidRequest.

        <strong>Format: </strong>Variable length<br><strong>Description: </strong>This field contains a JSON array of field data that will be echoed back in the response message.

        :param echo_fields: The echo_fields of this PGApiVoidRequest.
        :type echo_fields: str
        """

        self._echo_fields = echo_fields

    @property
    def loc_id(self):
        """Gets the loc_id of this PGApiVoidRequest.

        <strong>Format: </strong>Variable length, up to 4 N<br><strong>Description: </strong>When a merchant has more than one location using the same currency, this value is used to specify the specific location for this request.

        :return: The loc_id of this PGApiVoidRequest.
        :rtype: str
        """
        return self._loc_id

    @loc_id.setter
    def loc_id(self, loc_id):
        """Sets the loc_id of this PGApiVoidRequest.

        <strong>Format: </strong>Variable length, up to 4 N<br><strong>Description: </strong>When a merchant has more than one location using the same currency, this value is used to specify the specific location for this request.

        :param loc_id: The loc_id of this PGApiVoidRequest.
        :type loc_id: str
        """

        self._loc_id = loc_id

    @property
    def merchant_id(self):
        """Gets the merchant_id of this PGApiVoidRequest.

        <strong>Format: </strong>Variable length, up to 12 N<br><strong>Description: </strong>Unique identifier on the Qualpay system.

        :return: The merchant_id of this PGApiVoidRequest.
        :rtype: int
        """
        return self._merchant_id

    @merchant_id.setter
    def merchant_id(self, merchant_id):
        """Sets the merchant_id of this PGApiVoidRequest.

        <strong>Format: </strong>Variable length, up to 12 N<br><strong>Description: </strong>Unique identifier on the Qualpay system.

        :param merchant_id: The merchant_id of this PGApiVoidRequest.
        :type merchant_id: int
        """
        if merchant_id is None:
            raise ValueError("Invalid value for `merchant_id`, must not be `None`")

        self._merchant_id = merchant_id

    @property
    def profile_id(self):
        """Gets the profile_id of this PGApiVoidRequest.

        <strong>Format: </strong>Fixed length, 20 N<br><strong>Description: </strong>Explicitly identifies which Payment Gateway profile should be used for the request.

        :return: The profile_id of this PGApiVoidRequest.
        :rtype: str
        """
        return self._profile_id

    @profile_id.setter
    def profile_id(self, profile_id):
        """Sets the profile_id of this PGApiVoidRequest.

        <strong>Format: </strong>Fixed length, 20 N<br><strong>Description: </strong>Explicitly identifies which Payment Gateway profile should be used for the request.

        :param profile_id: The profile_id of this PGApiVoidRequest.
        :type profile_id: str
        """

        self._profile_id = profile_id

    @property
    def report_data(self):
        """Gets the report_data of this PGApiVoidRequest.

        <strong>Format: </strong>Variable length<br><strong>Description: </strong>This field contains a JSON array of field data that will be included with the transaction data reported in Qualpay Manager.

        :return: The report_data of this PGApiVoidRequest.
        :rtype: str
        """
        return self._report_data

    @report_data.setter
    def report_data(self, report_data):
        """Sets the report_data of this PGApiVoidRequest.

        <strong>Format: </strong>Variable length<br><strong>Description: </strong>This field contains a JSON array of field data that will be included with the transaction data reported in Qualpay Manager.

        :param report_data: The report_data of this PGApiVoidRequest.
        :type report_data: str
        """

        self._report_data = report_data

    @property
    def retry_attempt(self):
        """Gets the retry_attempt of this PGApiVoidRequest.

        <strong>Format: </strong>Variable length, up to 4 N<br><strong>Description: </strong>This field contains a number greater than zero (0). When the value is one (1), the payment gateway treats the message as a new message. If the value is greater than one (1), then the payment gateway will return the result of the original message. If the original message did not complete, the payment gateway treats the message as a new message.<br><strong>Conditional Requirement: </strong>This field is required when the retry_id is present in the request message.

        :return: The retry_attempt of this PGApiVoidRequest.
        :rtype: int
        """
        return self._retry_attempt

    @retry_attempt.setter
    def retry_attempt(self, retry_attempt):
        """Sets the retry_attempt of this PGApiVoidRequest.

        <strong>Format: </strong>Variable length, up to 4 N<br><strong>Description: </strong>This field contains a number greater than zero (0). When the value is one (1), the payment gateway treats the message as a new message. If the value is greater than one (1), then the payment gateway will return the result of the original message. If the original message did not complete, the payment gateway treats the message as a new message.<br><strong>Conditional Requirement: </strong>This field is required when the retry_id is present in the request message.

        :param retry_attempt: The retry_attempt of this PGApiVoidRequest.
        :type retry_attempt: int
        """

        self._retry_attempt = retry_attempt

    @property
    def retry_id(self):
        """Gets the retry_id of this PGApiVoidRequest.

        <strong>Format: </strong>Variable length, up to 15 N<br><strong>Description: </strong>This field contains a merchant generated number used to identify the request. This value must be unique within the last 24 hours. When present, the payment gateway will use the retry_attempt to determine whether the message is new or a retry of a previous message.

        :return: The retry_id of this PGApiVoidRequest.
        :rtype: int
        """
        return self._retry_id

    @retry_id.setter
    def retry_id(self, retry_id):
        """Sets the retry_id of this PGApiVoidRequest.

        <strong>Format: </strong>Variable length, up to 15 N<br><strong>Description: </strong>This field contains a merchant generated number used to identify the request. This value must be unique within the last 24 hours. When present, the payment gateway will use the retry_attempt to determine whether the message is new or a retry of a previous message.

        :param retry_id: The retry_id of this PGApiVoidRequest.
        :type retry_id: int
        """

        self._retry_id = retry_id

    @property
    def session_id(self):
        """Gets the session_id of this PGApiVoidRequest.

        INTERNAL USE ONLY.

        :return: The session_id of this PGApiVoidRequest.
        :rtype: str
        """
        return self._session_id

    @session_id.setter
    def session_id(self, session_id):
        """Sets the session_id of this PGApiVoidRequest.

        INTERNAL USE ONLY.

        :param session_id: The session_id of this PGApiVoidRequest.
        :type session_id: str
        """

        self._session_id = session_id

    @property
    def user_id(self):
        """Gets the user_id of this PGApiVoidRequest.

        INTERNAL USE ONLY.

        :return: The user_id of this PGApiVoidRequest.
        :rtype: int
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this PGApiVoidRequest.

        INTERNAL USE ONLY.

        :param user_id: The user_id of this PGApiVoidRequest.
        :type user_id: int
        """

        self._user_id = user_id

    @property
    def vendor_id(self):
        """Gets the vendor_id of this PGApiVoidRequest.

        <strong>Format: </strong>Variable length, up to 12 N<br><strong>Description: </strong>Identifies the vendor to which this void request applies.

        :return: The vendor_id of this PGApiVoidRequest.
        :rtype: int
        """
        return self._vendor_id

    @vendor_id.setter
    def vendor_id(self, vendor_id):
        """Sets the vendor_id of this PGApiVoidRequest.

        <strong>Format: </strong>Variable length, up to 12 N<br><strong>Description: </strong>Identifies the vendor to which this void request applies.

        :param vendor_id: The vendor_id of this PGApiVoidRequest.
        :type vendor_id: int
        """

        self._vendor_id = vendor_id
