# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.shipping_address import ShippingAddress
from openapi_server import util


class Customer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, billing_addr1: str=None, billing_addr2: str=None, billing_city: str=None, billing_country: str=None, billing_country_code: str=None, billing_state: str=None, billing_zip: str=None, billing_zip4: str=None, customer_email: str=None, customer_firm_name: str=None, customer_first_name: str=None, customer_last_name: str=None, customer_phone: str=None, shipping_addresses: List[ShippingAddress]=None):
        """Customer - a model defined in OpenAPI

        :param billing_addr1: The billing_addr1 of this Customer.
        :param billing_addr2: The billing_addr2 of this Customer.
        :param billing_city: The billing_city of this Customer.
        :param billing_country: The billing_country of this Customer.
        :param billing_country_code: The billing_country_code of this Customer.
        :param billing_state: The billing_state of this Customer.
        :param billing_zip: The billing_zip of this Customer.
        :param billing_zip4: The billing_zip4 of this Customer.
        :param customer_email: The customer_email of this Customer.
        :param customer_firm_name: The customer_firm_name of this Customer.
        :param customer_first_name: The customer_first_name of this Customer.
        :param customer_last_name: The customer_last_name of this Customer.
        :param customer_phone: The customer_phone of this Customer.
        :param shipping_addresses: The shipping_addresses of this Customer.
        """
        self.openapi_types = {
            'billing_addr1': str,
            'billing_addr2': str,
            'billing_city': str,
            'billing_country': str,
            'billing_country_code': str,
            'billing_state': str,
            'billing_zip': str,
            'billing_zip4': str,
            'customer_email': str,
            'customer_firm_name': str,
            'customer_first_name': str,
            'customer_last_name': str,
            'customer_phone': str,
            'shipping_addresses': List[ShippingAddress]
        }

        self.attribute_map = {
            'billing_addr1': 'billing_addr1',
            'billing_addr2': 'billing_addr2',
            'billing_city': 'billing_city',
            'billing_country': 'billing_country',
            'billing_country_code': 'billing_country_code',
            'billing_state': 'billing_state',
            'billing_zip': 'billing_zip',
            'billing_zip4': 'billing_zip4',
            'customer_email': 'customer_email',
            'customer_firm_name': 'customer_firm_name',
            'customer_first_name': 'customer_first_name',
            'customer_last_name': 'customer_last_name',
            'customer_phone': 'customer_phone',
            'shipping_addresses': 'shipping_addresses'
        }

        self._billing_addr1 = billing_addr1
        self._billing_addr2 = billing_addr2
        self._billing_city = billing_city
        self._billing_country = billing_country
        self._billing_country_code = billing_country_code
        self._billing_state = billing_state
        self._billing_zip = billing_zip
        self._billing_zip4 = billing_zip4
        self._customer_email = customer_email
        self._customer_firm_name = customer_firm_name
        self._customer_first_name = customer_first_name
        self._customer_last_name = customer_last_name
        self._customer_phone = customer_phone
        self._shipping_addresses = shipping_addresses

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Customer':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Customer of this Customer.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def billing_addr1(self):
        """Gets the billing_addr1 of this Customer.

        <strong>Format: </strong>Variable length<br><strong>Description: </strong>Customer billing address street.

        :return: The billing_addr1 of this Customer.
        :rtype: str
        """
        return self._billing_addr1

    @billing_addr1.setter
    def billing_addr1(self, billing_addr1):
        """Sets the billing_addr1 of this Customer.

        <strong>Format: </strong>Variable length<br><strong>Description: </strong>Customer billing address street.

        :param billing_addr1: The billing_addr1 of this Customer.
        :type billing_addr1: str
        """

        self._billing_addr1 = billing_addr1

    @property
    def billing_addr2(self):
        """Gets the billing_addr2 of this Customer.

        <strong>Format: </strong>Variable length<br><strong>Description: </strong>Customer billing address, line 2.

        :return: The billing_addr2 of this Customer.
        :rtype: str
        """
        return self._billing_addr2

    @billing_addr2.setter
    def billing_addr2(self, billing_addr2):
        """Sets the billing_addr2 of this Customer.

        <strong>Format: </strong>Variable length<br><strong>Description: </strong>Customer billing address, line 2.

        :param billing_addr2: The billing_addr2 of this Customer.
        :type billing_addr2: str
        """

        self._billing_addr2 = billing_addr2

    @property
    def billing_city(self):
        """Gets the billing_city of this Customer.

        <strong>Format: </strong>Variable length<br><strong>Description: </strong>Customer billing city.

        :return: The billing_city of this Customer.
        :rtype: str
        """
        return self._billing_city

    @billing_city.setter
    def billing_city(self, billing_city):
        """Sets the billing_city of this Customer.

        <strong>Format: </strong>Variable length<br><strong>Description: </strong>Customer billing city.

        :param billing_city: The billing_city of this Customer.
        :type billing_city: str
        """

        self._billing_city = billing_city

    @property
    def billing_country(self):
        """Gets the billing_country of this Customer.

        <strong>Format: </strong>Variable length<br><strong>Description: </strong>Customer billing country.

        :return: The billing_country of this Customer.
        :rtype: str
        """
        return self._billing_country

    @billing_country.setter
    def billing_country(self, billing_country):
        """Sets the billing_country of this Customer.

        <strong>Format: </strong>Variable length<br><strong>Description: </strong>Customer billing country.

        :param billing_country: The billing_country of this Customer.
        :type billing_country: str
        """

        self._billing_country = billing_country

    @property
    def billing_country_code(self):
        """Gets the billing_country_code of this Customer.

        <strong>Format: </strong>Fixed length, 3 N<br><strong>Description: </strong>ISO numeric country code for the billing address. Refer to <a href=\"/developer/api/reference#country-codes\"target=\"_blank\">Country Codes</a> for a list of country codes.

        :return: The billing_country_code of this Customer.
        :rtype: str
        """
        return self._billing_country_code

    @billing_country_code.setter
    def billing_country_code(self, billing_country_code):
        """Sets the billing_country_code of this Customer.

        <strong>Format: </strong>Fixed length, 3 N<br><strong>Description: </strong>ISO numeric country code for the billing address. Refer to <a href=\"/developer/api/reference#country-codes\"target=\"_blank\">Country Codes</a> for a list of country codes.

        :param billing_country_code: The billing_country_code of this Customer.
        :type billing_country_code: str
        """

        self._billing_country_code = billing_country_code

    @property
    def billing_state(self):
        """Gets the billing_state of this Customer.

        <strong>Format: </strong>Variable length<br><strong>Description: </strong>Customer billing state (abbreviated).

        :return: The billing_state of this Customer.
        :rtype: str
        """
        return self._billing_state

    @billing_state.setter
    def billing_state(self, billing_state):
        """Sets the billing_state of this Customer.

        <strong>Format: </strong>Variable length<br><strong>Description: </strong>Customer billing state (abbreviated).

        :param billing_state: The billing_state of this Customer.
        :type billing_state: str
        """

        self._billing_state = billing_state

    @property
    def billing_zip(self):
        """Gets the billing_zip of this Customer.

        <strong>Format: </strong>Variable length<br><strong>Description: </strong>Customer billing zip code.

        :return: The billing_zip of this Customer.
        :rtype: str
        """
        return self._billing_zip

    @billing_zip.setter
    def billing_zip(self, billing_zip):
        """Sets the billing_zip of this Customer.

        <strong>Format: </strong>Variable length<br><strong>Description: </strong>Customer billing zip code.

        :param billing_zip: The billing_zip of this Customer.
        :type billing_zip: str
        """

        self._billing_zip = billing_zip

    @property
    def billing_zip4(self):
        """Gets the billing_zip4 of this Customer.

        <strong>Format: </strong>Fixed length, 4 N<br><strong>Description: </strong>Customer billing zip+4 code if applicable.

        :return: The billing_zip4 of this Customer.
        :rtype: str
        """
        return self._billing_zip4

    @billing_zip4.setter
    def billing_zip4(self, billing_zip4):
        """Sets the billing_zip4 of this Customer.

        <strong>Format: </strong>Fixed length, 4 N<br><strong>Description: </strong>Customer billing zip+4 code if applicable.

        :param billing_zip4: The billing_zip4 of this Customer.
        :type billing_zip4: str
        """

        self._billing_zip4 = billing_zip4

    @property
    def customer_email(self):
        """Gets the customer_email of this Customer.

        <strong>Format: </strong>Variable length, up to 64 AN<br><strong>Description: </strong>Customer e-mail address.

        :return: The customer_email of this Customer.
        :rtype: str
        """
        return self._customer_email

    @customer_email.setter
    def customer_email(self, customer_email):
        """Sets the customer_email of this Customer.

        <strong>Format: </strong>Variable length, up to 64 AN<br><strong>Description: </strong>Customer e-mail address.

        :param customer_email: The customer_email of this Customer.
        :type customer_email: str
        """

        self._customer_email = customer_email

    @property
    def customer_firm_name(self):
        """Gets the customer_firm_name of this Customer.

        <strong>Format: </strong>Variable length, up to 64 AN<br><strong>Description: </strong>Customer Business name if applicable.<br><strong>Conditional Requirement: </strong>Either customer first and last name or firm name is required. 

        :return: The customer_firm_name of this Customer.
        :rtype: str
        """
        return self._customer_firm_name

    @customer_firm_name.setter
    def customer_firm_name(self, customer_firm_name):
        """Sets the customer_firm_name of this Customer.

        <strong>Format: </strong>Variable length, up to 64 AN<br><strong>Description: </strong>Customer Business name if applicable.<br><strong>Conditional Requirement: </strong>Either customer first and last name or firm name is required. 

        :param customer_firm_name: The customer_firm_name of this Customer.
        :type customer_firm_name: str
        """

        self._customer_firm_name = customer_firm_name

    @property
    def customer_first_name(self):
        """Gets the customer_first_name of this Customer.

        <strong>Format: </strong>Variable length, up to 32 AN<br><strong>Description: </strong>Customer first name.<br><strong>Conditional Requirement: </strong>Either customer first and last name or firm name is required. 

        :return: The customer_first_name of this Customer.
        :rtype: str
        """
        return self._customer_first_name

    @customer_first_name.setter
    def customer_first_name(self, customer_first_name):
        """Sets the customer_first_name of this Customer.

        <strong>Format: </strong>Variable length, up to 32 AN<br><strong>Description: </strong>Customer first name.<br><strong>Conditional Requirement: </strong>Either customer first and last name or firm name is required. 

        :param customer_first_name: The customer_first_name of this Customer.
        :type customer_first_name: str
        """

        self._customer_first_name = customer_first_name

    @property
    def customer_last_name(self):
        """Gets the customer_last_name of this Customer.

        <strong>Format: </strong>Variable length, up to 32 AN<br><strong>Description: </strong>Customer last name.<br><strong>Conditional Requirement: </strong>Either customer first and last name or firm name is required. 

        :return: The customer_last_name of this Customer.
        :rtype: str
        """
        return self._customer_last_name

    @customer_last_name.setter
    def customer_last_name(self, customer_last_name):
        """Sets the customer_last_name of this Customer.

        <strong>Format: </strong>Variable length, up to 32 AN<br><strong>Description: </strong>Customer last name.<br><strong>Conditional Requirement: </strong>Either customer first and last name or firm name is required. 

        :param customer_last_name: The customer_last_name of this Customer.
        :type customer_last_name: str
        """

        self._customer_last_name = customer_last_name

    @property
    def customer_phone(self):
        """Gets the customer_phone of this Customer.

        <strong>Format: </strong>Variable length, up to 16 N<br><strong>Description: </strong>Customer phone number.

        :return: The customer_phone of this Customer.
        :rtype: str
        """
        return self._customer_phone

    @customer_phone.setter
    def customer_phone(self, customer_phone):
        """Sets the customer_phone of this Customer.

        <strong>Format: </strong>Variable length, up to 16 N<br><strong>Description: </strong>Customer phone number.

        :param customer_phone: The customer_phone of this Customer.
        :type customer_phone: str
        """

        self._customer_phone = customer_phone

    @property
    def shipping_addresses(self):
        """Gets the shipping_addresses of this Customer.

        List of shipping addresses for customer.

        :return: The shipping_addresses of this Customer.
        :rtype: List[ShippingAddress]
        """
        return self._shipping_addresses

    @shipping_addresses.setter
    def shipping_addresses(self, shipping_addresses):
        """Sets the shipping_addresses of this Customer.

        List of shipping addresses for customer.

        :param shipping_addresses: The shipping_addresses of this Customer.
        :type shipping_addresses: List[ShippingAddress]
        """

        self._shipping_addresses = shipping_addresses
