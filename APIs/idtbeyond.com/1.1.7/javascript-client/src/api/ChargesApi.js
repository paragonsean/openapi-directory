/**
 * Active Documentation for /v1
 * Our active docs provide the ability to test out your account and to see the responses to your queries. The services are RESTful, and are accessed using standard HTTP methods over a secure HTTPS channel. Requests and responses are currently sent in JSON format, and have a base URL of /v1.
 *
 * The version of the OpenAPI document: 1.1.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* Charges service.
* @module api/ChargesApi
* @version 1.1.7
*/
export default class ChargesApi {

    /**
    * Constructs a new ChargesApi. 
    * @alias module:api/ChargesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the iatuChargesReportsAllCsvGet operation.
     * @callback module:api/ChargesApi~iatuChargesReportsAllCsvGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List of account charges in CSV
     * Returns charges by date range in CSV.
     * @param {String} xIdtBeyondAppId Application ID you would like to use
     * @param {String} xIdtBeyondAppKey Application KEY you would like to use
     * @param {String} dateFrom The beginning date of the search IN YYYY-MM-DD format (America/New_York timezone). '2016-01-28'
     * @param {String} dateTo The ending date of the search IN YYYY-MM-DD format (America/New_York timezone). '2016-01-28'
     * @param {module:api/ChargesApi~iatuChargesReportsAllCsvGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    iatuChargesReportsAllCsvGet(xIdtBeyondAppId, xIdtBeyondAppKey, dateFrom, dateTo, callback) {
      let postBody = null;
      // verify the required parameter 'xIdtBeyondAppId' is set
      if (xIdtBeyondAppId === undefined || xIdtBeyondAppId === null) {
        throw new Error("Missing the required parameter 'xIdtBeyondAppId' when calling iatuChargesReportsAllCsvGet");
      }
      // verify the required parameter 'xIdtBeyondAppKey' is set
      if (xIdtBeyondAppKey === undefined || xIdtBeyondAppKey === null) {
        throw new Error("Missing the required parameter 'xIdtBeyondAppKey' when calling iatuChargesReportsAllCsvGet");
      }
      // verify the required parameter 'dateFrom' is set
      if (dateFrom === undefined || dateFrom === null) {
        throw new Error("Missing the required parameter 'dateFrom' when calling iatuChargesReportsAllCsvGet");
      }
      // verify the required parameter 'dateTo' is set
      if (dateTo === undefined || dateTo === null) {
        throw new Error("Missing the required parameter 'dateTo' when calling iatuChargesReportsAllCsvGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'date_from': dateFrom,
        'date_to': dateTo
      };
      let headerParams = {
        'x-idt-beyond-app-id': xIdtBeyondAppId,
        'x-idt-beyond-app-key': xIdtBeyondAppKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/iatu/charges/reports/all.csv', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the iatuChargesReportsAllGet operation.
     * @callback module:api/ChargesApi~iatuChargesReportsAllGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List of account charges in JSON
     * Returns charges by date range.
     * @param {String} xIdtBeyondAppId Application ID you would like to use
     * @param {String} xIdtBeyondAppKey Application KEY you would like to use
     * @param {String} dateFrom The beginning date of the search IN YYYY-MM-DD format (America/New_York timezone). '2016-01-28'
     * @param {String} dateTo The ending date of the search IN YYYY-MM-DD format (America/New_York timezone). '2016-01-28'
     * @param {module:api/ChargesApi~iatuChargesReportsAllGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    iatuChargesReportsAllGet(xIdtBeyondAppId, xIdtBeyondAppKey, dateFrom, dateTo, callback) {
      let postBody = null;
      // verify the required parameter 'xIdtBeyondAppId' is set
      if (xIdtBeyondAppId === undefined || xIdtBeyondAppId === null) {
        throw new Error("Missing the required parameter 'xIdtBeyondAppId' when calling iatuChargesReportsAllGet");
      }
      // verify the required parameter 'xIdtBeyondAppKey' is set
      if (xIdtBeyondAppKey === undefined || xIdtBeyondAppKey === null) {
        throw new Error("Missing the required parameter 'xIdtBeyondAppKey' when calling iatuChargesReportsAllGet");
      }
      // verify the required parameter 'dateFrom' is set
      if (dateFrom === undefined || dateFrom === null) {
        throw new Error("Missing the required parameter 'dateFrom' when calling iatuChargesReportsAllGet");
      }
      // verify the required parameter 'dateTo' is set
      if (dateTo === undefined || dateTo === null) {
        throw new Error("Missing the required parameter 'dateTo' when calling iatuChargesReportsAllGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'date_from': dateFrom,
        'date_to': dateTo
      };
      let headerParams = {
        'x-idt-beyond-app-id': xIdtBeyondAppId,
        'x-idt-beyond-app-key': xIdtBeyondAppKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/iatu/charges/reports/all', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
