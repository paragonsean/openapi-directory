/**
 * Active Documentation for /v1
 * Our active docs provide the ability to test out your account and to see the responses to your queries. The services are RESTful, and are accessed using standard HTTP methods over a secure HTTPS channel. Requests and responses are currently sent in JSON format, and have a base URL of /v1.
 *
 * The version of the OpenAPI document: 1.1.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* Utilities service.
* @module api/UtilitiesApi
* @version 1.1.7
*/
export default class UtilitiesApi {

    /**
    * Constructs a new UtilitiesApi. 
    * @alias module:api/UtilitiesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the iatuNumberValidatorGet operation.
     * @callback module:api/UtilitiesApi~iatuNumberValidatorGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Mobile number validation
     * Checks to verify if the phone number is valid for the country supplied.
     * @param {String} xIdtBeyondAppId Application ID you would like to use
     * @param {String} xIdtBeyondAppKey Application KEY you would like to use
     * @param {String} countryCode 2-digit code of the country in ISO 3166 format. 'BR'
     * @param {String} mobileNumber The mobile number you would like to validate. '5521983115555'
     * @param {module:api/UtilitiesApi~iatuNumberValidatorGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    iatuNumberValidatorGet(xIdtBeyondAppId, xIdtBeyondAppKey, countryCode, mobileNumber, callback) {
      let postBody = null;
      // verify the required parameter 'xIdtBeyondAppId' is set
      if (xIdtBeyondAppId === undefined || xIdtBeyondAppId === null) {
        throw new Error("Missing the required parameter 'xIdtBeyondAppId' when calling iatuNumberValidatorGet");
      }
      // verify the required parameter 'xIdtBeyondAppKey' is set
      if (xIdtBeyondAppKey === undefined || xIdtBeyondAppKey === null) {
        throw new Error("Missing the required parameter 'xIdtBeyondAppKey' when calling iatuNumberValidatorGet");
      }
      // verify the required parameter 'countryCode' is set
      if (countryCode === undefined || countryCode === null) {
        throw new Error("Missing the required parameter 'countryCode' when calling iatuNumberValidatorGet");
      }
      // verify the required parameter 'mobileNumber' is set
      if (mobileNumber === undefined || mobileNumber === null) {
        throw new Error("Missing the required parameter 'mobileNumber' when calling iatuNumberValidatorGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'country_code': countryCode,
        'mobile_number': mobileNumber
      };
      let headerParams = {
        'x-idt-beyond-app-id': xIdtBeyondAppId,
        'x-idt-beyond-app-key': xIdtBeyondAppKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/iatu/number-validator', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the iatuProductsPromotionsGet operation.
     * @callback module:api/UtilitiesApi~iatuProductsPromotionsGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Current promotions
     * Returns a JSON of the current promotions.
     * @param {String} xIdtBeyondAppId Application ID you would like to use
     * @param {String} xIdtBeyondAppKey Application KEY you would like to use
     * @param {module:api/UtilitiesApi~iatuProductsPromotionsGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    iatuProductsPromotionsGet(xIdtBeyondAppId, xIdtBeyondAppKey, callback) {
      let postBody = null;
      // verify the required parameter 'xIdtBeyondAppId' is set
      if (xIdtBeyondAppId === undefined || xIdtBeyondAppId === null) {
        throw new Error("Missing the required parameter 'xIdtBeyondAppId' when calling iatuProductsPromotionsGet");
      }
      // verify the required parameter 'xIdtBeyondAppKey' is set
      if (xIdtBeyondAppKey === undefined || xIdtBeyondAppKey === null) {
        throw new Error("Missing the required parameter 'xIdtBeyondAppKey' when calling iatuProductsPromotionsGet");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'x-idt-beyond-app-id': xIdtBeyondAppId,
        'x-idt-beyond-app-key': xIdtBeyondAppKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/iatu/products/promotions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the statusGet operation.
     * @callback module:api/UtilitiesApi~statusGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Status check
     * Returns a JSON of the API status.
     * @param {String} xIdtBeyondAppId Application ID you would like to use
     * @param {String} xIdtBeyondAppKey Application KEY you would like to use
     * @param {module:api/UtilitiesApi~statusGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    statusGet(xIdtBeyondAppId, xIdtBeyondAppKey, callback) {
      let postBody = null;
      // verify the required parameter 'xIdtBeyondAppId' is set
      if (xIdtBeyondAppId === undefined || xIdtBeyondAppId === null) {
        throw new Error("Missing the required parameter 'xIdtBeyondAppId' when calling statusGet");
      }
      // verify the required parameter 'xIdtBeyondAppKey' is set
      if (xIdtBeyondAppKey === undefined || xIdtBeyondAppKey === null) {
        throw new Error("Missing the required parameter 'xIdtBeyondAppKey' when calling statusGet");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'x-idt-beyond-app-id': xIdtBeyondAppId,
        'x-idt-beyond-app-key': xIdtBeyondAppKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/status', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
