# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TopupsReports(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_transaction_id: str='trans0123456789', date_from: str='2016-01-28', date_to: str='2016-01-28', to_service_number: str='123456789', type_of_report: str='client_transaction_id or to_service_number'):
        """TopupsReports - a model defined in OpenAPI

        :param client_transaction_id: The client_transaction_id of this TopupsReports.
        :param date_from: The date_from of this TopupsReports.
        :param date_to: The date_to of this TopupsReports.
        :param to_service_number: The to_service_number of this TopupsReports.
        :param type_of_report: The type_of_report of this TopupsReports.
        """
        self.openapi_types = {
            'client_transaction_id': str,
            'date_from': str,
            'date_to': str,
            'to_service_number': str,
            'type_of_report': str
        }

        self.attribute_map = {
            'client_transaction_id': 'client_transaction_id',
            'date_from': 'date_from',
            'date_to': 'date_to',
            'to_service_number': 'to_service_number',
            'type_of_report': 'type_of_report'
        }

        self._client_transaction_id = client_transaction_id
        self._date_from = date_from
        self._date_to = date_to
        self._to_service_number = to_service_number
        self._type_of_report = type_of_report

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TopupsReports':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TopupsReports of this TopupsReports.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_transaction_id(self):
        """Gets the client_transaction_id of this TopupsReports.

        The UNIQUE 15 char ID used to track topups. 'trans0123456789'

        :return: The client_transaction_id of this TopupsReports.
        :rtype: str
        """
        return self._client_transaction_id

    @client_transaction_id.setter
    def client_transaction_id(self, client_transaction_id):
        """Sets the client_transaction_id of this TopupsReports.

        The UNIQUE 15 char ID used to track topups. 'trans0123456789'

        :param client_transaction_id: The client_transaction_id of this TopupsReports.
        :type client_transaction_id: str
        """

        self._client_transaction_id = client_transaction_id

    @property
    def date_from(self):
        """Gets the date_from of this TopupsReports.

        The beginning date of the search IN YYYY-MM-DD format (America/New_York timezone). Not used in query by to_service_number. '2016-01-28'

        :return: The date_from of this TopupsReports.
        :rtype: str
        """
        return self._date_from

    @date_from.setter
    def date_from(self, date_from):
        """Sets the date_from of this TopupsReports.

        The beginning date of the search IN YYYY-MM-DD format (America/New_York timezone). Not used in query by to_service_number. '2016-01-28'

        :param date_from: The date_from of this TopupsReports.
        :type date_from: str
        """

        self._date_from = date_from

    @property
    def date_to(self):
        """Gets the date_to of this TopupsReports.

        The ending date of the search IN YYYY-MM-DD format (America/New_York timezone). Not used in query by to_service_number. '2016-01-28'

        :return: The date_to of this TopupsReports.
        :rtype: str
        """
        return self._date_to

    @date_to.setter
    def date_to(self, date_to):
        """Sets the date_to of this TopupsReports.

        The ending date of the search IN YYYY-MM-DD format (America/New_York timezone). Not used in query by to_service_number. '2016-01-28'

        :param date_to: The date_to of this TopupsReports.
        :type date_to: str
        """

        self._date_to = date_to

    @property
    def to_service_number(self):
        """Gets the to_service_number of this TopupsReports.

        Enter the to_service_number returned in the response to track the current transaction status. '0123456789'

        :return: The to_service_number of this TopupsReports.
        :rtype: str
        """
        return self._to_service_number

    @to_service_number.setter
    def to_service_number(self, to_service_number):
        """Sets the to_service_number of this TopupsReports.

        Enter the to_service_number returned in the response to track the current transaction status. '0123456789'

        :param to_service_number: The to_service_number of this TopupsReports.
        :type to_service_number: str
        """

        self._to_service_number = to_service_number

    @property
    def type_of_report(self):
        """Gets the type_of_report of this TopupsReports.

        The type of query you would like to search by.

        :return: The type_of_report of this TopupsReports.
        :rtype: str
        """
        return self._type_of_report

    @type_of_report.setter
    def type_of_report(self, type_of_report):
        """Sets the type_of_report of this TopupsReports.

        The type of query you would like to search by.

        :param type_of_report: The type_of_report of this TopupsReports.
        :type type_of_report: str
        """

        self._type_of_report = type_of_report
