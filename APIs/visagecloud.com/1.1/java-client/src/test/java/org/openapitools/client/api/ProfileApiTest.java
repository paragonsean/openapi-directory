/*
 * VisageCloud
 * Face search, recognition & classification API. Just make a call to our REST API each time your app needs to access face recognition and classification capabilities.
 *
 * The version of the OpenAPI document: 1.1
 * Contact: office@visagecloud.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.RestResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProfileApi
 */
@Disabled
public class ProfileApiTest {

    private final ProfileApi api = new ProfileApi();

    /**
     * Creates a new profile with no faces associated to it (empty profile)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addProfileUsingPOSTTest() throws ApiException {
        String accessKey = null;
        String secretKey = null;
        String collectionId = null;
        String externalId = null;
        String screenName = null;
        List<String> labels = null;
        String classificationAttributes = null;
        String details = null;
        RestResponse response = api.addProfileUsingPOST(accessKey, secretKey, collectionId, externalId, screenName, labels, classificationAttributes, details);
        // TODO: test validations
    }

    /**
     * Deletes a profile and unmaps all its faces
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteProfile2UsingDELETETest() throws ApiException {
        String accessKey = null;
        String secretKey = null;
        String collectionId = null;
        String profileId = null;
        RestResponse response = api.deleteProfile2UsingDELETE(accessKey, secretKey, collectionId, profileId);
        // TODO: test validations
    }

    /**
     * Deletes a profile and unmaps all its faces
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteProfileUsingDELETETest() throws ApiException {
        String accessKey = null;
        String secretKey = null;
        String collectionId = null;
        String id = null;
        RestResponse response = api.deleteProfileUsingDELETE(accessKey, secretKey, collectionId, id);
        // TODO: test validations
    }

    /**
     * Gets classification attributes from a profile
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getClassificationAttributesFromProfileUsingGETTest() throws ApiException {
        String accessKey = null;
        String secretKey = null;
        String profileId = null;
        String collectionId = null;
        RestResponse response = api.getClassificationAttributesFromProfileUsingGET(accessKey, secretKey, profileId, collectionId);
        // TODO: test validations
    }

    /**
     * Gets all the faceHashes associated to a profile
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFacesFromProfileUsingGETTest() throws ApiException {
        String accessKey = null;
        String secretKey = null;
        String profileId = null;
        String collectionId = null;
        RestResponse response = api.getFacesFromProfileUsingGET(accessKey, secretKey, profileId, collectionId);
        // TODO: test validations
    }

    /**
     * Gets the enrollment status of a profile: information on whether it is suitable for authentication.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProfileEnrollmentStatusUsingGETTest() throws ApiException {
        String accessKey = null;
        String secretKey = null;
        String profileId = null;
        String collectionId = null;
        RestResponse response = api.getProfileEnrollmentStatusUsingGET(accessKey, secretKey, profileId, collectionId);
        // TODO: test validations
    }

    /**
     * Retrieves a profile
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProfileUsingGETTest() throws ApiException {
        String accessKey = null;
        String secretKey = null;
        String collectionId = null;
        String id = null;
        String withFaces = null;
        RestResponse response = api.getProfileUsingGET(accessKey, secretKey, collectionId, id, withFaces);
        // TODO: test validations
    }

    /**
     * Maps classification attributes to a profile
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mapClassificationAttributesToProfileUsingPUTTest() throws ApiException {
        String accessKey = null;
        String secretKey = null;
        String profileId = null;
        String collectionId = null;
        String classificationAttributes = null;
        RestResponse response = api.mapClassificationAttributesToProfileUsingPUT(accessKey, secretKey, profileId, collectionId, classificationAttributes);
        // TODO: test validations
    }

    /**
     * Adds (maps) a list of faces, identified by faceHashes, to a profile, identified by profileId
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mapFacesToProfileUsingPOSTTest() throws ApiException {
        String accessKey = null;
        String secretKey = null;
        String faceHashes = null;
        String profileId = null;
        String collectionId = null;
        RestResponse response = api.mapFacesToProfileUsingPOST(accessKey, secretKey, faceHashes, profileId, collectionId);
        // TODO: test validations
    }

    /**
     * Removes classification attributes from a profile
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeClassificationAttributesFromProfileUsingDELETETest() throws ApiException {
        String accessKey = null;
        String secretKey = null;
        String profileId = null;
        String collectionId = null;
        RestResponse response = api.removeClassificationAttributesFromProfileUsingDELETE(accessKey, secretKey, profileId, collectionId);
        // TODO: test validations
    }

    /**
     * Removes (unmaps) a list of faces, identified by faceHashes, from a profile, identified by profileId
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeFacesFromProfileUsingDELETETest() throws ApiException {
        String accessKey = null;
        String secretKey = null;
        String faceHashes = null;
        String profileId = null;
        String collectionId = null;
        RestResponse response = api.removeFacesFromProfileUsingDELETE(accessKey, secretKey, faceHashes, profileId, collectionId);
        // TODO: test validations
    }

    /**
     * Update an existing profile with a given id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateProfileUsingPATCHTest() throws ApiException {
        String accessKey = null;
        String secretKey = null;
        String id = null;
        String collectionId = null;
        String externalId = null;
        String screenName = null;
        List<String> labels = null;
        String classificationAttributes = null;
        String details = null;
        RestResponse response = api.updateProfileUsingPATCH(accessKey, secretKey, id, collectionId, externalId, screenName, labels, classificationAttributes, details);
        // TODO: test validations
    }

}
