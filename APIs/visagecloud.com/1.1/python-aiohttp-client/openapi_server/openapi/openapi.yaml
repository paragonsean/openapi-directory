openapi: 3.0.1
info:
  contact:
    email: office@visagecloud.com
    name: VisageCloud
    url: https://visagecloud.com
  description: "Face search, recognition & classification API. Just make a call to\
    \ our REST API each time your app needs to access face recognition and classification\
    \ capabilities."
  license:
    name: As per Developer Terms of Use
    url: https://visagecloud.com/developer-terms-of-use
  termsOfService: https://visagecloud.com/terms-of-use
  title: VisageCloud
  version: "1.1"
  x-apisguru-categories:
  - search
  x-origin:
  - format: swagger
    url: https://visagecloud.com/v2/api-docs
    version: "2.0"
  x-providerName: visagecloud.com
servers:
- url: https://visagecloud.com/
tags:
- description: Retrieve analytics for presence and audience
  name: Analytics for presence and audience
- description: Manages Streams
  name: Stream
- description: Performs image-recognition related operations
  name: Analysis
- description: Create classifiers on existing faces
  name: Classifier
- description: Manages collections
  name: Collection
- description: Manages profiles associated with collections
  name: Profile
- description: Account Controller
  name: account-controller
paths:
  /rest/v1.1/account/account:
    get:
      operationId: get_account_by_access_key_using_get
      parameters:
      - description: accessKey
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: secretKey
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Get account information by accessKey and secretKey
      tags:
      - account-controller
      x-openapi-router-controller: openapi_server.controllers.account_controller_controller
  /rest/v1.1/account/billing:
    get:
      operationId: get_billing_per_account_using_get
      parameters:
      - description: accessKey
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: secretKey
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      - description: startDateTime
        in: query
        name: startDateTime
        schema:
          format: date-time
          type: string
      - description: endDateTime
        in: query
        name: endDateTime
        schema:
          format: date-time
          type: string
      - description: dateTemplate
        in: query
        name: dateTemplate
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Get billing information by accessKey and secretKey
      tags:
      - account-controller
      x-openapi-router-controller: openapi_server.controllers.account_controller_controller
  /rest/v1.1/account/changePassword:
    post:
      operationId: change_password_using_post
      parameters:
      - description: email
        in: query
        name: email
        required: true
        schema:
          type: string
      - description: oldPassword
        in: query
        name: oldPassword
        required: true
        schema:
          type: string
      - description: newPassword
        in: query
        name: newPassword
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "201":
          content: {}
          description: Created
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Change password for an account using old password
      tags:
      - account-controller
      x-openapi-router-controller: openapi_server.controllers.account_controller_controller
  /rest/v1.1/account/login:
    post:
      operationId: login_with_email_using_post
      parameters:
      - description: email
        in: query
        name: email
        required: true
        schema:
          type: string
      - description: password
        in: query
        name: password
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "201":
          content: {}
          description: Created
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Get account information including accessKey and secretKey by email
        and password
      tags:
      - account-controller
      x-openapi-router-controller: openapi_server.controllers.account_controller_controller
  /rest/v1.1/analysis/compare:
    get:
      operationId: compare_faces_using_get
      parameters:
      - description: The accessKey provided by VisageCloud
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: The secretKey or readOnlyKey provided by VisageCloud
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      - description: "The IDs of the faces which you want compared, comma-separated"
        explode: true
        in: query
        name: faceHashes
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Show details
        in: query
        name: showDetails
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: "Compare several faces identified by faceHash, without depending on\
        \ mapping faces to profiles"
      tags:
      - Analysis
      x-openapi-router-controller: openapi_server.controllers.analysis_controller
  /rest/v1.1/analysis/detection:
    post:
      operationId: perform_analysis_using_post
      parameters:
      - description: The accessKey provided by VisageCloud
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: The secretKey or readOnlyKey provided by VisageCloud
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      - description: Boolean value indicating whether you want the picture of the
          analysis to be stored for later retrieval
        in: query
        name: storeAnalysisPicture
        schema:
          default: true
          type: boolean
      - description: Boolean value indicating whether you want the faces inside the
          picture to be stored for later retrieval
        in: query
        name: storeFacePictures
        schema:
          default: true
          type: boolean
      - description: Boolean value indicating whether you want the result of the analysis
          to be stored
        in: query
        name: storeResult
        schema:
          default: true
          type: boolean
      - description: How many seconds the results should be retained in stoarage?
        in: query
        name: retentionTime
        schema:
          format: int32
          type: integer
      - description: "The URL of the picture, assuming it is served by a third party\
          \ server. Server should be accesible from the Internet or through another\
          \ netwoek by VisageCloud infrastructure"
        in: query
        name: pictureURL
        schema:
          type: string
      - description: Algorithm version (V2 is more performant but not backward compatible)
        in: query
        name: algorithmVersion
        schema:
          default: V2
          enum:
          - V1
          - V2
          type: string
      - description: Auto-rotate to find flipped or rotate faces
        in: query
        name: autoRotate
        schema:
          default: false
          type: boolean
      - description: Skip EXIF rotation procesing
        in: query
        name: skipEXIF
        schema:
          default: false
          type: boolean
      - description: "Waits until the picture is successfully uploaded, before returning\
          \ the response back the the client"
        in: query
        name: waitForPictureUpload
        schema:
          default: false
          type: boolean
      - description: "[For advanced users only] Change feature filters for robustness\
          \ of feature extraction. Tweaking this parameter may affect per"
        explode: true
        in: query
        name: filters
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "[For advanced users only] Options for preprocessing of image."
        in: query
        name: options
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/performAnalysisUsingPOST_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "201":
          content: {}
          description: Created
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Perform detection on a given picture or picture URL
      tags:
      - Analysis
      x-openapi-router-controller: openapi_server.controllers.analysis_controller
      x-codegen-request-body-name: body
  /rest/v1.1/analysis/listLatest:
    get:
      operationId: retrive_latest_using_get
      parameters:
      - description: The accessKey provided by VisageCloud
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: The secretKey or readOnlyKey provided by VisageCloud
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      - description: How many records to retrieve at a time
        in: query
        name: count
        schema:
          default: 100
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Retrieve the last *count* operations per current account
      tags:
      - Analysis
      x-openapi-router-controller: openapi_server.controllers.analysis_controller
  /rest/v1.1/analysis/recognition:
    post:
      operationId: perform_recognition_using_post
      parameters:
      - description: The accessKey provided by VisageCloud
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: The secretKey or readOnlyKey provided by VisageCloud
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      - description: Boolean value indicating whether you want the picture of the
          analysis to be stored for later retrieval
        in: query
        name: storeAnalysisPicture
        schema:
          default: true
          type: boolean
      - description: Boolean value indicating whether you want the faces inside the
          picture to be stored for later retrieval
        in: query
        name: storeFacePictures
        schema:
          default: true
          type: boolean
      - description: Boolean value indicating whether you want the result of the analysis
          to be stored
        in: query
        name: storeResult
        schema:
          default: true
          type: boolean
      - description: How many seconds the results should be retained in stoarage?
        in: query
        name: retentionTime
        schema:
          format: int32
          type: integer
      - description: Uniquely identified collection that can store multiple profiles
        in: query
        name: collectionId
        required: true
        schema:
          type: string
      - description: Labels associated with the given picture or picture URL
        explode: true
        in: query
        name: labels
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filters that will be applied on the recognition operation
        explode: true
        in: query
        name: attributeFilters
        schema:
          enum:
          - NO_FILTER
          - GENDER_FILTER
          - AGE_GROUP_FILTER
          items:
            enum:
            - NO_FILTER
            - GENDER_FILTER
            - AGE_GROUP_FILTER
            type: string
          type: array
        style: form
      - description: The URL of the picture
        in: query
        name: pictureURL
        schema:
          type: string
      - description: Algorithm version (V2 is more performant but not backward compatible)
        in: query
        name: algorithmVersion
        schema:
          default: V2
          enum:
          - V1
          - V2
          type: string
      - description: Auto-rotate to find flipped or rotate faces
        in: query
        name: autoRotate
        schema:
          default: false
          type: boolean
      - description: Skip EXIF rotation procesing
        in: query
        name: skipEXIF rotation processing
        schema:
          default: false
          type: boolean
      - description: "Waits until the picture is successfully uploaded, before returning\
          \ the response back the the client"
        in: query
        name: waitForPictureUpload
        schema:
          default: false
          type: boolean
      - description: "[For advanced users only] Change feature filters for robustness\
          \ of feature extraction. Tweaking this parameter may affect per"
        explode: true
        in: query
        name: filters
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "[For advanced users only] Options for preprocessing of image."
        in: query
        name: options
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/performRecognitionUsingPOST_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "201":
          content: {}
          description: Created
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Perform labeled recognition on a given picture or picture URL
      tags:
      - Analysis
      x-openapi-router-controller: openapi_server.controllers.analysis_controller
      x-codegen-request-body-name: body
  /rest/v1.1/analysis/retrieve:
    get:
      operationId: retrieve_analysis_using_get
      parameters:
      - description: The accessKey provided by VisageCloud
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: The secretKey or readOnlyKey provided by VisageCloud
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      - description: The ID of the analysis for which the data will be retrieved
        in: query
        name: analysisId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Retrieve a complete analysis object including both detection and recognition
        information
      tags:
      - Analysis
      x-openapi-router-controller: openapi_server.controllers.analysis_controller
  /rest/v1.1/analytics/counting:
    post:
      operationId: counter_using_post
      parameters:
      - description: The accessKey provided by VisageCloud
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: The secretKey or readOnlyKey provided by VisageCloud
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      - description: Collection ids
        explode: true
        in: query
        name: collectionIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Stream Ids
        explode: true
        in: query
        name: streamIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: startDateTime
        in: query
        name: startDateTime
        schema:
          format: date-time
          type: string
      - description: endDateTime
        in: query
        name: endDateTime
        schema:
          format: date-time
          type: string
      - description: visitDuration
        in: query
        name: visitDuration
        schema:
          default: 3600000
          format: int64
          type: integer
      - description: maxIterations
        in: query
        name: maxIterations
        schema:
          default: 1
          format: int32
          type: integer
      - description: maxBatchIterations
        in: query
        name: maxBatchIterations
        schema:
          default: 1
          format: int32
          type: integer
      - description: minNeighborsMergedPerIteration
        in: query
        name: minNeighborsMergedPerIteration
        schema:
          default: 5
          format: int32
          type: integer
      - description: mergingStep
        in: query
        name: mergingStep
        schema:
          default: 1.0
          format: double
          type: number
      - description: shuffling
        in: query
        name: shuffling
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "201":
          content: {}
          description: Created
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Count individuals in streams or collections
      tags:
      - Analytics for presence and audience
      x-openapi-router-controller: openapi_server.controllers.analytics_for_presence_and_audience_controller
  /rest/v1.1/analytics/presence/timeseries:
    post:
      operationId: presence_timeseries_using_post
      parameters:
      - description: The accessKey provided by VisageCloud
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: The secretKey or readOnlyKey provided by VisageCloud
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      - description: Stream Ids
        explode: true
        in: query
        name: streamIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: startDateTime
        in: query
        name: startDateTime
        schema:
          format: date-time
          type: string
      - description: endDateTime
        in: query
        name: endDateTime
        schema:
          format: date-time
          type: string
      - description: step
        in: query
        name: step
        schema:
          default: 3600
          format: int64
          type: integer
      - description: attributes
        explode: true
        in: query
        name: attributes
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "201":
          content: {}
          description: Created
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: "Show audience (based on number of occurrences of each person) breakdown\
        \ per declared attribute (age, gender)."
      tags:
      - Analytics for presence and audience
      x-openapi-router-controller: openapi_server.controllers.analytics_for_presence_and_audience_controller
  /rest/v1.1/analytics/presence/total:
    post:
      operationId: presence_total_using_post
      parameters:
      - description: The accessKey provided by VisageCloud
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: The secretKey or readOnlyKey provided by VisageCloud
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      - description: Stream Ids
        explode: true
        in: query
        name: streamIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: startDateTime
        in: query
        name: startDateTime
        schema:
          format: date-time
          type: string
      - description: endDateTime
        in: query
        name: endDateTime
        schema:
          format: date-time
          type: string
      - description: attributes
        explode: true
        in: query
        name: attributes
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "201":
          content: {}
          description: Created
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: "Show presence (based on number of occurences of each face) breakdown\
        \ per declared attribute (age, gender)"
      tags:
      - Analytics for presence and audience
      x-openapi-router-controller: openapi_server.controllers.analytics_for_presence_and_audience_controller
  /rest/v1.1/classifier/svm:
    delete:
      operationId: remove_classifer_using_delete
      parameters:
      - description: The accessKey provided by VisageCloud
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: The secretKey or readOnlyKey provided by VisageCloud
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      - description: The id of the classifier that will be removed
        in: query
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "204":
          content: {}
          description: No Content
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
      summary: Delete existing classifier
      tags:
      - Classifier
      x-openapi-router-controller: openapi_server.controllers.classifier_controller
    get:
      operationId: get_classifer_full_using_get
      parameters:
      - description: The accessKey provided by VisageCloud
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: The secretKey or readOnlyKey provided by VisageCloud
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      - description: The id of the classifier that you want the status for
        in: query
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Get classifier full
      tags:
      - Classifier
      x-openapi-router-controller: openapi_server.controllers.classifier_controller
    post:
      operationId: add_svm_classifier_using_post
      parameters:
      - description: The accessKey provided by VisageCloud
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: The secretKey or readOnlyKey provided by VisageCloud
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      - description: The name of the SVM classifier that will be created
        in: query
        name: name
        required: true
        schema:
          type: string
      - description: Collection ids
        explode: true
        in: query
        name: collectionIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Preprocessor
        in: query
        name: preprocessor
        schema:
          default: FeaturePreprocessor
          type: string
      - description: Classification attribute name
        in: query
        name: classificationAttributeName
        required: true
        schema:
          type: string
      - description: Consider view point
        in: query
        name: considerViewPoints
        schema:
          default: false
          type: boolean
      - description: Seed for divididing training and evaluation sets
        in: query
        name: seed
        schema:
          default: 179425537
          format: int32
          type: integer
      - description: Training ratio
        in: query
        name: trainingRatio
        schema:
          default: 0.8
          format: double
          type: number
      - description: Probability parameter
        in: query
        name: probabilityParameter
        schema:
          default: 1
          format: int32
          type: integer
      - description: Gamma parameter
        in: query
        name: gammaParameter
        schema:
          default: 0.5
          format: double
          type: number
      - description: Nu parameter
        in: query
        name: nuParameter
        schema:
          default: 0.25
          format: double
          type: number
      - description: c parameter
        in: query
        name: cParameter
        schema:
          default: 1.0
          format: double
          type: number
      - description: SVM type parameter
        in: query
        name: svmTypeParameter
        schema:
          default: 0
          format: int32
          type: integer
      - description: Kernel type parameter
        in: query
        name: kernelTypeParameter
        schema:
          default: 0
          format: int32
          type: integer
      - description: Cache size parameter
        in: query
        name: cacheSizeParameter
        schema:
          default: 500.0
          format: double
          type: number
      - description: Eps parameter
        in: query
        name: epsParameter
        schema:
          default: 0.001
          format: double
          type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "201":
          content: {}
          description: Created
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Create new SVM classifier with given name
      tags:
      - Classifier
      x-openapi-router-controller: openapi_server.controllers.classifier_controller
  /rest/v1.1/classifier/svm/status:
    get:
      operationId: get_classifer_status_using_get
      parameters:
      - description: The accessKey provided by VisageCloud
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: The secretKey or readOnlyKey provided by VisageCloud
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      - description: The id of the classifier that you want the status for
        in: query
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Get classifer status
      tags:
      - Classifier
      x-openapi-router-controller: openapi_server.controllers.classifier_controller
  /rest/v1.1/collection/:
    get:
      operationId: get_all_collections_using_get
      parameters:
      - description: The accessKey provided by VisageCloud
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: The secretKey or readOnlyKey provided by VisageCloud
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Retrieve all collections
      tags:
      - Collection
      x-openapi-router-controller: openapi_server.controllers.collection_controller
    post:
      operationId: add_collection_using_post
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/addCollectionUsingPOST_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "201":
          content: {}
          description: Created
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Create new empty collection with given name
      tags:
      - Collection
      x-openapi-router-controller: openapi_server.controllers.collection_controller
      x-codegen-request-body-name: body
  /rest/v1.1/collection/all:
    get:
      deprecated: true
      operationId: get_all_collections2_using_get
      parameters:
      - description: The accessKey provided by VisageCloud
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: The secretKey or readOnlyKey provided by VisageCloud
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Retrieve all collections
      tags:
      - Collection
      x-openapi-router-controller: openapi_server.controllers.collection_controller
  /rest/v1.1/collection/collection:
    delete:
      deprecated: true
      operationId: delete_collection2_using_delete
      parameters:
      - description: The accessKey provided by VisageCloud
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: The secretKey provided by VisageCloud
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      - description: The id of the collection that will be removed
        in: query
        name: collectionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "204":
          content: {}
          description: No Content
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
      summary: Delete existing collection with associated profiles and faces.
      tags:
      - Collection
      x-openapi-router-controller: openapi_server.controllers.collection_controller
    get:
      deprecated: true
      operationId: get_collection2_using_get
      parameters:
      - description: The accessKey provided by VisageCloud
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: The secretKey or readOnlyKey provided by VisageCloud
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      - description: The id of the collection for which the data will be retrieved
        in: query
        name: collectionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Retrieve existing collection content
      tags:
      - Collection
      x-openapi-router-controller: openapi_server.controllers.collection_controller
    post:
      deprecated: true
      operationId: add_collection2_using_post
      parameters:
      - description: The accessKey provided by VisageCloud
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: The secretKey or readOnlyKey provided by VisageCloud
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      - description: The name of the collection that will be created
        in: query
        name: collectionName
        required: true
        schema:
          type: string
      - description: Defined whether to preload collection
        in: query
        name: preload
        schema:
          default: false
          type: boolean
      - description: Defined whether the collection can be evicted
        in: query
        name: evictable
        schema:
          default: true
          type: boolean
      - description: The newly declared purposes of the collection
        explode: true
        in: query
        name: purposes
        schema:
          enum:
          - FEATURES
          - LANDMARKS
          - ATTRIBUTES
          items:
            enum:
            - FEATURES
            - LANDMARKS
            - ATTRIBUTES
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "201":
          content: {}
          description: Created
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Create new empty collection with given name
      tags:
      - Collection
      x-openapi-router-controller: openapi_server.controllers.collection_controller
  /rest/v1.1/collection/export/csv:
    get:
      operationId: export_csv_using_get
      parameters:
      - description: The accessKey provided by VisageCloud
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: The secretKey or readOnlyKey provided by VisageCloud
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      - description: The id of the collection for which the data will be retrieved
        in: query
        name: collectionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StreamingResponseBody'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Retrieve collection content for data analysis.
      tags:
      - Collection
      x-openapi-router-controller: openapi_server.controllers.collection_controller
  /rest/v1.1/collection/purpose:
    put:
      deprecated: true
      operationId: repurpose_collection_using_put
      parameters:
      - description: The accessKey provided by VisageCloud
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: The secretKey provided by VisageCloud
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      - description: The id of the collection for which the data will be retrieved
        in: query
        name: collectionId
        required: true
        schema:
          type: string
      - description: The newly declared purposes of the collection
        explode: true
        in: query
        name: purposes
        required: true
        schema:
          enum:
          - FEATURES
          - LANDMARKS
          - ATTRIBUTES
          items:
            enum:
            - FEATURES
            - LANDMARKS
            - ATTRIBUTES
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "201":
          content: {}
          description: Created
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Change purpose of existing collection
      tags:
      - Collection
      x-openapi-router-controller: openapi_server.controllers.collection_controller
  /rest/v1.1/collection/{id}:
    delete:
      operationId: delete_collection_using_delete
      parameters:
      - description: The accessKey provided by VisageCloud
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: The secretKey provided by VisageCloud
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      - description: The id of the collection that will be removed
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "204":
          content: {}
          description: No Content
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
      summary: Delete existing collection with associated profiles and faces.
      tags:
      - Collection
      x-openapi-router-controller: openapi_server.controllers.collection_controller
    get:
      operationId: get_collection_using_get
      parameters:
      - description: The accessKey provided by VisageCloud
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: The secretKey or readOnlyKey provided by VisageCloud
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      - description: The id of the collection for which the data will be retrieved
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Retrieve existing collection content
      tags:
      - Collection
      x-openapi-router-controller: openapi_server.controllers.collection_controller
    patch:
      operationId: update_collection_using_patch
      parameters:
      - description: The accessKey provided by VisageCloud
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: The secretKey provided by VisageCloud
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      - description: The name of the collection that will be updated
        in: query
        name: name
        schema:
          type: string
      - description: The newly declared purposes of the collection
        explode: true
        in: query
        name: purposes
        schema:
          enum:
          - FEATURES
          - LANDMARKS
          - ATTRIBUTES
          items:
            enum:
            - FEATURES
            - LANDMARKS
            - ATTRIBUTES
            type: string
          type: array
        style: form
      - description: The id of the collection that will be updated
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "204":
          content: {}
          description: No Content
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
      summary: Update an existing collection with a given id
      tags:
      - Collection
      x-openapi-router-controller: openapi_server.controllers.collection_controller
    post:
      deprecated: true
      operationId: update_collection2_using_post
      parameters:
      - description: The accessKey provided by VisageCloud
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: The secretKey provided by VisageCloud
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      - description: The name of the collection that will be updated
        in: query
        name: name
        schema:
          type: string
      - description: The newly declared purposes of the collection
        explode: true
        in: query
        name: purposes
        schema:
          enum:
          - FEATURES
          - LANDMARKS
          - ATTRIBUTES
          items:
            enum:
            - FEATURES
            - LANDMARKS
            - ATTRIBUTES
            type: string
          type: array
        style: form
      - description: The id of the collection that will be updated
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "201":
          content: {}
          description: Created
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Update an existing collection with a given id
      tags:
      - Collection
      x-openapi-router-controller: openapi_server.controllers.collection_controller
  /rest/v1.1/collection/{id}/profile:
    get:
      operationId: get_all_collection_profiles_using_get
      parameters:
      - description: The accessKey provided by VisageCloud
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: The secretKey or readOnlyKey provided by VisageCloud
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      - description: The collection that contains the profile
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Gets all the profiles associated to a collection
      tags:
      - Collection
      x-openapi-router-controller: openapi_server.controllers.collection_controller
  /rest/v1.1/profile/classificationAttributes:
    delete:
      deprecated: true
      operationId: remove_classification_attributes_from_profile_using_delete
      parameters:
      - description: The accessKey provided by VisageCloud
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: The secretKey provided by VisageCloud
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      - description: The profile associated with the classification attributes
        in: query
        name: profileId
        required: true
        schema:
          type: string
      - description: The collection that contains the profile
        in: query
        name: collectionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "204":
          content: {}
          description: No Content
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
      summary: Removes classification attributes from a profile
      tags:
      - Profile
      x-openapi-router-controller: openapi_server.controllers.profile_controller
    get:
      deprecated: true
      operationId: get_classification_attributes_from_profile_using_get
      parameters:
      - description: The accessKey provided by VisageCloud
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: The secretKey or readOnlyKey provided by VisageCloud
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      - description: The profile associated with the classification attributes
        in: query
        name: profileId
        required: true
        schema:
          type: string
      - description: The collection that contains the profile
        in: query
        name: collectionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Gets classification attributes from a profile
      tags:
      - Profile
      x-openapi-router-controller: openapi_server.controllers.profile_controller
    put:
      deprecated: true
      operationId: map_classification_attributes_to_profile_using_put
      parameters:
      - description: The accessKey provided by VisageCloud
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: The secretKey provided by VisageCloud
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      - description: The profile associated with the classification attributes
        in: query
        name: profileId
        required: true
        schema:
          type: string
      - description: The collection that contains the profile
        in: query
        name: collectionId
        required: true
        schema:
          type: string
      - description: Comma separated key:value classification attributes
        in: query
        name: classificationAttributes
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "201":
          content: {}
          description: Created
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Maps classification attributes to a profile
      tags:
      - Profile
      x-openapi-router-controller: openapi_server.controllers.profile_controller
  /rest/v1.1/profile/enrollmentStatus:
    get:
      operationId: get_profile_enrollment_status_using_get
      parameters:
      - description: The accessKey provided by VisageCloud
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: The secretKey or readOnlyKey provided by VisageCloud
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      - description: The profile that contains the faces
        in: query
        name: profileId
        required: true
        schema:
          type: string
      - description: The collection that contains the profile
        in: query
        name: collectionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: "Gets the enrollment status of a profile: information on whether it\
        \ is suitable for authentication."
      tags:
      - Profile
      x-openapi-router-controller: openapi_server.controllers.profile_controller
  /rest/v1.1/profile/map:
    delete:
      operationId: remove_faces_from_profile_using_delete
      parameters:
      - description: The accessKey provided by VisageCloud
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: The secretKey provided by VisageCloud
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      - description: "Comma separated face hashes, that will be removed from a profile"
        in: query
        name: faceHashes
        required: true
        schema:
          type: string
      - description: The profile that contains the face
        in: query
        name: profileId
        required: true
        schema:
          type: string
      - description: The collection that contains the profile
        in: query
        name: collectionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "204":
          content: {}
          description: No Content
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
      summary: "Removes (unmaps) a list of faces, identified by faceHashes, from a\
        \ profile, identified by profileId"
      tags:
      - Profile
      x-openapi-router-controller: openapi_server.controllers.profile_controller
    get:
      operationId: get_faces_from_profile_using_get
      parameters:
      - description: The accessKey provided by VisageCloud
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: The secretKey or readOnlyKey provided by VisageCloud
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      - description: The profile that contains the faces
        in: query
        name: profileId
        required: true
        schema:
          type: string
      - description: The collection that contains the profile
        in: query
        name: collectionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Gets all the faceHashes associated to a profile
      tags:
      - Profile
      x-openapi-router-controller: openapi_server.controllers.profile_controller
    post:
      operationId: map_faces_to_profile_using_post
      parameters:
      - description: The accessKey provided by VisageCloud
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: The secretKey provided by VisageCloud
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      - description: "Comma separated face hashes, that will be associated to a profile"
        in: query
        name: faceHashes
        required: true
        schema:
          type: string
      - description: The profile that will store the face
        in: query
        name: profileId
        required: true
        schema:
          type: string
      - description: The collection that contains the profile
        in: query
        name: collectionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "201":
          content: {}
          description: Created
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: "Adds (maps) a list of faces, identified by faceHashes, to a profile,\
        \ identified by profileId"
      tags:
      - Profile
      x-openapi-router-controller: openapi_server.controllers.profile_controller
  /rest/v1.1/profile/profile:
    delete:
      deprecated: true
      operationId: delete_profile2_using_delete
      parameters:
      - description: The accessKey provided by VisageCloud
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: The secretKey provided by VisageCloud
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      - description: Uniquely identified collection that can store multiple profiles
        in: query
        name: collectionId
        required: true
        schema:
          type: string
      - description: The profile id (provide this if you don't have the externalId
        in: query
        name: profileId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "204":
          content: {}
          description: No Content
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
      summary: Deletes a profile and unmaps all its faces
      tags:
      - Profile
      x-openapi-router-controller: openapi_server.controllers.profile_controller
    post:
      operationId: add_profile_using_post
      parameters:
      - description: The accessKey provided by VisageCloud
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: The secretKey provided by VisageCloud
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      - description: Uniquely identified collection that can store multiple profiles
        in: query
        name: collectionId
        required: true
        schema:
          type: string
      - description: External reference to additional information you don’t want to
          share with VisageCloud
        in: query
        name: externalId
        schema:
          type: string
      - description: Human-readable label for the profile
        in: query
        name: screenName
        schema:
          type: string
      - description: Allows you to do finer filtering in face recognition
        explode: true
        in: query
        name: labels
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Comma separated key:value classification attributes
        in: query
        name: classificationAttributes
        schema:
          type: string
      - description: Comma separated key:value details of profile
        in: query
        name: details
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "201":
          content: {}
          description: Created
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Creates a new profile with no faces associated to it (empty profile)
      tags:
      - Profile
      x-openapi-router-controller: openapi_server.controllers.profile_controller
  /rest/v1.1/profile/{id}:
    delete:
      operationId: delete_profile_using_delete
      parameters:
      - description: The accessKey provided by VisageCloud
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: The secretKey provided by VisageCloud
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      - description: Uniquely identified collection that can store multiple profiles
        in: query
        name: collectionId
        required: true
        schema:
          type: string
      - description: The profile id (provide this if you don't have the externalId
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "204":
          content: {}
          description: No Content
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
      summary: Deletes a profile and unmaps all its faces
      tags:
      - Profile
      x-openapi-router-controller: openapi_server.controllers.profile_controller
    get:
      operationId: get_profile_using_get
      parameters:
      - description: The accessKey provided by VisageCloud
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: The secretKey or readOnlyKey provided by VisageCloud
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      - description: Uniquely identified collection that can store multiple profiles
        in: query
        name: collectionId
        required: true
        schema:
          type: string
      - description: Retrieves the profile with all its associated faces
        in: query
        name: withFaces
        schema:
          default: "false"
          type: string
      - description: The profile id (provide this if you don't have the externalId
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Retrieves a profile
      tags:
      - Profile
      x-openapi-router-controller: openapi_server.controllers.profile_controller
    patch:
      operationId: update_profile_using_patch
      parameters:
      - description: The accessKey provided by VisageCloud
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: The secretKey or readOnlyKey provided by VisageCloud
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      - description: The id of the profile that will be updated
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Uniquely identified collection that can store multiple profiles
        in: query
        name: collectionId
        required: true
        schema:
          type: string
      - description: External reference to additional information you don’t want to
          share with VisageCloud
        in: query
        name: externalId
        schema:
          type: string
      - description: Human-readable label for the profile
        in: query
        name: screenName
        schema:
          type: string
      - description: Allows you to do finer filtering in face recognition
        explode: true
        in: query
        name: labels
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Comma separated key:value classification attributes
        in: query
        name: classificationAttributes
        schema:
          type: string
      - description: Comma separated key:value details of profile
        in: query
        name: details
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "204":
          content: {}
          description: No Content
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
      summary: Update an existing profile with a given id
      tags:
      - Profile
      x-openapi-router-controller: openapi_server.controllers.profile_controller
  /rest/v1.1/stream/all:
    get:
      operationId: streams_by_account_using_get
      parameters:
      - description: The accessKey provided by VisageCloud
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: The secretKey or readOnlyKey provided by VisageCloud
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Show status of all streams from account
      tags:
      - Stream
      x-openapi-router-controller: openapi_server.controllers.stream_controller
  /rest/v1.1/stream/attendance:
    get:
      operationId: get_last_n_attedance_using_get
      parameters:
      - description: The accessKey provided by VisageCloud
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: The secretKey or readOnlyKey provided by VisageCloud
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      - description: The id of the stream for which the frames will be retrieved
        explode: true
        in: query
        name: streamIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: How many frames to retrieve at a time
        in: query
        name: count
        schema:
          default: 10
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Get last N recognized individuals from stream
      tags:
      - Stream
      x-openapi-router-controller: openapi_server.controllers.stream_controller
  /rest/v1.1/stream/cleanup:
    patch:
      operationId: cleanup_stream_using_patch
      parameters:
      - description: The accessKey provided by VisageCloud
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: The secretKey provided by VisageCloud
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      - description: The id of the stream that will be stopped
        in: query
        name: streamId
        required: true
        schema:
          type: string
      - description: Frames older than interval (seconds) will be cleaned up
        in: query
        name: interval
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "204":
          content: {}
          description: No Content
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
      summary: Cleanup frames older than specified timeframe
      tags:
      - Stream
      x-openapi-router-controller: openapi_server.controllers.stream_controller
  /rest/v1.1/stream/frameImage:
    get:
      operationId: get_frame_image_using_get
      parameters:
      - description: The accessKey provided by VisageCloud
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: The secretKey or readOnlyKey provided by VisageCloud
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      - description: The id of the stream for which the frames will be retrieved
        in: query
        name: streamId
        required: true
        schema:
          type: string
      - description: Timestamp of frame to retrieve
        in: query
        name: timestamp
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            image/jpeg:
              schema:
                items:
                  format: byte
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                type: array
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Get individual frame image
      tags:
      - Stream
      x-openapi-router-controller: openapi_server.controllers.stream_controller
  /rest/v1.1/stream/frames:
    get:
      operationId: get_last_n_frames_using_get
      parameters:
      - description: The accessKey provided by VisageCloud
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: The secretKey or readOnlyKey provided by VisageCloud
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      - description: The id of the stream for which the frames will be retrieved
        in: query
        name: streamId
        required: true
        schema:
          type: string
      - description: How many frames to retrieve at a time
        in: query
        name: count
        schema:
          default: 10
          format: int32
          type: integer
      - description: The collection id you want to run recognition against
        in: query
        name: collectionId
        schema:
          type: string
      - description: Labels associated with the given picture or picture URL
        explode: true
        in: query
        name: labels
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filters that will be applied on the recognition operation
        explode: true
        in: query
        name: attributeFilters
        schema:
          enum:
          - NO_FILTER
          - GENDER_FILTER
          - AGE_GROUP_FILTER
          items:
            enum:
            - NO_FILTER
            - GENDER_FILTER
            - AGE_GROUP_FILTER
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Get last processed N frames from stream
      tags:
      - Stream
      x-openapi-router-controller: openapi_server.controllers.stream_controller
  /rest/v1.1/stream/start:
    patch:
      operationId: start_stream_using_patch
      parameters:
      - description: The accessKey provided by VisageCloud
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: The secretKey provided by VisageCloud
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      - description: The id of the stream that will be started
        in: query
        name: streamId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "204":
          content: {}
          description: No Content
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
      summary: Start existing stream
      tags:
      - Stream
      x-openapi-router-controller: openapi_server.controllers.stream_controller
  /rest/v1.1/stream/stop:
    patch:
      operationId: stop_stream_using_patch
      parameters:
      - description: The accessKey provided by VisageCloud
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: The secretKey provided by VisageCloud
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      - description: The id of the stream that will be stopped
        in: query
        name: streamId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "204":
          content: {}
          description: No Content
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
      summary: Stop existing stream
      tags:
      - Stream
      x-openapi-router-controller: openapi_server.controllers.stream_controller
  /rest/v1.1/stream/stream:
    post:
      operationId: add_stream_using_post
      parameters:
      - description: The accessKey provided by VisageCloud
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: The secretKey provided by VisageCloud
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      - description: The name of the stream that will be created
        in: query
        name: name
        required: true
        schema:
          type: string
      - description: The url of the stream
        in: query
        name: url
        required: true
        schema:
          type: string
      - description: Streaming method
        in: query
        name: method
        schema:
          default: WEBRTC_PUSH
          enum:
          - WEBRTC_PULL
          - WEBRTC_PUSH
          - INGESTION_ENDPOINT
          type: string
      - description: Username
        in: query
        name: username
        schema:
          type: string
      - description: Password
        in: query
        name: password
        schema:
          type: string
      - description: Boolean value indicating whether you want the original picture
          to be stored for later retrieval
        in: query
        name: skipFramesWithNoFaces
        schema:
          default: true
          type: boolean
      - description: Number of seconds for frames to be kept. Default is 605000s (7
          days)
        in: query
        name: retentionTime
        schema:
          default: 605000
          format: int32
          type: integer
      - description: Boolean value indicating whether you want the original picture
          to be stored for later retrieval
        in: query
        name: storeOriginalFrames
        schema:
          default: false
          type: boolean
      - description: Boolean value indicating whether you want to store permanently
          store faces clippings of the recognized faces
        in: query
        name: storeAttendanceFaces
        schema:
          default: false
          type: boolean
      - description: Boolean value indicating whether you want to store permanently
          store frames with a recognized face in them
        in: query
        name: storeAttendanceFrames
        schema:
          default: false
          type: boolean
      - description: Boolean value indicating whether the stream is currently active
          or not
        in: query
        name: isActive
        schema:
          default: false
          type: boolean
      - description: List of collection ids which will be used to measure attendance
        explode: true
        in: query
        name: associatedCollections
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Attributes of the stream
        in: query
        name: attributes
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "201":
          content: {}
          description: Created
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Create new stream with given name
      tags:
      - Stream
      x-openapi-router-controller: openapi_server.controllers.stream_controller
  /rest/v1.1/stream/{id}:
    delete:
      operationId: remove_stream_using_delete
      parameters:
      - description: The accessKey provided by VisageCloud
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: The secretKey provided by VisageCloud
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      - description: The id of the stream that will be removed
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "204":
          content: {}
          description: No Content
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
      summary: Delete existing stream
      tags:
      - Stream
      x-openapi-router-controller: openapi_server.controllers.stream_controller
  /rest/v1.1/stream/{streamId}:
    get:
      operationId: get_stream_using_get
      parameters:
      - description: The accessKey provided by VisageCloud
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: The secretKey provided by VisageCloud
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      - description: The id of the stream for which the data will be retrieved
        in: path
        name: streamId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Get an existing stream with a given ID
      tags:
      - Stream
      x-openapi-router-controller: openapi_server.controllers.stream_controller
    patch:
      operationId: update_stream_using_patch
      parameters:
      - description: The accessKey provided by VisageCloud
        in: query
        name: accessKey
        required: true
        schema:
          type: string
      - description: The secretKey provided by VisageCloud
        in: query
        name: secretKey
        required: true
        schema:
          type: string
      - description: The id of the stream that will be updated
        in: path
        name: streamId
        required: true
        schema:
          type: string
      - description: The name of the stream that will be updated
        in: query
        name: name
        schema:
          type: string
      - description: The url of the stream
        in: query
        name: url
        schema:
          type: string
      - description: Streaming method
        in: query
        name: method
        schema:
          enum:
          - WEBRTC_PULL
          - WEBRTC_PUSH
          - INGESTION_ENDPOINT
          type: string
      - description: Username
        in: query
        name: username
        schema:
          type: string
      - description: Password
        in: query
        name: password
        schema:
          type: string
      - description: Boolean value indicating whether you want the original picture
          to be stored for later retrieval
        in: query
        name: skipFramesWithNoFaces
        schema:
          type: boolean
      - description: Number of seconds for frames to be kept
        in: query
        name: retentionTime
        schema:
          format: int32
          type: integer
      - description: Boolean value indicating whether you want the original picture
          to be stored for later retrieval
        in: query
        name: storeOriginalFrames
        schema:
          type: boolean
      - description: Boolean value indicating whether you want to store permanently
          store faces clippings of the recognized faces
        in: query
        name: storeAttendanceFaces
        schema:
          type: boolean
      - description: Boolean value indicating whether you want to store permanently
          store frames with a recognized face in them
        in: query
        name: storeAttendanceFrames
        schema:
          type: boolean
      - description: Boolean value indicating whether the stream is currently active
          or not
        in: query
        name: isActive
        schema:
          type: boolean
      - description: List of collection ids which will be used to measure attendance
        explode: true
        in: query
        name: associatedCollections
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Attributes of the stream
        in: query
        name: attributes
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
          description: OK
        "204":
          content: {}
          description: No Content
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
      summary: Update an existing stream with a given ID
      tags:
      - Stream
      x-openapi-router-controller: openapi_server.controllers.stream_controller
components:
  schemas:
    RestResponse:
      example:
        payload: "{}"
        message: message
        status: status
      properties:
        message:
          title: message
          type: string
        payload:
          properties: {}
          title: payload
          type: object
        status:
          title: status
          type: string
      title: RestResponse
      type: object
    StreamingResponseBody:
      type: object
    performAnalysisUsingPOST_request:
      properties:
        picture:
          description: "The multipart/form-data version of the image, in case a direct\
            \ upload is used. At least one of picture or pictureURL must be present"
          type: string
      type: object
    performRecognitionUsingPOST_request:
      properties:
        picture:
          description: The picture itself
          type: string
      type: object
    addCollectionUsingPOST_request:
      properties:
        accessKey:
          description: The accessKey provided by VisageCloud
          type: string
        secretKey:
          description: The secretKey provided by VisageCloud
          type: string
        name:
          description: The name of the collection that will be created
          type: string
        preload:
          default: false
          description: Defined whether to preload collection
          type: boolean
        evictable:
          default: true
          description: Defined whether the collection can be evicted
          type: boolean
        purposes:
          description: The newly declared purposes of the collection
          enum:
          - FEATURES
          - LANDMARKS
          - ATTRIBUTES
          items:
            enum:
            - FEATURES
            - LANDMARKS
            - ATTRIBUTES
            type: string
          type: array
      required:
      - accessKey
      - name
      - secretKey
      type: object
x-hasEquivalentPaths: true
x-original-swagger-version: "2.0"
