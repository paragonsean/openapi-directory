/**
 * VisageCloud
 * Face search, recognition & classification API. Just make a call to our REST API each time your app needs to access face recognition and classification capabilities.
 *
 * The version of the OpenAPI document: 1.1
 * Contact: office@visagecloud.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.VisageCloud);
  }
}(this, function(expect, VisageCloud) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new VisageCloud.CollectionApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CollectionApi', function() {
    describe('addCollection2UsingPOST', function() {
      it('should call addCollection2UsingPOST successfully', function(done) {
        //uncomment below and update the code to test addCollection2UsingPOST
        //instance.addCollection2UsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addCollectionUsingPOST', function() {
      it('should call addCollectionUsingPOST successfully', function(done) {
        //uncomment below and update the code to test addCollectionUsingPOST
        //instance.addCollectionUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollection2UsingDELETE', function() {
      it('should call deleteCollection2UsingDELETE successfully', function(done) {
        //uncomment below and update the code to test deleteCollection2UsingDELETE
        //instance.deleteCollection2UsingDELETE(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionUsingDELETE', function() {
      it('should call deleteCollectionUsingDELETE successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionUsingDELETE
        //instance.deleteCollectionUsingDELETE(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('exportCSVUsingGET', function() {
      it('should call exportCSVUsingGET successfully', function(done) {
        //uncomment below and update the code to test exportCSVUsingGET
        //instance.exportCSVUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllCollectionProfilesUsingGET', function() {
      it('should call getAllCollectionProfilesUsingGET successfully', function(done) {
        //uncomment below and update the code to test getAllCollectionProfilesUsingGET
        //instance.getAllCollectionProfilesUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllCollections2UsingGET', function() {
      it('should call getAllCollections2UsingGET successfully', function(done) {
        //uncomment below and update the code to test getAllCollections2UsingGET
        //instance.getAllCollections2UsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllCollectionsUsingGET', function() {
      it('should call getAllCollectionsUsingGET successfully', function(done) {
        //uncomment below and update the code to test getAllCollectionsUsingGET
        //instance.getAllCollectionsUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCollection2UsingGET', function() {
      it('should call getCollection2UsingGET successfully', function(done) {
        //uncomment below and update the code to test getCollection2UsingGET
        //instance.getCollection2UsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCollectionUsingGET', function() {
      it('should call getCollectionUsingGET successfully', function(done) {
        //uncomment below and update the code to test getCollectionUsingGET
        //instance.getCollectionUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repurposeCollectionUsingPUT', function() {
      it('should call repurposeCollectionUsingPUT successfully', function(done) {
        //uncomment below and update the code to test repurposeCollectionUsingPUT
        //instance.repurposeCollectionUsingPUT(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateCollection2UsingPOST', function() {
      it('should call updateCollection2UsingPOST successfully', function(done) {
        //uncomment below and update the code to test updateCollection2UsingPOST
        //instance.updateCollection2UsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateCollectionUsingPATCH', function() {
      it('should call updateCollectionUsingPATCH successfully', function(done) {
        //uncomment below and update the code to test updateCollectionUsingPATCH
        //instance.updateCollectionUsingPATCH(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
