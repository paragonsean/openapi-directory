/**
 * Georg API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInputPart.h
 *
 * 
 */

#ifndef OAIInputPart_H
#define OAIInputPart_H

#include <QJsonObject>

#include "OAIMediaType.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMediaType;

class OAIInputPart : public OAIObject {
public:
    OAIInputPart();
    OAIInputPart(QString json);
    ~OAIInputPart() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBodyAsString() const;
    void setBodyAsString(const QString &body_as_string);
    bool is_body_as_string_Set() const;
    bool is_body_as_string_Valid() const;

    bool isContentTypeFromMessage() const;
    void setContentTypeFromMessage(const bool &content_type_from_message);
    bool is_content_type_from_message_Set() const;
    bool is_content_type_from_message_Valid() const;

    QMap<QString, QList<QString>> getHeaders() const;
    void setHeaders(const QMap<QString, QList<QString>> &headers);
    bool is_headers_Set() const;
    bool is_headers_Valid() const;

    OAIMediaType getMediaType() const;
    void setMediaType(const OAIMediaType &media_type);
    bool is_media_type_Set() const;
    bool is_media_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_body_as_string;
    bool m_body_as_string_isSet;
    bool m_body_as_string_isValid;

    bool m_content_type_from_message;
    bool m_content_type_from_message_isSet;
    bool m_content_type_from_message_isValid;

    QMap<QString, QList<QString>> m_headers;
    bool m_headers_isSet;
    bool m_headers_isValid;

    OAIMediaType m_media_type;
    bool m_media_type_isSet;
    bool m_media_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInputPart)

#endif // OAIInputPart_H
