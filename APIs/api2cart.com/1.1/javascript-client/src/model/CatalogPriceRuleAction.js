/**
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CouponCondition from './CouponCondition';

/**
 * The CatalogPriceRuleAction model module.
 * @module model/CatalogPriceRuleAction
 * @version 1.1
 */
class CatalogPriceRuleAction {
    /**
     * Constructs a new <code>CatalogPriceRuleAction</code>.
     * @alias module:model/CatalogPriceRuleAction
     */
    constructor() { 
        
        CatalogPriceRuleAction.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CatalogPriceRuleAction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CatalogPriceRuleAction} obj Optional instance to populate.
     * @return {module:model/CatalogPriceRuleAction} The populated <code>CatalogPriceRuleAction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CatalogPriceRuleAction();

            if (data.hasOwnProperty('additional_fields')) {
                obj['additional_fields'] = ApiClient.convertToType(data['additional_fields'], Object);
            }
            if (data.hasOwnProperty('apply_to')) {
                obj['apply_to'] = ApiClient.convertToType(data['apply_to'], 'String');
            }
            if (data.hasOwnProperty('conditions')) {
                obj['conditions'] = ApiClient.convertToType(data['conditions'], [CouponCondition]);
            }
            if (data.hasOwnProperty('currency_code')) {
                obj['currency_code'] = ApiClient.convertToType(data['currency_code'], 'String');
            }
            if (data.hasOwnProperty('custom_fields')) {
                obj['custom_fields'] = ApiClient.convertToType(data['custom_fields'], Object);
            }
            if (data.hasOwnProperty('include_tax')) {
                obj['include_tax'] = ApiClient.convertToType(data['include_tax'], 'Boolean');
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
            }
            if (data.hasOwnProperty('scope')) {
                obj['scope'] = ApiClient.convertToType(data['scope'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CatalogPriceRuleAction</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CatalogPriceRuleAction</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['apply_to'] && !(typeof data['apply_to'] === 'string' || data['apply_to'] instanceof String)) {
            throw new Error("Expected the field `apply_to` to be a primitive type in the JSON string but got " + data['apply_to']);
        }
        if (data['conditions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['conditions'])) {
                throw new Error("Expected the field `conditions` to be an array in the JSON data but got " + data['conditions']);
            }
            // validate the optional field `conditions` (array)
            for (const item of data['conditions']) {
                CouponCondition.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['currency_code'] && !(typeof data['currency_code'] === 'string' || data['currency_code'] instanceof String)) {
            throw new Error("Expected the field `currency_code` to be a primitive type in the JSON string but got " + data['currency_code']);
        }
        // ensure the json data is a string
        if (data['scope'] && !(typeof data['scope'] === 'string' || data['scope'] instanceof String)) {
            throw new Error("Expected the field `scope` to be a primitive type in the JSON string but got " + data['scope']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * @member {Object} additional_fields
 */
CatalogPriceRuleAction.prototype['additional_fields'] = undefined;

/**
 * @member {String} apply_to
 */
CatalogPriceRuleAction.prototype['apply_to'] = undefined;

/**
 * @member {Array.<module:model/CouponCondition>} conditions
 */
CatalogPriceRuleAction.prototype['conditions'] = undefined;

/**
 * @member {String} currency_code
 */
CatalogPriceRuleAction.prototype['currency_code'] = undefined;

/**
 * @member {Object} custom_fields
 */
CatalogPriceRuleAction.prototype['custom_fields'] = undefined;

/**
 * @member {Boolean} include_tax
 */
CatalogPriceRuleAction.prototype['include_tax'] = undefined;

/**
 * @member {Number} quantity
 */
CatalogPriceRuleAction.prototype['quantity'] = undefined;

/**
 * @member {String} scope
 */
CatalogPriceRuleAction.prototype['scope'] = undefined;

/**
 * @member {String} type
 */
CatalogPriceRuleAction.prototype['type'] = undefined;

/**
 * @member {Number} value
 */
CatalogPriceRuleAction.prototype['value'] = undefined;






export default CatalogPriceRuleAction;

