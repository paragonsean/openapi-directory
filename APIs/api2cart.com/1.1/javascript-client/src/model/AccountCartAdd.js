/**
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AccountCartAddHybrisWebsitesInner from './AccountCartAddHybrisWebsitesInner';

/**
 * The AccountCartAdd model module.
 * @module model/AccountCartAdd
 * @version 1.1
 */
class AccountCartAdd {
    /**
     * Constructs a new <code>AccountCartAdd</code>.
     * @alias module:model/AccountCartAdd
     * @param amazonSpAwsRegion {module:model/AccountCartAdd.AmazonSpAwsRegionEnum} Amazon AWS Region
     * @param amazonSpAwsRoleArn {String} Amazon AWS Role ARN
     * @param amazonSpAwsUserKeyId {String} Amazon AWS user access key ID
     * @param amazonSpAwsUserSecret {String} Amazon AWS user secret access key
     * @param amazonSpClientId {String} Amazon SP API app client id
     * @param amazonSpClientSecret {String} Amazon SP API app client secret
     * @param amazonSpRefreshToken {String} Amazon SP API OAuth refresh token
     * @param cartId {module:model/AccountCartAdd.CartIdEnum} Storeâ€™s identifier which you can get from cart_list method
     * @param etsyClientId {String} Etsy Client Id
     * @param etsyRefreshToken {String} Etsy Refresh token
     * @param storeUrl {String} A web address of a store that you would like to connect to API2Cart
     */
    constructor(amazonSpAwsRegion, amazonSpAwsRoleArn, amazonSpAwsUserKeyId, amazonSpAwsUserSecret, amazonSpClientId, amazonSpClientSecret, amazonSpRefreshToken, cartId, etsyClientId, etsyRefreshToken, storeUrl) { 
        
        AccountCartAdd.initialize(this, amazonSpAwsRegion, amazonSpAwsRoleArn, amazonSpAwsUserKeyId, amazonSpAwsUserSecret, amazonSpClientId, amazonSpClientSecret, amazonSpRefreshToken, cartId, etsyClientId, etsyRefreshToken, storeUrl);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, amazonSpAwsRegion, amazonSpAwsRoleArn, amazonSpAwsUserKeyId, amazonSpAwsUserSecret, amazonSpClientId, amazonSpClientSecret, amazonSpRefreshToken, cartId, etsyClientId, etsyRefreshToken, storeUrl) { 
        obj['amazon_sp_api_environment'] = 'production';
        obj['amazon_sp_aws_region'] = amazonSpAwsRegion;
        obj['amazon_sp_aws_role_arn'] = amazonSpAwsRoleArn;
        obj['amazon_sp_aws_user_key_id'] = amazonSpAwsUserKeyId;
        obj['amazon_sp_aws_user_secret'] = amazonSpAwsUserSecret;
        obj['amazon_sp_client_id'] = amazonSpClientId;
        obj['amazon_sp_client_secret'] = amazonSpClientSecret;
        obj['amazon_sp_refresh_token'] = amazonSpRefreshToken;
        obj['cart_id'] = cartId;
        obj['ebay_environment'] = 'production';
        obj['ebay_site_id'] = 0;
        obj['etsy_client_id'] = etsyClientId;
        obj['etsy_refresh_token'] = etsyRefreshToken;
        obj['store_url'] = storeUrl;
        obj['validate_version'] = false;
        obj['verify'] = true;
        obj['walmart_environment'] = 'production';
    }

    /**
     * Constructs a <code>AccountCartAdd</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AccountCartAdd} obj Optional instance to populate.
     * @return {module:model/AccountCartAdd} The populated <code>AccountCartAdd</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AccountCartAdd();

            if (data.hasOwnProperty('3dcart_access_token')) {
                obj['3dcart_access_token'] = ApiClient.convertToType(data['3dcart_access_token'], 'String');
            }
            if (data.hasOwnProperty('3dcart_private_key')) {
                obj['3dcart_private_key'] = ApiClient.convertToType(data['3dcart_private_key'], 'String');
            }
            if (data.hasOwnProperty('3dcartapi_api_key')) {
                obj['3dcartapi_api_key'] = ApiClient.convertToType(data['3dcartapi_api_key'], 'String');
            }
            if (data.hasOwnProperty('amazon_access_key_id')) {
                obj['amazon_access_key_id'] = ApiClient.convertToType(data['amazon_access_key_id'], 'String');
            }
            if (data.hasOwnProperty('amazon_access_token')) {
                obj['amazon_access_token'] = ApiClient.convertToType(data['amazon_access_token'], 'String');
            }
            if (data.hasOwnProperty('amazon_marketplaces_ids')) {
                obj['amazon_marketplaces_ids'] = ApiClient.convertToType(data['amazon_marketplaces_ids'], 'String');
            }
            if (data.hasOwnProperty('amazon_secret_key')) {
                obj['amazon_secret_key'] = ApiClient.convertToType(data['amazon_secret_key'], 'String');
            }
            if (data.hasOwnProperty('amazon_seller_id')) {
                obj['amazon_seller_id'] = ApiClient.convertToType(data['amazon_seller_id'], 'String');
            }
            if (data.hasOwnProperty('amazon_sp_api_environment')) {
                obj['amazon_sp_api_environment'] = ApiClient.convertToType(data['amazon_sp_api_environment'], 'String');
            }
            if (data.hasOwnProperty('amazon_sp_aws_region')) {
                obj['amazon_sp_aws_region'] = ApiClient.convertToType(data['amazon_sp_aws_region'], 'String');
            }
            if (data.hasOwnProperty('amazon_sp_aws_role_arn')) {
                obj['amazon_sp_aws_role_arn'] = ApiClient.convertToType(data['amazon_sp_aws_role_arn'], 'String');
            }
            if (data.hasOwnProperty('amazon_sp_aws_user_key_id')) {
                obj['amazon_sp_aws_user_key_id'] = ApiClient.convertToType(data['amazon_sp_aws_user_key_id'], 'String');
            }
            if (data.hasOwnProperty('amazon_sp_aws_user_secret')) {
                obj['amazon_sp_aws_user_secret'] = ApiClient.convertToType(data['amazon_sp_aws_user_secret'], 'String');
            }
            if (data.hasOwnProperty('amazon_sp_client_id')) {
                obj['amazon_sp_client_id'] = ApiClient.convertToType(data['amazon_sp_client_id'], 'String');
            }
            if (data.hasOwnProperty('amazon_sp_client_secret')) {
                obj['amazon_sp_client_secret'] = ApiClient.convertToType(data['amazon_sp_client_secret'], 'String');
            }
            if (data.hasOwnProperty('amazon_sp_refresh_token')) {
                obj['amazon_sp_refresh_token'] = ApiClient.convertToType(data['amazon_sp_refresh_token'], 'String');
            }
            if (data.hasOwnProperty('aspdotnetstorefront_api_pass')) {
                obj['aspdotnetstorefront_api_pass'] = ApiClient.convertToType(data['aspdotnetstorefront_api_pass'], 'String');
            }
            if (data.hasOwnProperty('aspdotnetstorefront_api_user')) {
                obj['aspdotnetstorefront_api_user'] = ApiClient.convertToType(data['aspdotnetstorefront_api_user'], 'String');
            }
            if (data.hasOwnProperty('bigcommerceapi_access_token')) {
                obj['bigcommerceapi_access_token'] = ApiClient.convertToType(data['bigcommerceapi_access_token'], 'String');
            }
            if (data.hasOwnProperty('bigcommerceapi_admin_account')) {
                obj['bigcommerceapi_admin_account'] = ApiClient.convertToType(data['bigcommerceapi_admin_account'], 'String');
            }
            if (data.hasOwnProperty('bigcommerceapi_api_key')) {
                obj['bigcommerceapi_api_key'] = ApiClient.convertToType(data['bigcommerceapi_api_key'], 'String');
            }
            if (data.hasOwnProperty('bigcommerceapi_api_path')) {
                obj['bigcommerceapi_api_path'] = ApiClient.convertToType(data['bigcommerceapi_api_path'], 'String');
            }
            if (data.hasOwnProperty('bigcommerceapi_client_id')) {
                obj['bigcommerceapi_client_id'] = ApiClient.convertToType(data['bigcommerceapi_client_id'], 'String');
            }
            if (data.hasOwnProperty('bigcommerceapi_context')) {
                obj['bigcommerceapi_context'] = ApiClient.convertToType(data['bigcommerceapi_context'], 'String');
            }
            if (data.hasOwnProperty('bridge_url')) {
                obj['bridge_url'] = ApiClient.convertToType(data['bridge_url'], 'String');
            }
            if (data.hasOwnProperty('cart_id')) {
                obj['cart_id'] = ApiClient.convertToType(data['cart_id'], 'String');
            }
            if (data.hasOwnProperty('commercehq_api_key')) {
                obj['commercehq_api_key'] = ApiClient.convertToType(data['commercehq_api_key'], 'String');
            }
            if (data.hasOwnProperty('commercehq_api_password')) {
                obj['commercehq_api_password'] = ApiClient.convertToType(data['commercehq_api_password'], 'String');
            }
            if (data.hasOwnProperty('db_tables_prefix')) {
                obj['db_tables_prefix'] = ApiClient.convertToType(data['db_tables_prefix'], 'String');
            }
            if (data.hasOwnProperty('demandware_api_password')) {
                obj['demandware_api_password'] = ApiClient.convertToType(data['demandware_api_password'], 'String');
            }
            if (data.hasOwnProperty('demandware_client_id')) {
                obj['demandware_client_id'] = ApiClient.convertToType(data['demandware_client_id'], 'String');
            }
            if (data.hasOwnProperty('demandware_user_name')) {
                obj['demandware_user_name'] = ApiClient.convertToType(data['demandware_user_name'], 'String');
            }
            if (data.hasOwnProperty('demandware_user_password')) {
                obj['demandware_user_password'] = ApiClient.convertToType(data['demandware_user_password'], 'String');
            }
            if (data.hasOwnProperty('ebay_access_token')) {
                obj['ebay_access_token'] = ApiClient.convertToType(data['ebay_access_token'], 'String');
            }
            if (data.hasOwnProperty('ebay_client_id')) {
                obj['ebay_client_id'] = ApiClient.convertToType(data['ebay_client_id'], 'String');
            }
            if (data.hasOwnProperty('ebay_client_secret')) {
                obj['ebay_client_secret'] = ApiClient.convertToType(data['ebay_client_secret'], 'String');
            }
            if (data.hasOwnProperty('ebay_environment')) {
                obj['ebay_environment'] = ApiClient.convertToType(data['ebay_environment'], 'String');
            }
            if (data.hasOwnProperty('ebay_refresh_token')) {
                obj['ebay_refresh_token'] = ApiClient.convertToType(data['ebay_refresh_token'], 'String');
            }
            if (data.hasOwnProperty('ebay_runame')) {
                obj['ebay_runame'] = ApiClient.convertToType(data['ebay_runame'], 'String');
            }
            if (data.hasOwnProperty('ebay_site_id')) {
                obj['ebay_site_id'] = ApiClient.convertToType(data['ebay_site_id'], 'Number');
            }
            if (data.hasOwnProperty('ecwid_acess_token')) {
                obj['ecwid_acess_token'] = ApiClient.convertToType(data['ecwid_acess_token'], 'String');
            }
            if (data.hasOwnProperty('ecwid_store_id')) {
                obj['ecwid_store_id'] = ApiClient.convertToType(data['ecwid_store_id'], 'String');
            }
            if (data.hasOwnProperty('etsy_access_token')) {
                obj['etsy_access_token'] = ApiClient.convertToType(data['etsy_access_token'], 'String');
            }
            if (data.hasOwnProperty('etsy_client_id')) {
                obj['etsy_client_id'] = ApiClient.convertToType(data['etsy_client_id'], 'String');
            }
            if (data.hasOwnProperty('etsy_keystring')) {
                obj['etsy_keystring'] = ApiClient.convertToType(data['etsy_keystring'], 'String');
            }
            if (data.hasOwnProperty('etsy_refresh_token')) {
                obj['etsy_refresh_token'] = ApiClient.convertToType(data['etsy_refresh_token'], 'String');
            }
            if (data.hasOwnProperty('etsy_shared_secret')) {
                obj['etsy_shared_secret'] = ApiClient.convertToType(data['etsy_shared_secret'], 'String');
            }
            if (data.hasOwnProperty('etsy_token_secret')) {
                obj['etsy_token_secret'] = ApiClient.convertToType(data['etsy_token_secret'], 'String');
            }
            if (data.hasOwnProperty('ftp_host')) {
                obj['ftp_host'] = ApiClient.convertToType(data['ftp_host'], 'String');
            }
            if (data.hasOwnProperty('ftp_password')) {
                obj['ftp_password'] = ApiClient.convertToType(data['ftp_password'], 'String');
            }
            if (data.hasOwnProperty('ftp_port')) {
                obj['ftp_port'] = ApiClient.convertToType(data['ftp_port'], 'Number');
            }
            if (data.hasOwnProperty('ftp_store_dir')) {
                obj['ftp_store_dir'] = ApiClient.convertToType(data['ftp_store_dir'], 'String');
            }
            if (data.hasOwnProperty('ftp_user')) {
                obj['ftp_user'] = ApiClient.convertToType(data['ftp_user'], 'String');
            }
            if (data.hasOwnProperty('hybris_client_id')) {
                obj['hybris_client_id'] = ApiClient.convertToType(data['hybris_client_id'], 'String');
            }
            if (data.hasOwnProperty('hybris_client_secret')) {
                obj['hybris_client_secret'] = ApiClient.convertToType(data['hybris_client_secret'], 'String');
            }
            if (data.hasOwnProperty('hybris_password')) {
                obj['hybris_password'] = ApiClient.convertToType(data['hybris_password'], 'String');
            }
            if (data.hasOwnProperty('hybris_username')) {
                obj['hybris_username'] = ApiClient.convertToType(data['hybris_username'], 'String');
            }
            if (data.hasOwnProperty('hybris_websites')) {
                obj['hybris_websites'] = ApiClient.convertToType(data['hybris_websites'], [AccountCartAddHybrisWebsitesInner]);
            }
            if (data.hasOwnProperty('lightspeed_api_key')) {
                obj['lightspeed_api_key'] = ApiClient.convertToType(data['lightspeed_api_key'], 'String');
            }
            if (data.hasOwnProperty('lightspeed_api_secret')) {
                obj['lightspeed_api_secret'] = ApiClient.convertToType(data['lightspeed_api_secret'], 'String');
            }
            if (data.hasOwnProperty('magento_access_token')) {
                obj['magento_access_token'] = ApiClient.convertToType(data['magento_access_token'], 'String');
            }
            if (data.hasOwnProperty('magento_consumer_key')) {
                obj['magento_consumer_key'] = ApiClient.convertToType(data['magento_consumer_key'], 'String');
            }
            if (data.hasOwnProperty('magento_consumer_secret')) {
                obj['magento_consumer_secret'] = ApiClient.convertToType(data['magento_consumer_secret'], 'String');
            }
            if (data.hasOwnProperty('magento_token_secret')) {
                obj['magento_token_secret'] = ApiClient.convertToType(data['magento_token_secret'], 'String');
            }
            if (data.hasOwnProperty('mercado_libre_app_id')) {
                obj['mercado_libre_app_id'] = ApiClient.convertToType(data['mercado_libre_app_id'], 'String');
            }
            if (data.hasOwnProperty('mercado_libre_app_secret_key')) {
                obj['mercado_libre_app_secret_key'] = ApiClient.convertToType(data['mercado_libre_app_secret_key'], 'String');
            }
            if (data.hasOwnProperty('mercado_libre_refresh_token')) {
                obj['mercado_libre_refresh_token'] = ApiClient.convertToType(data['mercado_libre_refresh_token'], 'String');
            }
            if (data.hasOwnProperty('neto_api_key')) {
                obj['neto_api_key'] = ApiClient.convertToType(data['neto_api_key'], 'String');
            }
            if (data.hasOwnProperty('neto_api_username')) {
                obj['neto_api_username'] = ApiClient.convertToType(data['neto_api_username'], 'String');
            }
            if (data.hasOwnProperty('prestashop_webservice_key')) {
                obj['prestashop_webservice_key'] = ApiClient.convertToType(data['prestashop_webservice_key'], 'String');
            }
            if (data.hasOwnProperty('shopify_access_token')) {
                obj['shopify_access_token'] = ApiClient.convertToType(data['shopify_access_token'], 'String');
            }
            if (data.hasOwnProperty('shopify_api_key')) {
                obj['shopify_api_key'] = ApiClient.convertToType(data['shopify_api_key'], 'String');
            }
            if (data.hasOwnProperty('shopify_api_password')) {
                obj['shopify_api_password'] = ApiClient.convertToType(data['shopify_api_password'], 'String');
            }
            if (data.hasOwnProperty('shopify_shared_secret')) {
                obj['shopify_shared_secret'] = ApiClient.convertToType(data['shopify_shared_secret'], 'String');
            }
            if (data.hasOwnProperty('shopware_access_key')) {
                obj['shopware_access_key'] = ApiClient.convertToType(data['shopware_access_key'], 'String');
            }
            if (data.hasOwnProperty('shopware_api_key')) {
                obj['shopware_api_key'] = ApiClient.convertToType(data['shopware_api_key'], 'String');
            }
            if (data.hasOwnProperty('shopware_api_secret')) {
                obj['shopware_api_secret'] = ApiClient.convertToType(data['shopware_api_secret'], 'String');
            }
            if (data.hasOwnProperty('squarespace_api_key')) {
                obj['squarespace_api_key'] = ApiClient.convertToType(data['squarespace_api_key'], 'String');
            }
            if (data.hasOwnProperty('store_key')) {
                obj['store_key'] = ApiClient.convertToType(data['store_key'], 'String');
            }
            if (data.hasOwnProperty('store_root')) {
                obj['store_root'] = ApiClient.convertToType(data['store_root'], 'String');
            }
            if (data.hasOwnProperty('store_url')) {
                obj['store_url'] = ApiClient.convertToType(data['store_url'], 'String');
            }
            if (data.hasOwnProperty('validate_version')) {
                obj['validate_version'] = ApiClient.convertToType(data['validate_version'], 'Boolean');
            }
            if (data.hasOwnProperty('verify')) {
                obj['verify'] = ApiClient.convertToType(data['verify'], 'Boolean');
            }
            if (data.hasOwnProperty('volusion_login')) {
                obj['volusion_login'] = ApiClient.convertToType(data['volusion_login'], 'String');
            }
            if (data.hasOwnProperty('volusion_password')) {
                obj['volusion_password'] = ApiClient.convertToType(data['volusion_password'], 'String');
            }
            if (data.hasOwnProperty('walmart_channel_type')) {
                obj['walmart_channel_type'] = ApiClient.convertToType(data['walmart_channel_type'], 'String');
            }
            if (data.hasOwnProperty('walmart_client_id')) {
                obj['walmart_client_id'] = ApiClient.convertToType(data['walmart_client_id'], 'String');
            }
            if (data.hasOwnProperty('walmart_client_secret')) {
                obj['walmart_client_secret'] = ApiClient.convertToType(data['walmart_client_secret'], 'String');
            }
            if (data.hasOwnProperty('walmart_environment')) {
                obj['walmart_environment'] = ApiClient.convertToType(data['walmart_environment'], 'String');
            }
            if (data.hasOwnProperty('wc_consumer_key')) {
                obj['wc_consumer_key'] = ApiClient.convertToType(data['wc_consumer_key'], 'String');
            }
            if (data.hasOwnProperty('wc_consumer_secret')) {
                obj['wc_consumer_secret'] = ApiClient.convertToType(data['wc_consumer_secret'], 'String');
            }
            if (data.hasOwnProperty('wix_app_id')) {
                obj['wix_app_id'] = ApiClient.convertToType(data['wix_app_id'], 'String');
            }
            if (data.hasOwnProperty('wix_app_secret_key')) {
                obj['wix_app_secret_key'] = ApiClient.convertToType(data['wix_app_secret_key'], 'String');
            }
            if (data.hasOwnProperty('wix_refresh_token')) {
                obj['wix_refresh_token'] = ApiClient.convertToType(data['wix_refresh_token'], 'String');
            }
            if (data.hasOwnProperty('zid_access_token')) {
                obj['zid_access_token'] = ApiClient.convertToType(data['zid_access_token'], 'String');
            }
            if (data.hasOwnProperty('zid_authorization')) {
                obj['zid_authorization'] = ApiClient.convertToType(data['zid_authorization'], 'String');
            }
            if (data.hasOwnProperty('zid_client_id')) {
                obj['zid_client_id'] = ApiClient.convertToType(data['zid_client_id'], 'Number');
            }
            if (data.hasOwnProperty('zid_client_secret')) {
                obj['zid_client_secret'] = ApiClient.convertToType(data['zid_client_secret'], 'String');
            }
            if (data.hasOwnProperty('zid_refresh_token')) {
                obj['zid_refresh_token'] = ApiClient.convertToType(data['zid_refresh_token'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AccountCartAdd</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AccountCartAdd</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AccountCartAdd.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['3dcart_access_token'] && !(typeof data['3dcart_access_token'] === 'string' || data['3dcart_access_token'] instanceof String)) {
            throw new Error("Expected the field `3dcart_access_token` to be a primitive type in the JSON string but got " + data['3dcart_access_token']);
        }
        // ensure the json data is a string
        if (data['3dcart_private_key'] && !(typeof data['3dcart_private_key'] === 'string' || data['3dcart_private_key'] instanceof String)) {
            throw new Error("Expected the field `3dcart_private_key` to be a primitive type in the JSON string but got " + data['3dcart_private_key']);
        }
        // ensure the json data is a string
        if (data['3dcartapi_api_key'] && !(typeof data['3dcartapi_api_key'] === 'string' || data['3dcartapi_api_key'] instanceof String)) {
            throw new Error("Expected the field `3dcartapi_api_key` to be a primitive type in the JSON string but got " + data['3dcartapi_api_key']);
        }
        // ensure the json data is a string
        if (data['amazon_access_key_id'] && !(typeof data['amazon_access_key_id'] === 'string' || data['amazon_access_key_id'] instanceof String)) {
            throw new Error("Expected the field `amazon_access_key_id` to be a primitive type in the JSON string but got " + data['amazon_access_key_id']);
        }
        // ensure the json data is a string
        if (data['amazon_access_token'] && !(typeof data['amazon_access_token'] === 'string' || data['amazon_access_token'] instanceof String)) {
            throw new Error("Expected the field `amazon_access_token` to be a primitive type in the JSON string but got " + data['amazon_access_token']);
        }
        // ensure the json data is a string
        if (data['amazon_marketplaces_ids'] && !(typeof data['amazon_marketplaces_ids'] === 'string' || data['amazon_marketplaces_ids'] instanceof String)) {
            throw new Error("Expected the field `amazon_marketplaces_ids` to be a primitive type in the JSON string but got " + data['amazon_marketplaces_ids']);
        }
        // ensure the json data is a string
        if (data['amazon_secret_key'] && !(typeof data['amazon_secret_key'] === 'string' || data['amazon_secret_key'] instanceof String)) {
            throw new Error("Expected the field `amazon_secret_key` to be a primitive type in the JSON string but got " + data['amazon_secret_key']);
        }
        // ensure the json data is a string
        if (data['amazon_seller_id'] && !(typeof data['amazon_seller_id'] === 'string' || data['amazon_seller_id'] instanceof String)) {
            throw new Error("Expected the field `amazon_seller_id` to be a primitive type in the JSON string but got " + data['amazon_seller_id']);
        }
        // ensure the json data is a string
        if (data['amazon_sp_api_environment'] && !(typeof data['amazon_sp_api_environment'] === 'string' || data['amazon_sp_api_environment'] instanceof String)) {
            throw new Error("Expected the field `amazon_sp_api_environment` to be a primitive type in the JSON string but got " + data['amazon_sp_api_environment']);
        }
        // ensure the json data is a string
        if (data['amazon_sp_aws_region'] && !(typeof data['amazon_sp_aws_region'] === 'string' || data['amazon_sp_aws_region'] instanceof String)) {
            throw new Error("Expected the field `amazon_sp_aws_region` to be a primitive type in the JSON string but got " + data['amazon_sp_aws_region']);
        }
        // ensure the json data is a string
        if (data['amazon_sp_aws_role_arn'] && !(typeof data['amazon_sp_aws_role_arn'] === 'string' || data['amazon_sp_aws_role_arn'] instanceof String)) {
            throw new Error("Expected the field `amazon_sp_aws_role_arn` to be a primitive type in the JSON string but got " + data['amazon_sp_aws_role_arn']);
        }
        // ensure the json data is a string
        if (data['amazon_sp_aws_user_key_id'] && !(typeof data['amazon_sp_aws_user_key_id'] === 'string' || data['amazon_sp_aws_user_key_id'] instanceof String)) {
            throw new Error("Expected the field `amazon_sp_aws_user_key_id` to be a primitive type in the JSON string but got " + data['amazon_sp_aws_user_key_id']);
        }
        // ensure the json data is a string
        if (data['amazon_sp_aws_user_secret'] && !(typeof data['amazon_sp_aws_user_secret'] === 'string' || data['amazon_sp_aws_user_secret'] instanceof String)) {
            throw new Error("Expected the field `amazon_sp_aws_user_secret` to be a primitive type in the JSON string but got " + data['amazon_sp_aws_user_secret']);
        }
        // ensure the json data is a string
        if (data['amazon_sp_client_id'] && !(typeof data['amazon_sp_client_id'] === 'string' || data['amazon_sp_client_id'] instanceof String)) {
            throw new Error("Expected the field `amazon_sp_client_id` to be a primitive type in the JSON string but got " + data['amazon_sp_client_id']);
        }
        // ensure the json data is a string
        if (data['amazon_sp_client_secret'] && !(typeof data['amazon_sp_client_secret'] === 'string' || data['amazon_sp_client_secret'] instanceof String)) {
            throw new Error("Expected the field `amazon_sp_client_secret` to be a primitive type in the JSON string but got " + data['amazon_sp_client_secret']);
        }
        // ensure the json data is a string
        if (data['amazon_sp_refresh_token'] && !(typeof data['amazon_sp_refresh_token'] === 'string' || data['amazon_sp_refresh_token'] instanceof String)) {
            throw new Error("Expected the field `amazon_sp_refresh_token` to be a primitive type in the JSON string but got " + data['amazon_sp_refresh_token']);
        }
        // ensure the json data is a string
        if (data['aspdotnetstorefront_api_pass'] && !(typeof data['aspdotnetstorefront_api_pass'] === 'string' || data['aspdotnetstorefront_api_pass'] instanceof String)) {
            throw new Error("Expected the field `aspdotnetstorefront_api_pass` to be a primitive type in the JSON string but got " + data['aspdotnetstorefront_api_pass']);
        }
        // ensure the json data is a string
        if (data['aspdotnetstorefront_api_user'] && !(typeof data['aspdotnetstorefront_api_user'] === 'string' || data['aspdotnetstorefront_api_user'] instanceof String)) {
            throw new Error("Expected the field `aspdotnetstorefront_api_user` to be a primitive type in the JSON string but got " + data['aspdotnetstorefront_api_user']);
        }
        // ensure the json data is a string
        if (data['bigcommerceapi_access_token'] && !(typeof data['bigcommerceapi_access_token'] === 'string' || data['bigcommerceapi_access_token'] instanceof String)) {
            throw new Error("Expected the field `bigcommerceapi_access_token` to be a primitive type in the JSON string but got " + data['bigcommerceapi_access_token']);
        }
        // ensure the json data is a string
        if (data['bigcommerceapi_admin_account'] && !(typeof data['bigcommerceapi_admin_account'] === 'string' || data['bigcommerceapi_admin_account'] instanceof String)) {
            throw new Error("Expected the field `bigcommerceapi_admin_account` to be a primitive type in the JSON string but got " + data['bigcommerceapi_admin_account']);
        }
        // ensure the json data is a string
        if (data['bigcommerceapi_api_key'] && !(typeof data['bigcommerceapi_api_key'] === 'string' || data['bigcommerceapi_api_key'] instanceof String)) {
            throw new Error("Expected the field `bigcommerceapi_api_key` to be a primitive type in the JSON string but got " + data['bigcommerceapi_api_key']);
        }
        // ensure the json data is a string
        if (data['bigcommerceapi_api_path'] && !(typeof data['bigcommerceapi_api_path'] === 'string' || data['bigcommerceapi_api_path'] instanceof String)) {
            throw new Error("Expected the field `bigcommerceapi_api_path` to be a primitive type in the JSON string but got " + data['bigcommerceapi_api_path']);
        }
        // ensure the json data is a string
        if (data['bigcommerceapi_client_id'] && !(typeof data['bigcommerceapi_client_id'] === 'string' || data['bigcommerceapi_client_id'] instanceof String)) {
            throw new Error("Expected the field `bigcommerceapi_client_id` to be a primitive type in the JSON string but got " + data['bigcommerceapi_client_id']);
        }
        // ensure the json data is a string
        if (data['bigcommerceapi_context'] && !(typeof data['bigcommerceapi_context'] === 'string' || data['bigcommerceapi_context'] instanceof String)) {
            throw new Error("Expected the field `bigcommerceapi_context` to be a primitive type in the JSON string but got " + data['bigcommerceapi_context']);
        }
        // ensure the json data is a string
        if (data['bridge_url'] && !(typeof data['bridge_url'] === 'string' || data['bridge_url'] instanceof String)) {
            throw new Error("Expected the field `bridge_url` to be a primitive type in the JSON string but got " + data['bridge_url']);
        }
        // ensure the json data is a string
        if (data['cart_id'] && !(typeof data['cart_id'] === 'string' || data['cart_id'] instanceof String)) {
            throw new Error("Expected the field `cart_id` to be a primitive type in the JSON string but got " + data['cart_id']);
        }
        // ensure the json data is a string
        if (data['commercehq_api_key'] && !(typeof data['commercehq_api_key'] === 'string' || data['commercehq_api_key'] instanceof String)) {
            throw new Error("Expected the field `commercehq_api_key` to be a primitive type in the JSON string but got " + data['commercehq_api_key']);
        }
        // ensure the json data is a string
        if (data['commercehq_api_password'] && !(typeof data['commercehq_api_password'] === 'string' || data['commercehq_api_password'] instanceof String)) {
            throw new Error("Expected the field `commercehq_api_password` to be a primitive type in the JSON string but got " + data['commercehq_api_password']);
        }
        // ensure the json data is a string
        if (data['db_tables_prefix'] && !(typeof data['db_tables_prefix'] === 'string' || data['db_tables_prefix'] instanceof String)) {
            throw new Error("Expected the field `db_tables_prefix` to be a primitive type in the JSON string but got " + data['db_tables_prefix']);
        }
        // ensure the json data is a string
        if (data['demandware_api_password'] && !(typeof data['demandware_api_password'] === 'string' || data['demandware_api_password'] instanceof String)) {
            throw new Error("Expected the field `demandware_api_password` to be a primitive type in the JSON string but got " + data['demandware_api_password']);
        }
        // ensure the json data is a string
        if (data['demandware_client_id'] && !(typeof data['demandware_client_id'] === 'string' || data['demandware_client_id'] instanceof String)) {
            throw new Error("Expected the field `demandware_client_id` to be a primitive type in the JSON string but got " + data['demandware_client_id']);
        }
        // ensure the json data is a string
        if (data['demandware_user_name'] && !(typeof data['demandware_user_name'] === 'string' || data['demandware_user_name'] instanceof String)) {
            throw new Error("Expected the field `demandware_user_name` to be a primitive type in the JSON string but got " + data['demandware_user_name']);
        }
        // ensure the json data is a string
        if (data['demandware_user_password'] && !(typeof data['demandware_user_password'] === 'string' || data['demandware_user_password'] instanceof String)) {
            throw new Error("Expected the field `demandware_user_password` to be a primitive type in the JSON string but got " + data['demandware_user_password']);
        }
        // ensure the json data is a string
        if (data['ebay_access_token'] && !(typeof data['ebay_access_token'] === 'string' || data['ebay_access_token'] instanceof String)) {
            throw new Error("Expected the field `ebay_access_token` to be a primitive type in the JSON string but got " + data['ebay_access_token']);
        }
        // ensure the json data is a string
        if (data['ebay_client_id'] && !(typeof data['ebay_client_id'] === 'string' || data['ebay_client_id'] instanceof String)) {
            throw new Error("Expected the field `ebay_client_id` to be a primitive type in the JSON string but got " + data['ebay_client_id']);
        }
        // ensure the json data is a string
        if (data['ebay_client_secret'] && !(typeof data['ebay_client_secret'] === 'string' || data['ebay_client_secret'] instanceof String)) {
            throw new Error("Expected the field `ebay_client_secret` to be a primitive type in the JSON string but got " + data['ebay_client_secret']);
        }
        // ensure the json data is a string
        if (data['ebay_environment'] && !(typeof data['ebay_environment'] === 'string' || data['ebay_environment'] instanceof String)) {
            throw new Error("Expected the field `ebay_environment` to be a primitive type in the JSON string but got " + data['ebay_environment']);
        }
        // ensure the json data is a string
        if (data['ebay_refresh_token'] && !(typeof data['ebay_refresh_token'] === 'string' || data['ebay_refresh_token'] instanceof String)) {
            throw new Error("Expected the field `ebay_refresh_token` to be a primitive type in the JSON string but got " + data['ebay_refresh_token']);
        }
        // ensure the json data is a string
        if (data['ebay_runame'] && !(typeof data['ebay_runame'] === 'string' || data['ebay_runame'] instanceof String)) {
            throw new Error("Expected the field `ebay_runame` to be a primitive type in the JSON string but got " + data['ebay_runame']);
        }
        // ensure the json data is a string
        if (data['ecwid_acess_token'] && !(typeof data['ecwid_acess_token'] === 'string' || data['ecwid_acess_token'] instanceof String)) {
            throw new Error("Expected the field `ecwid_acess_token` to be a primitive type in the JSON string but got " + data['ecwid_acess_token']);
        }
        // ensure the json data is a string
        if (data['ecwid_store_id'] && !(typeof data['ecwid_store_id'] === 'string' || data['ecwid_store_id'] instanceof String)) {
            throw new Error("Expected the field `ecwid_store_id` to be a primitive type in the JSON string but got " + data['ecwid_store_id']);
        }
        // ensure the json data is a string
        if (data['etsy_access_token'] && !(typeof data['etsy_access_token'] === 'string' || data['etsy_access_token'] instanceof String)) {
            throw new Error("Expected the field `etsy_access_token` to be a primitive type in the JSON string but got " + data['etsy_access_token']);
        }
        // ensure the json data is a string
        if (data['etsy_client_id'] && !(typeof data['etsy_client_id'] === 'string' || data['etsy_client_id'] instanceof String)) {
            throw new Error("Expected the field `etsy_client_id` to be a primitive type in the JSON string but got " + data['etsy_client_id']);
        }
        // ensure the json data is a string
        if (data['etsy_keystring'] && !(typeof data['etsy_keystring'] === 'string' || data['etsy_keystring'] instanceof String)) {
            throw new Error("Expected the field `etsy_keystring` to be a primitive type in the JSON string but got " + data['etsy_keystring']);
        }
        // ensure the json data is a string
        if (data['etsy_refresh_token'] && !(typeof data['etsy_refresh_token'] === 'string' || data['etsy_refresh_token'] instanceof String)) {
            throw new Error("Expected the field `etsy_refresh_token` to be a primitive type in the JSON string but got " + data['etsy_refresh_token']);
        }
        // ensure the json data is a string
        if (data['etsy_shared_secret'] && !(typeof data['etsy_shared_secret'] === 'string' || data['etsy_shared_secret'] instanceof String)) {
            throw new Error("Expected the field `etsy_shared_secret` to be a primitive type in the JSON string but got " + data['etsy_shared_secret']);
        }
        // ensure the json data is a string
        if (data['etsy_token_secret'] && !(typeof data['etsy_token_secret'] === 'string' || data['etsy_token_secret'] instanceof String)) {
            throw new Error("Expected the field `etsy_token_secret` to be a primitive type in the JSON string but got " + data['etsy_token_secret']);
        }
        // ensure the json data is a string
        if (data['ftp_host'] && !(typeof data['ftp_host'] === 'string' || data['ftp_host'] instanceof String)) {
            throw new Error("Expected the field `ftp_host` to be a primitive type in the JSON string but got " + data['ftp_host']);
        }
        // ensure the json data is a string
        if (data['ftp_password'] && !(typeof data['ftp_password'] === 'string' || data['ftp_password'] instanceof String)) {
            throw new Error("Expected the field `ftp_password` to be a primitive type in the JSON string but got " + data['ftp_password']);
        }
        // ensure the json data is a string
        if (data['ftp_store_dir'] && !(typeof data['ftp_store_dir'] === 'string' || data['ftp_store_dir'] instanceof String)) {
            throw new Error("Expected the field `ftp_store_dir` to be a primitive type in the JSON string but got " + data['ftp_store_dir']);
        }
        // ensure the json data is a string
        if (data['ftp_user'] && !(typeof data['ftp_user'] === 'string' || data['ftp_user'] instanceof String)) {
            throw new Error("Expected the field `ftp_user` to be a primitive type in the JSON string but got " + data['ftp_user']);
        }
        // ensure the json data is a string
        if (data['hybris_client_id'] && !(typeof data['hybris_client_id'] === 'string' || data['hybris_client_id'] instanceof String)) {
            throw new Error("Expected the field `hybris_client_id` to be a primitive type in the JSON string but got " + data['hybris_client_id']);
        }
        // ensure the json data is a string
        if (data['hybris_client_secret'] && !(typeof data['hybris_client_secret'] === 'string' || data['hybris_client_secret'] instanceof String)) {
            throw new Error("Expected the field `hybris_client_secret` to be a primitive type in the JSON string but got " + data['hybris_client_secret']);
        }
        // ensure the json data is a string
        if (data['hybris_password'] && !(typeof data['hybris_password'] === 'string' || data['hybris_password'] instanceof String)) {
            throw new Error("Expected the field `hybris_password` to be a primitive type in the JSON string but got " + data['hybris_password']);
        }
        // ensure the json data is a string
        if (data['hybris_username'] && !(typeof data['hybris_username'] === 'string' || data['hybris_username'] instanceof String)) {
            throw new Error("Expected the field `hybris_username` to be a primitive type in the JSON string but got " + data['hybris_username']);
        }
        if (data['hybris_websites']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['hybris_websites'])) {
                throw new Error("Expected the field `hybris_websites` to be an array in the JSON data but got " + data['hybris_websites']);
            }
            // validate the optional field `hybris_websites` (array)
            for (const item of data['hybris_websites']) {
                AccountCartAddHybrisWebsitesInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['lightspeed_api_key'] && !(typeof data['lightspeed_api_key'] === 'string' || data['lightspeed_api_key'] instanceof String)) {
            throw new Error("Expected the field `lightspeed_api_key` to be a primitive type in the JSON string but got " + data['lightspeed_api_key']);
        }
        // ensure the json data is a string
        if (data['lightspeed_api_secret'] && !(typeof data['lightspeed_api_secret'] === 'string' || data['lightspeed_api_secret'] instanceof String)) {
            throw new Error("Expected the field `lightspeed_api_secret` to be a primitive type in the JSON string but got " + data['lightspeed_api_secret']);
        }
        // ensure the json data is a string
        if (data['magento_access_token'] && !(typeof data['magento_access_token'] === 'string' || data['magento_access_token'] instanceof String)) {
            throw new Error("Expected the field `magento_access_token` to be a primitive type in the JSON string but got " + data['magento_access_token']);
        }
        // ensure the json data is a string
        if (data['magento_consumer_key'] && !(typeof data['magento_consumer_key'] === 'string' || data['magento_consumer_key'] instanceof String)) {
            throw new Error("Expected the field `magento_consumer_key` to be a primitive type in the JSON string but got " + data['magento_consumer_key']);
        }
        // ensure the json data is a string
        if (data['magento_consumer_secret'] && !(typeof data['magento_consumer_secret'] === 'string' || data['magento_consumer_secret'] instanceof String)) {
            throw new Error("Expected the field `magento_consumer_secret` to be a primitive type in the JSON string but got " + data['magento_consumer_secret']);
        }
        // ensure the json data is a string
        if (data['magento_token_secret'] && !(typeof data['magento_token_secret'] === 'string' || data['magento_token_secret'] instanceof String)) {
            throw new Error("Expected the field `magento_token_secret` to be a primitive type in the JSON string but got " + data['magento_token_secret']);
        }
        // ensure the json data is a string
        if (data['mercado_libre_app_id'] && !(typeof data['mercado_libre_app_id'] === 'string' || data['mercado_libre_app_id'] instanceof String)) {
            throw new Error("Expected the field `mercado_libre_app_id` to be a primitive type in the JSON string but got " + data['mercado_libre_app_id']);
        }
        // ensure the json data is a string
        if (data['mercado_libre_app_secret_key'] && !(typeof data['mercado_libre_app_secret_key'] === 'string' || data['mercado_libre_app_secret_key'] instanceof String)) {
            throw new Error("Expected the field `mercado_libre_app_secret_key` to be a primitive type in the JSON string but got " + data['mercado_libre_app_secret_key']);
        }
        // ensure the json data is a string
        if (data['mercado_libre_refresh_token'] && !(typeof data['mercado_libre_refresh_token'] === 'string' || data['mercado_libre_refresh_token'] instanceof String)) {
            throw new Error("Expected the field `mercado_libre_refresh_token` to be a primitive type in the JSON string but got " + data['mercado_libre_refresh_token']);
        }
        // ensure the json data is a string
        if (data['neto_api_key'] && !(typeof data['neto_api_key'] === 'string' || data['neto_api_key'] instanceof String)) {
            throw new Error("Expected the field `neto_api_key` to be a primitive type in the JSON string but got " + data['neto_api_key']);
        }
        // ensure the json data is a string
        if (data['neto_api_username'] && !(typeof data['neto_api_username'] === 'string' || data['neto_api_username'] instanceof String)) {
            throw new Error("Expected the field `neto_api_username` to be a primitive type in the JSON string but got " + data['neto_api_username']);
        }
        // ensure the json data is a string
        if (data['prestashop_webservice_key'] && !(typeof data['prestashop_webservice_key'] === 'string' || data['prestashop_webservice_key'] instanceof String)) {
            throw new Error("Expected the field `prestashop_webservice_key` to be a primitive type in the JSON string but got " + data['prestashop_webservice_key']);
        }
        // ensure the json data is a string
        if (data['shopify_access_token'] && !(typeof data['shopify_access_token'] === 'string' || data['shopify_access_token'] instanceof String)) {
            throw new Error("Expected the field `shopify_access_token` to be a primitive type in the JSON string but got " + data['shopify_access_token']);
        }
        // ensure the json data is a string
        if (data['shopify_api_key'] && !(typeof data['shopify_api_key'] === 'string' || data['shopify_api_key'] instanceof String)) {
            throw new Error("Expected the field `shopify_api_key` to be a primitive type in the JSON string but got " + data['shopify_api_key']);
        }
        // ensure the json data is a string
        if (data['shopify_api_password'] && !(typeof data['shopify_api_password'] === 'string' || data['shopify_api_password'] instanceof String)) {
            throw new Error("Expected the field `shopify_api_password` to be a primitive type in the JSON string but got " + data['shopify_api_password']);
        }
        // ensure the json data is a string
        if (data['shopify_shared_secret'] && !(typeof data['shopify_shared_secret'] === 'string' || data['shopify_shared_secret'] instanceof String)) {
            throw new Error("Expected the field `shopify_shared_secret` to be a primitive type in the JSON string but got " + data['shopify_shared_secret']);
        }
        // ensure the json data is a string
        if (data['shopware_access_key'] && !(typeof data['shopware_access_key'] === 'string' || data['shopware_access_key'] instanceof String)) {
            throw new Error("Expected the field `shopware_access_key` to be a primitive type in the JSON string but got " + data['shopware_access_key']);
        }
        // ensure the json data is a string
        if (data['shopware_api_key'] && !(typeof data['shopware_api_key'] === 'string' || data['shopware_api_key'] instanceof String)) {
            throw new Error("Expected the field `shopware_api_key` to be a primitive type in the JSON string but got " + data['shopware_api_key']);
        }
        // ensure the json data is a string
        if (data['shopware_api_secret'] && !(typeof data['shopware_api_secret'] === 'string' || data['shopware_api_secret'] instanceof String)) {
            throw new Error("Expected the field `shopware_api_secret` to be a primitive type in the JSON string but got " + data['shopware_api_secret']);
        }
        // ensure the json data is a string
        if (data['squarespace_api_key'] && !(typeof data['squarespace_api_key'] === 'string' || data['squarespace_api_key'] instanceof String)) {
            throw new Error("Expected the field `squarespace_api_key` to be a primitive type in the JSON string but got " + data['squarespace_api_key']);
        }
        // ensure the json data is a string
        if (data['store_key'] && !(typeof data['store_key'] === 'string' || data['store_key'] instanceof String)) {
            throw new Error("Expected the field `store_key` to be a primitive type in the JSON string but got " + data['store_key']);
        }
        // ensure the json data is a string
        if (data['store_root'] && !(typeof data['store_root'] === 'string' || data['store_root'] instanceof String)) {
            throw new Error("Expected the field `store_root` to be a primitive type in the JSON string but got " + data['store_root']);
        }
        // ensure the json data is a string
        if (data['store_url'] && !(typeof data['store_url'] === 'string' || data['store_url'] instanceof String)) {
            throw new Error("Expected the field `store_url` to be a primitive type in the JSON string but got " + data['store_url']);
        }
        // ensure the json data is a string
        if (data['volusion_login'] && !(typeof data['volusion_login'] === 'string' || data['volusion_login'] instanceof String)) {
            throw new Error("Expected the field `volusion_login` to be a primitive type in the JSON string but got " + data['volusion_login']);
        }
        // ensure the json data is a string
        if (data['volusion_password'] && !(typeof data['volusion_password'] === 'string' || data['volusion_password'] instanceof String)) {
            throw new Error("Expected the field `volusion_password` to be a primitive type in the JSON string but got " + data['volusion_password']);
        }
        // ensure the json data is a string
        if (data['walmart_channel_type'] && !(typeof data['walmart_channel_type'] === 'string' || data['walmart_channel_type'] instanceof String)) {
            throw new Error("Expected the field `walmart_channel_type` to be a primitive type in the JSON string but got " + data['walmart_channel_type']);
        }
        // ensure the json data is a string
        if (data['walmart_client_id'] && !(typeof data['walmart_client_id'] === 'string' || data['walmart_client_id'] instanceof String)) {
            throw new Error("Expected the field `walmart_client_id` to be a primitive type in the JSON string but got " + data['walmart_client_id']);
        }
        // ensure the json data is a string
        if (data['walmart_client_secret'] && !(typeof data['walmart_client_secret'] === 'string' || data['walmart_client_secret'] instanceof String)) {
            throw new Error("Expected the field `walmart_client_secret` to be a primitive type in the JSON string but got " + data['walmart_client_secret']);
        }
        // ensure the json data is a string
        if (data['walmart_environment'] && !(typeof data['walmart_environment'] === 'string' || data['walmart_environment'] instanceof String)) {
            throw new Error("Expected the field `walmart_environment` to be a primitive type in the JSON string but got " + data['walmart_environment']);
        }
        // ensure the json data is a string
        if (data['wc_consumer_key'] && !(typeof data['wc_consumer_key'] === 'string' || data['wc_consumer_key'] instanceof String)) {
            throw new Error("Expected the field `wc_consumer_key` to be a primitive type in the JSON string but got " + data['wc_consumer_key']);
        }
        // ensure the json data is a string
        if (data['wc_consumer_secret'] && !(typeof data['wc_consumer_secret'] === 'string' || data['wc_consumer_secret'] instanceof String)) {
            throw new Error("Expected the field `wc_consumer_secret` to be a primitive type in the JSON string but got " + data['wc_consumer_secret']);
        }
        // ensure the json data is a string
        if (data['wix_app_id'] && !(typeof data['wix_app_id'] === 'string' || data['wix_app_id'] instanceof String)) {
            throw new Error("Expected the field `wix_app_id` to be a primitive type in the JSON string but got " + data['wix_app_id']);
        }
        // ensure the json data is a string
        if (data['wix_app_secret_key'] && !(typeof data['wix_app_secret_key'] === 'string' || data['wix_app_secret_key'] instanceof String)) {
            throw new Error("Expected the field `wix_app_secret_key` to be a primitive type in the JSON string but got " + data['wix_app_secret_key']);
        }
        // ensure the json data is a string
        if (data['wix_refresh_token'] && !(typeof data['wix_refresh_token'] === 'string' || data['wix_refresh_token'] instanceof String)) {
            throw new Error("Expected the field `wix_refresh_token` to be a primitive type in the JSON string but got " + data['wix_refresh_token']);
        }
        // ensure the json data is a string
        if (data['zid_access_token'] && !(typeof data['zid_access_token'] === 'string' || data['zid_access_token'] instanceof String)) {
            throw new Error("Expected the field `zid_access_token` to be a primitive type in the JSON string but got " + data['zid_access_token']);
        }
        // ensure the json data is a string
        if (data['zid_authorization'] && !(typeof data['zid_authorization'] === 'string' || data['zid_authorization'] instanceof String)) {
            throw new Error("Expected the field `zid_authorization` to be a primitive type in the JSON string but got " + data['zid_authorization']);
        }
        // ensure the json data is a string
        if (data['zid_client_secret'] && !(typeof data['zid_client_secret'] === 'string' || data['zid_client_secret'] instanceof String)) {
            throw new Error("Expected the field `zid_client_secret` to be a primitive type in the JSON string but got " + data['zid_client_secret']);
        }
        // ensure the json data is a string
        if (data['zid_refresh_token'] && !(typeof data['zid_refresh_token'] === 'string' || data['zid_refresh_token'] instanceof String)) {
            throw new Error("Expected the field `zid_refresh_token` to be a primitive type in the JSON string but got " + data['zid_refresh_token']);
        }

        return true;
    }


}

AccountCartAdd.RequiredProperties = ["amazon_sp_aws_region", "amazon_sp_aws_role_arn", "amazon_sp_aws_user_key_id", "amazon_sp_aws_user_secret", "amazon_sp_client_id", "amazon_sp_client_secret", "amazon_sp_refresh_token", "cart_id", "etsy_client_id", "etsy_refresh_token", "store_url"];

/**
 * 3DCart Token
 * @member {String} 3dcart_access_token
 */
AccountCartAdd.prototype['3dcart_access_token'] = undefined;

/**
 * 3DCart Private Key
 * @member {String} 3dcart_private_key
 */
AccountCartAdd.prototype['3dcart_private_key'] = undefined;

/**
 * 3DCart API Key
 * @member {String} 3dcartapi_api_key
 */
AccountCartAdd.prototype['3dcartapi_api_key'] = undefined;

/**
 * Amazon Secret Key Id
 * @member {String} amazon_access_key_id
 */
AccountCartAdd.prototype['amazon_access_key_id'] = undefined;

/**
 * MWS Auth Token. Access token authorizing the app to access resources on behalf of a user
 * @member {String} amazon_access_token
 */
AccountCartAdd.prototype['amazon_access_token'] = undefined;

/**
 * Amazon Marketplace IDs comma separated string
 * @member {String} amazon_marketplaces_ids
 */
AccountCartAdd.prototype['amazon_marketplaces_ids'] = undefined;

/**
 * Amazon Secret Key
 * @member {String} amazon_secret_key
 */
AccountCartAdd.prototype['amazon_secret_key'] = undefined;

/**
 * Amazon Seller ID (Merchant token)
 * @member {String} amazon_seller_id
 */
AccountCartAdd.prototype['amazon_seller_id'] = undefined;

/**
 * Amazon SP API environment
 * @member {String} amazon_sp_api_environment
 * @default 'production'
 */
AccountCartAdd.prototype['amazon_sp_api_environment'] = 'production';

/**
 * Amazon AWS Region
 * @member {module:model/AccountCartAdd.AmazonSpAwsRegionEnum} amazon_sp_aws_region
 */
AccountCartAdd.prototype['amazon_sp_aws_region'] = undefined;

/**
 * Amazon AWS Role ARN
 * @member {String} amazon_sp_aws_role_arn
 */
AccountCartAdd.prototype['amazon_sp_aws_role_arn'] = undefined;

/**
 * Amazon AWS user access key ID
 * @member {String} amazon_sp_aws_user_key_id
 */
AccountCartAdd.prototype['amazon_sp_aws_user_key_id'] = undefined;

/**
 * Amazon AWS user secret access key
 * @member {String} amazon_sp_aws_user_secret
 */
AccountCartAdd.prototype['amazon_sp_aws_user_secret'] = undefined;

/**
 * Amazon SP API app client id
 * @member {String} amazon_sp_client_id
 */
AccountCartAdd.prototype['amazon_sp_client_id'] = undefined;

/**
 * Amazon SP API app client secret
 * @member {String} amazon_sp_client_secret
 */
AccountCartAdd.prototype['amazon_sp_client_secret'] = undefined;

/**
 * Amazon SP API OAuth refresh token
 * @member {String} amazon_sp_refresh_token
 */
AccountCartAdd.prototype['amazon_sp_refresh_token'] = undefined;

/**
 * AspDotNetStorefront API Password
 * @member {String} aspdotnetstorefront_api_pass
 */
AccountCartAdd.prototype['aspdotnetstorefront_api_pass'] = undefined;

/**
 * It's a AspDotNetStorefront account for which API is available
 * @member {String} aspdotnetstorefront_api_user
 */
AccountCartAdd.prototype['aspdotnetstorefront_api_user'] = undefined;

/**
 * Access token authorizing the app to access resources on behalf of a user
 * @member {String} bigcommerceapi_access_token
 */
AccountCartAdd.prototype['bigcommerceapi_access_token'] = undefined;

/**
 * It's a BigCommerce account for which API is enabled
 * @member {String} bigcommerceapi_admin_account
 */
AccountCartAdd.prototype['bigcommerceapi_admin_account'] = undefined;

/**
 * Bigcommerce API Key
 * @member {String} bigcommerceapi_api_key
 */
AccountCartAdd.prototype['bigcommerceapi_api_key'] = undefined;

/**
 * BigCommerce API URL
 * @member {String} bigcommerceapi_api_path
 */
AccountCartAdd.prototype['bigcommerceapi_api_path'] = undefined;

/**
 * Client ID of the requesting app
 * @member {String} bigcommerceapi_client_id
 */
AccountCartAdd.prototype['bigcommerceapi_client_id'] = undefined;

/**
 * API Path section unique to the store
 * @member {String} bigcommerceapi_context
 */
AccountCartAdd.prototype['bigcommerceapi_context'] = undefined;

/**
 * This parameter allows to set up store with custom bridge url (also you must use store_root parameter if a bridge folder is not in the root folder of the store)
 * @member {String} bridge_url
 */
AccountCartAdd.prototype['bridge_url'] = undefined;

/**
 * Storeâ€™s identifier which you can get from cart_list method
 * @member {module:model/AccountCartAdd.CartIdEnum} cart_id
 */
AccountCartAdd.prototype['cart_id'] = undefined;

/**
 * CommerceHQ api key
 * @member {String} commercehq_api_key
 */
AccountCartAdd.prototype['commercehq_api_key'] = undefined;

/**
 * CommerceHQ api password
 * @member {String} commercehq_api_password
 */
AccountCartAdd.prototype['commercehq_api_password'] = undefined;

/**
 * DB tables prefix
 * @member {String} db_tables_prefix
 */
AccountCartAdd.prototype['db_tables_prefix'] = undefined;

/**
 * Demandware api password
 * @member {String} demandware_api_password
 */
AccountCartAdd.prototype['demandware_api_password'] = undefined;

/**
 * Demandware client id
 * @member {String} demandware_client_id
 */
AccountCartAdd.prototype['demandware_client_id'] = undefined;

/**
 * Demandware user name
 * @member {String} demandware_user_name
 */
AccountCartAdd.prototype['demandware_user_name'] = undefined;

/**
 * Demandware user password
 * @member {String} demandware_user_password
 */
AccountCartAdd.prototype['demandware_user_password'] = undefined;

/**
 * Used to authenticate API requests.
 * @member {String} ebay_access_token
 */
AccountCartAdd.prototype['ebay_access_token'] = undefined;

/**
 * Application ID (AppID).
 * @member {String} ebay_client_id
 */
AccountCartAdd.prototype['ebay_client_id'] = undefined;

/**
 * Shared Secret from eBay application
 * @member {String} ebay_client_secret
 */
AccountCartAdd.prototype['ebay_client_secret'] = undefined;

/**
 * eBay environment
 * @member {String} ebay_environment
 * @default 'production'
 */
AccountCartAdd.prototype['ebay_environment'] = 'production';

/**
 * Used to renew the access token.
 * @member {String} ebay_refresh_token
 */
AccountCartAdd.prototype['ebay_refresh_token'] = undefined;

/**
 * The RuName value that eBay assigns to your application.
 * @member {String} ebay_runame
 */
AccountCartAdd.prototype['ebay_runame'] = undefined;

/**
 * eBay global ID
 * @member {Number} ebay_site_id
 * @default 0
 */
AccountCartAdd.prototype['ebay_site_id'] = 0;

/**
 * Access token authorizing the app to access resources on behalf of a user
 * @member {String} ecwid_acess_token
 */
AccountCartAdd.prototype['ecwid_acess_token'] = undefined;

/**
 * Store Id
 * @member {String} ecwid_store_id
 */
AccountCartAdd.prototype['ecwid_store_id'] = undefined;

/**
 * Access token authorizing the app to access resources on behalf of a user
 * @member {String} etsy_access_token
 */
AccountCartAdd.prototype['etsy_access_token'] = undefined;

/**
 * Etsy Client Id
 * @member {String} etsy_client_id
 */
AccountCartAdd.prototype['etsy_client_id'] = undefined;

/**
 * Etsy keystring
 * @member {String} etsy_keystring
 */
AccountCartAdd.prototype['etsy_keystring'] = undefined;

/**
 * Etsy Refresh token
 * @member {String} etsy_refresh_token
 */
AccountCartAdd.prototype['etsy_refresh_token'] = undefined;

/**
 * Etsy shared secret
 * @member {String} etsy_shared_secret
 */
AccountCartAdd.prototype['etsy_shared_secret'] = undefined;

/**
 * Secret token authorizing the app to access resources on behalf of a user
 * @member {String} etsy_token_secret
 */
AccountCartAdd.prototype['etsy_token_secret'] = undefined;

/**
 * FTP connection host
 * @member {String} ftp_host
 */
AccountCartAdd.prototype['ftp_host'] = undefined;

/**
 * FTP Password
 * @member {String} ftp_password
 */
AccountCartAdd.prototype['ftp_password'] = undefined;

/**
 * FTP Port
 * @member {Number} ftp_port
 */
AccountCartAdd.prototype['ftp_port'] = undefined;

/**
 * FTP Store dir
 * @member {String} ftp_store_dir
 */
AccountCartAdd.prototype['ftp_store_dir'] = undefined;

/**
 * FTP User
 * @member {String} ftp_user
 */
AccountCartAdd.prototype['ftp_user'] = undefined;

/**
 * Omni Commerce Connector Client ID
 * @member {String} hybris_client_id
 */
AccountCartAdd.prototype['hybris_client_id'] = undefined;

/**
 * Omni Commerce Connector Client Secret
 * @member {String} hybris_client_secret
 */
AccountCartAdd.prototype['hybris_client_secret'] = undefined;

/**
 * User password
 * @member {String} hybris_password
 */
AccountCartAdd.prototype['hybris_password'] = undefined;

/**
 * User Name
 * @member {String} hybris_username
 */
AccountCartAdd.prototype['hybris_username'] = undefined;

/**
 * Websites to stores mapping data
 * @member {Array.<module:model/AccountCartAddHybrisWebsitesInner>} hybris_websites
 */
AccountCartAdd.prototype['hybris_websites'] = undefined;

/**
 * LightSpeed api key
 * @member {String} lightspeed_api_key
 */
AccountCartAdd.prototype['lightspeed_api_key'] = undefined;

/**
 * LightSpeed api secret
 * @member {String} lightspeed_api_secret
 */
AccountCartAdd.prototype['lightspeed_api_secret'] = undefined;

/**
 * Magento Access Token
 * @member {String} magento_access_token
 */
AccountCartAdd.prototype['magento_access_token'] = undefined;

/**
 * Magento Consumer Key
 * @member {String} magento_consumer_key
 */
AccountCartAdd.prototype['magento_consumer_key'] = undefined;

/**
 * Magento Consumer Secret
 * @member {String} magento_consumer_secret
 */
AccountCartAdd.prototype['magento_consumer_secret'] = undefined;

/**
 * Magento Token Secret
 * @member {String} magento_token_secret
 */
AccountCartAdd.prototype['magento_token_secret'] = undefined;

/**
 * Mercado Libre App ID
 * @member {String} mercado_libre_app_id
 */
AccountCartAdd.prototype['mercado_libre_app_id'] = undefined;

/**
 * Mercado Libre App Secret Key
 * @member {String} mercado_libre_app_secret_key
 */
AccountCartAdd.prototype['mercado_libre_app_secret_key'] = undefined;

/**
 * Mercado Libre Refresh Token
 * @member {String} mercado_libre_refresh_token
 */
AccountCartAdd.prototype['mercado_libre_refresh_token'] = undefined;

/**
 * Neto API Key
 * @member {String} neto_api_key
 */
AccountCartAdd.prototype['neto_api_key'] = undefined;

/**
 * Neto User Name
 * @member {String} neto_api_username
 */
AccountCartAdd.prototype['neto_api_username'] = undefined;

/**
 * Prestashop webservice key
 * @member {String} prestashop_webservice_key
 */
AccountCartAdd.prototype['prestashop_webservice_key'] = undefined;

/**
 * Access token authorizing the app to access resources on behalf of a user
 * @member {String} shopify_access_token
 */
AccountCartAdd.prototype['shopify_access_token'] = undefined;

/**
 * Shopify API Key
 * @member {String} shopify_api_key
 */
AccountCartAdd.prototype['shopify_api_key'] = undefined;

/**
 * Shopify API Password
 * @member {String} shopify_api_password
 */
AccountCartAdd.prototype['shopify_api_password'] = undefined;

/**
 * Shared secret
 * @member {String} shopify_shared_secret
 */
AccountCartAdd.prototype['shopify_shared_secret'] = undefined;

/**
 * Shopware access key
 * @member {String} shopware_access_key
 */
AccountCartAdd.prototype['shopware_access_key'] = undefined;

/**
 * Shopware api key
 * @member {String} shopware_api_key
 */
AccountCartAdd.prototype['shopware_api_key'] = undefined;

/**
 * Shopware client secret access key
 * @member {String} shopware_api_secret
 */
AccountCartAdd.prototype['shopware_api_secret'] = undefined;

/**
 * Squarespace API Key
 * @member {String} squarespace_api_key
 */
AccountCartAdd.prototype['squarespace_api_key'] = undefined;

/**
 * Set this parameter if bridge is already uploaded to store
 * @member {String} store_key
 */
AccountCartAdd.prototype['store_key'] = undefined;

/**
 * Absolute path to the store root directory (used with \"bridge_url\" parameter)
 * @member {String} store_root
 */
AccountCartAdd.prototype['store_root'] = undefined;

/**
 * A web address of a store that you would like to connect to API2Cart
 * @member {String} store_url
 */
AccountCartAdd.prototype['store_url'] = undefined;

/**
 * Specify if api2cart should validate cart version
 * @member {Boolean} validate_version
 * @default false
 */
AccountCartAdd.prototype['validate_version'] = false;

/**
 * Enables or disables cart's verification
 * @member {Boolean} verify
 * @default true
 */
AccountCartAdd.prototype['verify'] = true;

/**
 * It's a Volusion account for which API is enabled
 * @member {String} volusion_login
 */
AccountCartAdd.prototype['volusion_login'] = undefined;

/**
 * Volusion API Password
 * @member {String} volusion_password
 */
AccountCartAdd.prototype['volusion_password'] = undefined;

/**
 * Walmart WM_CONSUMER.CHANNEL.TYPE header
 * @member {String} walmart_channel_type
 */
AccountCartAdd.prototype['walmart_channel_type'] = undefined;

/**
 * Walmart client ID
 * @member {String} walmart_client_id
 */
AccountCartAdd.prototype['walmart_client_id'] = undefined;

/**
 * Walmart client secret
 * @member {String} walmart_client_secret
 */
AccountCartAdd.prototype['walmart_client_secret'] = undefined;

/**
 * Walmart environment
 * @member {String} walmart_environment
 * @default 'production'
 */
AccountCartAdd.prototype['walmart_environment'] = 'production';

/**
 * Woocommerce consumer key
 * @member {String} wc_consumer_key
 */
AccountCartAdd.prototype['wc_consumer_key'] = undefined;

/**
 * Woocommerce consumer secret
 * @member {String} wc_consumer_secret
 */
AccountCartAdd.prototype['wc_consumer_secret'] = undefined;

/**
 * Wix App ID
 * @member {String} wix_app_id
 */
AccountCartAdd.prototype['wix_app_id'] = undefined;

/**
 * Wix App Secret Key
 * @member {String} wix_app_secret_key
 */
AccountCartAdd.prototype['wix_app_secret_key'] = undefined;

/**
 * Wix refresh token
 * @member {String} wix_refresh_token
 */
AccountCartAdd.prototype['wix_refresh_token'] = undefined;

/**
 * Zid Access Token
 * @member {String} zid_access_token
 */
AccountCartAdd.prototype['zid_access_token'] = undefined;

/**
 * Zid Authorization
 * @member {String} zid_authorization
 */
AccountCartAdd.prototype['zid_authorization'] = undefined;

/**
 * Zid Client ID
 * @member {Number} zid_client_id
 */
AccountCartAdd.prototype['zid_client_id'] = undefined;

/**
 * Zid Client Secret
 * @member {String} zid_client_secret
 */
AccountCartAdd.prototype['zid_client_secret'] = undefined;

/**
 * Zid refresh token
 * @member {String} zid_refresh_token
 */
AccountCartAdd.prototype['zid_refresh_token'] = undefined;





/**
 * Allowed values for the <code>amazon_sp_aws_region</code> property.
 * @enum {String}
 * @readonly
 */
AccountCartAdd['AmazonSpAwsRegionEnum'] = {

    /**
     * value: "eu-west-1"
     * @const
     */
    "eu-west-1": "eu-west-1",

    /**
     * value: "us-east-1"
     * @const
     */
    "us-east-1": "us-east-1",

    /**
     * value: "us-west-2"
     * @const
     */
    "us-west-2": "us-west-2"
};


/**
 * Allowed values for the <code>cart_id</code> property.
 * @enum {String}
 * @readonly
 */
AccountCartAdd['CartIdEnum'] = {

    /**
     * value: "3DCart"
     * @const
     */
    "3DCart": "3DCart",

    /**
     * value: "3DCartApi"
     * @const
     */
    "3DCartApi": "3DCartApi",

    /**
     * value: "AceShop"
     * @const
     */
    "AceShop": "AceShop",

    /**
     * value: "AmazonSP"
     * @const
     */
    "AmazonSP": "AmazonSP",

    /**
     * value: "Amazon"
     * @const
     */
    "Amazon": "Amazon",

    /**
     * value: "AspDotNetStorefront"
     * @const
     */
    "AspDotNetStorefront": "AspDotNetStorefront",

    /**
     * value: "BigcommerceApi"
     * @const
     */
    "BigcommerceApi": "BigcommerceApi",

    /**
     * value: "Creloaded"
     * @const
     */
    "Creloaded": "Creloaded",

    /**
     * value: "CommerceHQ"
     * @const
     */
    "CommerceHQ": "CommerceHQ",

    /**
     * value: "Cscart"
     * @const
     */
    "Cscart": "Cscart",

    /**
     * value: "Cubecart"
     * @const
     */
    "Cubecart": "Cubecart",

    /**
     * value: "Demandware"
     * @const
     */
    "Demandware": "Demandware",

    /**
     * value: "EBay"
     * @const
     */
    "EBay": "EBay",

    /**
     * value: "Ecwid"
     * @const
     */
    "Ecwid": "Ecwid",

    /**
     * value: "Etsy"
     * @const
     */
    "Etsy": "Etsy",

    /**
     * value: "EtsyAPIv3"
     * @const
     */
    "EtsyAPIv3": "EtsyAPIv3",

    /**
     * value: "Gambio"
     * @const
     */
    "Gambio": "Gambio",

    /**
     * value: "JooCart"
     * @const
     */
    "JooCart": "JooCart",

    /**
     * value: "Magento1212"
     * @const
     */
    "Magento1212": "Magento1212",

    /**
     * value: "Magento2Api"
     * @const
     */
    "Magento2Api": "Magento2Api",

    /**
     * value: "MijoShop"
     * @const
     */
    "MijoShop": "MijoShop",

    /**
     * value: "Neto"
     * @const
     */
    "Neto": "Neto",

    /**
     * value: "Opencart14"
     * @const
     */
    "Opencart14": "Opencart14",

    /**
     * value: "LightSpeed"
     * @const
     */
    "LightSpeed": "LightSpeed",

    /**
     * value: "Oscmax2"
     * @const
     */
    "Oscmax2": "Oscmax2",

    /**
     * value: "Oscommerce22ms2"
     * @const
     */
    "Oscommerce22ms2": "Oscommerce22ms2",

    /**
     * value: "Oxid"
     * @const
     */
    "Oxid": "Oxid",

    /**
     * value: "Pinnacle"
     * @const
     */
    "Pinnacle": "Pinnacle",

    /**
     * value: "Prestashop"
     * @const
     */
    "Prestashop": "Prestashop",

    /**
     * value: "PrestashopApi"
     * @const
     */
    "PrestashopApi": "PrestashopApi",

    /**
     * value: "SSPremium"
     * @const
     */
    "SSPremium": "SSPremium",

    /**
     * value: "Shopify"
     * @const
     */
    "Shopify": "Shopify",

    /**
     * value: "Squarespace"
     * @const
     */
    "Squarespace": "Squarespace",

    /**
     * value: "Shopware"
     * @const
     */
    "Shopware": "Shopware",

    /**
     * value: "ShopwareApi"
     * @const
     */
    "ShopwareApi": "ShopwareApi",

    /**
     * value: "Tomatocart"
     * @const
     */
    "Tomatocart": "Tomatocart",

    /**
     * value: "Ubercart"
     * @const
     */
    "Ubercart": "Ubercart",

    /**
     * value: "Virtuemart"
     * @const
     */
    "Virtuemart": "Virtuemart",

    /**
     * value: "Volusion"
     * @const
     */
    "Volusion": "Volusion",

    /**
     * value: "WPecommerce"
     * @const
     */
    "WPecommerce": "WPecommerce",

    /**
     * value: "Walmart"
     * @const
     */
    "Walmart": "Walmart",

    /**
     * value: "WebAsyst"
     * @const
     */
    "WebAsyst": "WebAsyst",

    /**
     * value: "Woocommerce"
     * @const
     */
    "Woocommerce": "Woocommerce",

    /**
     * value: "WoocommerceApi"
     * @const
     */
    "WoocommerceApi": "WoocommerceApi",

    /**
     * value: "Wix"
     * @const
     */
    "Wix": "Wix",

    /**
     * value: "Xcart"
     * @const
     */
    "Xcart": "Xcart",

    /**
     * value: "Xtcommerce"
     * @const
     */
    "Xtcommerce": "Xtcommerce",

    /**
     * value: "XtcommerceVeyton"
     * @const
     */
    "XtcommerceVeyton": "XtcommerceVeyton",

    /**
     * value: "Zencart137"
     * @const
     */
    "Zencart137": "Zencart137",

    /**
     * value: "Hybris"
     * @const
     */
    "Hybris": "Hybris",

    /**
     * value: "MercadoLibre"
     * @const
     */
    "MercadoLibre": "MercadoLibre",

    /**
     * value: "Zid"
     * @const
     */
    "Zid": "Zid",

    /**
     * value: "Zoey"
     * @const
     */
    "Zoey": "Zoey"
};



export default AccountCartAdd;

