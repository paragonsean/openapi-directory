/**
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import A2CDateTime from './A2CDateTime';

/**
 * The OrderTransaction model module.
 * @module model/OrderTransaction
 * @version 1.1
 */
class OrderTransaction {
    /**
     * Constructs a new <code>OrderTransaction</code>.
     * @alias module:model/OrderTransaction
     */
    constructor() { 
        
        OrderTransaction.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrderTransaction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrderTransaction} obj Optional instance to populate.
     * @return {module:model/OrderTransaction} The populated <code>OrderTransaction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrderTransaction();

            if (data.hasOwnProperty('additional_fields')) {
                obj['additional_fields'] = ApiClient.convertToType(data['additional_fields'], Object);
            }
            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('avs_message')) {
                obj['avs_message'] = ApiClient.convertToType(data['avs_message'], 'String');
            }
            if (data.hasOwnProperty('avs_postal_resp_code')) {
                obj['avs_postal_resp_code'] = ApiClient.convertToType(data['avs_postal_resp_code'], 'String');
            }
            if (data.hasOwnProperty('avs_street_resp_code')) {
                obj['avs_street_resp_code'] = ApiClient.convertToType(data['avs_street_resp_code'], 'String');
            }
            if (data.hasOwnProperty('card_bin')) {
                obj['card_bin'] = ApiClient.convertToType(data['card_bin'], 'String');
            }
            if (data.hasOwnProperty('card_brand')) {
                obj['card_brand'] = ApiClient.convertToType(data['card_brand'], 'String');
            }
            if (data.hasOwnProperty('card_last_four')) {
                obj['card_last_four'] = ApiClient.convertToType(data['card_last_four'], 'String');
            }
            if (data.hasOwnProperty('created_time')) {
                obj['created_time'] = A2CDateTime.constructFromObject(data['created_time']);
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('custom_fields')) {
                obj['custom_fields'] = ApiClient.convertToType(data['custom_fields'], Object);
            }
            if (data.hasOwnProperty('cvv_code')) {
                obj['cvv_code'] = ApiClient.convertToType(data['cvv_code'], 'String');
            }
            if (data.hasOwnProperty('cvv_message')) {
                obj['cvv_message'] = ApiClient.convertToType(data['cvv_message'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('gateway')) {
                obj['gateway'] = ApiClient.convertToType(data['gateway'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('is_test_mode')) {
                obj['is_test_mode'] = ApiClient.convertToType(data['is_test_mode'], 'Boolean');
            }
            if (data.hasOwnProperty('order_id')) {
                obj['order_id'] = ApiClient.convertToType(data['order_id'], 'String');
            }
            if (data.hasOwnProperty('parent_id')) {
                obj['parent_id'] = ApiClient.convertToType(data['parent_id'], 'String');
            }
            if (data.hasOwnProperty('reference_number')) {
                obj['reference_number'] = ApiClient.convertToType(data['reference_number'], 'String');
            }
            if (data.hasOwnProperty('settlement_amount')) {
                obj['settlement_amount'] = ApiClient.convertToType(data['settlement_amount'], 'Number');
            }
            if (data.hasOwnProperty('settlement_created_time')) {
                obj['settlement_created_time'] = A2CDateTime.constructFromObject(data['settlement_created_time']);
            }
            if (data.hasOwnProperty('settlement_currency')) {
                obj['settlement_currency'] = ApiClient.convertToType(data['settlement_currency'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('transaction_id')) {
                obj['transaction_id'] = ApiClient.convertToType(data['transaction_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrderTransaction</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrderTransaction</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['avs_message'] && !(typeof data['avs_message'] === 'string' || data['avs_message'] instanceof String)) {
            throw new Error("Expected the field `avs_message` to be a primitive type in the JSON string but got " + data['avs_message']);
        }
        // ensure the json data is a string
        if (data['avs_postal_resp_code'] && !(typeof data['avs_postal_resp_code'] === 'string' || data['avs_postal_resp_code'] instanceof String)) {
            throw new Error("Expected the field `avs_postal_resp_code` to be a primitive type in the JSON string but got " + data['avs_postal_resp_code']);
        }
        // ensure the json data is a string
        if (data['avs_street_resp_code'] && !(typeof data['avs_street_resp_code'] === 'string' || data['avs_street_resp_code'] instanceof String)) {
            throw new Error("Expected the field `avs_street_resp_code` to be a primitive type in the JSON string but got " + data['avs_street_resp_code']);
        }
        // ensure the json data is a string
        if (data['card_bin'] && !(typeof data['card_bin'] === 'string' || data['card_bin'] instanceof String)) {
            throw new Error("Expected the field `card_bin` to be a primitive type in the JSON string but got " + data['card_bin']);
        }
        // ensure the json data is a string
        if (data['card_brand'] && !(typeof data['card_brand'] === 'string' || data['card_brand'] instanceof String)) {
            throw new Error("Expected the field `card_brand` to be a primitive type in the JSON string but got " + data['card_brand']);
        }
        // ensure the json data is a string
        if (data['card_last_four'] && !(typeof data['card_last_four'] === 'string' || data['card_last_four'] instanceof String)) {
            throw new Error("Expected the field `card_last_four` to be a primitive type in the JSON string but got " + data['card_last_four']);
        }
        // validate the optional field `created_time`
        if (data['created_time']) { // data not null
          A2CDateTime.validateJSON(data['created_time']);
        }
        // ensure the json data is a string
        if (data['currency'] && !(typeof data['currency'] === 'string' || data['currency'] instanceof String)) {
            throw new Error("Expected the field `currency` to be a primitive type in the JSON string but got " + data['currency']);
        }
        // ensure the json data is a string
        if (data['cvv_code'] && !(typeof data['cvv_code'] === 'string' || data['cvv_code'] instanceof String)) {
            throw new Error("Expected the field `cvv_code` to be a primitive type in the JSON string but got " + data['cvv_code']);
        }
        // ensure the json data is a string
        if (data['cvv_message'] && !(typeof data['cvv_message'] === 'string' || data['cvv_message'] instanceof String)) {
            throw new Error("Expected the field `cvv_message` to be a primitive type in the JSON string but got " + data['cvv_message']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['gateway'] && !(typeof data['gateway'] === 'string' || data['gateway'] instanceof String)) {
            throw new Error("Expected the field `gateway` to be a primitive type in the JSON string but got " + data['gateway']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['order_id'] && !(typeof data['order_id'] === 'string' || data['order_id'] instanceof String)) {
            throw new Error("Expected the field `order_id` to be a primitive type in the JSON string but got " + data['order_id']);
        }
        // ensure the json data is a string
        if (data['parent_id'] && !(typeof data['parent_id'] === 'string' || data['parent_id'] instanceof String)) {
            throw new Error("Expected the field `parent_id` to be a primitive type in the JSON string but got " + data['parent_id']);
        }
        // ensure the json data is a string
        if (data['reference_number'] && !(typeof data['reference_number'] === 'string' || data['reference_number'] instanceof String)) {
            throw new Error("Expected the field `reference_number` to be a primitive type in the JSON string but got " + data['reference_number']);
        }
        // validate the optional field `settlement_created_time`
        if (data['settlement_created_time']) { // data not null
          A2CDateTime.validateJSON(data['settlement_created_time']);
        }
        // ensure the json data is a string
        if (data['settlement_currency'] && !(typeof data['settlement_currency'] === 'string' || data['settlement_currency'] instanceof String)) {
            throw new Error("Expected the field `settlement_currency` to be a primitive type in the JSON string but got " + data['settlement_currency']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['transaction_id'] && !(typeof data['transaction_id'] === 'string' || data['transaction_id'] instanceof String)) {
            throw new Error("Expected the field `transaction_id` to be a primitive type in the JSON string but got " + data['transaction_id']);
        }

        return true;
    }


}



/**
 * @member {Object} additional_fields
 */
OrderTransaction.prototype['additional_fields'] = undefined;

/**
 * @member {Number} amount
 */
OrderTransaction.prototype['amount'] = undefined;

/**
 * @member {String} avs_message
 */
OrderTransaction.prototype['avs_message'] = undefined;

/**
 * @member {String} avs_postal_resp_code
 */
OrderTransaction.prototype['avs_postal_resp_code'] = undefined;

/**
 * @member {String} avs_street_resp_code
 */
OrderTransaction.prototype['avs_street_resp_code'] = undefined;

/**
 * @member {String} card_bin
 */
OrderTransaction.prototype['card_bin'] = undefined;

/**
 * @member {String} card_brand
 */
OrderTransaction.prototype['card_brand'] = undefined;

/**
 * @member {String} card_last_four
 */
OrderTransaction.prototype['card_last_four'] = undefined;

/**
 * @member {module:model/A2CDateTime} created_time
 */
OrderTransaction.prototype['created_time'] = undefined;

/**
 * @member {String} currency
 */
OrderTransaction.prototype['currency'] = undefined;

/**
 * @member {Object} custom_fields
 */
OrderTransaction.prototype['custom_fields'] = undefined;

/**
 * @member {String} cvv_code
 */
OrderTransaction.prototype['cvv_code'] = undefined;

/**
 * @member {String} cvv_message
 */
OrderTransaction.prototype['cvv_message'] = undefined;

/**
 * @member {String} description
 */
OrderTransaction.prototype['description'] = undefined;

/**
 * @member {String} gateway
 */
OrderTransaction.prototype['gateway'] = undefined;

/**
 * @member {String} id
 */
OrderTransaction.prototype['id'] = undefined;

/**
 * @member {Boolean} is_test_mode
 */
OrderTransaction.prototype['is_test_mode'] = undefined;

/**
 * @member {String} order_id
 */
OrderTransaction.prototype['order_id'] = undefined;

/**
 * @member {String} parent_id
 */
OrderTransaction.prototype['parent_id'] = undefined;

/**
 * @member {String} reference_number
 */
OrderTransaction.prototype['reference_number'] = undefined;

/**
 * @member {Number} settlement_amount
 */
OrderTransaction.prototype['settlement_amount'] = undefined;

/**
 * @member {module:model/A2CDateTime} settlement_created_time
 */
OrderTransaction.prototype['settlement_created_time'] = undefined;

/**
 * @member {String} settlement_currency
 */
OrderTransaction.prototype['settlement_currency'] = undefined;

/**
 * @member {String} status
 */
OrderTransaction.prototype['status'] = undefined;

/**
 * @member {String} transaction_id
 */
OrderTransaction.prototype['transaction_id'] = undefined;






export default OrderTransaction;

