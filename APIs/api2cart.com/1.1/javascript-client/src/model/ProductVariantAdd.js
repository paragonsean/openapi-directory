/**
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ProductVariantAddAttributesInner from './ProductVariantAddAttributesInner';

/**
 * The ProductVariantAdd model module.
 * @module model/ProductVariantAdd
 * @version 1.1
 */
class ProductVariantAdd {
    /**
     * Constructs a new <code>ProductVariantAdd</code>.
     * @alias module:model/ProductVariantAdd
     * @param model {String} Specifies variant's model that has to be added
     */
    constructor(model) { 
        
        ProductVariantAdd.initialize(this, model);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, model) { 
        obj['available_for_sale'] = true;
        obj['available_for_view'] = true;
        obj['clear_cache'] = true;
        obj['model'] = model;
        obj['quantity'] = 0;
        obj['taxable'] = true;
        obj['weight'] = 0;
    }

    /**
     * Constructs a <code>ProductVariantAdd</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProductVariantAdd} obj Optional instance to populate.
     * @return {module:model/ProductVariantAdd} The populated <code>ProductVariantAdd</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProductVariantAdd();

            if (data.hasOwnProperty('attributes')) {
                obj['attributes'] = ApiClient.convertToType(data['attributes'], [ProductVariantAddAttributesInner]);
            }
            if (data.hasOwnProperty('available_for_sale')) {
                obj['available_for_sale'] = ApiClient.convertToType(data['available_for_sale'], 'Boolean');
            }
            if (data.hasOwnProperty('available_for_view')) {
                obj['available_for_view'] = ApiClient.convertToType(data['available_for_view'], 'Boolean');
            }
            if (data.hasOwnProperty('barcode')) {
                obj['barcode'] = ApiClient.convertToType(data['barcode'], 'String');
            }
            if (data.hasOwnProperty('clear_cache')) {
                obj['clear_cache'] = ApiClient.convertToType(data['clear_cache'], 'Boolean');
            }
            if (data.hasOwnProperty('cost_price')) {
                obj['cost_price'] = ApiClient.convertToType(data['cost_price'], 'Number');
            }
            if (data.hasOwnProperty('country_of_origin')) {
                obj['country_of_origin'] = ApiClient.convertToType(data['country_of_origin'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('harmonized_system_code')) {
                obj['harmonized_system_code'] = ApiClient.convertToType(data['harmonized_system_code'], 'String');
            }
            if (data.hasOwnProperty('height')) {
                obj['height'] = ApiClient.convertToType(data['height'], 'Number');
            }
            if (data.hasOwnProperty('lang_id')) {
                obj['lang_id'] = ApiClient.convertToType(data['lang_id'], 'String');
            }
            if (data.hasOwnProperty('length')) {
                obj['length'] = ApiClient.convertToType(data['length'], 'Number');
            }
            if (data.hasOwnProperty('manage_stock')) {
                obj['manage_stock'] = ApiClient.convertToType(data['manage_stock'], 'Boolean');
            }
            if (data.hasOwnProperty('manufacturer')) {
                obj['manufacturer'] = ApiClient.convertToType(data['manufacturer'], 'String');
            }
            if (data.hasOwnProperty('meta_description')) {
                obj['meta_description'] = ApiClient.convertToType(data['meta_description'], 'String');
            }
            if (data.hasOwnProperty('meta_keywords')) {
                obj['meta_keywords'] = ApiClient.convertToType(data['meta_keywords'], 'String');
            }
            if (data.hasOwnProperty('meta_title')) {
                obj['meta_title'] = ApiClient.convertToType(data['meta_title'], 'String');
            }
            if (data.hasOwnProperty('model')) {
                obj['model'] = ApiClient.convertToType(data['model'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'Number');
            }
            if (data.hasOwnProperty('product_id')) {
                obj['product_id'] = ApiClient.convertToType(data['product_id'], 'String');
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
            }
            if (data.hasOwnProperty('short_description')) {
                obj['short_description'] = ApiClient.convertToType(data['short_description'], 'String');
            }
            if (data.hasOwnProperty('sku')) {
                obj['sku'] = ApiClient.convertToType(data['sku'], 'String');
            }
            if (data.hasOwnProperty('special_price')) {
                obj['special_price'] = ApiClient.convertToType(data['special_price'], 'Number');
            }
            if (data.hasOwnProperty('sprice_create')) {
                obj['sprice_create'] = ApiClient.convertToType(data['sprice_create'], 'String');
            }
            if (data.hasOwnProperty('sprice_expire')) {
                obj['sprice_expire'] = ApiClient.convertToType(data['sprice_expire'], 'String');
            }
            if (data.hasOwnProperty('sprice_modified')) {
                obj['sprice_modified'] = ApiClient.convertToType(data['sprice_modified'], 'String');
            }
            if (data.hasOwnProperty('store_id')) {
                obj['store_id'] = ApiClient.convertToType(data['store_id'], 'String');
            }
            if (data.hasOwnProperty('tax_class_id')) {
                obj['tax_class_id'] = ApiClient.convertToType(data['tax_class_id'], 'String');
            }
            if (data.hasOwnProperty('taxable')) {
                obj['taxable'] = ApiClient.convertToType(data['taxable'], 'Boolean');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('warehouse_id')) {
                obj['warehouse_id'] = ApiClient.convertToType(data['warehouse_id'], 'String');
            }
            if (data.hasOwnProperty('weight')) {
                obj['weight'] = ApiClient.convertToType(data['weight'], 'Number');
            }
            if (data.hasOwnProperty('weight_unit')) {
                obj['weight_unit'] = ApiClient.convertToType(data['weight_unit'], 'String');
            }
            if (data.hasOwnProperty('width')) {
                obj['width'] = ApiClient.convertToType(data['width'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProductVariantAdd</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProductVariantAdd</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ProductVariantAdd.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['attributes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['attributes'])) {
                throw new Error("Expected the field `attributes` to be an array in the JSON data but got " + data['attributes']);
            }
            // validate the optional field `attributes` (array)
            for (const item of data['attributes']) {
                ProductVariantAddAttributesInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['barcode'] && !(typeof data['barcode'] === 'string' || data['barcode'] instanceof String)) {
            throw new Error("Expected the field `barcode` to be a primitive type in the JSON string but got " + data['barcode']);
        }
        // ensure the json data is a string
        if (data['country_of_origin'] && !(typeof data['country_of_origin'] === 'string' || data['country_of_origin'] instanceof String)) {
            throw new Error("Expected the field `country_of_origin` to be a primitive type in the JSON string but got " + data['country_of_origin']);
        }
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['harmonized_system_code'] && !(typeof data['harmonized_system_code'] === 'string' || data['harmonized_system_code'] instanceof String)) {
            throw new Error("Expected the field `harmonized_system_code` to be a primitive type in the JSON string but got " + data['harmonized_system_code']);
        }
        // ensure the json data is a string
        if (data['lang_id'] && !(typeof data['lang_id'] === 'string' || data['lang_id'] instanceof String)) {
            throw new Error("Expected the field `lang_id` to be a primitive type in the JSON string but got " + data['lang_id']);
        }
        // ensure the json data is a string
        if (data['manufacturer'] && !(typeof data['manufacturer'] === 'string' || data['manufacturer'] instanceof String)) {
            throw new Error("Expected the field `manufacturer` to be a primitive type in the JSON string but got " + data['manufacturer']);
        }
        // ensure the json data is a string
        if (data['meta_description'] && !(typeof data['meta_description'] === 'string' || data['meta_description'] instanceof String)) {
            throw new Error("Expected the field `meta_description` to be a primitive type in the JSON string but got " + data['meta_description']);
        }
        // ensure the json data is a string
        if (data['meta_keywords'] && !(typeof data['meta_keywords'] === 'string' || data['meta_keywords'] instanceof String)) {
            throw new Error("Expected the field `meta_keywords` to be a primitive type in the JSON string but got " + data['meta_keywords']);
        }
        // ensure the json data is a string
        if (data['meta_title'] && !(typeof data['meta_title'] === 'string' || data['meta_title'] instanceof String)) {
            throw new Error("Expected the field `meta_title` to be a primitive type in the JSON string but got " + data['meta_title']);
        }
        // ensure the json data is a string
        if (data['model'] && !(typeof data['model'] === 'string' || data['model'] instanceof String)) {
            throw new Error("Expected the field `model` to be a primitive type in the JSON string but got " + data['model']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['product_id'] && !(typeof data['product_id'] === 'string' || data['product_id'] instanceof String)) {
            throw new Error("Expected the field `product_id` to be a primitive type in the JSON string but got " + data['product_id']);
        }
        // ensure the json data is a string
        if (data['short_description'] && !(typeof data['short_description'] === 'string' || data['short_description'] instanceof String)) {
            throw new Error("Expected the field `short_description` to be a primitive type in the JSON string but got " + data['short_description']);
        }
        // ensure the json data is a string
        if (data['sku'] && !(typeof data['sku'] === 'string' || data['sku'] instanceof String)) {
            throw new Error("Expected the field `sku` to be a primitive type in the JSON string but got " + data['sku']);
        }
        // ensure the json data is a string
        if (data['sprice_create'] && !(typeof data['sprice_create'] === 'string' || data['sprice_create'] instanceof String)) {
            throw new Error("Expected the field `sprice_create` to be a primitive type in the JSON string but got " + data['sprice_create']);
        }
        // ensure the json data is a string
        if (data['sprice_expire'] && !(typeof data['sprice_expire'] === 'string' || data['sprice_expire'] instanceof String)) {
            throw new Error("Expected the field `sprice_expire` to be a primitive type in the JSON string but got " + data['sprice_expire']);
        }
        // ensure the json data is a string
        if (data['sprice_modified'] && !(typeof data['sprice_modified'] === 'string' || data['sprice_modified'] instanceof String)) {
            throw new Error("Expected the field `sprice_modified` to be a primitive type in the JSON string but got " + data['sprice_modified']);
        }
        // ensure the json data is a string
        if (data['store_id'] && !(typeof data['store_id'] === 'string' || data['store_id'] instanceof String)) {
            throw new Error("Expected the field `store_id` to be a primitive type in the JSON string but got " + data['store_id']);
        }
        // ensure the json data is a string
        if (data['tax_class_id'] && !(typeof data['tax_class_id'] === 'string' || data['tax_class_id'] instanceof String)) {
            throw new Error("Expected the field `tax_class_id` to be a primitive type in the JSON string but got " + data['tax_class_id']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }
        // ensure the json data is a string
        if (data['warehouse_id'] && !(typeof data['warehouse_id'] === 'string' || data['warehouse_id'] instanceof String)) {
            throw new Error("Expected the field `warehouse_id` to be a primitive type in the JSON string but got " + data['warehouse_id']);
        }
        // ensure the json data is a string
        if (data['weight_unit'] && !(typeof data['weight_unit'] === 'string' || data['weight_unit'] instanceof String)) {
            throw new Error("Expected the field `weight_unit` to be a primitive type in the JSON string but got " + data['weight_unit']);
        }

        return true;
    }


}

ProductVariantAdd.RequiredProperties = ["model"];

/**
 * Defines variant's attributes list
 * @member {Array.<module:model/ProductVariantAddAttributesInner>} attributes
 */
ProductVariantAdd.prototype['attributes'] = undefined;

/**
 * Specifies the set of visible/invisible product's variants for sale
 * @member {Boolean} available_for_sale
 * @default true
 */
ProductVariantAdd.prototype['available_for_sale'] = true;

/**
 * Specifies the set of visible/invisible product's variants for users
 * @member {Boolean} available_for_view
 * @default true
 */
ProductVariantAdd.prototype['available_for_view'] = true;

/**
 * A barcode is a unique code composed of numbers used as a product identifier.
 * @member {String} barcode
 */
ProductVariantAdd.prototype['barcode'] = undefined;

/**
 * Is cache clear required
 * @member {Boolean} clear_cache
 * @default true
 */
ProductVariantAdd.prototype['clear_cache'] = true;

/**
 * Defines new product's cost price
 * @member {Number} cost_price
 */
ProductVariantAdd.prototype['cost_price'] = undefined;

/**
 * The country where the inventory item was made
 * @member {String} country_of_origin
 */
ProductVariantAdd.prototype['country_of_origin'] = undefined;

/**
 * Defines the date of entity creation
 * @member {String} created_at
 */
ProductVariantAdd.prototype['created_at'] = undefined;

/**
 * Specifies variant's description
 * @member {String} description
 */
ProductVariantAdd.prototype['description'] = undefined;

/**
 * Harmonized System Code. An HSC is a 6-digit identifier that allows participating countries to classify traded goods on a common basis for customs purposes
 * @member {String} harmonized_system_code
 */
ProductVariantAdd.prototype['harmonized_system_code'] = undefined;

/**
 * Defines product's height
 * @member {Number} height
 */
ProductVariantAdd.prototype['height'] = undefined;

/**
 * Language id
 * @member {String} lang_id
 */
ProductVariantAdd.prototype['lang_id'] = undefined;

/**
 * Defines product's length
 * @member {Number} length
 */
ProductVariantAdd.prototype['length'] = undefined;

/**
 * Defines inventory tracking for product variant
 * @member {Boolean} manage_stock
 */
ProductVariantAdd.prototype['manage_stock'] = undefined;

/**
 * Specifies the product variant's manufacturer
 * @member {String} manufacturer
 */
ProductVariantAdd.prototype['manufacturer'] = undefined;

/**
 * Defines unique meta description of a entity
 * @member {String} meta_description
 */
ProductVariantAdd.prototype['meta_description'] = undefined;

/**
 * Defines unique meta keywords for each entity
 * @member {String} meta_keywords
 */
ProductVariantAdd.prototype['meta_keywords'] = undefined;

/**
 * Defines unique meta title for each entity
 * @member {String} meta_title
 */
ProductVariantAdd.prototype['meta_title'] = undefined;

/**
 * Specifies variant's model that has to be added
 * @member {String} model
 */
ProductVariantAdd.prototype['model'] = undefined;

/**
 * Defines variant's name that has to be added
 * @member {String} name
 */
ProductVariantAdd.prototype['name'] = undefined;

/**
 * Defines new product's variant price
 * @member {Number} price
 */
ProductVariantAdd.prototype['price'] = undefined;

/**
 * Defines product's id where the variant has to be added
 * @member {String} product_id
 */
ProductVariantAdd.prototype['product_id'] = undefined;

/**
 * Defines product variant's quantity that has to be added
 * @member {Number} quantity
 * @default 0
 */
ProductVariantAdd.prototype['quantity'] = 0;

/**
 * Defines short description
 * @member {String} short_description
 */
ProductVariantAdd.prototype['short_description'] = undefined;

/**
 * Defines variant's sku that has to be added
 * @member {String} sku
 */
ProductVariantAdd.prototype['sku'] = undefined;

/**
 * Specifies variant's model that has to be added
 * @member {Number} special_price
 */
ProductVariantAdd.prototype['special_price'] = undefined;

/**
 * Defines the date of special price creation
 * @member {String} sprice_create
 */
ProductVariantAdd.prototype['sprice_create'] = undefined;

/**
 * Defines the term of special price offer duration
 * @member {String} sprice_expire
 */
ProductVariantAdd.prototype['sprice_expire'] = undefined;

/**
 * Defines the date of special price modification
 * @member {String} sprice_modified
 */
ProductVariantAdd.prototype['sprice_modified'] = undefined;

/**
 * Add variants specified by store id
 * @member {String} store_id
 */
ProductVariantAdd.prototype['store_id'] = undefined;

/**
 * Defines tax classes where entity has to be added
 * @member {String} tax_class_id
 */
ProductVariantAdd.prototype['tax_class_id'] = undefined;

/**
 * Specifies whether a tax is charged
 * @member {Boolean} taxable
 * @default true
 */
ProductVariantAdd.prototype['taxable'] = true;

/**
 * Defines unique product variant's URL
 * @member {String} url
 */
ProductVariantAdd.prototype['url'] = undefined;

/**
 * This parameter is used for selecting a warehouse where you need to set/modify a product quantity.
 * @member {String} warehouse_id
 */
ProductVariantAdd.prototype['warehouse_id'] = undefined;

/**
 * Weight
 * @member {Number} weight
 * @default 0
 */
ProductVariantAdd.prototype['weight'] = 0;

/**
 * Weight Unit
 * @member {String} weight_unit
 */
ProductVariantAdd.prototype['weight_unit'] = undefined;

/**
 * Defines product's width
 * @member {Number} width
 */
ProductVariantAdd.prototype['width'] = undefined;






export default ProductVariantAdd;

