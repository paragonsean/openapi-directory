/**
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OrderTotal model module.
 * @module model/OrderTotal
 * @version 1.1
 */
class OrderTotal {
    /**
     * Constructs a new <code>OrderTotal</code>.
     * @alias module:model/OrderTotal
     */
    constructor() { 
        
        OrderTotal.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrderTotal</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrderTotal} obj Optional instance to populate.
     * @return {module:model/OrderTotal} The populated <code>OrderTotal</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrderTotal();

            if (data.hasOwnProperty('additional_fields')) {
                obj['additional_fields'] = ApiClient.convertToType(data['additional_fields'], Object);
            }
            if (data.hasOwnProperty('custom_fields')) {
                obj['custom_fields'] = ApiClient.convertToType(data['custom_fields'], Object);
            }
            if (data.hasOwnProperty('shipping_ex_tax')) {
                obj['shipping_ex_tax'] = ApiClient.convertToType(data['shipping_ex_tax'], 'Number');
            }
            if (data.hasOwnProperty('subtotal_ex_tax')) {
                obj['subtotal_ex_tax'] = ApiClient.convertToType(data['subtotal_ex_tax'], 'Number');
            }
            if (data.hasOwnProperty('total')) {
                obj['total'] = ApiClient.convertToType(data['total'], 'Number');
            }
            if (data.hasOwnProperty('total_discount')) {
                obj['total_discount'] = ApiClient.convertToType(data['total_discount'], 'Number');
            }
            if (data.hasOwnProperty('total_paid')) {
                obj['total_paid'] = ApiClient.convertToType(data['total_paid'], 'Number');
            }
            if (data.hasOwnProperty('total_tax')) {
                obj['total_tax'] = ApiClient.convertToType(data['total_tax'], 'Number');
            }
            if (data.hasOwnProperty('wrapping_ex_tax')) {
                obj['wrapping_ex_tax'] = ApiClient.convertToType(data['wrapping_ex_tax'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrderTotal</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrderTotal</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * @member {Object} additional_fields
 */
OrderTotal.prototype['additional_fields'] = undefined;

/**
 * @member {Object} custom_fields
 */
OrderTotal.prototype['custom_fields'] = undefined;

/**
 * @member {Number} shipping_ex_tax
 */
OrderTotal.prototype['shipping_ex_tax'] = undefined;

/**
 * @member {Number} subtotal_ex_tax
 */
OrderTotal.prototype['subtotal_ex_tax'] = undefined;

/**
 * @member {Number} total
 */
OrderTotal.prototype['total'] = undefined;

/**
 * @member {Number} total_discount
 */
OrderTotal.prototype['total_discount'] = undefined;

/**
 * @member {Number} total_paid
 */
OrderTotal.prototype['total_paid'] = undefined;

/**
 * @member {Number} total_tax
 */
OrderTotal.prototype['total_tax'] = undefined;

/**
 * @member {Number} wrapping_ex_tax
 */
OrderTotal.prototype['wrapping_ex_tax'] = undefined;






export default OrderTotal;

