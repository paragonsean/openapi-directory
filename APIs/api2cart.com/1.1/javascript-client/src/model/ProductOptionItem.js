/**
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ProductOptionItem model module.
 * @module model/ProductOptionItem
 * @version 1.1
 */
class ProductOptionItem {
    /**
     * Constructs a new <code>ProductOptionItem</code>.
     * @alias module:model/ProductOptionItem
     */
    constructor() { 
        
        ProductOptionItem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProductOptionItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProductOptionItem} obj Optional instance to populate.
     * @return {module:model/ProductOptionItem} The populated <code>ProductOptionItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProductOptionItem();

            if (data.hasOwnProperty('additional_fields')) {
                obj['additional_fields'] = ApiClient.convertToType(data['additional_fields'], Object);
            }
            if (data.hasOwnProperty('custom_fields')) {
                obj['custom_fields'] = ApiClient.convertToType(data['custom_fields'], Object);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'String');
            }
            if (data.hasOwnProperty('product_option_item_id')) {
                obj['product_option_item_id'] = ApiClient.convertToType(data['product_option_item_id'], 'String');
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
            }
            if (data.hasOwnProperty('sku')) {
                obj['sku'] = ApiClient.convertToType(data['sku'], 'String');
            }
            if (data.hasOwnProperty('sort_order')) {
                obj['sort_order'] = ApiClient.convertToType(data['sort_order'], 'Number');
            }
            if (data.hasOwnProperty('type_price')) {
                obj['type_price'] = ApiClient.convertToType(data['type_price'], 'String');
            }
            if (data.hasOwnProperty('weight')) {
                obj['weight'] = ApiClient.convertToType(data['weight'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProductOptionItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProductOptionItem</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['price'] && !(typeof data['price'] === 'string' || data['price'] instanceof String)) {
            throw new Error("Expected the field `price` to be a primitive type in the JSON string but got " + data['price']);
        }
        // ensure the json data is a string
        if (data['product_option_item_id'] && !(typeof data['product_option_item_id'] === 'string' || data['product_option_item_id'] instanceof String)) {
            throw new Error("Expected the field `product_option_item_id` to be a primitive type in the JSON string but got " + data['product_option_item_id']);
        }
        // ensure the json data is a string
        if (data['sku'] && !(typeof data['sku'] === 'string' || data['sku'] instanceof String)) {
            throw new Error("Expected the field `sku` to be a primitive type in the JSON string but got " + data['sku']);
        }
        // ensure the json data is a string
        if (data['type_price'] && !(typeof data['type_price'] === 'string' || data['type_price'] instanceof String)) {
            throw new Error("Expected the field `type_price` to be a primitive type in the JSON string but got " + data['type_price']);
        }
        // ensure the json data is a string
        if (data['weight'] && !(typeof data['weight'] === 'string' || data['weight'] instanceof String)) {
            throw new Error("Expected the field `weight` to be a primitive type in the JSON string but got " + data['weight']);
        }

        return true;
    }


}



/**
 * @member {Object} additional_fields
 */
ProductOptionItem.prototype['additional_fields'] = undefined;

/**
 * @member {Object} custom_fields
 */
ProductOptionItem.prototype['custom_fields'] = undefined;

/**
 * @member {String} id
 */
ProductOptionItem.prototype['id'] = undefined;

/**
 * @member {String} name
 */
ProductOptionItem.prototype['name'] = undefined;

/**
 * @member {String} price
 */
ProductOptionItem.prototype['price'] = undefined;

/**
 * @member {String} product_option_item_id
 */
ProductOptionItem.prototype['product_option_item_id'] = undefined;

/**
 * @member {Number} quantity
 */
ProductOptionItem.prototype['quantity'] = undefined;

/**
 * @member {String} sku
 */
ProductOptionItem.prototype['sku'] = undefined;

/**
 * @member {Number} sort_order
 */
ProductOptionItem.prototype['sort_order'] = undefined;

/**
 * @member {String} type_price
 */
ProductOptionItem.prototype['type_price'] = undefined;

/**
 * @member {String} weight
 */
ProductOptionItem.prototype['weight'] = undefined;






export default ProductOptionItem;

