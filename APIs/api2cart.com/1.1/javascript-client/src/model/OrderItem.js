/**
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OrderItemOption from './OrderItemOption';

/**
 * The OrderItem model module.
 * @module model/OrderItem
 * @version 1.1
 */
class OrderItem {
    /**
     * Constructs a new <code>OrderItem</code>.
     * @alias module:model/OrderItem
     */
    constructor() { 
        
        OrderItem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrderItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrderItem} obj Optional instance to populate.
     * @return {module:model/OrderItem} The populated <code>OrderItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrderItem();

            if (data.hasOwnProperty('additional_fields')) {
                obj['additional_fields'] = ApiClient.convertToType(data['additional_fields'], Object);
            }
            if (data.hasOwnProperty('barcode')) {
                obj['barcode'] = ApiClient.convertToType(data['barcode'], 'String');
            }
            if (data.hasOwnProperty('custom_fields')) {
                obj['custom_fields'] = ApiClient.convertToType(data['custom_fields'], Object);
            }
            if (data.hasOwnProperty('discount_amount')) {
                obj['discount_amount'] = ApiClient.convertToType(data['discount_amount'], 'Number');
            }
            if (data.hasOwnProperty('model')) {
                obj['model'] = ApiClient.convertToType(data['model'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('options')) {
                obj['options'] = ApiClient.convertToType(data['options'], [OrderItemOption]);
            }
            if (data.hasOwnProperty('order_product_id')) {
                obj['order_product_id'] = ApiClient.convertToType(data['order_product_id'], 'String');
            }
            if (data.hasOwnProperty('parent_order_product_id')) {
                obj['parent_order_product_id'] = ApiClient.convertToType(data['parent_order_product_id'], 'String');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'Number');
            }
            if (data.hasOwnProperty('price_inc_tax')) {
                obj['price_inc_tax'] = ApiClient.convertToType(data['price_inc_tax'], 'Number');
            }
            if (data.hasOwnProperty('product_id')) {
                obj['product_id'] = ApiClient.convertToType(data['product_id'], 'String');
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
            }
            if (data.hasOwnProperty('tax_percent')) {
                obj['tax_percent'] = ApiClient.convertToType(data['tax_percent'], 'Number');
            }
            if (data.hasOwnProperty('tax_value')) {
                obj['tax_value'] = ApiClient.convertToType(data['tax_value'], 'Number');
            }
            if (data.hasOwnProperty('tax_value_after_discount')) {
                obj['tax_value_after_discount'] = ApiClient.convertToType(data['tax_value_after_discount'], 'Number');
            }
            if (data.hasOwnProperty('total_price')) {
                obj['total_price'] = ApiClient.convertToType(data['total_price'], 'Number');
            }
            if (data.hasOwnProperty('variant_id')) {
                obj['variant_id'] = ApiClient.convertToType(data['variant_id'], 'String');
            }
            if (data.hasOwnProperty('weight')) {
                obj['weight'] = ApiClient.convertToType(data['weight'], 'Number');
            }
            if (data.hasOwnProperty('weight_unit')) {
                obj['weight_unit'] = ApiClient.convertToType(data['weight_unit'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrderItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrderItem</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['barcode'] && !(typeof data['barcode'] === 'string' || data['barcode'] instanceof String)) {
            throw new Error("Expected the field `barcode` to be a primitive type in the JSON string but got " + data['barcode']);
        }
        // ensure the json data is a string
        if (data['model'] && !(typeof data['model'] === 'string' || data['model'] instanceof String)) {
            throw new Error("Expected the field `model` to be a primitive type in the JSON string but got " + data['model']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        if (data['options']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['options'])) {
                throw new Error("Expected the field `options` to be an array in the JSON data but got " + data['options']);
            }
            // validate the optional field `options` (array)
            for (const item of data['options']) {
                OrderItemOption.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['order_product_id'] && !(typeof data['order_product_id'] === 'string' || data['order_product_id'] instanceof String)) {
            throw new Error("Expected the field `order_product_id` to be a primitive type in the JSON string but got " + data['order_product_id']);
        }
        // ensure the json data is a string
        if (data['parent_order_product_id'] && !(typeof data['parent_order_product_id'] === 'string' || data['parent_order_product_id'] instanceof String)) {
            throw new Error("Expected the field `parent_order_product_id` to be a primitive type in the JSON string but got " + data['parent_order_product_id']);
        }
        // ensure the json data is a string
        if (data['product_id'] && !(typeof data['product_id'] === 'string' || data['product_id'] instanceof String)) {
            throw new Error("Expected the field `product_id` to be a primitive type in the JSON string but got " + data['product_id']);
        }
        // ensure the json data is a string
        if (data['variant_id'] && !(typeof data['variant_id'] === 'string' || data['variant_id'] instanceof String)) {
            throw new Error("Expected the field `variant_id` to be a primitive type in the JSON string but got " + data['variant_id']);
        }
        // ensure the json data is a string
        if (data['weight_unit'] && !(typeof data['weight_unit'] === 'string' || data['weight_unit'] instanceof String)) {
            throw new Error("Expected the field `weight_unit` to be a primitive type in the JSON string but got " + data['weight_unit']);
        }

        return true;
    }


}



/**
 * @member {Object} additional_fields
 */
OrderItem.prototype['additional_fields'] = undefined;

/**
 * @member {String} barcode
 */
OrderItem.prototype['barcode'] = undefined;

/**
 * @member {Object} custom_fields
 */
OrderItem.prototype['custom_fields'] = undefined;

/**
 * @member {Number} discount_amount
 */
OrderItem.prototype['discount_amount'] = undefined;

/**
 * @member {String} model
 */
OrderItem.prototype['model'] = undefined;

/**
 * @member {String} name
 */
OrderItem.prototype['name'] = undefined;

/**
 * @member {Array.<module:model/OrderItemOption>} options
 */
OrderItem.prototype['options'] = undefined;

/**
 * @member {String} order_product_id
 */
OrderItem.prototype['order_product_id'] = undefined;

/**
 * @member {String} parent_order_product_id
 */
OrderItem.prototype['parent_order_product_id'] = undefined;

/**
 * @member {Number} price
 */
OrderItem.prototype['price'] = undefined;

/**
 * @member {Number} price_inc_tax
 */
OrderItem.prototype['price_inc_tax'] = undefined;

/**
 * @member {String} product_id
 */
OrderItem.prototype['product_id'] = undefined;

/**
 * @member {Number} quantity
 */
OrderItem.prototype['quantity'] = undefined;

/**
 * @member {Number} tax_percent
 */
OrderItem.prototype['tax_percent'] = undefined;

/**
 * @member {Number} tax_value
 */
OrderItem.prototype['tax_value'] = undefined;

/**
 * @member {Number} tax_value_after_discount
 */
OrderItem.prototype['tax_value_after_discount'] = undefined;

/**
 * @member {Number} total_price
 */
OrderItem.prototype['total_price'] = undefined;

/**
 * @member {String} variant_id
 */
OrderItem.prototype['variant_id'] = undefined;

/**
 * @member {Number} weight
 */
OrderItem.prototype['weight'] = undefined;

/**
 * @member {String} weight_unit
 */
OrderItem.prototype['weight_unit'] = undefined;






export default OrderItem;

