/**
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Discount model module.
 * @module model/Discount
 * @version 1.1
 */
class Discount {
    /**
     * Constructs a new <code>Discount</code>.
     * @alias module:model/Discount
     */
    constructor() { 
        
        Discount.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Discount</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Discount} obj Optional instance to populate.
     * @return {module:model/Discount} The populated <code>Discount</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Discount();

            if (data.hasOwnProperty('additional_fields')) {
                obj['additional_fields'] = ApiClient.convertToType(data['additional_fields'], Object);
            }
            if (data.hasOwnProperty('custom_fields')) {
                obj['custom_fields'] = ApiClient.convertToType(data['custom_fields'], Object);
            }
            if (data.hasOwnProperty('customer_group_ids')) {
                obj['customer_group_ids'] = ApiClient.convertToType(data['customer_group_ids'], 'String');
            }
            if (data.hasOwnProperty('from_time')) {
                obj['from_time'] = ApiClient.convertToType(data['from_time'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('modifier_type')) {
                obj['modifier_type'] = ApiClient.convertToType(data['modifier_type'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('sort_order')) {
                obj['sort_order'] = ApiClient.convertToType(data['sort_order'], 'Number');
            }
            if (data.hasOwnProperty('to_time')) {
                obj['to_time'] = ApiClient.convertToType(data['to_time'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Discount</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Discount</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['customer_group_ids'] && !(typeof data['customer_group_ids'] === 'string' || data['customer_group_ids'] instanceof String)) {
            throw new Error("Expected the field `customer_group_ids` to be a primitive type in the JSON string but got " + data['customer_group_ids']);
        }
        // ensure the json data is a string
        if (data['from_time'] && !(typeof data['from_time'] === 'string' || data['from_time'] instanceof String)) {
            throw new Error("Expected the field `from_time` to be a primitive type in the JSON string but got " + data['from_time']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['modifier_type'] && !(typeof data['modifier_type'] === 'string' || data['modifier_type'] instanceof String)) {
            throw new Error("Expected the field `modifier_type` to be a primitive type in the JSON string but got " + data['modifier_type']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['to_time'] && !(typeof data['to_time'] === 'string' || data['to_time'] instanceof String)) {
            throw new Error("Expected the field `to_time` to be a primitive type in the JSON string but got " + data['to_time']);
        }

        return true;
    }


}



/**
 * @member {Object} additional_fields
 */
Discount.prototype['additional_fields'] = undefined;

/**
 * @member {Object} custom_fields
 */
Discount.prototype['custom_fields'] = undefined;

/**
 * @member {String} customer_group_ids
 */
Discount.prototype['customer_group_ids'] = undefined;

/**
 * @member {String} from_time
 */
Discount.prototype['from_time'] = undefined;

/**
 * @member {String} id
 */
Discount.prototype['id'] = undefined;

/**
 * @member {String} modifier_type
 */
Discount.prototype['modifier_type'] = undefined;

/**
 * @member {String} name
 */
Discount.prototype['name'] = undefined;

/**
 * @member {Number} sort_order
 */
Discount.prototype['sort_order'] = undefined;

/**
 * @member {String} to_time
 */
Discount.prototype['to_time'] = undefined;

/**
 * @member {Number} value
 */
Discount.prototype['value'] = undefined;






export default Discount;

