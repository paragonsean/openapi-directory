/**
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import A2CDateTime from './A2CDateTime';
import ProductReviewRating from './ProductReviewRating';

/**
 * The ProductReview model module.
 * @module model/ProductReview
 * @version 1.1
 */
class ProductReview {
    /**
     * Constructs a new <code>ProductReview</code>.
     * @alias module:model/ProductReview
     */
    constructor() { 
        
        ProductReview.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProductReview</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProductReview} obj Optional instance to populate.
     * @return {module:model/ProductReview} The populated <code>ProductReview</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProductReview();

            if (data.hasOwnProperty('additional_fields')) {
                obj['additional_fields'] = ApiClient.convertToType(data['additional_fields'], Object);
            }
            if (data.hasOwnProperty('created_time')) {
                obj['created_time'] = A2CDateTime.constructFromObject(data['created_time']);
            }
            if (data.hasOwnProperty('custom_fields')) {
                obj['custom_fields'] = ApiClient.convertToType(data['custom_fields'], Object);
            }
            if (data.hasOwnProperty('customer_id')) {
                obj['customer_id'] = ApiClient.convertToType(data['customer_id'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('nick_name')) {
                obj['nick_name'] = ApiClient.convertToType(data['nick_name'], 'String');
            }
            if (data.hasOwnProperty('product_id')) {
                obj['product_id'] = ApiClient.convertToType(data['product_id'], 'String');
            }
            if (data.hasOwnProperty('rating')) {
                obj['rating'] = ApiClient.convertToType(data['rating'], 'Number');
            }
            if (data.hasOwnProperty('ratings')) {
                obj['ratings'] = ApiClient.convertToType(data['ratings'], [ProductReviewRating]);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('summary')) {
                obj['summary'] = ApiClient.convertToType(data['summary'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProductReview</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProductReview</code>.
     */
    static validateJSON(data) {
        // validate the optional field `created_time`
        if (data['created_time']) { // data not null
          A2CDateTime.validateJSON(data['created_time']);
        }
        // ensure the json data is a string
        if (data['customer_id'] && !(typeof data['customer_id'] === 'string' || data['customer_id'] instanceof String)) {
            throw new Error("Expected the field `customer_id` to be a primitive type in the JSON string but got " + data['customer_id']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }
        // ensure the json data is a string
        if (data['nick_name'] && !(typeof data['nick_name'] === 'string' || data['nick_name'] instanceof String)) {
            throw new Error("Expected the field `nick_name` to be a primitive type in the JSON string but got " + data['nick_name']);
        }
        // ensure the json data is a string
        if (data['product_id'] && !(typeof data['product_id'] === 'string' || data['product_id'] instanceof String)) {
            throw new Error("Expected the field `product_id` to be a primitive type in the JSON string but got " + data['product_id']);
        }
        if (data['ratings']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['ratings'])) {
                throw new Error("Expected the field `ratings` to be an array in the JSON data but got " + data['ratings']);
            }
            // validate the optional field `ratings` (array)
            for (const item of data['ratings']) {
                ProductReviewRating.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['summary'] && !(typeof data['summary'] === 'string' || data['summary'] instanceof String)) {
            throw new Error("Expected the field `summary` to be a primitive type in the JSON string but got " + data['summary']);
        }

        return true;
    }


}



/**
 * @member {Object} additional_fields
 */
ProductReview.prototype['additional_fields'] = undefined;

/**
 * @member {module:model/A2CDateTime} created_time
 */
ProductReview.prototype['created_time'] = undefined;

/**
 * @member {Object} custom_fields
 */
ProductReview.prototype['custom_fields'] = undefined;

/**
 * @member {String} customer_id
 */
ProductReview.prototype['customer_id'] = undefined;

/**
 * @member {String} email
 */
ProductReview.prototype['email'] = undefined;

/**
 * @member {String} id
 */
ProductReview.prototype['id'] = undefined;

/**
 * @member {String} message
 */
ProductReview.prototype['message'] = undefined;

/**
 * @member {String} nick_name
 */
ProductReview.prototype['nick_name'] = undefined;

/**
 * @member {String} product_id
 */
ProductReview.prototype['product_id'] = undefined;

/**
 * @member {Number} rating
 */
ProductReview.prototype['rating'] = undefined;

/**
 * @member {Array.<module:model/ProductReviewRating>} ratings
 */
ProductReview.prototype['ratings'] = undefined;

/**
 * @member {String} status
 */
ProductReview.prototype['status'] = undefined;

/**
 * @member {String} summary
 */
ProductReview.prototype['summary'] = undefined;






export default ProductReview;

