/**
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import A2CDateTime from './A2CDateTime';

/**
 * The Image model module.
 * @module model/Image
 * @version 1.1
 */
class Image {
    /**
     * Constructs a new <code>Image</code>.
     * @alias module:model/Image
     */
    constructor() { 
        
        Image.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Image</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Image} obj Optional instance to populate.
     * @return {module:model/Image} The populated <code>Image</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Image();

            if (data.hasOwnProperty('additional_fields')) {
                obj['additional_fields'] = ApiClient.convertToType(data['additional_fields'], Object);
            }
            if (data.hasOwnProperty('alt')) {
                obj['alt'] = ApiClient.convertToType(data['alt'], 'String');
            }
            if (data.hasOwnProperty('avail')) {
                obj['avail'] = ApiClient.convertToType(data['avail'], 'Boolean');
            }
            if (data.hasOwnProperty('create_at')) {
                obj['create_at'] = A2CDateTime.constructFromObject(data['create_at']);
            }
            if (data.hasOwnProperty('custom_fields')) {
                obj['custom_fields'] = ApiClient.convertToType(data['custom_fields'], Object);
            }
            if (data.hasOwnProperty('file_name')) {
                obj['file_name'] = ApiClient.convertToType(data['file_name'], 'String');
            }
            if (data.hasOwnProperty('http_path')) {
                obj['http_path'] = ApiClient.convertToType(data['http_path'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('mime-type')) {
                obj['mime-type'] = ApiClient.convertToType(data['mime-type'], 'String');
            }
            if (data.hasOwnProperty('modified_at')) {
                obj['modified_at'] = A2CDateTime.constructFromObject(data['modified_at']);
            }
            if (data.hasOwnProperty('size')) {
                obj['size'] = ApiClient.convertToType(data['size'], 'Number');
            }
            if (data.hasOwnProperty('sort_order')) {
                obj['sort_order'] = ApiClient.convertToType(data['sort_order'], 'Number');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Image</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Image</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['alt'] && !(typeof data['alt'] === 'string' || data['alt'] instanceof String)) {
            throw new Error("Expected the field `alt` to be a primitive type in the JSON string but got " + data['alt']);
        }
        // validate the optional field `create_at`
        if (data['create_at']) { // data not null
          A2CDateTime.validateJSON(data['create_at']);
        }
        // ensure the json data is a string
        if (data['file_name'] && !(typeof data['file_name'] === 'string' || data['file_name'] instanceof String)) {
            throw new Error("Expected the field `file_name` to be a primitive type in the JSON string but got " + data['file_name']);
        }
        // ensure the json data is a string
        if (data['http_path'] && !(typeof data['http_path'] === 'string' || data['http_path'] instanceof String)) {
            throw new Error("Expected the field `http_path` to be a primitive type in the JSON string but got " + data['http_path']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['mime-type'] && !(typeof data['mime-type'] === 'string' || data['mime-type'] instanceof String)) {
            throw new Error("Expected the field `mime-type` to be a primitive type in the JSON string but got " + data['mime-type']);
        }
        // validate the optional field `modified_at`
        if (data['modified_at']) { // data not null
          A2CDateTime.validateJSON(data['modified_at']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * @member {Object} additional_fields
 */
Image.prototype['additional_fields'] = undefined;

/**
 * @member {String} alt
 */
Image.prototype['alt'] = undefined;

/**
 * @member {Boolean} avail
 */
Image.prototype['avail'] = undefined;

/**
 * @member {module:model/A2CDateTime} create_at
 */
Image.prototype['create_at'] = undefined;

/**
 * @member {Object} custom_fields
 */
Image.prototype['custom_fields'] = undefined;

/**
 * @member {String} file_name
 */
Image.prototype['file_name'] = undefined;

/**
 * @member {String} http_path
 */
Image.prototype['http_path'] = undefined;

/**
 * @member {String} id
 */
Image.prototype['id'] = undefined;

/**
 * @member {String} mime-type
 */
Image.prototype['mime-type'] = undefined;

/**
 * @member {module:model/A2CDateTime} modified_at
 */
Image.prototype['modified_at'] = undefined;

/**
 * @member {Number} size
 */
Image.prototype['size'] = undefined;

/**
 * @member {Number} sort_order
 */
Image.prototype['sort_order'] = undefined;

/**
 * @member {String} type
 */
Image.prototype['type'] = undefined;






export default Image;

