/**
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BasketItemOption model module.
 * @module model/BasketItemOption
 * @version 1.1
 */
class BasketItemOption {
    /**
     * Constructs a new <code>BasketItemOption</code>.
     * @alias module:model/BasketItemOption
     */
    constructor() { 
        
        BasketItemOption.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BasketItemOption</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BasketItemOption} obj Optional instance to populate.
     * @return {module:model/BasketItemOption} The populated <code>BasketItemOption</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BasketItemOption();

            if (data.hasOwnProperty('additional_fields')) {
                obj['additional_fields'] = ApiClient.convertToType(data['additional_fields'], Object);
            }
            if (data.hasOwnProperty('custom_fields')) {
                obj['custom_fields'] = ApiClient.convertToType(data['custom_fields'], Object);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('used_in_combination')) {
                obj['used_in_combination'] = ApiClient.convertToType(data['used_in_combination'], 'Boolean');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
            if (data.hasOwnProperty('value_id')) {
                obj['value_id'] = ApiClient.convertToType(data['value_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BasketItemOption</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BasketItemOption</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }
        // ensure the json data is a string
        if (data['value_id'] && !(typeof data['value_id'] === 'string' || data['value_id'] instanceof String)) {
            throw new Error("Expected the field `value_id` to be a primitive type in the JSON string but got " + data['value_id']);
        }

        return true;
    }


}



/**
 * @member {Object} additional_fields
 */
BasketItemOption.prototype['additional_fields'] = undefined;

/**
 * @member {Object} custom_fields
 */
BasketItemOption.prototype['custom_fields'] = undefined;

/**
 * @member {String} id
 */
BasketItemOption.prototype['id'] = undefined;

/**
 * @member {String} name
 */
BasketItemOption.prototype['name'] = undefined;

/**
 * @member {Boolean} used_in_combination
 */
BasketItemOption.prototype['used_in_combination'] = undefined;

/**
 * @member {String} value
 */
BasketItemOption.prototype['value'] = undefined;

/**
 * @member {String} value_id
 */
BasketItemOption.prototype['value_id'] = undefined;






export default BasketItemOption;

