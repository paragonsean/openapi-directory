/**
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ProductUpdate model module.
 * @module model/ProductUpdate
 * @version 1.1
 */
class ProductUpdate {
    /**
     * Constructs a new <code>ProductUpdate</code>.
     * @alias module:model/ProductUpdate
     */
    constructor() { 
        
        ProductUpdate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['clear_cache'] = true;
        obj['disable_report_cache'] = false;
        obj['reindex'] = true;
        obj['taxable'] = true;
    }

    /**
     * Constructs a <code>ProductUpdate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProductUpdate} obj Optional instance to populate.
     * @return {module:model/ProductUpdate} The populated <code>ProductUpdate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProductUpdate();

            if (data.hasOwnProperty('backorder_status')) {
                obj['backorder_status'] = ApiClient.convertToType(data['backorder_status'], 'String');
            }
            if (data.hasOwnProperty('barcode')) {
                obj['barcode'] = ApiClient.convertToType(data['barcode'], 'String');
            }
            if (data.hasOwnProperty('categories_ids')) {
                obj['categories_ids'] = ApiClient.convertToType(data['categories_ids'], 'String');
            }
            if (data.hasOwnProperty('clear_cache')) {
                obj['clear_cache'] = ApiClient.convertToType(data['clear_cache'], 'Boolean');
            }
            if (data.hasOwnProperty('cost_price')) {
                obj['cost_price'] = ApiClient.convertToType(data['cost_price'], 'Number');
            }
            if (data.hasOwnProperty('country_of_origin')) {
                obj['country_of_origin'] = ApiClient.convertToType(data['country_of_origin'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('disable_report_cache')) {
                obj['disable_report_cache'] = ApiClient.convertToType(data['disable_report_cache'], 'Boolean');
            }
            if (data.hasOwnProperty('gtin')) {
                obj['gtin'] = ApiClient.convertToType(data['gtin'], 'String');
            }
            if (data.hasOwnProperty('harmonized_system_code')) {
                obj['harmonized_system_code'] = ApiClient.convertToType(data['harmonized_system_code'], 'String');
            }
            if (data.hasOwnProperty('height')) {
                obj['height'] = ApiClient.convertToType(data['height'], 'Number');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('in_stock')) {
                obj['in_stock'] = ApiClient.convertToType(data['in_stock'], 'Boolean');
            }
            if (data.hasOwnProperty('increase_quantity')) {
                obj['increase_quantity'] = ApiClient.convertToType(data['increase_quantity'], 'Number');
            }
            if (data.hasOwnProperty('lang_id')) {
                obj['lang_id'] = ApiClient.convertToType(data['lang_id'], 'String');
            }
            if (data.hasOwnProperty('length')) {
                obj['length'] = ApiClient.convertToType(data['length'], 'Number');
            }
            if (data.hasOwnProperty('manage_stock')) {
                obj['manage_stock'] = ApiClient.convertToType(data['manage_stock'], 'Boolean');
            }
            if (data.hasOwnProperty('manufacturer')) {
                obj['manufacturer'] = ApiClient.convertToType(data['manufacturer'], 'String');
            }
            if (data.hasOwnProperty('manufacturer_id')) {
                obj['manufacturer_id'] = ApiClient.convertToType(data['manufacturer_id'], 'String');
            }
            if (data.hasOwnProperty('meta_description')) {
                obj['meta_description'] = ApiClient.convertToType(data['meta_description'], 'String');
            }
            if (data.hasOwnProperty('meta_keywords')) {
                obj['meta_keywords'] = ApiClient.convertToType(data['meta_keywords'], 'String');
            }
            if (data.hasOwnProperty('meta_title')) {
                obj['meta_title'] = ApiClient.convertToType(data['meta_title'], 'String');
            }
            if (data.hasOwnProperty('model')) {
                obj['model'] = ApiClient.convertToType(data['model'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('old_price')) {
                obj['old_price'] = ApiClient.convertToType(data['old_price'], 'Number');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'Number');
            }
            if (data.hasOwnProperty('product_class')) {
                obj['product_class'] = ApiClient.convertToType(data['product_class'], 'String');
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
            }
            if (data.hasOwnProperty('reduce_quantity')) {
                obj['reduce_quantity'] = ApiClient.convertToType(data['reduce_quantity'], 'Number');
            }
            if (data.hasOwnProperty('reindex')) {
                obj['reindex'] = ApiClient.convertToType(data['reindex'], 'Boolean');
            }
            if (data.hasOwnProperty('report_request_id')) {
                obj['report_request_id'] = ApiClient.convertToType(data['report_request_id'], 'String');
            }
            if (data.hasOwnProperty('reserve_quantity')) {
                obj['reserve_quantity'] = ApiClient.convertToType(data['reserve_quantity'], 'Number');
            }
            if (data.hasOwnProperty('retail_price')) {
                obj['retail_price'] = ApiClient.convertToType(data['retail_price'], 'Number');
            }
            if (data.hasOwnProperty('search_keywords')) {
                obj['search_keywords'] = ApiClient.convertToType(data['search_keywords'], 'String');
            }
            if (data.hasOwnProperty('seo_url')) {
                obj['seo_url'] = ApiClient.convertToType(data['seo_url'], 'String');
            }
            if (data.hasOwnProperty('short_description')) {
                obj['short_description'] = ApiClient.convertToType(data['short_description'], 'String');
            }
            if (data.hasOwnProperty('sku')) {
                obj['sku'] = ApiClient.convertToType(data['sku'], 'String');
            }
            if (data.hasOwnProperty('special_price')) {
                obj['special_price'] = ApiClient.convertToType(data['special_price'], 'Number');
            }
            if (data.hasOwnProperty('sprice_create')) {
                obj['sprice_create'] = ApiClient.convertToType(data['sprice_create'], 'String');
            }
            if (data.hasOwnProperty('sprice_expire')) {
                obj['sprice_expire'] = ApiClient.convertToType(data['sprice_expire'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('store_id')) {
                obj['store_id'] = ApiClient.convertToType(data['store_id'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], 'String');
            }
            if (data.hasOwnProperty('taxable')) {
                obj['taxable'] = ApiClient.convertToType(data['taxable'], 'Boolean');
            }
            if (data.hasOwnProperty('visible')) {
                obj['visible'] = ApiClient.convertToType(data['visible'], 'String');
            }
            if (data.hasOwnProperty('warehouse_id')) {
                obj['warehouse_id'] = ApiClient.convertToType(data['warehouse_id'], 'String');
            }
            if (data.hasOwnProperty('weight')) {
                obj['weight'] = ApiClient.convertToType(data['weight'], 'Number');
            }
            if (data.hasOwnProperty('width')) {
                obj['width'] = ApiClient.convertToType(data['width'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProductUpdate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProductUpdate</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['backorder_status'] && !(typeof data['backorder_status'] === 'string' || data['backorder_status'] instanceof String)) {
            throw new Error("Expected the field `backorder_status` to be a primitive type in the JSON string but got " + data['backorder_status']);
        }
        // ensure the json data is a string
        if (data['barcode'] && !(typeof data['barcode'] === 'string' || data['barcode'] instanceof String)) {
            throw new Error("Expected the field `barcode` to be a primitive type in the JSON string but got " + data['barcode']);
        }
        // ensure the json data is a string
        if (data['categories_ids'] && !(typeof data['categories_ids'] === 'string' || data['categories_ids'] instanceof String)) {
            throw new Error("Expected the field `categories_ids` to be a primitive type in the JSON string but got " + data['categories_ids']);
        }
        // ensure the json data is a string
        if (data['country_of_origin'] && !(typeof data['country_of_origin'] === 'string' || data['country_of_origin'] instanceof String)) {
            throw new Error("Expected the field `country_of_origin` to be a primitive type in the JSON string but got " + data['country_of_origin']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['gtin'] && !(typeof data['gtin'] === 'string' || data['gtin'] instanceof String)) {
            throw new Error("Expected the field `gtin` to be a primitive type in the JSON string but got " + data['gtin']);
        }
        // ensure the json data is a string
        if (data['harmonized_system_code'] && !(typeof data['harmonized_system_code'] === 'string' || data['harmonized_system_code'] instanceof String)) {
            throw new Error("Expected the field `harmonized_system_code` to be a primitive type in the JSON string but got " + data['harmonized_system_code']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['lang_id'] && !(typeof data['lang_id'] === 'string' || data['lang_id'] instanceof String)) {
            throw new Error("Expected the field `lang_id` to be a primitive type in the JSON string but got " + data['lang_id']);
        }
        // ensure the json data is a string
        if (data['manufacturer'] && !(typeof data['manufacturer'] === 'string' || data['manufacturer'] instanceof String)) {
            throw new Error("Expected the field `manufacturer` to be a primitive type in the JSON string but got " + data['manufacturer']);
        }
        // ensure the json data is a string
        if (data['manufacturer_id'] && !(typeof data['manufacturer_id'] === 'string' || data['manufacturer_id'] instanceof String)) {
            throw new Error("Expected the field `manufacturer_id` to be a primitive type in the JSON string but got " + data['manufacturer_id']);
        }
        // ensure the json data is a string
        if (data['meta_description'] && !(typeof data['meta_description'] === 'string' || data['meta_description'] instanceof String)) {
            throw new Error("Expected the field `meta_description` to be a primitive type in the JSON string but got " + data['meta_description']);
        }
        // ensure the json data is a string
        if (data['meta_keywords'] && !(typeof data['meta_keywords'] === 'string' || data['meta_keywords'] instanceof String)) {
            throw new Error("Expected the field `meta_keywords` to be a primitive type in the JSON string but got " + data['meta_keywords']);
        }
        // ensure the json data is a string
        if (data['meta_title'] && !(typeof data['meta_title'] === 'string' || data['meta_title'] instanceof String)) {
            throw new Error("Expected the field `meta_title` to be a primitive type in the JSON string but got " + data['meta_title']);
        }
        // ensure the json data is a string
        if (data['model'] && !(typeof data['model'] === 'string' || data['model'] instanceof String)) {
            throw new Error("Expected the field `model` to be a primitive type in the JSON string but got " + data['model']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['product_class'] && !(typeof data['product_class'] === 'string' || data['product_class'] instanceof String)) {
            throw new Error("Expected the field `product_class` to be a primitive type in the JSON string but got " + data['product_class']);
        }
        // ensure the json data is a string
        if (data['report_request_id'] && !(typeof data['report_request_id'] === 'string' || data['report_request_id'] instanceof String)) {
            throw new Error("Expected the field `report_request_id` to be a primitive type in the JSON string but got " + data['report_request_id']);
        }
        // ensure the json data is a string
        if (data['search_keywords'] && !(typeof data['search_keywords'] === 'string' || data['search_keywords'] instanceof String)) {
            throw new Error("Expected the field `search_keywords` to be a primitive type in the JSON string but got " + data['search_keywords']);
        }
        // ensure the json data is a string
        if (data['seo_url'] && !(typeof data['seo_url'] === 'string' || data['seo_url'] instanceof String)) {
            throw new Error("Expected the field `seo_url` to be a primitive type in the JSON string but got " + data['seo_url']);
        }
        // ensure the json data is a string
        if (data['short_description'] && !(typeof data['short_description'] === 'string' || data['short_description'] instanceof String)) {
            throw new Error("Expected the field `short_description` to be a primitive type in the JSON string but got " + data['short_description']);
        }
        // ensure the json data is a string
        if (data['sku'] && !(typeof data['sku'] === 'string' || data['sku'] instanceof String)) {
            throw new Error("Expected the field `sku` to be a primitive type in the JSON string but got " + data['sku']);
        }
        // ensure the json data is a string
        if (data['sprice_create'] && !(typeof data['sprice_create'] === 'string' || data['sprice_create'] instanceof String)) {
            throw new Error("Expected the field `sprice_create` to be a primitive type in the JSON string but got " + data['sprice_create']);
        }
        // ensure the json data is a string
        if (data['sprice_expire'] && !(typeof data['sprice_expire'] === 'string' || data['sprice_expire'] instanceof String)) {
            throw new Error("Expected the field `sprice_expire` to be a primitive type in the JSON string but got " + data['sprice_expire']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['store_id'] && !(typeof data['store_id'] === 'string' || data['store_id'] instanceof String)) {
            throw new Error("Expected the field `store_id` to be a primitive type in the JSON string but got " + data['store_id']);
        }
        // ensure the json data is a string
        if (data['tags'] && !(typeof data['tags'] === 'string' || data['tags'] instanceof String)) {
            throw new Error("Expected the field `tags` to be a primitive type in the JSON string but got " + data['tags']);
        }
        // ensure the json data is a string
        if (data['visible'] && !(typeof data['visible'] === 'string' || data['visible'] instanceof String)) {
            throw new Error("Expected the field `visible` to be a primitive type in the JSON string but got " + data['visible']);
        }
        // ensure the json data is a string
        if (data['warehouse_id'] && !(typeof data['warehouse_id'] === 'string' || data['warehouse_id'] instanceof String)) {
            throw new Error("Expected the field `warehouse_id` to be a primitive type in the JSON string but got " + data['warehouse_id']);
        }

        return true;
    }


}



/**
 * Set backorder status
 * @member {String} backorder_status
 */
ProductUpdate.prototype['backorder_status'] = undefined;

/**
 * A barcode is a unique code composed of numbers used as a product identifier.
 * @member {String} barcode
 */
ProductUpdate.prototype['barcode'] = undefined;

/**
 * Defines product add that is specified by comma-separated categories id
 * @member {String} categories_ids
 */
ProductUpdate.prototype['categories_ids'] = undefined;

/**
 * Is cache clear required
 * @member {Boolean} clear_cache
 * @default true
 */
ProductUpdate.prototype['clear_cache'] = true;

/**
 * Defines new product's cost price
 * @member {Number} cost_price
 */
ProductUpdate.prototype['cost_price'] = undefined;

/**
 * The country where the inventory item was made
 * @member {String} country_of_origin
 */
ProductUpdate.prototype['country_of_origin'] = undefined;

/**
 * Defines new product's description
 * @member {String} description
 */
ProductUpdate.prototype['description'] = undefined;

/**
 * Disable report cache for current request
 * @member {Boolean} disable_report_cache
 * @default false
 */
ProductUpdate.prototype['disable_report_cache'] = false;

/**
 * Global Trade Item Number. An GTIN is an identifier for trade items.
 * @member {String} gtin
 */
ProductUpdate.prototype['gtin'] = undefined;

/**
 * Harmonized System Code. An HSC is a 6-digit identifier that allows participating countries to classify traded goods on a common basis for customs purposes
 * @member {String} harmonized_system_code
 */
ProductUpdate.prototype['harmonized_system_code'] = undefined;

/**
 * Defines product's height
 * @member {Number} height
 */
ProductUpdate.prototype['height'] = undefined;

/**
 * Defines product id that has to be updated
 * @member {String} id
 */
ProductUpdate.prototype['id'] = undefined;

/**
 * Set stock status
 * @member {Boolean} in_stock
 */
ProductUpdate.prototype['in_stock'] = undefined;

/**
 * Defines the incremental changes in product quantity
 * @member {Number} increase_quantity
 */
ProductUpdate.prototype['increase_quantity'] = undefined;

/**
 * Language id
 * @member {String} lang_id
 */
ProductUpdate.prototype['lang_id'] = undefined;

/**
 * Defines product's length
 * @member {Number} length
 */
ProductUpdate.prototype['length'] = undefined;

/**
 * Defines inventory tracking for product
 * @member {Boolean} manage_stock
 */
ProductUpdate.prototype['manage_stock'] = undefined;

/**
 * Defines product's manufacturer
 * @member {String} manufacturer
 */
ProductUpdate.prototype['manufacturer'] = undefined;

/**
 * Defines product's manufacturer by manufacturer_id
 * @member {String} manufacturer_id
 */
ProductUpdate.prototype['manufacturer_id'] = undefined;

/**
 * Defines unique meta description of a entity
 * @member {String} meta_description
 */
ProductUpdate.prototype['meta_description'] = undefined;

/**
 * Defines unique meta keywords for each entity
 * @member {String} meta_keywords
 */
ProductUpdate.prototype['meta_keywords'] = undefined;

/**
 * Defines unique meta title for each entity
 * @member {String} meta_title
 */
ProductUpdate.prototype['meta_title'] = undefined;

/**
 * Defines product model that has to be updated
 * @member {String} model
 */
ProductUpdate.prototype['model'] = undefined;

/**
 * Defines product's name that has to be updated
 * @member {String} name
 */
ProductUpdate.prototype['name'] = undefined;

/**
 * Defines product's old price
 * @member {Number} old_price
 */
ProductUpdate.prototype['old_price'] = undefined;

/**
 * Defines new product's price
 * @member {Number} price
 */
ProductUpdate.prototype['price'] = undefined;

/**
 * A categorization for the product
 * @member {String} product_class
 */
ProductUpdate.prototype['product_class'] = undefined;

/**
 * Defines new product's quantity
 * @member {Number} quantity
 */
ProductUpdate.prototype['quantity'] = undefined;

/**
 * Defines the decrement changes in product quantity
 * @member {Number} reduce_quantity
 */
ProductUpdate.prototype['reduce_quantity'] = undefined;

/**
 * Is reindex required
 * @member {Boolean} reindex
 * @default true
 */
ProductUpdate.prototype['reindex'] = true;

/**
 * Report request id
 * @member {String} report_request_id
 */
ProductUpdate.prototype['report_request_id'] = undefined;

/**
 * This parameter allows to reserve/unreserve product quantity.
 * @member {Number} reserve_quantity
 */
ProductUpdate.prototype['reserve_quantity'] = undefined;

/**
 * Defines new product's retail price
 * @member {Number} retail_price
 */
ProductUpdate.prototype['retail_price'] = undefined;

/**
 * Defines unique search keywords
 * @member {String} search_keywords
 */
ProductUpdate.prototype['search_keywords'] = undefined;

/**
 * Defines unique URL for SEO
 * @member {String} seo_url
 */
ProductUpdate.prototype['seo_url'] = undefined;

/**
 * Defines short description
 * @member {String} short_description
 */
ProductUpdate.prototype['short_description'] = undefined;

/**
 * Defines new product's sku
 * @member {String} sku
 */
ProductUpdate.prototype['sku'] = undefined;

/**
 * Defines new product's special price
 * @member {Number} special_price
 */
ProductUpdate.prototype['special_price'] = undefined;

/**
 * Defines the date of special price creation
 * @member {String} sprice_create
 */
ProductUpdate.prototype['sprice_create'] = undefined;

/**
 * Defines the term of special price offer duration
 * @member {String} sprice_expire
 */
ProductUpdate.prototype['sprice_expire'] = undefined;

/**
 * Defines product's status
 * @member {String} status
 */
ProductUpdate.prototype['status'] = undefined;

/**
 * Defines store id where the product should be found
 * @member {String} store_id
 */
ProductUpdate.prototype['store_id'] = undefined;

/**
 * Product tags
 * @member {String} tags
 */
ProductUpdate.prototype['tags'] = undefined;

/**
 * Specifies whether a tax is charged
 * @member {Boolean} taxable
 * @default true
 */
ProductUpdate.prototype['taxable'] = true;

/**
 * Set visibility status
 * @member {String} visible
 */
ProductUpdate.prototype['visible'] = undefined;

/**
 * This parameter is used for selecting a warehouse where you need to set/modify a product quantity.
 * @member {String} warehouse_id
 */
ProductUpdate.prototype['warehouse_id'] = undefined;

/**
 * Weight
 * @member {Number} weight
 */
ProductUpdate.prototype['weight'] = undefined;

/**
 * Defines product's width
 * @member {Number} width
 */
ProductUpdate.prototype['width'] = undefined;






export default ProductUpdate;

