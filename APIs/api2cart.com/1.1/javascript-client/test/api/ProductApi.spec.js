/**
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SwaggerApi2Cart);
  }
}(this, function(expect, SwaggerApi2Cart) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SwaggerApi2Cart.ProductApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProductApi', function() {
    describe('productAdd', function() {
      it('should call productAdd successfully', function(done) {
        //uncomment below and update the code to test productAdd
        //instance.productAdd(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productAttributeList', function() {
      it('should call productAttributeList successfully', function(done) {
        //uncomment below and update the code to test productAttributeList
        //instance.productAttributeList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productAttributeValueSet', function() {
      it('should call productAttributeValueSet successfully', function(done) {
        //uncomment below and update the code to test productAttributeValueSet
        //instance.productAttributeValueSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productAttributeValueUnset', function() {
      it('should call productAttributeValueUnset successfully', function(done) {
        //uncomment below and update the code to test productAttributeValueUnset
        //instance.productAttributeValueUnset(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productBrandList', function() {
      it('should call productBrandList successfully', function(done) {
        //uncomment below and update the code to test productBrandList
        //instance.productBrandList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productChildItemFind', function() {
      it('should call productChildItemFind successfully', function(done) {
        //uncomment below and update the code to test productChildItemFind
        //instance.productChildItemFind(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productChildItemInfo', function() {
      it('should call productChildItemInfo successfully', function(done) {
        //uncomment below and update the code to test productChildItemInfo
        //instance.productChildItemInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productChildItemList', function() {
      it('should call productChildItemList successfully', function(done) {
        //uncomment below and update the code to test productChildItemList
        //instance.productChildItemList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productCount', function() {
      it('should call productCount successfully', function(done) {
        //uncomment below and update the code to test productCount
        //instance.productCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productCurrencyAdd', function() {
      it('should call productCurrencyAdd successfully', function(done) {
        //uncomment below and update the code to test productCurrencyAdd
        //instance.productCurrencyAdd(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productCurrencyList', function() {
      it('should call productCurrencyList successfully', function(done) {
        //uncomment below and update the code to test productCurrencyList
        //instance.productCurrencyList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productDelete', function() {
      it('should call productDelete successfully', function(done) {
        //uncomment below and update the code to test productDelete
        //instance.productDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productFields', function() {
      it('should call productFields successfully', function(done) {
        //uncomment below and update the code to test productFields
        //instance.productFields(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productFind', function() {
      it('should call productFind successfully', function(done) {
        //uncomment below and update the code to test productFind
        //instance.productFind(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productImageAdd', function() {
      it('should call productImageAdd successfully', function(done) {
        //uncomment below and update the code to test productImageAdd
        //instance.productImageAdd(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productImageDelete', function() {
      it('should call productImageDelete successfully', function(done) {
        //uncomment below and update the code to test productImageDelete
        //instance.productImageDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productImageUpdate', function() {
      it('should call productImageUpdate successfully', function(done) {
        //uncomment below and update the code to test productImageUpdate
        //instance.productImageUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productInfo', function() {
      it('should call productInfo successfully', function(done) {
        //uncomment below and update the code to test productInfo
        //instance.productInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productList', function() {
      it('should call productList successfully', function(done) {
        //uncomment below and update the code to test productList
        //instance.productList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productManufacturerAdd', function() {
      it('should call productManufacturerAdd successfully', function(done) {
        //uncomment below and update the code to test productManufacturerAdd
        //instance.productManufacturerAdd(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productOptionAdd', function() {
      it('should call productOptionAdd successfully', function(done) {
        //uncomment below and update the code to test productOptionAdd
        //instance.productOptionAdd(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productOptionAssign', function() {
      it('should call productOptionAssign successfully', function(done) {
        //uncomment below and update the code to test productOptionAssign
        //instance.productOptionAssign(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productOptionList', function() {
      it('should call productOptionList successfully', function(done) {
        //uncomment below and update the code to test productOptionList
        //instance.productOptionList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productOptionValueAdd', function() {
      it('should call productOptionValueAdd successfully', function(done) {
        //uncomment below and update the code to test productOptionValueAdd
        //instance.productOptionValueAdd(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productOptionValueAssign', function() {
      it('should call productOptionValueAssign successfully', function(done) {
        //uncomment below and update the code to test productOptionValueAssign
        //instance.productOptionValueAssign(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productOptionValueUpdate', function() {
      it('should call productOptionValueUpdate successfully', function(done) {
        //uncomment below and update the code to test productOptionValueUpdate
        //instance.productOptionValueUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productPriceAdd', function() {
      it('should call productPriceAdd successfully', function(done) {
        //uncomment below and update the code to test productPriceAdd
        //instance.productPriceAdd(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productPriceDelete', function() {
      it('should call productPriceDelete successfully', function(done) {
        //uncomment below and update the code to test productPriceDelete
        //instance.productPriceDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productPriceUpdate', function() {
      it('should call productPriceUpdate successfully', function(done) {
        //uncomment below and update the code to test productPriceUpdate
        //instance.productPriceUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productReviewList', function() {
      it('should call productReviewList successfully', function(done) {
        //uncomment below and update the code to test productReviewList
        //instance.productReviewList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productStoreAssign', function() {
      it('should call productStoreAssign successfully', function(done) {
        //uncomment below and update the code to test productStoreAssign
        //instance.productStoreAssign(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productTaxAdd', function() {
      it('should call productTaxAdd successfully', function(done) {
        //uncomment below and update the code to test productTaxAdd
        //instance.productTaxAdd(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productUpdate', function() {
      it('should call productUpdate successfully', function(done) {
        //uncomment below and update the code to test productUpdate
        //instance.productUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productVariantAdd', function() {
      it('should call productVariantAdd successfully', function(done) {
        //uncomment below and update the code to test productVariantAdd
        //instance.productVariantAdd(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productVariantCount', function() {
      it('should call productVariantCount successfully', function(done) {
        //uncomment below and update the code to test productVariantCount
        //instance.productVariantCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productVariantDelete', function() {
      it('should call productVariantDelete successfully', function(done) {
        //uncomment below and update the code to test productVariantDelete
        //instance.productVariantDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productVariantImageAdd', function() {
      it('should call productVariantImageAdd successfully', function(done) {
        //uncomment below and update the code to test productVariantImageAdd
        //instance.productVariantImageAdd(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productVariantImageDelete', function() {
      it('should call productVariantImageDelete successfully', function(done) {
        //uncomment below and update the code to test productVariantImageDelete
        //instance.productVariantImageDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productVariantInfo', function() {
      it('should call productVariantInfo successfully', function(done) {
        //uncomment below and update the code to test productVariantInfo
        //instance.productVariantInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productVariantList', function() {
      it('should call productVariantList successfully', function(done) {
        //uncomment below and update the code to test productVariantList
        //instance.productVariantList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productVariantPriceAdd', function() {
      it('should call productVariantPriceAdd successfully', function(done) {
        //uncomment below and update the code to test productVariantPriceAdd
        //instance.productVariantPriceAdd(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productVariantPriceDelete', function() {
      it('should call productVariantPriceDelete successfully', function(done) {
        //uncomment below and update the code to test productVariantPriceDelete
        //instance.productVariantPriceDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productVariantPriceUpdate', function() {
      it('should call productVariantPriceUpdate successfully', function(done) {
        //uncomment below and update the code to test productVariantPriceUpdate
        //instance.productVariantPriceUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productVariantUpdate', function() {
      it('should call productVariantUpdate successfully', function(done) {
        //uncomment below and update the code to test productVariantUpdate
        //instance.productVariantUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
