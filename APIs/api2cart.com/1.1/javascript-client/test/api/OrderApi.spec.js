/**
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SwaggerApi2Cart);
  }
}(this, function(expect, SwaggerApi2Cart) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SwaggerApi2Cart.OrderApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OrderApi', function() {
    describe('orderAbandonedList', function() {
      it('should call orderAbandonedList successfully', function(done) {
        //uncomment below and update the code to test orderAbandonedList
        //instance.orderAbandonedList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orderAdd', function() {
      it('should call orderAdd successfully', function(done) {
        //uncomment below and update the code to test orderAdd
        //instance.orderAdd(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orderCount', function() {
      it('should call orderCount successfully', function(done) {
        //uncomment below and update the code to test orderCount
        //instance.orderCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orderFinancialStatusList', function() {
      it('should call orderFinancialStatusList successfully', function(done) {
        //uncomment below and update the code to test orderFinancialStatusList
        //instance.orderFinancialStatusList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orderFind', function() {
      it('should call orderFind successfully', function(done) {
        //uncomment below and update the code to test orderFind
        //instance.orderFind(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orderFulfillmentStatusList', function() {
      it('should call orderFulfillmentStatusList successfully', function(done) {
        //uncomment below and update the code to test orderFulfillmentStatusList
        //instance.orderFulfillmentStatusList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orderInfo', function() {
      it('should call orderInfo successfully', function(done) {
        //uncomment below and update the code to test orderInfo
        //instance.orderInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orderList', function() {
      it('should call orderList successfully', function(done) {
        //uncomment below and update the code to test orderList
        //instance.orderList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orderPreestimateShippingList', function() {
      it('should call orderPreestimateShippingList successfully', function(done) {
        //uncomment below and update the code to test orderPreestimateShippingList
        //instance.orderPreestimateShippingList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orderRefundAdd', function() {
      it('should call orderRefundAdd successfully', function(done) {
        //uncomment below and update the code to test orderRefundAdd
        //instance.orderRefundAdd(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orderShipmentAdd', function() {
      it('should call orderShipmentAdd successfully', function(done) {
        //uncomment below and update the code to test orderShipmentAdd
        //instance.orderShipmentAdd(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orderShipmentDelete', function() {
      it('should call orderShipmentDelete successfully', function(done) {
        //uncomment below and update the code to test orderShipmentDelete
        //instance.orderShipmentDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orderShipmentInfo', function() {
      it('should call orderShipmentInfo successfully', function(done) {
        //uncomment below and update the code to test orderShipmentInfo
        //instance.orderShipmentInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orderShipmentList', function() {
      it('should call orderShipmentList successfully', function(done) {
        //uncomment below and update the code to test orderShipmentList
        //instance.orderShipmentList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orderShipmentTrackingAdd', function() {
      it('should call orderShipmentTrackingAdd successfully', function(done) {
        //uncomment below and update the code to test orderShipmentTrackingAdd
        //instance.orderShipmentTrackingAdd(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orderShipmentUpdate', function() {
      it('should call orderShipmentUpdate successfully', function(done) {
        //uncomment below and update the code to test orderShipmentUpdate
        //instance.orderShipmentUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orderStatusList', function() {
      it('should call orderStatusList successfully', function(done) {
        //uncomment below and update the code to test orderStatusList
        //instance.orderStatusList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orderTransactionList', function() {
      it('should call orderTransactionList successfully', function(done) {
        //uncomment below and update the code to test orderTransactionList
        //instance.orderTransactionList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orderUpdate', function() {
      it('should call orderUpdate successfully', function(done) {
        //uncomment below and update the code to test orderUpdate
        //instance.orderUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
