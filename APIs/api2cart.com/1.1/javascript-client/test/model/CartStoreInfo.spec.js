/**
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SwaggerApi2Cart);
  }
}(this, function(expect, SwaggerApi2Cart) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SwaggerApi2Cart.CartStoreInfo();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CartStoreInfo', function() {
    it('should create an instance of CartStoreInfo', function() {
      // uncomment below and update the code to test CartStoreInfo
      //var instance = new SwaggerApi2Cart.CartStoreInfo();
      //expect(instance).to.be.a(SwaggerApi2Cart.CartStoreInfo);
    });

    it('should have the property active (base name: "active")', function() {
      // uncomment below and update the code to test the property active
      //var instance = new SwaggerApi2Cart.CartStoreInfo();
      //expect(instance).to.be();
    });

    it('should have the property additionalFields (base name: "additional_fields")', function() {
      // uncomment below and update the code to test the property additionalFields
      //var instance = new SwaggerApi2Cart.CartStoreInfo();
      //expect(instance).to.be();
    });

    it('should have the property carrierInfo (base name: "carrier_info")', function() {
      // uncomment below and update the code to test the property carrierInfo
      //var instance = new SwaggerApi2Cart.CartStoreInfo();
      //expect(instance).to.be();
    });

    it('should have the property channels (base name: "channels")', function() {
      // uncomment below and update the code to test the property channels
      //var instance = new SwaggerApi2Cart.CartStoreInfo();
      //expect(instance).to.be();
    });

    it('should have the property country (base name: "country")', function() {
      // uncomment below and update the code to test the property country
      //var instance = new SwaggerApi2Cart.CartStoreInfo();
      //expect(instance).to.be();
    });

    it('should have the property currency (base name: "currency")', function() {
      // uncomment below and update the code to test the property currency
      //var instance = new SwaggerApi2Cart.CartStoreInfo();
      //expect(instance).to.be();
    });

    it('should have the property customFields (base name: "custom_fields")', function() {
      // uncomment below and update the code to test the property customFields
      //var instance = new SwaggerApi2Cart.CartStoreInfo();
      //expect(instance).to.be();
    });

    it('should have the property defaultWarehouseId (base name: "default_warehouse_id")', function() {
      // uncomment below and update the code to test the property defaultWarehouseId
      //var instance = new SwaggerApi2Cart.CartStoreInfo();
      //expect(instance).to.be();
    });

    it('should have the property dimensionUnit (base name: "dimension_unit")', function() {
      // uncomment below and update the code to test the property dimensionUnit
      //var instance = new SwaggerApi2Cart.CartStoreInfo();
      //expect(instance).to.be();
    });

    it('should have the property language (base name: "language")', function() {
      // uncomment below and update the code to test the property language
      //var instance = new SwaggerApi2Cart.CartStoreInfo();
      //expect(instance).to.be();
    });

    it('should have the property multiStoreUrl (base name: "multi_store_url")', function() {
      // uncomment below and update the code to test the property multiStoreUrl
      //var instance = new SwaggerApi2Cart.CartStoreInfo();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new SwaggerApi2Cart.CartStoreInfo();
      //expect(instance).to.be();
    });

    it('should have the property pricesIncludeTax (base name: "prices_include_tax")', function() {
      // uncomment below and update the code to test the property pricesIncludeTax
      //var instance = new SwaggerApi2Cart.CartStoreInfo();
      //expect(instance).to.be();
    });

    it('should have the property rootCategoryId (base name: "root_category_id")', function() {
      // uncomment below and update the code to test the property rootCategoryId
      //var instance = new SwaggerApi2Cart.CartStoreInfo();
      //expect(instance).to.be();
    });

    it('should have the property storeCurrencies (base name: "store_currencies")', function() {
      // uncomment below and update the code to test the property storeCurrencies
      //var instance = new SwaggerApi2Cart.CartStoreInfo();
      //expect(instance).to.be();
    });

    it('should have the property storeId (base name: "store_id")', function() {
      // uncomment below and update the code to test the property storeId
      //var instance = new SwaggerApi2Cart.CartStoreInfo();
      //expect(instance).to.be();
    });

    it('should have the property storeLanguages (base name: "store_languages")', function() {
      // uncomment below and update the code to test the property storeLanguages
      //var instance = new SwaggerApi2Cart.CartStoreInfo();
      //expect(instance).to.be();
    });

    it('should have the property storeOwnerInfo (base name: "store_owner_info")', function() {
      // uncomment below and update the code to test the property storeOwnerInfo
      //var instance = new SwaggerApi2Cart.CartStoreInfo();
      //expect(instance).to.be();
    });

    it('should have the property timezone (base name: "timezone")', function() {
      // uncomment below and update the code to test the property timezone
      //var instance = new SwaggerApi2Cart.CartStoreInfo();
      //expect(instance).to.be();
    });

    it('should have the property weightUnit (base name: "weight_unit")', function() {
      // uncomment below and update the code to test the property weightUnit
      //var instance = new SwaggerApi2Cart.CartStoreInfo();
      //expect(instance).to.be();
    });

  });

}));
