/**
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SwaggerApi2Cart);
  }
}(this, function(expect, SwaggerApi2Cart) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SwaggerApi2Cart.ProductUpdate();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProductUpdate', function() {
    it('should create an instance of ProductUpdate', function() {
      // uncomment below and update the code to test ProductUpdate
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be.a(SwaggerApi2Cart.ProductUpdate);
    });

    it('should have the property backorderStatus (base name: "backorder_status")', function() {
      // uncomment below and update the code to test the property backorderStatus
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

    it('should have the property barcode (base name: "barcode")', function() {
      // uncomment below and update the code to test the property barcode
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

    it('should have the property categoriesIds (base name: "categories_ids")', function() {
      // uncomment below and update the code to test the property categoriesIds
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

    it('should have the property clearCache (base name: "clear_cache")', function() {
      // uncomment below and update the code to test the property clearCache
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

    it('should have the property costPrice (base name: "cost_price")', function() {
      // uncomment below and update the code to test the property costPrice
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

    it('should have the property countryOfOrigin (base name: "country_of_origin")', function() {
      // uncomment below and update the code to test the property countryOfOrigin
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

    it('should have the property disableReportCache (base name: "disable_report_cache")', function() {
      // uncomment below and update the code to test the property disableReportCache
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

    it('should have the property gtin (base name: "gtin")', function() {
      // uncomment below and update the code to test the property gtin
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

    it('should have the property harmonizedSystemCode (base name: "harmonized_system_code")', function() {
      // uncomment below and update the code to test the property harmonizedSystemCode
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

    it('should have the property height (base name: "height")', function() {
      // uncomment below and update the code to test the property height
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

    it('should have the property inStock (base name: "in_stock")', function() {
      // uncomment below and update the code to test the property inStock
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

    it('should have the property increaseQuantity (base name: "increase_quantity")', function() {
      // uncomment below and update the code to test the property increaseQuantity
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

    it('should have the property langId (base name: "lang_id")', function() {
      // uncomment below and update the code to test the property langId
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

    it('should have the property length (base name: "length")', function() {
      // uncomment below and update the code to test the property length
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

    it('should have the property manageStock (base name: "manage_stock")', function() {
      // uncomment below and update the code to test the property manageStock
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

    it('should have the property manufacturer (base name: "manufacturer")', function() {
      // uncomment below and update the code to test the property manufacturer
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

    it('should have the property manufacturerId (base name: "manufacturer_id")', function() {
      // uncomment below and update the code to test the property manufacturerId
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

    it('should have the property metaDescription (base name: "meta_description")', function() {
      // uncomment below and update the code to test the property metaDescription
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

    it('should have the property metaKeywords (base name: "meta_keywords")', function() {
      // uncomment below and update the code to test the property metaKeywords
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

    it('should have the property metaTitle (base name: "meta_title")', function() {
      // uncomment below and update the code to test the property metaTitle
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

    it('should have the property model (base name: "model")', function() {
      // uncomment below and update the code to test the property model
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

    it('should have the property oldPrice (base name: "old_price")', function() {
      // uncomment below and update the code to test the property oldPrice
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

    it('should have the property price (base name: "price")', function() {
      // uncomment below and update the code to test the property price
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

    it('should have the property productClass (base name: "product_class")', function() {
      // uncomment below and update the code to test the property productClass
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

    it('should have the property quantity (base name: "quantity")', function() {
      // uncomment below and update the code to test the property quantity
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

    it('should have the property reduceQuantity (base name: "reduce_quantity")', function() {
      // uncomment below and update the code to test the property reduceQuantity
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

    it('should have the property reindex (base name: "reindex")', function() {
      // uncomment below and update the code to test the property reindex
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

    it('should have the property reportRequestId (base name: "report_request_id")', function() {
      // uncomment below and update the code to test the property reportRequestId
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

    it('should have the property reserveQuantity (base name: "reserve_quantity")', function() {
      // uncomment below and update the code to test the property reserveQuantity
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

    it('should have the property retailPrice (base name: "retail_price")', function() {
      // uncomment below and update the code to test the property retailPrice
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

    it('should have the property searchKeywords (base name: "search_keywords")', function() {
      // uncomment below and update the code to test the property searchKeywords
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

    it('should have the property seoUrl (base name: "seo_url")', function() {
      // uncomment below and update the code to test the property seoUrl
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

    it('should have the property shortDescription (base name: "short_description")', function() {
      // uncomment below and update the code to test the property shortDescription
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

    it('should have the property sku (base name: "sku")', function() {
      // uncomment below and update the code to test the property sku
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

    it('should have the property specialPrice (base name: "special_price")', function() {
      // uncomment below and update the code to test the property specialPrice
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

    it('should have the property spriceCreate (base name: "sprice_create")', function() {
      // uncomment below and update the code to test the property spriceCreate
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

    it('should have the property spriceExpire (base name: "sprice_expire")', function() {
      // uncomment below and update the code to test the property spriceExpire
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

    it('should have the property storeId (base name: "store_id")', function() {
      // uncomment below and update the code to test the property storeId
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

    it('should have the property taxable (base name: "taxable")', function() {
      // uncomment below and update the code to test the property taxable
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

    it('should have the property visible (base name: "visible")', function() {
      // uncomment below and update the code to test the property visible
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

    it('should have the property warehouseId (base name: "warehouse_id")', function() {
      // uncomment below and update the code to test the property warehouseId
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

    it('should have the property weight (base name: "weight")', function() {
      // uncomment below and update the code to test the property weight
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

    it('should have the property width (base name: "width")', function() {
      // uncomment below and update the code to test the property width
      //var instance = new SwaggerApi2Cart.ProductUpdate();
      //expect(instance).to.be();
    });

  });

}));
