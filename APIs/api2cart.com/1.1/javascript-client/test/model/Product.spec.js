/**
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SwaggerApi2Cart);
  }
}(this, function(expect, SwaggerApi2Cart) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SwaggerApi2Cart.Product();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Product', function() {
    it('should create an instance of Product', function() {
      // uncomment below and update the code to test Product
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be.a(SwaggerApi2Cart.Product);
    });

    it('should have the property additionalFields (base name: "additional_fields")', function() {
      // uncomment below and update the code to test the property additionalFields
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property advancedPrice (base name: "advanced_price")', function() {
      // uncomment below and update the code to test the property advancedPrice
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property availSale (base name: "avail_sale")', function() {
      // uncomment below and update the code to test the property availSale
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property availView (base name: "avail_view")', function() {
      // uncomment below and update the code to test the property availView
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property backorders (base name: "backorders")', function() {
      // uncomment below and update the code to test the property backorders
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property categoriesIds (base name: "categories_ids")', function() {
      // uncomment below and update the code to test the property categoriesIds
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property costPrice (base name: "cost_price")', function() {
      // uncomment below and update the code to test the property costPrice
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property createAt (base name: "create_at")', function() {
      // uncomment below and update the code to test the property createAt
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property customFields (base name: "custom_fields")', function() {
      // uncomment below and update the code to test the property customFields
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property dimensionsUnit (base name: "dimensions_unit")', function() {
      // uncomment below and update the code to test the property dimensionsUnit
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property discounts (base name: "discounts")', function() {
      // uncomment below and update the code to test the property discounts
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property groupItems (base name: "group_items")', function() {
      // uncomment below and update the code to test the property groupItems
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property groupPrice (base name: "group_price")', function() {
      // uncomment below and update the code to test the property groupPrice
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property height (base name: "height")', function() {
      // uncomment below and update the code to test the property height
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property images (base name: "images")', function() {
      // uncomment below and update the code to test the property images
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property inStock (base name: "in_stock")', function() {
      // uncomment below and update the code to test the property inStock
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property inventory (base name: "inventory")', function() {
      // uncomment below and update the code to test the property inventory
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property isDownloadable (base name: "is_downloadable")', function() {
      // uncomment below and update the code to test the property isDownloadable
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property isStockManaged (base name: "is_stock_managed")', function() {
      // uncomment below and update the code to test the property isStockManaged
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property isVirtual (base name: "is_virtual")', function() {
      // uncomment below and update the code to test the property isVirtual
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property length (base name: "length")', function() {
      // uncomment below and update the code to test the property length
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property manageStock (base name: "manage_stock")', function() {
      // uncomment below and update the code to test the property manageStock
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property metaDescription (base name: "meta_description")', function() {
      // uncomment below and update the code to test the property metaDescription
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property metaKeywords (base name: "meta_keywords")', function() {
      // uncomment below and update the code to test the property metaKeywords
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property metaTitle (base name: "meta_title")', function() {
      // uncomment below and update the code to test the property metaTitle
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property modifiedAt (base name: "modified_at")', function() {
      // uncomment below and update the code to test the property modifiedAt
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property price (base name: "price")', function() {
      // uncomment below and update the code to test the property price
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property productOptions (base name: "product_options")', function() {
      // uncomment below and update the code to test the property productOptions
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property quantity (base name: "quantity")', function() {
      // uncomment below and update the code to test the property quantity
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property relatedProductsIds (base name: "related_products_ids")', function() {
      // uncomment below and update the code to test the property relatedProductsIds
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property seoUrl (base name: "seo_url")', function() {
      // uncomment below and update the code to test the property seoUrl
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property shortDescription (base name: "short_description")', function() {
      // uncomment below and update the code to test the property shortDescription
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property sortOrder (base name: "sort_order")', function() {
      // uncomment below and update the code to test the property sortOrder
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property specialPrice (base name: "special_price")', function() {
      // uncomment below and update the code to test the property specialPrice
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property storesIds (base name: "stores_ids")', function() {
      // uncomment below and update the code to test the property storesIds
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property taxClassId (base name: "tax_class_id")', function() {
      // uncomment below and update the code to test the property taxClassId
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property tierPrice (base name: "tier_price")', function() {
      // uncomment below and update the code to test the property tierPrice
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property uBrand (base name: "u_brand")', function() {
      // uncomment below and update the code to test the property uBrand
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property uBrandId (base name: "u_brand_id")', function() {
      // uncomment below and update the code to test the property uBrandId
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property uModel (base name: "u_model")', function() {
      // uncomment below and update the code to test the property uModel
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property uMpn (base name: "u_mpn")', function() {
      // uncomment below and update the code to test the property uMpn
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property uSku (base name: "u_sku")', function() {
      // uncomment below and update the code to test the property uSku
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property uUpc (base name: "u_upc")', function() {
      // uncomment below and update the code to test the property uUpc
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property weight (base name: "weight")', function() {
      // uncomment below and update the code to test the property weight
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property weightUnit (base name: "weight_unit")', function() {
      // uncomment below and update the code to test the property weightUnit
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

    it('should have the property width (base name: "width")', function() {
      // uncomment below and update the code to test the property width
      //var instance = new SwaggerApi2Cart.Product();
      //expect(instance).to.be();
    });

  });

}));
