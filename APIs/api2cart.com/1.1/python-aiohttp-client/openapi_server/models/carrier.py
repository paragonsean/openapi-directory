# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.order_shipping_method import OrderShippingMethod
from openapi_server import util


class Carrier(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active: bool=None, additional_fields: object=None, custom_fields: object=None, id: str=None, name: str=None, shipping_methods: List[OrderShippingMethod]=None):
        """Carrier - a model defined in OpenAPI

        :param active: The active of this Carrier.
        :param additional_fields: The additional_fields of this Carrier.
        :param custom_fields: The custom_fields of this Carrier.
        :param id: The id of this Carrier.
        :param name: The name of this Carrier.
        :param shipping_methods: The shipping_methods of this Carrier.
        """
        self.openapi_types = {
            'active': bool,
            'additional_fields': object,
            'custom_fields': object,
            'id': str,
            'name': str,
            'shipping_methods': List[OrderShippingMethod]
        }

        self.attribute_map = {
            'active': 'active',
            'additional_fields': 'additional_fields',
            'custom_fields': 'custom_fields',
            'id': 'id',
            'name': 'name',
            'shipping_methods': 'shipping_methods'
        }

        self._active = active
        self._additional_fields = additional_fields
        self._custom_fields = custom_fields
        self._id = id
        self._name = name
        self._shipping_methods = shipping_methods

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Carrier':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Carrier of this Carrier.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active(self):
        """Gets the active of this Carrier.


        :return: The active of this Carrier.
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this Carrier.


        :param active: The active of this Carrier.
        :type active: bool
        """

        self._active = active

    @property
    def additional_fields(self):
        """Gets the additional_fields of this Carrier.


        :return: The additional_fields of this Carrier.
        :rtype: object
        """
        return self._additional_fields

    @additional_fields.setter
    def additional_fields(self, additional_fields):
        """Sets the additional_fields of this Carrier.


        :param additional_fields: The additional_fields of this Carrier.
        :type additional_fields: object
        """

        self._additional_fields = additional_fields

    @property
    def custom_fields(self):
        """Gets the custom_fields of this Carrier.


        :return: The custom_fields of this Carrier.
        :rtype: object
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this Carrier.


        :param custom_fields: The custom_fields of this Carrier.
        :type custom_fields: object
        """

        self._custom_fields = custom_fields

    @property
    def id(self):
        """Gets the id of this Carrier.


        :return: The id of this Carrier.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Carrier.


        :param id: The id of this Carrier.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this Carrier.


        :return: The name of this Carrier.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Carrier.


        :param name: The name of this Carrier.
        :type name: str
        """

        self._name = name

    @property
    def shipping_methods(self):
        """Gets the shipping_methods of this Carrier.


        :return: The shipping_methods of this Carrier.
        :rtype: List[OrderShippingMethod]
        """
        return self._shipping_methods

    @shipping_methods.setter
    def shipping_methods(self, shipping_methods):
        """Sets the shipping_methods of this Carrier.


        :param shipping_methods: The shipping_methods of this Carrier.
        :type shipping_methods: List[OrderShippingMethod]
        """

        self._shipping_methods = shipping_methods
