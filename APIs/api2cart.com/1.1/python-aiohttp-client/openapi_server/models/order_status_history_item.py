# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.a2_c_date_time import A2CDateTime
from openapi_server import util


class OrderStatusHistoryItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_fields: object=None, comment: str=None, custom_fields: object=None, id: str=None, modified_time: A2CDateTime=None, name: str=None, notify: bool=None):
        """OrderStatusHistoryItem - a model defined in OpenAPI

        :param additional_fields: The additional_fields of this OrderStatusHistoryItem.
        :param comment: The comment of this OrderStatusHistoryItem.
        :param custom_fields: The custom_fields of this OrderStatusHistoryItem.
        :param id: The id of this OrderStatusHistoryItem.
        :param modified_time: The modified_time of this OrderStatusHistoryItem.
        :param name: The name of this OrderStatusHistoryItem.
        :param notify: The notify of this OrderStatusHistoryItem.
        """
        self.openapi_types = {
            'additional_fields': object,
            'comment': str,
            'custom_fields': object,
            'id': str,
            'modified_time': A2CDateTime,
            'name': str,
            'notify': bool
        }

        self.attribute_map = {
            'additional_fields': 'additional_fields',
            'comment': 'comment',
            'custom_fields': 'custom_fields',
            'id': 'id',
            'modified_time': 'modified_time',
            'name': 'name',
            'notify': 'notify'
        }

        self._additional_fields = additional_fields
        self._comment = comment
        self._custom_fields = custom_fields
        self._id = id
        self._modified_time = modified_time
        self._name = name
        self._notify = notify

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderStatusHistoryItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Order_Status_HistoryItem of this OrderStatusHistoryItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_fields(self):
        """Gets the additional_fields of this OrderStatusHistoryItem.


        :return: The additional_fields of this OrderStatusHistoryItem.
        :rtype: object
        """
        return self._additional_fields

    @additional_fields.setter
    def additional_fields(self, additional_fields):
        """Sets the additional_fields of this OrderStatusHistoryItem.


        :param additional_fields: The additional_fields of this OrderStatusHistoryItem.
        :type additional_fields: object
        """

        self._additional_fields = additional_fields

    @property
    def comment(self):
        """Gets the comment of this OrderStatusHistoryItem.


        :return: The comment of this OrderStatusHistoryItem.
        :rtype: str
        """
        return self._comment

    @comment.setter
    def comment(self, comment):
        """Sets the comment of this OrderStatusHistoryItem.


        :param comment: The comment of this OrderStatusHistoryItem.
        :type comment: str
        """

        self._comment = comment

    @property
    def custom_fields(self):
        """Gets the custom_fields of this OrderStatusHistoryItem.


        :return: The custom_fields of this OrderStatusHistoryItem.
        :rtype: object
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this OrderStatusHistoryItem.


        :param custom_fields: The custom_fields of this OrderStatusHistoryItem.
        :type custom_fields: object
        """

        self._custom_fields = custom_fields

    @property
    def id(self):
        """Gets the id of this OrderStatusHistoryItem.


        :return: The id of this OrderStatusHistoryItem.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this OrderStatusHistoryItem.


        :param id: The id of this OrderStatusHistoryItem.
        :type id: str
        """

        self._id = id

    @property
    def modified_time(self):
        """Gets the modified_time of this OrderStatusHistoryItem.


        :return: The modified_time of this OrderStatusHistoryItem.
        :rtype: A2CDateTime
        """
        return self._modified_time

    @modified_time.setter
    def modified_time(self, modified_time):
        """Sets the modified_time of this OrderStatusHistoryItem.


        :param modified_time: The modified_time of this OrderStatusHistoryItem.
        :type modified_time: A2CDateTime
        """

        self._modified_time = modified_time

    @property
    def name(self):
        """Gets the name of this OrderStatusHistoryItem.


        :return: The name of this OrderStatusHistoryItem.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this OrderStatusHistoryItem.


        :param name: The name of this OrderStatusHistoryItem.
        :type name: str
        """

        self._name = name

    @property
    def notify(self):
        """Gets the notify of this OrderStatusHistoryItem.


        :return: The notify of this OrderStatusHistoryItem.
        :rtype: bool
        """
        return self._notify

    @notify.setter
    def notify(self, notify):
        """Sets the notify of this OrderStatusHistoryItem.


        :param notify: The notify of this OrderStatusHistoryItem.
        :type notify: bool
        """

        self._notify = notify
