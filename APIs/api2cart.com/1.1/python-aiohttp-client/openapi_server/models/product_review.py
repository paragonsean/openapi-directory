# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.a2_c_date_time import A2CDateTime
from openapi_server.models.product_review_rating import ProductReviewRating
from openapi_server import util


class ProductReview(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_fields: object=None, created_time: A2CDateTime=None, custom_fields: object=None, customer_id: str=None, email: str=None, id: str=None, message: str=None, nick_name: str=None, product_id: str=None, rating: float=None, ratings: List[ProductReviewRating]=None, status: str=None, summary: str=None):
        """ProductReview - a model defined in OpenAPI

        :param additional_fields: The additional_fields of this ProductReview.
        :param created_time: The created_time of this ProductReview.
        :param custom_fields: The custom_fields of this ProductReview.
        :param customer_id: The customer_id of this ProductReview.
        :param email: The email of this ProductReview.
        :param id: The id of this ProductReview.
        :param message: The message of this ProductReview.
        :param nick_name: The nick_name of this ProductReview.
        :param product_id: The product_id of this ProductReview.
        :param rating: The rating of this ProductReview.
        :param ratings: The ratings of this ProductReview.
        :param status: The status of this ProductReview.
        :param summary: The summary of this ProductReview.
        """
        self.openapi_types = {
            'additional_fields': object,
            'created_time': A2CDateTime,
            'custom_fields': object,
            'customer_id': str,
            'email': str,
            'id': str,
            'message': str,
            'nick_name': str,
            'product_id': str,
            'rating': float,
            'ratings': List[ProductReviewRating],
            'status': str,
            'summary': str
        }

        self.attribute_map = {
            'additional_fields': 'additional_fields',
            'created_time': 'created_time',
            'custom_fields': 'custom_fields',
            'customer_id': 'customer_id',
            'email': 'email',
            'id': 'id',
            'message': 'message',
            'nick_name': 'nick_name',
            'product_id': 'product_id',
            'rating': 'rating',
            'ratings': 'ratings',
            'status': 'status',
            'summary': 'summary'
        }

        self._additional_fields = additional_fields
        self._created_time = created_time
        self._custom_fields = custom_fields
        self._customer_id = customer_id
        self._email = email
        self._id = id
        self._message = message
        self._nick_name = nick_name
        self._product_id = product_id
        self._rating = rating
        self._ratings = ratings
        self._status = status
        self._summary = summary

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProductReview':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Product_Review of this ProductReview.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_fields(self):
        """Gets the additional_fields of this ProductReview.


        :return: The additional_fields of this ProductReview.
        :rtype: object
        """
        return self._additional_fields

    @additional_fields.setter
    def additional_fields(self, additional_fields):
        """Sets the additional_fields of this ProductReview.


        :param additional_fields: The additional_fields of this ProductReview.
        :type additional_fields: object
        """

        self._additional_fields = additional_fields

    @property
    def created_time(self):
        """Gets the created_time of this ProductReview.


        :return: The created_time of this ProductReview.
        :rtype: A2CDateTime
        """
        return self._created_time

    @created_time.setter
    def created_time(self, created_time):
        """Sets the created_time of this ProductReview.


        :param created_time: The created_time of this ProductReview.
        :type created_time: A2CDateTime
        """

        self._created_time = created_time

    @property
    def custom_fields(self):
        """Gets the custom_fields of this ProductReview.


        :return: The custom_fields of this ProductReview.
        :rtype: object
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this ProductReview.


        :param custom_fields: The custom_fields of this ProductReview.
        :type custom_fields: object
        """

        self._custom_fields = custom_fields

    @property
    def customer_id(self):
        """Gets the customer_id of this ProductReview.


        :return: The customer_id of this ProductReview.
        :rtype: str
        """
        return self._customer_id

    @customer_id.setter
    def customer_id(self, customer_id):
        """Sets the customer_id of this ProductReview.


        :param customer_id: The customer_id of this ProductReview.
        :type customer_id: str
        """

        self._customer_id = customer_id

    @property
    def email(self):
        """Gets the email of this ProductReview.


        :return: The email of this ProductReview.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this ProductReview.


        :param email: The email of this ProductReview.
        :type email: str
        """

        self._email = email

    @property
    def id(self):
        """Gets the id of this ProductReview.


        :return: The id of this ProductReview.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ProductReview.


        :param id: The id of this ProductReview.
        :type id: str
        """

        self._id = id

    @property
    def message(self):
        """Gets the message of this ProductReview.


        :return: The message of this ProductReview.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this ProductReview.


        :param message: The message of this ProductReview.
        :type message: str
        """

        self._message = message

    @property
    def nick_name(self):
        """Gets the nick_name of this ProductReview.


        :return: The nick_name of this ProductReview.
        :rtype: str
        """
        return self._nick_name

    @nick_name.setter
    def nick_name(self, nick_name):
        """Sets the nick_name of this ProductReview.


        :param nick_name: The nick_name of this ProductReview.
        :type nick_name: str
        """

        self._nick_name = nick_name

    @property
    def product_id(self):
        """Gets the product_id of this ProductReview.


        :return: The product_id of this ProductReview.
        :rtype: str
        """
        return self._product_id

    @product_id.setter
    def product_id(self, product_id):
        """Sets the product_id of this ProductReview.


        :param product_id: The product_id of this ProductReview.
        :type product_id: str
        """

        self._product_id = product_id

    @property
    def rating(self):
        """Gets the rating of this ProductReview.


        :return: The rating of this ProductReview.
        :rtype: float
        """
        return self._rating

    @rating.setter
    def rating(self, rating):
        """Sets the rating of this ProductReview.


        :param rating: The rating of this ProductReview.
        :type rating: float
        """

        self._rating = rating

    @property
    def ratings(self):
        """Gets the ratings of this ProductReview.


        :return: The ratings of this ProductReview.
        :rtype: List[ProductReviewRating]
        """
        return self._ratings

    @ratings.setter
    def ratings(self, ratings):
        """Sets the ratings of this ProductReview.


        :param ratings: The ratings of this ProductReview.
        :type ratings: List[ProductReviewRating]
        """

        self._ratings = ratings

    @property
    def status(self):
        """Gets the status of this ProductReview.


        :return: The status of this ProductReview.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ProductReview.


        :param status: The status of this ProductReview.
        :type status: str
        """

        self._status = status

    @property
    def summary(self):
        """Gets the summary of this ProductReview.


        :return: The summary of this ProductReview.
        :rtype: str
        """
        return self._summary

    @summary.setter
    def summary(self, summary):
        """Sets the summary of this ProductReview.


        :param summary: The summary of this ProductReview.
        :type summary: str
        """

        self._summary = summary
