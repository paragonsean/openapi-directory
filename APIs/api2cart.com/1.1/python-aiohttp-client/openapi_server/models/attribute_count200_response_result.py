# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AttributeCount200ResponseResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attributes_count: int=None):
        """AttributeCount200ResponseResult - a model defined in OpenAPI

        :param attributes_count: The attributes_count of this AttributeCount200ResponseResult.
        """
        self.openapi_types = {
            'attributes_count': int
        }

        self.attribute_map = {
            'attributes_count': 'attributes_count'
        }

        self._attributes_count = attributes_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AttributeCount200ResponseResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AttributeCount_200_response_result of this AttributeCount200ResponseResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attributes_count(self):
        """Gets the attributes_count of this AttributeCount200ResponseResult.


        :return: The attributes_count of this AttributeCount200ResponseResult.
        :rtype: int
        """
        return self._attributes_count

    @attributes_count.setter
    def attributes_count(self, attributes_count):
        """Sets the attributes_count of this AttributeCount200ResponseResult.


        :param attributes_count: The attributes_count of this AttributeCount200ResponseResult.
        :type attributes_count: int
        """

        self._attributes_count = attributes_count
