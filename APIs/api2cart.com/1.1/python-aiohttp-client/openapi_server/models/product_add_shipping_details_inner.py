# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProductAddShippingDetailsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, shipping_cost: float=None, shipping_service: str=None, shipping_type: str=None):
        """ProductAddShippingDetailsInner - a model defined in OpenAPI

        :param shipping_cost: The shipping_cost of this ProductAddShippingDetailsInner.
        :param shipping_service: The shipping_service of this ProductAddShippingDetailsInner.
        :param shipping_type: The shipping_type of this ProductAddShippingDetailsInner.
        """
        self.openapi_types = {
            'shipping_cost': float,
            'shipping_service': str,
            'shipping_type': str
        }

        self.attribute_map = {
            'shipping_cost': 'shipping_cost',
            'shipping_service': 'shipping_service',
            'shipping_type': 'shipping_type'
        }

        self._shipping_cost = shipping_cost
        self._shipping_service = shipping_service
        self._shipping_type = shipping_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProductAddShippingDetailsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProductAdd_shipping_details_inner of this ProductAddShippingDetailsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def shipping_cost(self):
        """Gets the shipping_cost of this ProductAddShippingDetailsInner.


        :return: The shipping_cost of this ProductAddShippingDetailsInner.
        :rtype: float
        """
        return self._shipping_cost

    @shipping_cost.setter
    def shipping_cost(self, shipping_cost):
        """Sets the shipping_cost of this ProductAddShippingDetailsInner.


        :param shipping_cost: The shipping_cost of this ProductAddShippingDetailsInner.
        :type shipping_cost: float
        """

        self._shipping_cost = shipping_cost

    @property
    def shipping_service(self):
        """Gets the shipping_service of this ProductAddShippingDetailsInner.


        :return: The shipping_service of this ProductAddShippingDetailsInner.
        :rtype: str
        """
        return self._shipping_service

    @shipping_service.setter
    def shipping_service(self, shipping_service):
        """Sets the shipping_service of this ProductAddShippingDetailsInner.


        :param shipping_service: The shipping_service of this ProductAddShippingDetailsInner.
        :type shipping_service: str
        """

        self._shipping_service = shipping_service

    @property
    def shipping_type(self):
        """Gets the shipping_type of this ProductAddShippingDetailsInner.


        :return: The shipping_type of this ProductAddShippingDetailsInner.
        :rtype: str
        """
        return self._shipping_type

    @shipping_type.setter
    def shipping_type(self, shipping_type):
        """Sets the shipping_type of this ProductAddShippingDetailsInner.


        :param shipping_type: The shipping_type of this ProductAddShippingDetailsInner.
        :type shipping_type: str
        """

        self._shipping_type = shipping_type
