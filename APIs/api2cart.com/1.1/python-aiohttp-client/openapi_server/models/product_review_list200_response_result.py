# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.product_review import ProductReview
from openapi_server import util


class ProductReviewList200ResponseResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, reviews: List[ProductReview]=None, total_count: int=None):
        """ProductReviewList200ResponseResult - a model defined in OpenAPI

        :param reviews: The reviews of this ProductReviewList200ResponseResult.
        :param total_count: The total_count of this ProductReviewList200ResponseResult.
        """
        self.openapi_types = {
            'reviews': List[ProductReview],
            'total_count': int
        }

        self.attribute_map = {
            'reviews': 'reviews',
            'total_count': 'total_count'
        }

        self._reviews = reviews
        self._total_count = total_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProductReviewList200ResponseResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProductReviewList_200_response_result of this ProductReviewList200ResponseResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def reviews(self):
        """Gets the reviews of this ProductReviewList200ResponseResult.


        :return: The reviews of this ProductReviewList200ResponseResult.
        :rtype: List[ProductReview]
        """
        return self._reviews

    @reviews.setter
    def reviews(self, reviews):
        """Sets the reviews of this ProductReviewList200ResponseResult.


        :param reviews: The reviews of this ProductReviewList200ResponseResult.
        :type reviews: List[ProductReview]
        """

        self._reviews = reviews

    @property
    def total_count(self):
        """Gets the total_count of this ProductReviewList200ResponseResult.


        :return: The total_count of this ProductReviewList200ResponseResult.
        :rtype: int
        """
        return self._total_count

    @total_count.setter
    def total_count(self, total_count):
        """Sets the total_count of this ProductReviewList200ResponseResult.


        :param total_count: The total_count of this ProductReviewList200ResponseResult.
        :type total_count: int
        """

        self._total_count = total_count
