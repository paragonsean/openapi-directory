# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProductGroupPrice(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_fields: object=None, custom_fields: object=None, expire_time: str=None, group_id: str=None, id: str=None, price: float=None, quantity: float=None, start_time: str=None, store_id: str=None):
        """ProductGroupPrice - a model defined in OpenAPI

        :param additional_fields: The additional_fields of this ProductGroupPrice.
        :param custom_fields: The custom_fields of this ProductGroupPrice.
        :param expire_time: The expire_time of this ProductGroupPrice.
        :param group_id: The group_id of this ProductGroupPrice.
        :param id: The id of this ProductGroupPrice.
        :param price: The price of this ProductGroupPrice.
        :param quantity: The quantity of this ProductGroupPrice.
        :param start_time: The start_time of this ProductGroupPrice.
        :param store_id: The store_id of this ProductGroupPrice.
        """
        self.openapi_types = {
            'additional_fields': object,
            'custom_fields': object,
            'expire_time': str,
            'group_id': str,
            'id': str,
            'price': float,
            'quantity': float,
            'start_time': str,
            'store_id': str
        }

        self.attribute_map = {
            'additional_fields': 'additional_fields',
            'custom_fields': 'custom_fields',
            'expire_time': 'expire_time',
            'group_id': 'group_id',
            'id': 'id',
            'price': 'price',
            'quantity': 'quantity',
            'start_time': 'start_time',
            'store_id': 'store_id'
        }

        self._additional_fields = additional_fields
        self._custom_fields = custom_fields
        self._expire_time = expire_time
        self._group_id = group_id
        self._id = id
        self._price = price
        self._quantity = quantity
        self._start_time = start_time
        self._store_id = store_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProductGroupPrice':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Product_GroupPrice of this ProductGroupPrice.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_fields(self):
        """Gets the additional_fields of this ProductGroupPrice.


        :return: The additional_fields of this ProductGroupPrice.
        :rtype: object
        """
        return self._additional_fields

    @additional_fields.setter
    def additional_fields(self, additional_fields):
        """Sets the additional_fields of this ProductGroupPrice.


        :param additional_fields: The additional_fields of this ProductGroupPrice.
        :type additional_fields: object
        """

        self._additional_fields = additional_fields

    @property
    def custom_fields(self):
        """Gets the custom_fields of this ProductGroupPrice.


        :return: The custom_fields of this ProductGroupPrice.
        :rtype: object
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this ProductGroupPrice.


        :param custom_fields: The custom_fields of this ProductGroupPrice.
        :type custom_fields: object
        """

        self._custom_fields = custom_fields

    @property
    def expire_time(self):
        """Gets the expire_time of this ProductGroupPrice.


        :return: The expire_time of this ProductGroupPrice.
        :rtype: str
        """
        return self._expire_time

    @expire_time.setter
    def expire_time(self, expire_time):
        """Sets the expire_time of this ProductGroupPrice.


        :param expire_time: The expire_time of this ProductGroupPrice.
        :type expire_time: str
        """

        self._expire_time = expire_time

    @property
    def group_id(self):
        """Gets the group_id of this ProductGroupPrice.


        :return: The group_id of this ProductGroupPrice.
        :rtype: str
        """
        return self._group_id

    @group_id.setter
    def group_id(self, group_id):
        """Sets the group_id of this ProductGroupPrice.


        :param group_id: The group_id of this ProductGroupPrice.
        :type group_id: str
        """

        self._group_id = group_id

    @property
    def id(self):
        """Gets the id of this ProductGroupPrice.


        :return: The id of this ProductGroupPrice.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ProductGroupPrice.


        :param id: The id of this ProductGroupPrice.
        :type id: str
        """

        self._id = id

    @property
    def price(self):
        """Gets the price of this ProductGroupPrice.


        :return: The price of this ProductGroupPrice.
        :rtype: float
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this ProductGroupPrice.


        :param price: The price of this ProductGroupPrice.
        :type price: float
        """

        self._price = price

    @property
    def quantity(self):
        """Gets the quantity of this ProductGroupPrice.


        :return: The quantity of this ProductGroupPrice.
        :rtype: float
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this ProductGroupPrice.


        :param quantity: The quantity of this ProductGroupPrice.
        :type quantity: float
        """

        self._quantity = quantity

    @property
    def start_time(self):
        """Gets the start_time of this ProductGroupPrice.


        :return: The start_time of this ProductGroupPrice.
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this ProductGroupPrice.


        :param start_time: The start_time of this ProductGroupPrice.
        :type start_time: str
        """

        self._start_time = start_time

    @property
    def store_id(self):
        """Gets the store_id of this ProductGroupPrice.


        :return: The store_id of this ProductGroupPrice.
        :rtype: str
        """
        return self._store_id

    @store_id.setter
    def store_id(self, store_id):
        """Sets the store_id of this ProductGroupPrice.


        :param store_id: The store_id of this ProductGroupPrice.
        :type store_id: str
        """

        self._store_id = store_id
