# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.a2_c_date_time import A2CDateTime
from openapi_server.models.image import Image
from openapi_server import util


class Category(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_fields: object=None, avail: bool=None, created_at: A2CDateTime=None, custom_fields: object=None, description: str=None, id: str=None, images: List[Image]=None, keywords: str=None, meta_description: str=None, meta_title: str=None, modified_at: A2CDateTime=None, name: str=None, parent_id: str=None, path: str=None, seo_url: str=None, short_description: str=None, sort_order: int=None, stores_ids: List[str]=None):
        """Category - a model defined in OpenAPI

        :param additional_fields: The additional_fields of this Category.
        :param avail: The avail of this Category.
        :param created_at: The created_at of this Category.
        :param custom_fields: The custom_fields of this Category.
        :param description: The description of this Category.
        :param id: The id of this Category.
        :param images: The images of this Category.
        :param keywords: The keywords of this Category.
        :param meta_description: The meta_description of this Category.
        :param meta_title: The meta_title of this Category.
        :param modified_at: The modified_at of this Category.
        :param name: The name of this Category.
        :param parent_id: The parent_id of this Category.
        :param path: The path of this Category.
        :param seo_url: The seo_url of this Category.
        :param short_description: The short_description of this Category.
        :param sort_order: The sort_order of this Category.
        :param stores_ids: The stores_ids of this Category.
        """
        self.openapi_types = {
            'additional_fields': object,
            'avail': bool,
            'created_at': A2CDateTime,
            'custom_fields': object,
            'description': str,
            'id': str,
            'images': List[Image],
            'keywords': str,
            'meta_description': str,
            'meta_title': str,
            'modified_at': A2CDateTime,
            'name': str,
            'parent_id': str,
            'path': str,
            'seo_url': str,
            'short_description': str,
            'sort_order': int,
            'stores_ids': List[str]
        }

        self.attribute_map = {
            'additional_fields': 'additional_fields',
            'avail': 'avail',
            'created_at': 'created_at',
            'custom_fields': 'custom_fields',
            'description': 'description',
            'id': 'id',
            'images': 'images',
            'keywords': 'keywords',
            'meta_description': 'meta_description',
            'meta_title': 'meta_title',
            'modified_at': 'modified_at',
            'name': 'name',
            'parent_id': 'parent_id',
            'path': 'path',
            'seo_url': 'seo_url',
            'short_description': 'short_description',
            'sort_order': 'sort_order',
            'stores_ids': 'stores_ids'
        }

        self._additional_fields = additional_fields
        self._avail = avail
        self._created_at = created_at
        self._custom_fields = custom_fields
        self._description = description
        self._id = id
        self._images = images
        self._keywords = keywords
        self._meta_description = meta_description
        self._meta_title = meta_title
        self._modified_at = modified_at
        self._name = name
        self._parent_id = parent_id
        self._path = path
        self._seo_url = seo_url
        self._short_description = short_description
        self._sort_order = sort_order
        self._stores_ids = stores_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Category':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Category of this Category.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_fields(self):
        """Gets the additional_fields of this Category.


        :return: The additional_fields of this Category.
        :rtype: object
        """
        return self._additional_fields

    @additional_fields.setter
    def additional_fields(self, additional_fields):
        """Sets the additional_fields of this Category.


        :param additional_fields: The additional_fields of this Category.
        :type additional_fields: object
        """

        self._additional_fields = additional_fields

    @property
    def avail(self):
        """Gets the avail of this Category.


        :return: The avail of this Category.
        :rtype: bool
        """
        return self._avail

    @avail.setter
    def avail(self, avail):
        """Sets the avail of this Category.


        :param avail: The avail of this Category.
        :type avail: bool
        """

        self._avail = avail

    @property
    def created_at(self):
        """Gets the created_at of this Category.


        :return: The created_at of this Category.
        :rtype: A2CDateTime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this Category.


        :param created_at: The created_at of this Category.
        :type created_at: A2CDateTime
        """

        self._created_at = created_at

    @property
    def custom_fields(self):
        """Gets the custom_fields of this Category.


        :return: The custom_fields of this Category.
        :rtype: object
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this Category.


        :param custom_fields: The custom_fields of this Category.
        :type custom_fields: object
        """

        self._custom_fields = custom_fields

    @property
    def description(self):
        """Gets the description of this Category.


        :return: The description of this Category.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Category.


        :param description: The description of this Category.
        :type description: str
        """

        self._description = description

    @property
    def id(self):
        """Gets the id of this Category.


        :return: The id of this Category.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Category.


        :param id: The id of this Category.
        :type id: str
        """

        self._id = id

    @property
    def images(self):
        """Gets the images of this Category.


        :return: The images of this Category.
        :rtype: List[Image]
        """
        return self._images

    @images.setter
    def images(self, images):
        """Sets the images of this Category.


        :param images: The images of this Category.
        :type images: List[Image]
        """

        self._images = images

    @property
    def keywords(self):
        """Gets the keywords of this Category.


        :return: The keywords of this Category.
        :rtype: str
        """
        return self._keywords

    @keywords.setter
    def keywords(self, keywords):
        """Sets the keywords of this Category.


        :param keywords: The keywords of this Category.
        :type keywords: str
        """

        self._keywords = keywords

    @property
    def meta_description(self):
        """Gets the meta_description of this Category.


        :return: The meta_description of this Category.
        :rtype: str
        """
        return self._meta_description

    @meta_description.setter
    def meta_description(self, meta_description):
        """Sets the meta_description of this Category.


        :param meta_description: The meta_description of this Category.
        :type meta_description: str
        """

        self._meta_description = meta_description

    @property
    def meta_title(self):
        """Gets the meta_title of this Category.


        :return: The meta_title of this Category.
        :rtype: str
        """
        return self._meta_title

    @meta_title.setter
    def meta_title(self, meta_title):
        """Sets the meta_title of this Category.


        :param meta_title: The meta_title of this Category.
        :type meta_title: str
        """

        self._meta_title = meta_title

    @property
    def modified_at(self):
        """Gets the modified_at of this Category.


        :return: The modified_at of this Category.
        :rtype: A2CDateTime
        """
        return self._modified_at

    @modified_at.setter
    def modified_at(self, modified_at):
        """Sets the modified_at of this Category.


        :param modified_at: The modified_at of this Category.
        :type modified_at: A2CDateTime
        """

        self._modified_at = modified_at

    @property
    def name(self):
        """Gets the name of this Category.


        :return: The name of this Category.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Category.


        :param name: The name of this Category.
        :type name: str
        """

        self._name = name

    @property
    def parent_id(self):
        """Gets the parent_id of this Category.


        :return: The parent_id of this Category.
        :rtype: str
        """
        return self._parent_id

    @parent_id.setter
    def parent_id(self, parent_id):
        """Sets the parent_id of this Category.


        :param parent_id: The parent_id of this Category.
        :type parent_id: str
        """

        self._parent_id = parent_id

    @property
    def path(self):
        """Gets the path of this Category.


        :return: The path of this Category.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this Category.


        :param path: The path of this Category.
        :type path: str
        """

        self._path = path

    @property
    def seo_url(self):
        """Gets the seo_url of this Category.


        :return: The seo_url of this Category.
        :rtype: str
        """
        return self._seo_url

    @seo_url.setter
    def seo_url(self, seo_url):
        """Sets the seo_url of this Category.


        :param seo_url: The seo_url of this Category.
        :type seo_url: str
        """

        self._seo_url = seo_url

    @property
    def short_description(self):
        """Gets the short_description of this Category.


        :return: The short_description of this Category.
        :rtype: str
        """
        return self._short_description

    @short_description.setter
    def short_description(self, short_description):
        """Sets the short_description of this Category.


        :param short_description: The short_description of this Category.
        :type short_description: str
        """

        self._short_description = short_description

    @property
    def sort_order(self):
        """Gets the sort_order of this Category.


        :return: The sort_order of this Category.
        :rtype: int
        """
        return self._sort_order

    @sort_order.setter
    def sort_order(self, sort_order):
        """Sets the sort_order of this Category.


        :param sort_order: The sort_order of this Category.
        :type sort_order: int
        """

        self._sort_order = sort_order

    @property
    def stores_ids(self):
        """Gets the stores_ids of this Category.


        :return: The stores_ids of this Category.
        :rtype: List[str]
        """
        return self._stores_ids

    @stores_ids.setter
    def stores_ids(self, stores_ids):
        """Sets the stores_ids of this Category.


        :param stores_ids: The stores_ids of this Category.
        :type stores_ids: List[str]
        """

        self._stores_ids = stores_ids
