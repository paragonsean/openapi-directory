# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.order_shipment_add_tracking_numbers_inner import OrderShipmentAddTrackingNumbersInner
from openapi_server import util


class OrderShipmentUpdate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_shipped: bool=True, order_id: str=None, replace: bool=True, shipment_id: str=None, store_id: str=None, tracking_link: str=None, tracking_numbers: List[OrderShipmentAddTrackingNumbersInner]=None):
        """OrderShipmentUpdate - a model defined in OpenAPI

        :param is_shipped: The is_shipped of this OrderShipmentUpdate.
        :param order_id: The order_id of this OrderShipmentUpdate.
        :param replace: The replace of this OrderShipmentUpdate.
        :param shipment_id: The shipment_id of this OrderShipmentUpdate.
        :param store_id: The store_id of this OrderShipmentUpdate.
        :param tracking_link: The tracking_link of this OrderShipmentUpdate.
        :param tracking_numbers: The tracking_numbers of this OrderShipmentUpdate.
        """
        self.openapi_types = {
            'is_shipped': bool,
            'order_id': str,
            'replace': bool,
            'shipment_id': str,
            'store_id': str,
            'tracking_link': str,
            'tracking_numbers': List[OrderShipmentAddTrackingNumbersInner]
        }

        self.attribute_map = {
            'is_shipped': 'is_shipped',
            'order_id': 'order_id',
            'replace': 'replace',
            'shipment_id': 'shipment_id',
            'store_id': 'store_id',
            'tracking_link': 'tracking_link',
            'tracking_numbers': 'tracking_numbers'
        }

        self._is_shipped = is_shipped
        self._order_id = order_id
        self._replace = replace
        self._shipment_id = shipment_id
        self._store_id = store_id
        self._tracking_link = tracking_link
        self._tracking_numbers = tracking_numbers

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderShipmentUpdate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrderShipmentUpdate of this OrderShipmentUpdate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_shipped(self):
        """Gets the is_shipped of this OrderShipmentUpdate.

        Defines shipment's status

        :return: The is_shipped of this OrderShipmentUpdate.
        :rtype: bool
        """
        return self._is_shipped

    @is_shipped.setter
    def is_shipped(self, is_shipped):
        """Sets the is_shipped of this OrderShipmentUpdate.

        Defines shipment's status

        :param is_shipped: The is_shipped of this OrderShipmentUpdate.
        :type is_shipped: bool
        """

        self._is_shipped = is_shipped

    @property
    def order_id(self):
        """Gets the order_id of this OrderShipmentUpdate.

        Defines the order that will be updated

        :return: The order_id of this OrderShipmentUpdate.
        :rtype: str
        """
        return self._order_id

    @order_id.setter
    def order_id(self, order_id):
        """Sets the order_id of this OrderShipmentUpdate.

        Defines the order that will be updated

        :param order_id: The order_id of this OrderShipmentUpdate.
        :type order_id: str
        """

        self._order_id = order_id

    @property
    def replace(self):
        """Gets the replace of this OrderShipmentUpdate.

        Allows rewrite tracking numbers

        :return: The replace of this OrderShipmentUpdate.
        :rtype: bool
        """
        return self._replace

    @replace.setter
    def replace(self, replace):
        """Sets the replace of this OrderShipmentUpdate.

        Allows rewrite tracking numbers

        :param replace: The replace of this OrderShipmentUpdate.
        :type replace: bool
        """

        self._replace = replace

    @property
    def shipment_id(self):
        """Gets the shipment_id of this OrderShipmentUpdate.

        Shipment id indicates the number of delivery

        :return: The shipment_id of this OrderShipmentUpdate.
        :rtype: str
        """
        return self._shipment_id

    @shipment_id.setter
    def shipment_id(self, shipment_id):
        """Sets the shipment_id of this OrderShipmentUpdate.

        Shipment id indicates the number of delivery

        :param shipment_id: The shipment_id of this OrderShipmentUpdate.
        :type shipment_id: str
        """
        if shipment_id is None:
            raise ValueError("Invalid value for `shipment_id`, must not be `None`")

        self._shipment_id = shipment_id

    @property
    def store_id(self):
        """Gets the store_id of this OrderShipmentUpdate.

        Store Id

        :return: The store_id of this OrderShipmentUpdate.
        :rtype: str
        """
        return self._store_id

    @store_id.setter
    def store_id(self, store_id):
        """Sets the store_id of this OrderShipmentUpdate.

        Store Id

        :param store_id: The store_id of this OrderShipmentUpdate.
        :type store_id: str
        """

        self._store_id = store_id

    @property
    def tracking_link(self):
        """Gets the tracking_link of this OrderShipmentUpdate.

        Defines custom tracking link

        :return: The tracking_link of this OrderShipmentUpdate.
        :rtype: str
        """
        return self._tracking_link

    @tracking_link.setter
    def tracking_link(self, tracking_link):
        """Sets the tracking_link of this OrderShipmentUpdate.

        Defines custom tracking link

        :param tracking_link: The tracking_link of this OrderShipmentUpdate.
        :type tracking_link: str
        """

        self._tracking_link = tracking_link

    @property
    def tracking_numbers(self):
        """Gets the tracking_numbers of this OrderShipmentUpdate.

        Defines shipment's tracking numbers that have to be added</br> How set tracking numbers to appropriate carrier:<ul><li>tracking_numbers[]=a2c.demo1,a2c.demo2 - set default carrier</li><li>tracking_numbers[<b>carrier_id</b>]=a2c.demo - set appropriate carrier</li></ul>To get the list of carriers IDs that are available in your store, use the <a href = \"https://api2cart.com/docs/#/cart/CartInfo\">cart.info</a > method

        :return: The tracking_numbers of this OrderShipmentUpdate.
        :rtype: List[OrderShipmentAddTrackingNumbersInner]
        """
        return self._tracking_numbers

    @tracking_numbers.setter
    def tracking_numbers(self, tracking_numbers):
        """Sets the tracking_numbers of this OrderShipmentUpdate.

        Defines shipment's tracking numbers that have to be added</br> How set tracking numbers to appropriate carrier:<ul><li>tracking_numbers[]=a2c.demo1,a2c.demo2 - set default carrier</li><li>tracking_numbers[<b>carrier_id</b>]=a2c.demo - set appropriate carrier</li></ul>To get the list of carriers IDs that are available in your store, use the <a href = \"https://api2cart.com/docs/#/cart/CartInfo\">cart.info</a > method

        :param tracking_numbers: The tracking_numbers of this OrderShipmentUpdate.
        :type tracking_numbers: List[OrderShipmentAddTrackingNumbersInner]
        """

        self._tracking_numbers = tracking_numbers
