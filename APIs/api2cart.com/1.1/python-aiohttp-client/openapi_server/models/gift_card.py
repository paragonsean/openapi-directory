# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.coupon_history import CouponHistory
from openapi_server import util


class GiftCard(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_fields: object=None, amount: float=None, avail_to: str=None, code: str=None, created_at: str=None, currency_code: str=None, custom_fields: object=None, free_product_ids: str=None, id: str=None, initial_amount: float=None, issuer_email: str=None, issuer_name: str=None, message: str=None, name: str=None, recipient_email: str=None, recipient_name: str=None, status: str=None, type: str=None, usage_history: List[CouponHistory]=None):
        """GiftCard - a model defined in OpenAPI

        :param additional_fields: The additional_fields of this GiftCard.
        :param amount: The amount of this GiftCard.
        :param avail_to: The avail_to of this GiftCard.
        :param code: The code of this GiftCard.
        :param created_at: The created_at of this GiftCard.
        :param currency_code: The currency_code of this GiftCard.
        :param custom_fields: The custom_fields of this GiftCard.
        :param free_product_ids: The free_product_ids of this GiftCard.
        :param id: The id of this GiftCard.
        :param initial_amount: The initial_amount of this GiftCard.
        :param issuer_email: The issuer_email of this GiftCard.
        :param issuer_name: The issuer_name of this GiftCard.
        :param message: The message of this GiftCard.
        :param name: The name of this GiftCard.
        :param recipient_email: The recipient_email of this GiftCard.
        :param recipient_name: The recipient_name of this GiftCard.
        :param status: The status of this GiftCard.
        :param type: The type of this GiftCard.
        :param usage_history: The usage_history of this GiftCard.
        """
        self.openapi_types = {
            'additional_fields': object,
            'amount': float,
            'avail_to': str,
            'code': str,
            'created_at': str,
            'currency_code': str,
            'custom_fields': object,
            'free_product_ids': str,
            'id': str,
            'initial_amount': float,
            'issuer_email': str,
            'issuer_name': str,
            'message': str,
            'name': str,
            'recipient_email': str,
            'recipient_name': str,
            'status': str,
            'type': str,
            'usage_history': List[CouponHistory]
        }

        self.attribute_map = {
            'additional_fields': 'additional_fields',
            'amount': 'amount',
            'avail_to': 'avail_to',
            'code': 'code',
            'created_at': 'created_at',
            'currency_code': 'currency_code',
            'custom_fields': 'custom_fields',
            'free_product_ids': 'free_product_ids',
            'id': 'id',
            'initial_amount': 'initial_amount',
            'issuer_email': 'issuer_email',
            'issuer_name': 'issuer_name',
            'message': 'message',
            'name': 'name',
            'recipient_email': 'recipient_email',
            'recipient_name': 'recipient_name',
            'status': 'status',
            'type': 'type',
            'usage_history': 'usage_history'
        }

        self._additional_fields = additional_fields
        self._amount = amount
        self._avail_to = avail_to
        self._code = code
        self._created_at = created_at
        self._currency_code = currency_code
        self._custom_fields = custom_fields
        self._free_product_ids = free_product_ids
        self._id = id
        self._initial_amount = initial_amount
        self._issuer_email = issuer_email
        self._issuer_name = issuer_name
        self._message = message
        self._name = name
        self._recipient_email = recipient_email
        self._recipient_name = recipient_name
        self._status = status
        self._type = type
        self._usage_history = usage_history

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GiftCard':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GiftCard of this GiftCard.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_fields(self):
        """Gets the additional_fields of this GiftCard.


        :return: The additional_fields of this GiftCard.
        :rtype: object
        """
        return self._additional_fields

    @additional_fields.setter
    def additional_fields(self, additional_fields):
        """Sets the additional_fields of this GiftCard.


        :param additional_fields: The additional_fields of this GiftCard.
        :type additional_fields: object
        """

        self._additional_fields = additional_fields

    @property
    def amount(self):
        """Gets the amount of this GiftCard.


        :return: The amount of this GiftCard.
        :rtype: float
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this GiftCard.


        :param amount: The amount of this GiftCard.
        :type amount: float
        """

        self._amount = amount

    @property
    def avail_to(self):
        """Gets the avail_to of this GiftCard.


        :return: The avail_to of this GiftCard.
        :rtype: str
        """
        return self._avail_to

    @avail_to.setter
    def avail_to(self, avail_to):
        """Sets the avail_to of this GiftCard.


        :param avail_to: The avail_to of this GiftCard.
        :type avail_to: str
        """

        self._avail_to = avail_to

    @property
    def code(self):
        """Gets the code of this GiftCard.


        :return: The code of this GiftCard.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this GiftCard.


        :param code: The code of this GiftCard.
        :type code: str
        """

        self._code = code

    @property
    def created_at(self):
        """Gets the created_at of this GiftCard.


        :return: The created_at of this GiftCard.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this GiftCard.


        :param created_at: The created_at of this GiftCard.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def currency_code(self):
        """Gets the currency_code of this GiftCard.


        :return: The currency_code of this GiftCard.
        :rtype: str
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this GiftCard.


        :param currency_code: The currency_code of this GiftCard.
        :type currency_code: str
        """

        self._currency_code = currency_code

    @property
    def custom_fields(self):
        """Gets the custom_fields of this GiftCard.


        :return: The custom_fields of this GiftCard.
        :rtype: object
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this GiftCard.


        :param custom_fields: The custom_fields of this GiftCard.
        :type custom_fields: object
        """

        self._custom_fields = custom_fields

    @property
    def free_product_ids(self):
        """Gets the free_product_ids of this GiftCard.


        :return: The free_product_ids of this GiftCard.
        :rtype: str
        """
        return self._free_product_ids

    @free_product_ids.setter
    def free_product_ids(self, free_product_ids):
        """Sets the free_product_ids of this GiftCard.


        :param free_product_ids: The free_product_ids of this GiftCard.
        :type free_product_ids: str
        """

        self._free_product_ids = free_product_ids

    @property
    def id(self):
        """Gets the id of this GiftCard.


        :return: The id of this GiftCard.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GiftCard.


        :param id: The id of this GiftCard.
        :type id: str
        """

        self._id = id

    @property
    def initial_amount(self):
        """Gets the initial_amount of this GiftCard.


        :return: The initial_amount of this GiftCard.
        :rtype: float
        """
        return self._initial_amount

    @initial_amount.setter
    def initial_amount(self, initial_amount):
        """Sets the initial_amount of this GiftCard.


        :param initial_amount: The initial_amount of this GiftCard.
        :type initial_amount: float
        """

        self._initial_amount = initial_amount

    @property
    def issuer_email(self):
        """Gets the issuer_email of this GiftCard.


        :return: The issuer_email of this GiftCard.
        :rtype: str
        """
        return self._issuer_email

    @issuer_email.setter
    def issuer_email(self, issuer_email):
        """Sets the issuer_email of this GiftCard.


        :param issuer_email: The issuer_email of this GiftCard.
        :type issuer_email: str
        """

        self._issuer_email = issuer_email

    @property
    def issuer_name(self):
        """Gets the issuer_name of this GiftCard.


        :return: The issuer_name of this GiftCard.
        :rtype: str
        """
        return self._issuer_name

    @issuer_name.setter
    def issuer_name(self, issuer_name):
        """Sets the issuer_name of this GiftCard.


        :param issuer_name: The issuer_name of this GiftCard.
        :type issuer_name: str
        """

        self._issuer_name = issuer_name

    @property
    def message(self):
        """Gets the message of this GiftCard.


        :return: The message of this GiftCard.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this GiftCard.


        :param message: The message of this GiftCard.
        :type message: str
        """

        self._message = message

    @property
    def name(self):
        """Gets the name of this GiftCard.


        :return: The name of this GiftCard.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GiftCard.


        :param name: The name of this GiftCard.
        :type name: str
        """

        self._name = name

    @property
    def recipient_email(self):
        """Gets the recipient_email of this GiftCard.


        :return: The recipient_email of this GiftCard.
        :rtype: str
        """
        return self._recipient_email

    @recipient_email.setter
    def recipient_email(self, recipient_email):
        """Sets the recipient_email of this GiftCard.


        :param recipient_email: The recipient_email of this GiftCard.
        :type recipient_email: str
        """

        self._recipient_email = recipient_email

    @property
    def recipient_name(self):
        """Gets the recipient_name of this GiftCard.


        :return: The recipient_name of this GiftCard.
        :rtype: str
        """
        return self._recipient_name

    @recipient_name.setter
    def recipient_name(self, recipient_name):
        """Sets the recipient_name of this GiftCard.


        :param recipient_name: The recipient_name of this GiftCard.
        :type recipient_name: str
        """

        self._recipient_name = recipient_name

    @property
    def status(self):
        """Gets the status of this GiftCard.


        :return: The status of this GiftCard.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GiftCard.


        :param status: The status of this GiftCard.
        :type status: str
        """

        self._status = status

    @property
    def type(self):
        """Gets the type of this GiftCard.


        :return: The type of this GiftCard.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GiftCard.


        :param type: The type of this GiftCard.
        :type type: str
        """

        self._type = type

    @property
    def usage_history(self):
        """Gets the usage_history of this GiftCard.


        :return: The usage_history of this GiftCard.
        :rtype: List[CouponHistory]
        """
        return self._usage_history

    @usage_history.setter
    def usage_history(self, usage_history):
        """Sets the usage_history of this GiftCard.


        :param usage_history: The usage_history of this GiftCard.
        :type usage_history: List[CouponHistory]
        """

        self._usage_history = usage_history
