# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.subscriber import Subscriber
from openapi_server import util


class SubscriberList200ResponseResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, subscribers: List[Subscriber]=None, total_count: int=None):
        """SubscriberList200ResponseResult - a model defined in OpenAPI

        :param subscribers: The subscribers of this SubscriberList200ResponseResult.
        :param total_count: The total_count of this SubscriberList200ResponseResult.
        """
        self.openapi_types = {
            'subscribers': List[Subscriber],
            'total_count': int
        }

        self.attribute_map = {
            'subscribers': 'subscribers',
            'total_count': 'total_count'
        }

        self._subscribers = subscribers
        self._total_count = total_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SubscriberList200ResponseResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SubscriberList_200_response_result of this SubscriberList200ResponseResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def subscribers(self):
        """Gets the subscribers of this SubscriberList200ResponseResult.


        :return: The subscribers of this SubscriberList200ResponseResult.
        :rtype: List[Subscriber]
        """
        return self._subscribers

    @subscribers.setter
    def subscribers(self, subscribers):
        """Sets the subscribers of this SubscriberList200ResponseResult.


        :param subscribers: The subscribers of this SubscriberList200ResponseResult.
        :type subscribers: List[Subscriber]
        """

        self._subscribers = subscribers

    @property
    def total_count(self):
        """Gets the total_count of this SubscriberList200ResponseResult.


        :return: The total_count of this SubscriberList200ResponseResult.
        :rtype: int
        """
        return self._total_count

    @total_count.setter
    def total_count(self, total_count):
        """Sets the total_count of this SubscriberList200ResponseResult.


        :param total_count: The total_count of this SubscriberList200ResponseResult.
        :type total_count: int
        """

        self._total_count = total_count
