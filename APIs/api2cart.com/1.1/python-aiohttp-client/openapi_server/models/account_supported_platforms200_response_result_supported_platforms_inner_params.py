# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.account_supported_platforms200_response_result_supported_platforms_inner_params_additional_inner import AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParamsAdditionalInner
from openapi_server import util


class AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParams(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional: List[AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParamsAdditionalInner]=None, required: List[List[AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParamsAdditionalInner]]=None):
        """AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParams - a model defined in OpenAPI

        :param additional: The additional of this AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParams.
        :param required: The required of this AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParams.
        """
        self.openapi_types = {
            'additional': List[AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParamsAdditionalInner],
            'required': List[List[AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParamsAdditionalInner]]
        }

        self.attribute_map = {
            'additional': 'additional',
            'required': 'required'
        }

        self._additional = additional
        self._required = required

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParams':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccountSupportedPlatforms_200_response_result_supported_platforms_inner_params of this AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParams.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional(self):
        """Gets the additional of this AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParams.


        :return: The additional of this AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParams.
        :rtype: List[AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParamsAdditionalInner]
        """
        return self._additional

    @additional.setter
    def additional(self, additional):
        """Sets the additional of this AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParams.


        :param additional: The additional of this AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParams.
        :type additional: List[AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParamsAdditionalInner]
        """

        self._additional = additional

    @property
    def required(self):
        """Gets the required of this AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParams.


        :return: The required of this AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParams.
        :rtype: List[List[AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParamsAdditionalInner]]
        """
        return self._required

    @required.setter
    def required(self, required):
        """Sets the required of this AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParams.


        :param required: The required of this AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParams.
        :type required: List[List[AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParamsAdditionalInner]]
        """

        self._required = required
