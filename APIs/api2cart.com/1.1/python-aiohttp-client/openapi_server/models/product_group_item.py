# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProductGroupItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_fields: object=None, child_item_id: str=None, custom_fields: object=None, default_qty_in_pack: str=None, is_qty_in_pack_fixed: bool=None, product_id: str=None):
        """ProductGroupItem - a model defined in OpenAPI

        :param additional_fields: The additional_fields of this ProductGroupItem.
        :param child_item_id: The child_item_id of this ProductGroupItem.
        :param custom_fields: The custom_fields of this ProductGroupItem.
        :param default_qty_in_pack: The default_qty_in_pack of this ProductGroupItem.
        :param is_qty_in_pack_fixed: The is_qty_in_pack_fixed of this ProductGroupItem.
        :param product_id: The product_id of this ProductGroupItem.
        """
        self.openapi_types = {
            'additional_fields': object,
            'child_item_id': str,
            'custom_fields': object,
            'default_qty_in_pack': str,
            'is_qty_in_pack_fixed': bool,
            'product_id': str
        }

        self.attribute_map = {
            'additional_fields': 'additional_fields',
            'child_item_id': 'child_item_id',
            'custom_fields': 'custom_fields',
            'default_qty_in_pack': 'default_qty_in_pack',
            'is_qty_in_pack_fixed': 'is_qty_in_pack_fixed',
            'product_id': 'product_id'
        }

        self._additional_fields = additional_fields
        self._child_item_id = child_item_id
        self._custom_fields = custom_fields
        self._default_qty_in_pack = default_qty_in_pack
        self._is_qty_in_pack_fixed = is_qty_in_pack_fixed
        self._product_id = product_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProductGroupItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Product_GroupItem of this ProductGroupItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_fields(self):
        """Gets the additional_fields of this ProductGroupItem.


        :return: The additional_fields of this ProductGroupItem.
        :rtype: object
        """
        return self._additional_fields

    @additional_fields.setter
    def additional_fields(self, additional_fields):
        """Sets the additional_fields of this ProductGroupItem.


        :param additional_fields: The additional_fields of this ProductGroupItem.
        :type additional_fields: object
        """

        self._additional_fields = additional_fields

    @property
    def child_item_id(self):
        """Gets the child_item_id of this ProductGroupItem.


        :return: The child_item_id of this ProductGroupItem.
        :rtype: str
        """
        return self._child_item_id

    @child_item_id.setter
    def child_item_id(self, child_item_id):
        """Sets the child_item_id of this ProductGroupItem.


        :param child_item_id: The child_item_id of this ProductGroupItem.
        :type child_item_id: str
        """

        self._child_item_id = child_item_id

    @property
    def custom_fields(self):
        """Gets the custom_fields of this ProductGroupItem.


        :return: The custom_fields of this ProductGroupItem.
        :rtype: object
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this ProductGroupItem.


        :param custom_fields: The custom_fields of this ProductGroupItem.
        :type custom_fields: object
        """

        self._custom_fields = custom_fields

    @property
    def default_qty_in_pack(self):
        """Gets the default_qty_in_pack of this ProductGroupItem.


        :return: The default_qty_in_pack of this ProductGroupItem.
        :rtype: str
        """
        return self._default_qty_in_pack

    @default_qty_in_pack.setter
    def default_qty_in_pack(self, default_qty_in_pack):
        """Sets the default_qty_in_pack of this ProductGroupItem.


        :param default_qty_in_pack: The default_qty_in_pack of this ProductGroupItem.
        :type default_qty_in_pack: str
        """

        self._default_qty_in_pack = default_qty_in_pack

    @property
    def is_qty_in_pack_fixed(self):
        """Gets the is_qty_in_pack_fixed of this ProductGroupItem.


        :return: The is_qty_in_pack_fixed of this ProductGroupItem.
        :rtype: bool
        """
        return self._is_qty_in_pack_fixed

    @is_qty_in_pack_fixed.setter
    def is_qty_in_pack_fixed(self, is_qty_in_pack_fixed):
        """Sets the is_qty_in_pack_fixed of this ProductGroupItem.


        :param is_qty_in_pack_fixed: The is_qty_in_pack_fixed of this ProductGroupItem.
        :type is_qty_in_pack_fixed: bool
        """

        self._is_qty_in_pack_fixed = is_qty_in_pack_fixed

    @property
    def product_id(self):
        """Gets the product_id of this ProductGroupItem.


        :return: The product_id of this ProductGroupItem.
        :rtype: str
        """
        return self._product_id

    @product_id.setter
    def product_id(self, product_id):
        """Sets the product_id of this ProductGroupItem.


        :param product_id: The product_id of this ProductGroupItem.
        :type product_id: str
        """

        self._product_id = product_id
