# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OrderShipmentTrackingAdd(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, carrier_id: str=None, order_id: str=None, send_notifications: bool=False, shipment_id: str=None, store_id: str=None, tracking_link: str=None, tracking_number: str=None, tracking_provider: str=None):
        """OrderShipmentTrackingAdd - a model defined in OpenAPI

        :param carrier_id: The carrier_id of this OrderShipmentTrackingAdd.
        :param order_id: The order_id of this OrderShipmentTrackingAdd.
        :param send_notifications: The send_notifications of this OrderShipmentTrackingAdd.
        :param shipment_id: The shipment_id of this OrderShipmentTrackingAdd.
        :param store_id: The store_id of this OrderShipmentTrackingAdd.
        :param tracking_link: The tracking_link of this OrderShipmentTrackingAdd.
        :param tracking_number: The tracking_number of this OrderShipmentTrackingAdd.
        :param tracking_provider: The tracking_provider of this OrderShipmentTrackingAdd.
        """
        self.openapi_types = {
            'carrier_id': str,
            'order_id': str,
            'send_notifications': bool,
            'shipment_id': str,
            'store_id': str,
            'tracking_link': str,
            'tracking_number': str,
            'tracking_provider': str
        }

        self.attribute_map = {
            'carrier_id': 'carrier_id',
            'order_id': 'order_id',
            'send_notifications': 'send_notifications',
            'shipment_id': 'shipment_id',
            'store_id': 'store_id',
            'tracking_link': 'tracking_link',
            'tracking_number': 'tracking_number',
            'tracking_provider': 'tracking_provider'
        }

        self._carrier_id = carrier_id
        self._order_id = order_id
        self._send_notifications = send_notifications
        self._shipment_id = shipment_id
        self._store_id = store_id
        self._tracking_link = tracking_link
        self._tracking_number = tracking_number
        self._tracking_provider = tracking_provider

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderShipmentTrackingAdd':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrderShipmentTrackingAdd of this OrderShipmentTrackingAdd.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def carrier_id(self):
        """Gets the carrier_id of this OrderShipmentTrackingAdd.

        Defines tracking carrier id

        :return: The carrier_id of this OrderShipmentTrackingAdd.
        :rtype: str
        """
        return self._carrier_id

    @carrier_id.setter
    def carrier_id(self, carrier_id):
        """Sets the carrier_id of this OrderShipmentTrackingAdd.

        Defines tracking carrier id

        :param carrier_id: The carrier_id of this OrderShipmentTrackingAdd.
        :type carrier_id: str
        """

        self._carrier_id = carrier_id

    @property
    def order_id(self):
        """Gets the order_id of this OrderShipmentTrackingAdd.

        Defines the order id

        :return: The order_id of this OrderShipmentTrackingAdd.
        :rtype: str
        """
        return self._order_id

    @order_id.setter
    def order_id(self, order_id):
        """Sets the order_id of this OrderShipmentTrackingAdd.

        Defines the order id

        :param order_id: The order_id of this OrderShipmentTrackingAdd.
        :type order_id: str
        """

        self._order_id = order_id

    @property
    def send_notifications(self):
        """Gets the send_notifications of this OrderShipmentTrackingAdd.

        Send notifications to customer after tracking was created

        :return: The send_notifications of this OrderShipmentTrackingAdd.
        :rtype: bool
        """
        return self._send_notifications

    @send_notifications.setter
    def send_notifications(self, send_notifications):
        """Sets the send_notifications of this OrderShipmentTrackingAdd.

        Send notifications to customer after tracking was created

        :param send_notifications: The send_notifications of this OrderShipmentTrackingAdd.
        :type send_notifications: bool
        """

        self._send_notifications = send_notifications

    @property
    def shipment_id(self):
        """Gets the shipment_id of this OrderShipmentTrackingAdd.

        Shipment id indicates the number of delivery

        :return: The shipment_id of this OrderShipmentTrackingAdd.
        :rtype: str
        """
        return self._shipment_id

    @shipment_id.setter
    def shipment_id(self, shipment_id):
        """Sets the shipment_id of this OrderShipmentTrackingAdd.

        Shipment id indicates the number of delivery

        :param shipment_id: The shipment_id of this OrderShipmentTrackingAdd.
        :type shipment_id: str
        """
        if shipment_id is None:
            raise ValueError("Invalid value for `shipment_id`, must not be `None`")

        self._shipment_id = shipment_id

    @property
    def store_id(self):
        """Gets the store_id of this OrderShipmentTrackingAdd.

        Store Id

        :return: The store_id of this OrderShipmentTrackingAdd.
        :rtype: str
        """
        return self._store_id

    @store_id.setter
    def store_id(self, store_id):
        """Sets the store_id of this OrderShipmentTrackingAdd.

        Store Id

        :param store_id: The store_id of this OrderShipmentTrackingAdd.
        :type store_id: str
        """

        self._store_id = store_id

    @property
    def tracking_link(self):
        """Gets the tracking_link of this OrderShipmentTrackingAdd.

        Defines custom tracking link

        :return: The tracking_link of this OrderShipmentTrackingAdd.
        :rtype: str
        """
        return self._tracking_link

    @tracking_link.setter
    def tracking_link(self, tracking_link):
        """Sets the tracking_link of this OrderShipmentTrackingAdd.

        Defines custom tracking link

        :param tracking_link: The tracking_link of this OrderShipmentTrackingAdd.
        :type tracking_link: str
        """

        self._tracking_link = tracking_link

    @property
    def tracking_number(self):
        """Gets the tracking_number of this OrderShipmentTrackingAdd.

        Defines tracking number

        :return: The tracking_number of this OrderShipmentTrackingAdd.
        :rtype: str
        """
        return self._tracking_number

    @tracking_number.setter
    def tracking_number(self, tracking_number):
        """Sets the tracking_number of this OrderShipmentTrackingAdd.

        Defines tracking number

        :param tracking_number: The tracking_number of this OrderShipmentTrackingAdd.
        :type tracking_number: str
        """
        if tracking_number is None:
            raise ValueError("Invalid value for `tracking_number`, must not be `None`")

        self._tracking_number = tracking_number

    @property
    def tracking_provider(self):
        """Gets the tracking_provider of this OrderShipmentTrackingAdd.

        Defines name of the company which provides shipment tracking

        :return: The tracking_provider of this OrderShipmentTrackingAdd.
        :rtype: str
        """
        return self._tracking_provider

    @tracking_provider.setter
    def tracking_provider(self, tracking_provider):
        """Sets the tracking_provider of this OrderShipmentTrackingAdd.

        Defines name of the company which provides shipment tracking

        :param tracking_provider: The tracking_provider of this OrderShipmentTrackingAdd.
        :type tracking_provider: str
        """

        self._tracking_provider = tracking_provider
