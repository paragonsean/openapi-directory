# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OrderItemOption(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_fields: object=None, custom_fields: object=None, name: str=None, option_id: str=None, price: float=None, product_option_value_id: str=None, type: str=None, value: str=None, weight: float=None):
        """OrderItemOption - a model defined in OpenAPI

        :param additional_fields: The additional_fields of this OrderItemOption.
        :param custom_fields: The custom_fields of this OrderItemOption.
        :param name: The name of this OrderItemOption.
        :param option_id: The option_id of this OrderItemOption.
        :param price: The price of this OrderItemOption.
        :param product_option_value_id: The product_option_value_id of this OrderItemOption.
        :param type: The type of this OrderItemOption.
        :param value: The value of this OrderItemOption.
        :param weight: The weight of this OrderItemOption.
        """
        self.openapi_types = {
            'additional_fields': object,
            'custom_fields': object,
            'name': str,
            'option_id': str,
            'price': float,
            'product_option_value_id': str,
            'type': str,
            'value': str,
            'weight': float
        }

        self.attribute_map = {
            'additional_fields': 'additional_fields',
            'custom_fields': 'custom_fields',
            'name': 'name',
            'option_id': 'option_id',
            'price': 'price',
            'product_option_value_id': 'product_option_value_id',
            'type': 'type',
            'value': 'value',
            'weight': 'weight'
        }

        self._additional_fields = additional_fields
        self._custom_fields = custom_fields
        self._name = name
        self._option_id = option_id
        self._price = price
        self._product_option_value_id = product_option_value_id
        self._type = type
        self._value = value
        self._weight = weight

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderItemOption':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Order_Item_Option of this OrderItemOption.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_fields(self):
        """Gets the additional_fields of this OrderItemOption.


        :return: The additional_fields of this OrderItemOption.
        :rtype: object
        """
        return self._additional_fields

    @additional_fields.setter
    def additional_fields(self, additional_fields):
        """Sets the additional_fields of this OrderItemOption.


        :param additional_fields: The additional_fields of this OrderItemOption.
        :type additional_fields: object
        """

        self._additional_fields = additional_fields

    @property
    def custom_fields(self):
        """Gets the custom_fields of this OrderItemOption.


        :return: The custom_fields of this OrderItemOption.
        :rtype: object
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this OrderItemOption.


        :param custom_fields: The custom_fields of this OrderItemOption.
        :type custom_fields: object
        """

        self._custom_fields = custom_fields

    @property
    def name(self):
        """Gets the name of this OrderItemOption.


        :return: The name of this OrderItemOption.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this OrderItemOption.


        :param name: The name of this OrderItemOption.
        :type name: str
        """

        self._name = name

    @property
    def option_id(self):
        """Gets the option_id of this OrderItemOption.


        :return: The option_id of this OrderItemOption.
        :rtype: str
        """
        return self._option_id

    @option_id.setter
    def option_id(self, option_id):
        """Sets the option_id of this OrderItemOption.


        :param option_id: The option_id of this OrderItemOption.
        :type option_id: str
        """

        self._option_id = option_id

    @property
    def price(self):
        """Gets the price of this OrderItemOption.


        :return: The price of this OrderItemOption.
        :rtype: float
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this OrderItemOption.


        :param price: The price of this OrderItemOption.
        :type price: float
        """

        self._price = price

    @property
    def product_option_value_id(self):
        """Gets the product_option_value_id of this OrderItemOption.


        :return: The product_option_value_id of this OrderItemOption.
        :rtype: str
        """
        return self._product_option_value_id

    @product_option_value_id.setter
    def product_option_value_id(self, product_option_value_id):
        """Sets the product_option_value_id of this OrderItemOption.


        :param product_option_value_id: The product_option_value_id of this OrderItemOption.
        :type product_option_value_id: str
        """

        self._product_option_value_id = product_option_value_id

    @property
    def type(self):
        """Gets the type of this OrderItemOption.


        :return: The type of this OrderItemOption.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this OrderItemOption.


        :param type: The type of this OrderItemOption.
        :type type: str
        """

        self._type = type

    @property
    def value(self):
        """Gets the value of this OrderItemOption.


        :return: The value of this OrderItemOption.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this OrderItemOption.


        :param value: The value of this OrderItemOption.
        :type value: str
        """

        self._value = value

    @property
    def weight(self):
        """Gets the weight of this OrderItemOption.


        :return: The weight of this OrderItemOption.
        :rtype: float
        """
        return self._weight

    @weight.setter
    def weight(self, weight):
        """Sets the weight of this OrderItemOption.


        :param weight: The weight of this OrderItemOption.
        :type weight: float
        """

        self._weight = weight
