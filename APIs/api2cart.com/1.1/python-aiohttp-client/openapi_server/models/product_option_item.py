# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProductOptionItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_fields: object=None, custom_fields: object=None, id: str=None, name: str=None, price: str=None, product_option_item_id: str=None, quantity: int=None, sku: str=None, sort_order: int=None, type_price: str=None, weight: str=None):
        """ProductOptionItem - a model defined in OpenAPI

        :param additional_fields: The additional_fields of this ProductOptionItem.
        :param custom_fields: The custom_fields of this ProductOptionItem.
        :param id: The id of this ProductOptionItem.
        :param name: The name of this ProductOptionItem.
        :param price: The price of this ProductOptionItem.
        :param product_option_item_id: The product_option_item_id of this ProductOptionItem.
        :param quantity: The quantity of this ProductOptionItem.
        :param sku: The sku of this ProductOptionItem.
        :param sort_order: The sort_order of this ProductOptionItem.
        :param type_price: The type_price of this ProductOptionItem.
        :param weight: The weight of this ProductOptionItem.
        """
        self.openapi_types = {
            'additional_fields': object,
            'custom_fields': object,
            'id': str,
            'name': str,
            'price': str,
            'product_option_item_id': str,
            'quantity': int,
            'sku': str,
            'sort_order': int,
            'type_price': str,
            'weight': str
        }

        self.attribute_map = {
            'additional_fields': 'additional_fields',
            'custom_fields': 'custom_fields',
            'id': 'id',
            'name': 'name',
            'price': 'price',
            'product_option_item_id': 'product_option_item_id',
            'quantity': 'quantity',
            'sku': 'sku',
            'sort_order': 'sort_order',
            'type_price': 'type_price',
            'weight': 'weight'
        }

        self._additional_fields = additional_fields
        self._custom_fields = custom_fields
        self._id = id
        self._name = name
        self._price = price
        self._product_option_item_id = product_option_item_id
        self._quantity = quantity
        self._sku = sku
        self._sort_order = sort_order
        self._type_price = type_price
        self._weight = weight

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProductOptionItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Product_Option_Item of this ProductOptionItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_fields(self):
        """Gets the additional_fields of this ProductOptionItem.


        :return: The additional_fields of this ProductOptionItem.
        :rtype: object
        """
        return self._additional_fields

    @additional_fields.setter
    def additional_fields(self, additional_fields):
        """Sets the additional_fields of this ProductOptionItem.


        :param additional_fields: The additional_fields of this ProductOptionItem.
        :type additional_fields: object
        """

        self._additional_fields = additional_fields

    @property
    def custom_fields(self):
        """Gets the custom_fields of this ProductOptionItem.


        :return: The custom_fields of this ProductOptionItem.
        :rtype: object
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this ProductOptionItem.


        :param custom_fields: The custom_fields of this ProductOptionItem.
        :type custom_fields: object
        """

        self._custom_fields = custom_fields

    @property
    def id(self):
        """Gets the id of this ProductOptionItem.


        :return: The id of this ProductOptionItem.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ProductOptionItem.


        :param id: The id of this ProductOptionItem.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this ProductOptionItem.


        :return: The name of this ProductOptionItem.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ProductOptionItem.


        :param name: The name of this ProductOptionItem.
        :type name: str
        """

        self._name = name

    @property
    def price(self):
        """Gets the price of this ProductOptionItem.


        :return: The price of this ProductOptionItem.
        :rtype: str
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this ProductOptionItem.


        :param price: The price of this ProductOptionItem.
        :type price: str
        """

        self._price = price

    @property
    def product_option_item_id(self):
        """Gets the product_option_item_id of this ProductOptionItem.


        :return: The product_option_item_id of this ProductOptionItem.
        :rtype: str
        """
        return self._product_option_item_id

    @product_option_item_id.setter
    def product_option_item_id(self, product_option_item_id):
        """Sets the product_option_item_id of this ProductOptionItem.


        :param product_option_item_id: The product_option_item_id of this ProductOptionItem.
        :type product_option_item_id: str
        """

        self._product_option_item_id = product_option_item_id

    @property
    def quantity(self):
        """Gets the quantity of this ProductOptionItem.


        :return: The quantity of this ProductOptionItem.
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this ProductOptionItem.


        :param quantity: The quantity of this ProductOptionItem.
        :type quantity: int
        """

        self._quantity = quantity

    @property
    def sku(self):
        """Gets the sku of this ProductOptionItem.


        :return: The sku of this ProductOptionItem.
        :rtype: str
        """
        return self._sku

    @sku.setter
    def sku(self, sku):
        """Sets the sku of this ProductOptionItem.


        :param sku: The sku of this ProductOptionItem.
        :type sku: str
        """

        self._sku = sku

    @property
    def sort_order(self):
        """Gets the sort_order of this ProductOptionItem.


        :return: The sort_order of this ProductOptionItem.
        :rtype: int
        """
        return self._sort_order

    @sort_order.setter
    def sort_order(self, sort_order):
        """Sets the sort_order of this ProductOptionItem.


        :param sort_order: The sort_order of this ProductOptionItem.
        :type sort_order: int
        """

        self._sort_order = sort_order

    @property
    def type_price(self):
        """Gets the type_price of this ProductOptionItem.


        :return: The type_price of this ProductOptionItem.
        :rtype: str
        """
        return self._type_price

    @type_price.setter
    def type_price(self, type_price):
        """Sets the type_price of this ProductOptionItem.


        :param type_price: The type_price of this ProductOptionItem.
        :type type_price: str
        """

        self._type_price = type_price

    @property
    def weight(self):
        """Gets the weight of this ProductOptionItem.


        :return: The weight of this ProductOptionItem.
        :rtype: str
        """
        return self._weight

    @weight.setter
    def weight(self, weight):
        """Sets the weight of this ProductOptionItem.


        :param weight: The weight of this ProductOptionItem.
        :type weight: str
        """

        self._weight = weight
