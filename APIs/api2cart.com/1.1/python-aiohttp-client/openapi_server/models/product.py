# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.a2_c_date_time import A2CDateTime
from openapi_server.models.discount import Discount
from openapi_server.models.image import Image
from openapi_server.models.product_advanced_price import ProductAdvancedPrice
from openapi_server.models.product_group_item import ProductGroupItem
from openapi_server.models.product_group_price import ProductGroupPrice
from openapi_server.models.product_inventory import ProductInventory
from openapi_server.models.product_option import ProductOption
from openapi_server.models.product_tier_price import ProductTierPrice
from openapi_server.models.special_price import SpecialPrice
from openapi_server import util


class Product(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_fields: object=None, advanced_price: List[ProductAdvancedPrice]=None, avail_sale: bool=None, avail_view: bool=None, backorders: str=None, categories_ids: List[str]=None, cost_price: float=None, create_at: A2CDateTime=None, custom_fields: object=None, description: str=None, dimensions_unit: str=None, discounts: List[Discount]=None, group_items: List[ProductGroupItem]=None, group_price: List[ProductGroupPrice]=None, height: float=None, id: str=None, images: List[Image]=None, in_stock: bool=None, inventory: List[ProductInventory]=None, is_downloadable: bool=None, is_stock_managed: bool=None, is_virtual: bool=None, length: float=None, manage_stock: str=None, meta_description: str=None, meta_keywords: str=None, meta_title: str=None, modified_at: A2CDateTime=None, name: str=None, price: float=None, product_options: List[ProductOption]=None, quantity: float=None, related_products_ids: List[str]=None, seo_url: str=None, short_description: str=None, sort_order: int=None, special_price: SpecialPrice=None, stores_ids: List[str]=None, tax_class_id: str=None, tier_price: List[ProductTierPrice]=None, type: str=None, u_brand: str=None, u_brand_id: str=None, u_model: str=None, u_mpn: str=None, u_sku: str=None, u_upc: str=None, url: str=None, weight: float=None, weight_unit: str=None, width: float=None):
        """Product - a model defined in OpenAPI

        :param additional_fields: The additional_fields of this Product.
        :param advanced_price: The advanced_price of this Product.
        :param avail_sale: The avail_sale of this Product.
        :param avail_view: The avail_view of this Product.
        :param backorders: The backorders of this Product.
        :param categories_ids: The categories_ids of this Product.
        :param cost_price: The cost_price of this Product.
        :param create_at: The create_at of this Product.
        :param custom_fields: The custom_fields of this Product.
        :param description: The description of this Product.
        :param dimensions_unit: The dimensions_unit of this Product.
        :param discounts: The discounts of this Product.
        :param group_items: The group_items of this Product.
        :param group_price: The group_price of this Product.
        :param height: The height of this Product.
        :param id: The id of this Product.
        :param images: The images of this Product.
        :param in_stock: The in_stock of this Product.
        :param inventory: The inventory of this Product.
        :param is_downloadable: The is_downloadable of this Product.
        :param is_stock_managed: The is_stock_managed of this Product.
        :param is_virtual: The is_virtual of this Product.
        :param length: The length of this Product.
        :param manage_stock: The manage_stock of this Product.
        :param meta_description: The meta_description of this Product.
        :param meta_keywords: The meta_keywords of this Product.
        :param meta_title: The meta_title of this Product.
        :param modified_at: The modified_at of this Product.
        :param name: The name of this Product.
        :param price: The price of this Product.
        :param product_options: The product_options of this Product.
        :param quantity: The quantity of this Product.
        :param related_products_ids: The related_products_ids of this Product.
        :param seo_url: The seo_url of this Product.
        :param short_description: The short_description of this Product.
        :param sort_order: The sort_order of this Product.
        :param special_price: The special_price of this Product.
        :param stores_ids: The stores_ids of this Product.
        :param tax_class_id: The tax_class_id of this Product.
        :param tier_price: The tier_price of this Product.
        :param type: The type of this Product.
        :param u_brand: The u_brand of this Product.
        :param u_brand_id: The u_brand_id of this Product.
        :param u_model: The u_model of this Product.
        :param u_mpn: The u_mpn of this Product.
        :param u_sku: The u_sku of this Product.
        :param u_upc: The u_upc of this Product.
        :param url: The url of this Product.
        :param weight: The weight of this Product.
        :param weight_unit: The weight_unit of this Product.
        :param width: The width of this Product.
        """
        self.openapi_types = {
            'additional_fields': object,
            'advanced_price': List[ProductAdvancedPrice],
            'avail_sale': bool,
            'avail_view': bool,
            'backorders': str,
            'categories_ids': List[str],
            'cost_price': float,
            'create_at': A2CDateTime,
            'custom_fields': object,
            'description': str,
            'dimensions_unit': str,
            'discounts': List[Discount],
            'group_items': List[ProductGroupItem],
            'group_price': List[ProductGroupPrice],
            'height': float,
            'id': str,
            'images': List[Image],
            'in_stock': bool,
            'inventory': List[ProductInventory],
            'is_downloadable': bool,
            'is_stock_managed': bool,
            'is_virtual': bool,
            'length': float,
            'manage_stock': str,
            'meta_description': str,
            'meta_keywords': str,
            'meta_title': str,
            'modified_at': A2CDateTime,
            'name': str,
            'price': float,
            'product_options': List[ProductOption],
            'quantity': float,
            'related_products_ids': List[str],
            'seo_url': str,
            'short_description': str,
            'sort_order': int,
            'special_price': SpecialPrice,
            'stores_ids': List[str],
            'tax_class_id': str,
            'tier_price': List[ProductTierPrice],
            'type': str,
            'u_brand': str,
            'u_brand_id': str,
            'u_model': str,
            'u_mpn': str,
            'u_sku': str,
            'u_upc': str,
            'url': str,
            'weight': float,
            'weight_unit': str,
            'width': float
        }

        self.attribute_map = {
            'additional_fields': 'additional_fields',
            'advanced_price': 'advanced_price',
            'avail_sale': 'avail_sale',
            'avail_view': 'avail_view',
            'backorders': 'backorders',
            'categories_ids': 'categories_ids',
            'cost_price': 'cost_price',
            'create_at': 'create_at',
            'custom_fields': 'custom_fields',
            'description': 'description',
            'dimensions_unit': 'dimensions_unit',
            'discounts': 'discounts',
            'group_items': 'group_items',
            'group_price': 'group_price',
            'height': 'height',
            'id': 'id',
            'images': 'images',
            'in_stock': 'in_stock',
            'inventory': 'inventory',
            'is_downloadable': 'is_downloadable',
            'is_stock_managed': 'is_stock_managed',
            'is_virtual': 'is_virtual',
            'length': 'length',
            'manage_stock': 'manage_stock',
            'meta_description': 'meta_description',
            'meta_keywords': 'meta_keywords',
            'meta_title': 'meta_title',
            'modified_at': 'modified_at',
            'name': 'name',
            'price': 'price',
            'product_options': 'product_options',
            'quantity': 'quantity',
            'related_products_ids': 'related_products_ids',
            'seo_url': 'seo_url',
            'short_description': 'short_description',
            'sort_order': 'sort_order',
            'special_price': 'special_price',
            'stores_ids': 'stores_ids',
            'tax_class_id': 'tax_class_id',
            'tier_price': 'tier_price',
            'type': 'type',
            'u_brand': 'u_brand',
            'u_brand_id': 'u_brand_id',
            'u_model': 'u_model',
            'u_mpn': 'u_mpn',
            'u_sku': 'u_sku',
            'u_upc': 'u_upc',
            'url': 'url',
            'weight': 'weight',
            'weight_unit': 'weight_unit',
            'width': 'width'
        }

        self._additional_fields = additional_fields
        self._advanced_price = advanced_price
        self._avail_sale = avail_sale
        self._avail_view = avail_view
        self._backorders = backorders
        self._categories_ids = categories_ids
        self._cost_price = cost_price
        self._create_at = create_at
        self._custom_fields = custom_fields
        self._description = description
        self._dimensions_unit = dimensions_unit
        self._discounts = discounts
        self._group_items = group_items
        self._group_price = group_price
        self._height = height
        self._id = id
        self._images = images
        self._in_stock = in_stock
        self._inventory = inventory
        self._is_downloadable = is_downloadable
        self._is_stock_managed = is_stock_managed
        self._is_virtual = is_virtual
        self._length = length
        self._manage_stock = manage_stock
        self._meta_description = meta_description
        self._meta_keywords = meta_keywords
        self._meta_title = meta_title
        self._modified_at = modified_at
        self._name = name
        self._price = price
        self._product_options = product_options
        self._quantity = quantity
        self._related_products_ids = related_products_ids
        self._seo_url = seo_url
        self._short_description = short_description
        self._sort_order = sort_order
        self._special_price = special_price
        self._stores_ids = stores_ids
        self._tax_class_id = tax_class_id
        self._tier_price = tier_price
        self._type = type
        self._u_brand = u_brand
        self._u_brand_id = u_brand_id
        self._u_model = u_model
        self._u_mpn = u_mpn
        self._u_sku = u_sku
        self._u_upc = u_upc
        self._url = url
        self._weight = weight
        self._weight_unit = weight_unit
        self._width = width

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Product':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Product of this Product.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_fields(self):
        """Gets the additional_fields of this Product.


        :return: The additional_fields of this Product.
        :rtype: object
        """
        return self._additional_fields

    @additional_fields.setter
    def additional_fields(self, additional_fields):
        """Sets the additional_fields of this Product.


        :param additional_fields: The additional_fields of this Product.
        :type additional_fields: object
        """

        self._additional_fields = additional_fields

    @property
    def advanced_price(self):
        """Gets the advanced_price of this Product.


        :return: The advanced_price of this Product.
        :rtype: List[ProductAdvancedPrice]
        """
        return self._advanced_price

    @advanced_price.setter
    def advanced_price(self, advanced_price):
        """Sets the advanced_price of this Product.


        :param advanced_price: The advanced_price of this Product.
        :type advanced_price: List[ProductAdvancedPrice]
        """

        self._advanced_price = advanced_price

    @property
    def avail_sale(self):
        """Gets the avail_sale of this Product.


        :return: The avail_sale of this Product.
        :rtype: bool
        """
        return self._avail_sale

    @avail_sale.setter
    def avail_sale(self, avail_sale):
        """Sets the avail_sale of this Product.


        :param avail_sale: The avail_sale of this Product.
        :type avail_sale: bool
        """

        self._avail_sale = avail_sale

    @property
    def avail_view(self):
        """Gets the avail_view of this Product.


        :return: The avail_view of this Product.
        :rtype: bool
        """
        return self._avail_view

    @avail_view.setter
    def avail_view(self, avail_view):
        """Sets the avail_view of this Product.


        :param avail_view: The avail_view of this Product.
        :type avail_view: bool
        """

        self._avail_view = avail_view

    @property
    def backorders(self):
        """Gets the backorders of this Product.


        :return: The backorders of this Product.
        :rtype: str
        """
        return self._backorders

    @backorders.setter
    def backorders(self, backorders):
        """Sets the backorders of this Product.


        :param backorders: The backorders of this Product.
        :type backorders: str
        """

        self._backorders = backorders

    @property
    def categories_ids(self):
        """Gets the categories_ids of this Product.


        :return: The categories_ids of this Product.
        :rtype: List[str]
        """
        return self._categories_ids

    @categories_ids.setter
    def categories_ids(self, categories_ids):
        """Sets the categories_ids of this Product.


        :param categories_ids: The categories_ids of this Product.
        :type categories_ids: List[str]
        """

        self._categories_ids = categories_ids

    @property
    def cost_price(self):
        """Gets the cost_price of this Product.


        :return: The cost_price of this Product.
        :rtype: float
        """
        return self._cost_price

    @cost_price.setter
    def cost_price(self, cost_price):
        """Sets the cost_price of this Product.


        :param cost_price: The cost_price of this Product.
        :type cost_price: float
        """

        self._cost_price = cost_price

    @property
    def create_at(self):
        """Gets the create_at of this Product.


        :return: The create_at of this Product.
        :rtype: A2CDateTime
        """
        return self._create_at

    @create_at.setter
    def create_at(self, create_at):
        """Sets the create_at of this Product.


        :param create_at: The create_at of this Product.
        :type create_at: A2CDateTime
        """

        self._create_at = create_at

    @property
    def custom_fields(self):
        """Gets the custom_fields of this Product.


        :return: The custom_fields of this Product.
        :rtype: object
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this Product.


        :param custom_fields: The custom_fields of this Product.
        :type custom_fields: object
        """

        self._custom_fields = custom_fields

    @property
    def description(self):
        """Gets the description of this Product.


        :return: The description of this Product.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Product.


        :param description: The description of this Product.
        :type description: str
        """

        self._description = description

    @property
    def dimensions_unit(self):
        """Gets the dimensions_unit of this Product.


        :return: The dimensions_unit of this Product.
        :rtype: str
        """
        return self._dimensions_unit

    @dimensions_unit.setter
    def dimensions_unit(self, dimensions_unit):
        """Sets the dimensions_unit of this Product.


        :param dimensions_unit: The dimensions_unit of this Product.
        :type dimensions_unit: str
        """

        self._dimensions_unit = dimensions_unit

    @property
    def discounts(self):
        """Gets the discounts of this Product.


        :return: The discounts of this Product.
        :rtype: List[Discount]
        """
        return self._discounts

    @discounts.setter
    def discounts(self, discounts):
        """Sets the discounts of this Product.


        :param discounts: The discounts of this Product.
        :type discounts: List[Discount]
        """

        self._discounts = discounts

    @property
    def group_items(self):
        """Gets the group_items of this Product.


        :return: The group_items of this Product.
        :rtype: List[ProductGroupItem]
        """
        return self._group_items

    @group_items.setter
    def group_items(self, group_items):
        """Sets the group_items of this Product.


        :param group_items: The group_items of this Product.
        :type group_items: List[ProductGroupItem]
        """

        self._group_items = group_items

    @property
    def group_price(self):
        """Gets the group_price of this Product.


        :return: The group_price of this Product.
        :rtype: List[ProductGroupPrice]
        """
        return self._group_price

    @group_price.setter
    def group_price(self, group_price):
        """Sets the group_price of this Product.


        :param group_price: The group_price of this Product.
        :type group_price: List[ProductGroupPrice]
        """

        self._group_price = group_price

    @property
    def height(self):
        """Gets the height of this Product.


        :return: The height of this Product.
        :rtype: float
        """
        return self._height

    @height.setter
    def height(self, height):
        """Sets the height of this Product.


        :param height: The height of this Product.
        :type height: float
        """

        self._height = height

    @property
    def id(self):
        """Gets the id of this Product.


        :return: The id of this Product.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Product.


        :param id: The id of this Product.
        :type id: str
        """

        self._id = id

    @property
    def images(self):
        """Gets the images of this Product.


        :return: The images of this Product.
        :rtype: List[Image]
        """
        return self._images

    @images.setter
    def images(self, images):
        """Sets the images of this Product.


        :param images: The images of this Product.
        :type images: List[Image]
        """

        self._images = images

    @property
    def in_stock(self):
        """Gets the in_stock of this Product.


        :return: The in_stock of this Product.
        :rtype: bool
        """
        return self._in_stock

    @in_stock.setter
    def in_stock(self, in_stock):
        """Sets the in_stock of this Product.


        :param in_stock: The in_stock of this Product.
        :type in_stock: bool
        """

        self._in_stock = in_stock

    @property
    def inventory(self):
        """Gets the inventory of this Product.


        :return: The inventory of this Product.
        :rtype: List[ProductInventory]
        """
        return self._inventory

    @inventory.setter
    def inventory(self, inventory):
        """Sets the inventory of this Product.


        :param inventory: The inventory of this Product.
        :type inventory: List[ProductInventory]
        """

        self._inventory = inventory

    @property
    def is_downloadable(self):
        """Gets the is_downloadable of this Product.


        :return: The is_downloadable of this Product.
        :rtype: bool
        """
        return self._is_downloadable

    @is_downloadable.setter
    def is_downloadable(self, is_downloadable):
        """Sets the is_downloadable of this Product.


        :param is_downloadable: The is_downloadable of this Product.
        :type is_downloadable: bool
        """

        self._is_downloadable = is_downloadable

    @property
    def is_stock_managed(self):
        """Gets the is_stock_managed of this Product.


        :return: The is_stock_managed of this Product.
        :rtype: bool
        """
        return self._is_stock_managed

    @is_stock_managed.setter
    def is_stock_managed(self, is_stock_managed):
        """Sets the is_stock_managed of this Product.


        :param is_stock_managed: The is_stock_managed of this Product.
        :type is_stock_managed: bool
        """

        self._is_stock_managed = is_stock_managed

    @property
    def is_virtual(self):
        """Gets the is_virtual of this Product.


        :return: The is_virtual of this Product.
        :rtype: bool
        """
        return self._is_virtual

    @is_virtual.setter
    def is_virtual(self, is_virtual):
        """Sets the is_virtual of this Product.


        :param is_virtual: The is_virtual of this Product.
        :type is_virtual: bool
        """

        self._is_virtual = is_virtual

    @property
    def length(self):
        """Gets the length of this Product.


        :return: The length of this Product.
        :rtype: float
        """
        return self._length

    @length.setter
    def length(self, length):
        """Sets the length of this Product.


        :param length: The length of this Product.
        :type length: float
        """

        self._length = length

    @property
    def manage_stock(self):
        """Gets the manage_stock of this Product.


        :return: The manage_stock of this Product.
        :rtype: str
        """
        return self._manage_stock

    @manage_stock.setter
    def manage_stock(self, manage_stock):
        """Sets the manage_stock of this Product.


        :param manage_stock: The manage_stock of this Product.
        :type manage_stock: str
        """

        self._manage_stock = manage_stock

    @property
    def meta_description(self):
        """Gets the meta_description of this Product.


        :return: The meta_description of this Product.
        :rtype: str
        """
        return self._meta_description

    @meta_description.setter
    def meta_description(self, meta_description):
        """Sets the meta_description of this Product.


        :param meta_description: The meta_description of this Product.
        :type meta_description: str
        """

        self._meta_description = meta_description

    @property
    def meta_keywords(self):
        """Gets the meta_keywords of this Product.


        :return: The meta_keywords of this Product.
        :rtype: str
        """
        return self._meta_keywords

    @meta_keywords.setter
    def meta_keywords(self, meta_keywords):
        """Sets the meta_keywords of this Product.


        :param meta_keywords: The meta_keywords of this Product.
        :type meta_keywords: str
        """

        self._meta_keywords = meta_keywords

    @property
    def meta_title(self):
        """Gets the meta_title of this Product.


        :return: The meta_title of this Product.
        :rtype: str
        """
        return self._meta_title

    @meta_title.setter
    def meta_title(self, meta_title):
        """Sets the meta_title of this Product.


        :param meta_title: The meta_title of this Product.
        :type meta_title: str
        """

        self._meta_title = meta_title

    @property
    def modified_at(self):
        """Gets the modified_at of this Product.


        :return: The modified_at of this Product.
        :rtype: A2CDateTime
        """
        return self._modified_at

    @modified_at.setter
    def modified_at(self, modified_at):
        """Sets the modified_at of this Product.


        :param modified_at: The modified_at of this Product.
        :type modified_at: A2CDateTime
        """

        self._modified_at = modified_at

    @property
    def name(self):
        """Gets the name of this Product.


        :return: The name of this Product.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Product.


        :param name: The name of this Product.
        :type name: str
        """

        self._name = name

    @property
    def price(self):
        """Gets the price of this Product.


        :return: The price of this Product.
        :rtype: float
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this Product.


        :param price: The price of this Product.
        :type price: float
        """

        self._price = price

    @property
    def product_options(self):
        """Gets the product_options of this Product.


        :return: The product_options of this Product.
        :rtype: List[ProductOption]
        """
        return self._product_options

    @product_options.setter
    def product_options(self, product_options):
        """Sets the product_options of this Product.


        :param product_options: The product_options of this Product.
        :type product_options: List[ProductOption]
        """

        self._product_options = product_options

    @property
    def quantity(self):
        """Gets the quantity of this Product.


        :return: The quantity of this Product.
        :rtype: float
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this Product.


        :param quantity: The quantity of this Product.
        :type quantity: float
        """

        self._quantity = quantity

    @property
    def related_products_ids(self):
        """Gets the related_products_ids of this Product.


        :return: The related_products_ids of this Product.
        :rtype: List[str]
        """
        return self._related_products_ids

    @related_products_ids.setter
    def related_products_ids(self, related_products_ids):
        """Sets the related_products_ids of this Product.


        :param related_products_ids: The related_products_ids of this Product.
        :type related_products_ids: List[str]
        """

        self._related_products_ids = related_products_ids

    @property
    def seo_url(self):
        """Gets the seo_url of this Product.


        :return: The seo_url of this Product.
        :rtype: str
        """
        return self._seo_url

    @seo_url.setter
    def seo_url(self, seo_url):
        """Sets the seo_url of this Product.


        :param seo_url: The seo_url of this Product.
        :type seo_url: str
        """

        self._seo_url = seo_url

    @property
    def short_description(self):
        """Gets the short_description of this Product.


        :return: The short_description of this Product.
        :rtype: str
        """
        return self._short_description

    @short_description.setter
    def short_description(self, short_description):
        """Sets the short_description of this Product.


        :param short_description: The short_description of this Product.
        :type short_description: str
        """

        self._short_description = short_description

    @property
    def sort_order(self):
        """Gets the sort_order of this Product.


        :return: The sort_order of this Product.
        :rtype: int
        """
        return self._sort_order

    @sort_order.setter
    def sort_order(self, sort_order):
        """Sets the sort_order of this Product.


        :param sort_order: The sort_order of this Product.
        :type sort_order: int
        """

        self._sort_order = sort_order

    @property
    def special_price(self):
        """Gets the special_price of this Product.


        :return: The special_price of this Product.
        :rtype: SpecialPrice
        """
        return self._special_price

    @special_price.setter
    def special_price(self, special_price):
        """Sets the special_price of this Product.


        :param special_price: The special_price of this Product.
        :type special_price: SpecialPrice
        """

        self._special_price = special_price

    @property
    def stores_ids(self):
        """Gets the stores_ids of this Product.


        :return: The stores_ids of this Product.
        :rtype: List[str]
        """
        return self._stores_ids

    @stores_ids.setter
    def stores_ids(self, stores_ids):
        """Sets the stores_ids of this Product.


        :param stores_ids: The stores_ids of this Product.
        :type stores_ids: List[str]
        """

        self._stores_ids = stores_ids

    @property
    def tax_class_id(self):
        """Gets the tax_class_id of this Product.


        :return: The tax_class_id of this Product.
        :rtype: str
        """
        return self._tax_class_id

    @tax_class_id.setter
    def tax_class_id(self, tax_class_id):
        """Sets the tax_class_id of this Product.


        :param tax_class_id: The tax_class_id of this Product.
        :type tax_class_id: str
        """

        self._tax_class_id = tax_class_id

    @property
    def tier_price(self):
        """Gets the tier_price of this Product.


        :return: The tier_price of this Product.
        :rtype: List[ProductTierPrice]
        """
        return self._tier_price

    @tier_price.setter
    def tier_price(self, tier_price):
        """Sets the tier_price of this Product.


        :param tier_price: The tier_price of this Product.
        :type tier_price: List[ProductTierPrice]
        """

        self._tier_price = tier_price

    @property
    def type(self):
        """Gets the type of this Product.


        :return: The type of this Product.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Product.


        :param type: The type of this Product.
        :type type: str
        """

        self._type = type

    @property
    def u_brand(self):
        """Gets the u_brand of this Product.


        :return: The u_brand of this Product.
        :rtype: str
        """
        return self._u_brand

    @u_brand.setter
    def u_brand(self, u_brand):
        """Sets the u_brand of this Product.


        :param u_brand: The u_brand of this Product.
        :type u_brand: str
        """

        self._u_brand = u_brand

    @property
    def u_brand_id(self):
        """Gets the u_brand_id of this Product.


        :return: The u_brand_id of this Product.
        :rtype: str
        """
        return self._u_brand_id

    @u_brand_id.setter
    def u_brand_id(self, u_brand_id):
        """Sets the u_brand_id of this Product.


        :param u_brand_id: The u_brand_id of this Product.
        :type u_brand_id: str
        """

        self._u_brand_id = u_brand_id

    @property
    def u_model(self):
        """Gets the u_model of this Product.


        :return: The u_model of this Product.
        :rtype: str
        """
        return self._u_model

    @u_model.setter
    def u_model(self, u_model):
        """Sets the u_model of this Product.


        :param u_model: The u_model of this Product.
        :type u_model: str
        """

        self._u_model = u_model

    @property
    def u_mpn(self):
        """Gets the u_mpn of this Product.


        :return: The u_mpn of this Product.
        :rtype: str
        """
        return self._u_mpn

    @u_mpn.setter
    def u_mpn(self, u_mpn):
        """Sets the u_mpn of this Product.


        :param u_mpn: The u_mpn of this Product.
        :type u_mpn: str
        """

        self._u_mpn = u_mpn

    @property
    def u_sku(self):
        """Gets the u_sku of this Product.


        :return: The u_sku of this Product.
        :rtype: str
        """
        return self._u_sku

    @u_sku.setter
    def u_sku(self, u_sku):
        """Sets the u_sku of this Product.


        :param u_sku: The u_sku of this Product.
        :type u_sku: str
        """

        self._u_sku = u_sku

    @property
    def u_upc(self):
        """Gets the u_upc of this Product.


        :return: The u_upc of this Product.
        :rtype: str
        """
        return self._u_upc

    @u_upc.setter
    def u_upc(self, u_upc):
        """Sets the u_upc of this Product.


        :param u_upc: The u_upc of this Product.
        :type u_upc: str
        """

        self._u_upc = u_upc

    @property
    def url(self):
        """Gets the url of this Product.


        :return: The url of this Product.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this Product.


        :param url: The url of this Product.
        :type url: str
        """

        self._url = url

    @property
    def weight(self):
        """Gets the weight of this Product.


        :return: The weight of this Product.
        :rtype: float
        """
        return self._weight

    @weight.setter
    def weight(self, weight):
        """Sets the weight of this Product.


        :param weight: The weight of this Product.
        :type weight: float
        """

        self._weight = weight

    @property
    def weight_unit(self):
        """Gets the weight_unit of this Product.


        :return: The weight_unit of this Product.
        :rtype: str
        """
        return self._weight_unit

    @weight_unit.setter
    def weight_unit(self, weight_unit):
        """Sets the weight_unit of this Product.


        :param weight_unit: The weight_unit of this Product.
        :type weight_unit: str
        """

        self._weight_unit = weight_unit

    @property
    def width(self):
        """Gets the width of this Product.


        :return: The width of this Product.
        :rtype: float
        """
        return self._width

    @width.setter
    def width(self, width):
        """Sets the width of this Product.


        :param width: The width of this Product.
        :type width: float
        """

        self._width = width
