# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ShipmentItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_fields: object=None, custom_fields: object=None, model: str=None, name: str=None, order_product_id: str=None, price: float=None, product_id: str=None, quantity: float=None, variant_id: str=None):
        """ShipmentItem - a model defined in OpenAPI

        :param additional_fields: The additional_fields of this ShipmentItem.
        :param custom_fields: The custom_fields of this ShipmentItem.
        :param model: The model of this ShipmentItem.
        :param name: The name of this ShipmentItem.
        :param order_product_id: The order_product_id of this ShipmentItem.
        :param price: The price of this ShipmentItem.
        :param product_id: The product_id of this ShipmentItem.
        :param quantity: The quantity of this ShipmentItem.
        :param variant_id: The variant_id of this ShipmentItem.
        """
        self.openapi_types = {
            'additional_fields': object,
            'custom_fields': object,
            'model': str,
            'name': str,
            'order_product_id': str,
            'price': float,
            'product_id': str,
            'quantity': float,
            'variant_id': str
        }

        self.attribute_map = {
            'additional_fields': 'additional_fields',
            'custom_fields': 'custom_fields',
            'model': 'model',
            'name': 'name',
            'order_product_id': 'order_product_id',
            'price': 'price',
            'product_id': 'product_id',
            'quantity': 'quantity',
            'variant_id': 'variant_id'
        }

        self._additional_fields = additional_fields
        self._custom_fields = custom_fields
        self._model = model
        self._name = name
        self._order_product_id = order_product_id
        self._price = price
        self._product_id = product_id
        self._quantity = quantity
        self._variant_id = variant_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ShipmentItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Shipment_Item of this ShipmentItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_fields(self):
        """Gets the additional_fields of this ShipmentItem.


        :return: The additional_fields of this ShipmentItem.
        :rtype: object
        """
        return self._additional_fields

    @additional_fields.setter
    def additional_fields(self, additional_fields):
        """Sets the additional_fields of this ShipmentItem.


        :param additional_fields: The additional_fields of this ShipmentItem.
        :type additional_fields: object
        """

        self._additional_fields = additional_fields

    @property
    def custom_fields(self):
        """Gets the custom_fields of this ShipmentItem.


        :return: The custom_fields of this ShipmentItem.
        :rtype: object
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this ShipmentItem.


        :param custom_fields: The custom_fields of this ShipmentItem.
        :type custom_fields: object
        """

        self._custom_fields = custom_fields

    @property
    def model(self):
        """Gets the model of this ShipmentItem.


        :return: The model of this ShipmentItem.
        :rtype: str
        """
        return self._model

    @model.setter
    def model(self, model):
        """Sets the model of this ShipmentItem.


        :param model: The model of this ShipmentItem.
        :type model: str
        """

        self._model = model

    @property
    def name(self):
        """Gets the name of this ShipmentItem.


        :return: The name of this ShipmentItem.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ShipmentItem.


        :param name: The name of this ShipmentItem.
        :type name: str
        """

        self._name = name

    @property
    def order_product_id(self):
        """Gets the order_product_id of this ShipmentItem.


        :return: The order_product_id of this ShipmentItem.
        :rtype: str
        """
        return self._order_product_id

    @order_product_id.setter
    def order_product_id(self, order_product_id):
        """Sets the order_product_id of this ShipmentItem.


        :param order_product_id: The order_product_id of this ShipmentItem.
        :type order_product_id: str
        """

        self._order_product_id = order_product_id

    @property
    def price(self):
        """Gets the price of this ShipmentItem.


        :return: The price of this ShipmentItem.
        :rtype: float
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this ShipmentItem.


        :param price: The price of this ShipmentItem.
        :type price: float
        """

        self._price = price

    @property
    def product_id(self):
        """Gets the product_id of this ShipmentItem.


        :return: The product_id of this ShipmentItem.
        :rtype: str
        """
        return self._product_id

    @product_id.setter
    def product_id(self, product_id):
        """Sets the product_id of this ShipmentItem.


        :param product_id: The product_id of this ShipmentItem.
        :type product_id: str
        """

        self._product_id = product_id

    @property
    def quantity(self):
        """Gets the quantity of this ShipmentItem.


        :return: The quantity of this ShipmentItem.
        :rtype: float
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this ShipmentItem.


        :param quantity: The quantity of this ShipmentItem.
        :type quantity: float
        """

        self._quantity = quantity

    @property
    def variant_id(self):
        """Gets the variant_id of this ShipmentItem.


        :return: The variant_id of this ShipmentItem.
        :rtype: str
        """
        return self._variant_id

    @variant_id.setter
    def variant_id(self, variant_id):
        """Sets the variant_id of this ShipmentItem.


        :param variant_id: The variant_id of this ShipmentItem.
        :type variant_id: str
        """

        self._variant_id = variant_id
