# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.a2_c_date_time import A2CDateTime
from openapi_server import util


class Script(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_fields: object=None, created_time: A2CDateTime=None, custom_fields: object=None, description: str=None, event: str=None, html: str=None, id: str=None, load_method: str=None, modified_time: A2CDateTime=None, name: str=None, scope: str=None, src: str=None):
        """Script - a model defined in OpenAPI

        :param additional_fields: The additional_fields of this Script.
        :param created_time: The created_time of this Script.
        :param custom_fields: The custom_fields of this Script.
        :param description: The description of this Script.
        :param event: The event of this Script.
        :param html: The html of this Script.
        :param id: The id of this Script.
        :param load_method: The load_method of this Script.
        :param modified_time: The modified_time of this Script.
        :param name: The name of this Script.
        :param scope: The scope of this Script.
        :param src: The src of this Script.
        """
        self.openapi_types = {
            'additional_fields': object,
            'created_time': A2CDateTime,
            'custom_fields': object,
            'description': str,
            'event': str,
            'html': str,
            'id': str,
            'load_method': str,
            'modified_time': A2CDateTime,
            'name': str,
            'scope': str,
            'src': str
        }

        self.attribute_map = {
            'additional_fields': 'additional_fields',
            'created_time': 'created_time',
            'custom_fields': 'custom_fields',
            'description': 'description',
            'event': 'event',
            'html': 'html',
            'id': 'id',
            'load_method': 'load_method',
            'modified_time': 'modified_time',
            'name': 'name',
            'scope': 'scope',
            'src': 'src'
        }

        self._additional_fields = additional_fields
        self._created_time = created_time
        self._custom_fields = custom_fields
        self._description = description
        self._event = event
        self._html = html
        self._id = id
        self._load_method = load_method
        self._modified_time = modified_time
        self._name = name
        self._scope = scope
        self._src = src

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Script':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Script of this Script.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_fields(self):
        """Gets the additional_fields of this Script.


        :return: The additional_fields of this Script.
        :rtype: object
        """
        return self._additional_fields

    @additional_fields.setter
    def additional_fields(self, additional_fields):
        """Sets the additional_fields of this Script.


        :param additional_fields: The additional_fields of this Script.
        :type additional_fields: object
        """

        self._additional_fields = additional_fields

    @property
    def created_time(self):
        """Gets the created_time of this Script.


        :return: The created_time of this Script.
        :rtype: A2CDateTime
        """
        return self._created_time

    @created_time.setter
    def created_time(self, created_time):
        """Sets the created_time of this Script.


        :param created_time: The created_time of this Script.
        :type created_time: A2CDateTime
        """

        self._created_time = created_time

    @property
    def custom_fields(self):
        """Gets the custom_fields of this Script.


        :return: The custom_fields of this Script.
        :rtype: object
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this Script.


        :param custom_fields: The custom_fields of this Script.
        :type custom_fields: object
        """

        self._custom_fields = custom_fields

    @property
    def description(self):
        """Gets the description of this Script.


        :return: The description of this Script.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Script.


        :param description: The description of this Script.
        :type description: str
        """

        self._description = description

    @property
    def event(self):
        """Gets the event of this Script.


        :return: The event of this Script.
        :rtype: str
        """
        return self._event

    @event.setter
    def event(self, event):
        """Sets the event of this Script.


        :param event: The event of this Script.
        :type event: str
        """

        self._event = event

    @property
    def html(self):
        """Gets the html of this Script.


        :return: The html of this Script.
        :rtype: str
        """
        return self._html

    @html.setter
    def html(self, html):
        """Sets the html of this Script.


        :param html: The html of this Script.
        :type html: str
        """

        self._html = html

    @property
    def id(self):
        """Gets the id of this Script.


        :return: The id of this Script.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Script.


        :param id: The id of this Script.
        :type id: str
        """

        self._id = id

    @property
    def load_method(self):
        """Gets the load_method of this Script.


        :return: The load_method of this Script.
        :rtype: str
        """
        return self._load_method

    @load_method.setter
    def load_method(self, load_method):
        """Sets the load_method of this Script.


        :param load_method: The load_method of this Script.
        :type load_method: str
        """

        self._load_method = load_method

    @property
    def modified_time(self):
        """Gets the modified_time of this Script.


        :return: The modified_time of this Script.
        :rtype: A2CDateTime
        """
        return self._modified_time

    @modified_time.setter
    def modified_time(self, modified_time):
        """Sets the modified_time of this Script.


        :param modified_time: The modified_time of this Script.
        :type modified_time: A2CDateTime
        """

        self._modified_time = modified_time

    @property
    def name(self):
        """Gets the name of this Script.


        :return: The name of this Script.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Script.


        :param name: The name of this Script.
        :type name: str
        """

        self._name = name

    @property
    def scope(self):
        """Gets the scope of this Script.


        :return: The scope of this Script.
        :rtype: str
        """
        return self._scope

    @scope.setter
    def scope(self, scope):
        """Sets the scope of this Script.


        :param scope: The scope of this Script.
        :type scope: str
        """

        self._scope = scope

    @property
    def src(self):
        """Gets the src of this Script.


        :return: The src of this Script.
        :rtype: str
        """
        return self._src

    @src.setter
    def src(self, src):
        """Sets the src of this Script.


        :param src: The src of this Script.
        :type src: str
        """

        self._src = src
