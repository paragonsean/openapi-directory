# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.carrier import Carrier
from openapi_server.models.cart_channel import CartChannel
from openapi_server.models.currency import Currency
from openapi_server.models.info import Info
from openapi_server.models.language import Language
from openapi_server import util


class CartStoreInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active: bool=None, additional_fields: object=None, carrier_info: List[Carrier]=None, channels: List[CartChannel]=None, country: str=None, currency: Currency=None, custom_fields: object=None, default_warehouse_id: str=None, dimension_unit: str=None, language: str=None, multi_store_url: str=None, name: str=None, prices_include_tax: bool=None, root_category_id: str=None, store_currencies: List[Currency]=None, store_id: str=None, store_languages: List[Language]=None, store_owner_info: Info=None, timezone: str=None, weight_unit: str=None):
        """CartStoreInfo - a model defined in OpenAPI

        :param active: The active of this CartStoreInfo.
        :param additional_fields: The additional_fields of this CartStoreInfo.
        :param carrier_info: The carrier_info of this CartStoreInfo.
        :param channels: The channels of this CartStoreInfo.
        :param country: The country of this CartStoreInfo.
        :param currency: The currency of this CartStoreInfo.
        :param custom_fields: The custom_fields of this CartStoreInfo.
        :param default_warehouse_id: The default_warehouse_id of this CartStoreInfo.
        :param dimension_unit: The dimension_unit of this CartStoreInfo.
        :param language: The language of this CartStoreInfo.
        :param multi_store_url: The multi_store_url of this CartStoreInfo.
        :param name: The name of this CartStoreInfo.
        :param prices_include_tax: The prices_include_tax of this CartStoreInfo.
        :param root_category_id: The root_category_id of this CartStoreInfo.
        :param store_currencies: The store_currencies of this CartStoreInfo.
        :param store_id: The store_id of this CartStoreInfo.
        :param store_languages: The store_languages of this CartStoreInfo.
        :param store_owner_info: The store_owner_info of this CartStoreInfo.
        :param timezone: The timezone of this CartStoreInfo.
        :param weight_unit: The weight_unit of this CartStoreInfo.
        """
        self.openapi_types = {
            'active': bool,
            'additional_fields': object,
            'carrier_info': List[Carrier],
            'channels': List[CartChannel],
            'country': str,
            'currency': Currency,
            'custom_fields': object,
            'default_warehouse_id': str,
            'dimension_unit': str,
            'language': str,
            'multi_store_url': str,
            'name': str,
            'prices_include_tax': bool,
            'root_category_id': str,
            'store_currencies': List[Currency],
            'store_id': str,
            'store_languages': List[Language],
            'store_owner_info': Info,
            'timezone': str,
            'weight_unit': str
        }

        self.attribute_map = {
            'active': 'active',
            'additional_fields': 'additional_fields',
            'carrier_info': 'carrier_info',
            'channels': 'channels',
            'country': 'country',
            'currency': 'currency',
            'custom_fields': 'custom_fields',
            'default_warehouse_id': 'default_warehouse_id',
            'dimension_unit': 'dimension_unit',
            'language': 'language',
            'multi_store_url': 'multi_store_url',
            'name': 'name',
            'prices_include_tax': 'prices_include_tax',
            'root_category_id': 'root_category_id',
            'store_currencies': 'store_currencies',
            'store_id': 'store_id',
            'store_languages': 'store_languages',
            'store_owner_info': 'store_owner_info',
            'timezone': 'timezone',
            'weight_unit': 'weight_unit'
        }

        self._active = active
        self._additional_fields = additional_fields
        self._carrier_info = carrier_info
        self._channels = channels
        self._country = country
        self._currency = currency
        self._custom_fields = custom_fields
        self._default_warehouse_id = default_warehouse_id
        self._dimension_unit = dimension_unit
        self._language = language
        self._multi_store_url = multi_store_url
        self._name = name
        self._prices_include_tax = prices_include_tax
        self._root_category_id = root_category_id
        self._store_currencies = store_currencies
        self._store_id = store_id
        self._store_languages = store_languages
        self._store_owner_info = store_owner_info
        self._timezone = timezone
        self._weight_unit = weight_unit

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CartStoreInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Cart_StoreInfo of this CartStoreInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active(self):
        """Gets the active of this CartStoreInfo.


        :return: The active of this CartStoreInfo.
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this CartStoreInfo.


        :param active: The active of this CartStoreInfo.
        :type active: bool
        """

        self._active = active

    @property
    def additional_fields(self):
        """Gets the additional_fields of this CartStoreInfo.


        :return: The additional_fields of this CartStoreInfo.
        :rtype: object
        """
        return self._additional_fields

    @additional_fields.setter
    def additional_fields(self, additional_fields):
        """Sets the additional_fields of this CartStoreInfo.


        :param additional_fields: The additional_fields of this CartStoreInfo.
        :type additional_fields: object
        """

        self._additional_fields = additional_fields

    @property
    def carrier_info(self):
        """Gets the carrier_info of this CartStoreInfo.


        :return: The carrier_info of this CartStoreInfo.
        :rtype: List[Carrier]
        """
        return self._carrier_info

    @carrier_info.setter
    def carrier_info(self, carrier_info):
        """Sets the carrier_info of this CartStoreInfo.


        :param carrier_info: The carrier_info of this CartStoreInfo.
        :type carrier_info: List[Carrier]
        """

        self._carrier_info = carrier_info

    @property
    def channels(self):
        """Gets the channels of this CartStoreInfo.


        :return: The channels of this CartStoreInfo.
        :rtype: List[CartChannel]
        """
        return self._channels

    @channels.setter
    def channels(self, channels):
        """Sets the channels of this CartStoreInfo.


        :param channels: The channels of this CartStoreInfo.
        :type channels: List[CartChannel]
        """

        self._channels = channels

    @property
    def country(self):
        """Gets the country of this CartStoreInfo.


        :return: The country of this CartStoreInfo.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this CartStoreInfo.


        :param country: The country of this CartStoreInfo.
        :type country: str
        """

        self._country = country

    @property
    def currency(self):
        """Gets the currency of this CartStoreInfo.


        :return: The currency of this CartStoreInfo.
        :rtype: Currency
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this CartStoreInfo.


        :param currency: The currency of this CartStoreInfo.
        :type currency: Currency
        """

        self._currency = currency

    @property
    def custom_fields(self):
        """Gets the custom_fields of this CartStoreInfo.


        :return: The custom_fields of this CartStoreInfo.
        :rtype: object
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this CartStoreInfo.


        :param custom_fields: The custom_fields of this CartStoreInfo.
        :type custom_fields: object
        """

        self._custom_fields = custom_fields

    @property
    def default_warehouse_id(self):
        """Gets the default_warehouse_id of this CartStoreInfo.


        :return: The default_warehouse_id of this CartStoreInfo.
        :rtype: str
        """
        return self._default_warehouse_id

    @default_warehouse_id.setter
    def default_warehouse_id(self, default_warehouse_id):
        """Sets the default_warehouse_id of this CartStoreInfo.


        :param default_warehouse_id: The default_warehouse_id of this CartStoreInfo.
        :type default_warehouse_id: str
        """

        self._default_warehouse_id = default_warehouse_id

    @property
    def dimension_unit(self):
        """Gets the dimension_unit of this CartStoreInfo.


        :return: The dimension_unit of this CartStoreInfo.
        :rtype: str
        """
        return self._dimension_unit

    @dimension_unit.setter
    def dimension_unit(self, dimension_unit):
        """Sets the dimension_unit of this CartStoreInfo.


        :param dimension_unit: The dimension_unit of this CartStoreInfo.
        :type dimension_unit: str
        """

        self._dimension_unit = dimension_unit

    @property
    def language(self):
        """Gets the language of this CartStoreInfo.


        :return: The language of this CartStoreInfo.
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this CartStoreInfo.


        :param language: The language of this CartStoreInfo.
        :type language: str
        """

        self._language = language

    @property
    def multi_store_url(self):
        """Gets the multi_store_url of this CartStoreInfo.


        :return: The multi_store_url of this CartStoreInfo.
        :rtype: str
        """
        return self._multi_store_url

    @multi_store_url.setter
    def multi_store_url(self, multi_store_url):
        """Sets the multi_store_url of this CartStoreInfo.


        :param multi_store_url: The multi_store_url of this CartStoreInfo.
        :type multi_store_url: str
        """

        self._multi_store_url = multi_store_url

    @property
    def name(self):
        """Gets the name of this CartStoreInfo.


        :return: The name of this CartStoreInfo.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CartStoreInfo.


        :param name: The name of this CartStoreInfo.
        :type name: str
        """

        self._name = name

    @property
    def prices_include_tax(self):
        """Gets the prices_include_tax of this CartStoreInfo.


        :return: The prices_include_tax of this CartStoreInfo.
        :rtype: bool
        """
        return self._prices_include_tax

    @prices_include_tax.setter
    def prices_include_tax(self, prices_include_tax):
        """Sets the prices_include_tax of this CartStoreInfo.


        :param prices_include_tax: The prices_include_tax of this CartStoreInfo.
        :type prices_include_tax: bool
        """

        self._prices_include_tax = prices_include_tax

    @property
    def root_category_id(self):
        """Gets the root_category_id of this CartStoreInfo.


        :return: The root_category_id of this CartStoreInfo.
        :rtype: str
        """
        return self._root_category_id

    @root_category_id.setter
    def root_category_id(self, root_category_id):
        """Sets the root_category_id of this CartStoreInfo.


        :param root_category_id: The root_category_id of this CartStoreInfo.
        :type root_category_id: str
        """

        self._root_category_id = root_category_id

    @property
    def store_currencies(self):
        """Gets the store_currencies of this CartStoreInfo.


        :return: The store_currencies of this CartStoreInfo.
        :rtype: List[Currency]
        """
        return self._store_currencies

    @store_currencies.setter
    def store_currencies(self, store_currencies):
        """Sets the store_currencies of this CartStoreInfo.


        :param store_currencies: The store_currencies of this CartStoreInfo.
        :type store_currencies: List[Currency]
        """

        self._store_currencies = store_currencies

    @property
    def store_id(self):
        """Gets the store_id of this CartStoreInfo.


        :return: The store_id of this CartStoreInfo.
        :rtype: str
        """
        return self._store_id

    @store_id.setter
    def store_id(self, store_id):
        """Sets the store_id of this CartStoreInfo.


        :param store_id: The store_id of this CartStoreInfo.
        :type store_id: str
        """

        self._store_id = store_id

    @property
    def store_languages(self):
        """Gets the store_languages of this CartStoreInfo.


        :return: The store_languages of this CartStoreInfo.
        :rtype: List[Language]
        """
        return self._store_languages

    @store_languages.setter
    def store_languages(self, store_languages):
        """Sets the store_languages of this CartStoreInfo.


        :param store_languages: The store_languages of this CartStoreInfo.
        :type store_languages: List[Language]
        """

        self._store_languages = store_languages

    @property
    def store_owner_info(self):
        """Gets the store_owner_info of this CartStoreInfo.


        :return: The store_owner_info of this CartStoreInfo.
        :rtype: Info
        """
        return self._store_owner_info

    @store_owner_info.setter
    def store_owner_info(self, store_owner_info):
        """Sets the store_owner_info of this CartStoreInfo.


        :param store_owner_info: The store_owner_info of this CartStoreInfo.
        :type store_owner_info: Info
        """

        self._store_owner_info = store_owner_info

    @property
    def timezone(self):
        """Gets the timezone of this CartStoreInfo.


        :return: The timezone of this CartStoreInfo.
        :rtype: str
        """
        return self._timezone

    @timezone.setter
    def timezone(self, timezone):
        """Sets the timezone of this CartStoreInfo.


        :param timezone: The timezone of this CartStoreInfo.
        :type timezone: str
        """

        self._timezone = timezone

    @property
    def weight_unit(self):
        """Gets the weight_unit of this CartStoreInfo.


        :return: The weight_unit of this CartStoreInfo.
        :rtype: str
        """
        return self._weight_unit

    @weight_unit.setter
    def weight_unit(self, weight_unit):
        """Sets the weight_unit of this CartStoreInfo.


        :param weight_unit: The weight_unit of this CartStoreInfo.
        :type weight_unit: str
        """

        self._weight_unit = weight_unit
