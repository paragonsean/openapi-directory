# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Discount(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_fields: object=None, custom_fields: object=None, customer_group_ids: str=None, from_time: str=None, id: str=None, modifier_type: str=None, name: str=None, sort_order: int=None, to_time: str=None, value: float=None):
        """Discount - a model defined in OpenAPI

        :param additional_fields: The additional_fields of this Discount.
        :param custom_fields: The custom_fields of this Discount.
        :param customer_group_ids: The customer_group_ids of this Discount.
        :param from_time: The from_time of this Discount.
        :param id: The id of this Discount.
        :param modifier_type: The modifier_type of this Discount.
        :param name: The name of this Discount.
        :param sort_order: The sort_order of this Discount.
        :param to_time: The to_time of this Discount.
        :param value: The value of this Discount.
        """
        self.openapi_types = {
            'additional_fields': object,
            'custom_fields': object,
            'customer_group_ids': str,
            'from_time': str,
            'id': str,
            'modifier_type': str,
            'name': str,
            'sort_order': int,
            'to_time': str,
            'value': float
        }

        self.attribute_map = {
            'additional_fields': 'additional_fields',
            'custom_fields': 'custom_fields',
            'customer_group_ids': 'customer_group_ids',
            'from_time': 'from_time',
            'id': 'id',
            'modifier_type': 'modifier_type',
            'name': 'name',
            'sort_order': 'sort_order',
            'to_time': 'to_time',
            'value': 'value'
        }

        self._additional_fields = additional_fields
        self._custom_fields = custom_fields
        self._customer_group_ids = customer_group_ids
        self._from_time = from_time
        self._id = id
        self._modifier_type = modifier_type
        self._name = name
        self._sort_order = sort_order
        self._to_time = to_time
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Discount':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Discount of this Discount.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_fields(self):
        """Gets the additional_fields of this Discount.


        :return: The additional_fields of this Discount.
        :rtype: object
        """
        return self._additional_fields

    @additional_fields.setter
    def additional_fields(self, additional_fields):
        """Sets the additional_fields of this Discount.


        :param additional_fields: The additional_fields of this Discount.
        :type additional_fields: object
        """

        self._additional_fields = additional_fields

    @property
    def custom_fields(self):
        """Gets the custom_fields of this Discount.


        :return: The custom_fields of this Discount.
        :rtype: object
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this Discount.


        :param custom_fields: The custom_fields of this Discount.
        :type custom_fields: object
        """

        self._custom_fields = custom_fields

    @property
    def customer_group_ids(self):
        """Gets the customer_group_ids of this Discount.


        :return: The customer_group_ids of this Discount.
        :rtype: str
        """
        return self._customer_group_ids

    @customer_group_ids.setter
    def customer_group_ids(self, customer_group_ids):
        """Sets the customer_group_ids of this Discount.


        :param customer_group_ids: The customer_group_ids of this Discount.
        :type customer_group_ids: str
        """

        self._customer_group_ids = customer_group_ids

    @property
    def from_time(self):
        """Gets the from_time of this Discount.


        :return: The from_time of this Discount.
        :rtype: str
        """
        return self._from_time

    @from_time.setter
    def from_time(self, from_time):
        """Sets the from_time of this Discount.


        :param from_time: The from_time of this Discount.
        :type from_time: str
        """

        self._from_time = from_time

    @property
    def id(self):
        """Gets the id of this Discount.


        :return: The id of this Discount.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Discount.


        :param id: The id of this Discount.
        :type id: str
        """

        self._id = id

    @property
    def modifier_type(self):
        """Gets the modifier_type of this Discount.


        :return: The modifier_type of this Discount.
        :rtype: str
        """
        return self._modifier_type

    @modifier_type.setter
    def modifier_type(self, modifier_type):
        """Sets the modifier_type of this Discount.


        :param modifier_type: The modifier_type of this Discount.
        :type modifier_type: str
        """

        self._modifier_type = modifier_type

    @property
    def name(self):
        """Gets the name of this Discount.


        :return: The name of this Discount.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Discount.


        :param name: The name of this Discount.
        :type name: str
        """

        self._name = name

    @property
    def sort_order(self):
        """Gets the sort_order of this Discount.


        :return: The sort_order of this Discount.
        :rtype: int
        """
        return self._sort_order

    @sort_order.setter
    def sort_order(self, sort_order):
        """Sets the sort_order of this Discount.


        :param sort_order: The sort_order of this Discount.
        :type sort_order: int
        """

        self._sort_order = sort_order

    @property
    def to_time(self):
        """Gets the to_time of this Discount.


        :return: The to_time of this Discount.
        :rtype: str
        """
        return self._to_time

    @to_time.setter
    def to_time(self, to_time):
        """Sets the to_time of this Discount.


        :param to_time: The to_time of this Discount.
        :type to_time: str
        """

        self._to_time = to_time

    @property
    def value(self):
        """Gets the value of this Discount.


        :return: The value of this Discount.
        :rtype: float
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this Discount.


        :param value: The value of this Discount.
        :type value: float
        """

        self._value = value
