# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Pagination(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_fields: object=None, custom_fields: object=None, next: str=None, previous: str=None):
        """Pagination - a model defined in OpenAPI

        :param additional_fields: The additional_fields of this Pagination.
        :param custom_fields: The custom_fields of this Pagination.
        :param next: The next of this Pagination.
        :param previous: The previous of this Pagination.
        """
        self.openapi_types = {
            'additional_fields': object,
            'custom_fields': object,
            'next': str,
            'previous': str
        }

        self.attribute_map = {
            'additional_fields': 'additional_fields',
            'custom_fields': 'custom_fields',
            'next': 'next',
            'previous': 'previous'
        }

        self._additional_fields = additional_fields
        self._custom_fields = custom_fields
        self._next = next
        self._previous = previous

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Pagination':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Pagination of this Pagination.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_fields(self):
        """Gets the additional_fields of this Pagination.


        :return: The additional_fields of this Pagination.
        :rtype: object
        """
        return self._additional_fields

    @additional_fields.setter
    def additional_fields(self, additional_fields):
        """Sets the additional_fields of this Pagination.


        :param additional_fields: The additional_fields of this Pagination.
        :type additional_fields: object
        """

        self._additional_fields = additional_fields

    @property
    def custom_fields(self):
        """Gets the custom_fields of this Pagination.


        :return: The custom_fields of this Pagination.
        :rtype: object
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this Pagination.


        :param custom_fields: The custom_fields of this Pagination.
        :type custom_fields: object
        """

        self._custom_fields = custom_fields

    @property
    def next(self):
        """Gets the next of this Pagination.


        :return: The next of this Pagination.
        :rtype: str
        """
        return self._next

    @next.setter
    def next(self, next):
        """Sets the next of this Pagination.


        :param next: The next of this Pagination.
        :type next: str
        """

        self._next = next

    @property
    def previous(self):
        """Gets the previous of this Pagination.


        :return: The previous of this Pagination.
        :rtype: str
        """
        return self._previous

    @previous.setter
    def previous(self, previous):
        """Sets the previous of this Pagination.


        :param previous: The previous of this Pagination.
        :type previous: str
        """

        self._previous = previous
