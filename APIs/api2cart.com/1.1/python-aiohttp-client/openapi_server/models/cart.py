# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cart_shipping_zone import CartShippingZone
from openapi_server.models.cart_store_info import CartStoreInfo
from openapi_server.models.cart_warehouse import CartWarehouse
from openapi_server import util


class Cart(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_fields: object=None, custom_fields: object=None, db_prefix: str=None, name: str=None, shipping_zones: List[CartShippingZone]=None, stores_info: List[CartStoreInfo]=None, url: str=None, version: str=None, warehouses: List[CartWarehouse]=None):
        """Cart - a model defined in OpenAPI

        :param additional_fields: The additional_fields of this Cart.
        :param custom_fields: The custom_fields of this Cart.
        :param db_prefix: The db_prefix of this Cart.
        :param name: The name of this Cart.
        :param shipping_zones: The shipping_zones of this Cart.
        :param stores_info: The stores_info of this Cart.
        :param url: The url of this Cart.
        :param version: The version of this Cart.
        :param warehouses: The warehouses of this Cart.
        """
        self.openapi_types = {
            'additional_fields': object,
            'custom_fields': object,
            'db_prefix': str,
            'name': str,
            'shipping_zones': List[CartShippingZone],
            'stores_info': List[CartStoreInfo],
            'url': str,
            'version': str,
            'warehouses': List[CartWarehouse]
        }

        self.attribute_map = {
            'additional_fields': 'additional_fields',
            'custom_fields': 'custom_fields',
            'db_prefix': 'db_prefix',
            'name': 'name',
            'shipping_zones': 'shipping_zones',
            'stores_info': 'stores_info',
            'url': 'url',
            'version': 'version',
            'warehouses': 'warehouses'
        }

        self._additional_fields = additional_fields
        self._custom_fields = custom_fields
        self._db_prefix = db_prefix
        self._name = name
        self._shipping_zones = shipping_zones
        self._stores_info = stores_info
        self._url = url
        self._version = version
        self._warehouses = warehouses

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Cart':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Cart of this Cart.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_fields(self):
        """Gets the additional_fields of this Cart.


        :return: The additional_fields of this Cart.
        :rtype: object
        """
        return self._additional_fields

    @additional_fields.setter
    def additional_fields(self, additional_fields):
        """Sets the additional_fields of this Cart.


        :param additional_fields: The additional_fields of this Cart.
        :type additional_fields: object
        """

        self._additional_fields = additional_fields

    @property
    def custom_fields(self):
        """Gets the custom_fields of this Cart.


        :return: The custom_fields of this Cart.
        :rtype: object
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this Cart.


        :param custom_fields: The custom_fields of this Cart.
        :type custom_fields: object
        """

        self._custom_fields = custom_fields

    @property
    def db_prefix(self):
        """Gets the db_prefix of this Cart.


        :return: The db_prefix of this Cart.
        :rtype: str
        """
        return self._db_prefix

    @db_prefix.setter
    def db_prefix(self, db_prefix):
        """Sets the db_prefix of this Cart.


        :param db_prefix: The db_prefix of this Cart.
        :type db_prefix: str
        """

        self._db_prefix = db_prefix

    @property
    def name(self):
        """Gets the name of this Cart.


        :return: The name of this Cart.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Cart.


        :param name: The name of this Cart.
        :type name: str
        """

        self._name = name

    @property
    def shipping_zones(self):
        """Gets the shipping_zones of this Cart.


        :return: The shipping_zones of this Cart.
        :rtype: List[CartShippingZone]
        """
        return self._shipping_zones

    @shipping_zones.setter
    def shipping_zones(self, shipping_zones):
        """Sets the shipping_zones of this Cart.


        :param shipping_zones: The shipping_zones of this Cart.
        :type shipping_zones: List[CartShippingZone]
        """

        self._shipping_zones = shipping_zones

    @property
    def stores_info(self):
        """Gets the stores_info of this Cart.


        :return: The stores_info of this Cart.
        :rtype: List[CartStoreInfo]
        """
        return self._stores_info

    @stores_info.setter
    def stores_info(self, stores_info):
        """Sets the stores_info of this Cart.


        :param stores_info: The stores_info of this Cart.
        :type stores_info: List[CartStoreInfo]
        """

        self._stores_info = stores_info

    @property
    def url(self):
        """Gets the url of this Cart.


        :return: The url of this Cart.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this Cart.


        :param url: The url of this Cart.
        :type url: str
        """

        self._url = url

    @property
    def version(self):
        """Gets the version of this Cart.


        :return: The version of this Cart.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this Cart.


        :param version: The version of this Cart.
        :type version: str
        """

        self._version = version

    @property
    def warehouses(self):
        """Gets the warehouses of this Cart.


        :return: The warehouses of this Cart.
        :rtype: List[CartWarehouse]
        """
        return self._warehouses

    @warehouses.setter
    def warehouses(self, warehouses):
        """Sets the warehouses of this Cart.


        :param warehouses: The warehouses of this Cart.
        :type warehouses: List[CartWarehouse]
        """

        self._warehouses = warehouses
