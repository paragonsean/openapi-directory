# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.country import Country
from openapi_server.models.state import State
from openapi_server import util


class CustomerAddress(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_fields: object=None, address1: str=None, address2: str=None, city: str=None, company: str=None, country: Country=None, custom_fields: object=None, default: bool=None, fax: str=None, first_name: str=None, gender: str=None, id: str=None, identification_number: str=None, last_name: str=None, phone: str=None, phone_mobile: str=None, postcode: str=None, region: str=None, state: State=None, tax_id: str=None, type: str=None, website: str=None):
        """CustomerAddress - a model defined in OpenAPI

        :param additional_fields: The additional_fields of this CustomerAddress.
        :param address1: The address1 of this CustomerAddress.
        :param address2: The address2 of this CustomerAddress.
        :param city: The city of this CustomerAddress.
        :param company: The company of this CustomerAddress.
        :param country: The country of this CustomerAddress.
        :param custom_fields: The custom_fields of this CustomerAddress.
        :param default: The default of this CustomerAddress.
        :param fax: The fax of this CustomerAddress.
        :param first_name: The first_name of this CustomerAddress.
        :param gender: The gender of this CustomerAddress.
        :param id: The id of this CustomerAddress.
        :param identification_number: The identification_number of this CustomerAddress.
        :param last_name: The last_name of this CustomerAddress.
        :param phone: The phone of this CustomerAddress.
        :param phone_mobile: The phone_mobile of this CustomerAddress.
        :param postcode: The postcode of this CustomerAddress.
        :param region: The region of this CustomerAddress.
        :param state: The state of this CustomerAddress.
        :param tax_id: The tax_id of this CustomerAddress.
        :param type: The type of this CustomerAddress.
        :param website: The website of this CustomerAddress.
        """
        self.openapi_types = {
            'additional_fields': object,
            'address1': str,
            'address2': str,
            'city': str,
            'company': str,
            'country': Country,
            'custom_fields': object,
            'default': bool,
            'fax': str,
            'first_name': str,
            'gender': str,
            'id': str,
            'identification_number': str,
            'last_name': str,
            'phone': str,
            'phone_mobile': str,
            'postcode': str,
            'region': str,
            'state': State,
            'tax_id': str,
            'type': str,
            'website': str
        }

        self.attribute_map = {
            'additional_fields': 'additional_fields',
            'address1': 'address1',
            'address2': 'address2',
            'city': 'city',
            'company': 'company',
            'country': 'country',
            'custom_fields': 'custom_fields',
            'default': 'default',
            'fax': 'fax',
            'first_name': 'first_name',
            'gender': 'gender',
            'id': 'id',
            'identification_number': 'identification_number',
            'last_name': 'last_name',
            'phone': 'phone',
            'phone_mobile': 'phone_mobile',
            'postcode': 'postcode',
            'region': 'region',
            'state': 'state',
            'tax_id': 'tax_id',
            'type': 'type',
            'website': 'website'
        }

        self._additional_fields = additional_fields
        self._address1 = address1
        self._address2 = address2
        self._city = city
        self._company = company
        self._country = country
        self._custom_fields = custom_fields
        self._default = default
        self._fax = fax
        self._first_name = first_name
        self._gender = gender
        self._id = id
        self._identification_number = identification_number
        self._last_name = last_name
        self._phone = phone
        self._phone_mobile = phone_mobile
        self._postcode = postcode
        self._region = region
        self._state = state
        self._tax_id = tax_id
        self._type = type
        self._website = website

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomerAddress':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Customer_Address of this CustomerAddress.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_fields(self):
        """Gets the additional_fields of this CustomerAddress.


        :return: The additional_fields of this CustomerAddress.
        :rtype: object
        """
        return self._additional_fields

    @additional_fields.setter
    def additional_fields(self, additional_fields):
        """Sets the additional_fields of this CustomerAddress.


        :param additional_fields: The additional_fields of this CustomerAddress.
        :type additional_fields: object
        """

        self._additional_fields = additional_fields

    @property
    def address1(self):
        """Gets the address1 of this CustomerAddress.


        :return: The address1 of this CustomerAddress.
        :rtype: str
        """
        return self._address1

    @address1.setter
    def address1(self, address1):
        """Sets the address1 of this CustomerAddress.


        :param address1: The address1 of this CustomerAddress.
        :type address1: str
        """

        self._address1 = address1

    @property
    def address2(self):
        """Gets the address2 of this CustomerAddress.


        :return: The address2 of this CustomerAddress.
        :rtype: str
        """
        return self._address2

    @address2.setter
    def address2(self, address2):
        """Sets the address2 of this CustomerAddress.


        :param address2: The address2 of this CustomerAddress.
        :type address2: str
        """

        self._address2 = address2

    @property
    def city(self):
        """Gets the city of this CustomerAddress.


        :return: The city of this CustomerAddress.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this CustomerAddress.


        :param city: The city of this CustomerAddress.
        :type city: str
        """

        self._city = city

    @property
    def company(self):
        """Gets the company of this CustomerAddress.


        :return: The company of this CustomerAddress.
        :rtype: str
        """
        return self._company

    @company.setter
    def company(self, company):
        """Sets the company of this CustomerAddress.


        :param company: The company of this CustomerAddress.
        :type company: str
        """

        self._company = company

    @property
    def country(self):
        """Gets the country of this CustomerAddress.


        :return: The country of this CustomerAddress.
        :rtype: Country
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this CustomerAddress.


        :param country: The country of this CustomerAddress.
        :type country: Country
        """

        self._country = country

    @property
    def custom_fields(self):
        """Gets the custom_fields of this CustomerAddress.


        :return: The custom_fields of this CustomerAddress.
        :rtype: object
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this CustomerAddress.


        :param custom_fields: The custom_fields of this CustomerAddress.
        :type custom_fields: object
        """

        self._custom_fields = custom_fields

    @property
    def default(self):
        """Gets the default of this CustomerAddress.


        :return: The default of this CustomerAddress.
        :rtype: bool
        """
        return self._default

    @default.setter
    def default(self, default):
        """Sets the default of this CustomerAddress.


        :param default: The default of this CustomerAddress.
        :type default: bool
        """

        self._default = default

    @property
    def fax(self):
        """Gets the fax of this CustomerAddress.


        :return: The fax of this CustomerAddress.
        :rtype: str
        """
        return self._fax

    @fax.setter
    def fax(self, fax):
        """Sets the fax of this CustomerAddress.


        :param fax: The fax of this CustomerAddress.
        :type fax: str
        """

        self._fax = fax

    @property
    def first_name(self):
        """Gets the first_name of this CustomerAddress.


        :return: The first_name of this CustomerAddress.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this CustomerAddress.


        :param first_name: The first_name of this CustomerAddress.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def gender(self):
        """Gets the gender of this CustomerAddress.


        :return: The gender of this CustomerAddress.
        :rtype: str
        """
        return self._gender

    @gender.setter
    def gender(self, gender):
        """Sets the gender of this CustomerAddress.


        :param gender: The gender of this CustomerAddress.
        :type gender: str
        """

        self._gender = gender

    @property
    def id(self):
        """Gets the id of this CustomerAddress.


        :return: The id of this CustomerAddress.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CustomerAddress.


        :param id: The id of this CustomerAddress.
        :type id: str
        """

        self._id = id

    @property
    def identification_number(self):
        """Gets the identification_number of this CustomerAddress.


        :return: The identification_number of this CustomerAddress.
        :rtype: str
        """
        return self._identification_number

    @identification_number.setter
    def identification_number(self, identification_number):
        """Sets the identification_number of this CustomerAddress.


        :param identification_number: The identification_number of this CustomerAddress.
        :type identification_number: str
        """

        self._identification_number = identification_number

    @property
    def last_name(self):
        """Gets the last_name of this CustomerAddress.


        :return: The last_name of this CustomerAddress.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this CustomerAddress.


        :param last_name: The last_name of this CustomerAddress.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def phone(self):
        """Gets the phone of this CustomerAddress.


        :return: The phone of this CustomerAddress.
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone):
        """Sets the phone of this CustomerAddress.


        :param phone: The phone of this CustomerAddress.
        :type phone: str
        """

        self._phone = phone

    @property
    def phone_mobile(self):
        """Gets the phone_mobile of this CustomerAddress.


        :return: The phone_mobile of this CustomerAddress.
        :rtype: str
        """
        return self._phone_mobile

    @phone_mobile.setter
    def phone_mobile(self, phone_mobile):
        """Sets the phone_mobile of this CustomerAddress.


        :param phone_mobile: The phone_mobile of this CustomerAddress.
        :type phone_mobile: str
        """

        self._phone_mobile = phone_mobile

    @property
    def postcode(self):
        """Gets the postcode of this CustomerAddress.


        :return: The postcode of this CustomerAddress.
        :rtype: str
        """
        return self._postcode

    @postcode.setter
    def postcode(self, postcode):
        """Sets the postcode of this CustomerAddress.


        :param postcode: The postcode of this CustomerAddress.
        :type postcode: str
        """

        self._postcode = postcode

    @property
    def region(self):
        """Gets the region of this CustomerAddress.


        :return: The region of this CustomerAddress.
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this CustomerAddress.


        :param region: The region of this CustomerAddress.
        :type region: str
        """

        self._region = region

    @property
    def state(self):
        """Gets the state of this CustomerAddress.


        :return: The state of this CustomerAddress.
        :rtype: State
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this CustomerAddress.


        :param state: The state of this CustomerAddress.
        :type state: State
        """

        self._state = state

    @property
    def tax_id(self):
        """Gets the tax_id of this CustomerAddress.


        :return: The tax_id of this CustomerAddress.
        :rtype: str
        """
        return self._tax_id

    @tax_id.setter
    def tax_id(self, tax_id):
        """Sets the tax_id of this CustomerAddress.


        :param tax_id: The tax_id of this CustomerAddress.
        :type tax_id: str
        """

        self._tax_id = tax_id

    @property
    def type(self):
        """Gets the type of this CustomerAddress.


        :return: The type of this CustomerAddress.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this CustomerAddress.


        :param type: The type of this CustomerAddress.
        :type type: str
        """

        self._type = type

    @property
    def website(self):
        """Gets the website of this CustomerAddress.


        :return: The website of this CustomerAddress.
        :rtype: str
        """
        return self._website

    @website.setter
    def website(self, website):
        """Sets the website of this CustomerAddress.


        :param website: The website of this CustomerAddress.
        :type website: str
        """

        self._website = website
