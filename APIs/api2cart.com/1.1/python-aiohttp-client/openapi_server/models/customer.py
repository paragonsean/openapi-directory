# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.a2_c_date_time import A2CDateTime
from openapi_server.models.customer_address import CustomerAddress
from openapi_server.models.customer_group import CustomerGroup
from openapi_server import util


class Customer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_fields: object=None, address_book: List[CustomerAddress]=None, birth_day: A2CDateTime=None, company: str=None, created_time: A2CDateTime=None, custom_fields: object=None, email: str=None, fax: str=None, first_name: str=None, gender: str=None, group: List[CustomerGroup]=None, id: str=None, ip_address: str=None, lang_id: str=None, last_login: A2CDateTime=None, last_name: str=None, last_order_id: str=None, login: str=None, modified_time: A2CDateTime=None, news_letter_subscription: bool=None, orders_count: int=None, phone: str=None, status: str=None, stores_ids: List[str]=None, website: str=None):
        """Customer - a model defined in OpenAPI

        :param additional_fields: The additional_fields of this Customer.
        :param address_book: The address_book of this Customer.
        :param birth_day: The birth_day of this Customer.
        :param company: The company of this Customer.
        :param created_time: The created_time of this Customer.
        :param custom_fields: The custom_fields of this Customer.
        :param email: The email of this Customer.
        :param fax: The fax of this Customer.
        :param first_name: The first_name of this Customer.
        :param gender: The gender of this Customer.
        :param group: The group of this Customer.
        :param id: The id of this Customer.
        :param ip_address: The ip_address of this Customer.
        :param lang_id: The lang_id of this Customer.
        :param last_login: The last_login of this Customer.
        :param last_name: The last_name of this Customer.
        :param last_order_id: The last_order_id of this Customer.
        :param login: The login of this Customer.
        :param modified_time: The modified_time of this Customer.
        :param news_letter_subscription: The news_letter_subscription of this Customer.
        :param orders_count: The orders_count of this Customer.
        :param phone: The phone of this Customer.
        :param status: The status of this Customer.
        :param stores_ids: The stores_ids of this Customer.
        :param website: The website of this Customer.
        """
        self.openapi_types = {
            'additional_fields': object,
            'address_book': List[CustomerAddress],
            'birth_day': A2CDateTime,
            'company': str,
            'created_time': A2CDateTime,
            'custom_fields': object,
            'email': str,
            'fax': str,
            'first_name': str,
            'gender': str,
            'group': List[CustomerGroup],
            'id': str,
            'ip_address': str,
            'lang_id': str,
            'last_login': A2CDateTime,
            'last_name': str,
            'last_order_id': str,
            'login': str,
            'modified_time': A2CDateTime,
            'news_letter_subscription': bool,
            'orders_count': int,
            'phone': str,
            'status': str,
            'stores_ids': List[str],
            'website': str
        }

        self.attribute_map = {
            'additional_fields': 'additional_fields',
            'address_book': 'address_book',
            'birth_day': 'birth_day',
            'company': 'company',
            'created_time': 'created_time',
            'custom_fields': 'custom_fields',
            'email': 'email',
            'fax': 'fax',
            'first_name': 'first_name',
            'gender': 'gender',
            'group': 'group',
            'id': 'id',
            'ip_address': 'ip_address',
            'lang_id': 'lang_id',
            'last_login': 'last_login',
            'last_name': 'last_name',
            'last_order_id': 'last_order_id',
            'login': 'login',
            'modified_time': 'modified_time',
            'news_letter_subscription': 'news_letter_subscription',
            'orders_count': 'orders_count',
            'phone': 'phone',
            'status': 'status',
            'stores_ids': 'stores_ids',
            'website': 'website'
        }

        self._additional_fields = additional_fields
        self._address_book = address_book
        self._birth_day = birth_day
        self._company = company
        self._created_time = created_time
        self._custom_fields = custom_fields
        self._email = email
        self._fax = fax
        self._first_name = first_name
        self._gender = gender
        self._group = group
        self._id = id
        self._ip_address = ip_address
        self._lang_id = lang_id
        self._last_login = last_login
        self._last_name = last_name
        self._last_order_id = last_order_id
        self._login = login
        self._modified_time = modified_time
        self._news_letter_subscription = news_letter_subscription
        self._orders_count = orders_count
        self._phone = phone
        self._status = status
        self._stores_ids = stores_ids
        self._website = website

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Customer':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Customer of this Customer.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_fields(self):
        """Gets the additional_fields of this Customer.


        :return: The additional_fields of this Customer.
        :rtype: object
        """
        return self._additional_fields

    @additional_fields.setter
    def additional_fields(self, additional_fields):
        """Sets the additional_fields of this Customer.


        :param additional_fields: The additional_fields of this Customer.
        :type additional_fields: object
        """

        self._additional_fields = additional_fields

    @property
    def address_book(self):
        """Gets the address_book of this Customer.


        :return: The address_book of this Customer.
        :rtype: List[CustomerAddress]
        """
        return self._address_book

    @address_book.setter
    def address_book(self, address_book):
        """Sets the address_book of this Customer.


        :param address_book: The address_book of this Customer.
        :type address_book: List[CustomerAddress]
        """

        self._address_book = address_book

    @property
    def birth_day(self):
        """Gets the birth_day of this Customer.


        :return: The birth_day of this Customer.
        :rtype: A2CDateTime
        """
        return self._birth_day

    @birth_day.setter
    def birth_day(self, birth_day):
        """Sets the birth_day of this Customer.


        :param birth_day: The birth_day of this Customer.
        :type birth_day: A2CDateTime
        """

        self._birth_day = birth_day

    @property
    def company(self):
        """Gets the company of this Customer.


        :return: The company of this Customer.
        :rtype: str
        """
        return self._company

    @company.setter
    def company(self, company):
        """Sets the company of this Customer.


        :param company: The company of this Customer.
        :type company: str
        """

        self._company = company

    @property
    def created_time(self):
        """Gets the created_time of this Customer.


        :return: The created_time of this Customer.
        :rtype: A2CDateTime
        """
        return self._created_time

    @created_time.setter
    def created_time(self, created_time):
        """Sets the created_time of this Customer.


        :param created_time: The created_time of this Customer.
        :type created_time: A2CDateTime
        """

        self._created_time = created_time

    @property
    def custom_fields(self):
        """Gets the custom_fields of this Customer.


        :return: The custom_fields of this Customer.
        :rtype: object
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this Customer.


        :param custom_fields: The custom_fields of this Customer.
        :type custom_fields: object
        """

        self._custom_fields = custom_fields

    @property
    def email(self):
        """Gets the email of this Customer.


        :return: The email of this Customer.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this Customer.


        :param email: The email of this Customer.
        :type email: str
        """

        self._email = email

    @property
    def fax(self):
        """Gets the fax of this Customer.


        :return: The fax of this Customer.
        :rtype: str
        """
        return self._fax

    @fax.setter
    def fax(self, fax):
        """Sets the fax of this Customer.


        :param fax: The fax of this Customer.
        :type fax: str
        """

        self._fax = fax

    @property
    def first_name(self):
        """Gets the first_name of this Customer.


        :return: The first_name of this Customer.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this Customer.


        :param first_name: The first_name of this Customer.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def gender(self):
        """Gets the gender of this Customer.


        :return: The gender of this Customer.
        :rtype: str
        """
        return self._gender

    @gender.setter
    def gender(self, gender):
        """Sets the gender of this Customer.


        :param gender: The gender of this Customer.
        :type gender: str
        """

        self._gender = gender

    @property
    def group(self):
        """Gets the group of this Customer.


        :return: The group of this Customer.
        :rtype: List[CustomerGroup]
        """
        return self._group

    @group.setter
    def group(self, group):
        """Sets the group of this Customer.


        :param group: The group of this Customer.
        :type group: List[CustomerGroup]
        """

        self._group = group

    @property
    def id(self):
        """Gets the id of this Customer.


        :return: The id of this Customer.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Customer.


        :param id: The id of this Customer.
        :type id: str
        """

        self._id = id

    @property
    def ip_address(self):
        """Gets the ip_address of this Customer.


        :return: The ip_address of this Customer.
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address):
        """Sets the ip_address of this Customer.


        :param ip_address: The ip_address of this Customer.
        :type ip_address: str
        """

        self._ip_address = ip_address

    @property
    def lang_id(self):
        """Gets the lang_id of this Customer.


        :return: The lang_id of this Customer.
        :rtype: str
        """
        return self._lang_id

    @lang_id.setter
    def lang_id(self, lang_id):
        """Sets the lang_id of this Customer.


        :param lang_id: The lang_id of this Customer.
        :type lang_id: str
        """

        self._lang_id = lang_id

    @property
    def last_login(self):
        """Gets the last_login of this Customer.


        :return: The last_login of this Customer.
        :rtype: A2CDateTime
        """
        return self._last_login

    @last_login.setter
    def last_login(self, last_login):
        """Sets the last_login of this Customer.


        :param last_login: The last_login of this Customer.
        :type last_login: A2CDateTime
        """

        self._last_login = last_login

    @property
    def last_name(self):
        """Gets the last_name of this Customer.


        :return: The last_name of this Customer.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this Customer.


        :param last_name: The last_name of this Customer.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def last_order_id(self):
        """Gets the last_order_id of this Customer.


        :return: The last_order_id of this Customer.
        :rtype: str
        """
        return self._last_order_id

    @last_order_id.setter
    def last_order_id(self, last_order_id):
        """Sets the last_order_id of this Customer.


        :param last_order_id: The last_order_id of this Customer.
        :type last_order_id: str
        """

        self._last_order_id = last_order_id

    @property
    def login(self):
        """Gets the login of this Customer.


        :return: The login of this Customer.
        :rtype: str
        """
        return self._login

    @login.setter
    def login(self, login):
        """Sets the login of this Customer.


        :param login: The login of this Customer.
        :type login: str
        """

        self._login = login

    @property
    def modified_time(self):
        """Gets the modified_time of this Customer.


        :return: The modified_time of this Customer.
        :rtype: A2CDateTime
        """
        return self._modified_time

    @modified_time.setter
    def modified_time(self, modified_time):
        """Sets the modified_time of this Customer.


        :param modified_time: The modified_time of this Customer.
        :type modified_time: A2CDateTime
        """

        self._modified_time = modified_time

    @property
    def news_letter_subscription(self):
        """Gets the news_letter_subscription of this Customer.


        :return: The news_letter_subscription of this Customer.
        :rtype: bool
        """
        return self._news_letter_subscription

    @news_letter_subscription.setter
    def news_letter_subscription(self, news_letter_subscription):
        """Sets the news_letter_subscription of this Customer.


        :param news_letter_subscription: The news_letter_subscription of this Customer.
        :type news_letter_subscription: bool
        """

        self._news_letter_subscription = news_letter_subscription

    @property
    def orders_count(self):
        """Gets the orders_count of this Customer.


        :return: The orders_count of this Customer.
        :rtype: int
        """
        return self._orders_count

    @orders_count.setter
    def orders_count(self, orders_count):
        """Sets the orders_count of this Customer.


        :param orders_count: The orders_count of this Customer.
        :type orders_count: int
        """

        self._orders_count = orders_count

    @property
    def phone(self):
        """Gets the phone of this Customer.


        :return: The phone of this Customer.
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone):
        """Sets the phone of this Customer.


        :param phone: The phone of this Customer.
        :type phone: str
        """

        self._phone = phone

    @property
    def status(self):
        """Gets the status of this Customer.


        :return: The status of this Customer.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Customer.


        :param status: The status of this Customer.
        :type status: str
        """

        self._status = status

    @property
    def stores_ids(self):
        """Gets the stores_ids of this Customer.


        :return: The stores_ids of this Customer.
        :rtype: List[str]
        """
        return self._stores_ids

    @stores_ids.setter
    def stores_ids(self, stores_ids):
        """Sets the stores_ids of this Customer.


        :param stores_ids: The stores_ids of this Customer.
        :type stores_ids: List[str]
        """

        self._stores_ids = stores_ids

    @property
    def website(self):
        """Gets the website of this Customer.


        :return: The website of this Customer.
        :rtype: str
        """
        return self._website

    @website.setter
    def website(self, website):
        """Sets the website of this Customer.


        :param website: The website of this Customer.
        :type website: str
        """

        self._website = website
