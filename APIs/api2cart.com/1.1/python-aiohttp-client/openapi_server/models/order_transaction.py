# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.a2_c_date_time import A2CDateTime
from openapi_server import util


class OrderTransaction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_fields: object=None, amount: float=None, avs_message: str=None, avs_postal_resp_code: str=None, avs_street_resp_code: str=None, card_bin: str=None, card_brand: str=None, card_last_four: str=None, created_time: A2CDateTime=None, currency: str=None, custom_fields: object=None, cvv_code: str=None, cvv_message: str=None, description: str=None, gateway: str=None, id: str=None, is_test_mode: bool=None, order_id: str=None, parent_id: str=None, reference_number: str=None, settlement_amount: float=None, settlement_created_time: A2CDateTime=None, settlement_currency: str=None, status: str=None, transaction_id: str=None):
        """OrderTransaction - a model defined in OpenAPI

        :param additional_fields: The additional_fields of this OrderTransaction.
        :param amount: The amount of this OrderTransaction.
        :param avs_message: The avs_message of this OrderTransaction.
        :param avs_postal_resp_code: The avs_postal_resp_code of this OrderTransaction.
        :param avs_street_resp_code: The avs_street_resp_code of this OrderTransaction.
        :param card_bin: The card_bin of this OrderTransaction.
        :param card_brand: The card_brand of this OrderTransaction.
        :param card_last_four: The card_last_four of this OrderTransaction.
        :param created_time: The created_time of this OrderTransaction.
        :param currency: The currency of this OrderTransaction.
        :param custom_fields: The custom_fields of this OrderTransaction.
        :param cvv_code: The cvv_code of this OrderTransaction.
        :param cvv_message: The cvv_message of this OrderTransaction.
        :param description: The description of this OrderTransaction.
        :param gateway: The gateway of this OrderTransaction.
        :param id: The id of this OrderTransaction.
        :param is_test_mode: The is_test_mode of this OrderTransaction.
        :param order_id: The order_id of this OrderTransaction.
        :param parent_id: The parent_id of this OrderTransaction.
        :param reference_number: The reference_number of this OrderTransaction.
        :param settlement_amount: The settlement_amount of this OrderTransaction.
        :param settlement_created_time: The settlement_created_time of this OrderTransaction.
        :param settlement_currency: The settlement_currency of this OrderTransaction.
        :param status: The status of this OrderTransaction.
        :param transaction_id: The transaction_id of this OrderTransaction.
        """
        self.openapi_types = {
            'additional_fields': object,
            'amount': float,
            'avs_message': str,
            'avs_postal_resp_code': str,
            'avs_street_resp_code': str,
            'card_bin': str,
            'card_brand': str,
            'card_last_four': str,
            'created_time': A2CDateTime,
            'currency': str,
            'custom_fields': object,
            'cvv_code': str,
            'cvv_message': str,
            'description': str,
            'gateway': str,
            'id': str,
            'is_test_mode': bool,
            'order_id': str,
            'parent_id': str,
            'reference_number': str,
            'settlement_amount': float,
            'settlement_created_time': A2CDateTime,
            'settlement_currency': str,
            'status': str,
            'transaction_id': str
        }

        self.attribute_map = {
            'additional_fields': 'additional_fields',
            'amount': 'amount',
            'avs_message': 'avs_message',
            'avs_postal_resp_code': 'avs_postal_resp_code',
            'avs_street_resp_code': 'avs_street_resp_code',
            'card_bin': 'card_bin',
            'card_brand': 'card_brand',
            'card_last_four': 'card_last_four',
            'created_time': 'created_time',
            'currency': 'currency',
            'custom_fields': 'custom_fields',
            'cvv_code': 'cvv_code',
            'cvv_message': 'cvv_message',
            'description': 'description',
            'gateway': 'gateway',
            'id': 'id',
            'is_test_mode': 'is_test_mode',
            'order_id': 'order_id',
            'parent_id': 'parent_id',
            'reference_number': 'reference_number',
            'settlement_amount': 'settlement_amount',
            'settlement_created_time': 'settlement_created_time',
            'settlement_currency': 'settlement_currency',
            'status': 'status',
            'transaction_id': 'transaction_id'
        }

        self._additional_fields = additional_fields
        self._amount = amount
        self._avs_message = avs_message
        self._avs_postal_resp_code = avs_postal_resp_code
        self._avs_street_resp_code = avs_street_resp_code
        self._card_bin = card_bin
        self._card_brand = card_brand
        self._card_last_four = card_last_four
        self._created_time = created_time
        self._currency = currency
        self._custom_fields = custom_fields
        self._cvv_code = cvv_code
        self._cvv_message = cvv_message
        self._description = description
        self._gateway = gateway
        self._id = id
        self._is_test_mode = is_test_mode
        self._order_id = order_id
        self._parent_id = parent_id
        self._reference_number = reference_number
        self._settlement_amount = settlement_amount
        self._settlement_created_time = settlement_created_time
        self._settlement_currency = settlement_currency
        self._status = status
        self._transaction_id = transaction_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderTransaction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Order_Transaction of this OrderTransaction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_fields(self):
        """Gets the additional_fields of this OrderTransaction.


        :return: The additional_fields of this OrderTransaction.
        :rtype: object
        """
        return self._additional_fields

    @additional_fields.setter
    def additional_fields(self, additional_fields):
        """Sets the additional_fields of this OrderTransaction.


        :param additional_fields: The additional_fields of this OrderTransaction.
        :type additional_fields: object
        """

        self._additional_fields = additional_fields

    @property
    def amount(self):
        """Gets the amount of this OrderTransaction.


        :return: The amount of this OrderTransaction.
        :rtype: float
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this OrderTransaction.


        :param amount: The amount of this OrderTransaction.
        :type amount: float
        """

        self._amount = amount

    @property
    def avs_message(self):
        """Gets the avs_message of this OrderTransaction.


        :return: The avs_message of this OrderTransaction.
        :rtype: str
        """
        return self._avs_message

    @avs_message.setter
    def avs_message(self, avs_message):
        """Sets the avs_message of this OrderTransaction.


        :param avs_message: The avs_message of this OrderTransaction.
        :type avs_message: str
        """

        self._avs_message = avs_message

    @property
    def avs_postal_resp_code(self):
        """Gets the avs_postal_resp_code of this OrderTransaction.


        :return: The avs_postal_resp_code of this OrderTransaction.
        :rtype: str
        """
        return self._avs_postal_resp_code

    @avs_postal_resp_code.setter
    def avs_postal_resp_code(self, avs_postal_resp_code):
        """Sets the avs_postal_resp_code of this OrderTransaction.


        :param avs_postal_resp_code: The avs_postal_resp_code of this OrderTransaction.
        :type avs_postal_resp_code: str
        """

        self._avs_postal_resp_code = avs_postal_resp_code

    @property
    def avs_street_resp_code(self):
        """Gets the avs_street_resp_code of this OrderTransaction.


        :return: The avs_street_resp_code of this OrderTransaction.
        :rtype: str
        """
        return self._avs_street_resp_code

    @avs_street_resp_code.setter
    def avs_street_resp_code(self, avs_street_resp_code):
        """Sets the avs_street_resp_code of this OrderTransaction.


        :param avs_street_resp_code: The avs_street_resp_code of this OrderTransaction.
        :type avs_street_resp_code: str
        """

        self._avs_street_resp_code = avs_street_resp_code

    @property
    def card_bin(self):
        """Gets the card_bin of this OrderTransaction.


        :return: The card_bin of this OrderTransaction.
        :rtype: str
        """
        return self._card_bin

    @card_bin.setter
    def card_bin(self, card_bin):
        """Sets the card_bin of this OrderTransaction.


        :param card_bin: The card_bin of this OrderTransaction.
        :type card_bin: str
        """

        self._card_bin = card_bin

    @property
    def card_brand(self):
        """Gets the card_brand of this OrderTransaction.


        :return: The card_brand of this OrderTransaction.
        :rtype: str
        """
        return self._card_brand

    @card_brand.setter
    def card_brand(self, card_brand):
        """Sets the card_brand of this OrderTransaction.


        :param card_brand: The card_brand of this OrderTransaction.
        :type card_brand: str
        """

        self._card_brand = card_brand

    @property
    def card_last_four(self):
        """Gets the card_last_four of this OrderTransaction.


        :return: The card_last_four of this OrderTransaction.
        :rtype: str
        """
        return self._card_last_four

    @card_last_four.setter
    def card_last_four(self, card_last_four):
        """Sets the card_last_four of this OrderTransaction.


        :param card_last_four: The card_last_four of this OrderTransaction.
        :type card_last_four: str
        """

        self._card_last_four = card_last_four

    @property
    def created_time(self):
        """Gets the created_time of this OrderTransaction.


        :return: The created_time of this OrderTransaction.
        :rtype: A2CDateTime
        """
        return self._created_time

    @created_time.setter
    def created_time(self, created_time):
        """Sets the created_time of this OrderTransaction.


        :param created_time: The created_time of this OrderTransaction.
        :type created_time: A2CDateTime
        """

        self._created_time = created_time

    @property
    def currency(self):
        """Gets the currency of this OrderTransaction.


        :return: The currency of this OrderTransaction.
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this OrderTransaction.


        :param currency: The currency of this OrderTransaction.
        :type currency: str
        """

        self._currency = currency

    @property
    def custom_fields(self):
        """Gets the custom_fields of this OrderTransaction.


        :return: The custom_fields of this OrderTransaction.
        :rtype: object
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this OrderTransaction.


        :param custom_fields: The custom_fields of this OrderTransaction.
        :type custom_fields: object
        """

        self._custom_fields = custom_fields

    @property
    def cvv_code(self):
        """Gets the cvv_code of this OrderTransaction.


        :return: The cvv_code of this OrderTransaction.
        :rtype: str
        """
        return self._cvv_code

    @cvv_code.setter
    def cvv_code(self, cvv_code):
        """Sets the cvv_code of this OrderTransaction.


        :param cvv_code: The cvv_code of this OrderTransaction.
        :type cvv_code: str
        """

        self._cvv_code = cvv_code

    @property
    def cvv_message(self):
        """Gets the cvv_message of this OrderTransaction.


        :return: The cvv_message of this OrderTransaction.
        :rtype: str
        """
        return self._cvv_message

    @cvv_message.setter
    def cvv_message(self, cvv_message):
        """Sets the cvv_message of this OrderTransaction.


        :param cvv_message: The cvv_message of this OrderTransaction.
        :type cvv_message: str
        """

        self._cvv_message = cvv_message

    @property
    def description(self):
        """Gets the description of this OrderTransaction.


        :return: The description of this OrderTransaction.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this OrderTransaction.


        :param description: The description of this OrderTransaction.
        :type description: str
        """

        self._description = description

    @property
    def gateway(self):
        """Gets the gateway of this OrderTransaction.


        :return: The gateway of this OrderTransaction.
        :rtype: str
        """
        return self._gateway

    @gateway.setter
    def gateway(self, gateway):
        """Sets the gateway of this OrderTransaction.


        :param gateway: The gateway of this OrderTransaction.
        :type gateway: str
        """

        self._gateway = gateway

    @property
    def id(self):
        """Gets the id of this OrderTransaction.


        :return: The id of this OrderTransaction.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this OrderTransaction.


        :param id: The id of this OrderTransaction.
        :type id: str
        """

        self._id = id

    @property
    def is_test_mode(self):
        """Gets the is_test_mode of this OrderTransaction.


        :return: The is_test_mode of this OrderTransaction.
        :rtype: bool
        """
        return self._is_test_mode

    @is_test_mode.setter
    def is_test_mode(self, is_test_mode):
        """Sets the is_test_mode of this OrderTransaction.


        :param is_test_mode: The is_test_mode of this OrderTransaction.
        :type is_test_mode: bool
        """

        self._is_test_mode = is_test_mode

    @property
    def order_id(self):
        """Gets the order_id of this OrderTransaction.


        :return: The order_id of this OrderTransaction.
        :rtype: str
        """
        return self._order_id

    @order_id.setter
    def order_id(self, order_id):
        """Sets the order_id of this OrderTransaction.


        :param order_id: The order_id of this OrderTransaction.
        :type order_id: str
        """

        self._order_id = order_id

    @property
    def parent_id(self):
        """Gets the parent_id of this OrderTransaction.


        :return: The parent_id of this OrderTransaction.
        :rtype: str
        """
        return self._parent_id

    @parent_id.setter
    def parent_id(self, parent_id):
        """Sets the parent_id of this OrderTransaction.


        :param parent_id: The parent_id of this OrderTransaction.
        :type parent_id: str
        """

        self._parent_id = parent_id

    @property
    def reference_number(self):
        """Gets the reference_number of this OrderTransaction.


        :return: The reference_number of this OrderTransaction.
        :rtype: str
        """
        return self._reference_number

    @reference_number.setter
    def reference_number(self, reference_number):
        """Sets the reference_number of this OrderTransaction.


        :param reference_number: The reference_number of this OrderTransaction.
        :type reference_number: str
        """

        self._reference_number = reference_number

    @property
    def settlement_amount(self):
        """Gets the settlement_amount of this OrderTransaction.


        :return: The settlement_amount of this OrderTransaction.
        :rtype: float
        """
        return self._settlement_amount

    @settlement_amount.setter
    def settlement_amount(self, settlement_amount):
        """Sets the settlement_amount of this OrderTransaction.


        :param settlement_amount: The settlement_amount of this OrderTransaction.
        :type settlement_amount: float
        """

        self._settlement_amount = settlement_amount

    @property
    def settlement_created_time(self):
        """Gets the settlement_created_time of this OrderTransaction.


        :return: The settlement_created_time of this OrderTransaction.
        :rtype: A2CDateTime
        """
        return self._settlement_created_time

    @settlement_created_time.setter
    def settlement_created_time(self, settlement_created_time):
        """Sets the settlement_created_time of this OrderTransaction.


        :param settlement_created_time: The settlement_created_time of this OrderTransaction.
        :type settlement_created_time: A2CDateTime
        """

        self._settlement_created_time = settlement_created_time

    @property
    def settlement_currency(self):
        """Gets the settlement_currency of this OrderTransaction.


        :return: The settlement_currency of this OrderTransaction.
        :rtype: str
        """
        return self._settlement_currency

    @settlement_currency.setter
    def settlement_currency(self, settlement_currency):
        """Sets the settlement_currency of this OrderTransaction.


        :param settlement_currency: The settlement_currency of this OrderTransaction.
        :type settlement_currency: str
        """

        self._settlement_currency = settlement_currency

    @property
    def status(self):
        """Gets the status of this OrderTransaction.


        :return: The status of this OrderTransaction.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this OrderTransaction.


        :param status: The status of this OrderTransaction.
        :type status: str
        """

        self._status = status

    @property
    def transaction_id(self):
        """Gets the transaction_id of this OrderTransaction.


        :return: The transaction_id of this OrderTransaction.
        :rtype: str
        """
        return self._transaction_id

    @transaction_id.setter
    def transaction_id(self, transaction_id):
        """Sets the transaction_id of this OrderTransaction.


        :param transaction_id: The transaction_id of this OrderTransaction.
        :type transaction_id: str
        """

        self._transaction_id = transaction_id
