# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.a2_c_date_time import A2CDateTime
from openapi_server.models.base_customer import BaseCustomer
from openapi_server.models.currency import Currency
from openapi_server.models.customer_address import CustomerAddress
from openapi_server.models.order_item import OrderItem
from openapi_server.models.order_payment_method import OrderPaymentMethod
from openapi_server.models.order_refund import OrderRefund
from openapi_server.models.order_shipping_method import OrderShippingMethod
from openapi_server.models.order_status import OrderStatus
from openapi_server.models.order_total import OrderTotal
from openapi_server.models.order_totals import OrderTotals
from openapi_server.models.order_totals_new_discount import OrderTotalsNewDiscount
from openapi_server import util


class Order(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_fields: object=None, basket_id: str=None, billing_address: CustomerAddress=None, bundles: List[OrderItem]=None, channel_id: str=None, comment: str=None, create_at: A2CDateTime=None, currency: Currency=None, custom_fields: object=None, customer: BaseCustomer=None, discounts: List[OrderTotalsNewDiscount]=None, finished_time: A2CDateTime=None, gift_message: str=None, id: str=None, modified_at: A2CDateTime=None, order_details_url: str=None, order_id: str=None, order_products: List[OrderItem]=None, payment_method: OrderPaymentMethod=None, refunds: List[OrderRefund]=None, shipping_address: CustomerAddress=None, shipping_method: OrderShippingMethod=None, shipping_methods: List[OrderShippingMethod]=None, status: OrderStatus=None, store_id: str=None, total: OrderTotal=None, totals: OrderTotals=None, warehouses_ids: List[str]=None):
        """Order - a model defined in OpenAPI

        :param additional_fields: The additional_fields of this Order.
        :param basket_id: The basket_id of this Order.
        :param billing_address: The billing_address of this Order.
        :param bundles: The bundles of this Order.
        :param channel_id: The channel_id of this Order.
        :param comment: The comment of this Order.
        :param create_at: The create_at of this Order.
        :param currency: The currency of this Order.
        :param custom_fields: The custom_fields of this Order.
        :param customer: The customer of this Order.
        :param discounts: The discounts of this Order.
        :param finished_time: The finished_time of this Order.
        :param gift_message: The gift_message of this Order.
        :param id: The id of this Order.
        :param modified_at: The modified_at of this Order.
        :param order_details_url: The order_details_url of this Order.
        :param order_id: The order_id of this Order.
        :param order_products: The order_products of this Order.
        :param payment_method: The payment_method of this Order.
        :param refunds: The refunds of this Order.
        :param shipping_address: The shipping_address of this Order.
        :param shipping_method: The shipping_method of this Order.
        :param shipping_methods: The shipping_methods of this Order.
        :param status: The status of this Order.
        :param store_id: The store_id of this Order.
        :param total: The total of this Order.
        :param totals: The totals of this Order.
        :param warehouses_ids: The warehouses_ids of this Order.
        """
        self.openapi_types = {
            'additional_fields': object,
            'basket_id': str,
            'billing_address': CustomerAddress,
            'bundles': List[OrderItem],
            'channel_id': str,
            'comment': str,
            'create_at': A2CDateTime,
            'currency': Currency,
            'custom_fields': object,
            'customer': BaseCustomer,
            'discounts': List[OrderTotalsNewDiscount],
            'finished_time': A2CDateTime,
            'gift_message': str,
            'id': str,
            'modified_at': A2CDateTime,
            'order_details_url': str,
            'order_id': str,
            'order_products': List[OrderItem],
            'payment_method': OrderPaymentMethod,
            'refunds': List[OrderRefund],
            'shipping_address': CustomerAddress,
            'shipping_method': OrderShippingMethod,
            'shipping_methods': List[OrderShippingMethod],
            'status': OrderStatus,
            'store_id': str,
            'total': OrderTotal,
            'totals': OrderTotals,
            'warehouses_ids': List[str]
        }

        self.attribute_map = {
            'additional_fields': 'additional_fields',
            'basket_id': 'basket_id',
            'billing_address': 'billing_address',
            'bundles': 'bundles',
            'channel_id': 'channel_id',
            'comment': 'comment',
            'create_at': 'create_at',
            'currency': 'currency',
            'custom_fields': 'custom_fields',
            'customer': 'customer',
            'discounts': 'discounts',
            'finished_time': 'finished_time',
            'gift_message': 'gift_message',
            'id': 'id',
            'modified_at': 'modified_at',
            'order_details_url': 'order_details_url',
            'order_id': 'order_id',
            'order_products': 'order_products',
            'payment_method': 'payment_method',
            'refunds': 'refunds',
            'shipping_address': 'shipping_address',
            'shipping_method': 'shipping_method',
            'shipping_methods': 'shipping_methods',
            'status': 'status',
            'store_id': 'store_id',
            'total': 'total',
            'totals': 'totals',
            'warehouses_ids': 'warehouses_ids'
        }

        self._additional_fields = additional_fields
        self._basket_id = basket_id
        self._billing_address = billing_address
        self._bundles = bundles
        self._channel_id = channel_id
        self._comment = comment
        self._create_at = create_at
        self._currency = currency
        self._custom_fields = custom_fields
        self._customer = customer
        self._discounts = discounts
        self._finished_time = finished_time
        self._gift_message = gift_message
        self._id = id
        self._modified_at = modified_at
        self._order_details_url = order_details_url
        self._order_id = order_id
        self._order_products = order_products
        self._payment_method = payment_method
        self._refunds = refunds
        self._shipping_address = shipping_address
        self._shipping_method = shipping_method
        self._shipping_methods = shipping_methods
        self._status = status
        self._store_id = store_id
        self._total = total
        self._totals = totals
        self._warehouses_ids = warehouses_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Order':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Order of this Order.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_fields(self):
        """Gets the additional_fields of this Order.


        :return: The additional_fields of this Order.
        :rtype: object
        """
        return self._additional_fields

    @additional_fields.setter
    def additional_fields(self, additional_fields):
        """Sets the additional_fields of this Order.


        :param additional_fields: The additional_fields of this Order.
        :type additional_fields: object
        """

        self._additional_fields = additional_fields

    @property
    def basket_id(self):
        """Gets the basket_id of this Order.


        :return: The basket_id of this Order.
        :rtype: str
        """
        return self._basket_id

    @basket_id.setter
    def basket_id(self, basket_id):
        """Sets the basket_id of this Order.


        :param basket_id: The basket_id of this Order.
        :type basket_id: str
        """

        self._basket_id = basket_id

    @property
    def billing_address(self):
        """Gets the billing_address of this Order.


        :return: The billing_address of this Order.
        :rtype: CustomerAddress
        """
        return self._billing_address

    @billing_address.setter
    def billing_address(self, billing_address):
        """Sets the billing_address of this Order.


        :param billing_address: The billing_address of this Order.
        :type billing_address: CustomerAddress
        """

        self._billing_address = billing_address

    @property
    def bundles(self):
        """Gets the bundles of this Order.


        :return: The bundles of this Order.
        :rtype: List[OrderItem]
        """
        return self._bundles

    @bundles.setter
    def bundles(self, bundles):
        """Sets the bundles of this Order.


        :param bundles: The bundles of this Order.
        :type bundles: List[OrderItem]
        """

        self._bundles = bundles

    @property
    def channel_id(self):
        """Gets the channel_id of this Order.


        :return: The channel_id of this Order.
        :rtype: str
        """
        return self._channel_id

    @channel_id.setter
    def channel_id(self, channel_id):
        """Sets the channel_id of this Order.


        :param channel_id: The channel_id of this Order.
        :type channel_id: str
        """

        self._channel_id = channel_id

    @property
    def comment(self):
        """Gets the comment of this Order.


        :return: The comment of this Order.
        :rtype: str
        """
        return self._comment

    @comment.setter
    def comment(self, comment):
        """Sets the comment of this Order.


        :param comment: The comment of this Order.
        :type comment: str
        """

        self._comment = comment

    @property
    def create_at(self):
        """Gets the create_at of this Order.


        :return: The create_at of this Order.
        :rtype: A2CDateTime
        """
        return self._create_at

    @create_at.setter
    def create_at(self, create_at):
        """Sets the create_at of this Order.


        :param create_at: The create_at of this Order.
        :type create_at: A2CDateTime
        """

        self._create_at = create_at

    @property
    def currency(self):
        """Gets the currency of this Order.


        :return: The currency of this Order.
        :rtype: Currency
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this Order.


        :param currency: The currency of this Order.
        :type currency: Currency
        """

        self._currency = currency

    @property
    def custom_fields(self):
        """Gets the custom_fields of this Order.


        :return: The custom_fields of this Order.
        :rtype: object
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this Order.


        :param custom_fields: The custom_fields of this Order.
        :type custom_fields: object
        """

        self._custom_fields = custom_fields

    @property
    def customer(self):
        """Gets the customer of this Order.


        :return: The customer of this Order.
        :rtype: BaseCustomer
        """
        return self._customer

    @customer.setter
    def customer(self, customer):
        """Sets the customer of this Order.


        :param customer: The customer of this Order.
        :type customer: BaseCustomer
        """

        self._customer = customer

    @property
    def discounts(self):
        """Gets the discounts of this Order.


        :return: The discounts of this Order.
        :rtype: List[OrderTotalsNewDiscount]
        """
        return self._discounts

    @discounts.setter
    def discounts(self, discounts):
        """Sets the discounts of this Order.


        :param discounts: The discounts of this Order.
        :type discounts: List[OrderTotalsNewDiscount]
        """

        self._discounts = discounts

    @property
    def finished_time(self):
        """Gets the finished_time of this Order.


        :return: The finished_time of this Order.
        :rtype: A2CDateTime
        """
        return self._finished_time

    @finished_time.setter
    def finished_time(self, finished_time):
        """Sets the finished_time of this Order.


        :param finished_time: The finished_time of this Order.
        :type finished_time: A2CDateTime
        """

        self._finished_time = finished_time

    @property
    def gift_message(self):
        """Gets the gift_message of this Order.


        :return: The gift_message of this Order.
        :rtype: str
        """
        return self._gift_message

    @gift_message.setter
    def gift_message(self, gift_message):
        """Sets the gift_message of this Order.


        :param gift_message: The gift_message of this Order.
        :type gift_message: str
        """

        self._gift_message = gift_message

    @property
    def id(self):
        """Gets the id of this Order.


        :return: The id of this Order.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Order.


        :param id: The id of this Order.
        :type id: str
        """

        self._id = id

    @property
    def modified_at(self):
        """Gets the modified_at of this Order.


        :return: The modified_at of this Order.
        :rtype: A2CDateTime
        """
        return self._modified_at

    @modified_at.setter
    def modified_at(self, modified_at):
        """Sets the modified_at of this Order.


        :param modified_at: The modified_at of this Order.
        :type modified_at: A2CDateTime
        """

        self._modified_at = modified_at

    @property
    def order_details_url(self):
        """Gets the order_details_url of this Order.


        :return: The order_details_url of this Order.
        :rtype: str
        """
        return self._order_details_url

    @order_details_url.setter
    def order_details_url(self, order_details_url):
        """Sets the order_details_url of this Order.


        :param order_details_url: The order_details_url of this Order.
        :type order_details_url: str
        """

        self._order_details_url = order_details_url

    @property
    def order_id(self):
        """Gets the order_id of this Order.


        :return: The order_id of this Order.
        :rtype: str
        """
        return self._order_id

    @order_id.setter
    def order_id(self, order_id):
        """Sets the order_id of this Order.


        :param order_id: The order_id of this Order.
        :type order_id: str
        """

        self._order_id = order_id

    @property
    def order_products(self):
        """Gets the order_products of this Order.


        :return: The order_products of this Order.
        :rtype: List[OrderItem]
        """
        return self._order_products

    @order_products.setter
    def order_products(self, order_products):
        """Sets the order_products of this Order.


        :param order_products: The order_products of this Order.
        :type order_products: List[OrderItem]
        """

        self._order_products = order_products

    @property
    def payment_method(self):
        """Gets the payment_method of this Order.


        :return: The payment_method of this Order.
        :rtype: OrderPaymentMethod
        """
        return self._payment_method

    @payment_method.setter
    def payment_method(self, payment_method):
        """Sets the payment_method of this Order.


        :param payment_method: The payment_method of this Order.
        :type payment_method: OrderPaymentMethod
        """

        self._payment_method = payment_method

    @property
    def refunds(self):
        """Gets the refunds of this Order.


        :return: The refunds of this Order.
        :rtype: List[OrderRefund]
        """
        return self._refunds

    @refunds.setter
    def refunds(self, refunds):
        """Sets the refunds of this Order.


        :param refunds: The refunds of this Order.
        :type refunds: List[OrderRefund]
        """

        self._refunds = refunds

    @property
    def shipping_address(self):
        """Gets the shipping_address of this Order.


        :return: The shipping_address of this Order.
        :rtype: CustomerAddress
        """
        return self._shipping_address

    @shipping_address.setter
    def shipping_address(self, shipping_address):
        """Sets the shipping_address of this Order.


        :param shipping_address: The shipping_address of this Order.
        :type shipping_address: CustomerAddress
        """

        self._shipping_address = shipping_address

    @property
    def shipping_method(self):
        """Gets the shipping_method of this Order.


        :return: The shipping_method of this Order.
        :rtype: OrderShippingMethod
        """
        return self._shipping_method

    @shipping_method.setter
    def shipping_method(self, shipping_method):
        """Sets the shipping_method of this Order.


        :param shipping_method: The shipping_method of this Order.
        :type shipping_method: OrderShippingMethod
        """

        self._shipping_method = shipping_method

    @property
    def shipping_methods(self):
        """Gets the shipping_methods of this Order.


        :return: The shipping_methods of this Order.
        :rtype: List[OrderShippingMethod]
        """
        return self._shipping_methods

    @shipping_methods.setter
    def shipping_methods(self, shipping_methods):
        """Sets the shipping_methods of this Order.


        :param shipping_methods: The shipping_methods of this Order.
        :type shipping_methods: List[OrderShippingMethod]
        """

        self._shipping_methods = shipping_methods

    @property
    def status(self):
        """Gets the status of this Order.


        :return: The status of this Order.
        :rtype: OrderStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Order.


        :param status: The status of this Order.
        :type status: OrderStatus
        """

        self._status = status

    @property
    def store_id(self):
        """Gets the store_id of this Order.


        :return: The store_id of this Order.
        :rtype: str
        """
        return self._store_id

    @store_id.setter
    def store_id(self, store_id):
        """Sets the store_id of this Order.


        :param store_id: The store_id of this Order.
        :type store_id: str
        """

        self._store_id = store_id

    @property
    def total(self):
        """Gets the total of this Order.


        :return: The total of this Order.
        :rtype: OrderTotal
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this Order.


        :param total: The total of this Order.
        :type total: OrderTotal
        """

        self._total = total

    @property
    def totals(self):
        """Gets the totals of this Order.


        :return: The totals of this Order.
        :rtype: OrderTotals
        """
        return self._totals

    @totals.setter
    def totals(self, totals):
        """Sets the totals of this Order.


        :param totals: The totals of this Order.
        :type totals: OrderTotals
        """

        self._totals = totals

    @property
    def warehouses_ids(self):
        """Gets the warehouses_ids of this Order.


        :return: The warehouses_ids of this Order.
        :rtype: List[str]
        """
        return self._warehouses_ids

    @warehouses_ids.setter
    def warehouses_ids(self, warehouses_ids):
        """Sets the warehouses_ids of this Order.


        :param warehouses_ids: The warehouses_ids of this Order.
        :type warehouses_ids: List[str]
        """

        self._warehouses_ids = warehouses_ids
