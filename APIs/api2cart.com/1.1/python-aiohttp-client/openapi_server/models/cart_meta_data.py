# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CartMetaData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_fields: object=None, custom_fields: object=None, id: str=None, key: str=None, namespace: str=None, value: str=None):
        """CartMetaData - a model defined in OpenAPI

        :param additional_fields: The additional_fields of this CartMetaData.
        :param custom_fields: The custom_fields of this CartMetaData.
        :param id: The id of this CartMetaData.
        :param key: The key of this CartMetaData.
        :param namespace: The namespace of this CartMetaData.
        :param value: The value of this CartMetaData.
        """
        self.openapi_types = {
            'additional_fields': object,
            'custom_fields': object,
            'id': str,
            'key': str,
            'namespace': str,
            'value': str
        }

        self.attribute_map = {
            'additional_fields': 'additional_fields',
            'custom_fields': 'custom_fields',
            'id': 'id',
            'key': 'key',
            'namespace': 'namespace',
            'value': 'value'
        }

        self._additional_fields = additional_fields
        self._custom_fields = custom_fields
        self._id = id
        self._key = key
        self._namespace = namespace
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CartMetaData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Cart_MetaData of this CartMetaData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_fields(self):
        """Gets the additional_fields of this CartMetaData.


        :return: The additional_fields of this CartMetaData.
        :rtype: object
        """
        return self._additional_fields

    @additional_fields.setter
    def additional_fields(self, additional_fields):
        """Sets the additional_fields of this CartMetaData.


        :param additional_fields: The additional_fields of this CartMetaData.
        :type additional_fields: object
        """

        self._additional_fields = additional_fields

    @property
    def custom_fields(self):
        """Gets the custom_fields of this CartMetaData.


        :return: The custom_fields of this CartMetaData.
        :rtype: object
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this CartMetaData.


        :param custom_fields: The custom_fields of this CartMetaData.
        :type custom_fields: object
        """

        self._custom_fields = custom_fields

    @property
    def id(self):
        """Gets the id of this CartMetaData.


        :return: The id of this CartMetaData.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CartMetaData.


        :param id: The id of this CartMetaData.
        :type id: str
        """

        self._id = id

    @property
    def key(self):
        """Gets the key of this CartMetaData.


        :return: The key of this CartMetaData.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this CartMetaData.


        :param key: The key of this CartMetaData.
        :type key: str
        """

        self._key = key

    @property
    def namespace(self):
        """Gets the namespace of this CartMetaData.


        :return: The namespace of this CartMetaData.
        :rtype: str
        """
        return self._namespace

    @namespace.setter
    def namespace(self, namespace):
        """Sets the namespace of this CartMetaData.


        :param namespace: The namespace of this CartMetaData.
        :type namespace: str
        """

        self._namespace = namespace

    @property
    def value(self):
        """Gets the value of this CartMetaData.


        :return: The value of this CartMetaData.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this CartMetaData.


        :param value: The value of this CartMetaData.
        :type value: str
        """

        self._value = value
