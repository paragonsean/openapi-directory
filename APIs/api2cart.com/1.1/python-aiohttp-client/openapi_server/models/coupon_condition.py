# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CouponCondition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_fields: object=None, custom_fields: object=None, entity: str=None, id: str=None, key: str=None, logic_operator: str=None, match_items: str=None, operator: str=None, sub_conditions: List[CouponCondition]=None, value: str=None):
        """CouponCondition - a model defined in OpenAPI

        :param additional_fields: The additional_fields of this CouponCondition.
        :param custom_fields: The custom_fields of this CouponCondition.
        :param entity: The entity of this CouponCondition.
        :param id: The id of this CouponCondition.
        :param key: The key of this CouponCondition.
        :param logic_operator: The logic_operator of this CouponCondition.
        :param match_items: The match_items of this CouponCondition.
        :param operator: The operator of this CouponCondition.
        :param sub_conditions: The sub_conditions of this CouponCondition.
        :param value: The value of this CouponCondition.
        """
        self.openapi_types = {
            'additional_fields': object,
            'custom_fields': object,
            'entity': str,
            'id': str,
            'key': str,
            'logic_operator': str,
            'match_items': str,
            'operator': str,
            'sub_conditions': List[CouponCondition],
            'value': str
        }

        self.attribute_map = {
            'additional_fields': 'additional_fields',
            'custom_fields': 'custom_fields',
            'entity': 'entity',
            'id': 'id',
            'key': 'key',
            'logic_operator': 'logic_operator',
            'match_items': 'match_items',
            'operator': 'operator',
            'sub_conditions': 'sub-conditions',
            'value': 'value'
        }

        self._additional_fields = additional_fields
        self._custom_fields = custom_fields
        self._entity = entity
        self._id = id
        self._key = key
        self._logic_operator = logic_operator
        self._match_items = match_items
        self._operator = operator
        self._sub_conditions = sub_conditions
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CouponCondition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Coupon_Condition of this CouponCondition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_fields(self):
        """Gets the additional_fields of this CouponCondition.


        :return: The additional_fields of this CouponCondition.
        :rtype: object
        """
        return self._additional_fields

    @additional_fields.setter
    def additional_fields(self, additional_fields):
        """Sets the additional_fields of this CouponCondition.


        :param additional_fields: The additional_fields of this CouponCondition.
        :type additional_fields: object
        """

        self._additional_fields = additional_fields

    @property
    def custom_fields(self):
        """Gets the custom_fields of this CouponCondition.


        :return: The custom_fields of this CouponCondition.
        :rtype: object
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this CouponCondition.


        :param custom_fields: The custom_fields of this CouponCondition.
        :type custom_fields: object
        """

        self._custom_fields = custom_fields

    @property
    def entity(self):
        """Gets the entity of this CouponCondition.


        :return: The entity of this CouponCondition.
        :rtype: str
        """
        return self._entity

    @entity.setter
    def entity(self, entity):
        """Sets the entity of this CouponCondition.


        :param entity: The entity of this CouponCondition.
        :type entity: str
        """

        self._entity = entity

    @property
    def id(self):
        """Gets the id of this CouponCondition.


        :return: The id of this CouponCondition.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CouponCondition.


        :param id: The id of this CouponCondition.
        :type id: str
        """

        self._id = id

    @property
    def key(self):
        """Gets the key of this CouponCondition.


        :return: The key of this CouponCondition.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this CouponCondition.


        :param key: The key of this CouponCondition.
        :type key: str
        """

        self._key = key

    @property
    def logic_operator(self):
        """Gets the logic_operator of this CouponCondition.


        :return: The logic_operator of this CouponCondition.
        :rtype: str
        """
        return self._logic_operator

    @logic_operator.setter
    def logic_operator(self, logic_operator):
        """Sets the logic_operator of this CouponCondition.


        :param logic_operator: The logic_operator of this CouponCondition.
        :type logic_operator: str
        """

        self._logic_operator = logic_operator

    @property
    def match_items(self):
        """Gets the match_items of this CouponCondition.


        :return: The match_items of this CouponCondition.
        :rtype: str
        """
        return self._match_items

    @match_items.setter
    def match_items(self, match_items):
        """Sets the match_items of this CouponCondition.


        :param match_items: The match_items of this CouponCondition.
        :type match_items: str
        """

        self._match_items = match_items

    @property
    def operator(self):
        """Gets the operator of this CouponCondition.


        :return: The operator of this CouponCondition.
        :rtype: str
        """
        return self._operator

    @operator.setter
    def operator(self, operator):
        """Sets the operator of this CouponCondition.


        :param operator: The operator of this CouponCondition.
        :type operator: str
        """

        self._operator = operator

    @property
    def sub_conditions(self):
        """Gets the sub_conditions of this CouponCondition.


        :return: The sub_conditions of this CouponCondition.
        :rtype: List[CouponCondition]
        """
        return self._sub_conditions

    @sub_conditions.setter
    def sub_conditions(self, sub_conditions):
        """Sets the sub_conditions of this CouponCondition.


        :param sub_conditions: The sub_conditions of this CouponCondition.
        :type sub_conditions: List[CouponCondition]
        """

        self._sub_conditions = sub_conditions

    @property
    def value(self):
        """Gets the value of this CouponCondition.


        :return: The value of this CouponCondition.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this CouponCondition.


        :param value: The value of this CouponCondition.
        :type value: str
        """

        self._value = value
