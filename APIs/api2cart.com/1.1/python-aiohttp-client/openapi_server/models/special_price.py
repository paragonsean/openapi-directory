# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.a2_c_date_time import A2CDateTime
from openapi_server import util


class SpecialPrice(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_fields: object=None, avail: bool=None, created_at: A2CDateTime=None, custom_fields: object=None, expired_at: A2CDateTime=None, modified_at: A2CDateTime=None, value: float=None):
        """SpecialPrice - a model defined in OpenAPI

        :param additional_fields: The additional_fields of this SpecialPrice.
        :param avail: The avail of this SpecialPrice.
        :param created_at: The created_at of this SpecialPrice.
        :param custom_fields: The custom_fields of this SpecialPrice.
        :param expired_at: The expired_at of this SpecialPrice.
        :param modified_at: The modified_at of this SpecialPrice.
        :param value: The value of this SpecialPrice.
        """
        self.openapi_types = {
            'additional_fields': object,
            'avail': bool,
            'created_at': A2CDateTime,
            'custom_fields': object,
            'expired_at': A2CDateTime,
            'modified_at': A2CDateTime,
            'value': float
        }

        self.attribute_map = {
            'additional_fields': 'additional_fields',
            'avail': 'avail',
            'created_at': 'created_at',
            'custom_fields': 'custom_fields',
            'expired_at': 'expired_at',
            'modified_at': 'modified_at',
            'value': 'value'
        }

        self._additional_fields = additional_fields
        self._avail = avail
        self._created_at = created_at
        self._custom_fields = custom_fields
        self._expired_at = expired_at
        self._modified_at = modified_at
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SpecialPrice':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SpecialPrice of this SpecialPrice.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_fields(self):
        """Gets the additional_fields of this SpecialPrice.


        :return: The additional_fields of this SpecialPrice.
        :rtype: object
        """
        return self._additional_fields

    @additional_fields.setter
    def additional_fields(self, additional_fields):
        """Sets the additional_fields of this SpecialPrice.


        :param additional_fields: The additional_fields of this SpecialPrice.
        :type additional_fields: object
        """

        self._additional_fields = additional_fields

    @property
    def avail(self):
        """Gets the avail of this SpecialPrice.


        :return: The avail of this SpecialPrice.
        :rtype: bool
        """
        return self._avail

    @avail.setter
    def avail(self, avail):
        """Sets the avail of this SpecialPrice.


        :param avail: The avail of this SpecialPrice.
        :type avail: bool
        """

        self._avail = avail

    @property
    def created_at(self):
        """Gets the created_at of this SpecialPrice.


        :return: The created_at of this SpecialPrice.
        :rtype: A2CDateTime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this SpecialPrice.


        :param created_at: The created_at of this SpecialPrice.
        :type created_at: A2CDateTime
        """

        self._created_at = created_at

    @property
    def custom_fields(self):
        """Gets the custom_fields of this SpecialPrice.


        :return: The custom_fields of this SpecialPrice.
        :rtype: object
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this SpecialPrice.


        :param custom_fields: The custom_fields of this SpecialPrice.
        :type custom_fields: object
        """

        self._custom_fields = custom_fields

    @property
    def expired_at(self):
        """Gets the expired_at of this SpecialPrice.


        :return: The expired_at of this SpecialPrice.
        :rtype: A2CDateTime
        """
        return self._expired_at

    @expired_at.setter
    def expired_at(self, expired_at):
        """Sets the expired_at of this SpecialPrice.


        :param expired_at: The expired_at of this SpecialPrice.
        :type expired_at: A2CDateTime
        """

        self._expired_at = expired_at

    @property
    def modified_at(self):
        """Gets the modified_at of this SpecialPrice.


        :return: The modified_at of this SpecialPrice.
        :rtype: A2CDateTime
        """
        return self._modified_at

    @modified_at.setter
    def modified_at(self, modified_at):
        """Sets the modified_at of this SpecialPrice.


        :param modified_at: The modified_at of this SpecialPrice.
        :type modified_at: A2CDateTime
        """

        self._modified_at = modified_at

    @property
    def value(self):
        """Gets the value of this SpecialPrice.


        :return: The value of this SpecialPrice.
        :rtype: float
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this SpecialPrice.


        :param value: The value of this SpecialPrice.
        :type value: float
        """

        self._value = value
