# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OrderPreestimateShipping(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_fields: object=None, carrier_code: str=None, carrier_name: str=None, custom_fields: object=None, delivery_time: str=None, description: str=None, method_code: str=None, method_name: str=None, price: float=None, price_inc_tax: float=None):
        """OrderPreestimateShipping - a model defined in OpenAPI

        :param additional_fields: The additional_fields of this OrderPreestimateShipping.
        :param carrier_code: The carrier_code of this OrderPreestimateShipping.
        :param carrier_name: The carrier_name of this OrderPreestimateShipping.
        :param custom_fields: The custom_fields of this OrderPreestimateShipping.
        :param delivery_time: The delivery_time of this OrderPreestimateShipping.
        :param description: The description of this OrderPreestimateShipping.
        :param method_code: The method_code of this OrderPreestimateShipping.
        :param method_name: The method_name of this OrderPreestimateShipping.
        :param price: The price of this OrderPreestimateShipping.
        :param price_inc_tax: The price_inc_tax of this OrderPreestimateShipping.
        """
        self.openapi_types = {
            'additional_fields': object,
            'carrier_code': str,
            'carrier_name': str,
            'custom_fields': object,
            'delivery_time': str,
            'description': str,
            'method_code': str,
            'method_name': str,
            'price': float,
            'price_inc_tax': float
        }

        self.attribute_map = {
            'additional_fields': 'additional_fields',
            'carrier_code': 'carrier_code',
            'carrier_name': 'carrier_name',
            'custom_fields': 'custom_fields',
            'delivery_time': 'delivery_time',
            'description': 'description',
            'method_code': 'method_code',
            'method_name': 'method_name',
            'price': 'price',
            'price_inc_tax': 'price_inc_tax'
        }

        self._additional_fields = additional_fields
        self._carrier_code = carrier_code
        self._carrier_name = carrier_name
        self._custom_fields = custom_fields
        self._delivery_time = delivery_time
        self._description = description
        self._method_code = method_code
        self._method_name = method_name
        self._price = price
        self._price_inc_tax = price_inc_tax

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderPreestimateShipping':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Order_PreestimateShipping of this OrderPreestimateShipping.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_fields(self):
        """Gets the additional_fields of this OrderPreestimateShipping.


        :return: The additional_fields of this OrderPreestimateShipping.
        :rtype: object
        """
        return self._additional_fields

    @additional_fields.setter
    def additional_fields(self, additional_fields):
        """Sets the additional_fields of this OrderPreestimateShipping.


        :param additional_fields: The additional_fields of this OrderPreestimateShipping.
        :type additional_fields: object
        """

        self._additional_fields = additional_fields

    @property
    def carrier_code(self):
        """Gets the carrier_code of this OrderPreestimateShipping.


        :return: The carrier_code of this OrderPreestimateShipping.
        :rtype: str
        """
        return self._carrier_code

    @carrier_code.setter
    def carrier_code(self, carrier_code):
        """Sets the carrier_code of this OrderPreestimateShipping.


        :param carrier_code: The carrier_code of this OrderPreestimateShipping.
        :type carrier_code: str
        """

        self._carrier_code = carrier_code

    @property
    def carrier_name(self):
        """Gets the carrier_name of this OrderPreestimateShipping.


        :return: The carrier_name of this OrderPreestimateShipping.
        :rtype: str
        """
        return self._carrier_name

    @carrier_name.setter
    def carrier_name(self, carrier_name):
        """Sets the carrier_name of this OrderPreestimateShipping.


        :param carrier_name: The carrier_name of this OrderPreestimateShipping.
        :type carrier_name: str
        """

        self._carrier_name = carrier_name

    @property
    def custom_fields(self):
        """Gets the custom_fields of this OrderPreestimateShipping.


        :return: The custom_fields of this OrderPreestimateShipping.
        :rtype: object
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this OrderPreestimateShipping.


        :param custom_fields: The custom_fields of this OrderPreestimateShipping.
        :type custom_fields: object
        """

        self._custom_fields = custom_fields

    @property
    def delivery_time(self):
        """Gets the delivery_time of this OrderPreestimateShipping.


        :return: The delivery_time of this OrderPreestimateShipping.
        :rtype: str
        """
        return self._delivery_time

    @delivery_time.setter
    def delivery_time(self, delivery_time):
        """Sets the delivery_time of this OrderPreestimateShipping.


        :param delivery_time: The delivery_time of this OrderPreestimateShipping.
        :type delivery_time: str
        """

        self._delivery_time = delivery_time

    @property
    def description(self):
        """Gets the description of this OrderPreestimateShipping.


        :return: The description of this OrderPreestimateShipping.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this OrderPreestimateShipping.


        :param description: The description of this OrderPreestimateShipping.
        :type description: str
        """

        self._description = description

    @property
    def method_code(self):
        """Gets the method_code of this OrderPreestimateShipping.


        :return: The method_code of this OrderPreestimateShipping.
        :rtype: str
        """
        return self._method_code

    @method_code.setter
    def method_code(self, method_code):
        """Sets the method_code of this OrderPreestimateShipping.


        :param method_code: The method_code of this OrderPreestimateShipping.
        :type method_code: str
        """

        self._method_code = method_code

    @property
    def method_name(self):
        """Gets the method_name of this OrderPreestimateShipping.


        :return: The method_name of this OrderPreestimateShipping.
        :rtype: str
        """
        return self._method_name

    @method_name.setter
    def method_name(self, method_name):
        """Sets the method_name of this OrderPreestimateShipping.


        :param method_name: The method_name of this OrderPreestimateShipping.
        :type method_name: str
        """

        self._method_name = method_name

    @property
    def price(self):
        """Gets the price of this OrderPreestimateShipping.


        :return: The price of this OrderPreestimateShipping.
        :rtype: float
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this OrderPreestimateShipping.


        :param price: The price of this OrderPreestimateShipping.
        :type price: float
        """

        self._price = price

    @property
    def price_inc_tax(self):
        """Gets the price_inc_tax of this OrderPreestimateShipping.


        :return: The price_inc_tax of this OrderPreestimateShipping.
        :rtype: float
        """
        return self._price_inc_tax

    @price_inc_tax.setter
    def price_inc_tax(self, price_inc_tax):
        """Sets the price_inc_tax of this OrderPreestimateShipping.


        :param price_inc_tax: The price_inc_tax of this OrderPreestimateShipping.
        :type price_inc_tax: float
        """

        self._price_inc_tax = price_inc_tax
