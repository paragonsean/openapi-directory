# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.order_status_history_item import OrderStatusHistoryItem
from openapi_server.models.order_status_refund import OrderStatusRefund
from openapi_server import util


class OrderStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_fields: object=None, custom_fields: object=None, history: List[OrderStatusHistoryItem]=None, id: str=None, name: str=None, refund_info: OrderStatusRefund=None):
        """OrderStatus - a model defined in OpenAPI

        :param additional_fields: The additional_fields of this OrderStatus.
        :param custom_fields: The custom_fields of this OrderStatus.
        :param history: The history of this OrderStatus.
        :param id: The id of this OrderStatus.
        :param name: The name of this OrderStatus.
        :param refund_info: The refund_info of this OrderStatus.
        """
        self.openapi_types = {
            'additional_fields': object,
            'custom_fields': object,
            'history': List[OrderStatusHistoryItem],
            'id': str,
            'name': str,
            'refund_info': OrderStatusRefund
        }

        self.attribute_map = {
            'additional_fields': 'additional_fields',
            'custom_fields': 'custom_fields',
            'history': 'history',
            'id': 'id',
            'name': 'name',
            'refund_info': 'refund_info'
        }

        self._additional_fields = additional_fields
        self._custom_fields = custom_fields
        self._history = history
        self._id = id
        self._name = name
        self._refund_info = refund_info

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Order_Status of this OrderStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_fields(self):
        """Gets the additional_fields of this OrderStatus.


        :return: The additional_fields of this OrderStatus.
        :rtype: object
        """
        return self._additional_fields

    @additional_fields.setter
    def additional_fields(self, additional_fields):
        """Sets the additional_fields of this OrderStatus.


        :param additional_fields: The additional_fields of this OrderStatus.
        :type additional_fields: object
        """

        self._additional_fields = additional_fields

    @property
    def custom_fields(self):
        """Gets the custom_fields of this OrderStatus.


        :return: The custom_fields of this OrderStatus.
        :rtype: object
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this OrderStatus.


        :param custom_fields: The custom_fields of this OrderStatus.
        :type custom_fields: object
        """

        self._custom_fields = custom_fields

    @property
    def history(self):
        """Gets the history of this OrderStatus.


        :return: The history of this OrderStatus.
        :rtype: List[OrderStatusHistoryItem]
        """
        return self._history

    @history.setter
    def history(self, history):
        """Sets the history of this OrderStatus.


        :param history: The history of this OrderStatus.
        :type history: List[OrderStatusHistoryItem]
        """

        self._history = history

    @property
    def id(self):
        """Gets the id of this OrderStatus.


        :return: The id of this OrderStatus.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this OrderStatus.


        :param id: The id of this OrderStatus.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this OrderStatus.


        :return: The name of this OrderStatus.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this OrderStatus.


        :param name: The name of this OrderStatus.
        :type name: str
        """

        self._name = name

    @property
    def refund_info(self):
        """Gets the refund_info of this OrderStatus.


        :return: The refund_info of this OrderStatus.
        :rtype: OrderStatusRefund
        """
        return self._refund_info

    @refund_info.setter
    def refund_info(self, refund_info):
        """Sets the refund_info of this OrderStatus.


        :param refund_info: The refund_info of this OrderStatus.
        :type refund_info: OrderStatusRefund
        """

        self._refund_info = refund_info
