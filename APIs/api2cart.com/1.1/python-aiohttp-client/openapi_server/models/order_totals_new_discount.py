# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OrderTotalsNewDiscount(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_fields: object=None, code: str=None, custom_fields: object=None, type: str=None, value: float=None):
        """OrderTotalsNewDiscount - a model defined in OpenAPI

        :param additional_fields: The additional_fields of this OrderTotalsNewDiscount.
        :param code: The code of this OrderTotalsNewDiscount.
        :param custom_fields: The custom_fields of this OrderTotalsNewDiscount.
        :param type: The type of this OrderTotalsNewDiscount.
        :param value: The value of this OrderTotalsNewDiscount.
        """
        self.openapi_types = {
            'additional_fields': object,
            'code': str,
            'custom_fields': object,
            'type': str,
            'value': float
        }

        self.attribute_map = {
            'additional_fields': 'additional_fields',
            'code': 'code',
            'custom_fields': 'custom_fields',
            'type': 'type',
            'value': 'value'
        }

        self._additional_fields = additional_fields
        self._code = code
        self._custom_fields = custom_fields
        self._type = type
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderTotalsNewDiscount':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Order_Totals_NewDiscount of this OrderTotalsNewDiscount.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_fields(self):
        """Gets the additional_fields of this OrderTotalsNewDiscount.


        :return: The additional_fields of this OrderTotalsNewDiscount.
        :rtype: object
        """
        return self._additional_fields

    @additional_fields.setter
    def additional_fields(self, additional_fields):
        """Sets the additional_fields of this OrderTotalsNewDiscount.


        :param additional_fields: The additional_fields of this OrderTotalsNewDiscount.
        :type additional_fields: object
        """

        self._additional_fields = additional_fields

    @property
    def code(self):
        """Gets the code of this OrderTotalsNewDiscount.


        :return: The code of this OrderTotalsNewDiscount.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this OrderTotalsNewDiscount.


        :param code: The code of this OrderTotalsNewDiscount.
        :type code: str
        """

        self._code = code

    @property
    def custom_fields(self):
        """Gets the custom_fields of this OrderTotalsNewDiscount.


        :return: The custom_fields of this OrderTotalsNewDiscount.
        :rtype: object
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this OrderTotalsNewDiscount.


        :param custom_fields: The custom_fields of this OrderTotalsNewDiscount.
        :type custom_fields: object
        """

        self._custom_fields = custom_fields

    @property
    def type(self):
        """Gets the type of this OrderTotalsNewDiscount.


        :return: The type of this OrderTotalsNewDiscount.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this OrderTotalsNewDiscount.


        :param type: The type of this OrderTotalsNewDiscount.
        :type type: str
        """

        self._type = type

    @property
    def value(self):
        """Gets the value of this OrderTotalsNewDiscount.


        :return: The value of this OrderTotalsNewDiscount.
        :rtype: float
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this OrderTotalsNewDiscount.


        :param value: The value of this OrderTotalsNewDiscount.
        :type value: float
        """

        self._value = value
