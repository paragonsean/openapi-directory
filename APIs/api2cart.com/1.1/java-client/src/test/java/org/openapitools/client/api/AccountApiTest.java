/*
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AccountCartAdd;
import org.openapitools.client.model.AccountCartAdd200Response;
import org.openapitools.client.model.AccountCartList200Response;
import org.openapitools.client.model.AccountConfigUpdate200Response;
import org.openapitools.client.model.AccountFailedWebhooks200Response;
import org.openapitools.client.model.AccountSupportedPlatforms200Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AccountApi
 */
@Disabled
public class AccountApiTest {

    private final AccountApi api = new AccountApi();

    /**
     * Add store to the account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accountCartAddTest() throws ApiException {
        AccountCartAdd accountCartAdd = null;
        AccountCartAdd200Response response = api.accountCartAdd(accountCartAdd);
        // TODO: test validations
    }

    /**
     * Get list of carts.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accountCartListTest() throws ApiException {
        String params = null;
        String exclude = null;
        String requestFromDate = null;
        String requestToDate = null;
        String storeUrl = null;
        String storeKey = null;
        AccountCartList200Response response = api.accountCartList(params, exclude, requestFromDate, requestToDate, storeUrl, storeKey);
        // TODO: test validations
    }

    /**
     * Update configs in the API2Cart database.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accountConfigUpdateTest() throws ApiException {
        String newStoreKey = null;
        String bridgeUrl = null;
        String storeRoot = null;
        String dbTablesPrefix = null;
        String _3dcartPrivateKey = null;
        String _3dcartAccessToken = null;
        String _3dcartapiApiKey = null;
        String amazonSpClientId = null;
        String amazonSpClientSecret = null;
        String amazonSpAwsUserKeyId = null;
        String amazonSpAwsUserSecret = null;
        String amazonSpAwsRegion = null;
        String amazonSpAwsRoleArn = null;
        String amazonSpRefreshToken = null;
        String amazonSpApiEnvironment = null;
        String amazonAccessToken = null;
        String amazonSellerId = null;
        String amazonMarketplacesIds = null;
        String amazonSecretKey = null;
        String amazonAccessKeyId = null;
        String aspdotnetstorefrontApiUser = null;
        String aspdotnetstorefrontApiPass = null;
        String bigcommerceapiAdminAccount = null;
        String bigcommerceapiApiPath = null;
        String bigcommerceapiApiKey = null;
        String bigcommerceapiClientId = null;
        String bigcommerceapiAccessToken = null;
        String bigcommerceapiContext = null;
        String demandwareClientId = null;
        String demandwareApiPassword = null;
        String demandwareUserName = null;
        String demandwareUserPassword = null;
        String ebayClientId = null;
        String ebayClientSecret = null;
        String ebayRuname = null;
        String ebayAccessToken = null;
        String ebayRefreshToken = null;
        String ebayEnvironment = null;
        Integer ebaySiteId = null;
        String ecwidAcessToken = null;
        String ecwidStoreId = null;
        String etsyKeystring = null;
        String etsySharedSecret = null;
        String etsyAccessToken = null;
        String etsyTokenSecret = null;
        String etsyClientId = null;
        String etsyRefreshToken = null;
        String netoApiKey = null;
        String netoApiUsername = null;
        String shopifyApiKey = null;
        String shopifyApiPassword = null;
        String shopifySharedSecret = null;
        String shopifyAccessToken = null;
        String shopwareAccessKey = null;
        String shopwareApiKey = null;
        String shopwareApiSecret = null;
        String volusionLogin = null;
        String volusionPassword = null;
        String walmartClientId = null;
        String walmartClientSecret = null;
        String walmartEnvironment = null;
        String walmartChannelType = null;
        String squarespaceApiKey = null;
        String hybrisClientId = null;
        String hybrisClientSecret = null;
        String hybrisUsername = null;
        String hybrisPassword = null;
        List<String> hybrisWebsites = null;
        String lightspeedApiKey = null;
        String lightspeedApiSecret = null;
        String commercehqApiKey = null;
        String commercehqApiPassword = null;
        String wcConsumerKey = null;
        String wcConsumerSecret = null;
        String magentoConsumerKey = null;
        String magentoConsumerSecret = null;
        String magentoAccessToken = null;
        String magentoTokenSecret = null;
        String prestashopWebserviceKey = null;
        String wixAppId = null;
        String wixAppSecretKey = null;
        String wixRefreshToken = null;
        String mercadoLibreAppId = null;
        String mercadoLibreAppSecretKey = null;
        String mercadoLibreRefreshToken = null;
        Integer zidClientId = null;
        String zidClientSecret = null;
        String zidAccessToken = null;
        String zidAuthorization = null;
        String zidRefreshToken = null;
        AccountConfigUpdate200Response response = api.accountConfigUpdate(newStoreKey, bridgeUrl, storeRoot, dbTablesPrefix, _3dcartPrivateKey, _3dcartAccessToken, _3dcartapiApiKey, amazonSpClientId, amazonSpClientSecret, amazonSpAwsUserKeyId, amazonSpAwsUserSecret, amazonSpAwsRegion, amazonSpAwsRoleArn, amazonSpRefreshToken, amazonSpApiEnvironment, amazonAccessToken, amazonSellerId, amazonMarketplacesIds, amazonSecretKey, amazonAccessKeyId, aspdotnetstorefrontApiUser, aspdotnetstorefrontApiPass, bigcommerceapiAdminAccount, bigcommerceapiApiPath, bigcommerceapiApiKey, bigcommerceapiClientId, bigcommerceapiAccessToken, bigcommerceapiContext, demandwareClientId, demandwareApiPassword, demandwareUserName, demandwareUserPassword, ebayClientId, ebayClientSecret, ebayRuname, ebayAccessToken, ebayRefreshToken, ebayEnvironment, ebaySiteId, ecwidAcessToken, ecwidStoreId, etsyKeystring, etsySharedSecret, etsyAccessToken, etsyTokenSecret, etsyClientId, etsyRefreshToken, netoApiKey, netoApiUsername, shopifyApiKey, shopifyApiPassword, shopifySharedSecret, shopifyAccessToken, shopwareAccessKey, shopwareApiKey, shopwareApiSecret, volusionLogin, volusionPassword, walmartClientId, walmartClientSecret, walmartEnvironment, walmartChannelType, squarespaceApiKey, hybrisClientId, hybrisClientSecret, hybrisUsername, hybrisPassword, hybrisWebsites, lightspeedApiKey, lightspeedApiSecret, commercehqApiKey, commercehqApiPassword, wcConsumerKey, wcConsumerSecret, magentoConsumerKey, magentoConsumerSecret, magentoAccessToken, magentoTokenSecret, prestashopWebserviceKey, wixAppId, wixAppSecretKey, wixRefreshToken, mercadoLibreAppId, mercadoLibreAppSecretKey, mercadoLibreRefreshToken, zidClientId, zidClientSecret, zidAccessToken, zidAuthorization, zidRefreshToken);
        // TODO: test validations
    }

    /**
     * List webhooks that was not delivered to the callback.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accountFailedWebhooksTest() throws ApiException {
        Integer count = null;
        Integer start = null;
        String ids = null;
        AccountFailedWebhooks200Response response = api.accountFailedWebhooks(count, start, ids);
        // TODO: test validations
    }

    /**
     * Get list of supported platforms
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accountSupportedPlatformsTest() throws ApiException {
        AccountSupportedPlatforms200Response response = api.accountSupportedPlatforms();
        // TODO: test validations
    }

}
