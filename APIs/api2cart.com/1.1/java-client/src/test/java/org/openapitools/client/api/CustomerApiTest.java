/*
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CustomerAdd;
import org.openapitools.client.model.CustomerAdd200Response;
import org.openapitools.client.model.CustomerCount200Response;
import org.openapitools.client.model.CustomerFind200Response;
import org.openapitools.client.model.CustomerGroupAdd200Response;
import org.openapitools.client.model.CustomerInfo200Response;
import org.openapitools.client.model.CustomerUpdate;
import org.openapitools.client.model.CustomerUpdate200Response;
import org.openapitools.client.model.CustomerWishlistList200Response;
import org.openapitools.client.model.ModelResponseCustomerAttributeList;
import org.openapitools.client.model.ModelResponseCustomerGroupList;
import org.openapitools.client.model.ModelResponseCustomerList;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CustomerApi
 */
@Disabled
public class CustomerApiTest {

    private final CustomerApi api = new CustomerApi();

    /**
     * Add customer into store.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void customerAddTest() throws ApiException {
        CustomerAdd customerAdd = null;
        CustomerAdd200Response response = api.customerAdd(customerAdd);
        // TODO: test validations
    }

    /**
     * Get attributes for specific customer
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void customerAttributeListTest() throws ApiException {
        String customerId = null;
        Integer count = null;
        String pageCursor = null;
        String storeId = null;
        String langId = null;
        String params = null;
        String exclude = null;
        String responseFields = null;
        ModelResponseCustomerAttributeList response = api.customerAttributeList(customerId, count, pageCursor, storeId, langId, params, exclude, responseFields);
        // TODO: test validations
    }

    /**
     * Get number of customers from store.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void customerCountTest() throws ApiException {
        String groupId = null;
        String createdFrom = null;
        String createdTo = null;
        String modifiedFrom = null;
        String modifiedTo = null;
        String storeId = null;
        String customerListId = null;
        Boolean avail = null;
        CustomerCount200Response response = api.customerCount(groupId, createdFrom, createdTo, modifiedFrom, modifiedTo, storeId, customerListId, avail);
        // TODO: test validations
    }

    /**
     * Find customers in store.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void customerFindTest() throws ApiException {
        String findValue = null;
        String findWhere = null;
        String findParams = null;
        String storeId = null;
        CustomerFind200Response response = api.customerFind(findValue, findWhere, findParams, storeId);
        // TODO: test validations
    }

    /**
     * Create customer group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void customerGroupAddTest() throws ApiException {
        String name = null;
        String storeId = null;
        String storesIds = null;
        CustomerGroupAdd200Response response = api.customerGroupAdd(name, storeId, storesIds);
        // TODO: test validations
    }

    /**
     * Get list of customers groups.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void customerGroupListTest() throws ApiException {
        String pageCursor = null;
        Integer start = null;
        Integer count = null;
        String storeId = null;
        String langId = null;
        String groupIds = null;
        String params = null;
        String exclude = null;
        String responseFields = null;
        ModelResponseCustomerGroupList response = api.customerGroupList(pageCursor, start, count, storeId, langId, groupIds, params, exclude, responseFields);
        // TODO: test validations
    }

    /**
     * Get customers&#39; details from store.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void customerInfoTest() throws ApiException {
        String id = null;
        String params = null;
        String responseFields = null;
        String exclude = null;
        String storeId = null;
        CustomerInfo200Response response = api.customerInfo(id, params, responseFields, exclude, storeId);
        // TODO: test validations
    }

    /**
     * Get list of customers from store.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void customerListTest() throws ApiException {
        String pageCursor = null;
        Integer start = null;
        Integer count = null;
        String createdFrom = null;
        String createdTo = null;
        String modifiedFrom = null;
        String modifiedTo = null;
        String params = null;
        String responseFields = null;
        String exclude = null;
        String groupId = null;
        String storeId = null;
        String customerListId = null;
        Boolean avail = null;
        ModelResponseCustomerList response = api.customerList(pageCursor, start, count, createdFrom, createdTo, modifiedFrom, modifiedTo, params, responseFields, exclude, groupId, storeId, customerListId, avail);
        // TODO: test validations
    }

    /**
     * Update information of customer in store.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void customerUpdateTest() throws ApiException {
        CustomerUpdate customerUpdate = null;
        CustomerUpdate200Response response = api.customerUpdate(customerUpdate);
        // TODO: test validations
    }

    /**
     * Get a Wish List of customer from the store.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void customerWishlistListTest() throws ApiException {
        String customerId = null;
        String id = null;
        String storeId = null;
        Integer start = null;
        Integer count = null;
        String pageCursor = null;
        String responseFields = null;
        CustomerWishlistList200Response response = api.customerWishlistList(customerId, id, storeId, start, count, pageCursor, responseFields);
        // TODO: test validations
    }

}
