/*
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.BasketInfo200Response;
import org.openapitools.client.model.BasketItemAdd200Response;
import org.openapitools.client.model.BasketLiveShippingServiceCreate200Response;
import org.openapitools.client.model.BasketLiveShippingServiceDelete200Response;
import org.openapitools.client.model.BasketLiveShippingServiceList200Response;
import java.math.BigDecimal;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BasketApi
 */
@Disabled
public class BasketApiTest {

    private final BasketApi api = new BasketApi();

    /**
     * Retrieve basket information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void basketInfoTest() throws ApiException {
        String id = null;
        String storeId = null;
        String params = null;
        String exclude = null;
        String responseFields = null;
        BasketInfo200Response response = api.basketInfo(id, storeId, params, exclude, responseFields);
        // TODO: test validations
    }

    /**
     * Add item to basket
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void basketItemAddTest() throws ApiException {
        String customerId = null;
        String productId = null;
        String variantId = null;
        BigDecimal quantity = null;
        String storeId = null;
        BasketItemAdd200Response response = api.basketItemAdd(customerId, productId, variantId, quantity, storeId);
        // TODO: test validations
    }

    /**
     * Create live shipping rate service.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void basketLiveShippingServiceCreateTest() throws ApiException {
        String name = null;
        String paramCallback = null;
        String storeId = null;
        BasketLiveShippingServiceCreate200Response response = api.basketLiveShippingServiceCreate(name, paramCallback, storeId);
        // TODO: test validations
    }

    /**
     * Delete live shipping rate service.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void basketLiveShippingServiceDeleteTest() throws ApiException {
        Integer id = null;
        BasketLiveShippingServiceDelete200Response response = api.basketLiveShippingServiceDelete(id);
        // TODO: test validations
    }

    /**
     * Retrieve a list of live shipping rate services.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void basketLiveShippingServiceListTest() throws ApiException {
        String storeId = null;
        Integer start = null;
        Integer count = null;
        BasketLiveShippingServiceList200Response response = api.basketLiveShippingServiceList(storeId, start, count);
        // TODO: test validations
    }

}
