/*
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.A2CDateTime;
import org.openapitools.client.model.OrderStatusRefundItem;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * OrderStatusRefund
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:12:09.268126-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class OrderStatusRefund {
  public static final String SERIALIZED_NAME_ADDITIONAL_FIELDS = "additional_fields";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_FIELDS)
  private Object additionalFields;

  public static final String SERIALIZED_NAME_COMMENT = "comment";
  @SerializedName(SERIALIZED_NAME_COMMENT)
  private String comment;

  public static final String SERIALIZED_NAME_CUSTOM_FIELDS = "custom_fields";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELDS)
  private Object customFields;

  public static final String SERIALIZED_NAME_FEE = "fee";
  @SerializedName(SERIALIZED_NAME_FEE)
  private BigDecimal fee;

  public static final String SERIALIZED_NAME_REFUNDED_ITEMS = "refunded_items";
  @SerializedName(SERIALIZED_NAME_REFUNDED_ITEMS)
  private List<OrderStatusRefundItem> refundedItems = new ArrayList<>();

  public static final String SERIALIZED_NAME_SHIPPING = "shipping";
  @SerializedName(SERIALIZED_NAME_SHIPPING)
  private BigDecimal shipping;

  public static final String SERIALIZED_NAME_TAX = "tax";
  @SerializedName(SERIALIZED_NAME_TAX)
  private BigDecimal tax;

  public static final String SERIALIZED_NAME_TIME = "time";
  @SerializedName(SERIALIZED_NAME_TIME)
  private A2CDateTime time;

  public static final String SERIALIZED_NAME_TOTAL_REFUNDED = "total_refunded";
  @SerializedName(SERIALIZED_NAME_TOTAL_REFUNDED)
  private BigDecimal totalRefunded;

  public OrderStatusRefund() {
  }

  public OrderStatusRefund additionalFields(Object additionalFields) {
    this.additionalFields = additionalFields;
    return this;
  }

  /**
   * Get additionalFields
   * @return additionalFields
   */
  @javax.annotation.Nullable
  public Object getAdditionalFields() {
    return additionalFields;
  }

  public void setAdditionalFields(Object additionalFields) {
    this.additionalFields = additionalFields;
  }


  public OrderStatusRefund comment(String comment) {
    this.comment = comment;
    return this;
  }

  /**
   * Get comment
   * @return comment
   */
  @javax.annotation.Nullable
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }


  public OrderStatusRefund customFields(Object customFields) {
    this.customFields = customFields;
    return this;
  }

  /**
   * Get customFields
   * @return customFields
   */
  @javax.annotation.Nullable
  public Object getCustomFields() {
    return customFields;
  }

  public void setCustomFields(Object customFields) {
    this.customFields = customFields;
  }


  public OrderStatusRefund fee(BigDecimal fee) {
    this.fee = fee;
    return this;
  }

  /**
   * Get fee
   * @return fee
   */
  @javax.annotation.Nullable
  public BigDecimal getFee() {
    return fee;
  }

  public void setFee(BigDecimal fee) {
    this.fee = fee;
  }


  public OrderStatusRefund refundedItems(List<OrderStatusRefundItem> refundedItems) {
    this.refundedItems = refundedItems;
    return this;
  }

  public OrderStatusRefund addRefundedItemsItem(OrderStatusRefundItem refundedItemsItem) {
    if (this.refundedItems == null) {
      this.refundedItems = new ArrayList<>();
    }
    this.refundedItems.add(refundedItemsItem);
    return this;
  }

  /**
   * Get refundedItems
   * @return refundedItems
   */
  @javax.annotation.Nullable
  public List<OrderStatusRefundItem> getRefundedItems() {
    return refundedItems;
  }

  public void setRefundedItems(List<OrderStatusRefundItem> refundedItems) {
    this.refundedItems = refundedItems;
  }


  public OrderStatusRefund shipping(BigDecimal shipping) {
    this.shipping = shipping;
    return this;
  }

  /**
   * Get shipping
   * @return shipping
   */
  @javax.annotation.Nullable
  public BigDecimal getShipping() {
    return shipping;
  }

  public void setShipping(BigDecimal shipping) {
    this.shipping = shipping;
  }


  public OrderStatusRefund tax(BigDecimal tax) {
    this.tax = tax;
    return this;
  }

  /**
   * Get tax
   * @return tax
   */
  @javax.annotation.Nullable
  public BigDecimal getTax() {
    return tax;
  }

  public void setTax(BigDecimal tax) {
    this.tax = tax;
  }


  public OrderStatusRefund time(A2CDateTime time) {
    this.time = time;
    return this;
  }

  /**
   * Get time
   * @return time
   */
  @javax.annotation.Nullable
  public A2CDateTime getTime() {
    return time;
  }

  public void setTime(A2CDateTime time) {
    this.time = time;
  }


  public OrderStatusRefund totalRefunded(BigDecimal totalRefunded) {
    this.totalRefunded = totalRefunded;
    return this;
  }

  /**
   * Get totalRefunded
   * @return totalRefunded
   */
  @javax.annotation.Nullable
  public BigDecimal getTotalRefunded() {
    return totalRefunded;
  }

  public void setTotalRefunded(BigDecimal totalRefunded) {
    this.totalRefunded = totalRefunded;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderStatusRefund orderStatusRefund = (OrderStatusRefund) o;
    return Objects.equals(this.additionalFields, orderStatusRefund.additionalFields) &&
        Objects.equals(this.comment, orderStatusRefund.comment) &&
        Objects.equals(this.customFields, orderStatusRefund.customFields) &&
        Objects.equals(this.fee, orderStatusRefund.fee) &&
        Objects.equals(this.refundedItems, orderStatusRefund.refundedItems) &&
        Objects.equals(this.shipping, orderStatusRefund.shipping) &&
        Objects.equals(this.tax, orderStatusRefund.tax) &&
        Objects.equals(this.time, orderStatusRefund.time) &&
        Objects.equals(this.totalRefunded, orderStatusRefund.totalRefunded);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalFields, comment, customFields, fee, refundedItems, shipping, tax, time, totalRefunded);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderStatusRefund {\n");
    sb.append("    additionalFields: ").append(toIndentedString(additionalFields)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    fee: ").append(toIndentedString(fee)).append("\n");
    sb.append("    refundedItems: ").append(toIndentedString(refundedItems)).append("\n");
    sb.append("    shipping: ").append(toIndentedString(shipping)).append("\n");
    sb.append("    tax: ").append(toIndentedString(tax)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("    totalRefunded: ").append(toIndentedString(totalRefunded)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("additional_fields");
    openapiFields.add("comment");
    openapiFields.add("custom_fields");
    openapiFields.add("fee");
    openapiFields.add("refunded_items");
    openapiFields.add("shipping");
    openapiFields.add("tax");
    openapiFields.add("time");
    openapiFields.add("total_refunded");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to OrderStatusRefund
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OrderStatusRefund.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrderStatusRefund is not found in the empty JSON string", OrderStatusRefund.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OrderStatusRefund.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OrderStatusRefund` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("comment") != null && !jsonObj.get("comment").isJsonNull()) && !jsonObj.get("comment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `comment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("comment").toString()));
      }
      if (jsonObj.get("refunded_items") != null && !jsonObj.get("refunded_items").isJsonNull()) {
        JsonArray jsonArrayrefundedItems = jsonObj.getAsJsonArray("refunded_items");
        if (jsonArrayrefundedItems != null) {
          // ensure the json data is an array
          if (!jsonObj.get("refunded_items").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `refunded_items` to be an array in the JSON string but got `%s`", jsonObj.get("refunded_items").toString()));
          }

          // validate the optional field `refunded_items` (array)
          for (int i = 0; i < jsonArrayrefundedItems.size(); i++) {
            OrderStatusRefundItem.validateJsonElement(jsonArrayrefundedItems.get(i));
          };
        }
      }
      // validate the optional field `time`
      if (jsonObj.get("time") != null && !jsonObj.get("time").isJsonNull()) {
        A2CDateTime.validateJsonElement(jsonObj.get("time"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrderStatusRefund.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrderStatusRefund' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrderStatusRefund> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrderStatusRefund.class));

       return (TypeAdapter<T>) new TypeAdapter<OrderStatusRefund>() {
           @Override
           public void write(JsonWriter out, OrderStatusRefund value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OrderStatusRefund read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of OrderStatusRefund given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of OrderStatusRefund
   * @throws IOException if the JSON string is invalid with respect to OrderStatusRefund
   */
  public static OrderStatusRefund fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrderStatusRefund.class);
  }

  /**
   * Convert an instance of OrderStatusRefund to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

