/*
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParams;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AccountSupportedPlatforms200ResponseResultSupportedPlatformsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:12:09.268126-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AccountSupportedPlatforms200ResponseResultSupportedPlatformsInner {
  public static final String SERIALIZED_NAME_CART_ID = "cart_id";
  @SerializedName(SERIALIZED_NAME_CART_ID)
  private String cartId;

  public static final String SERIALIZED_NAME_CART_METHOD = "cart_method";
  @SerializedName(SERIALIZED_NAME_CART_METHOD)
  private String cartMethod;

  public static final String SERIALIZED_NAME_CART_NAME = "cart_name";
  @SerializedName(SERIALIZED_NAME_CART_NAME)
  private String cartName;

  public static final String SERIALIZED_NAME_CART_VERSIONS = "cart_versions";
  @SerializedName(SERIALIZED_NAME_CART_VERSIONS)
  private String cartVersions;

  public static final String SERIALIZED_NAME_PARAMS = "params";
  @SerializedName(SERIALIZED_NAME_PARAMS)
  private AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParams params;

  public AccountSupportedPlatforms200ResponseResultSupportedPlatformsInner() {
  }

  public AccountSupportedPlatforms200ResponseResultSupportedPlatformsInner cartId(String cartId) {
    this.cartId = cartId;
    return this;
  }

  /**
   * Get cartId
   * @return cartId
   */
  @javax.annotation.Nullable
  public String getCartId() {
    return cartId;
  }

  public void setCartId(String cartId) {
    this.cartId = cartId;
  }


  public AccountSupportedPlatforms200ResponseResultSupportedPlatformsInner cartMethod(String cartMethod) {
    this.cartMethod = cartMethod;
    return this;
  }

  /**
   * Get cartMethod
   * @return cartMethod
   */
  @javax.annotation.Nullable
  public String getCartMethod() {
    return cartMethod;
  }

  public void setCartMethod(String cartMethod) {
    this.cartMethod = cartMethod;
  }


  public AccountSupportedPlatforms200ResponseResultSupportedPlatformsInner cartName(String cartName) {
    this.cartName = cartName;
    return this;
  }

  /**
   * Get cartName
   * @return cartName
   */
  @javax.annotation.Nullable
  public String getCartName() {
    return cartName;
  }

  public void setCartName(String cartName) {
    this.cartName = cartName;
  }


  public AccountSupportedPlatforms200ResponseResultSupportedPlatformsInner cartVersions(String cartVersions) {
    this.cartVersions = cartVersions;
    return this;
  }

  /**
   * Get cartVersions
   * @return cartVersions
   */
  @javax.annotation.Nullable
  public String getCartVersions() {
    return cartVersions;
  }

  public void setCartVersions(String cartVersions) {
    this.cartVersions = cartVersions;
  }


  public AccountSupportedPlatforms200ResponseResultSupportedPlatformsInner params(AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParams params) {
    this.params = params;
    return this;
  }

  /**
   * Get params
   * @return params
   */
  @javax.annotation.Nullable
  public AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParams getParams() {
    return params;
  }

  public void setParams(AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParams params) {
    this.params = params;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountSupportedPlatforms200ResponseResultSupportedPlatformsInner accountSupportedPlatforms200ResponseResultSupportedPlatformsInner = (AccountSupportedPlatforms200ResponseResultSupportedPlatformsInner) o;
    return Objects.equals(this.cartId, accountSupportedPlatforms200ResponseResultSupportedPlatformsInner.cartId) &&
        Objects.equals(this.cartMethod, accountSupportedPlatforms200ResponseResultSupportedPlatformsInner.cartMethod) &&
        Objects.equals(this.cartName, accountSupportedPlatforms200ResponseResultSupportedPlatformsInner.cartName) &&
        Objects.equals(this.cartVersions, accountSupportedPlatforms200ResponseResultSupportedPlatformsInner.cartVersions) &&
        Objects.equals(this.params, accountSupportedPlatforms200ResponseResultSupportedPlatformsInner.params);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cartId, cartMethod, cartName, cartVersions, params);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountSupportedPlatforms200ResponseResultSupportedPlatformsInner {\n");
    sb.append("    cartId: ").append(toIndentedString(cartId)).append("\n");
    sb.append("    cartMethod: ").append(toIndentedString(cartMethod)).append("\n");
    sb.append("    cartName: ").append(toIndentedString(cartName)).append("\n");
    sb.append("    cartVersions: ").append(toIndentedString(cartVersions)).append("\n");
    sb.append("    params: ").append(toIndentedString(params)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("cart_id");
    openapiFields.add("cart_method");
    openapiFields.add("cart_name");
    openapiFields.add("cart_versions");
    openapiFields.add("params");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AccountSupportedPlatforms200ResponseResultSupportedPlatformsInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AccountSupportedPlatforms200ResponseResultSupportedPlatformsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AccountSupportedPlatforms200ResponseResultSupportedPlatformsInner is not found in the empty JSON string", AccountSupportedPlatforms200ResponseResultSupportedPlatformsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AccountSupportedPlatforms200ResponseResultSupportedPlatformsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AccountSupportedPlatforms200ResponseResultSupportedPlatformsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("cart_id") != null && !jsonObj.get("cart_id").isJsonNull()) && !jsonObj.get("cart_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cart_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cart_id").toString()));
      }
      if ((jsonObj.get("cart_method") != null && !jsonObj.get("cart_method").isJsonNull()) && !jsonObj.get("cart_method").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cart_method` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cart_method").toString()));
      }
      if ((jsonObj.get("cart_name") != null && !jsonObj.get("cart_name").isJsonNull()) && !jsonObj.get("cart_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cart_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cart_name").toString()));
      }
      if ((jsonObj.get("cart_versions") != null && !jsonObj.get("cart_versions").isJsonNull()) && !jsonObj.get("cart_versions").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cart_versions` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cart_versions").toString()));
      }
      // validate the optional field `params`
      if (jsonObj.get("params") != null && !jsonObj.get("params").isJsonNull()) {
        AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParams.validateJsonElement(jsonObj.get("params"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AccountSupportedPlatforms200ResponseResultSupportedPlatformsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AccountSupportedPlatforms200ResponseResultSupportedPlatformsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AccountSupportedPlatforms200ResponseResultSupportedPlatformsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AccountSupportedPlatforms200ResponseResultSupportedPlatformsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<AccountSupportedPlatforms200ResponseResultSupportedPlatformsInner>() {
           @Override
           public void write(JsonWriter out, AccountSupportedPlatforms200ResponseResultSupportedPlatformsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AccountSupportedPlatforms200ResponseResultSupportedPlatformsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AccountSupportedPlatforms200ResponseResultSupportedPlatformsInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AccountSupportedPlatforms200ResponseResultSupportedPlatformsInner
   * @throws IOException if the JSON string is invalid with respect to AccountSupportedPlatforms200ResponseResultSupportedPlatformsInner
   */
  public static AccountSupportedPlatforms200ResponseResultSupportedPlatformsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AccountSupportedPlatforms200ResponseResultSupportedPlatformsInner.class);
  }

  /**
   * Convert an instance of AccountSupportedPlatforms200ResponseResultSupportedPlatformsInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

