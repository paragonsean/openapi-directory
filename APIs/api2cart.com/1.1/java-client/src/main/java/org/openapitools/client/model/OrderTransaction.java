/*
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.client.model.A2CDateTime;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * OrderTransaction
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:12:09.268126-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class OrderTransaction {
  public static final String SERIALIZED_NAME_ADDITIONAL_FIELDS = "additional_fields";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_FIELDS)
  private Object additionalFields;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private BigDecimal amount;

  public static final String SERIALIZED_NAME_AVS_MESSAGE = "avs_message";
  @SerializedName(SERIALIZED_NAME_AVS_MESSAGE)
  private String avsMessage;

  public static final String SERIALIZED_NAME_AVS_POSTAL_RESP_CODE = "avs_postal_resp_code";
  @SerializedName(SERIALIZED_NAME_AVS_POSTAL_RESP_CODE)
  private String avsPostalRespCode;

  public static final String SERIALIZED_NAME_AVS_STREET_RESP_CODE = "avs_street_resp_code";
  @SerializedName(SERIALIZED_NAME_AVS_STREET_RESP_CODE)
  private String avsStreetRespCode;

  public static final String SERIALIZED_NAME_CARD_BIN = "card_bin";
  @SerializedName(SERIALIZED_NAME_CARD_BIN)
  private String cardBin;

  public static final String SERIALIZED_NAME_CARD_BRAND = "card_brand";
  @SerializedName(SERIALIZED_NAME_CARD_BRAND)
  private String cardBrand;

  public static final String SERIALIZED_NAME_CARD_LAST_FOUR = "card_last_four";
  @SerializedName(SERIALIZED_NAME_CARD_LAST_FOUR)
  private String cardLastFour;

  public static final String SERIALIZED_NAME_CREATED_TIME = "created_time";
  @SerializedName(SERIALIZED_NAME_CREATED_TIME)
  private A2CDateTime createdTime;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private String currency;

  public static final String SERIALIZED_NAME_CUSTOM_FIELDS = "custom_fields";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELDS)
  private Object customFields;

  public static final String SERIALIZED_NAME_CVV_CODE = "cvv_code";
  @SerializedName(SERIALIZED_NAME_CVV_CODE)
  private String cvvCode;

  public static final String SERIALIZED_NAME_CVV_MESSAGE = "cvv_message";
  @SerializedName(SERIALIZED_NAME_CVV_MESSAGE)
  private String cvvMessage;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_GATEWAY = "gateway";
  @SerializedName(SERIALIZED_NAME_GATEWAY)
  private String gateway;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_IS_TEST_MODE = "is_test_mode";
  @SerializedName(SERIALIZED_NAME_IS_TEST_MODE)
  private Boolean isTestMode;

  public static final String SERIALIZED_NAME_ORDER_ID = "order_id";
  @SerializedName(SERIALIZED_NAME_ORDER_ID)
  private String orderId;

  public static final String SERIALIZED_NAME_PARENT_ID = "parent_id";
  @SerializedName(SERIALIZED_NAME_PARENT_ID)
  private String parentId;

  public static final String SERIALIZED_NAME_REFERENCE_NUMBER = "reference_number";
  @SerializedName(SERIALIZED_NAME_REFERENCE_NUMBER)
  private String referenceNumber;

  public static final String SERIALIZED_NAME_SETTLEMENT_AMOUNT = "settlement_amount";
  @SerializedName(SERIALIZED_NAME_SETTLEMENT_AMOUNT)
  private BigDecimal settlementAmount;

  public static final String SERIALIZED_NAME_SETTLEMENT_CREATED_TIME = "settlement_created_time";
  @SerializedName(SERIALIZED_NAME_SETTLEMENT_CREATED_TIME)
  private A2CDateTime settlementCreatedTime;

  public static final String SERIALIZED_NAME_SETTLEMENT_CURRENCY = "settlement_currency";
  @SerializedName(SERIALIZED_NAME_SETTLEMENT_CURRENCY)
  private String settlementCurrency;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_TRANSACTION_ID = "transaction_id";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_ID)
  private String transactionId;

  public OrderTransaction() {
  }

  public OrderTransaction additionalFields(Object additionalFields) {
    this.additionalFields = additionalFields;
    return this;
  }

  /**
   * Get additionalFields
   * @return additionalFields
   */
  @javax.annotation.Nullable
  public Object getAdditionalFields() {
    return additionalFields;
  }

  public void setAdditionalFields(Object additionalFields) {
    this.additionalFields = additionalFields;
  }


  public OrderTransaction amount(BigDecimal amount) {
    this.amount = amount;
    return this;
  }

  /**
   * Get amount
   * @return amount
   */
  @javax.annotation.Nullable
  public BigDecimal getAmount() {
    return amount;
  }

  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }


  public OrderTransaction avsMessage(String avsMessage) {
    this.avsMessage = avsMessage;
    return this;
  }

  /**
   * Get avsMessage
   * @return avsMessage
   */
  @javax.annotation.Nullable
  public String getAvsMessage() {
    return avsMessage;
  }

  public void setAvsMessage(String avsMessage) {
    this.avsMessage = avsMessage;
  }


  public OrderTransaction avsPostalRespCode(String avsPostalRespCode) {
    this.avsPostalRespCode = avsPostalRespCode;
    return this;
  }

  /**
   * Get avsPostalRespCode
   * @return avsPostalRespCode
   */
  @javax.annotation.Nullable
  public String getAvsPostalRespCode() {
    return avsPostalRespCode;
  }

  public void setAvsPostalRespCode(String avsPostalRespCode) {
    this.avsPostalRespCode = avsPostalRespCode;
  }


  public OrderTransaction avsStreetRespCode(String avsStreetRespCode) {
    this.avsStreetRespCode = avsStreetRespCode;
    return this;
  }

  /**
   * Get avsStreetRespCode
   * @return avsStreetRespCode
   */
  @javax.annotation.Nullable
  public String getAvsStreetRespCode() {
    return avsStreetRespCode;
  }

  public void setAvsStreetRespCode(String avsStreetRespCode) {
    this.avsStreetRespCode = avsStreetRespCode;
  }


  public OrderTransaction cardBin(String cardBin) {
    this.cardBin = cardBin;
    return this;
  }

  /**
   * Get cardBin
   * @return cardBin
   */
  @javax.annotation.Nullable
  public String getCardBin() {
    return cardBin;
  }

  public void setCardBin(String cardBin) {
    this.cardBin = cardBin;
  }


  public OrderTransaction cardBrand(String cardBrand) {
    this.cardBrand = cardBrand;
    return this;
  }

  /**
   * Get cardBrand
   * @return cardBrand
   */
  @javax.annotation.Nullable
  public String getCardBrand() {
    return cardBrand;
  }

  public void setCardBrand(String cardBrand) {
    this.cardBrand = cardBrand;
  }


  public OrderTransaction cardLastFour(String cardLastFour) {
    this.cardLastFour = cardLastFour;
    return this;
  }

  /**
   * Get cardLastFour
   * @return cardLastFour
   */
  @javax.annotation.Nullable
  public String getCardLastFour() {
    return cardLastFour;
  }

  public void setCardLastFour(String cardLastFour) {
    this.cardLastFour = cardLastFour;
  }


  public OrderTransaction createdTime(A2CDateTime createdTime) {
    this.createdTime = createdTime;
    return this;
  }

  /**
   * Get createdTime
   * @return createdTime
   */
  @javax.annotation.Nullable
  public A2CDateTime getCreatedTime() {
    return createdTime;
  }

  public void setCreatedTime(A2CDateTime createdTime) {
    this.createdTime = createdTime;
  }


  public OrderTransaction currency(String currency) {
    this.currency = currency;
    return this;
  }

  /**
   * Get currency
   * @return currency
   */
  @javax.annotation.Nullable
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public OrderTransaction customFields(Object customFields) {
    this.customFields = customFields;
    return this;
  }

  /**
   * Get customFields
   * @return customFields
   */
  @javax.annotation.Nullable
  public Object getCustomFields() {
    return customFields;
  }

  public void setCustomFields(Object customFields) {
    this.customFields = customFields;
  }


  public OrderTransaction cvvCode(String cvvCode) {
    this.cvvCode = cvvCode;
    return this;
  }

  /**
   * Get cvvCode
   * @return cvvCode
   */
  @javax.annotation.Nullable
  public String getCvvCode() {
    return cvvCode;
  }

  public void setCvvCode(String cvvCode) {
    this.cvvCode = cvvCode;
  }


  public OrderTransaction cvvMessage(String cvvMessage) {
    this.cvvMessage = cvvMessage;
    return this;
  }

  /**
   * Get cvvMessage
   * @return cvvMessage
   */
  @javax.annotation.Nullable
  public String getCvvMessage() {
    return cvvMessage;
  }

  public void setCvvMessage(String cvvMessage) {
    this.cvvMessage = cvvMessage;
  }


  public OrderTransaction description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public OrderTransaction gateway(String gateway) {
    this.gateway = gateway;
    return this;
  }

  /**
   * Get gateway
   * @return gateway
   */
  @javax.annotation.Nullable
  public String getGateway() {
    return gateway;
  }

  public void setGateway(String gateway) {
    this.gateway = gateway;
  }


  public OrderTransaction id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public OrderTransaction isTestMode(Boolean isTestMode) {
    this.isTestMode = isTestMode;
    return this;
  }

  /**
   * Get isTestMode
   * @return isTestMode
   */
  @javax.annotation.Nullable
  public Boolean getIsTestMode() {
    return isTestMode;
  }

  public void setIsTestMode(Boolean isTestMode) {
    this.isTestMode = isTestMode;
  }


  public OrderTransaction orderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

  /**
   * Get orderId
   * @return orderId
   */
  @javax.annotation.Nullable
  public String getOrderId() {
    return orderId;
  }

  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }


  public OrderTransaction parentId(String parentId) {
    this.parentId = parentId;
    return this;
  }

  /**
   * Get parentId
   * @return parentId
   */
  @javax.annotation.Nullable
  public String getParentId() {
    return parentId;
  }

  public void setParentId(String parentId) {
    this.parentId = parentId;
  }


  public OrderTransaction referenceNumber(String referenceNumber) {
    this.referenceNumber = referenceNumber;
    return this;
  }

  /**
   * Get referenceNumber
   * @return referenceNumber
   */
  @javax.annotation.Nullable
  public String getReferenceNumber() {
    return referenceNumber;
  }

  public void setReferenceNumber(String referenceNumber) {
    this.referenceNumber = referenceNumber;
  }


  public OrderTransaction settlementAmount(BigDecimal settlementAmount) {
    this.settlementAmount = settlementAmount;
    return this;
  }

  /**
   * Get settlementAmount
   * @return settlementAmount
   */
  @javax.annotation.Nullable
  public BigDecimal getSettlementAmount() {
    return settlementAmount;
  }

  public void setSettlementAmount(BigDecimal settlementAmount) {
    this.settlementAmount = settlementAmount;
  }


  public OrderTransaction settlementCreatedTime(A2CDateTime settlementCreatedTime) {
    this.settlementCreatedTime = settlementCreatedTime;
    return this;
  }

  /**
   * Get settlementCreatedTime
   * @return settlementCreatedTime
   */
  @javax.annotation.Nullable
  public A2CDateTime getSettlementCreatedTime() {
    return settlementCreatedTime;
  }

  public void setSettlementCreatedTime(A2CDateTime settlementCreatedTime) {
    this.settlementCreatedTime = settlementCreatedTime;
  }


  public OrderTransaction settlementCurrency(String settlementCurrency) {
    this.settlementCurrency = settlementCurrency;
    return this;
  }

  /**
   * Get settlementCurrency
   * @return settlementCurrency
   */
  @javax.annotation.Nullable
  public String getSettlementCurrency() {
    return settlementCurrency;
  }

  public void setSettlementCurrency(String settlementCurrency) {
    this.settlementCurrency = settlementCurrency;
  }


  public OrderTransaction status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public OrderTransaction transactionId(String transactionId) {
    this.transactionId = transactionId;
    return this;
  }

  /**
   * Get transactionId
   * @return transactionId
   */
  @javax.annotation.Nullable
  public String getTransactionId() {
    return transactionId;
  }

  public void setTransactionId(String transactionId) {
    this.transactionId = transactionId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderTransaction orderTransaction = (OrderTransaction) o;
    return Objects.equals(this.additionalFields, orderTransaction.additionalFields) &&
        Objects.equals(this.amount, orderTransaction.amount) &&
        Objects.equals(this.avsMessage, orderTransaction.avsMessage) &&
        Objects.equals(this.avsPostalRespCode, orderTransaction.avsPostalRespCode) &&
        Objects.equals(this.avsStreetRespCode, orderTransaction.avsStreetRespCode) &&
        Objects.equals(this.cardBin, orderTransaction.cardBin) &&
        Objects.equals(this.cardBrand, orderTransaction.cardBrand) &&
        Objects.equals(this.cardLastFour, orderTransaction.cardLastFour) &&
        Objects.equals(this.createdTime, orderTransaction.createdTime) &&
        Objects.equals(this.currency, orderTransaction.currency) &&
        Objects.equals(this.customFields, orderTransaction.customFields) &&
        Objects.equals(this.cvvCode, orderTransaction.cvvCode) &&
        Objects.equals(this.cvvMessage, orderTransaction.cvvMessage) &&
        Objects.equals(this.description, orderTransaction.description) &&
        Objects.equals(this.gateway, orderTransaction.gateway) &&
        Objects.equals(this.id, orderTransaction.id) &&
        Objects.equals(this.isTestMode, orderTransaction.isTestMode) &&
        Objects.equals(this.orderId, orderTransaction.orderId) &&
        Objects.equals(this.parentId, orderTransaction.parentId) &&
        Objects.equals(this.referenceNumber, orderTransaction.referenceNumber) &&
        Objects.equals(this.settlementAmount, orderTransaction.settlementAmount) &&
        Objects.equals(this.settlementCreatedTime, orderTransaction.settlementCreatedTime) &&
        Objects.equals(this.settlementCurrency, orderTransaction.settlementCurrency) &&
        Objects.equals(this.status, orderTransaction.status) &&
        Objects.equals(this.transactionId, orderTransaction.transactionId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalFields, amount, avsMessage, avsPostalRespCode, avsStreetRespCode, cardBin, cardBrand, cardLastFour, createdTime, currency, customFields, cvvCode, cvvMessage, description, gateway, id, isTestMode, orderId, parentId, referenceNumber, settlementAmount, settlementCreatedTime, settlementCurrency, status, transactionId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderTransaction {\n");
    sb.append("    additionalFields: ").append(toIndentedString(additionalFields)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    avsMessage: ").append(toIndentedString(avsMessage)).append("\n");
    sb.append("    avsPostalRespCode: ").append(toIndentedString(avsPostalRespCode)).append("\n");
    sb.append("    avsStreetRespCode: ").append(toIndentedString(avsStreetRespCode)).append("\n");
    sb.append("    cardBin: ").append(toIndentedString(cardBin)).append("\n");
    sb.append("    cardBrand: ").append(toIndentedString(cardBrand)).append("\n");
    sb.append("    cardLastFour: ").append(toIndentedString(cardLastFour)).append("\n");
    sb.append("    createdTime: ").append(toIndentedString(createdTime)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    cvvCode: ").append(toIndentedString(cvvCode)).append("\n");
    sb.append("    cvvMessage: ").append(toIndentedString(cvvMessage)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    gateway: ").append(toIndentedString(gateway)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isTestMode: ").append(toIndentedString(isTestMode)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    referenceNumber: ").append(toIndentedString(referenceNumber)).append("\n");
    sb.append("    settlementAmount: ").append(toIndentedString(settlementAmount)).append("\n");
    sb.append("    settlementCreatedTime: ").append(toIndentedString(settlementCreatedTime)).append("\n");
    sb.append("    settlementCurrency: ").append(toIndentedString(settlementCurrency)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("additional_fields");
    openapiFields.add("amount");
    openapiFields.add("avs_message");
    openapiFields.add("avs_postal_resp_code");
    openapiFields.add("avs_street_resp_code");
    openapiFields.add("card_bin");
    openapiFields.add("card_brand");
    openapiFields.add("card_last_four");
    openapiFields.add("created_time");
    openapiFields.add("currency");
    openapiFields.add("custom_fields");
    openapiFields.add("cvv_code");
    openapiFields.add("cvv_message");
    openapiFields.add("description");
    openapiFields.add("gateway");
    openapiFields.add("id");
    openapiFields.add("is_test_mode");
    openapiFields.add("order_id");
    openapiFields.add("parent_id");
    openapiFields.add("reference_number");
    openapiFields.add("settlement_amount");
    openapiFields.add("settlement_created_time");
    openapiFields.add("settlement_currency");
    openapiFields.add("status");
    openapiFields.add("transaction_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to OrderTransaction
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OrderTransaction.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrderTransaction is not found in the empty JSON string", OrderTransaction.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OrderTransaction.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OrderTransaction` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("avs_message") != null && !jsonObj.get("avs_message").isJsonNull()) && !jsonObj.get("avs_message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `avs_message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("avs_message").toString()));
      }
      if ((jsonObj.get("avs_postal_resp_code") != null && !jsonObj.get("avs_postal_resp_code").isJsonNull()) && !jsonObj.get("avs_postal_resp_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `avs_postal_resp_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("avs_postal_resp_code").toString()));
      }
      if ((jsonObj.get("avs_street_resp_code") != null && !jsonObj.get("avs_street_resp_code").isJsonNull()) && !jsonObj.get("avs_street_resp_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `avs_street_resp_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("avs_street_resp_code").toString()));
      }
      if ((jsonObj.get("card_bin") != null && !jsonObj.get("card_bin").isJsonNull()) && !jsonObj.get("card_bin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `card_bin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("card_bin").toString()));
      }
      if ((jsonObj.get("card_brand") != null && !jsonObj.get("card_brand").isJsonNull()) && !jsonObj.get("card_brand").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `card_brand` to be a primitive type in the JSON string but got `%s`", jsonObj.get("card_brand").toString()));
      }
      if ((jsonObj.get("card_last_four") != null && !jsonObj.get("card_last_four").isJsonNull()) && !jsonObj.get("card_last_four").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `card_last_four` to be a primitive type in the JSON string but got `%s`", jsonObj.get("card_last_four").toString()));
      }
      // validate the optional field `created_time`
      if (jsonObj.get("created_time") != null && !jsonObj.get("created_time").isJsonNull()) {
        A2CDateTime.validateJsonElement(jsonObj.get("created_time"));
      }
      if ((jsonObj.get("currency") != null && !jsonObj.get("currency").isJsonNull()) && !jsonObj.get("currency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currency").toString()));
      }
      if ((jsonObj.get("cvv_code") != null && !jsonObj.get("cvv_code").isJsonNull()) && !jsonObj.get("cvv_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cvv_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cvv_code").toString()));
      }
      if ((jsonObj.get("cvv_message") != null && !jsonObj.get("cvv_message").isJsonNull()) && !jsonObj.get("cvv_message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cvv_message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cvv_message").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("gateway") != null && !jsonObj.get("gateway").isJsonNull()) && !jsonObj.get("gateway").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gateway` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gateway").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("order_id") != null && !jsonObj.get("order_id").isJsonNull()) && !jsonObj.get("order_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `order_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("order_id").toString()));
      }
      if ((jsonObj.get("parent_id") != null && !jsonObj.get("parent_id").isJsonNull()) && !jsonObj.get("parent_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parent_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parent_id").toString()));
      }
      if ((jsonObj.get("reference_number") != null && !jsonObj.get("reference_number").isJsonNull()) && !jsonObj.get("reference_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reference_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reference_number").toString()));
      }
      // validate the optional field `settlement_created_time`
      if (jsonObj.get("settlement_created_time") != null && !jsonObj.get("settlement_created_time").isJsonNull()) {
        A2CDateTime.validateJsonElement(jsonObj.get("settlement_created_time"));
      }
      if ((jsonObj.get("settlement_currency") != null && !jsonObj.get("settlement_currency").isJsonNull()) && !jsonObj.get("settlement_currency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `settlement_currency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("settlement_currency").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("transaction_id") != null && !jsonObj.get("transaction_id").isJsonNull()) && !jsonObj.get("transaction_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transaction_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transaction_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrderTransaction.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrderTransaction' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrderTransaction> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrderTransaction.class));

       return (TypeAdapter<T>) new TypeAdapter<OrderTransaction>() {
           @Override
           public void write(JsonWriter out, OrderTransaction value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OrderTransaction read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of OrderTransaction given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of OrderTransaction
   * @throws IOException if the JSON string is invalid with respect to OrderTransaction
   */
  public static OrderTransaction fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrderTransaction.class);
  }

  /**
   * Convert an instance of OrderTransaction to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

