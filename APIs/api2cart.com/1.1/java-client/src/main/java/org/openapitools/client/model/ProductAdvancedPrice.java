/*
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.client.model.A2CDateTime;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ProductAdvancedPrice
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:12:09.268126-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ProductAdvancedPrice {
  public static final String SERIALIZED_NAME_ADDITIONAL_FIELDS = "additional_fields";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_FIELDS)
  private Object additionalFields;

  public static final String SERIALIZED_NAME_AVAIL = "avail";
  @SerializedName(SERIALIZED_NAME_AVAIL)
  private Boolean avail;

  public static final String SERIALIZED_NAME_CUSTOM_FIELDS = "custom_fields";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELDS)
  private Object customFields;

  public static final String SERIALIZED_NAME_EXPIRE_TIME = "expire_time";
  @SerializedName(SERIALIZED_NAME_EXPIRE_TIME)
  private A2CDateTime expireTime;

  public static final String SERIALIZED_NAME_GROUP_ID = "group_id";
  @SerializedName(SERIALIZED_NAME_GROUP_ID)
  private String groupId;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_QUANTITY_FROM = "quantity_from";
  @SerializedName(SERIALIZED_NAME_QUANTITY_FROM)
  private BigDecimal quantityFrom;

  public static final String SERIALIZED_NAME_START_TIME = "start_time";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private A2CDateTime startTime;

  public static final String SERIALIZED_NAME_VALUE = "value";
  @SerializedName(SERIALIZED_NAME_VALUE)
  private BigDecimal value;

  public ProductAdvancedPrice() {
  }

  public ProductAdvancedPrice additionalFields(Object additionalFields) {
    this.additionalFields = additionalFields;
    return this;
  }

  /**
   * Get additionalFields
   * @return additionalFields
   */
  @javax.annotation.Nullable
  public Object getAdditionalFields() {
    return additionalFields;
  }

  public void setAdditionalFields(Object additionalFields) {
    this.additionalFields = additionalFields;
  }


  public ProductAdvancedPrice avail(Boolean avail) {
    this.avail = avail;
    return this;
  }

  /**
   * Get avail
   * @return avail
   */
  @javax.annotation.Nullable
  public Boolean getAvail() {
    return avail;
  }

  public void setAvail(Boolean avail) {
    this.avail = avail;
  }


  public ProductAdvancedPrice customFields(Object customFields) {
    this.customFields = customFields;
    return this;
  }

  /**
   * Get customFields
   * @return customFields
   */
  @javax.annotation.Nullable
  public Object getCustomFields() {
    return customFields;
  }

  public void setCustomFields(Object customFields) {
    this.customFields = customFields;
  }


  public ProductAdvancedPrice expireTime(A2CDateTime expireTime) {
    this.expireTime = expireTime;
    return this;
  }

  /**
   * Get expireTime
   * @return expireTime
   */
  @javax.annotation.Nullable
  public A2CDateTime getExpireTime() {
    return expireTime;
  }

  public void setExpireTime(A2CDateTime expireTime) {
    this.expireTime = expireTime;
  }


  public ProductAdvancedPrice groupId(String groupId) {
    this.groupId = groupId;
    return this;
  }

  /**
   * Get groupId
   * @return groupId
   */
  @javax.annotation.Nullable
  public String getGroupId() {
    return groupId;
  }

  public void setGroupId(String groupId) {
    this.groupId = groupId;
  }


  public ProductAdvancedPrice id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public ProductAdvancedPrice quantityFrom(BigDecimal quantityFrom) {
    this.quantityFrom = quantityFrom;
    return this;
  }

  /**
   * Get quantityFrom
   * @return quantityFrom
   */
  @javax.annotation.Nullable
  public BigDecimal getQuantityFrom() {
    return quantityFrom;
  }

  public void setQuantityFrom(BigDecimal quantityFrom) {
    this.quantityFrom = quantityFrom;
  }


  public ProductAdvancedPrice startTime(A2CDateTime startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Get startTime
   * @return startTime
   */
  @javax.annotation.Nullable
  public A2CDateTime getStartTime() {
    return startTime;
  }

  public void setStartTime(A2CDateTime startTime) {
    this.startTime = startTime;
  }


  public ProductAdvancedPrice value(BigDecimal value) {
    this.value = value;
    return this;
  }

  /**
   * Get value
   * @return value
   */
  @javax.annotation.Nullable
  public BigDecimal getValue() {
    return value;
  }

  public void setValue(BigDecimal value) {
    this.value = value;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductAdvancedPrice productAdvancedPrice = (ProductAdvancedPrice) o;
    return Objects.equals(this.additionalFields, productAdvancedPrice.additionalFields) &&
        Objects.equals(this.avail, productAdvancedPrice.avail) &&
        Objects.equals(this.customFields, productAdvancedPrice.customFields) &&
        Objects.equals(this.expireTime, productAdvancedPrice.expireTime) &&
        Objects.equals(this.groupId, productAdvancedPrice.groupId) &&
        Objects.equals(this.id, productAdvancedPrice.id) &&
        Objects.equals(this.quantityFrom, productAdvancedPrice.quantityFrom) &&
        Objects.equals(this.startTime, productAdvancedPrice.startTime) &&
        Objects.equals(this.value, productAdvancedPrice.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalFields, avail, customFields, expireTime, groupId, id, quantityFrom, startTime, value);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductAdvancedPrice {\n");
    sb.append("    additionalFields: ").append(toIndentedString(additionalFields)).append("\n");
    sb.append("    avail: ").append(toIndentedString(avail)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    expireTime: ").append(toIndentedString(expireTime)).append("\n");
    sb.append("    groupId: ").append(toIndentedString(groupId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    quantityFrom: ").append(toIndentedString(quantityFrom)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("additional_fields");
    openapiFields.add("avail");
    openapiFields.add("custom_fields");
    openapiFields.add("expire_time");
    openapiFields.add("group_id");
    openapiFields.add("id");
    openapiFields.add("quantity_from");
    openapiFields.add("start_time");
    openapiFields.add("value");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ProductAdvancedPrice
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ProductAdvancedPrice.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ProductAdvancedPrice is not found in the empty JSON string", ProductAdvancedPrice.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ProductAdvancedPrice.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ProductAdvancedPrice` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `expire_time`
      if (jsonObj.get("expire_time") != null && !jsonObj.get("expire_time").isJsonNull()) {
        A2CDateTime.validateJsonElement(jsonObj.get("expire_time"));
      }
      if ((jsonObj.get("group_id") != null && !jsonObj.get("group_id").isJsonNull()) && !jsonObj.get("group_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `group_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("group_id").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      // validate the optional field `start_time`
      if (jsonObj.get("start_time") != null && !jsonObj.get("start_time").isJsonNull()) {
        A2CDateTime.validateJsonElement(jsonObj.get("start_time"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ProductAdvancedPrice.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ProductAdvancedPrice' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ProductAdvancedPrice> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ProductAdvancedPrice.class));

       return (TypeAdapter<T>) new TypeAdapter<ProductAdvancedPrice>() {
           @Override
           public void write(JsonWriter out, ProductAdvancedPrice value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ProductAdvancedPrice read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ProductAdvancedPrice given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ProductAdvancedPrice
   * @throws IOException if the JSON string is invalid with respect to ProductAdvancedPrice
   */
  public static ProductAdvancedPrice fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ProductAdvancedPrice.class);
  }

  /**
   * Convert an instance of ProductAdvancedPrice to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

