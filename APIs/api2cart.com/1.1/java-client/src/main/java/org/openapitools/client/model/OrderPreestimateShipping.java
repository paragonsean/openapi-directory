/*
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * OrderPreestimateShipping
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:12:09.268126-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class OrderPreestimateShipping {
  public static final String SERIALIZED_NAME_ADDITIONAL_FIELDS = "additional_fields";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_FIELDS)
  private Object additionalFields;

  public static final String SERIALIZED_NAME_CARRIER_CODE = "carrier_code";
  @SerializedName(SERIALIZED_NAME_CARRIER_CODE)
  private String carrierCode;

  public static final String SERIALIZED_NAME_CARRIER_NAME = "carrier_name";
  @SerializedName(SERIALIZED_NAME_CARRIER_NAME)
  private String carrierName;

  public static final String SERIALIZED_NAME_CUSTOM_FIELDS = "custom_fields";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELDS)
  private Object customFields;

  public static final String SERIALIZED_NAME_DELIVERY_TIME = "delivery_time";
  @SerializedName(SERIALIZED_NAME_DELIVERY_TIME)
  private String deliveryTime;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_METHOD_CODE = "method_code";
  @SerializedName(SERIALIZED_NAME_METHOD_CODE)
  private String methodCode;

  public static final String SERIALIZED_NAME_METHOD_NAME = "method_name";
  @SerializedName(SERIALIZED_NAME_METHOD_NAME)
  private String methodName;

  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private BigDecimal price;

  public static final String SERIALIZED_NAME_PRICE_INC_TAX = "price_inc_tax";
  @SerializedName(SERIALIZED_NAME_PRICE_INC_TAX)
  private BigDecimal priceIncTax;

  public OrderPreestimateShipping() {
  }

  public OrderPreestimateShipping additionalFields(Object additionalFields) {
    this.additionalFields = additionalFields;
    return this;
  }

  /**
   * Get additionalFields
   * @return additionalFields
   */
  @javax.annotation.Nullable
  public Object getAdditionalFields() {
    return additionalFields;
  }

  public void setAdditionalFields(Object additionalFields) {
    this.additionalFields = additionalFields;
  }


  public OrderPreestimateShipping carrierCode(String carrierCode) {
    this.carrierCode = carrierCode;
    return this;
  }

  /**
   * Get carrierCode
   * @return carrierCode
   */
  @javax.annotation.Nullable
  public String getCarrierCode() {
    return carrierCode;
  }

  public void setCarrierCode(String carrierCode) {
    this.carrierCode = carrierCode;
  }


  public OrderPreestimateShipping carrierName(String carrierName) {
    this.carrierName = carrierName;
    return this;
  }

  /**
   * Get carrierName
   * @return carrierName
   */
  @javax.annotation.Nullable
  public String getCarrierName() {
    return carrierName;
  }

  public void setCarrierName(String carrierName) {
    this.carrierName = carrierName;
  }


  public OrderPreestimateShipping customFields(Object customFields) {
    this.customFields = customFields;
    return this;
  }

  /**
   * Get customFields
   * @return customFields
   */
  @javax.annotation.Nullable
  public Object getCustomFields() {
    return customFields;
  }

  public void setCustomFields(Object customFields) {
    this.customFields = customFields;
  }


  public OrderPreestimateShipping deliveryTime(String deliveryTime) {
    this.deliveryTime = deliveryTime;
    return this;
  }

  /**
   * Get deliveryTime
   * @return deliveryTime
   */
  @javax.annotation.Nullable
  public String getDeliveryTime() {
    return deliveryTime;
  }

  public void setDeliveryTime(String deliveryTime) {
    this.deliveryTime = deliveryTime;
  }


  public OrderPreestimateShipping description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public OrderPreestimateShipping methodCode(String methodCode) {
    this.methodCode = methodCode;
    return this;
  }

  /**
   * Get methodCode
   * @return methodCode
   */
  @javax.annotation.Nullable
  public String getMethodCode() {
    return methodCode;
  }

  public void setMethodCode(String methodCode) {
    this.methodCode = methodCode;
  }


  public OrderPreestimateShipping methodName(String methodName) {
    this.methodName = methodName;
    return this;
  }

  /**
   * Get methodName
   * @return methodName
   */
  @javax.annotation.Nullable
  public String getMethodName() {
    return methodName;
  }

  public void setMethodName(String methodName) {
    this.methodName = methodName;
  }


  public OrderPreestimateShipping price(BigDecimal price) {
    this.price = price;
    return this;
  }

  /**
   * Get price
   * @return price
   */
  @javax.annotation.Nullable
  public BigDecimal getPrice() {
    return price;
  }

  public void setPrice(BigDecimal price) {
    this.price = price;
  }


  public OrderPreestimateShipping priceIncTax(BigDecimal priceIncTax) {
    this.priceIncTax = priceIncTax;
    return this;
  }

  /**
   * Get priceIncTax
   * @return priceIncTax
   */
  @javax.annotation.Nullable
  public BigDecimal getPriceIncTax() {
    return priceIncTax;
  }

  public void setPriceIncTax(BigDecimal priceIncTax) {
    this.priceIncTax = priceIncTax;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderPreestimateShipping orderPreestimateShipping = (OrderPreestimateShipping) o;
    return Objects.equals(this.additionalFields, orderPreestimateShipping.additionalFields) &&
        Objects.equals(this.carrierCode, orderPreestimateShipping.carrierCode) &&
        Objects.equals(this.carrierName, orderPreestimateShipping.carrierName) &&
        Objects.equals(this.customFields, orderPreestimateShipping.customFields) &&
        Objects.equals(this.deliveryTime, orderPreestimateShipping.deliveryTime) &&
        Objects.equals(this.description, orderPreestimateShipping.description) &&
        Objects.equals(this.methodCode, orderPreestimateShipping.methodCode) &&
        Objects.equals(this.methodName, orderPreestimateShipping.methodName) &&
        Objects.equals(this.price, orderPreestimateShipping.price) &&
        Objects.equals(this.priceIncTax, orderPreestimateShipping.priceIncTax);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalFields, carrierCode, carrierName, customFields, deliveryTime, description, methodCode, methodName, price, priceIncTax);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderPreestimateShipping {\n");
    sb.append("    additionalFields: ").append(toIndentedString(additionalFields)).append("\n");
    sb.append("    carrierCode: ").append(toIndentedString(carrierCode)).append("\n");
    sb.append("    carrierName: ").append(toIndentedString(carrierName)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    deliveryTime: ").append(toIndentedString(deliveryTime)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    methodCode: ").append(toIndentedString(methodCode)).append("\n");
    sb.append("    methodName: ").append(toIndentedString(methodName)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    priceIncTax: ").append(toIndentedString(priceIncTax)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("additional_fields");
    openapiFields.add("carrier_code");
    openapiFields.add("carrier_name");
    openapiFields.add("custom_fields");
    openapiFields.add("delivery_time");
    openapiFields.add("description");
    openapiFields.add("method_code");
    openapiFields.add("method_name");
    openapiFields.add("price");
    openapiFields.add("price_inc_tax");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to OrderPreestimateShipping
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OrderPreestimateShipping.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrderPreestimateShipping is not found in the empty JSON string", OrderPreestimateShipping.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OrderPreestimateShipping.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OrderPreestimateShipping` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("carrier_code") != null && !jsonObj.get("carrier_code").isJsonNull()) && !jsonObj.get("carrier_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `carrier_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("carrier_code").toString()));
      }
      if ((jsonObj.get("carrier_name") != null && !jsonObj.get("carrier_name").isJsonNull()) && !jsonObj.get("carrier_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `carrier_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("carrier_name").toString()));
      }
      if ((jsonObj.get("delivery_time") != null && !jsonObj.get("delivery_time").isJsonNull()) && !jsonObj.get("delivery_time").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `delivery_time` to be a primitive type in the JSON string but got `%s`", jsonObj.get("delivery_time").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("method_code") != null && !jsonObj.get("method_code").isJsonNull()) && !jsonObj.get("method_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `method_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("method_code").toString()));
      }
      if ((jsonObj.get("method_name") != null && !jsonObj.get("method_name").isJsonNull()) && !jsonObj.get("method_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `method_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("method_name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrderPreestimateShipping.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrderPreestimateShipping' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrderPreestimateShipping> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrderPreestimateShipping.class));

       return (TypeAdapter<T>) new TypeAdapter<OrderPreestimateShipping>() {
           @Override
           public void write(JsonWriter out, OrderPreestimateShipping value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OrderPreestimateShipping read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of OrderPreestimateShipping given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of OrderPreestimateShipping
   * @throws IOException if the JSON string is invalid with respect to OrderPreestimateShipping
   */
  public static OrderPreestimateShipping fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrderPreestimateShipping.class);
  }

  /**
   * Convert an instance of OrderPreestimateShipping to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

