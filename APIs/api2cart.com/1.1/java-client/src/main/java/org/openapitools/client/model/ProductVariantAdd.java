/*
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ProductVariantAddAttributesInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ProductVariantAdd
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:12:09.268126-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ProductVariantAdd {
  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private List<ProductVariantAddAttributesInner> attributes = new ArrayList<>();

  public static final String SERIALIZED_NAME_AVAILABLE_FOR_SALE = "available_for_sale";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_FOR_SALE)
  private Boolean availableForSale = true;

  public static final String SERIALIZED_NAME_AVAILABLE_FOR_VIEW = "available_for_view";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_FOR_VIEW)
  private Boolean availableForView = true;

  public static final String SERIALIZED_NAME_BARCODE = "barcode";
  @SerializedName(SERIALIZED_NAME_BARCODE)
  private String barcode;

  public static final String SERIALIZED_NAME_CLEAR_CACHE = "clear_cache";
  @SerializedName(SERIALIZED_NAME_CLEAR_CACHE)
  private Boolean clearCache = true;

  public static final String SERIALIZED_NAME_COST_PRICE = "cost_price";
  @SerializedName(SERIALIZED_NAME_COST_PRICE)
  private BigDecimal costPrice;

  public static final String SERIALIZED_NAME_COUNTRY_OF_ORIGIN = "country_of_origin";
  @SerializedName(SERIALIZED_NAME_COUNTRY_OF_ORIGIN)
  private String countryOfOrigin;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_HARMONIZED_SYSTEM_CODE = "harmonized_system_code";
  @SerializedName(SERIALIZED_NAME_HARMONIZED_SYSTEM_CODE)
  private String harmonizedSystemCode;

  public static final String SERIALIZED_NAME_HEIGHT = "height";
  @SerializedName(SERIALIZED_NAME_HEIGHT)
  private BigDecimal height;

  public static final String SERIALIZED_NAME_LANG_ID = "lang_id";
  @SerializedName(SERIALIZED_NAME_LANG_ID)
  private String langId;

  public static final String SERIALIZED_NAME_LENGTH = "length";
  @SerializedName(SERIALIZED_NAME_LENGTH)
  private BigDecimal length;

  public static final String SERIALIZED_NAME_MANAGE_STOCK = "manage_stock";
  @SerializedName(SERIALIZED_NAME_MANAGE_STOCK)
  private Boolean manageStock;

  public static final String SERIALIZED_NAME_MANUFACTURER = "manufacturer";
  @SerializedName(SERIALIZED_NAME_MANUFACTURER)
  private String manufacturer;

  public static final String SERIALIZED_NAME_META_DESCRIPTION = "meta_description";
  @SerializedName(SERIALIZED_NAME_META_DESCRIPTION)
  private String metaDescription;

  public static final String SERIALIZED_NAME_META_KEYWORDS = "meta_keywords";
  @SerializedName(SERIALIZED_NAME_META_KEYWORDS)
  private String metaKeywords;

  public static final String SERIALIZED_NAME_META_TITLE = "meta_title";
  @SerializedName(SERIALIZED_NAME_META_TITLE)
  private String metaTitle;

  public static final String SERIALIZED_NAME_MODEL = "model";
  @SerializedName(SERIALIZED_NAME_MODEL)
  private String model;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private BigDecimal price;

  public static final String SERIALIZED_NAME_PRODUCT_ID = "product_id";
  @SerializedName(SERIALIZED_NAME_PRODUCT_ID)
  private String productId;

  public static final String SERIALIZED_NAME_QUANTITY = "quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  private BigDecimal quantity = new BigDecimal("0");

  public static final String SERIALIZED_NAME_SHORT_DESCRIPTION = "short_description";
  @SerializedName(SERIALIZED_NAME_SHORT_DESCRIPTION)
  private String shortDescription;

  public static final String SERIALIZED_NAME_SKU = "sku";
  @SerializedName(SERIALIZED_NAME_SKU)
  private String sku;

  public static final String SERIALIZED_NAME_SPECIAL_PRICE = "special_price";
  @SerializedName(SERIALIZED_NAME_SPECIAL_PRICE)
  private BigDecimal specialPrice;

  public static final String SERIALIZED_NAME_SPRICE_CREATE = "sprice_create";
  @SerializedName(SERIALIZED_NAME_SPRICE_CREATE)
  private String spriceCreate;

  public static final String SERIALIZED_NAME_SPRICE_EXPIRE = "sprice_expire";
  @SerializedName(SERIALIZED_NAME_SPRICE_EXPIRE)
  private String spriceExpire;

  public static final String SERIALIZED_NAME_SPRICE_MODIFIED = "sprice_modified";
  @SerializedName(SERIALIZED_NAME_SPRICE_MODIFIED)
  private String spriceModified;

  public static final String SERIALIZED_NAME_STORE_ID = "store_id";
  @SerializedName(SERIALIZED_NAME_STORE_ID)
  private String storeId;

  public static final String SERIALIZED_NAME_TAX_CLASS_ID = "tax_class_id";
  @SerializedName(SERIALIZED_NAME_TAX_CLASS_ID)
  private String taxClassId;

  public static final String SERIALIZED_NAME_TAXABLE = "taxable";
  @SerializedName(SERIALIZED_NAME_TAXABLE)
  private Boolean taxable = true;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_WAREHOUSE_ID = "warehouse_id";
  @SerializedName(SERIALIZED_NAME_WAREHOUSE_ID)
  private String warehouseId;

  public static final String SERIALIZED_NAME_WEIGHT = "weight";
  @SerializedName(SERIALIZED_NAME_WEIGHT)
  private BigDecimal weight = new BigDecimal("0");

  public static final String SERIALIZED_NAME_WEIGHT_UNIT = "weight_unit";
  @SerializedName(SERIALIZED_NAME_WEIGHT_UNIT)
  private String weightUnit;

  public static final String SERIALIZED_NAME_WIDTH = "width";
  @SerializedName(SERIALIZED_NAME_WIDTH)
  private BigDecimal width;

  public ProductVariantAdd() {
  }

  public ProductVariantAdd attributes(List<ProductVariantAddAttributesInner> attributes) {
    this.attributes = attributes;
    return this;
  }

  public ProductVariantAdd addAttributesItem(ProductVariantAddAttributesInner attributesItem) {
    if (this.attributes == null) {
      this.attributes = new ArrayList<>();
    }
    this.attributes.add(attributesItem);
    return this;
  }

  /**
   * Defines variant&#39;s attributes list
   * @return attributes
   */
  @javax.annotation.Nullable
  public List<ProductVariantAddAttributesInner> getAttributes() {
    return attributes;
  }

  public void setAttributes(List<ProductVariantAddAttributesInner> attributes) {
    this.attributes = attributes;
  }


  public ProductVariantAdd availableForSale(Boolean availableForSale) {
    this.availableForSale = availableForSale;
    return this;
  }

  /**
   * Specifies the set of visible/invisible product&#39;s variants for sale
   * @return availableForSale
   */
  @javax.annotation.Nullable
  public Boolean getAvailableForSale() {
    return availableForSale;
  }

  public void setAvailableForSale(Boolean availableForSale) {
    this.availableForSale = availableForSale;
  }


  public ProductVariantAdd availableForView(Boolean availableForView) {
    this.availableForView = availableForView;
    return this;
  }

  /**
   * Specifies the set of visible/invisible product&#39;s variants for users
   * @return availableForView
   */
  @javax.annotation.Nullable
  public Boolean getAvailableForView() {
    return availableForView;
  }

  public void setAvailableForView(Boolean availableForView) {
    this.availableForView = availableForView;
  }


  public ProductVariantAdd barcode(String barcode) {
    this.barcode = barcode;
    return this;
  }

  /**
   * A barcode is a unique code composed of numbers used as a product identifier.
   * @return barcode
   */
  @javax.annotation.Nullable
  public String getBarcode() {
    return barcode;
  }

  public void setBarcode(String barcode) {
    this.barcode = barcode;
  }


  public ProductVariantAdd clearCache(Boolean clearCache) {
    this.clearCache = clearCache;
    return this;
  }

  /**
   * Is cache clear required
   * @return clearCache
   */
  @javax.annotation.Nullable
  public Boolean getClearCache() {
    return clearCache;
  }

  public void setClearCache(Boolean clearCache) {
    this.clearCache = clearCache;
  }


  public ProductVariantAdd costPrice(BigDecimal costPrice) {
    this.costPrice = costPrice;
    return this;
  }

  /**
   * Defines new product&#39;s cost price
   * @return costPrice
   */
  @javax.annotation.Nullable
  public BigDecimal getCostPrice() {
    return costPrice;
  }

  public void setCostPrice(BigDecimal costPrice) {
    this.costPrice = costPrice;
  }


  public ProductVariantAdd countryOfOrigin(String countryOfOrigin) {
    this.countryOfOrigin = countryOfOrigin;
    return this;
  }

  /**
   * The country where the inventory item was made
   * @return countryOfOrigin
   */
  @javax.annotation.Nullable
  public String getCountryOfOrigin() {
    return countryOfOrigin;
  }

  public void setCountryOfOrigin(String countryOfOrigin) {
    this.countryOfOrigin = countryOfOrigin;
  }


  public ProductVariantAdd createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Defines the date of entity creation
   * @return createdAt
   */
  @javax.annotation.Nullable
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }


  public ProductVariantAdd description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Specifies variant&#39;s description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public ProductVariantAdd harmonizedSystemCode(String harmonizedSystemCode) {
    this.harmonizedSystemCode = harmonizedSystemCode;
    return this;
  }

  /**
   * Harmonized System Code. An HSC is a 6-digit identifier that allows participating countries to classify traded goods on a common basis for customs purposes
   * @return harmonizedSystemCode
   */
  @javax.annotation.Nullable
  public String getHarmonizedSystemCode() {
    return harmonizedSystemCode;
  }

  public void setHarmonizedSystemCode(String harmonizedSystemCode) {
    this.harmonizedSystemCode = harmonizedSystemCode;
  }


  public ProductVariantAdd height(BigDecimal height) {
    this.height = height;
    return this;
  }

  /**
   * Defines product&#39;s height
   * @return height
   */
  @javax.annotation.Nullable
  public BigDecimal getHeight() {
    return height;
  }

  public void setHeight(BigDecimal height) {
    this.height = height;
  }


  public ProductVariantAdd langId(String langId) {
    this.langId = langId;
    return this;
  }

  /**
   * Language id
   * @return langId
   */
  @javax.annotation.Nullable
  public String getLangId() {
    return langId;
  }

  public void setLangId(String langId) {
    this.langId = langId;
  }


  public ProductVariantAdd length(BigDecimal length) {
    this.length = length;
    return this;
  }

  /**
   * Defines product&#39;s length
   * @return length
   */
  @javax.annotation.Nullable
  public BigDecimal getLength() {
    return length;
  }

  public void setLength(BigDecimal length) {
    this.length = length;
  }


  public ProductVariantAdd manageStock(Boolean manageStock) {
    this.manageStock = manageStock;
    return this;
  }

  /**
   * Defines inventory tracking for product variant
   * @return manageStock
   */
  @javax.annotation.Nullable
  public Boolean getManageStock() {
    return manageStock;
  }

  public void setManageStock(Boolean manageStock) {
    this.manageStock = manageStock;
  }


  public ProductVariantAdd manufacturer(String manufacturer) {
    this.manufacturer = manufacturer;
    return this;
  }

  /**
   * Specifies the product variant&#39;s manufacturer
   * @return manufacturer
   */
  @javax.annotation.Nullable
  public String getManufacturer() {
    return manufacturer;
  }

  public void setManufacturer(String manufacturer) {
    this.manufacturer = manufacturer;
  }


  public ProductVariantAdd metaDescription(String metaDescription) {
    this.metaDescription = metaDescription;
    return this;
  }

  /**
   * Defines unique meta description of a entity
   * @return metaDescription
   */
  @javax.annotation.Nullable
  public String getMetaDescription() {
    return metaDescription;
  }

  public void setMetaDescription(String metaDescription) {
    this.metaDescription = metaDescription;
  }


  public ProductVariantAdd metaKeywords(String metaKeywords) {
    this.metaKeywords = metaKeywords;
    return this;
  }

  /**
   * Defines unique meta keywords for each entity
   * @return metaKeywords
   */
  @javax.annotation.Nullable
  public String getMetaKeywords() {
    return metaKeywords;
  }

  public void setMetaKeywords(String metaKeywords) {
    this.metaKeywords = metaKeywords;
  }


  public ProductVariantAdd metaTitle(String metaTitle) {
    this.metaTitle = metaTitle;
    return this;
  }

  /**
   * Defines unique meta title for each entity
   * @return metaTitle
   */
  @javax.annotation.Nullable
  public String getMetaTitle() {
    return metaTitle;
  }

  public void setMetaTitle(String metaTitle) {
    this.metaTitle = metaTitle;
  }


  public ProductVariantAdd model(String model) {
    this.model = model;
    return this;
  }

  /**
   * Specifies variant&#39;s model that has to be added
   * @return model
   */
  @javax.annotation.Nonnull
  public String getModel() {
    return model;
  }

  public void setModel(String model) {
    this.model = model;
  }


  public ProductVariantAdd name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Defines variant&#39;s name that has to be added
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public ProductVariantAdd price(BigDecimal price) {
    this.price = price;
    return this;
  }

  /**
   * Defines new product&#39;s variant price
   * @return price
   */
  @javax.annotation.Nullable
  public BigDecimal getPrice() {
    return price;
  }

  public void setPrice(BigDecimal price) {
    this.price = price;
  }


  public ProductVariantAdd productId(String productId) {
    this.productId = productId;
    return this;
  }

  /**
   * Defines product&#39;s id where the variant has to be added
   * @return productId
   */
  @javax.annotation.Nullable
  public String getProductId() {
    return productId;
  }

  public void setProductId(String productId) {
    this.productId = productId;
  }


  public ProductVariantAdd quantity(BigDecimal quantity) {
    this.quantity = quantity;
    return this;
  }

  /**
   * Defines product variant&#39;s quantity that has to be added
   * @return quantity
   */
  @javax.annotation.Nullable
  public BigDecimal getQuantity() {
    return quantity;
  }

  public void setQuantity(BigDecimal quantity) {
    this.quantity = quantity;
  }


  public ProductVariantAdd shortDescription(String shortDescription) {
    this.shortDescription = shortDescription;
    return this;
  }

  /**
   * Defines short description
   * @return shortDescription
   */
  @javax.annotation.Nullable
  public String getShortDescription() {
    return shortDescription;
  }

  public void setShortDescription(String shortDescription) {
    this.shortDescription = shortDescription;
  }


  public ProductVariantAdd sku(String sku) {
    this.sku = sku;
    return this;
  }

  /**
   * Defines variant&#39;s sku that has to be added
   * @return sku
   */
  @javax.annotation.Nullable
  public String getSku() {
    return sku;
  }

  public void setSku(String sku) {
    this.sku = sku;
  }


  public ProductVariantAdd specialPrice(BigDecimal specialPrice) {
    this.specialPrice = specialPrice;
    return this;
  }

  /**
   * Specifies variant&#39;s model that has to be added
   * @return specialPrice
   */
  @javax.annotation.Nullable
  public BigDecimal getSpecialPrice() {
    return specialPrice;
  }

  public void setSpecialPrice(BigDecimal specialPrice) {
    this.specialPrice = specialPrice;
  }


  public ProductVariantAdd spriceCreate(String spriceCreate) {
    this.spriceCreate = spriceCreate;
    return this;
  }

  /**
   * Defines the date of special price creation
   * @return spriceCreate
   */
  @javax.annotation.Nullable
  public String getSpriceCreate() {
    return spriceCreate;
  }

  public void setSpriceCreate(String spriceCreate) {
    this.spriceCreate = spriceCreate;
  }


  public ProductVariantAdd spriceExpire(String spriceExpire) {
    this.spriceExpire = spriceExpire;
    return this;
  }

  /**
   * Defines the term of special price offer duration
   * @return spriceExpire
   */
  @javax.annotation.Nullable
  public String getSpriceExpire() {
    return spriceExpire;
  }

  public void setSpriceExpire(String spriceExpire) {
    this.spriceExpire = spriceExpire;
  }


  public ProductVariantAdd spriceModified(String spriceModified) {
    this.spriceModified = spriceModified;
    return this;
  }

  /**
   * Defines the date of special price modification
   * @return spriceModified
   */
  @javax.annotation.Nullable
  public String getSpriceModified() {
    return spriceModified;
  }

  public void setSpriceModified(String spriceModified) {
    this.spriceModified = spriceModified;
  }


  public ProductVariantAdd storeId(String storeId) {
    this.storeId = storeId;
    return this;
  }

  /**
   * Add variants specified by store id
   * @return storeId
   */
  @javax.annotation.Nullable
  public String getStoreId() {
    return storeId;
  }

  public void setStoreId(String storeId) {
    this.storeId = storeId;
  }


  public ProductVariantAdd taxClassId(String taxClassId) {
    this.taxClassId = taxClassId;
    return this;
  }

  /**
   * Defines tax classes where entity has to be added
   * @return taxClassId
   */
  @javax.annotation.Nullable
  public String getTaxClassId() {
    return taxClassId;
  }

  public void setTaxClassId(String taxClassId) {
    this.taxClassId = taxClassId;
  }


  public ProductVariantAdd taxable(Boolean taxable) {
    this.taxable = taxable;
    return this;
  }

  /**
   * Specifies whether a tax is charged
   * @return taxable
   */
  @javax.annotation.Nullable
  public Boolean getTaxable() {
    return taxable;
  }

  public void setTaxable(Boolean taxable) {
    this.taxable = taxable;
  }


  public ProductVariantAdd url(String url) {
    this.url = url;
    return this;
  }

  /**
   * Defines unique product variant&#39;s URL
   * @return url
   */
  @javax.annotation.Nullable
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }


  public ProductVariantAdd warehouseId(String warehouseId) {
    this.warehouseId = warehouseId;
    return this;
  }

  /**
   * This parameter is used for selecting a warehouse where you need to set/modify a product quantity.
   * @return warehouseId
   */
  @javax.annotation.Nullable
  public String getWarehouseId() {
    return warehouseId;
  }

  public void setWarehouseId(String warehouseId) {
    this.warehouseId = warehouseId;
  }


  public ProductVariantAdd weight(BigDecimal weight) {
    this.weight = weight;
    return this;
  }

  /**
   * Weight
   * @return weight
   */
  @javax.annotation.Nullable
  public BigDecimal getWeight() {
    return weight;
  }

  public void setWeight(BigDecimal weight) {
    this.weight = weight;
  }


  public ProductVariantAdd weightUnit(String weightUnit) {
    this.weightUnit = weightUnit;
    return this;
  }

  /**
   * Weight Unit
   * @return weightUnit
   */
  @javax.annotation.Nullable
  public String getWeightUnit() {
    return weightUnit;
  }

  public void setWeightUnit(String weightUnit) {
    this.weightUnit = weightUnit;
  }


  public ProductVariantAdd width(BigDecimal width) {
    this.width = width;
    return this;
  }

  /**
   * Defines product&#39;s width
   * @return width
   */
  @javax.annotation.Nullable
  public BigDecimal getWidth() {
    return width;
  }

  public void setWidth(BigDecimal width) {
    this.width = width;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductVariantAdd productVariantAdd = (ProductVariantAdd) o;
    return Objects.equals(this.attributes, productVariantAdd.attributes) &&
        Objects.equals(this.availableForSale, productVariantAdd.availableForSale) &&
        Objects.equals(this.availableForView, productVariantAdd.availableForView) &&
        Objects.equals(this.barcode, productVariantAdd.barcode) &&
        Objects.equals(this.clearCache, productVariantAdd.clearCache) &&
        Objects.equals(this.costPrice, productVariantAdd.costPrice) &&
        Objects.equals(this.countryOfOrigin, productVariantAdd.countryOfOrigin) &&
        Objects.equals(this.createdAt, productVariantAdd.createdAt) &&
        Objects.equals(this.description, productVariantAdd.description) &&
        Objects.equals(this.harmonizedSystemCode, productVariantAdd.harmonizedSystemCode) &&
        Objects.equals(this.height, productVariantAdd.height) &&
        Objects.equals(this.langId, productVariantAdd.langId) &&
        Objects.equals(this.length, productVariantAdd.length) &&
        Objects.equals(this.manageStock, productVariantAdd.manageStock) &&
        Objects.equals(this.manufacturer, productVariantAdd.manufacturer) &&
        Objects.equals(this.metaDescription, productVariantAdd.metaDescription) &&
        Objects.equals(this.metaKeywords, productVariantAdd.metaKeywords) &&
        Objects.equals(this.metaTitle, productVariantAdd.metaTitle) &&
        Objects.equals(this.model, productVariantAdd.model) &&
        Objects.equals(this.name, productVariantAdd.name) &&
        Objects.equals(this.price, productVariantAdd.price) &&
        Objects.equals(this.productId, productVariantAdd.productId) &&
        Objects.equals(this.quantity, productVariantAdd.quantity) &&
        Objects.equals(this.shortDescription, productVariantAdd.shortDescription) &&
        Objects.equals(this.sku, productVariantAdd.sku) &&
        Objects.equals(this.specialPrice, productVariantAdd.specialPrice) &&
        Objects.equals(this.spriceCreate, productVariantAdd.spriceCreate) &&
        Objects.equals(this.spriceExpire, productVariantAdd.spriceExpire) &&
        Objects.equals(this.spriceModified, productVariantAdd.spriceModified) &&
        Objects.equals(this.storeId, productVariantAdd.storeId) &&
        Objects.equals(this.taxClassId, productVariantAdd.taxClassId) &&
        Objects.equals(this.taxable, productVariantAdd.taxable) &&
        Objects.equals(this.url, productVariantAdd.url) &&
        Objects.equals(this.warehouseId, productVariantAdd.warehouseId) &&
        Objects.equals(this.weight, productVariantAdd.weight) &&
        Objects.equals(this.weightUnit, productVariantAdd.weightUnit) &&
        Objects.equals(this.width, productVariantAdd.width);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributes, availableForSale, availableForView, barcode, clearCache, costPrice, countryOfOrigin, createdAt, description, harmonizedSystemCode, height, langId, length, manageStock, manufacturer, metaDescription, metaKeywords, metaTitle, model, name, price, productId, quantity, shortDescription, sku, specialPrice, spriceCreate, spriceExpire, spriceModified, storeId, taxClassId, taxable, url, warehouseId, weight, weightUnit, width);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductVariantAdd {\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    availableForSale: ").append(toIndentedString(availableForSale)).append("\n");
    sb.append("    availableForView: ").append(toIndentedString(availableForView)).append("\n");
    sb.append("    barcode: ").append(toIndentedString(barcode)).append("\n");
    sb.append("    clearCache: ").append(toIndentedString(clearCache)).append("\n");
    sb.append("    costPrice: ").append(toIndentedString(costPrice)).append("\n");
    sb.append("    countryOfOrigin: ").append(toIndentedString(countryOfOrigin)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    harmonizedSystemCode: ").append(toIndentedString(harmonizedSystemCode)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    langId: ").append(toIndentedString(langId)).append("\n");
    sb.append("    length: ").append(toIndentedString(length)).append("\n");
    sb.append("    manageStock: ").append(toIndentedString(manageStock)).append("\n");
    sb.append("    manufacturer: ").append(toIndentedString(manufacturer)).append("\n");
    sb.append("    metaDescription: ").append(toIndentedString(metaDescription)).append("\n");
    sb.append("    metaKeywords: ").append(toIndentedString(metaKeywords)).append("\n");
    sb.append("    metaTitle: ").append(toIndentedString(metaTitle)).append("\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    shortDescription: ").append(toIndentedString(shortDescription)).append("\n");
    sb.append("    sku: ").append(toIndentedString(sku)).append("\n");
    sb.append("    specialPrice: ").append(toIndentedString(specialPrice)).append("\n");
    sb.append("    spriceCreate: ").append(toIndentedString(spriceCreate)).append("\n");
    sb.append("    spriceExpire: ").append(toIndentedString(spriceExpire)).append("\n");
    sb.append("    spriceModified: ").append(toIndentedString(spriceModified)).append("\n");
    sb.append("    storeId: ").append(toIndentedString(storeId)).append("\n");
    sb.append("    taxClassId: ").append(toIndentedString(taxClassId)).append("\n");
    sb.append("    taxable: ").append(toIndentedString(taxable)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    warehouseId: ").append(toIndentedString(warehouseId)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("    weightUnit: ").append(toIndentedString(weightUnit)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("attributes");
    openapiFields.add("available_for_sale");
    openapiFields.add("available_for_view");
    openapiFields.add("barcode");
    openapiFields.add("clear_cache");
    openapiFields.add("cost_price");
    openapiFields.add("country_of_origin");
    openapiFields.add("created_at");
    openapiFields.add("description");
    openapiFields.add("harmonized_system_code");
    openapiFields.add("height");
    openapiFields.add("lang_id");
    openapiFields.add("length");
    openapiFields.add("manage_stock");
    openapiFields.add("manufacturer");
    openapiFields.add("meta_description");
    openapiFields.add("meta_keywords");
    openapiFields.add("meta_title");
    openapiFields.add("model");
    openapiFields.add("name");
    openapiFields.add("price");
    openapiFields.add("product_id");
    openapiFields.add("quantity");
    openapiFields.add("short_description");
    openapiFields.add("sku");
    openapiFields.add("special_price");
    openapiFields.add("sprice_create");
    openapiFields.add("sprice_expire");
    openapiFields.add("sprice_modified");
    openapiFields.add("store_id");
    openapiFields.add("tax_class_id");
    openapiFields.add("taxable");
    openapiFields.add("url");
    openapiFields.add("warehouse_id");
    openapiFields.add("weight");
    openapiFields.add("weight_unit");
    openapiFields.add("width");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("model");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ProductVariantAdd
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ProductVariantAdd.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ProductVariantAdd is not found in the empty JSON string", ProductVariantAdd.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ProductVariantAdd.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ProductVariantAdd` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ProductVariantAdd.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("attributes") != null && !jsonObj.get("attributes").isJsonNull()) {
        JsonArray jsonArrayattributes = jsonObj.getAsJsonArray("attributes");
        if (jsonArrayattributes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("attributes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `attributes` to be an array in the JSON string but got `%s`", jsonObj.get("attributes").toString()));
          }

          // validate the optional field `attributes` (array)
          for (int i = 0; i < jsonArrayattributes.size(); i++) {
            ProductVariantAddAttributesInner.validateJsonElement(jsonArrayattributes.get(i));
          };
        }
      }
      if ((jsonObj.get("barcode") != null && !jsonObj.get("barcode").isJsonNull()) && !jsonObj.get("barcode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `barcode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("barcode").toString()));
      }
      if ((jsonObj.get("country_of_origin") != null && !jsonObj.get("country_of_origin").isJsonNull()) && !jsonObj.get("country_of_origin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `country_of_origin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("country_of_origin").toString()));
      }
      if ((jsonObj.get("created_at") != null && !jsonObj.get("created_at").isJsonNull()) && !jsonObj.get("created_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_at").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("harmonized_system_code") != null && !jsonObj.get("harmonized_system_code").isJsonNull()) && !jsonObj.get("harmonized_system_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `harmonized_system_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("harmonized_system_code").toString()));
      }
      if ((jsonObj.get("lang_id") != null && !jsonObj.get("lang_id").isJsonNull()) && !jsonObj.get("lang_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lang_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lang_id").toString()));
      }
      if ((jsonObj.get("manufacturer") != null && !jsonObj.get("manufacturer").isJsonNull()) && !jsonObj.get("manufacturer").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `manufacturer` to be a primitive type in the JSON string but got `%s`", jsonObj.get("manufacturer").toString()));
      }
      if ((jsonObj.get("meta_description") != null && !jsonObj.get("meta_description").isJsonNull()) && !jsonObj.get("meta_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `meta_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("meta_description").toString()));
      }
      if ((jsonObj.get("meta_keywords") != null && !jsonObj.get("meta_keywords").isJsonNull()) && !jsonObj.get("meta_keywords").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `meta_keywords` to be a primitive type in the JSON string but got `%s`", jsonObj.get("meta_keywords").toString()));
      }
      if ((jsonObj.get("meta_title") != null && !jsonObj.get("meta_title").isJsonNull()) && !jsonObj.get("meta_title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `meta_title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("meta_title").toString()));
      }
      if (!jsonObj.get("model").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `model` to be a primitive type in the JSON string but got `%s`", jsonObj.get("model").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("product_id") != null && !jsonObj.get("product_id").isJsonNull()) && !jsonObj.get("product_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `product_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("product_id").toString()));
      }
      if ((jsonObj.get("short_description") != null && !jsonObj.get("short_description").isJsonNull()) && !jsonObj.get("short_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `short_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("short_description").toString()));
      }
      if ((jsonObj.get("sku") != null && !jsonObj.get("sku").isJsonNull()) && !jsonObj.get("sku").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sku` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sku").toString()));
      }
      if ((jsonObj.get("sprice_create") != null && !jsonObj.get("sprice_create").isJsonNull()) && !jsonObj.get("sprice_create").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sprice_create` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sprice_create").toString()));
      }
      if ((jsonObj.get("sprice_expire") != null && !jsonObj.get("sprice_expire").isJsonNull()) && !jsonObj.get("sprice_expire").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sprice_expire` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sprice_expire").toString()));
      }
      if ((jsonObj.get("sprice_modified") != null && !jsonObj.get("sprice_modified").isJsonNull()) && !jsonObj.get("sprice_modified").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sprice_modified` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sprice_modified").toString()));
      }
      if ((jsonObj.get("store_id") != null && !jsonObj.get("store_id").isJsonNull()) && !jsonObj.get("store_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `store_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("store_id").toString()));
      }
      if ((jsonObj.get("tax_class_id") != null && !jsonObj.get("tax_class_id").isJsonNull()) && !jsonObj.get("tax_class_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tax_class_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tax_class_id").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
      if ((jsonObj.get("warehouse_id") != null && !jsonObj.get("warehouse_id").isJsonNull()) && !jsonObj.get("warehouse_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `warehouse_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("warehouse_id").toString()));
      }
      if ((jsonObj.get("weight_unit") != null && !jsonObj.get("weight_unit").isJsonNull()) && !jsonObj.get("weight_unit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `weight_unit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("weight_unit").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ProductVariantAdd.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ProductVariantAdd' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ProductVariantAdd> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ProductVariantAdd.class));

       return (TypeAdapter<T>) new TypeAdapter<ProductVariantAdd>() {
           @Override
           public void write(JsonWriter out, ProductVariantAdd value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ProductVariantAdd read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ProductVariantAdd given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ProductVariantAdd
   * @throws IOException if the JSON string is invalid with respect to ProductVariantAdd
   */
  public static ProductVariantAdd fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ProductVariantAdd.class);
  }

  /**
   * Convert an instance of ProductVariantAdd to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

