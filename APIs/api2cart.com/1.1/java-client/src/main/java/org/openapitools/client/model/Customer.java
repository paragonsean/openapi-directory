/*
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.A2CDateTime;
import org.openapitools.client.model.CustomerAddress;
import org.openapitools.client.model.CustomerGroup;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Customer
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:12:09.268126-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Customer {
  public static final String SERIALIZED_NAME_ADDITIONAL_FIELDS = "additional_fields";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_FIELDS)
  private Object additionalFields;

  public static final String SERIALIZED_NAME_ADDRESS_BOOK = "address_book";
  @SerializedName(SERIALIZED_NAME_ADDRESS_BOOK)
  private List<CustomerAddress> addressBook = new ArrayList<>();

  public static final String SERIALIZED_NAME_BIRTH_DAY = "birth_day";
  @SerializedName(SERIALIZED_NAME_BIRTH_DAY)
  private A2CDateTime birthDay;

  public static final String SERIALIZED_NAME_COMPANY = "company";
  @SerializedName(SERIALIZED_NAME_COMPANY)
  private String company;

  public static final String SERIALIZED_NAME_CREATED_TIME = "created_time";
  @SerializedName(SERIALIZED_NAME_CREATED_TIME)
  private A2CDateTime createdTime;

  public static final String SERIALIZED_NAME_CUSTOM_FIELDS = "custom_fields";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELDS)
  private Object customFields;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_FAX = "fax";
  @SerializedName(SERIALIZED_NAME_FAX)
  private String fax;

  public static final String SERIALIZED_NAME_FIRST_NAME = "first_name";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_GENDER = "gender";
  @SerializedName(SERIALIZED_NAME_GENDER)
  private String gender;

  public static final String SERIALIZED_NAME_GROUP = "group";
  @SerializedName(SERIALIZED_NAME_GROUP)
  private List<CustomerGroup> group = new ArrayList<>();

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_IP_ADDRESS = "ip_address";
  @SerializedName(SERIALIZED_NAME_IP_ADDRESS)
  private String ipAddress;

  public static final String SERIALIZED_NAME_LANG_ID = "lang_id";
  @SerializedName(SERIALIZED_NAME_LANG_ID)
  private String langId;

  public static final String SERIALIZED_NAME_LAST_LOGIN = "last_login";
  @SerializedName(SERIALIZED_NAME_LAST_LOGIN)
  private A2CDateTime lastLogin;

  public static final String SERIALIZED_NAME_LAST_NAME = "last_name";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_LAST_ORDER_ID = "last_order_id";
  @SerializedName(SERIALIZED_NAME_LAST_ORDER_ID)
  private String lastOrderId;

  public static final String SERIALIZED_NAME_LOGIN = "login";
  @SerializedName(SERIALIZED_NAME_LOGIN)
  private String login;

  public static final String SERIALIZED_NAME_MODIFIED_TIME = "modified_time";
  @SerializedName(SERIALIZED_NAME_MODIFIED_TIME)
  private A2CDateTime modifiedTime;

  public static final String SERIALIZED_NAME_NEWS_LETTER_SUBSCRIPTION = "news_letter_subscription";
  @SerializedName(SERIALIZED_NAME_NEWS_LETTER_SUBSCRIPTION)
  private Boolean newsLetterSubscription;

  public static final String SERIALIZED_NAME_ORDERS_COUNT = "orders_count";
  @SerializedName(SERIALIZED_NAME_ORDERS_COUNT)
  private Integer ordersCount;

  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  private String phone;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_STORES_IDS = "stores_ids";
  @SerializedName(SERIALIZED_NAME_STORES_IDS)
  private List<String> storesIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_WEBSITE = "website";
  @SerializedName(SERIALIZED_NAME_WEBSITE)
  private String website;

  public Customer() {
  }

  public Customer additionalFields(Object additionalFields) {
    this.additionalFields = additionalFields;
    return this;
  }

  /**
   * Get additionalFields
   * @return additionalFields
   */
  @javax.annotation.Nullable
  public Object getAdditionalFields() {
    return additionalFields;
  }

  public void setAdditionalFields(Object additionalFields) {
    this.additionalFields = additionalFields;
  }


  public Customer addressBook(List<CustomerAddress> addressBook) {
    this.addressBook = addressBook;
    return this;
  }

  public Customer addAddressBookItem(CustomerAddress addressBookItem) {
    if (this.addressBook == null) {
      this.addressBook = new ArrayList<>();
    }
    this.addressBook.add(addressBookItem);
    return this;
  }

  /**
   * Get addressBook
   * @return addressBook
   */
  @javax.annotation.Nullable
  public List<CustomerAddress> getAddressBook() {
    return addressBook;
  }

  public void setAddressBook(List<CustomerAddress> addressBook) {
    this.addressBook = addressBook;
  }


  public Customer birthDay(A2CDateTime birthDay) {
    this.birthDay = birthDay;
    return this;
  }

  /**
   * Get birthDay
   * @return birthDay
   */
  @javax.annotation.Nullable
  public A2CDateTime getBirthDay() {
    return birthDay;
  }

  public void setBirthDay(A2CDateTime birthDay) {
    this.birthDay = birthDay;
  }


  public Customer company(String company) {
    this.company = company;
    return this;
  }

  /**
   * Get company
   * @return company
   */
  @javax.annotation.Nullable
  public String getCompany() {
    return company;
  }

  public void setCompany(String company) {
    this.company = company;
  }


  public Customer createdTime(A2CDateTime createdTime) {
    this.createdTime = createdTime;
    return this;
  }

  /**
   * Get createdTime
   * @return createdTime
   */
  @javax.annotation.Nullable
  public A2CDateTime getCreatedTime() {
    return createdTime;
  }

  public void setCreatedTime(A2CDateTime createdTime) {
    this.createdTime = createdTime;
  }


  public Customer customFields(Object customFields) {
    this.customFields = customFields;
    return this;
  }

  /**
   * Get customFields
   * @return customFields
   */
  @javax.annotation.Nullable
  public Object getCustomFields() {
    return customFields;
  }

  public void setCustomFields(Object customFields) {
    this.customFields = customFields;
  }


  public Customer email(String email) {
    this.email = email;
    return this;
  }

  /**
   * Get email
   * @return email
   */
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  public Customer fax(String fax) {
    this.fax = fax;
    return this;
  }

  /**
   * Get fax
   * @return fax
   */
  @javax.annotation.Nullable
  public String getFax() {
    return fax;
  }

  public void setFax(String fax) {
    this.fax = fax;
  }


  public Customer firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

  /**
   * Get firstName
   * @return firstName
   */
  @javax.annotation.Nullable
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public Customer gender(String gender) {
    this.gender = gender;
    return this;
  }

  /**
   * Get gender
   * @return gender
   */
  @javax.annotation.Nullable
  public String getGender() {
    return gender;
  }

  public void setGender(String gender) {
    this.gender = gender;
  }


  public Customer group(List<CustomerGroup> group) {
    this.group = group;
    return this;
  }

  public Customer addGroupItem(CustomerGroup groupItem) {
    if (this.group == null) {
      this.group = new ArrayList<>();
    }
    this.group.add(groupItem);
    return this;
  }

  /**
   * Get group
   * @return group
   */
  @javax.annotation.Nullable
  public List<CustomerGroup> getGroup() {
    return group;
  }

  public void setGroup(List<CustomerGroup> group) {
    this.group = group;
  }


  public Customer id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public Customer ipAddress(String ipAddress) {
    this.ipAddress = ipAddress;
    return this;
  }

  /**
   * Get ipAddress
   * @return ipAddress
   */
  @javax.annotation.Nullable
  public String getIpAddress() {
    return ipAddress;
  }

  public void setIpAddress(String ipAddress) {
    this.ipAddress = ipAddress;
  }


  public Customer langId(String langId) {
    this.langId = langId;
    return this;
  }

  /**
   * Get langId
   * @return langId
   */
  @javax.annotation.Nullable
  public String getLangId() {
    return langId;
  }

  public void setLangId(String langId) {
    this.langId = langId;
  }


  public Customer lastLogin(A2CDateTime lastLogin) {
    this.lastLogin = lastLogin;
    return this;
  }

  /**
   * Get lastLogin
   * @return lastLogin
   */
  @javax.annotation.Nullable
  public A2CDateTime getLastLogin() {
    return lastLogin;
  }

  public void setLastLogin(A2CDateTime lastLogin) {
    this.lastLogin = lastLogin;
  }


  public Customer lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

  /**
   * Get lastName
   * @return lastName
   */
  @javax.annotation.Nullable
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public Customer lastOrderId(String lastOrderId) {
    this.lastOrderId = lastOrderId;
    return this;
  }

  /**
   * Get lastOrderId
   * @return lastOrderId
   */
  @javax.annotation.Nullable
  public String getLastOrderId() {
    return lastOrderId;
  }

  public void setLastOrderId(String lastOrderId) {
    this.lastOrderId = lastOrderId;
  }


  public Customer login(String login) {
    this.login = login;
    return this;
  }

  /**
   * Get login
   * @return login
   */
  @javax.annotation.Nullable
  public String getLogin() {
    return login;
  }

  public void setLogin(String login) {
    this.login = login;
  }


  public Customer modifiedTime(A2CDateTime modifiedTime) {
    this.modifiedTime = modifiedTime;
    return this;
  }

  /**
   * Get modifiedTime
   * @return modifiedTime
   */
  @javax.annotation.Nullable
  public A2CDateTime getModifiedTime() {
    return modifiedTime;
  }

  public void setModifiedTime(A2CDateTime modifiedTime) {
    this.modifiedTime = modifiedTime;
  }


  public Customer newsLetterSubscription(Boolean newsLetterSubscription) {
    this.newsLetterSubscription = newsLetterSubscription;
    return this;
  }

  /**
   * Get newsLetterSubscription
   * @return newsLetterSubscription
   */
  @javax.annotation.Nullable
  public Boolean getNewsLetterSubscription() {
    return newsLetterSubscription;
  }

  public void setNewsLetterSubscription(Boolean newsLetterSubscription) {
    this.newsLetterSubscription = newsLetterSubscription;
  }


  public Customer ordersCount(Integer ordersCount) {
    this.ordersCount = ordersCount;
    return this;
  }

  /**
   * Get ordersCount
   * @return ordersCount
   */
  @javax.annotation.Nullable
  public Integer getOrdersCount() {
    return ordersCount;
  }

  public void setOrdersCount(Integer ordersCount) {
    this.ordersCount = ordersCount;
  }


  public Customer phone(String phone) {
    this.phone = phone;
    return this;
  }

  /**
   * Get phone
   * @return phone
   */
  @javax.annotation.Nullable
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }


  public Customer status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public Customer storesIds(List<String> storesIds) {
    this.storesIds = storesIds;
    return this;
  }

  public Customer addStoresIdsItem(String storesIdsItem) {
    if (this.storesIds == null) {
      this.storesIds = new ArrayList<>();
    }
    this.storesIds.add(storesIdsItem);
    return this;
  }

  /**
   * Get storesIds
   * @return storesIds
   */
  @javax.annotation.Nullable
  public List<String> getStoresIds() {
    return storesIds;
  }

  public void setStoresIds(List<String> storesIds) {
    this.storesIds = storesIds;
  }


  public Customer website(String website) {
    this.website = website;
    return this;
  }

  /**
   * Get website
   * @return website
   */
  @javax.annotation.Nullable
  public String getWebsite() {
    return website;
  }

  public void setWebsite(String website) {
    this.website = website;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Customer customer = (Customer) o;
    return Objects.equals(this.additionalFields, customer.additionalFields) &&
        Objects.equals(this.addressBook, customer.addressBook) &&
        Objects.equals(this.birthDay, customer.birthDay) &&
        Objects.equals(this.company, customer.company) &&
        Objects.equals(this.createdTime, customer.createdTime) &&
        Objects.equals(this.customFields, customer.customFields) &&
        Objects.equals(this.email, customer.email) &&
        Objects.equals(this.fax, customer.fax) &&
        Objects.equals(this.firstName, customer.firstName) &&
        Objects.equals(this.gender, customer.gender) &&
        Objects.equals(this.group, customer.group) &&
        Objects.equals(this.id, customer.id) &&
        Objects.equals(this.ipAddress, customer.ipAddress) &&
        Objects.equals(this.langId, customer.langId) &&
        Objects.equals(this.lastLogin, customer.lastLogin) &&
        Objects.equals(this.lastName, customer.lastName) &&
        Objects.equals(this.lastOrderId, customer.lastOrderId) &&
        Objects.equals(this.login, customer.login) &&
        Objects.equals(this.modifiedTime, customer.modifiedTime) &&
        Objects.equals(this.newsLetterSubscription, customer.newsLetterSubscription) &&
        Objects.equals(this.ordersCount, customer.ordersCount) &&
        Objects.equals(this.phone, customer.phone) &&
        Objects.equals(this.status, customer.status) &&
        Objects.equals(this.storesIds, customer.storesIds) &&
        Objects.equals(this.website, customer.website);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalFields, addressBook, birthDay, company, createdTime, customFields, email, fax, firstName, gender, group, id, ipAddress, langId, lastLogin, lastName, lastOrderId, login, modifiedTime, newsLetterSubscription, ordersCount, phone, status, storesIds, website);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Customer {\n");
    sb.append("    additionalFields: ").append(toIndentedString(additionalFields)).append("\n");
    sb.append("    addressBook: ").append(toIndentedString(addressBook)).append("\n");
    sb.append("    birthDay: ").append(toIndentedString(birthDay)).append("\n");
    sb.append("    company: ").append(toIndentedString(company)).append("\n");
    sb.append("    createdTime: ").append(toIndentedString(createdTime)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    fax: ").append(toIndentedString(fax)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    group: ").append(toIndentedString(group)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    ipAddress: ").append(toIndentedString(ipAddress)).append("\n");
    sb.append("    langId: ").append(toIndentedString(langId)).append("\n");
    sb.append("    lastLogin: ").append(toIndentedString(lastLogin)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    lastOrderId: ").append(toIndentedString(lastOrderId)).append("\n");
    sb.append("    login: ").append(toIndentedString(login)).append("\n");
    sb.append("    modifiedTime: ").append(toIndentedString(modifiedTime)).append("\n");
    sb.append("    newsLetterSubscription: ").append(toIndentedString(newsLetterSubscription)).append("\n");
    sb.append("    ordersCount: ").append(toIndentedString(ordersCount)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    storesIds: ").append(toIndentedString(storesIds)).append("\n");
    sb.append("    website: ").append(toIndentedString(website)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("additional_fields");
    openapiFields.add("address_book");
    openapiFields.add("birth_day");
    openapiFields.add("company");
    openapiFields.add("created_time");
    openapiFields.add("custom_fields");
    openapiFields.add("email");
    openapiFields.add("fax");
    openapiFields.add("first_name");
    openapiFields.add("gender");
    openapiFields.add("group");
    openapiFields.add("id");
    openapiFields.add("ip_address");
    openapiFields.add("lang_id");
    openapiFields.add("last_login");
    openapiFields.add("last_name");
    openapiFields.add("last_order_id");
    openapiFields.add("login");
    openapiFields.add("modified_time");
    openapiFields.add("news_letter_subscription");
    openapiFields.add("orders_count");
    openapiFields.add("phone");
    openapiFields.add("status");
    openapiFields.add("stores_ids");
    openapiFields.add("website");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Customer
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Customer.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Customer is not found in the empty JSON string", Customer.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Customer.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Customer` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("address_book") != null && !jsonObj.get("address_book").isJsonNull()) {
        JsonArray jsonArrayaddressBook = jsonObj.getAsJsonArray("address_book");
        if (jsonArrayaddressBook != null) {
          // ensure the json data is an array
          if (!jsonObj.get("address_book").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `address_book` to be an array in the JSON string but got `%s`", jsonObj.get("address_book").toString()));
          }

          // validate the optional field `address_book` (array)
          for (int i = 0; i < jsonArrayaddressBook.size(); i++) {
            CustomerAddress.validateJsonElement(jsonArrayaddressBook.get(i));
          };
        }
      }
      // validate the optional field `birth_day`
      if (jsonObj.get("birth_day") != null && !jsonObj.get("birth_day").isJsonNull()) {
        A2CDateTime.validateJsonElement(jsonObj.get("birth_day"));
      }
      if ((jsonObj.get("company") != null && !jsonObj.get("company").isJsonNull()) && !jsonObj.get("company").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `company` to be a primitive type in the JSON string but got `%s`", jsonObj.get("company").toString()));
      }
      // validate the optional field `created_time`
      if (jsonObj.get("created_time") != null && !jsonObj.get("created_time").isJsonNull()) {
        A2CDateTime.validateJsonElement(jsonObj.get("created_time"));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("fax") != null && !jsonObj.get("fax").isJsonNull()) && !jsonObj.get("fax").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fax` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fax").toString()));
      }
      if ((jsonObj.get("first_name") != null && !jsonObj.get("first_name").isJsonNull()) && !jsonObj.get("first_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `first_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("first_name").toString()));
      }
      if ((jsonObj.get("gender") != null && !jsonObj.get("gender").isJsonNull()) && !jsonObj.get("gender").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gender` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gender").toString()));
      }
      if (jsonObj.get("group") != null && !jsonObj.get("group").isJsonNull()) {
        JsonArray jsonArraygroup = jsonObj.getAsJsonArray("group");
        if (jsonArraygroup != null) {
          // ensure the json data is an array
          if (!jsonObj.get("group").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `group` to be an array in the JSON string but got `%s`", jsonObj.get("group").toString()));
          }

          // validate the optional field `group` (array)
          for (int i = 0; i < jsonArraygroup.size(); i++) {
            CustomerGroup.validateJsonElement(jsonArraygroup.get(i));
          };
        }
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("ip_address") != null && !jsonObj.get("ip_address").isJsonNull()) && !jsonObj.get("ip_address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ip_address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ip_address").toString()));
      }
      if ((jsonObj.get("lang_id") != null && !jsonObj.get("lang_id").isJsonNull()) && !jsonObj.get("lang_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lang_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lang_id").toString()));
      }
      // validate the optional field `last_login`
      if (jsonObj.get("last_login") != null && !jsonObj.get("last_login").isJsonNull()) {
        A2CDateTime.validateJsonElement(jsonObj.get("last_login"));
      }
      if ((jsonObj.get("last_name") != null && !jsonObj.get("last_name").isJsonNull()) && !jsonObj.get("last_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_name").toString()));
      }
      if ((jsonObj.get("last_order_id") != null && !jsonObj.get("last_order_id").isJsonNull()) && !jsonObj.get("last_order_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_order_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_order_id").toString()));
      }
      if ((jsonObj.get("login") != null && !jsonObj.get("login").isJsonNull()) && !jsonObj.get("login").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `login` to be a primitive type in the JSON string but got `%s`", jsonObj.get("login").toString()));
      }
      // validate the optional field `modified_time`
      if (jsonObj.get("modified_time") != null && !jsonObj.get("modified_time").isJsonNull()) {
        A2CDateTime.validateJsonElement(jsonObj.get("modified_time"));
      }
      if ((jsonObj.get("phone") != null && !jsonObj.get("phone").isJsonNull()) && !jsonObj.get("phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phone").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("stores_ids") != null && !jsonObj.get("stores_ids").isJsonNull() && !jsonObj.get("stores_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `stores_ids` to be an array in the JSON string but got `%s`", jsonObj.get("stores_ids").toString()));
      }
      if ((jsonObj.get("website") != null && !jsonObj.get("website").isJsonNull()) && !jsonObj.get("website").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `website` to be a primitive type in the JSON string but got `%s`", jsonObj.get("website").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Customer.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Customer' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Customer> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Customer.class));

       return (TypeAdapter<T>) new TypeAdapter<Customer>() {
           @Override
           public void write(JsonWriter out, Customer value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Customer read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Customer given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Customer
   * @throws IOException if the JSON string is invalid with respect to Customer
   */
  public static Customer fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Customer.class);
  }

  /**
   * Convert an instance of Customer to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

