/*
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.OrderRefundAddItemsInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * OrderRefundAdd
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:12:09.268126-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class OrderRefundAdd {
  public static final String SERIALIZED_NAME_DATE = "date";
  @SerializedName(SERIALIZED_NAME_DATE)
  private String date;

  public static final String SERIALIZED_NAME_FEE_PRICE = "fee_price";
  @SerializedName(SERIALIZED_NAME_FEE_PRICE)
  private BigDecimal feePrice;

  public static final String SERIALIZED_NAME_IS_ONLINE = "is_online";
  @SerializedName(SERIALIZED_NAME_IS_ONLINE)
  private Boolean isOnline = false;

  public static final String SERIALIZED_NAME_ITEM_RESTOCK = "item_restock";
  @SerializedName(SERIALIZED_NAME_ITEM_RESTOCK)
  private Boolean itemRestock = false;

  public static final String SERIALIZED_NAME_ITEMS = "items";
  @SerializedName(SERIALIZED_NAME_ITEMS)
  private List<OrderRefundAddItemsInner> items = new ArrayList<>();

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  public static final String SERIALIZED_NAME_ORDER_ID = "order_id";
  @SerializedName(SERIALIZED_NAME_ORDER_ID)
  private String orderId;

  public static final String SERIALIZED_NAME_SEND_NOTIFICATIONS = "send_notifications";
  @SerializedName(SERIALIZED_NAME_SEND_NOTIFICATIONS)
  private Boolean sendNotifications = false;

  public static final String SERIALIZED_NAME_SHIPPING_PRICE = "shipping_price";
  @SerializedName(SERIALIZED_NAME_SHIPPING_PRICE)
  private BigDecimal shippingPrice;

  public static final String SERIALIZED_NAME_TOTAL_PRICE = "total_price";
  @SerializedName(SERIALIZED_NAME_TOTAL_PRICE)
  private BigDecimal totalPrice;

  public OrderRefundAdd() {
  }

  public OrderRefundAdd date(String date) {
    this.date = date;
    return this;
  }

  /**
   * Specifies an order creation date in format Y-m-d H:i:s
   * @return date
   */
  @javax.annotation.Nullable
  public String getDate() {
    return date;
  }

  public void setDate(String date) {
    this.date = date;
  }


  public OrderRefundAdd feePrice(BigDecimal feePrice) {
    this.feePrice = feePrice;
    return this;
  }

  /**
   * Specifies refund&#39;s fee price
   * @return feePrice
   */
  @javax.annotation.Nullable
  public BigDecimal getFeePrice() {
    return feePrice;
  }

  public void setFeePrice(BigDecimal feePrice) {
    this.feePrice = feePrice;
  }


  public OrderRefundAdd isOnline(Boolean isOnline) {
    this.isOnline = isOnline;
    return this;
  }

  /**
   * Indicates whether refund type is online
   * @return isOnline
   */
  @javax.annotation.Nullable
  public Boolean getIsOnline() {
    return isOnline;
  }

  public void setIsOnline(Boolean isOnline) {
    this.isOnline = isOnline;
  }


  public OrderRefundAdd itemRestock(Boolean itemRestock) {
    this.itemRestock = itemRestock;
    return this;
  }

  /**
   * Boolean, whether or not to add the line items back to the store inventory.
   * @return itemRestock
   */
  @javax.annotation.Nullable
  public Boolean getItemRestock() {
    return itemRestock;
  }

  public void setItemRestock(Boolean itemRestock) {
    this.itemRestock = itemRestock;
  }


  public OrderRefundAdd items(List<OrderRefundAddItemsInner> items) {
    this.items = items;
    return this;
  }

  public OrderRefundAdd addItemsItem(OrderRefundAddItemsInner itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<>();
    }
    this.items.add(itemsItem);
    return this;
  }

  /**
   * Defines items in the order that will be refunded
   * @return items
   */
  @javax.annotation.Nullable
  public List<OrderRefundAddItemsInner> getItems() {
    return items;
  }

  public void setItems(List<OrderRefundAddItemsInner> items) {
    this.items = items;
  }


  public OrderRefundAdd message(String message) {
    this.message = message;
    return this;
  }

  /**
   * Refund reason, or some else message which assigned to refund.
   * @return message
   */
  @javax.annotation.Nullable
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }


  public OrderRefundAdd orderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

  /**
   * Defines the order for which the refund will be created.
   * @return orderId
   */
  @javax.annotation.Nullable
  public String getOrderId() {
    return orderId;
  }

  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }


  public OrderRefundAdd sendNotifications(Boolean sendNotifications) {
    this.sendNotifications = sendNotifications;
    return this;
  }

  /**
   * Send notifications to customer after refund was created
   * @return sendNotifications
   */
  @javax.annotation.Nullable
  public Boolean getSendNotifications() {
    return sendNotifications;
  }

  public void setSendNotifications(Boolean sendNotifications) {
    this.sendNotifications = sendNotifications;
  }


  public OrderRefundAdd shippingPrice(BigDecimal shippingPrice) {
    this.shippingPrice = shippingPrice;
    return this;
  }

  /**
   * Defines refund shipping amount.
   * @return shippingPrice
   */
  @javax.annotation.Nullable
  public BigDecimal getShippingPrice() {
    return shippingPrice;
  }

  public void setShippingPrice(BigDecimal shippingPrice) {
    this.shippingPrice = shippingPrice;
  }


  public OrderRefundAdd totalPrice(BigDecimal totalPrice) {
    this.totalPrice = totalPrice;
    return this;
  }

  /**
   * Defines order refund amount.
   * @return totalPrice
   */
  @javax.annotation.Nullable
  public BigDecimal getTotalPrice() {
    return totalPrice;
  }

  public void setTotalPrice(BigDecimal totalPrice) {
    this.totalPrice = totalPrice;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderRefundAdd orderRefundAdd = (OrderRefundAdd) o;
    return Objects.equals(this.date, orderRefundAdd.date) &&
        Objects.equals(this.feePrice, orderRefundAdd.feePrice) &&
        Objects.equals(this.isOnline, orderRefundAdd.isOnline) &&
        Objects.equals(this.itemRestock, orderRefundAdd.itemRestock) &&
        Objects.equals(this.items, orderRefundAdd.items) &&
        Objects.equals(this.message, orderRefundAdd.message) &&
        Objects.equals(this.orderId, orderRefundAdd.orderId) &&
        Objects.equals(this.sendNotifications, orderRefundAdd.sendNotifications) &&
        Objects.equals(this.shippingPrice, orderRefundAdd.shippingPrice) &&
        Objects.equals(this.totalPrice, orderRefundAdd.totalPrice);
  }

  @Override
  public int hashCode() {
    return Objects.hash(date, feePrice, isOnline, itemRestock, items, message, orderId, sendNotifications, shippingPrice, totalPrice);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderRefundAdd {\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    feePrice: ").append(toIndentedString(feePrice)).append("\n");
    sb.append("    isOnline: ").append(toIndentedString(isOnline)).append("\n");
    sb.append("    itemRestock: ").append(toIndentedString(itemRestock)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    sendNotifications: ").append(toIndentedString(sendNotifications)).append("\n");
    sb.append("    shippingPrice: ").append(toIndentedString(shippingPrice)).append("\n");
    sb.append("    totalPrice: ").append(toIndentedString(totalPrice)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("date");
    openapiFields.add("fee_price");
    openapiFields.add("is_online");
    openapiFields.add("item_restock");
    openapiFields.add("items");
    openapiFields.add("message");
    openapiFields.add("order_id");
    openapiFields.add("send_notifications");
    openapiFields.add("shipping_price");
    openapiFields.add("total_price");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to OrderRefundAdd
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OrderRefundAdd.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrderRefundAdd is not found in the empty JSON string", OrderRefundAdd.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OrderRefundAdd.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OrderRefundAdd` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("date") != null && !jsonObj.get("date").isJsonNull()) && !jsonObj.get("date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("date").toString()));
      }
      if (jsonObj.get("items") != null && !jsonObj.get("items").isJsonNull()) {
        JsonArray jsonArrayitems = jsonObj.getAsJsonArray("items");
        if (jsonArrayitems != null) {
          // ensure the json data is an array
          if (!jsonObj.get("items").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `items` to be an array in the JSON string but got `%s`", jsonObj.get("items").toString()));
          }

          // validate the optional field `items` (array)
          for (int i = 0; i < jsonArrayitems.size(); i++) {
            OrderRefundAddItemsInner.validateJsonElement(jsonArrayitems.get(i));
          };
        }
      }
      if ((jsonObj.get("message") != null && !jsonObj.get("message").isJsonNull()) && !jsonObj.get("message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("message").toString()));
      }
      if ((jsonObj.get("order_id") != null && !jsonObj.get("order_id").isJsonNull()) && !jsonObj.get("order_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `order_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("order_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrderRefundAdd.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrderRefundAdd' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrderRefundAdd> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrderRefundAdd.class));

       return (TypeAdapter<T>) new TypeAdapter<OrderRefundAdd>() {
           @Override
           public void write(JsonWriter out, OrderRefundAdd value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OrderRefundAdd read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of OrderRefundAdd given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of OrderRefundAdd
   * @throws IOException if the JSON string is invalid with respect to OrderRefundAdd
   */
  public static OrderRefundAdd fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrderRefundAdd.class);
  }

  /**
   * Convert an instance of OrderRefundAdd to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

