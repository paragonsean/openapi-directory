/*
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ProductUpdate
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:12:09.268126-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ProductUpdate {
  public static final String SERIALIZED_NAME_BACKORDER_STATUS = "backorder_status";
  @SerializedName(SERIALIZED_NAME_BACKORDER_STATUS)
  private String backorderStatus;

  public static final String SERIALIZED_NAME_BARCODE = "barcode";
  @SerializedName(SERIALIZED_NAME_BARCODE)
  private String barcode;

  public static final String SERIALIZED_NAME_CATEGORIES_IDS = "categories_ids";
  @SerializedName(SERIALIZED_NAME_CATEGORIES_IDS)
  private String categoriesIds;

  public static final String SERIALIZED_NAME_CLEAR_CACHE = "clear_cache";
  @SerializedName(SERIALIZED_NAME_CLEAR_CACHE)
  private Boolean clearCache = true;

  public static final String SERIALIZED_NAME_COST_PRICE = "cost_price";
  @SerializedName(SERIALIZED_NAME_COST_PRICE)
  private BigDecimal costPrice;

  public static final String SERIALIZED_NAME_COUNTRY_OF_ORIGIN = "country_of_origin";
  @SerializedName(SERIALIZED_NAME_COUNTRY_OF_ORIGIN)
  private String countryOfOrigin;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DISABLE_REPORT_CACHE = "disable_report_cache";
  @SerializedName(SERIALIZED_NAME_DISABLE_REPORT_CACHE)
  private Boolean disableReportCache = false;

  public static final String SERIALIZED_NAME_GTIN = "gtin";
  @SerializedName(SERIALIZED_NAME_GTIN)
  private String gtin;

  public static final String SERIALIZED_NAME_HARMONIZED_SYSTEM_CODE = "harmonized_system_code";
  @SerializedName(SERIALIZED_NAME_HARMONIZED_SYSTEM_CODE)
  private String harmonizedSystemCode;

  public static final String SERIALIZED_NAME_HEIGHT = "height";
  @SerializedName(SERIALIZED_NAME_HEIGHT)
  private BigDecimal height;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_IN_STOCK = "in_stock";
  @SerializedName(SERIALIZED_NAME_IN_STOCK)
  private Boolean inStock;

  public static final String SERIALIZED_NAME_INCREASE_QUANTITY = "increase_quantity";
  @SerializedName(SERIALIZED_NAME_INCREASE_QUANTITY)
  private BigDecimal increaseQuantity;

  public static final String SERIALIZED_NAME_LANG_ID = "lang_id";
  @SerializedName(SERIALIZED_NAME_LANG_ID)
  private String langId;

  public static final String SERIALIZED_NAME_LENGTH = "length";
  @SerializedName(SERIALIZED_NAME_LENGTH)
  private BigDecimal length;

  public static final String SERIALIZED_NAME_MANAGE_STOCK = "manage_stock";
  @SerializedName(SERIALIZED_NAME_MANAGE_STOCK)
  private Boolean manageStock;

  public static final String SERIALIZED_NAME_MANUFACTURER = "manufacturer";
  @SerializedName(SERIALIZED_NAME_MANUFACTURER)
  private String manufacturer;

  public static final String SERIALIZED_NAME_MANUFACTURER_ID = "manufacturer_id";
  @SerializedName(SERIALIZED_NAME_MANUFACTURER_ID)
  private String manufacturerId;

  public static final String SERIALIZED_NAME_META_DESCRIPTION = "meta_description";
  @SerializedName(SERIALIZED_NAME_META_DESCRIPTION)
  private String metaDescription;

  public static final String SERIALIZED_NAME_META_KEYWORDS = "meta_keywords";
  @SerializedName(SERIALIZED_NAME_META_KEYWORDS)
  private String metaKeywords;

  public static final String SERIALIZED_NAME_META_TITLE = "meta_title";
  @SerializedName(SERIALIZED_NAME_META_TITLE)
  private String metaTitle;

  public static final String SERIALIZED_NAME_MODEL = "model";
  @SerializedName(SERIALIZED_NAME_MODEL)
  private String model;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_OLD_PRICE = "old_price";
  @SerializedName(SERIALIZED_NAME_OLD_PRICE)
  private BigDecimal oldPrice;

  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private BigDecimal price;

  public static final String SERIALIZED_NAME_PRODUCT_CLASS = "product_class";
  @SerializedName(SERIALIZED_NAME_PRODUCT_CLASS)
  private String productClass;

  public static final String SERIALIZED_NAME_QUANTITY = "quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  private BigDecimal quantity;

  public static final String SERIALIZED_NAME_REDUCE_QUANTITY = "reduce_quantity";
  @SerializedName(SERIALIZED_NAME_REDUCE_QUANTITY)
  private BigDecimal reduceQuantity;

  public static final String SERIALIZED_NAME_REINDEX = "reindex";
  @SerializedName(SERIALIZED_NAME_REINDEX)
  private Boolean reindex = true;

  public static final String SERIALIZED_NAME_REPORT_REQUEST_ID = "report_request_id";
  @SerializedName(SERIALIZED_NAME_REPORT_REQUEST_ID)
  private String reportRequestId;

  public static final String SERIALIZED_NAME_RESERVE_QUANTITY = "reserve_quantity";
  @SerializedName(SERIALIZED_NAME_RESERVE_QUANTITY)
  private BigDecimal reserveQuantity;

  public static final String SERIALIZED_NAME_RETAIL_PRICE = "retail_price";
  @SerializedName(SERIALIZED_NAME_RETAIL_PRICE)
  private BigDecimal retailPrice;

  public static final String SERIALIZED_NAME_SEARCH_KEYWORDS = "search_keywords";
  @SerializedName(SERIALIZED_NAME_SEARCH_KEYWORDS)
  private String searchKeywords;

  public static final String SERIALIZED_NAME_SEO_URL = "seo_url";
  @SerializedName(SERIALIZED_NAME_SEO_URL)
  private String seoUrl;

  public static final String SERIALIZED_NAME_SHORT_DESCRIPTION = "short_description";
  @SerializedName(SERIALIZED_NAME_SHORT_DESCRIPTION)
  private String shortDescription;

  public static final String SERIALIZED_NAME_SKU = "sku";
  @SerializedName(SERIALIZED_NAME_SKU)
  private String sku;

  public static final String SERIALIZED_NAME_SPECIAL_PRICE = "special_price";
  @SerializedName(SERIALIZED_NAME_SPECIAL_PRICE)
  private BigDecimal specialPrice;

  public static final String SERIALIZED_NAME_SPRICE_CREATE = "sprice_create";
  @SerializedName(SERIALIZED_NAME_SPRICE_CREATE)
  private String spriceCreate;

  public static final String SERIALIZED_NAME_SPRICE_EXPIRE = "sprice_expire";
  @SerializedName(SERIALIZED_NAME_SPRICE_EXPIRE)
  private String spriceExpire;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_STORE_ID = "store_id";
  @SerializedName(SERIALIZED_NAME_STORE_ID)
  private String storeId;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private String tags;

  public static final String SERIALIZED_NAME_TAXABLE = "taxable";
  @SerializedName(SERIALIZED_NAME_TAXABLE)
  private Boolean taxable = true;

  public static final String SERIALIZED_NAME_VISIBLE = "visible";
  @SerializedName(SERIALIZED_NAME_VISIBLE)
  private String visible;

  public static final String SERIALIZED_NAME_WAREHOUSE_ID = "warehouse_id";
  @SerializedName(SERIALIZED_NAME_WAREHOUSE_ID)
  private String warehouseId;

  public static final String SERIALIZED_NAME_WEIGHT = "weight";
  @SerializedName(SERIALIZED_NAME_WEIGHT)
  private BigDecimal weight;

  public static final String SERIALIZED_NAME_WIDTH = "width";
  @SerializedName(SERIALIZED_NAME_WIDTH)
  private BigDecimal width;

  public ProductUpdate() {
  }

  public ProductUpdate backorderStatus(String backorderStatus) {
    this.backorderStatus = backorderStatus;
    return this;
  }

  /**
   * Set backorder status
   * @return backorderStatus
   */
  @javax.annotation.Nullable
  public String getBackorderStatus() {
    return backorderStatus;
  }

  public void setBackorderStatus(String backorderStatus) {
    this.backorderStatus = backorderStatus;
  }


  public ProductUpdate barcode(String barcode) {
    this.barcode = barcode;
    return this;
  }

  /**
   * A barcode is a unique code composed of numbers used as a product identifier.
   * @return barcode
   */
  @javax.annotation.Nullable
  public String getBarcode() {
    return barcode;
  }

  public void setBarcode(String barcode) {
    this.barcode = barcode;
  }


  public ProductUpdate categoriesIds(String categoriesIds) {
    this.categoriesIds = categoriesIds;
    return this;
  }

  /**
   * Defines product add that is specified by comma-separated categories id
   * @return categoriesIds
   */
  @javax.annotation.Nullable
  public String getCategoriesIds() {
    return categoriesIds;
  }

  public void setCategoriesIds(String categoriesIds) {
    this.categoriesIds = categoriesIds;
  }


  public ProductUpdate clearCache(Boolean clearCache) {
    this.clearCache = clearCache;
    return this;
  }

  /**
   * Is cache clear required
   * @return clearCache
   */
  @javax.annotation.Nullable
  public Boolean getClearCache() {
    return clearCache;
  }

  public void setClearCache(Boolean clearCache) {
    this.clearCache = clearCache;
  }


  public ProductUpdate costPrice(BigDecimal costPrice) {
    this.costPrice = costPrice;
    return this;
  }

  /**
   * Defines new product&#39;s cost price
   * @return costPrice
   */
  @javax.annotation.Nullable
  public BigDecimal getCostPrice() {
    return costPrice;
  }

  public void setCostPrice(BigDecimal costPrice) {
    this.costPrice = costPrice;
  }


  public ProductUpdate countryOfOrigin(String countryOfOrigin) {
    this.countryOfOrigin = countryOfOrigin;
    return this;
  }

  /**
   * The country where the inventory item was made
   * @return countryOfOrigin
   */
  @javax.annotation.Nullable
  public String getCountryOfOrigin() {
    return countryOfOrigin;
  }

  public void setCountryOfOrigin(String countryOfOrigin) {
    this.countryOfOrigin = countryOfOrigin;
  }


  public ProductUpdate description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Defines new product&#39;s description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public ProductUpdate disableReportCache(Boolean disableReportCache) {
    this.disableReportCache = disableReportCache;
    return this;
  }

  /**
   * Disable report cache for current request
   * @return disableReportCache
   */
  @javax.annotation.Nullable
  public Boolean getDisableReportCache() {
    return disableReportCache;
  }

  public void setDisableReportCache(Boolean disableReportCache) {
    this.disableReportCache = disableReportCache;
  }


  public ProductUpdate gtin(String gtin) {
    this.gtin = gtin;
    return this;
  }

  /**
   * Global Trade Item Number. An GTIN is an identifier for trade items.
   * @return gtin
   */
  @javax.annotation.Nullable
  public String getGtin() {
    return gtin;
  }

  public void setGtin(String gtin) {
    this.gtin = gtin;
  }


  public ProductUpdate harmonizedSystemCode(String harmonizedSystemCode) {
    this.harmonizedSystemCode = harmonizedSystemCode;
    return this;
  }

  /**
   * Harmonized System Code. An HSC is a 6-digit identifier that allows participating countries to classify traded goods on a common basis for customs purposes
   * @return harmonizedSystemCode
   */
  @javax.annotation.Nullable
  public String getHarmonizedSystemCode() {
    return harmonizedSystemCode;
  }

  public void setHarmonizedSystemCode(String harmonizedSystemCode) {
    this.harmonizedSystemCode = harmonizedSystemCode;
  }


  public ProductUpdate height(BigDecimal height) {
    this.height = height;
    return this;
  }

  /**
   * Defines product&#39;s height
   * @return height
   */
  @javax.annotation.Nullable
  public BigDecimal getHeight() {
    return height;
  }

  public void setHeight(BigDecimal height) {
    this.height = height;
  }


  public ProductUpdate id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Defines product id that has to be updated
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public ProductUpdate inStock(Boolean inStock) {
    this.inStock = inStock;
    return this;
  }

  /**
   * Set stock status
   * @return inStock
   */
  @javax.annotation.Nullable
  public Boolean getInStock() {
    return inStock;
  }

  public void setInStock(Boolean inStock) {
    this.inStock = inStock;
  }


  public ProductUpdate increaseQuantity(BigDecimal increaseQuantity) {
    this.increaseQuantity = increaseQuantity;
    return this;
  }

  /**
   * Defines the incremental changes in product quantity
   * @return increaseQuantity
   */
  @javax.annotation.Nullable
  public BigDecimal getIncreaseQuantity() {
    return increaseQuantity;
  }

  public void setIncreaseQuantity(BigDecimal increaseQuantity) {
    this.increaseQuantity = increaseQuantity;
  }


  public ProductUpdate langId(String langId) {
    this.langId = langId;
    return this;
  }

  /**
   * Language id
   * @return langId
   */
  @javax.annotation.Nullable
  public String getLangId() {
    return langId;
  }

  public void setLangId(String langId) {
    this.langId = langId;
  }


  public ProductUpdate length(BigDecimal length) {
    this.length = length;
    return this;
  }

  /**
   * Defines product&#39;s length
   * @return length
   */
  @javax.annotation.Nullable
  public BigDecimal getLength() {
    return length;
  }

  public void setLength(BigDecimal length) {
    this.length = length;
  }


  public ProductUpdate manageStock(Boolean manageStock) {
    this.manageStock = manageStock;
    return this;
  }

  /**
   * Defines inventory tracking for product
   * @return manageStock
   */
  @javax.annotation.Nullable
  public Boolean getManageStock() {
    return manageStock;
  }

  public void setManageStock(Boolean manageStock) {
    this.manageStock = manageStock;
  }


  public ProductUpdate manufacturer(String manufacturer) {
    this.manufacturer = manufacturer;
    return this;
  }

  /**
   * Defines product&#39;s manufacturer
   * @return manufacturer
   */
  @javax.annotation.Nullable
  public String getManufacturer() {
    return manufacturer;
  }

  public void setManufacturer(String manufacturer) {
    this.manufacturer = manufacturer;
  }


  public ProductUpdate manufacturerId(String manufacturerId) {
    this.manufacturerId = manufacturerId;
    return this;
  }

  /**
   * Defines product&#39;s manufacturer by manufacturer_id
   * @return manufacturerId
   */
  @javax.annotation.Nullable
  public String getManufacturerId() {
    return manufacturerId;
  }

  public void setManufacturerId(String manufacturerId) {
    this.manufacturerId = manufacturerId;
  }


  public ProductUpdate metaDescription(String metaDescription) {
    this.metaDescription = metaDescription;
    return this;
  }

  /**
   * Defines unique meta description of a entity
   * @return metaDescription
   */
  @javax.annotation.Nullable
  public String getMetaDescription() {
    return metaDescription;
  }

  public void setMetaDescription(String metaDescription) {
    this.metaDescription = metaDescription;
  }


  public ProductUpdate metaKeywords(String metaKeywords) {
    this.metaKeywords = metaKeywords;
    return this;
  }

  /**
   * Defines unique meta keywords for each entity
   * @return metaKeywords
   */
  @javax.annotation.Nullable
  public String getMetaKeywords() {
    return metaKeywords;
  }

  public void setMetaKeywords(String metaKeywords) {
    this.metaKeywords = metaKeywords;
  }


  public ProductUpdate metaTitle(String metaTitle) {
    this.metaTitle = metaTitle;
    return this;
  }

  /**
   * Defines unique meta title for each entity
   * @return metaTitle
   */
  @javax.annotation.Nullable
  public String getMetaTitle() {
    return metaTitle;
  }

  public void setMetaTitle(String metaTitle) {
    this.metaTitle = metaTitle;
  }


  public ProductUpdate model(String model) {
    this.model = model;
    return this;
  }

  /**
   * Defines product model that has to be updated
   * @return model
   */
  @javax.annotation.Nullable
  public String getModel() {
    return model;
  }

  public void setModel(String model) {
    this.model = model;
  }


  public ProductUpdate name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Defines product&#39;s name that has to be updated
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public ProductUpdate oldPrice(BigDecimal oldPrice) {
    this.oldPrice = oldPrice;
    return this;
  }

  /**
   * Defines product&#39;s old price
   * @return oldPrice
   */
  @javax.annotation.Nullable
  public BigDecimal getOldPrice() {
    return oldPrice;
  }

  public void setOldPrice(BigDecimal oldPrice) {
    this.oldPrice = oldPrice;
  }


  public ProductUpdate price(BigDecimal price) {
    this.price = price;
    return this;
  }

  /**
   * Defines new product&#39;s price
   * @return price
   */
  @javax.annotation.Nullable
  public BigDecimal getPrice() {
    return price;
  }

  public void setPrice(BigDecimal price) {
    this.price = price;
  }


  public ProductUpdate productClass(String productClass) {
    this.productClass = productClass;
    return this;
  }

  /**
   * A categorization for the product
   * @return productClass
   */
  @javax.annotation.Nullable
  public String getProductClass() {
    return productClass;
  }

  public void setProductClass(String productClass) {
    this.productClass = productClass;
  }


  public ProductUpdate quantity(BigDecimal quantity) {
    this.quantity = quantity;
    return this;
  }

  /**
   * Defines new product&#39;s quantity
   * @return quantity
   */
  @javax.annotation.Nullable
  public BigDecimal getQuantity() {
    return quantity;
  }

  public void setQuantity(BigDecimal quantity) {
    this.quantity = quantity;
  }


  public ProductUpdate reduceQuantity(BigDecimal reduceQuantity) {
    this.reduceQuantity = reduceQuantity;
    return this;
  }

  /**
   * Defines the decrement changes in product quantity
   * @return reduceQuantity
   */
  @javax.annotation.Nullable
  public BigDecimal getReduceQuantity() {
    return reduceQuantity;
  }

  public void setReduceQuantity(BigDecimal reduceQuantity) {
    this.reduceQuantity = reduceQuantity;
  }


  public ProductUpdate reindex(Boolean reindex) {
    this.reindex = reindex;
    return this;
  }

  /**
   * Is reindex required
   * @return reindex
   */
  @javax.annotation.Nullable
  public Boolean getReindex() {
    return reindex;
  }

  public void setReindex(Boolean reindex) {
    this.reindex = reindex;
  }


  public ProductUpdate reportRequestId(String reportRequestId) {
    this.reportRequestId = reportRequestId;
    return this;
  }

  /**
   * Report request id
   * @return reportRequestId
   */
  @javax.annotation.Nullable
  public String getReportRequestId() {
    return reportRequestId;
  }

  public void setReportRequestId(String reportRequestId) {
    this.reportRequestId = reportRequestId;
  }


  public ProductUpdate reserveQuantity(BigDecimal reserveQuantity) {
    this.reserveQuantity = reserveQuantity;
    return this;
  }

  /**
   * This parameter allows to reserve/unreserve product quantity.
   * @return reserveQuantity
   */
  @javax.annotation.Nullable
  public BigDecimal getReserveQuantity() {
    return reserveQuantity;
  }

  public void setReserveQuantity(BigDecimal reserveQuantity) {
    this.reserveQuantity = reserveQuantity;
  }


  public ProductUpdate retailPrice(BigDecimal retailPrice) {
    this.retailPrice = retailPrice;
    return this;
  }

  /**
   * Defines new product&#39;s retail price
   * @return retailPrice
   */
  @javax.annotation.Nullable
  public BigDecimal getRetailPrice() {
    return retailPrice;
  }

  public void setRetailPrice(BigDecimal retailPrice) {
    this.retailPrice = retailPrice;
  }


  public ProductUpdate searchKeywords(String searchKeywords) {
    this.searchKeywords = searchKeywords;
    return this;
  }

  /**
   * Defines unique search keywords
   * @return searchKeywords
   */
  @javax.annotation.Nullable
  public String getSearchKeywords() {
    return searchKeywords;
  }

  public void setSearchKeywords(String searchKeywords) {
    this.searchKeywords = searchKeywords;
  }


  public ProductUpdate seoUrl(String seoUrl) {
    this.seoUrl = seoUrl;
    return this;
  }

  /**
   * Defines unique URL for SEO
   * @return seoUrl
   */
  @javax.annotation.Nullable
  public String getSeoUrl() {
    return seoUrl;
  }

  public void setSeoUrl(String seoUrl) {
    this.seoUrl = seoUrl;
  }


  public ProductUpdate shortDescription(String shortDescription) {
    this.shortDescription = shortDescription;
    return this;
  }

  /**
   * Defines short description
   * @return shortDescription
   */
  @javax.annotation.Nullable
  public String getShortDescription() {
    return shortDescription;
  }

  public void setShortDescription(String shortDescription) {
    this.shortDescription = shortDescription;
  }


  public ProductUpdate sku(String sku) {
    this.sku = sku;
    return this;
  }

  /**
   * Defines new product&#39;s sku
   * @return sku
   */
  @javax.annotation.Nullable
  public String getSku() {
    return sku;
  }

  public void setSku(String sku) {
    this.sku = sku;
  }


  public ProductUpdate specialPrice(BigDecimal specialPrice) {
    this.specialPrice = specialPrice;
    return this;
  }

  /**
   * Defines new product&#39;s special price
   * @return specialPrice
   */
  @javax.annotation.Nullable
  public BigDecimal getSpecialPrice() {
    return specialPrice;
  }

  public void setSpecialPrice(BigDecimal specialPrice) {
    this.specialPrice = specialPrice;
  }


  public ProductUpdate spriceCreate(String spriceCreate) {
    this.spriceCreate = spriceCreate;
    return this;
  }

  /**
   * Defines the date of special price creation
   * @return spriceCreate
   */
  @javax.annotation.Nullable
  public String getSpriceCreate() {
    return spriceCreate;
  }

  public void setSpriceCreate(String spriceCreate) {
    this.spriceCreate = spriceCreate;
  }


  public ProductUpdate spriceExpire(String spriceExpire) {
    this.spriceExpire = spriceExpire;
    return this;
  }

  /**
   * Defines the term of special price offer duration
   * @return spriceExpire
   */
  @javax.annotation.Nullable
  public String getSpriceExpire() {
    return spriceExpire;
  }

  public void setSpriceExpire(String spriceExpire) {
    this.spriceExpire = spriceExpire;
  }


  public ProductUpdate status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Defines product&#39;s status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public ProductUpdate storeId(String storeId) {
    this.storeId = storeId;
    return this;
  }

  /**
   * Defines store id where the product should be found
   * @return storeId
   */
  @javax.annotation.Nullable
  public String getStoreId() {
    return storeId;
  }

  public void setStoreId(String storeId) {
    this.storeId = storeId;
  }


  public ProductUpdate tags(String tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Product tags
   * @return tags
   */
  @javax.annotation.Nullable
  public String getTags() {
    return tags;
  }

  public void setTags(String tags) {
    this.tags = tags;
  }


  public ProductUpdate taxable(Boolean taxable) {
    this.taxable = taxable;
    return this;
  }

  /**
   * Specifies whether a tax is charged
   * @return taxable
   */
  @javax.annotation.Nullable
  public Boolean getTaxable() {
    return taxable;
  }

  public void setTaxable(Boolean taxable) {
    this.taxable = taxable;
  }


  public ProductUpdate visible(String visible) {
    this.visible = visible;
    return this;
  }

  /**
   * Set visibility status
   * @return visible
   */
  @javax.annotation.Nullable
  public String getVisible() {
    return visible;
  }

  public void setVisible(String visible) {
    this.visible = visible;
  }


  public ProductUpdate warehouseId(String warehouseId) {
    this.warehouseId = warehouseId;
    return this;
  }

  /**
   * This parameter is used for selecting a warehouse where you need to set/modify a product quantity.
   * @return warehouseId
   */
  @javax.annotation.Nullable
  public String getWarehouseId() {
    return warehouseId;
  }

  public void setWarehouseId(String warehouseId) {
    this.warehouseId = warehouseId;
  }


  public ProductUpdate weight(BigDecimal weight) {
    this.weight = weight;
    return this;
  }

  /**
   * Weight
   * @return weight
   */
  @javax.annotation.Nullable
  public BigDecimal getWeight() {
    return weight;
  }

  public void setWeight(BigDecimal weight) {
    this.weight = weight;
  }


  public ProductUpdate width(BigDecimal width) {
    this.width = width;
    return this;
  }

  /**
   * Defines product&#39;s width
   * @return width
   */
  @javax.annotation.Nullable
  public BigDecimal getWidth() {
    return width;
  }

  public void setWidth(BigDecimal width) {
    this.width = width;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductUpdate productUpdate = (ProductUpdate) o;
    return Objects.equals(this.backorderStatus, productUpdate.backorderStatus) &&
        Objects.equals(this.barcode, productUpdate.barcode) &&
        Objects.equals(this.categoriesIds, productUpdate.categoriesIds) &&
        Objects.equals(this.clearCache, productUpdate.clearCache) &&
        Objects.equals(this.costPrice, productUpdate.costPrice) &&
        Objects.equals(this.countryOfOrigin, productUpdate.countryOfOrigin) &&
        Objects.equals(this.description, productUpdate.description) &&
        Objects.equals(this.disableReportCache, productUpdate.disableReportCache) &&
        Objects.equals(this.gtin, productUpdate.gtin) &&
        Objects.equals(this.harmonizedSystemCode, productUpdate.harmonizedSystemCode) &&
        Objects.equals(this.height, productUpdate.height) &&
        Objects.equals(this.id, productUpdate.id) &&
        Objects.equals(this.inStock, productUpdate.inStock) &&
        Objects.equals(this.increaseQuantity, productUpdate.increaseQuantity) &&
        Objects.equals(this.langId, productUpdate.langId) &&
        Objects.equals(this.length, productUpdate.length) &&
        Objects.equals(this.manageStock, productUpdate.manageStock) &&
        Objects.equals(this.manufacturer, productUpdate.manufacturer) &&
        Objects.equals(this.manufacturerId, productUpdate.manufacturerId) &&
        Objects.equals(this.metaDescription, productUpdate.metaDescription) &&
        Objects.equals(this.metaKeywords, productUpdate.metaKeywords) &&
        Objects.equals(this.metaTitle, productUpdate.metaTitle) &&
        Objects.equals(this.model, productUpdate.model) &&
        Objects.equals(this.name, productUpdate.name) &&
        Objects.equals(this.oldPrice, productUpdate.oldPrice) &&
        Objects.equals(this.price, productUpdate.price) &&
        Objects.equals(this.productClass, productUpdate.productClass) &&
        Objects.equals(this.quantity, productUpdate.quantity) &&
        Objects.equals(this.reduceQuantity, productUpdate.reduceQuantity) &&
        Objects.equals(this.reindex, productUpdate.reindex) &&
        Objects.equals(this.reportRequestId, productUpdate.reportRequestId) &&
        Objects.equals(this.reserveQuantity, productUpdate.reserveQuantity) &&
        Objects.equals(this.retailPrice, productUpdate.retailPrice) &&
        Objects.equals(this.searchKeywords, productUpdate.searchKeywords) &&
        Objects.equals(this.seoUrl, productUpdate.seoUrl) &&
        Objects.equals(this.shortDescription, productUpdate.shortDescription) &&
        Objects.equals(this.sku, productUpdate.sku) &&
        Objects.equals(this.specialPrice, productUpdate.specialPrice) &&
        Objects.equals(this.spriceCreate, productUpdate.spriceCreate) &&
        Objects.equals(this.spriceExpire, productUpdate.spriceExpire) &&
        Objects.equals(this.status, productUpdate.status) &&
        Objects.equals(this.storeId, productUpdate.storeId) &&
        Objects.equals(this.tags, productUpdate.tags) &&
        Objects.equals(this.taxable, productUpdate.taxable) &&
        Objects.equals(this.visible, productUpdate.visible) &&
        Objects.equals(this.warehouseId, productUpdate.warehouseId) &&
        Objects.equals(this.weight, productUpdate.weight) &&
        Objects.equals(this.width, productUpdate.width);
  }

  @Override
  public int hashCode() {
    return Objects.hash(backorderStatus, barcode, categoriesIds, clearCache, costPrice, countryOfOrigin, description, disableReportCache, gtin, harmonizedSystemCode, height, id, inStock, increaseQuantity, langId, length, manageStock, manufacturer, manufacturerId, metaDescription, metaKeywords, metaTitle, model, name, oldPrice, price, productClass, quantity, reduceQuantity, reindex, reportRequestId, reserveQuantity, retailPrice, searchKeywords, seoUrl, shortDescription, sku, specialPrice, spriceCreate, spriceExpire, status, storeId, tags, taxable, visible, warehouseId, weight, width);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductUpdate {\n");
    sb.append("    backorderStatus: ").append(toIndentedString(backorderStatus)).append("\n");
    sb.append("    barcode: ").append(toIndentedString(barcode)).append("\n");
    sb.append("    categoriesIds: ").append(toIndentedString(categoriesIds)).append("\n");
    sb.append("    clearCache: ").append(toIndentedString(clearCache)).append("\n");
    sb.append("    costPrice: ").append(toIndentedString(costPrice)).append("\n");
    sb.append("    countryOfOrigin: ").append(toIndentedString(countryOfOrigin)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    disableReportCache: ").append(toIndentedString(disableReportCache)).append("\n");
    sb.append("    gtin: ").append(toIndentedString(gtin)).append("\n");
    sb.append("    harmonizedSystemCode: ").append(toIndentedString(harmonizedSystemCode)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    inStock: ").append(toIndentedString(inStock)).append("\n");
    sb.append("    increaseQuantity: ").append(toIndentedString(increaseQuantity)).append("\n");
    sb.append("    langId: ").append(toIndentedString(langId)).append("\n");
    sb.append("    length: ").append(toIndentedString(length)).append("\n");
    sb.append("    manageStock: ").append(toIndentedString(manageStock)).append("\n");
    sb.append("    manufacturer: ").append(toIndentedString(manufacturer)).append("\n");
    sb.append("    manufacturerId: ").append(toIndentedString(manufacturerId)).append("\n");
    sb.append("    metaDescription: ").append(toIndentedString(metaDescription)).append("\n");
    sb.append("    metaKeywords: ").append(toIndentedString(metaKeywords)).append("\n");
    sb.append("    metaTitle: ").append(toIndentedString(metaTitle)).append("\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    oldPrice: ").append(toIndentedString(oldPrice)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    productClass: ").append(toIndentedString(productClass)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    reduceQuantity: ").append(toIndentedString(reduceQuantity)).append("\n");
    sb.append("    reindex: ").append(toIndentedString(reindex)).append("\n");
    sb.append("    reportRequestId: ").append(toIndentedString(reportRequestId)).append("\n");
    sb.append("    reserveQuantity: ").append(toIndentedString(reserveQuantity)).append("\n");
    sb.append("    retailPrice: ").append(toIndentedString(retailPrice)).append("\n");
    sb.append("    searchKeywords: ").append(toIndentedString(searchKeywords)).append("\n");
    sb.append("    seoUrl: ").append(toIndentedString(seoUrl)).append("\n");
    sb.append("    shortDescription: ").append(toIndentedString(shortDescription)).append("\n");
    sb.append("    sku: ").append(toIndentedString(sku)).append("\n");
    sb.append("    specialPrice: ").append(toIndentedString(specialPrice)).append("\n");
    sb.append("    spriceCreate: ").append(toIndentedString(spriceCreate)).append("\n");
    sb.append("    spriceExpire: ").append(toIndentedString(spriceExpire)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    storeId: ").append(toIndentedString(storeId)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    taxable: ").append(toIndentedString(taxable)).append("\n");
    sb.append("    visible: ").append(toIndentedString(visible)).append("\n");
    sb.append("    warehouseId: ").append(toIndentedString(warehouseId)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("backorder_status");
    openapiFields.add("barcode");
    openapiFields.add("categories_ids");
    openapiFields.add("clear_cache");
    openapiFields.add("cost_price");
    openapiFields.add("country_of_origin");
    openapiFields.add("description");
    openapiFields.add("disable_report_cache");
    openapiFields.add("gtin");
    openapiFields.add("harmonized_system_code");
    openapiFields.add("height");
    openapiFields.add("id");
    openapiFields.add("in_stock");
    openapiFields.add("increase_quantity");
    openapiFields.add("lang_id");
    openapiFields.add("length");
    openapiFields.add("manage_stock");
    openapiFields.add("manufacturer");
    openapiFields.add("manufacturer_id");
    openapiFields.add("meta_description");
    openapiFields.add("meta_keywords");
    openapiFields.add("meta_title");
    openapiFields.add("model");
    openapiFields.add("name");
    openapiFields.add("old_price");
    openapiFields.add("price");
    openapiFields.add("product_class");
    openapiFields.add("quantity");
    openapiFields.add("reduce_quantity");
    openapiFields.add("reindex");
    openapiFields.add("report_request_id");
    openapiFields.add("reserve_quantity");
    openapiFields.add("retail_price");
    openapiFields.add("search_keywords");
    openapiFields.add("seo_url");
    openapiFields.add("short_description");
    openapiFields.add("sku");
    openapiFields.add("special_price");
    openapiFields.add("sprice_create");
    openapiFields.add("sprice_expire");
    openapiFields.add("status");
    openapiFields.add("store_id");
    openapiFields.add("tags");
    openapiFields.add("taxable");
    openapiFields.add("visible");
    openapiFields.add("warehouse_id");
    openapiFields.add("weight");
    openapiFields.add("width");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ProductUpdate
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ProductUpdate.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ProductUpdate is not found in the empty JSON string", ProductUpdate.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ProductUpdate.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ProductUpdate` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("backorder_status") != null && !jsonObj.get("backorder_status").isJsonNull()) && !jsonObj.get("backorder_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `backorder_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("backorder_status").toString()));
      }
      if ((jsonObj.get("barcode") != null && !jsonObj.get("barcode").isJsonNull()) && !jsonObj.get("barcode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `barcode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("barcode").toString()));
      }
      if ((jsonObj.get("categories_ids") != null && !jsonObj.get("categories_ids").isJsonNull()) && !jsonObj.get("categories_ids").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `categories_ids` to be a primitive type in the JSON string but got `%s`", jsonObj.get("categories_ids").toString()));
      }
      if ((jsonObj.get("country_of_origin") != null && !jsonObj.get("country_of_origin").isJsonNull()) && !jsonObj.get("country_of_origin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `country_of_origin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("country_of_origin").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("gtin") != null && !jsonObj.get("gtin").isJsonNull()) && !jsonObj.get("gtin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gtin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gtin").toString()));
      }
      if ((jsonObj.get("harmonized_system_code") != null && !jsonObj.get("harmonized_system_code").isJsonNull()) && !jsonObj.get("harmonized_system_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `harmonized_system_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("harmonized_system_code").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("lang_id") != null && !jsonObj.get("lang_id").isJsonNull()) && !jsonObj.get("lang_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lang_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lang_id").toString()));
      }
      if ((jsonObj.get("manufacturer") != null && !jsonObj.get("manufacturer").isJsonNull()) && !jsonObj.get("manufacturer").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `manufacturer` to be a primitive type in the JSON string but got `%s`", jsonObj.get("manufacturer").toString()));
      }
      if ((jsonObj.get("manufacturer_id") != null && !jsonObj.get("manufacturer_id").isJsonNull()) && !jsonObj.get("manufacturer_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `manufacturer_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("manufacturer_id").toString()));
      }
      if ((jsonObj.get("meta_description") != null && !jsonObj.get("meta_description").isJsonNull()) && !jsonObj.get("meta_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `meta_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("meta_description").toString()));
      }
      if ((jsonObj.get("meta_keywords") != null && !jsonObj.get("meta_keywords").isJsonNull()) && !jsonObj.get("meta_keywords").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `meta_keywords` to be a primitive type in the JSON string but got `%s`", jsonObj.get("meta_keywords").toString()));
      }
      if ((jsonObj.get("meta_title") != null && !jsonObj.get("meta_title").isJsonNull()) && !jsonObj.get("meta_title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `meta_title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("meta_title").toString()));
      }
      if ((jsonObj.get("model") != null && !jsonObj.get("model").isJsonNull()) && !jsonObj.get("model").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `model` to be a primitive type in the JSON string but got `%s`", jsonObj.get("model").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("product_class") != null && !jsonObj.get("product_class").isJsonNull()) && !jsonObj.get("product_class").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `product_class` to be a primitive type in the JSON string but got `%s`", jsonObj.get("product_class").toString()));
      }
      if ((jsonObj.get("report_request_id") != null && !jsonObj.get("report_request_id").isJsonNull()) && !jsonObj.get("report_request_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `report_request_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("report_request_id").toString()));
      }
      if ((jsonObj.get("search_keywords") != null && !jsonObj.get("search_keywords").isJsonNull()) && !jsonObj.get("search_keywords").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `search_keywords` to be a primitive type in the JSON string but got `%s`", jsonObj.get("search_keywords").toString()));
      }
      if ((jsonObj.get("seo_url") != null && !jsonObj.get("seo_url").isJsonNull()) && !jsonObj.get("seo_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `seo_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("seo_url").toString()));
      }
      if ((jsonObj.get("short_description") != null && !jsonObj.get("short_description").isJsonNull()) && !jsonObj.get("short_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `short_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("short_description").toString()));
      }
      if ((jsonObj.get("sku") != null && !jsonObj.get("sku").isJsonNull()) && !jsonObj.get("sku").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sku` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sku").toString()));
      }
      if ((jsonObj.get("sprice_create") != null && !jsonObj.get("sprice_create").isJsonNull()) && !jsonObj.get("sprice_create").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sprice_create` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sprice_create").toString()));
      }
      if ((jsonObj.get("sprice_expire") != null && !jsonObj.get("sprice_expire").isJsonNull()) && !jsonObj.get("sprice_expire").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sprice_expire` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sprice_expire").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("store_id") != null && !jsonObj.get("store_id").isJsonNull()) && !jsonObj.get("store_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `store_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("store_id").toString()));
      }
      if ((jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) && !jsonObj.get("tags").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tags` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tags").toString()));
      }
      if ((jsonObj.get("visible") != null && !jsonObj.get("visible").isJsonNull()) && !jsonObj.get("visible").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `visible` to be a primitive type in the JSON string but got `%s`", jsonObj.get("visible").toString()));
      }
      if ((jsonObj.get("warehouse_id") != null && !jsonObj.get("warehouse_id").isJsonNull()) && !jsonObj.get("warehouse_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `warehouse_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("warehouse_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ProductUpdate.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ProductUpdate' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ProductUpdate> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ProductUpdate.class));

       return (TypeAdapter<T>) new TypeAdapter<ProductUpdate>() {
           @Override
           public void write(JsonWriter out, ProductUpdate value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ProductUpdate read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ProductUpdate given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ProductUpdate
   * @throws IOException if the JSON string is invalid with respect to ProductUpdate
   */
  public static ProductUpdate fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ProductUpdate.class);
  }

  /**
   * Convert an instance of ProductUpdate to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

