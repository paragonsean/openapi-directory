/*
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.A2CDateTime;
import org.openapitools.client.model.Discount;
import org.openapitools.client.model.Image;
import org.openapitools.client.model.ProductAdvancedPrice;
import org.openapitools.client.model.ProductGroupItem;
import org.openapitools.client.model.ProductGroupPrice;
import org.openapitools.client.model.ProductInventory;
import org.openapitools.client.model.ProductOption;
import org.openapitools.client.model.ProductTierPrice;
import org.openapitools.client.model.SpecialPrice;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Product
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:12:09.268126-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Product {
  public static final String SERIALIZED_NAME_ADDITIONAL_FIELDS = "additional_fields";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_FIELDS)
  private Object additionalFields;

  public static final String SERIALIZED_NAME_ADVANCED_PRICE = "advanced_price";
  @SerializedName(SERIALIZED_NAME_ADVANCED_PRICE)
  private List<ProductAdvancedPrice> advancedPrice = new ArrayList<>();

  public static final String SERIALIZED_NAME_AVAIL_SALE = "avail_sale";
  @SerializedName(SERIALIZED_NAME_AVAIL_SALE)
  private Boolean availSale;

  public static final String SERIALIZED_NAME_AVAIL_VIEW = "avail_view";
  @SerializedName(SERIALIZED_NAME_AVAIL_VIEW)
  private Boolean availView;

  public static final String SERIALIZED_NAME_BACKORDERS = "backorders";
  @SerializedName(SERIALIZED_NAME_BACKORDERS)
  private String backorders;

  public static final String SERIALIZED_NAME_CATEGORIES_IDS = "categories_ids";
  @SerializedName(SERIALIZED_NAME_CATEGORIES_IDS)
  private List<String> categoriesIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_COST_PRICE = "cost_price";
  @SerializedName(SERIALIZED_NAME_COST_PRICE)
  private BigDecimal costPrice;

  public static final String SERIALIZED_NAME_CREATE_AT = "create_at";
  @SerializedName(SERIALIZED_NAME_CREATE_AT)
  private A2CDateTime createAt;

  public static final String SERIALIZED_NAME_CUSTOM_FIELDS = "custom_fields";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELDS)
  private Object customFields;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DIMENSIONS_UNIT = "dimensions_unit";
  @SerializedName(SERIALIZED_NAME_DIMENSIONS_UNIT)
  private String dimensionsUnit;

  public static final String SERIALIZED_NAME_DISCOUNTS = "discounts";
  @SerializedName(SERIALIZED_NAME_DISCOUNTS)
  private List<Discount> discounts = new ArrayList<>();

  public static final String SERIALIZED_NAME_GROUP_ITEMS = "group_items";
  @SerializedName(SERIALIZED_NAME_GROUP_ITEMS)
  private List<ProductGroupItem> groupItems = new ArrayList<>();

  public static final String SERIALIZED_NAME_GROUP_PRICE = "group_price";
  @SerializedName(SERIALIZED_NAME_GROUP_PRICE)
  private List<ProductGroupPrice> groupPrice = new ArrayList<>();

  public static final String SERIALIZED_NAME_HEIGHT = "height";
  @SerializedName(SERIALIZED_NAME_HEIGHT)
  private BigDecimal height;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_IMAGES = "images";
  @SerializedName(SERIALIZED_NAME_IMAGES)
  private List<Image> images = new ArrayList<>();

  public static final String SERIALIZED_NAME_IN_STOCK = "in_stock";
  @SerializedName(SERIALIZED_NAME_IN_STOCK)
  private Boolean inStock;

  public static final String SERIALIZED_NAME_INVENTORY = "inventory";
  @SerializedName(SERIALIZED_NAME_INVENTORY)
  private List<ProductInventory> inventory = new ArrayList<>();

  public static final String SERIALIZED_NAME_IS_DOWNLOADABLE = "is_downloadable";
  @SerializedName(SERIALIZED_NAME_IS_DOWNLOADABLE)
  private Boolean isDownloadable;

  public static final String SERIALIZED_NAME_IS_STOCK_MANAGED = "is_stock_managed";
  @SerializedName(SERIALIZED_NAME_IS_STOCK_MANAGED)
  private Boolean isStockManaged;

  public static final String SERIALIZED_NAME_IS_VIRTUAL = "is_virtual";
  @SerializedName(SERIALIZED_NAME_IS_VIRTUAL)
  private Boolean isVirtual;

  public static final String SERIALIZED_NAME_LENGTH = "length";
  @SerializedName(SERIALIZED_NAME_LENGTH)
  private BigDecimal length;

  public static final String SERIALIZED_NAME_MANAGE_STOCK = "manage_stock";
  @SerializedName(SERIALIZED_NAME_MANAGE_STOCK)
  private String manageStock;

  public static final String SERIALIZED_NAME_META_DESCRIPTION = "meta_description";
  @SerializedName(SERIALIZED_NAME_META_DESCRIPTION)
  private String metaDescription;

  public static final String SERIALIZED_NAME_META_KEYWORDS = "meta_keywords";
  @SerializedName(SERIALIZED_NAME_META_KEYWORDS)
  private String metaKeywords;

  public static final String SERIALIZED_NAME_META_TITLE = "meta_title";
  @SerializedName(SERIALIZED_NAME_META_TITLE)
  private String metaTitle;

  public static final String SERIALIZED_NAME_MODIFIED_AT = "modified_at";
  @SerializedName(SERIALIZED_NAME_MODIFIED_AT)
  private A2CDateTime modifiedAt;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private BigDecimal price;

  public static final String SERIALIZED_NAME_PRODUCT_OPTIONS = "product_options";
  @SerializedName(SERIALIZED_NAME_PRODUCT_OPTIONS)
  private List<ProductOption> productOptions = new ArrayList<>();

  public static final String SERIALIZED_NAME_QUANTITY = "quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  private BigDecimal quantity;

  public static final String SERIALIZED_NAME_RELATED_PRODUCTS_IDS = "related_products_ids";
  @SerializedName(SERIALIZED_NAME_RELATED_PRODUCTS_IDS)
  private List<String> relatedProductsIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_SEO_URL = "seo_url";
  @SerializedName(SERIALIZED_NAME_SEO_URL)
  private String seoUrl;

  public static final String SERIALIZED_NAME_SHORT_DESCRIPTION = "short_description";
  @SerializedName(SERIALIZED_NAME_SHORT_DESCRIPTION)
  private String shortDescription;

  public static final String SERIALIZED_NAME_SORT_ORDER = "sort_order";
  @SerializedName(SERIALIZED_NAME_SORT_ORDER)
  private Integer sortOrder;

  public static final String SERIALIZED_NAME_SPECIAL_PRICE = "special_price";
  @SerializedName(SERIALIZED_NAME_SPECIAL_PRICE)
  private SpecialPrice specialPrice;

  public static final String SERIALIZED_NAME_STORES_IDS = "stores_ids";
  @SerializedName(SERIALIZED_NAME_STORES_IDS)
  private List<String> storesIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_TAX_CLASS_ID = "tax_class_id";
  @SerializedName(SERIALIZED_NAME_TAX_CLASS_ID)
  private String taxClassId;

  public static final String SERIALIZED_NAME_TIER_PRICE = "tier_price";
  @SerializedName(SERIALIZED_NAME_TIER_PRICE)
  private List<ProductTierPrice> tierPrice = new ArrayList<>();

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_U_BRAND = "u_brand";
  @SerializedName(SERIALIZED_NAME_U_BRAND)
  private String uBrand;

  public static final String SERIALIZED_NAME_U_BRAND_ID = "u_brand_id";
  @SerializedName(SERIALIZED_NAME_U_BRAND_ID)
  private String uBrandId;

  public static final String SERIALIZED_NAME_U_MODEL = "u_model";
  @SerializedName(SERIALIZED_NAME_U_MODEL)
  private String uModel;

  public static final String SERIALIZED_NAME_U_MPN = "u_mpn";
  @SerializedName(SERIALIZED_NAME_U_MPN)
  private String uMpn;

  public static final String SERIALIZED_NAME_U_SKU = "u_sku";
  @SerializedName(SERIALIZED_NAME_U_SKU)
  private String uSku;

  public static final String SERIALIZED_NAME_U_UPC = "u_upc";
  @SerializedName(SERIALIZED_NAME_U_UPC)
  private String uUpc;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_WEIGHT = "weight";
  @SerializedName(SERIALIZED_NAME_WEIGHT)
  private BigDecimal weight;

  public static final String SERIALIZED_NAME_WEIGHT_UNIT = "weight_unit";
  @SerializedName(SERIALIZED_NAME_WEIGHT_UNIT)
  private String weightUnit;

  public static final String SERIALIZED_NAME_WIDTH = "width";
  @SerializedName(SERIALIZED_NAME_WIDTH)
  private BigDecimal width;

  public Product() {
  }

  public Product additionalFields(Object additionalFields) {
    this.additionalFields = additionalFields;
    return this;
  }

  /**
   * Get additionalFields
   * @return additionalFields
   */
  @javax.annotation.Nullable
  public Object getAdditionalFields() {
    return additionalFields;
  }

  public void setAdditionalFields(Object additionalFields) {
    this.additionalFields = additionalFields;
  }


  public Product advancedPrice(List<ProductAdvancedPrice> advancedPrice) {
    this.advancedPrice = advancedPrice;
    return this;
  }

  public Product addAdvancedPriceItem(ProductAdvancedPrice advancedPriceItem) {
    if (this.advancedPrice == null) {
      this.advancedPrice = new ArrayList<>();
    }
    this.advancedPrice.add(advancedPriceItem);
    return this;
  }

  /**
   * Get advancedPrice
   * @return advancedPrice
   */
  @javax.annotation.Nullable
  public List<ProductAdvancedPrice> getAdvancedPrice() {
    return advancedPrice;
  }

  public void setAdvancedPrice(List<ProductAdvancedPrice> advancedPrice) {
    this.advancedPrice = advancedPrice;
  }


  public Product availSale(Boolean availSale) {
    this.availSale = availSale;
    return this;
  }

  /**
   * Get availSale
   * @return availSale
   */
  @javax.annotation.Nullable
  public Boolean getAvailSale() {
    return availSale;
  }

  public void setAvailSale(Boolean availSale) {
    this.availSale = availSale;
  }


  public Product availView(Boolean availView) {
    this.availView = availView;
    return this;
  }

  /**
   * Get availView
   * @return availView
   */
  @javax.annotation.Nullable
  public Boolean getAvailView() {
    return availView;
  }

  public void setAvailView(Boolean availView) {
    this.availView = availView;
  }


  public Product backorders(String backorders) {
    this.backorders = backorders;
    return this;
  }

  /**
   * Get backorders
   * @return backorders
   */
  @javax.annotation.Nullable
  public String getBackorders() {
    return backorders;
  }

  public void setBackorders(String backorders) {
    this.backorders = backorders;
  }


  public Product categoriesIds(List<String> categoriesIds) {
    this.categoriesIds = categoriesIds;
    return this;
  }

  public Product addCategoriesIdsItem(String categoriesIdsItem) {
    if (this.categoriesIds == null) {
      this.categoriesIds = new ArrayList<>();
    }
    this.categoriesIds.add(categoriesIdsItem);
    return this;
  }

  /**
   * Get categoriesIds
   * @return categoriesIds
   */
  @javax.annotation.Nullable
  public List<String> getCategoriesIds() {
    return categoriesIds;
  }

  public void setCategoriesIds(List<String> categoriesIds) {
    this.categoriesIds = categoriesIds;
  }


  public Product costPrice(BigDecimal costPrice) {
    this.costPrice = costPrice;
    return this;
  }

  /**
   * Get costPrice
   * @return costPrice
   */
  @javax.annotation.Nullable
  public BigDecimal getCostPrice() {
    return costPrice;
  }

  public void setCostPrice(BigDecimal costPrice) {
    this.costPrice = costPrice;
  }


  public Product createAt(A2CDateTime createAt) {
    this.createAt = createAt;
    return this;
  }

  /**
   * Get createAt
   * @return createAt
   */
  @javax.annotation.Nullable
  public A2CDateTime getCreateAt() {
    return createAt;
  }

  public void setCreateAt(A2CDateTime createAt) {
    this.createAt = createAt;
  }


  public Product customFields(Object customFields) {
    this.customFields = customFields;
    return this;
  }

  /**
   * Get customFields
   * @return customFields
   */
  @javax.annotation.Nullable
  public Object getCustomFields() {
    return customFields;
  }

  public void setCustomFields(Object customFields) {
    this.customFields = customFields;
  }


  public Product description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public Product dimensionsUnit(String dimensionsUnit) {
    this.dimensionsUnit = dimensionsUnit;
    return this;
  }

  /**
   * Get dimensionsUnit
   * @return dimensionsUnit
   */
  @javax.annotation.Nullable
  public String getDimensionsUnit() {
    return dimensionsUnit;
  }

  public void setDimensionsUnit(String dimensionsUnit) {
    this.dimensionsUnit = dimensionsUnit;
  }


  public Product discounts(List<Discount> discounts) {
    this.discounts = discounts;
    return this;
  }

  public Product addDiscountsItem(Discount discountsItem) {
    if (this.discounts == null) {
      this.discounts = new ArrayList<>();
    }
    this.discounts.add(discountsItem);
    return this;
  }

  /**
   * Get discounts
   * @return discounts
   */
  @javax.annotation.Nullable
  public List<Discount> getDiscounts() {
    return discounts;
  }

  public void setDiscounts(List<Discount> discounts) {
    this.discounts = discounts;
  }


  public Product groupItems(List<ProductGroupItem> groupItems) {
    this.groupItems = groupItems;
    return this;
  }

  public Product addGroupItemsItem(ProductGroupItem groupItemsItem) {
    if (this.groupItems == null) {
      this.groupItems = new ArrayList<>();
    }
    this.groupItems.add(groupItemsItem);
    return this;
  }

  /**
   * Get groupItems
   * @return groupItems
   */
  @javax.annotation.Nullable
  public List<ProductGroupItem> getGroupItems() {
    return groupItems;
  }

  public void setGroupItems(List<ProductGroupItem> groupItems) {
    this.groupItems = groupItems;
  }


  public Product groupPrice(List<ProductGroupPrice> groupPrice) {
    this.groupPrice = groupPrice;
    return this;
  }

  public Product addGroupPriceItem(ProductGroupPrice groupPriceItem) {
    if (this.groupPrice == null) {
      this.groupPrice = new ArrayList<>();
    }
    this.groupPrice.add(groupPriceItem);
    return this;
  }

  /**
   * Get groupPrice
   * @return groupPrice
   */
  @javax.annotation.Nullable
  public List<ProductGroupPrice> getGroupPrice() {
    return groupPrice;
  }

  public void setGroupPrice(List<ProductGroupPrice> groupPrice) {
    this.groupPrice = groupPrice;
  }


  public Product height(BigDecimal height) {
    this.height = height;
    return this;
  }

  /**
   * Get height
   * @return height
   */
  @javax.annotation.Nullable
  public BigDecimal getHeight() {
    return height;
  }

  public void setHeight(BigDecimal height) {
    this.height = height;
  }


  public Product id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public Product images(List<Image> images) {
    this.images = images;
    return this;
  }

  public Product addImagesItem(Image imagesItem) {
    if (this.images == null) {
      this.images = new ArrayList<>();
    }
    this.images.add(imagesItem);
    return this;
  }

  /**
   * Get images
   * @return images
   */
  @javax.annotation.Nullable
  public List<Image> getImages() {
    return images;
  }

  public void setImages(List<Image> images) {
    this.images = images;
  }


  public Product inStock(Boolean inStock) {
    this.inStock = inStock;
    return this;
  }

  /**
   * Get inStock
   * @return inStock
   */
  @javax.annotation.Nullable
  public Boolean getInStock() {
    return inStock;
  }

  public void setInStock(Boolean inStock) {
    this.inStock = inStock;
  }


  public Product inventory(List<ProductInventory> inventory) {
    this.inventory = inventory;
    return this;
  }

  public Product addInventoryItem(ProductInventory inventoryItem) {
    if (this.inventory == null) {
      this.inventory = new ArrayList<>();
    }
    this.inventory.add(inventoryItem);
    return this;
  }

  /**
   * Get inventory
   * @return inventory
   */
  @javax.annotation.Nullable
  public List<ProductInventory> getInventory() {
    return inventory;
  }

  public void setInventory(List<ProductInventory> inventory) {
    this.inventory = inventory;
  }


  public Product isDownloadable(Boolean isDownloadable) {
    this.isDownloadable = isDownloadable;
    return this;
  }

  /**
   * Get isDownloadable
   * @return isDownloadable
   */
  @javax.annotation.Nullable
  public Boolean getIsDownloadable() {
    return isDownloadable;
  }

  public void setIsDownloadable(Boolean isDownloadable) {
    this.isDownloadable = isDownloadable;
  }


  public Product isStockManaged(Boolean isStockManaged) {
    this.isStockManaged = isStockManaged;
    return this;
  }

  /**
   * Get isStockManaged
   * @return isStockManaged
   */
  @javax.annotation.Nullable
  public Boolean getIsStockManaged() {
    return isStockManaged;
  }

  public void setIsStockManaged(Boolean isStockManaged) {
    this.isStockManaged = isStockManaged;
  }


  public Product isVirtual(Boolean isVirtual) {
    this.isVirtual = isVirtual;
    return this;
  }

  /**
   * Get isVirtual
   * @return isVirtual
   */
  @javax.annotation.Nullable
  public Boolean getIsVirtual() {
    return isVirtual;
  }

  public void setIsVirtual(Boolean isVirtual) {
    this.isVirtual = isVirtual;
  }


  public Product length(BigDecimal length) {
    this.length = length;
    return this;
  }

  /**
   * Get length
   * @return length
   */
  @javax.annotation.Nullable
  public BigDecimal getLength() {
    return length;
  }

  public void setLength(BigDecimal length) {
    this.length = length;
  }


  public Product manageStock(String manageStock) {
    this.manageStock = manageStock;
    return this;
  }

  /**
   * Get manageStock
   * @return manageStock
   */
  @javax.annotation.Nullable
  public String getManageStock() {
    return manageStock;
  }

  public void setManageStock(String manageStock) {
    this.manageStock = manageStock;
  }


  public Product metaDescription(String metaDescription) {
    this.metaDescription = metaDescription;
    return this;
  }

  /**
   * Get metaDescription
   * @return metaDescription
   */
  @javax.annotation.Nullable
  public String getMetaDescription() {
    return metaDescription;
  }

  public void setMetaDescription(String metaDescription) {
    this.metaDescription = metaDescription;
  }


  public Product metaKeywords(String metaKeywords) {
    this.metaKeywords = metaKeywords;
    return this;
  }

  /**
   * Get metaKeywords
   * @return metaKeywords
   */
  @javax.annotation.Nullable
  public String getMetaKeywords() {
    return metaKeywords;
  }

  public void setMetaKeywords(String metaKeywords) {
    this.metaKeywords = metaKeywords;
  }


  public Product metaTitle(String metaTitle) {
    this.metaTitle = metaTitle;
    return this;
  }

  /**
   * Get metaTitle
   * @return metaTitle
   */
  @javax.annotation.Nullable
  public String getMetaTitle() {
    return metaTitle;
  }

  public void setMetaTitle(String metaTitle) {
    this.metaTitle = metaTitle;
  }


  public Product modifiedAt(A2CDateTime modifiedAt) {
    this.modifiedAt = modifiedAt;
    return this;
  }

  /**
   * Get modifiedAt
   * @return modifiedAt
   */
  @javax.annotation.Nullable
  public A2CDateTime getModifiedAt() {
    return modifiedAt;
  }

  public void setModifiedAt(A2CDateTime modifiedAt) {
    this.modifiedAt = modifiedAt;
  }


  public Product name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public Product price(BigDecimal price) {
    this.price = price;
    return this;
  }

  /**
   * Get price
   * @return price
   */
  @javax.annotation.Nullable
  public BigDecimal getPrice() {
    return price;
  }

  public void setPrice(BigDecimal price) {
    this.price = price;
  }


  public Product productOptions(List<ProductOption> productOptions) {
    this.productOptions = productOptions;
    return this;
  }

  public Product addProductOptionsItem(ProductOption productOptionsItem) {
    if (this.productOptions == null) {
      this.productOptions = new ArrayList<>();
    }
    this.productOptions.add(productOptionsItem);
    return this;
  }

  /**
   * Get productOptions
   * @return productOptions
   */
  @javax.annotation.Nullable
  public List<ProductOption> getProductOptions() {
    return productOptions;
  }

  public void setProductOptions(List<ProductOption> productOptions) {
    this.productOptions = productOptions;
  }


  public Product quantity(BigDecimal quantity) {
    this.quantity = quantity;
    return this;
  }

  /**
   * Get quantity
   * @return quantity
   */
  @javax.annotation.Nullable
  public BigDecimal getQuantity() {
    return quantity;
  }

  public void setQuantity(BigDecimal quantity) {
    this.quantity = quantity;
  }


  public Product relatedProductsIds(List<String> relatedProductsIds) {
    this.relatedProductsIds = relatedProductsIds;
    return this;
  }

  public Product addRelatedProductsIdsItem(String relatedProductsIdsItem) {
    if (this.relatedProductsIds == null) {
      this.relatedProductsIds = new ArrayList<>();
    }
    this.relatedProductsIds.add(relatedProductsIdsItem);
    return this;
  }

  /**
   * Get relatedProductsIds
   * @return relatedProductsIds
   */
  @javax.annotation.Nullable
  public List<String> getRelatedProductsIds() {
    return relatedProductsIds;
  }

  public void setRelatedProductsIds(List<String> relatedProductsIds) {
    this.relatedProductsIds = relatedProductsIds;
  }


  public Product seoUrl(String seoUrl) {
    this.seoUrl = seoUrl;
    return this;
  }

  /**
   * Get seoUrl
   * @return seoUrl
   */
  @javax.annotation.Nullable
  public String getSeoUrl() {
    return seoUrl;
  }

  public void setSeoUrl(String seoUrl) {
    this.seoUrl = seoUrl;
  }


  public Product shortDescription(String shortDescription) {
    this.shortDescription = shortDescription;
    return this;
  }

  /**
   * Get shortDescription
   * @return shortDescription
   */
  @javax.annotation.Nullable
  public String getShortDescription() {
    return shortDescription;
  }

  public void setShortDescription(String shortDescription) {
    this.shortDescription = shortDescription;
  }


  public Product sortOrder(Integer sortOrder) {
    this.sortOrder = sortOrder;
    return this;
  }

  /**
   * Get sortOrder
   * @return sortOrder
   */
  @javax.annotation.Nullable
  public Integer getSortOrder() {
    return sortOrder;
  }

  public void setSortOrder(Integer sortOrder) {
    this.sortOrder = sortOrder;
  }


  public Product specialPrice(SpecialPrice specialPrice) {
    this.specialPrice = specialPrice;
    return this;
  }

  /**
   * Get specialPrice
   * @return specialPrice
   */
  @javax.annotation.Nullable
  public SpecialPrice getSpecialPrice() {
    return specialPrice;
  }

  public void setSpecialPrice(SpecialPrice specialPrice) {
    this.specialPrice = specialPrice;
  }


  public Product storesIds(List<String> storesIds) {
    this.storesIds = storesIds;
    return this;
  }

  public Product addStoresIdsItem(String storesIdsItem) {
    if (this.storesIds == null) {
      this.storesIds = new ArrayList<>();
    }
    this.storesIds.add(storesIdsItem);
    return this;
  }

  /**
   * Get storesIds
   * @return storesIds
   */
  @javax.annotation.Nullable
  public List<String> getStoresIds() {
    return storesIds;
  }

  public void setStoresIds(List<String> storesIds) {
    this.storesIds = storesIds;
  }


  public Product taxClassId(String taxClassId) {
    this.taxClassId = taxClassId;
    return this;
  }

  /**
   * Get taxClassId
   * @return taxClassId
   */
  @javax.annotation.Nullable
  public String getTaxClassId() {
    return taxClassId;
  }

  public void setTaxClassId(String taxClassId) {
    this.taxClassId = taxClassId;
  }


  public Product tierPrice(List<ProductTierPrice> tierPrice) {
    this.tierPrice = tierPrice;
    return this;
  }

  public Product addTierPriceItem(ProductTierPrice tierPriceItem) {
    if (this.tierPrice == null) {
      this.tierPrice = new ArrayList<>();
    }
    this.tierPrice.add(tierPriceItem);
    return this;
  }

  /**
   * Get tierPrice
   * @return tierPrice
   */
  @javax.annotation.Nullable
  public List<ProductTierPrice> getTierPrice() {
    return tierPrice;
  }

  public void setTierPrice(List<ProductTierPrice> tierPrice) {
    this.tierPrice = tierPrice;
  }


  public Product type(String type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  public Product uBrand(String uBrand) {
    this.uBrand = uBrand;
    return this;
  }

  /**
   * Get uBrand
   * @return uBrand
   */
  @javax.annotation.Nullable
  public String getuBrand() {
    return uBrand;
  }

  public void setuBrand(String uBrand) {
    this.uBrand = uBrand;
  }


  public Product uBrandId(String uBrandId) {
    this.uBrandId = uBrandId;
    return this;
  }

  /**
   * Get uBrandId
   * @return uBrandId
   */
  @javax.annotation.Nullable
  public String getuBrandId() {
    return uBrandId;
  }

  public void setuBrandId(String uBrandId) {
    this.uBrandId = uBrandId;
  }


  public Product uModel(String uModel) {
    this.uModel = uModel;
    return this;
  }

  /**
   * Get uModel
   * @return uModel
   */
  @javax.annotation.Nullable
  public String getuModel() {
    return uModel;
  }

  public void setuModel(String uModel) {
    this.uModel = uModel;
  }


  public Product uMpn(String uMpn) {
    this.uMpn = uMpn;
    return this;
  }

  /**
   * Get uMpn
   * @return uMpn
   */
  @javax.annotation.Nullable
  public String getuMpn() {
    return uMpn;
  }

  public void setuMpn(String uMpn) {
    this.uMpn = uMpn;
  }


  public Product uSku(String uSku) {
    this.uSku = uSku;
    return this;
  }

  /**
   * Get uSku
   * @return uSku
   */
  @javax.annotation.Nullable
  public String getuSku() {
    return uSku;
  }

  public void setuSku(String uSku) {
    this.uSku = uSku;
  }


  public Product uUpc(String uUpc) {
    this.uUpc = uUpc;
    return this;
  }

  /**
   * Get uUpc
   * @return uUpc
   */
  @javax.annotation.Nullable
  public String getuUpc() {
    return uUpc;
  }

  public void setuUpc(String uUpc) {
    this.uUpc = uUpc;
  }


  public Product url(String url) {
    this.url = url;
    return this;
  }

  /**
   * Get url
   * @return url
   */
  @javax.annotation.Nullable
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }


  public Product weight(BigDecimal weight) {
    this.weight = weight;
    return this;
  }

  /**
   * Get weight
   * @return weight
   */
  @javax.annotation.Nullable
  public BigDecimal getWeight() {
    return weight;
  }

  public void setWeight(BigDecimal weight) {
    this.weight = weight;
  }


  public Product weightUnit(String weightUnit) {
    this.weightUnit = weightUnit;
    return this;
  }

  /**
   * Get weightUnit
   * @return weightUnit
   */
  @javax.annotation.Nullable
  public String getWeightUnit() {
    return weightUnit;
  }

  public void setWeightUnit(String weightUnit) {
    this.weightUnit = weightUnit;
  }


  public Product width(BigDecimal width) {
    this.width = width;
    return this;
  }

  /**
   * Get width
   * @return width
   */
  @javax.annotation.Nullable
  public BigDecimal getWidth() {
    return width;
  }

  public void setWidth(BigDecimal width) {
    this.width = width;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Product product = (Product) o;
    return Objects.equals(this.additionalFields, product.additionalFields) &&
        Objects.equals(this.advancedPrice, product.advancedPrice) &&
        Objects.equals(this.availSale, product.availSale) &&
        Objects.equals(this.availView, product.availView) &&
        Objects.equals(this.backorders, product.backorders) &&
        Objects.equals(this.categoriesIds, product.categoriesIds) &&
        Objects.equals(this.costPrice, product.costPrice) &&
        Objects.equals(this.createAt, product.createAt) &&
        Objects.equals(this.customFields, product.customFields) &&
        Objects.equals(this.description, product.description) &&
        Objects.equals(this.dimensionsUnit, product.dimensionsUnit) &&
        Objects.equals(this.discounts, product.discounts) &&
        Objects.equals(this.groupItems, product.groupItems) &&
        Objects.equals(this.groupPrice, product.groupPrice) &&
        Objects.equals(this.height, product.height) &&
        Objects.equals(this.id, product.id) &&
        Objects.equals(this.images, product.images) &&
        Objects.equals(this.inStock, product.inStock) &&
        Objects.equals(this.inventory, product.inventory) &&
        Objects.equals(this.isDownloadable, product.isDownloadable) &&
        Objects.equals(this.isStockManaged, product.isStockManaged) &&
        Objects.equals(this.isVirtual, product.isVirtual) &&
        Objects.equals(this.length, product.length) &&
        Objects.equals(this.manageStock, product.manageStock) &&
        Objects.equals(this.metaDescription, product.metaDescription) &&
        Objects.equals(this.metaKeywords, product.metaKeywords) &&
        Objects.equals(this.metaTitle, product.metaTitle) &&
        Objects.equals(this.modifiedAt, product.modifiedAt) &&
        Objects.equals(this.name, product.name) &&
        Objects.equals(this.price, product.price) &&
        Objects.equals(this.productOptions, product.productOptions) &&
        Objects.equals(this.quantity, product.quantity) &&
        Objects.equals(this.relatedProductsIds, product.relatedProductsIds) &&
        Objects.equals(this.seoUrl, product.seoUrl) &&
        Objects.equals(this.shortDescription, product.shortDescription) &&
        Objects.equals(this.sortOrder, product.sortOrder) &&
        Objects.equals(this.specialPrice, product.specialPrice) &&
        Objects.equals(this.storesIds, product.storesIds) &&
        Objects.equals(this.taxClassId, product.taxClassId) &&
        Objects.equals(this.tierPrice, product.tierPrice) &&
        Objects.equals(this.type, product.type) &&
        Objects.equals(this.uBrand, product.uBrand) &&
        Objects.equals(this.uBrandId, product.uBrandId) &&
        Objects.equals(this.uModel, product.uModel) &&
        Objects.equals(this.uMpn, product.uMpn) &&
        Objects.equals(this.uSku, product.uSku) &&
        Objects.equals(this.uUpc, product.uUpc) &&
        Objects.equals(this.url, product.url) &&
        Objects.equals(this.weight, product.weight) &&
        Objects.equals(this.weightUnit, product.weightUnit) &&
        Objects.equals(this.width, product.width);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalFields, advancedPrice, availSale, availView, backorders, categoriesIds, costPrice, createAt, customFields, description, dimensionsUnit, discounts, groupItems, groupPrice, height, id, images, inStock, inventory, isDownloadable, isStockManaged, isVirtual, length, manageStock, metaDescription, metaKeywords, metaTitle, modifiedAt, name, price, productOptions, quantity, relatedProductsIds, seoUrl, shortDescription, sortOrder, specialPrice, storesIds, taxClassId, tierPrice, type, uBrand, uBrandId, uModel, uMpn, uSku, uUpc, url, weight, weightUnit, width);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Product {\n");
    sb.append("    additionalFields: ").append(toIndentedString(additionalFields)).append("\n");
    sb.append("    advancedPrice: ").append(toIndentedString(advancedPrice)).append("\n");
    sb.append("    availSale: ").append(toIndentedString(availSale)).append("\n");
    sb.append("    availView: ").append(toIndentedString(availView)).append("\n");
    sb.append("    backorders: ").append(toIndentedString(backorders)).append("\n");
    sb.append("    categoriesIds: ").append(toIndentedString(categoriesIds)).append("\n");
    sb.append("    costPrice: ").append(toIndentedString(costPrice)).append("\n");
    sb.append("    createAt: ").append(toIndentedString(createAt)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    dimensionsUnit: ").append(toIndentedString(dimensionsUnit)).append("\n");
    sb.append("    discounts: ").append(toIndentedString(discounts)).append("\n");
    sb.append("    groupItems: ").append(toIndentedString(groupItems)).append("\n");
    sb.append("    groupPrice: ").append(toIndentedString(groupPrice)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    images: ").append(toIndentedString(images)).append("\n");
    sb.append("    inStock: ").append(toIndentedString(inStock)).append("\n");
    sb.append("    inventory: ").append(toIndentedString(inventory)).append("\n");
    sb.append("    isDownloadable: ").append(toIndentedString(isDownloadable)).append("\n");
    sb.append("    isStockManaged: ").append(toIndentedString(isStockManaged)).append("\n");
    sb.append("    isVirtual: ").append(toIndentedString(isVirtual)).append("\n");
    sb.append("    length: ").append(toIndentedString(length)).append("\n");
    sb.append("    manageStock: ").append(toIndentedString(manageStock)).append("\n");
    sb.append("    metaDescription: ").append(toIndentedString(metaDescription)).append("\n");
    sb.append("    metaKeywords: ").append(toIndentedString(metaKeywords)).append("\n");
    sb.append("    metaTitle: ").append(toIndentedString(metaTitle)).append("\n");
    sb.append("    modifiedAt: ").append(toIndentedString(modifiedAt)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    productOptions: ").append(toIndentedString(productOptions)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    relatedProductsIds: ").append(toIndentedString(relatedProductsIds)).append("\n");
    sb.append("    seoUrl: ").append(toIndentedString(seoUrl)).append("\n");
    sb.append("    shortDescription: ").append(toIndentedString(shortDescription)).append("\n");
    sb.append("    sortOrder: ").append(toIndentedString(sortOrder)).append("\n");
    sb.append("    specialPrice: ").append(toIndentedString(specialPrice)).append("\n");
    sb.append("    storesIds: ").append(toIndentedString(storesIds)).append("\n");
    sb.append("    taxClassId: ").append(toIndentedString(taxClassId)).append("\n");
    sb.append("    tierPrice: ").append(toIndentedString(tierPrice)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    uBrand: ").append(toIndentedString(uBrand)).append("\n");
    sb.append("    uBrandId: ").append(toIndentedString(uBrandId)).append("\n");
    sb.append("    uModel: ").append(toIndentedString(uModel)).append("\n");
    sb.append("    uMpn: ").append(toIndentedString(uMpn)).append("\n");
    sb.append("    uSku: ").append(toIndentedString(uSku)).append("\n");
    sb.append("    uUpc: ").append(toIndentedString(uUpc)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("    weightUnit: ").append(toIndentedString(weightUnit)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("additional_fields");
    openapiFields.add("advanced_price");
    openapiFields.add("avail_sale");
    openapiFields.add("avail_view");
    openapiFields.add("backorders");
    openapiFields.add("categories_ids");
    openapiFields.add("cost_price");
    openapiFields.add("create_at");
    openapiFields.add("custom_fields");
    openapiFields.add("description");
    openapiFields.add("dimensions_unit");
    openapiFields.add("discounts");
    openapiFields.add("group_items");
    openapiFields.add("group_price");
    openapiFields.add("height");
    openapiFields.add("id");
    openapiFields.add("images");
    openapiFields.add("in_stock");
    openapiFields.add("inventory");
    openapiFields.add("is_downloadable");
    openapiFields.add("is_stock_managed");
    openapiFields.add("is_virtual");
    openapiFields.add("length");
    openapiFields.add("manage_stock");
    openapiFields.add("meta_description");
    openapiFields.add("meta_keywords");
    openapiFields.add("meta_title");
    openapiFields.add("modified_at");
    openapiFields.add("name");
    openapiFields.add("price");
    openapiFields.add("product_options");
    openapiFields.add("quantity");
    openapiFields.add("related_products_ids");
    openapiFields.add("seo_url");
    openapiFields.add("short_description");
    openapiFields.add("sort_order");
    openapiFields.add("special_price");
    openapiFields.add("stores_ids");
    openapiFields.add("tax_class_id");
    openapiFields.add("tier_price");
    openapiFields.add("type");
    openapiFields.add("u_brand");
    openapiFields.add("u_brand_id");
    openapiFields.add("u_model");
    openapiFields.add("u_mpn");
    openapiFields.add("u_sku");
    openapiFields.add("u_upc");
    openapiFields.add("url");
    openapiFields.add("weight");
    openapiFields.add("weight_unit");
    openapiFields.add("width");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Product
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Product.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Product is not found in the empty JSON string", Product.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Product.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Product` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("advanced_price") != null && !jsonObj.get("advanced_price").isJsonNull()) {
        JsonArray jsonArrayadvancedPrice = jsonObj.getAsJsonArray("advanced_price");
        if (jsonArrayadvancedPrice != null) {
          // ensure the json data is an array
          if (!jsonObj.get("advanced_price").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `advanced_price` to be an array in the JSON string but got `%s`", jsonObj.get("advanced_price").toString()));
          }

          // validate the optional field `advanced_price` (array)
          for (int i = 0; i < jsonArrayadvancedPrice.size(); i++) {
            ProductAdvancedPrice.validateJsonElement(jsonArrayadvancedPrice.get(i));
          };
        }
      }
      if ((jsonObj.get("backorders") != null && !jsonObj.get("backorders").isJsonNull()) && !jsonObj.get("backorders").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `backorders` to be a primitive type in the JSON string but got `%s`", jsonObj.get("backorders").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("categories_ids") != null && !jsonObj.get("categories_ids").isJsonNull() && !jsonObj.get("categories_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `categories_ids` to be an array in the JSON string but got `%s`", jsonObj.get("categories_ids").toString()));
      }
      // validate the optional field `create_at`
      if (jsonObj.get("create_at") != null && !jsonObj.get("create_at").isJsonNull()) {
        A2CDateTime.validateJsonElement(jsonObj.get("create_at"));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("dimensions_unit") != null && !jsonObj.get("dimensions_unit").isJsonNull()) && !jsonObj.get("dimensions_unit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dimensions_unit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dimensions_unit").toString()));
      }
      if (jsonObj.get("discounts") != null && !jsonObj.get("discounts").isJsonNull()) {
        JsonArray jsonArraydiscounts = jsonObj.getAsJsonArray("discounts");
        if (jsonArraydiscounts != null) {
          // ensure the json data is an array
          if (!jsonObj.get("discounts").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `discounts` to be an array in the JSON string but got `%s`", jsonObj.get("discounts").toString()));
          }

          // validate the optional field `discounts` (array)
          for (int i = 0; i < jsonArraydiscounts.size(); i++) {
            Discount.validateJsonElement(jsonArraydiscounts.get(i));
          };
        }
      }
      if (jsonObj.get("group_items") != null && !jsonObj.get("group_items").isJsonNull()) {
        JsonArray jsonArraygroupItems = jsonObj.getAsJsonArray("group_items");
        if (jsonArraygroupItems != null) {
          // ensure the json data is an array
          if (!jsonObj.get("group_items").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `group_items` to be an array in the JSON string but got `%s`", jsonObj.get("group_items").toString()));
          }

          // validate the optional field `group_items` (array)
          for (int i = 0; i < jsonArraygroupItems.size(); i++) {
            ProductGroupItem.validateJsonElement(jsonArraygroupItems.get(i));
          };
        }
      }
      if (jsonObj.get("group_price") != null && !jsonObj.get("group_price").isJsonNull()) {
        JsonArray jsonArraygroupPrice = jsonObj.getAsJsonArray("group_price");
        if (jsonArraygroupPrice != null) {
          // ensure the json data is an array
          if (!jsonObj.get("group_price").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `group_price` to be an array in the JSON string but got `%s`", jsonObj.get("group_price").toString()));
          }

          // validate the optional field `group_price` (array)
          for (int i = 0; i < jsonArraygroupPrice.size(); i++) {
            ProductGroupPrice.validateJsonElement(jsonArraygroupPrice.get(i));
          };
        }
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if (jsonObj.get("images") != null && !jsonObj.get("images").isJsonNull()) {
        JsonArray jsonArrayimages = jsonObj.getAsJsonArray("images");
        if (jsonArrayimages != null) {
          // ensure the json data is an array
          if (!jsonObj.get("images").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `images` to be an array in the JSON string but got `%s`", jsonObj.get("images").toString()));
          }

          // validate the optional field `images` (array)
          for (int i = 0; i < jsonArrayimages.size(); i++) {
            Image.validateJsonElement(jsonArrayimages.get(i));
          };
        }
      }
      if (jsonObj.get("inventory") != null && !jsonObj.get("inventory").isJsonNull()) {
        JsonArray jsonArrayinventory = jsonObj.getAsJsonArray("inventory");
        if (jsonArrayinventory != null) {
          // ensure the json data is an array
          if (!jsonObj.get("inventory").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `inventory` to be an array in the JSON string but got `%s`", jsonObj.get("inventory").toString()));
          }

          // validate the optional field `inventory` (array)
          for (int i = 0; i < jsonArrayinventory.size(); i++) {
            ProductInventory.validateJsonElement(jsonArrayinventory.get(i));
          };
        }
      }
      if ((jsonObj.get("manage_stock") != null && !jsonObj.get("manage_stock").isJsonNull()) && !jsonObj.get("manage_stock").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `manage_stock` to be a primitive type in the JSON string but got `%s`", jsonObj.get("manage_stock").toString()));
      }
      if ((jsonObj.get("meta_description") != null && !jsonObj.get("meta_description").isJsonNull()) && !jsonObj.get("meta_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `meta_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("meta_description").toString()));
      }
      if ((jsonObj.get("meta_keywords") != null && !jsonObj.get("meta_keywords").isJsonNull()) && !jsonObj.get("meta_keywords").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `meta_keywords` to be a primitive type in the JSON string but got `%s`", jsonObj.get("meta_keywords").toString()));
      }
      if ((jsonObj.get("meta_title") != null && !jsonObj.get("meta_title").isJsonNull()) && !jsonObj.get("meta_title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `meta_title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("meta_title").toString()));
      }
      // validate the optional field `modified_at`
      if (jsonObj.get("modified_at") != null && !jsonObj.get("modified_at").isJsonNull()) {
        A2CDateTime.validateJsonElement(jsonObj.get("modified_at"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (jsonObj.get("product_options") != null && !jsonObj.get("product_options").isJsonNull()) {
        JsonArray jsonArrayproductOptions = jsonObj.getAsJsonArray("product_options");
        if (jsonArrayproductOptions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("product_options").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `product_options` to be an array in the JSON string but got `%s`", jsonObj.get("product_options").toString()));
          }

          // validate the optional field `product_options` (array)
          for (int i = 0; i < jsonArrayproductOptions.size(); i++) {
            ProductOption.validateJsonElement(jsonArrayproductOptions.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("related_products_ids") != null && !jsonObj.get("related_products_ids").isJsonNull() && !jsonObj.get("related_products_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `related_products_ids` to be an array in the JSON string but got `%s`", jsonObj.get("related_products_ids").toString()));
      }
      if ((jsonObj.get("seo_url") != null && !jsonObj.get("seo_url").isJsonNull()) && !jsonObj.get("seo_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `seo_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("seo_url").toString()));
      }
      if ((jsonObj.get("short_description") != null && !jsonObj.get("short_description").isJsonNull()) && !jsonObj.get("short_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `short_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("short_description").toString()));
      }
      // validate the optional field `special_price`
      if (jsonObj.get("special_price") != null && !jsonObj.get("special_price").isJsonNull()) {
        SpecialPrice.validateJsonElement(jsonObj.get("special_price"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("stores_ids") != null && !jsonObj.get("stores_ids").isJsonNull() && !jsonObj.get("stores_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `stores_ids` to be an array in the JSON string but got `%s`", jsonObj.get("stores_ids").toString()));
      }
      if ((jsonObj.get("tax_class_id") != null && !jsonObj.get("tax_class_id").isJsonNull()) && !jsonObj.get("tax_class_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tax_class_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tax_class_id").toString()));
      }
      if (jsonObj.get("tier_price") != null && !jsonObj.get("tier_price").isJsonNull()) {
        JsonArray jsonArraytierPrice = jsonObj.getAsJsonArray("tier_price");
        if (jsonArraytierPrice != null) {
          // ensure the json data is an array
          if (!jsonObj.get("tier_price").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `tier_price` to be an array in the JSON string but got `%s`", jsonObj.get("tier_price").toString()));
          }

          // validate the optional field `tier_price` (array)
          for (int i = 0; i < jsonArraytierPrice.size(); i++) {
            ProductTierPrice.validateJsonElement(jsonArraytierPrice.get(i));
          };
        }
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      if ((jsonObj.get("u_brand") != null && !jsonObj.get("u_brand").isJsonNull()) && !jsonObj.get("u_brand").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `u_brand` to be a primitive type in the JSON string but got `%s`", jsonObj.get("u_brand").toString()));
      }
      if ((jsonObj.get("u_brand_id") != null && !jsonObj.get("u_brand_id").isJsonNull()) && !jsonObj.get("u_brand_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `u_brand_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("u_brand_id").toString()));
      }
      if ((jsonObj.get("u_model") != null && !jsonObj.get("u_model").isJsonNull()) && !jsonObj.get("u_model").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `u_model` to be a primitive type in the JSON string but got `%s`", jsonObj.get("u_model").toString()));
      }
      if ((jsonObj.get("u_mpn") != null && !jsonObj.get("u_mpn").isJsonNull()) && !jsonObj.get("u_mpn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `u_mpn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("u_mpn").toString()));
      }
      if ((jsonObj.get("u_sku") != null && !jsonObj.get("u_sku").isJsonNull()) && !jsonObj.get("u_sku").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `u_sku` to be a primitive type in the JSON string but got `%s`", jsonObj.get("u_sku").toString()));
      }
      if ((jsonObj.get("u_upc") != null && !jsonObj.get("u_upc").isJsonNull()) && !jsonObj.get("u_upc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `u_upc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("u_upc").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
      if ((jsonObj.get("weight_unit") != null && !jsonObj.get("weight_unit").isJsonNull()) && !jsonObj.get("weight_unit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `weight_unit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("weight_unit").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Product.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Product' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Product> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Product.class));

       return (TypeAdapter<T>) new TypeAdapter<Product>() {
           @Override
           public void write(JsonWriter out, Product value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Product read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Product given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Product
   * @throws IOException if the JSON string is invalid with respect to Product
   */
  public static Product fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Product.class);
  }

  /**
   * Convert an instance of Product to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

