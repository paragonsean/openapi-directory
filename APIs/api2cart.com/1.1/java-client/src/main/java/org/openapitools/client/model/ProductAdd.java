/*
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ProductAddFilesInner;
import org.openapitools.client.model.ProductAddGroupPricesInner;
import org.openapitools.client.model.ProductAddSellerProfiles;
import org.openapitools.client.model.ProductAddShippingDetailsInner;
import org.openapitools.client.model.ProductAddTierPricesInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ProductAdd
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:12:09.268126-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ProductAdd {
  public static final String SERIALIZED_NAME_ATTRIBUTE_NAME = "attribute_name";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTE_NAME)
  private String attributeName;

  public static final String SERIALIZED_NAME_ATTRIBUTE_SET_NAME = "attribute_set_name";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTE_SET_NAME)
  private String attributeSetName = "Default";

  public static final String SERIALIZED_NAME_AVAIL_FROM = "avail_from";
  @SerializedName(SERIALIZED_NAME_AVAIL_FROM)
  private String availFrom;

  public static final String SERIALIZED_NAME_AVAILABLE_FOR_SALE = "available_for_sale";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_FOR_SALE)
  private Boolean availableForSale = true;

  public static final String SERIALIZED_NAME_AVAILABLE_FOR_VIEW = "available_for_view";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_FOR_VIEW)
  private Boolean availableForView = true;

  public static final String SERIALIZED_NAME_BACKORDER_STATUS = "backorder_status";
  @SerializedName(SERIALIZED_NAME_BACKORDER_STATUS)
  private String backorderStatus;

  public static final String SERIALIZED_NAME_BARCODE = "barcode";
  @SerializedName(SERIALIZED_NAME_BARCODE)
  private String barcode;

  public static final String SERIALIZED_NAME_BEST_OFFER = "best_offer";
  @SerializedName(SERIALIZED_NAME_BEST_OFFER)
  private List<String> bestOffer = new ArrayList<>();

  public static final String SERIALIZED_NAME_BRAND_NAME = "brand_name";
  @SerializedName(SERIALIZED_NAME_BRAND_NAME)
  private String brandName;

  public static final String SERIALIZED_NAME_CATEGORIES_IDS = "categories_ids";
  @SerializedName(SERIALIZED_NAME_CATEGORIES_IDS)
  private String categoriesIds;

  public static final String SERIALIZED_NAME_CATEGORY_ID = "category_id";
  @SerializedName(SERIALIZED_NAME_CATEGORY_ID)
  private String categoryId;

  public static final String SERIALIZED_NAME_CLEAR_CACHE = "clear_cache";
  @SerializedName(SERIALIZED_NAME_CLEAR_CACHE)
  private Boolean clearCache = true;

  public static final String SERIALIZED_NAME_CONDITION = "condition";
  @SerializedName(SERIALIZED_NAME_CONDITION)
  private String condition;

  public static final String SERIALIZED_NAME_COST_PRICE = "cost_price";
  @SerializedName(SERIALIZED_NAME_COST_PRICE)
  private BigDecimal costPrice;

  public static final String SERIALIZED_NAME_COUNTRY_OF_ORIGIN = "country_of_origin";
  @SerializedName(SERIALIZED_NAME_COUNTRY_OF_ORIGIN)
  private String countryOfOrigin;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DOWNLOADABLE = "downloadable";
  @SerializedName(SERIALIZED_NAME_DOWNLOADABLE)
  private Boolean downloadable = false;

  public static final String SERIALIZED_NAME_EAN = "ean";
  @SerializedName(SERIALIZED_NAME_EAN)
  private String ean;

  public static final String SERIALIZED_NAME_FILES = "files";
  @SerializedName(SERIALIZED_NAME_FILES)
  private List<ProductAddFilesInner> files = new ArrayList<>();

  public static final String SERIALIZED_NAME_GROUP_PRICES = "group_prices";
  @SerializedName(SERIALIZED_NAME_GROUP_PRICES)
  private List<ProductAddGroupPricesInner> groupPrices = new ArrayList<>();

  public static final String SERIALIZED_NAME_GTIN = "gtin";
  @SerializedName(SERIALIZED_NAME_GTIN)
  private String gtin;

  public static final String SERIALIZED_NAME_HARMONIZED_SYSTEM_CODE = "harmonized_system_code";
  @SerializedName(SERIALIZED_NAME_HARMONIZED_SYSTEM_CODE)
  private String harmonizedSystemCode;

  public static final String SERIALIZED_NAME_HEIGHT = "height";
  @SerializedName(SERIALIZED_NAME_HEIGHT)
  private BigDecimal height;

  public static final String SERIALIZED_NAME_IMAGE_NAME = "image_name";
  @SerializedName(SERIALIZED_NAME_IMAGE_NAME)
  private String imageName;

  public static final String SERIALIZED_NAME_IMAGE_URL = "image_url";
  @SerializedName(SERIALIZED_NAME_IMAGE_URL)
  private String imageUrl;

  public static final String SERIALIZED_NAME_ISBN = "isbn";
  @SerializedName(SERIALIZED_NAME_ISBN)
  private String isbn;

  public static final String SERIALIZED_NAME_LANG_ID = "lang_id";
  @SerializedName(SERIALIZED_NAME_LANG_ID)
  private String langId;

  public static final String SERIALIZED_NAME_LENGTH = "length";
  @SerializedName(SERIALIZED_NAME_LENGTH)
  private BigDecimal length;

  public static final String SERIALIZED_NAME_LISTING_DURATION = "listing_duration";
  @SerializedName(SERIALIZED_NAME_LISTING_DURATION)
  private String listingDuration;

  public static final String SERIALIZED_NAME_LISTING_TYPE = "listing_type";
  @SerializedName(SERIALIZED_NAME_LISTING_TYPE)
  private String listingType = "FixedPrice";

  public static final String SERIALIZED_NAME_MANAGE_STOCK = "manage_stock";
  @SerializedName(SERIALIZED_NAME_MANAGE_STOCK)
  private Boolean manageStock;

  public static final String SERIALIZED_NAME_MANUFACTURER = "manufacturer";
  @SerializedName(SERIALIZED_NAME_MANUFACTURER)
  private String manufacturer;

  public static final String SERIALIZED_NAME_MARKETPLACE_ITEM_PROPERTIES = "marketplace_item_properties";
  @SerializedName(SERIALIZED_NAME_MARKETPLACE_ITEM_PROPERTIES)
  private String marketplaceItemProperties = "false";

  public static final String SERIALIZED_NAME_META_DESCRIPTION = "meta_description";
  @SerializedName(SERIALIZED_NAME_META_DESCRIPTION)
  private String metaDescription;

  public static final String SERIALIZED_NAME_META_KEYWORDS = "meta_keywords";
  @SerializedName(SERIALIZED_NAME_META_KEYWORDS)
  private String metaKeywords;

  public static final String SERIALIZED_NAME_META_TITLE = "meta_title";
  @SerializedName(SERIALIZED_NAME_META_TITLE)
  private String metaTitle;

  public static final String SERIALIZED_NAME_MODEL = "model";
  @SerializedName(SERIALIZED_NAME_MODEL)
  private String model;

  public static final String SERIALIZED_NAME_MPN = "mpn";
  @SerializedName(SERIALIZED_NAME_MPN)
  private String mpn;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_OLD_PRICE = "old_price";
  @SerializedName(SERIALIZED_NAME_OLD_PRICE)
  private BigDecimal oldPrice;

  public static final String SERIALIZED_NAME_ORDERED_COUNT = "ordered_count";
  @SerializedName(SERIALIZED_NAME_ORDERED_COUNT)
  private Integer orderedCount = 0;

  public static final String SERIALIZED_NAME_PACKAGE_DETAILS = "package_details";
  @SerializedName(SERIALIZED_NAME_PACKAGE_DETAILS)
  private List<String> packageDetails = new ArrayList<>();

  public static final String SERIALIZED_NAME_PAYMENT_METHODS = "payment_methods";
  @SerializedName(SERIALIZED_NAME_PAYMENT_METHODS)
  private List<String> paymentMethods = new ArrayList<>();

  public static final String SERIALIZED_NAME_PAYPAL_EMAIL = "paypal_email";
  @SerializedName(SERIALIZED_NAME_PAYPAL_EMAIL)
  private String paypalEmail;

  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private BigDecimal price;

  public static final String SERIALIZED_NAME_PRODUCT_CLASS = "product_class";
  @SerializedName(SERIALIZED_NAME_PRODUCT_CLASS)
  private String productClass;

  public static final String SERIALIZED_NAME_QUANTITY = "quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  private BigDecimal quantity = new BigDecimal("0");

  public static final String SERIALIZED_NAME_RETURN_ACCEPTED = "return_accepted";
  @SerializedName(SERIALIZED_NAME_RETURN_ACCEPTED)
  private Boolean returnAccepted;

  public static final String SERIALIZED_NAME_SALES_TAX = "sales_tax";
  @SerializedName(SERIALIZED_NAME_SALES_TAX)
  private List<String> salesTax = new ArrayList<>();

  public static final String SERIALIZED_NAME_SEARCH_KEYWORDS = "search_keywords";
  @SerializedName(SERIALIZED_NAME_SEARCH_KEYWORDS)
  private String searchKeywords;

  public static final String SERIALIZED_NAME_SELLER_PROFILES = "seller_profiles";
  @SerializedName(SERIALIZED_NAME_SELLER_PROFILES)
  private ProductAddSellerProfiles sellerProfiles;

  public static final String SERIALIZED_NAME_SEO_URL = "seo_url";
  @SerializedName(SERIALIZED_NAME_SEO_URL)
  private String seoUrl;

  public static final String SERIALIZED_NAME_SHIPPING_DETAILS = "shipping_details";
  @SerializedName(SERIALIZED_NAME_SHIPPING_DETAILS)
  private List<ProductAddShippingDetailsInner> shippingDetails = new ArrayList<>();

  public static final String SERIALIZED_NAME_SHIPPING_TEMPLATE_ID = "shipping_template_id";
  @SerializedName(SERIALIZED_NAME_SHIPPING_TEMPLATE_ID)
  private Integer shippingTemplateId = 0;

  public static final String SERIALIZED_NAME_SHORT_DESCRIPTION = "short_description";
  @SerializedName(SERIALIZED_NAME_SHORT_DESCRIPTION)
  private String shortDescription;

  public static final String SERIALIZED_NAME_SKU = "sku";
  @SerializedName(SERIALIZED_NAME_SKU)
  private String sku;

  public static final String SERIALIZED_NAME_SPECIAL_PRICE = "special_price";
  @SerializedName(SERIALIZED_NAME_SPECIAL_PRICE)
  private BigDecimal specialPrice;

  public static final String SERIALIZED_NAME_SPECIFICS = "specifics";
  @SerializedName(SERIALIZED_NAME_SPECIFICS)
  private List<String> specifics = new ArrayList<>();

  public static final String SERIALIZED_NAME_SPRICE_CREATE = "sprice_create";
  @SerializedName(SERIALIZED_NAME_SPRICE_CREATE)
  private String spriceCreate;

  public static final String SERIALIZED_NAME_SPRICE_EXPIRE = "sprice_expire";
  @SerializedName(SERIALIZED_NAME_SPRICE_EXPIRE)
  private String spriceExpire;

  public static final String SERIALIZED_NAME_SPRICE_MODIFIED = "sprice_modified";
  @SerializedName(SERIALIZED_NAME_SPRICE_MODIFIED)
  private String spriceModified;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_STORE_ID = "store_id";
  @SerializedName(SERIALIZED_NAME_STORE_ID)
  private String storeId;

  public static final String SERIALIZED_NAME_STORES_IDS = "stores_ids";
  @SerializedName(SERIALIZED_NAME_STORES_IDS)
  private String storesIds = "0";

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private String tags;

  public static final String SERIALIZED_NAME_TAX_CLASS_ID = "tax_class_id";
  @SerializedName(SERIALIZED_NAME_TAX_CLASS_ID)
  private String taxClassId;

  public static final String SERIALIZED_NAME_TAXABLE = "taxable";
  @SerializedName(SERIALIZED_NAME_TAXABLE)
  private Boolean taxable = true;

  public static final String SERIALIZED_NAME_TIER_PRICES = "tier_prices";
  @SerializedName(SERIALIZED_NAME_TIER_PRICES)
  private List<ProductAddTierPricesInner> tierPrices = new ArrayList<>();

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type = "simple";

  public static final String SERIALIZED_NAME_UPC = "upc";
  @SerializedName(SERIALIZED_NAME_UPC)
  private String upc;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_VIEWED_COUNT = "viewed_count";
  @SerializedName(SERIALIZED_NAME_VIEWED_COUNT)
  private Integer viewedCount = 0;

  public static final String SERIALIZED_NAME_VISIBLE = "visible";
  @SerializedName(SERIALIZED_NAME_VISIBLE)
  private String visible;

  public static final String SERIALIZED_NAME_WAREHOUSE_ID = "warehouse_id";
  @SerializedName(SERIALIZED_NAME_WAREHOUSE_ID)
  private String warehouseId;

  public static final String SERIALIZED_NAME_WEIGHT = "weight";
  @SerializedName(SERIALIZED_NAME_WEIGHT)
  private BigDecimal weight = new BigDecimal("0");

  public static final String SERIALIZED_NAME_WEIGHT_UNIT = "weight_unit";
  @SerializedName(SERIALIZED_NAME_WEIGHT_UNIT)
  private String weightUnit;

  public static final String SERIALIZED_NAME_WHOLESALE_PRICE = "wholesale_price";
  @SerializedName(SERIALIZED_NAME_WHOLESALE_PRICE)
  private BigDecimal wholesalePrice;

  public static final String SERIALIZED_NAME_WIDTH = "width";
  @SerializedName(SERIALIZED_NAME_WIDTH)
  private BigDecimal width;

  public ProductAdd() {
  }

  public ProductAdd attributeName(String attributeName) {
    this.attributeName = attributeName;
    return this;
  }

  /**
   * Defines product’s attribute name separated with a comma in Magento
   * @return attributeName
   */
  @javax.annotation.Nullable
  public String getAttributeName() {
    return attributeName;
  }

  public void setAttributeName(String attributeName) {
    this.attributeName = attributeName;
  }


  public ProductAdd attributeSetName(String attributeSetName) {
    this.attributeSetName = attributeSetName;
    return this;
  }

  /**
   * Defines product’s attribute set name in Magento
   * @return attributeSetName
   */
  @javax.annotation.Nullable
  public String getAttributeSetName() {
    return attributeSetName;
  }

  public void setAttributeSetName(String attributeSetName) {
    this.attributeSetName = attributeSetName;
  }


  public ProductAdd availFrom(String availFrom) {
    this.availFrom = availFrom;
    return this;
  }

  /**
   * Allows to schedule a time in the future that the item becomes available. The value should be greater than the current date and time.
   * @return availFrom
   */
  @javax.annotation.Nullable
  public String getAvailFrom() {
    return availFrom;
  }

  public void setAvailFrom(String availFrom) {
    this.availFrom = availFrom;
  }


  public ProductAdd availableForSale(Boolean availableForSale) {
    this.availableForSale = availableForSale;
    return this;
  }

  /**
   * Specifies the set of visible/invisible products for sale
   * @return availableForSale
   */
  @javax.annotation.Nullable
  public Boolean getAvailableForSale() {
    return availableForSale;
  }

  public void setAvailableForSale(Boolean availableForSale) {
    this.availableForSale = availableForSale;
  }


  public ProductAdd availableForView(Boolean availableForView) {
    this.availableForView = availableForView;
    return this;
  }

  /**
   * Specifies the set of visible/invisible products for users
   * @return availableForView
   */
  @javax.annotation.Nullable
  public Boolean getAvailableForView() {
    return availableForView;
  }

  public void setAvailableForView(Boolean availableForView) {
    this.availableForView = availableForView;
  }


  public ProductAdd backorderStatus(String backorderStatus) {
    this.backorderStatus = backorderStatus;
    return this;
  }

  /**
   * Set backorder status
   * @return backorderStatus
   */
  @javax.annotation.Nullable
  public String getBackorderStatus() {
    return backorderStatus;
  }

  public void setBackorderStatus(String backorderStatus) {
    this.backorderStatus = backorderStatus;
  }


  public ProductAdd barcode(String barcode) {
    this.barcode = barcode;
    return this;
  }

  /**
   * A barcode is a unique code composed of numbers used as a product identifier.
   * @return barcode
   */
  @javax.annotation.Nullable
  public String getBarcode() {
    return barcode;
  }

  public void setBarcode(String barcode) {
    this.barcode = barcode;
  }


  public ProductAdd bestOffer(List<String> bestOffer) {
    this.bestOffer = bestOffer;
    return this;
  }

  public ProductAdd addBestOfferItem(String bestOfferItem) {
    if (this.bestOffer == null) {
      this.bestOffer = new ArrayList<>();
    }
    this.bestOffer.add(bestOfferItem);
    return this;
  }

  /**
   * The price at which Best Offers are automatically accepted.&lt;hr&gt;&lt;div style&#x3D;\&quot;font-style:normal\&quot;&gt;Param structure:&lt;div style&#x3D;\&quot;margin-left: 2%;\&quot;&gt;&lt;code style&#x3D;\&quot;padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;\&quot;&gt;best_offer[&lt;b&gt;minimum_offer_price&lt;/b&gt;] &#x3D; decimal&lt;/br&gt;best_offer[&lt;b&gt;auto_accept_price&lt;/b&gt;] &#x3D; decimal&lt;/br&gt;&lt;/code&gt;&lt;/div&gt;&lt;/div&gt;
   * @return bestOffer
   */
  @javax.annotation.Nullable
  public List<String> getBestOffer() {
    return bestOffer;
  }

  public void setBestOffer(List<String> bestOffer) {
    this.bestOffer = bestOffer;
  }


  public ProductAdd brandName(String brandName) {
    this.brandName = brandName;
    return this;
  }

  /**
   * Retrieves brands specified by brand name
   * @return brandName
   */
  @javax.annotation.Nullable
  public String getBrandName() {
    return brandName;
  }

  public void setBrandName(String brandName) {
    this.brandName = brandName;
  }


  public ProductAdd categoriesIds(String categoriesIds) {
    this.categoriesIds = categoriesIds;
    return this;
  }

  /**
   * Defines product add that is specified by comma-separated categories id
   * @return categoriesIds
   */
  @javax.annotation.Nullable
  public String getCategoriesIds() {
    return categoriesIds;
  }

  public void setCategoriesIds(String categoriesIds) {
    this.categoriesIds = categoriesIds;
  }


  public ProductAdd categoryId(String categoryId) {
    this.categoryId = categoryId;
    return this;
  }

  /**
   * Defines product add that is specified by category id
   * @return categoryId
   */
  @javax.annotation.Nullable
  public String getCategoryId() {
    return categoryId;
  }

  public void setCategoryId(String categoryId) {
    this.categoryId = categoryId;
  }


  public ProductAdd clearCache(Boolean clearCache) {
    this.clearCache = clearCache;
    return this;
  }

  /**
   * Is cache clear required
   * @return clearCache
   */
  @javax.annotation.Nullable
  public Boolean getClearCache() {
    return clearCache;
  }

  public void setClearCache(Boolean clearCache) {
    this.clearCache = clearCache;
  }


  public ProductAdd condition(String condition) {
    this.condition = condition;
    return this;
  }

  /**
   * The human-readable label for the condition (e.g., \&quot;New\&quot;).
   * @return condition
   */
  @javax.annotation.Nullable
  public String getCondition() {
    return condition;
  }

  public void setCondition(String condition) {
    this.condition = condition;
  }


  public ProductAdd costPrice(BigDecimal costPrice) {
    this.costPrice = costPrice;
    return this;
  }

  /**
   * Defines new product&#39;s cost price
   * @return costPrice
   */
  @javax.annotation.Nullable
  public BigDecimal getCostPrice() {
    return costPrice;
  }

  public void setCostPrice(BigDecimal costPrice) {
    this.costPrice = costPrice;
  }


  public ProductAdd countryOfOrigin(String countryOfOrigin) {
    this.countryOfOrigin = countryOfOrigin;
    return this;
  }

  /**
   * The country where the inventory item was made
   * @return countryOfOrigin
   */
  @javax.annotation.Nullable
  public String getCountryOfOrigin() {
    return countryOfOrigin;
  }

  public void setCountryOfOrigin(String countryOfOrigin) {
    this.countryOfOrigin = countryOfOrigin;
  }


  public ProductAdd createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Defines the date of entity creation
   * @return createdAt
   */
  @javax.annotation.Nullable
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }


  public ProductAdd description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Defines product&#39;s description that has to be added
   * @return description
   */
  @javax.annotation.Nonnull
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public ProductAdd downloadable(Boolean downloadable) {
    this.downloadable = downloadable;
    return this;
  }

  /**
   * Defines whether the product is downloadable
   * @return downloadable
   */
  @javax.annotation.Nullable
  public Boolean getDownloadable() {
    return downloadable;
  }

  public void setDownloadable(Boolean downloadable) {
    this.downloadable = downloadable;
  }


  public ProductAdd ean(String ean) {
    this.ean = ean;
    return this;
  }

  /**
   * European Article Number. An EAN is a unique 8 or 13-digit identifier that many industries (such as book publishers) use to identify products.
   * @return ean
   */
  @javax.annotation.Nullable
  public String getEan() {
    return ean;
  }

  public void setEan(String ean) {
    this.ean = ean;
  }


  public ProductAdd files(List<ProductAddFilesInner> files) {
    this.files = files;
    return this;
  }

  public ProductAdd addFilesItem(ProductAddFilesInner filesItem) {
    if (this.files == null) {
      this.files = new ArrayList<>();
    }
    this.files.add(filesItem);
    return this;
  }

  /**
   * File Url
   * @return files
   */
  @javax.annotation.Nullable
  public List<ProductAddFilesInner> getFiles() {
    return files;
  }

  public void setFiles(List<ProductAddFilesInner> files) {
    this.files = files;
  }


  public ProductAdd groupPrices(List<ProductAddGroupPricesInner> groupPrices) {
    this.groupPrices = groupPrices;
    return this;
  }

  public ProductAdd addGroupPricesItem(ProductAddGroupPricesInner groupPricesItem) {
    if (this.groupPrices == null) {
      this.groupPrices = new ArrayList<>();
    }
    this.groupPrices.add(groupPricesItem);
    return this;
  }

  /**
   * Defines product&#39;s group prices
   * @return groupPrices
   */
  @javax.annotation.Nullable
  public List<ProductAddGroupPricesInner> getGroupPrices() {
    return groupPrices;
  }

  public void setGroupPrices(List<ProductAddGroupPricesInner> groupPrices) {
    this.groupPrices = groupPrices;
  }


  public ProductAdd gtin(String gtin) {
    this.gtin = gtin;
    return this;
  }

  /**
   * Global Trade Item Number. An GTIN is an identifier for trade items.
   * @return gtin
   */
  @javax.annotation.Nullable
  public String getGtin() {
    return gtin;
  }

  public void setGtin(String gtin) {
    this.gtin = gtin;
  }


  public ProductAdd harmonizedSystemCode(String harmonizedSystemCode) {
    this.harmonizedSystemCode = harmonizedSystemCode;
    return this;
  }

  /**
   * Harmonized System Code. An HSC is a 6-digit identifier that allows participating countries to classify traded goods on a common basis for customs purposes
   * @return harmonizedSystemCode
   */
  @javax.annotation.Nullable
  public String getHarmonizedSystemCode() {
    return harmonizedSystemCode;
  }

  public void setHarmonizedSystemCode(String harmonizedSystemCode) {
    this.harmonizedSystemCode = harmonizedSystemCode;
  }


  public ProductAdd height(BigDecimal height) {
    this.height = height;
    return this;
  }

  /**
   * Defines product&#39;s height
   * @return height
   */
  @javax.annotation.Nullable
  public BigDecimal getHeight() {
    return height;
  }

  public void setHeight(BigDecimal height) {
    this.height = height;
  }


  public ProductAdd imageName(String imageName) {
    this.imageName = imageName;
    return this;
  }

  /**
   * Defines image&#39;s name
   * @return imageName
   */
  @javax.annotation.Nullable
  public String getImageName() {
    return imageName;
  }

  public void setImageName(String imageName) {
    this.imageName = imageName;
  }


  public ProductAdd imageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
    return this;
  }

  /**
   * Image Url
   * @return imageUrl
   */
  @javax.annotation.Nullable
  public String getImageUrl() {
    return imageUrl;
  }

  public void setImageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
  }


  public ProductAdd isbn(String isbn) {
    this.isbn = isbn;
    return this;
  }

  /**
   * International Standard Book Number. An ISBN is a unique identifier for books.
   * @return isbn
   */
  @javax.annotation.Nullable
  public String getIsbn() {
    return isbn;
  }

  public void setIsbn(String isbn) {
    this.isbn = isbn;
  }


  public ProductAdd langId(String langId) {
    this.langId = langId;
    return this;
  }

  /**
   * Language id
   * @return langId
   */
  @javax.annotation.Nullable
  public String getLangId() {
    return langId;
  }

  public void setLangId(String langId) {
    this.langId = langId;
  }


  public ProductAdd length(BigDecimal length) {
    this.length = length;
    return this;
  }

  /**
   * Defines product&#39;s length
   * @return length
   */
  @javax.annotation.Nullable
  public BigDecimal getLength() {
    return length;
  }

  public void setLength(BigDecimal length) {
    this.length = length;
  }


  public ProductAdd listingDuration(String listingDuration) {
    this.listingDuration = listingDuration;
    return this;
  }

  /**
   * Describes the number of days the seller wants the listing to be active. Look at cart.info method response for allowed values.
   * @return listingDuration
   */
  @javax.annotation.Nullable
  public String getListingDuration() {
    return listingDuration;
  }

  public void setListingDuration(String listingDuration) {
    this.listingDuration = listingDuration;
  }


  public ProductAdd listingType(String listingType) {
    this.listingType = listingType;
    return this;
  }

  /**
   * Indicates the selling format of the marketplace listing.
   * @return listingType
   */
  @javax.annotation.Nullable
  public String getListingType() {
    return listingType;
  }

  public void setListingType(String listingType) {
    this.listingType = listingType;
  }


  public ProductAdd manageStock(Boolean manageStock) {
    this.manageStock = manageStock;
    return this;
  }

  /**
   * Defines inventory tracking for product
   * @return manageStock
   */
  @javax.annotation.Nullable
  public Boolean getManageStock() {
    return manageStock;
  }

  public void setManageStock(Boolean manageStock) {
    this.manageStock = manageStock;
  }


  public ProductAdd manufacturer(String manufacturer) {
    this.manufacturer = manufacturer;
    return this;
  }

  /**
   * Defines product&#39;s manufacturer
   * @return manufacturer
   */
  @javax.annotation.Nullable
  public String getManufacturer() {
    return manufacturer;
  }

  public void setManufacturer(String manufacturer) {
    this.manufacturer = manufacturer;
  }


  public ProductAdd marketplaceItemProperties(String marketplaceItemProperties) {
    this.marketplaceItemProperties = marketplaceItemProperties;
    return this;
  }

  /**
   * String containing the JSON representation of the supplied data
   * @return marketplaceItemProperties
   */
  @javax.annotation.Nullable
  public String getMarketplaceItemProperties() {
    return marketplaceItemProperties;
  }

  public void setMarketplaceItemProperties(String marketplaceItemProperties) {
    this.marketplaceItemProperties = marketplaceItemProperties;
  }


  public ProductAdd metaDescription(String metaDescription) {
    this.metaDescription = metaDescription;
    return this;
  }

  /**
   * Defines unique meta description of a entity
   * @return metaDescription
   */
  @javax.annotation.Nullable
  public String getMetaDescription() {
    return metaDescription;
  }

  public void setMetaDescription(String metaDescription) {
    this.metaDescription = metaDescription;
  }


  public ProductAdd metaKeywords(String metaKeywords) {
    this.metaKeywords = metaKeywords;
    return this;
  }

  /**
   * Defines unique meta keywords for each entity
   * @return metaKeywords
   */
  @javax.annotation.Nullable
  public String getMetaKeywords() {
    return metaKeywords;
  }

  public void setMetaKeywords(String metaKeywords) {
    this.metaKeywords = metaKeywords;
  }


  public ProductAdd metaTitle(String metaTitle) {
    this.metaTitle = metaTitle;
    return this;
  }

  /**
   * Defines unique meta title for each entity
   * @return metaTitle
   */
  @javax.annotation.Nullable
  public String getMetaTitle() {
    return metaTitle;
  }

  public void setMetaTitle(String metaTitle) {
    this.metaTitle = metaTitle;
  }


  public ProductAdd model(String model) {
    this.model = model;
    return this;
  }

  /**
   * Defines product&#39;s model that has to be added
   * @return model
   */
  @javax.annotation.Nonnull
  public String getModel() {
    return model;
  }

  public void setModel(String model) {
    this.model = model;
  }


  public ProductAdd mpn(String mpn) {
    this.mpn = mpn;
    return this;
  }

  /**
   * Manufacturer Part Number. A MPN is an identifier of a particular part design or material used.
   * @return mpn
   */
  @javax.annotation.Nullable
  public String getMpn() {
    return mpn;
  }

  public void setMpn(String mpn) {
    this.mpn = mpn;
  }


  public ProductAdd name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Defines product&#39;s name that has to be added
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public ProductAdd oldPrice(BigDecimal oldPrice) {
    this.oldPrice = oldPrice;
    return this;
  }

  /**
   * Defines product&#39;s old price
   * @return oldPrice
   */
  @javax.annotation.Nullable
  public BigDecimal getOldPrice() {
    return oldPrice;
  }

  public void setOldPrice(BigDecimal oldPrice) {
    this.oldPrice = oldPrice;
  }


  public ProductAdd orderedCount(Integer orderedCount) {
    this.orderedCount = orderedCount;
    return this;
  }

  /**
   * Defines how many times the product was ordered
   * @return orderedCount
   */
  @javax.annotation.Nullable
  public Integer getOrderedCount() {
    return orderedCount;
  }

  public void setOrderedCount(Integer orderedCount) {
    this.orderedCount = orderedCount;
  }


  public ProductAdd packageDetails(List<String> packageDetails) {
    this.packageDetails = packageDetails;
    return this;
  }

  public ProductAdd addPackageDetailsItem(String packageDetailsItem) {
    if (this.packageDetails == null) {
      this.packageDetails = new ArrayList<>();
    }
    this.packageDetails.add(packageDetailsItem);
    return this;
  }

  /**
   * If the seller is subscribed to \&quot;Business Policies\&quot;, use the seller_profiles instead of the shipping_details, payment_methods and return_accepted params.&lt;hr&gt;&lt;div style&#x3D;\&quot;font-style:normal\&quot;&gt;Param structure:&lt;div style&#x3D;\&quot;margin-left: 2%;\&quot;&gt;&lt;code style&#x3D;\&quot;padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;\&quot;&gt;package_details[&lt;b&gt;measure_unit&lt;/b&gt;] &#x3D; string&lt;/br&gt; Allowed measure_unit values: [English or Metric] &lt;/br&gt; Default: Metric&lt;/br&gt;package_details[&lt;b&gt;weigh_unit&lt;/b&gt;] &#x3D; string&lt;/br&gt; Allowed weigh_unit values: [kg, g, lbs, oz]&lt;/br&gt;package_details[&lt;b&gt;package_depth&lt;/b&gt;] &#x3D; decimal&lt;/br&gt;package_details[&lt;b&gt;package_length&lt;/b&gt;] &#x3D; decimal&lt;/br&gt;package_details[&lt;b&gt;package_width&lt;/b&gt;] &#x3D; decimal&lt;/br&gt;package_details[&lt;b&gt;weight_major&lt;/b&gt;] &#x3D; decimal&lt;/br&gt;package_details[&lt;b&gt;weight_minor&lt;/b&gt;] &#x3D; decimal&lt;/br&gt;package_details[&lt;b&gt;shipping_package&lt;/b&gt;] &#x3D; string&lt;/br&gt; See cart.info method, param &#x60;eBay_shipping_package_details&#x60;&lt;/code&gt;&lt;/div&gt;&lt;/div&gt;
   * @return packageDetails
   */
  @javax.annotation.Nullable
  public List<String> getPackageDetails() {
    return packageDetails;
  }

  public void setPackageDetails(List<String> packageDetails) {
    this.packageDetails = packageDetails;
  }


  public ProductAdd paymentMethods(List<String> paymentMethods) {
    this.paymentMethods = paymentMethods;
    return this;
  }

  public ProductAdd addPaymentMethodsItem(String paymentMethodsItem) {
    if (this.paymentMethods == null) {
      this.paymentMethods = new ArrayList<>();
    }
    this.paymentMethods.add(paymentMethodsItem);
    return this;
  }

  /**
   * Identifies the payment method (such as PayPal) that the seller will accept when the buyer pays for the item. Look at cart.info method response for allowed values.&lt;hr&gt;&lt;div style&#x3D;\&quot;font-style:normal\&quot;&gt;Param structure:&lt;div style&#x3D;\&quot;margin-left: 2%;\&quot;&gt;&lt;code style&#x3D;\&quot;padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;\&quot;&gt;payment_methods[0] &#x3D; string&lt;/br&gt;payment_methods[1] &#x3D; string&lt;/br&gt;&lt;/code&gt;&lt;/div&gt;&lt;/div&gt;
   * @return paymentMethods
   */
  @javax.annotation.Nullable
  public List<String> getPaymentMethods() {
    return paymentMethods;
  }

  public void setPaymentMethods(List<String> paymentMethods) {
    this.paymentMethods = paymentMethods;
  }


  public ProductAdd paypalEmail(String paypalEmail) {
    this.paypalEmail = paypalEmail;
    return this;
  }

  /**
   * Valid PayPal email address for the PayPal account that the seller will use if they offer PayPal as a payment method for the listing.
   * @return paypalEmail
   */
  @javax.annotation.Nullable
  public String getPaypalEmail() {
    return paypalEmail;
  }

  public void setPaypalEmail(String paypalEmail) {
    this.paypalEmail = paypalEmail;
  }


  public ProductAdd price(BigDecimal price) {
    this.price = price;
    return this;
  }

  /**
   * Defines product&#39;s price that has to be added
   * @return price
   */
  @javax.annotation.Nonnull
  public BigDecimal getPrice() {
    return price;
  }

  public void setPrice(BigDecimal price) {
    this.price = price;
  }


  public ProductAdd productClass(String productClass) {
    this.productClass = productClass;
    return this;
  }

  /**
   * A categorization for the product
   * @return productClass
   */
  @javax.annotation.Nullable
  public String getProductClass() {
    return productClass;
  }

  public void setProductClass(String productClass) {
    this.productClass = productClass;
  }


  public ProductAdd quantity(BigDecimal quantity) {
    this.quantity = quantity;
    return this;
  }

  /**
   * Defines product&#39;s quantity that has to be added
   * @return quantity
   */
  @javax.annotation.Nullable
  public BigDecimal getQuantity() {
    return quantity;
  }

  public void setQuantity(BigDecimal quantity) {
    this.quantity = quantity;
  }


  public ProductAdd returnAccepted(Boolean returnAccepted) {
    this.returnAccepted = returnAccepted;
    return this;
  }

  /**
   * Indicates whether the seller allows the buyer to return the item.
   * @return returnAccepted
   */
  @javax.annotation.Nullable
  public Boolean getReturnAccepted() {
    return returnAccepted;
  }

  public void setReturnAccepted(Boolean returnAccepted) {
    this.returnAccepted = returnAccepted;
  }


  public ProductAdd salesTax(List<String> salesTax) {
    this.salesTax = salesTax;
    return this;
  }

  public ProductAdd addSalesTaxItem(String salesTaxItem) {
    if (this.salesTax == null) {
      this.salesTax = new ArrayList<>();
    }
    this.salesTax.add(salesTaxItem);
    return this;
  }

  /**
   * Percent of an item&#39;s price to be charged as the sales tax for the order. Look at cart.info method response for allowed values.&lt;hr&gt;&lt;div style&#x3D;\&quot;font-style:normal\&quot;&gt;Param structure:&lt;div style&#x3D;\&quot;margin-left: 2%;\&quot;&gt;&lt;code style&#x3D;\&quot;padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;\&quot;&gt;sales_tax[&lt;b&gt;tax_percent&lt;/b&gt;] &#x3D; decimal (##.###)&lt;/br&gt;sales_tax[&lt;b&gt;tax_state&lt;/b&gt;] &#x3D; string&lt;/br&gt;sales_tax[&lt;b&gt;shipping_inc_in_tax&lt;/b&gt;] &#x3D; bool&lt;/br&gt;&lt;/code&gt;&lt;/div&gt;&lt;/div&gt;
   * @return salesTax
   */
  @javax.annotation.Nullable
  public List<String> getSalesTax() {
    return salesTax;
  }

  public void setSalesTax(List<String> salesTax) {
    this.salesTax = salesTax;
  }


  public ProductAdd searchKeywords(String searchKeywords) {
    this.searchKeywords = searchKeywords;
    return this;
  }

  /**
   * Defines unique search keywords
   * @return searchKeywords
   */
  @javax.annotation.Nullable
  public String getSearchKeywords() {
    return searchKeywords;
  }

  public void setSearchKeywords(String searchKeywords) {
    this.searchKeywords = searchKeywords;
  }


  public ProductAdd sellerProfiles(ProductAddSellerProfiles sellerProfiles) {
    this.sellerProfiles = sellerProfiles;
    return this;
  }

  /**
   * Get sellerProfiles
   * @return sellerProfiles
   */
  @javax.annotation.Nullable
  public ProductAddSellerProfiles getSellerProfiles() {
    return sellerProfiles;
  }

  public void setSellerProfiles(ProductAddSellerProfiles sellerProfiles) {
    this.sellerProfiles = sellerProfiles;
  }


  public ProductAdd seoUrl(String seoUrl) {
    this.seoUrl = seoUrl;
    return this;
  }

  /**
   * Defines unique URL for SEO
   * @return seoUrl
   */
  @javax.annotation.Nullable
  public String getSeoUrl() {
    return seoUrl;
  }

  public void setSeoUrl(String seoUrl) {
    this.seoUrl = seoUrl;
  }


  public ProductAdd shippingDetails(List<ProductAddShippingDetailsInner> shippingDetails) {
    this.shippingDetails = shippingDetails;
    return this;
  }

  public ProductAdd addShippingDetailsItem(ProductAddShippingDetailsInner shippingDetailsItem) {
    if (this.shippingDetails == null) {
      this.shippingDetails = new ArrayList<>();
    }
    this.shippingDetails.add(shippingDetailsItem);
    return this;
  }

  /**
   * The shipping details, including flat and calculated shipping costs and shipping insurance costs. Look at cart.info method response for allowed values.&lt;hr&gt;&lt;div style&#x3D;\&quot;font-style:normal\&quot;&gt;Param structure:&lt;div style&#x3D;\&quot;margin-left: 2%;\&quot;&gt;&lt;code style&#x3D;\&quot;padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;\&quot;&gt;shipping_details[0][&lt;b&gt;shipping_type&lt;/b&gt;] &#x3D; string &lt;/br&gt;shipping_details[0][&lt;b&gt;shipping_service&lt;/b&gt;] &#x3D; string&lt;/br&gt;shipping_details[0][&lt;b&gt;shipping_cost&lt;/b&gt;] &#x3D; decimal&lt;/br&gt;shipping_details[1][&lt;b&gt;shipping_type&lt;/b&gt;] &#x3D; string &lt;/br&gt;shipping_details[1][&lt;b&gt;shipping_service&lt;/b&gt;] &#x3D; string&lt;/br&gt;shipping_details[1][&lt;b&gt;shipping_cost&lt;/b&gt;] &#x3D; decimal&lt;/br&gt;&lt;/code&gt;&lt;/div&gt;&lt;/div&gt;
   * @return shippingDetails
   */
  @javax.annotation.Nullable
  public List<ProductAddShippingDetailsInner> getShippingDetails() {
    return shippingDetails;
  }

  public void setShippingDetails(List<ProductAddShippingDetailsInner> shippingDetails) {
    this.shippingDetails = shippingDetails;
  }


  public ProductAdd shippingTemplateId(Integer shippingTemplateId) {
    this.shippingTemplateId = shippingTemplateId;
    return this;
  }

  /**
   * The numeric ID of the shipping template associated with the products in Etsy.
   * @return shippingTemplateId
   */
  @javax.annotation.Nullable
  public Integer getShippingTemplateId() {
    return shippingTemplateId;
  }

  public void setShippingTemplateId(Integer shippingTemplateId) {
    this.shippingTemplateId = shippingTemplateId;
  }


  public ProductAdd shortDescription(String shortDescription) {
    this.shortDescription = shortDescription;
    return this;
  }

  /**
   * Defines short description
   * @return shortDescription
   */
  @javax.annotation.Nullable
  public String getShortDescription() {
    return shortDescription;
  }

  public void setShortDescription(String shortDescription) {
    this.shortDescription = shortDescription;
  }


  public ProductAdd sku(String sku) {
    this.sku = sku;
    return this;
  }

  /**
   * Defines product&#39;s sku that has to be added
   * @return sku
   */
  @javax.annotation.Nullable
  public String getSku() {
    return sku;
  }

  public void setSku(String sku) {
    this.sku = sku;
  }


  public ProductAdd specialPrice(BigDecimal specialPrice) {
    this.specialPrice = specialPrice;
    return this;
  }

  /**
   * Defines product&#39;s model that has to be added
   * @return specialPrice
   */
  @javax.annotation.Nullable
  public BigDecimal getSpecialPrice() {
    return specialPrice;
  }

  public void setSpecialPrice(BigDecimal specialPrice) {
    this.specialPrice = specialPrice;
  }


  public ProductAdd specifics(List<String> specifics) {
    this.specifics = specifics;
    return this;
  }

  public ProductAdd addSpecificsItem(String specificsItem) {
    if (this.specifics == null) {
      this.specifics = new ArrayList<>();
    }
    this.specifics.add(specificsItem);
    return this;
  }

  /**
   * An array of Item Specific Name/Value pairs used by the seller to provide descriptive details of an item in a structured manner.         &lt;hr&gt;         &lt;div style&#x3D;\&quot;font-style:normal\&quot;&gt;Param structure:           &lt;div style&#x3D;\&quot;margin-left: 2%;\&quot;&gt;             &lt;code style&#x3D;\&quot;padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;\&quot;&gt;               specifics[int][&lt;b&gt;name&lt;/b&gt;] &#x3D; string&lt;/br&gt;               specifics[int][&lt;b&gt;value&lt;/b&gt;] &#x3D; string&lt;/br&gt;             &lt;/code&gt;           &lt;/div&gt;         &lt;/div&gt;
   * @return specifics
   */
  @javax.annotation.Nullable
  public List<String> getSpecifics() {
    return specifics;
  }

  public void setSpecifics(List<String> specifics) {
    this.specifics = specifics;
  }


  public ProductAdd spriceCreate(String spriceCreate) {
    this.spriceCreate = spriceCreate;
    return this;
  }

  /**
   * Defines the date of special price creation
   * @return spriceCreate
   */
  @javax.annotation.Nullable
  public String getSpriceCreate() {
    return spriceCreate;
  }

  public void setSpriceCreate(String spriceCreate) {
    this.spriceCreate = spriceCreate;
  }


  public ProductAdd spriceExpire(String spriceExpire) {
    this.spriceExpire = spriceExpire;
    return this;
  }

  /**
   * Defines the term of special price offer duration
   * @return spriceExpire
   */
  @javax.annotation.Nullable
  public String getSpriceExpire() {
    return spriceExpire;
  }

  public void setSpriceExpire(String spriceExpire) {
    this.spriceExpire = spriceExpire;
  }


  public ProductAdd spriceModified(String spriceModified) {
    this.spriceModified = spriceModified;
    return this;
  }

  /**
   * Defines the date of special price modification
   * @return spriceModified
   */
  @javax.annotation.Nullable
  public String getSpriceModified() {
    return spriceModified;
  }

  public void setSpriceModified(String spriceModified) {
    this.spriceModified = spriceModified;
  }


  public ProductAdd status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Defines product&#39;s status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public ProductAdd storeId(String storeId) {
    this.storeId = storeId;
    return this;
  }

  /**
   * Store Id
   * @return storeId
   */
  @javax.annotation.Nullable
  public String getStoreId() {
    return storeId;
  }

  public void setStoreId(String storeId) {
    this.storeId = storeId;
  }


  public ProductAdd storesIds(String storesIds) {
    this.storesIds = storesIds;
    return this;
  }

  /**
   * Assign product to the stores that is specified by comma-separated stores&#39; id
   * @return storesIds
   */
  @javax.annotation.Nullable
  public String getStoresIds() {
    return storesIds;
  }

  public void setStoresIds(String storesIds) {
    this.storesIds = storesIds;
  }


  public ProductAdd tags(String tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Product tags
   * @return tags
   */
  @javax.annotation.Nullable
  public String getTags() {
    return tags;
  }

  public void setTags(String tags) {
    this.tags = tags;
  }


  public ProductAdd taxClassId(String taxClassId) {
    this.taxClassId = taxClassId;
    return this;
  }

  /**
   * Defines tax classes where entity has to be added
   * @return taxClassId
   */
  @javax.annotation.Nullable
  public String getTaxClassId() {
    return taxClassId;
  }

  public void setTaxClassId(String taxClassId) {
    this.taxClassId = taxClassId;
  }


  public ProductAdd taxable(Boolean taxable) {
    this.taxable = taxable;
    return this;
  }

  /**
   * Specifies whether a tax is charged
   * @return taxable
   */
  @javax.annotation.Nullable
  public Boolean getTaxable() {
    return taxable;
  }

  public void setTaxable(Boolean taxable) {
    this.taxable = taxable;
  }


  public ProductAdd tierPrices(List<ProductAddTierPricesInner> tierPrices) {
    this.tierPrices = tierPrices;
    return this;
  }

  public ProductAdd addTierPricesItem(ProductAddTierPricesInner tierPricesItem) {
    if (this.tierPrices == null) {
      this.tierPrices = new ArrayList<>();
    }
    this.tierPrices.add(tierPricesItem);
    return this;
  }

  /**
   * Defines product&#39;s tier prices
   * @return tierPrices
   */
  @javax.annotation.Nullable
  public List<ProductAddTierPricesInner> getTierPrices() {
    return tierPrices;
  }

  public void setTierPrices(List<ProductAddTierPricesInner> tierPrices) {
    this.tierPrices = tierPrices;
  }


  public ProductAdd type(String type) {
    this.type = type;
    return this;
  }

  /**
   * Defines product&#39;s type
   * @return type
   */
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  public ProductAdd upc(String upc) {
    this.upc = upc;
    return this;
  }

  /**
   * Universal Product Code. A UPC (UPC-A) is a commonly used identifer for many different products.
   * @return upc
   */
  @javax.annotation.Nullable
  public String getUpc() {
    return upc;
  }

  public void setUpc(String upc) {
    this.upc = upc;
  }


  public ProductAdd url(String url) {
    this.url = url;
    return this;
  }

  /**
   * Defines unique product&#39;s URL
   * @return url
   */
  @javax.annotation.Nullable
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }


  public ProductAdd viewedCount(Integer viewedCount) {
    this.viewedCount = viewedCount;
    return this;
  }

  /**
   * Specifies the number of product&#39;s reviews
   * @return viewedCount
   */
  @javax.annotation.Nullable
  public Integer getViewedCount() {
    return viewedCount;
  }

  public void setViewedCount(Integer viewedCount) {
    this.viewedCount = viewedCount;
  }


  public ProductAdd visible(String visible) {
    this.visible = visible;
    return this;
  }

  /**
   * Set visibility status
   * @return visible
   */
  @javax.annotation.Nullable
  public String getVisible() {
    return visible;
  }

  public void setVisible(String visible) {
    this.visible = visible;
  }


  public ProductAdd warehouseId(String warehouseId) {
    this.warehouseId = warehouseId;
    return this;
  }

  /**
   * This parameter is used for selecting a warehouse where you need to set/modify a product quantity.
   * @return warehouseId
   */
  @javax.annotation.Nullable
  public String getWarehouseId() {
    return warehouseId;
  }

  public void setWarehouseId(String warehouseId) {
    this.warehouseId = warehouseId;
  }


  public ProductAdd weight(BigDecimal weight) {
    this.weight = weight;
    return this;
  }

  /**
   * Weight
   * @return weight
   */
  @javax.annotation.Nullable
  public BigDecimal getWeight() {
    return weight;
  }

  public void setWeight(BigDecimal weight) {
    this.weight = weight;
  }


  public ProductAdd weightUnit(String weightUnit) {
    this.weightUnit = weightUnit;
    return this;
  }

  /**
   * Weight Unit
   * @return weightUnit
   */
  @javax.annotation.Nullable
  public String getWeightUnit() {
    return weightUnit;
  }

  public void setWeightUnit(String weightUnit) {
    this.weightUnit = weightUnit;
  }


  public ProductAdd wholesalePrice(BigDecimal wholesalePrice) {
    this.wholesalePrice = wholesalePrice;
    return this;
  }

  /**
   * Defines product&#39;s sale price
   * @return wholesalePrice
   */
  @javax.annotation.Nullable
  public BigDecimal getWholesalePrice() {
    return wholesalePrice;
  }

  public void setWholesalePrice(BigDecimal wholesalePrice) {
    this.wholesalePrice = wholesalePrice;
  }


  public ProductAdd width(BigDecimal width) {
    this.width = width;
    return this;
  }

  /**
   * Defines product&#39;s width
   * @return width
   */
  @javax.annotation.Nullable
  public BigDecimal getWidth() {
    return width;
  }

  public void setWidth(BigDecimal width) {
    this.width = width;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductAdd productAdd = (ProductAdd) o;
    return Objects.equals(this.attributeName, productAdd.attributeName) &&
        Objects.equals(this.attributeSetName, productAdd.attributeSetName) &&
        Objects.equals(this.availFrom, productAdd.availFrom) &&
        Objects.equals(this.availableForSale, productAdd.availableForSale) &&
        Objects.equals(this.availableForView, productAdd.availableForView) &&
        Objects.equals(this.backorderStatus, productAdd.backorderStatus) &&
        Objects.equals(this.barcode, productAdd.barcode) &&
        Objects.equals(this.bestOffer, productAdd.bestOffer) &&
        Objects.equals(this.brandName, productAdd.brandName) &&
        Objects.equals(this.categoriesIds, productAdd.categoriesIds) &&
        Objects.equals(this.categoryId, productAdd.categoryId) &&
        Objects.equals(this.clearCache, productAdd.clearCache) &&
        Objects.equals(this.condition, productAdd.condition) &&
        Objects.equals(this.costPrice, productAdd.costPrice) &&
        Objects.equals(this.countryOfOrigin, productAdd.countryOfOrigin) &&
        Objects.equals(this.createdAt, productAdd.createdAt) &&
        Objects.equals(this.description, productAdd.description) &&
        Objects.equals(this.downloadable, productAdd.downloadable) &&
        Objects.equals(this.ean, productAdd.ean) &&
        Objects.equals(this.files, productAdd.files) &&
        Objects.equals(this.groupPrices, productAdd.groupPrices) &&
        Objects.equals(this.gtin, productAdd.gtin) &&
        Objects.equals(this.harmonizedSystemCode, productAdd.harmonizedSystemCode) &&
        Objects.equals(this.height, productAdd.height) &&
        Objects.equals(this.imageName, productAdd.imageName) &&
        Objects.equals(this.imageUrl, productAdd.imageUrl) &&
        Objects.equals(this.isbn, productAdd.isbn) &&
        Objects.equals(this.langId, productAdd.langId) &&
        Objects.equals(this.length, productAdd.length) &&
        Objects.equals(this.listingDuration, productAdd.listingDuration) &&
        Objects.equals(this.listingType, productAdd.listingType) &&
        Objects.equals(this.manageStock, productAdd.manageStock) &&
        Objects.equals(this.manufacturer, productAdd.manufacturer) &&
        Objects.equals(this.marketplaceItemProperties, productAdd.marketplaceItemProperties) &&
        Objects.equals(this.metaDescription, productAdd.metaDescription) &&
        Objects.equals(this.metaKeywords, productAdd.metaKeywords) &&
        Objects.equals(this.metaTitle, productAdd.metaTitle) &&
        Objects.equals(this.model, productAdd.model) &&
        Objects.equals(this.mpn, productAdd.mpn) &&
        Objects.equals(this.name, productAdd.name) &&
        Objects.equals(this.oldPrice, productAdd.oldPrice) &&
        Objects.equals(this.orderedCount, productAdd.orderedCount) &&
        Objects.equals(this.packageDetails, productAdd.packageDetails) &&
        Objects.equals(this.paymentMethods, productAdd.paymentMethods) &&
        Objects.equals(this.paypalEmail, productAdd.paypalEmail) &&
        Objects.equals(this.price, productAdd.price) &&
        Objects.equals(this.productClass, productAdd.productClass) &&
        Objects.equals(this.quantity, productAdd.quantity) &&
        Objects.equals(this.returnAccepted, productAdd.returnAccepted) &&
        Objects.equals(this.salesTax, productAdd.salesTax) &&
        Objects.equals(this.searchKeywords, productAdd.searchKeywords) &&
        Objects.equals(this.sellerProfiles, productAdd.sellerProfiles) &&
        Objects.equals(this.seoUrl, productAdd.seoUrl) &&
        Objects.equals(this.shippingDetails, productAdd.shippingDetails) &&
        Objects.equals(this.shippingTemplateId, productAdd.shippingTemplateId) &&
        Objects.equals(this.shortDescription, productAdd.shortDescription) &&
        Objects.equals(this.sku, productAdd.sku) &&
        Objects.equals(this.specialPrice, productAdd.specialPrice) &&
        Objects.equals(this.specifics, productAdd.specifics) &&
        Objects.equals(this.spriceCreate, productAdd.spriceCreate) &&
        Objects.equals(this.spriceExpire, productAdd.spriceExpire) &&
        Objects.equals(this.spriceModified, productAdd.spriceModified) &&
        Objects.equals(this.status, productAdd.status) &&
        Objects.equals(this.storeId, productAdd.storeId) &&
        Objects.equals(this.storesIds, productAdd.storesIds) &&
        Objects.equals(this.tags, productAdd.tags) &&
        Objects.equals(this.taxClassId, productAdd.taxClassId) &&
        Objects.equals(this.taxable, productAdd.taxable) &&
        Objects.equals(this.tierPrices, productAdd.tierPrices) &&
        Objects.equals(this.type, productAdd.type) &&
        Objects.equals(this.upc, productAdd.upc) &&
        Objects.equals(this.url, productAdd.url) &&
        Objects.equals(this.viewedCount, productAdd.viewedCount) &&
        Objects.equals(this.visible, productAdd.visible) &&
        Objects.equals(this.warehouseId, productAdd.warehouseId) &&
        Objects.equals(this.weight, productAdd.weight) &&
        Objects.equals(this.weightUnit, productAdd.weightUnit) &&
        Objects.equals(this.wholesalePrice, productAdd.wholesalePrice) &&
        Objects.equals(this.width, productAdd.width);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributeName, attributeSetName, availFrom, availableForSale, availableForView, backorderStatus, barcode, bestOffer, brandName, categoriesIds, categoryId, clearCache, condition, costPrice, countryOfOrigin, createdAt, description, downloadable, ean, files, groupPrices, gtin, harmonizedSystemCode, height, imageName, imageUrl, isbn, langId, length, listingDuration, listingType, manageStock, manufacturer, marketplaceItemProperties, metaDescription, metaKeywords, metaTitle, model, mpn, name, oldPrice, orderedCount, packageDetails, paymentMethods, paypalEmail, price, productClass, quantity, returnAccepted, salesTax, searchKeywords, sellerProfiles, seoUrl, shippingDetails, shippingTemplateId, shortDescription, sku, specialPrice, specifics, spriceCreate, spriceExpire, spriceModified, status, storeId, storesIds, tags, taxClassId, taxable, tierPrices, type, upc, url, viewedCount, visible, warehouseId, weight, weightUnit, wholesalePrice, width);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductAdd {\n");
    sb.append("    attributeName: ").append(toIndentedString(attributeName)).append("\n");
    sb.append("    attributeSetName: ").append(toIndentedString(attributeSetName)).append("\n");
    sb.append("    availFrom: ").append(toIndentedString(availFrom)).append("\n");
    sb.append("    availableForSale: ").append(toIndentedString(availableForSale)).append("\n");
    sb.append("    availableForView: ").append(toIndentedString(availableForView)).append("\n");
    sb.append("    backorderStatus: ").append(toIndentedString(backorderStatus)).append("\n");
    sb.append("    barcode: ").append(toIndentedString(barcode)).append("\n");
    sb.append("    bestOffer: ").append(toIndentedString(bestOffer)).append("\n");
    sb.append("    brandName: ").append(toIndentedString(brandName)).append("\n");
    sb.append("    categoriesIds: ").append(toIndentedString(categoriesIds)).append("\n");
    sb.append("    categoryId: ").append(toIndentedString(categoryId)).append("\n");
    sb.append("    clearCache: ").append(toIndentedString(clearCache)).append("\n");
    sb.append("    condition: ").append(toIndentedString(condition)).append("\n");
    sb.append("    costPrice: ").append(toIndentedString(costPrice)).append("\n");
    sb.append("    countryOfOrigin: ").append(toIndentedString(countryOfOrigin)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    downloadable: ").append(toIndentedString(downloadable)).append("\n");
    sb.append("    ean: ").append(toIndentedString(ean)).append("\n");
    sb.append("    files: ").append(toIndentedString(files)).append("\n");
    sb.append("    groupPrices: ").append(toIndentedString(groupPrices)).append("\n");
    sb.append("    gtin: ").append(toIndentedString(gtin)).append("\n");
    sb.append("    harmonizedSystemCode: ").append(toIndentedString(harmonizedSystemCode)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    imageName: ").append(toIndentedString(imageName)).append("\n");
    sb.append("    imageUrl: ").append(toIndentedString(imageUrl)).append("\n");
    sb.append("    isbn: ").append(toIndentedString(isbn)).append("\n");
    sb.append("    langId: ").append(toIndentedString(langId)).append("\n");
    sb.append("    length: ").append(toIndentedString(length)).append("\n");
    sb.append("    listingDuration: ").append(toIndentedString(listingDuration)).append("\n");
    sb.append("    listingType: ").append(toIndentedString(listingType)).append("\n");
    sb.append("    manageStock: ").append(toIndentedString(manageStock)).append("\n");
    sb.append("    manufacturer: ").append(toIndentedString(manufacturer)).append("\n");
    sb.append("    marketplaceItemProperties: ").append(toIndentedString(marketplaceItemProperties)).append("\n");
    sb.append("    metaDescription: ").append(toIndentedString(metaDescription)).append("\n");
    sb.append("    metaKeywords: ").append(toIndentedString(metaKeywords)).append("\n");
    sb.append("    metaTitle: ").append(toIndentedString(metaTitle)).append("\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    mpn: ").append(toIndentedString(mpn)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    oldPrice: ").append(toIndentedString(oldPrice)).append("\n");
    sb.append("    orderedCount: ").append(toIndentedString(orderedCount)).append("\n");
    sb.append("    packageDetails: ").append(toIndentedString(packageDetails)).append("\n");
    sb.append("    paymentMethods: ").append(toIndentedString(paymentMethods)).append("\n");
    sb.append("    paypalEmail: ").append(toIndentedString(paypalEmail)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    productClass: ").append(toIndentedString(productClass)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    returnAccepted: ").append(toIndentedString(returnAccepted)).append("\n");
    sb.append("    salesTax: ").append(toIndentedString(salesTax)).append("\n");
    sb.append("    searchKeywords: ").append(toIndentedString(searchKeywords)).append("\n");
    sb.append("    sellerProfiles: ").append(toIndentedString(sellerProfiles)).append("\n");
    sb.append("    seoUrl: ").append(toIndentedString(seoUrl)).append("\n");
    sb.append("    shippingDetails: ").append(toIndentedString(shippingDetails)).append("\n");
    sb.append("    shippingTemplateId: ").append(toIndentedString(shippingTemplateId)).append("\n");
    sb.append("    shortDescription: ").append(toIndentedString(shortDescription)).append("\n");
    sb.append("    sku: ").append(toIndentedString(sku)).append("\n");
    sb.append("    specialPrice: ").append(toIndentedString(specialPrice)).append("\n");
    sb.append("    specifics: ").append(toIndentedString(specifics)).append("\n");
    sb.append("    spriceCreate: ").append(toIndentedString(spriceCreate)).append("\n");
    sb.append("    spriceExpire: ").append(toIndentedString(spriceExpire)).append("\n");
    sb.append("    spriceModified: ").append(toIndentedString(spriceModified)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    storeId: ").append(toIndentedString(storeId)).append("\n");
    sb.append("    storesIds: ").append(toIndentedString(storesIds)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    taxClassId: ").append(toIndentedString(taxClassId)).append("\n");
    sb.append("    taxable: ").append(toIndentedString(taxable)).append("\n");
    sb.append("    tierPrices: ").append(toIndentedString(tierPrices)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    upc: ").append(toIndentedString(upc)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    viewedCount: ").append(toIndentedString(viewedCount)).append("\n");
    sb.append("    visible: ").append(toIndentedString(visible)).append("\n");
    sb.append("    warehouseId: ").append(toIndentedString(warehouseId)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("    weightUnit: ").append(toIndentedString(weightUnit)).append("\n");
    sb.append("    wholesalePrice: ").append(toIndentedString(wholesalePrice)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("attribute_name");
    openapiFields.add("attribute_set_name");
    openapiFields.add("avail_from");
    openapiFields.add("available_for_sale");
    openapiFields.add("available_for_view");
    openapiFields.add("backorder_status");
    openapiFields.add("barcode");
    openapiFields.add("best_offer");
    openapiFields.add("brand_name");
    openapiFields.add("categories_ids");
    openapiFields.add("category_id");
    openapiFields.add("clear_cache");
    openapiFields.add("condition");
    openapiFields.add("cost_price");
    openapiFields.add("country_of_origin");
    openapiFields.add("created_at");
    openapiFields.add("description");
    openapiFields.add("downloadable");
    openapiFields.add("ean");
    openapiFields.add("files");
    openapiFields.add("group_prices");
    openapiFields.add("gtin");
    openapiFields.add("harmonized_system_code");
    openapiFields.add("height");
    openapiFields.add("image_name");
    openapiFields.add("image_url");
    openapiFields.add("isbn");
    openapiFields.add("lang_id");
    openapiFields.add("length");
    openapiFields.add("listing_duration");
    openapiFields.add("listing_type");
    openapiFields.add("manage_stock");
    openapiFields.add("manufacturer");
    openapiFields.add("marketplace_item_properties");
    openapiFields.add("meta_description");
    openapiFields.add("meta_keywords");
    openapiFields.add("meta_title");
    openapiFields.add("model");
    openapiFields.add("mpn");
    openapiFields.add("name");
    openapiFields.add("old_price");
    openapiFields.add("ordered_count");
    openapiFields.add("package_details");
    openapiFields.add("payment_methods");
    openapiFields.add("paypal_email");
    openapiFields.add("price");
    openapiFields.add("product_class");
    openapiFields.add("quantity");
    openapiFields.add("return_accepted");
    openapiFields.add("sales_tax");
    openapiFields.add("search_keywords");
    openapiFields.add("seller_profiles");
    openapiFields.add("seo_url");
    openapiFields.add("shipping_details");
    openapiFields.add("shipping_template_id");
    openapiFields.add("short_description");
    openapiFields.add("sku");
    openapiFields.add("special_price");
    openapiFields.add("specifics");
    openapiFields.add("sprice_create");
    openapiFields.add("sprice_expire");
    openapiFields.add("sprice_modified");
    openapiFields.add("status");
    openapiFields.add("store_id");
    openapiFields.add("stores_ids");
    openapiFields.add("tags");
    openapiFields.add("tax_class_id");
    openapiFields.add("taxable");
    openapiFields.add("tier_prices");
    openapiFields.add("type");
    openapiFields.add("upc");
    openapiFields.add("url");
    openapiFields.add("viewed_count");
    openapiFields.add("visible");
    openapiFields.add("warehouse_id");
    openapiFields.add("weight");
    openapiFields.add("weight_unit");
    openapiFields.add("wholesale_price");
    openapiFields.add("width");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("description");
    openapiRequiredFields.add("model");
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("price");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ProductAdd
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ProductAdd.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ProductAdd is not found in the empty JSON string", ProductAdd.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ProductAdd.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ProductAdd` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ProductAdd.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("attribute_name") != null && !jsonObj.get("attribute_name").isJsonNull()) && !jsonObj.get("attribute_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `attribute_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("attribute_name").toString()));
      }
      if ((jsonObj.get("attribute_set_name") != null && !jsonObj.get("attribute_set_name").isJsonNull()) && !jsonObj.get("attribute_set_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `attribute_set_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("attribute_set_name").toString()));
      }
      if ((jsonObj.get("avail_from") != null && !jsonObj.get("avail_from").isJsonNull()) && !jsonObj.get("avail_from").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `avail_from` to be a primitive type in the JSON string but got `%s`", jsonObj.get("avail_from").toString()));
      }
      if ((jsonObj.get("backorder_status") != null && !jsonObj.get("backorder_status").isJsonNull()) && !jsonObj.get("backorder_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `backorder_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("backorder_status").toString()));
      }
      if ((jsonObj.get("barcode") != null && !jsonObj.get("barcode").isJsonNull()) && !jsonObj.get("barcode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `barcode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("barcode").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("best_offer") != null && !jsonObj.get("best_offer").isJsonNull() && !jsonObj.get("best_offer").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `best_offer` to be an array in the JSON string but got `%s`", jsonObj.get("best_offer").toString()));
      }
      if ((jsonObj.get("brand_name") != null && !jsonObj.get("brand_name").isJsonNull()) && !jsonObj.get("brand_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `brand_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("brand_name").toString()));
      }
      if ((jsonObj.get("categories_ids") != null && !jsonObj.get("categories_ids").isJsonNull()) && !jsonObj.get("categories_ids").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `categories_ids` to be a primitive type in the JSON string but got `%s`", jsonObj.get("categories_ids").toString()));
      }
      if ((jsonObj.get("category_id") != null && !jsonObj.get("category_id").isJsonNull()) && !jsonObj.get("category_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `category_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("category_id").toString()));
      }
      if ((jsonObj.get("condition") != null && !jsonObj.get("condition").isJsonNull()) && !jsonObj.get("condition").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `condition` to be a primitive type in the JSON string but got `%s`", jsonObj.get("condition").toString()));
      }
      if ((jsonObj.get("country_of_origin") != null && !jsonObj.get("country_of_origin").isJsonNull()) && !jsonObj.get("country_of_origin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `country_of_origin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("country_of_origin").toString()));
      }
      if ((jsonObj.get("created_at") != null && !jsonObj.get("created_at").isJsonNull()) && !jsonObj.get("created_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_at").toString()));
      }
      if (!jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("ean") != null && !jsonObj.get("ean").isJsonNull()) && !jsonObj.get("ean").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ean` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ean").toString()));
      }
      if (jsonObj.get("files") != null && !jsonObj.get("files").isJsonNull()) {
        JsonArray jsonArrayfiles = jsonObj.getAsJsonArray("files");
        if (jsonArrayfiles != null) {
          // ensure the json data is an array
          if (!jsonObj.get("files").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `files` to be an array in the JSON string but got `%s`", jsonObj.get("files").toString()));
          }

          // validate the optional field `files` (array)
          for (int i = 0; i < jsonArrayfiles.size(); i++) {
            ProductAddFilesInner.validateJsonElement(jsonArrayfiles.get(i));
          };
        }
      }
      if (jsonObj.get("group_prices") != null && !jsonObj.get("group_prices").isJsonNull()) {
        JsonArray jsonArraygroupPrices = jsonObj.getAsJsonArray("group_prices");
        if (jsonArraygroupPrices != null) {
          // ensure the json data is an array
          if (!jsonObj.get("group_prices").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `group_prices` to be an array in the JSON string but got `%s`", jsonObj.get("group_prices").toString()));
          }

          // validate the optional field `group_prices` (array)
          for (int i = 0; i < jsonArraygroupPrices.size(); i++) {
            ProductAddGroupPricesInner.validateJsonElement(jsonArraygroupPrices.get(i));
          };
        }
      }
      if ((jsonObj.get("gtin") != null && !jsonObj.get("gtin").isJsonNull()) && !jsonObj.get("gtin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gtin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gtin").toString()));
      }
      if ((jsonObj.get("harmonized_system_code") != null && !jsonObj.get("harmonized_system_code").isJsonNull()) && !jsonObj.get("harmonized_system_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `harmonized_system_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("harmonized_system_code").toString()));
      }
      if ((jsonObj.get("image_name") != null && !jsonObj.get("image_name").isJsonNull()) && !jsonObj.get("image_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `image_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("image_name").toString()));
      }
      if ((jsonObj.get("image_url") != null && !jsonObj.get("image_url").isJsonNull()) && !jsonObj.get("image_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `image_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("image_url").toString()));
      }
      if ((jsonObj.get("isbn") != null && !jsonObj.get("isbn").isJsonNull()) && !jsonObj.get("isbn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `isbn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("isbn").toString()));
      }
      if ((jsonObj.get("lang_id") != null && !jsonObj.get("lang_id").isJsonNull()) && !jsonObj.get("lang_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lang_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lang_id").toString()));
      }
      if ((jsonObj.get("listing_duration") != null && !jsonObj.get("listing_duration").isJsonNull()) && !jsonObj.get("listing_duration").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `listing_duration` to be a primitive type in the JSON string but got `%s`", jsonObj.get("listing_duration").toString()));
      }
      if ((jsonObj.get("listing_type") != null && !jsonObj.get("listing_type").isJsonNull()) && !jsonObj.get("listing_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `listing_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("listing_type").toString()));
      }
      if ((jsonObj.get("manufacturer") != null && !jsonObj.get("manufacturer").isJsonNull()) && !jsonObj.get("manufacturer").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `manufacturer` to be a primitive type in the JSON string but got `%s`", jsonObj.get("manufacturer").toString()));
      }
      if ((jsonObj.get("marketplace_item_properties") != null && !jsonObj.get("marketplace_item_properties").isJsonNull()) && !jsonObj.get("marketplace_item_properties").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `marketplace_item_properties` to be a primitive type in the JSON string but got `%s`", jsonObj.get("marketplace_item_properties").toString()));
      }
      if ((jsonObj.get("meta_description") != null && !jsonObj.get("meta_description").isJsonNull()) && !jsonObj.get("meta_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `meta_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("meta_description").toString()));
      }
      if ((jsonObj.get("meta_keywords") != null && !jsonObj.get("meta_keywords").isJsonNull()) && !jsonObj.get("meta_keywords").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `meta_keywords` to be a primitive type in the JSON string but got `%s`", jsonObj.get("meta_keywords").toString()));
      }
      if ((jsonObj.get("meta_title") != null && !jsonObj.get("meta_title").isJsonNull()) && !jsonObj.get("meta_title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `meta_title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("meta_title").toString()));
      }
      if (!jsonObj.get("model").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `model` to be a primitive type in the JSON string but got `%s`", jsonObj.get("model").toString()));
      }
      if ((jsonObj.get("mpn") != null && !jsonObj.get("mpn").isJsonNull()) && !jsonObj.get("mpn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mpn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mpn").toString()));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("package_details") != null && !jsonObj.get("package_details").isJsonNull() && !jsonObj.get("package_details").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `package_details` to be an array in the JSON string but got `%s`", jsonObj.get("package_details").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("payment_methods") != null && !jsonObj.get("payment_methods").isJsonNull() && !jsonObj.get("payment_methods").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `payment_methods` to be an array in the JSON string but got `%s`", jsonObj.get("payment_methods").toString()));
      }
      if ((jsonObj.get("paypal_email") != null && !jsonObj.get("paypal_email").isJsonNull()) && !jsonObj.get("paypal_email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `paypal_email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("paypal_email").toString()));
      }
      if ((jsonObj.get("product_class") != null && !jsonObj.get("product_class").isJsonNull()) && !jsonObj.get("product_class").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `product_class` to be a primitive type in the JSON string but got `%s`", jsonObj.get("product_class").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("sales_tax") != null && !jsonObj.get("sales_tax").isJsonNull() && !jsonObj.get("sales_tax").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `sales_tax` to be an array in the JSON string but got `%s`", jsonObj.get("sales_tax").toString()));
      }
      if ((jsonObj.get("search_keywords") != null && !jsonObj.get("search_keywords").isJsonNull()) && !jsonObj.get("search_keywords").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `search_keywords` to be a primitive type in the JSON string but got `%s`", jsonObj.get("search_keywords").toString()));
      }
      // validate the optional field `seller_profiles`
      if (jsonObj.get("seller_profiles") != null && !jsonObj.get("seller_profiles").isJsonNull()) {
        ProductAddSellerProfiles.validateJsonElement(jsonObj.get("seller_profiles"));
      }
      if ((jsonObj.get("seo_url") != null && !jsonObj.get("seo_url").isJsonNull()) && !jsonObj.get("seo_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `seo_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("seo_url").toString()));
      }
      if (jsonObj.get("shipping_details") != null && !jsonObj.get("shipping_details").isJsonNull()) {
        JsonArray jsonArrayshippingDetails = jsonObj.getAsJsonArray("shipping_details");
        if (jsonArrayshippingDetails != null) {
          // ensure the json data is an array
          if (!jsonObj.get("shipping_details").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `shipping_details` to be an array in the JSON string but got `%s`", jsonObj.get("shipping_details").toString()));
          }

          // validate the optional field `shipping_details` (array)
          for (int i = 0; i < jsonArrayshippingDetails.size(); i++) {
            ProductAddShippingDetailsInner.validateJsonElement(jsonArrayshippingDetails.get(i));
          };
        }
      }
      if ((jsonObj.get("short_description") != null && !jsonObj.get("short_description").isJsonNull()) && !jsonObj.get("short_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `short_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("short_description").toString()));
      }
      if ((jsonObj.get("sku") != null && !jsonObj.get("sku").isJsonNull()) && !jsonObj.get("sku").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sku` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sku").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("specifics") != null && !jsonObj.get("specifics").isJsonNull() && !jsonObj.get("specifics").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `specifics` to be an array in the JSON string but got `%s`", jsonObj.get("specifics").toString()));
      }
      if ((jsonObj.get("sprice_create") != null && !jsonObj.get("sprice_create").isJsonNull()) && !jsonObj.get("sprice_create").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sprice_create` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sprice_create").toString()));
      }
      if ((jsonObj.get("sprice_expire") != null && !jsonObj.get("sprice_expire").isJsonNull()) && !jsonObj.get("sprice_expire").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sprice_expire` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sprice_expire").toString()));
      }
      if ((jsonObj.get("sprice_modified") != null && !jsonObj.get("sprice_modified").isJsonNull()) && !jsonObj.get("sprice_modified").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sprice_modified` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sprice_modified").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("store_id") != null && !jsonObj.get("store_id").isJsonNull()) && !jsonObj.get("store_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `store_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("store_id").toString()));
      }
      if ((jsonObj.get("stores_ids") != null && !jsonObj.get("stores_ids").isJsonNull()) && !jsonObj.get("stores_ids").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stores_ids` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stores_ids").toString()));
      }
      if ((jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) && !jsonObj.get("tags").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tags` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tags").toString()));
      }
      if ((jsonObj.get("tax_class_id") != null && !jsonObj.get("tax_class_id").isJsonNull()) && !jsonObj.get("tax_class_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tax_class_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tax_class_id").toString()));
      }
      if (jsonObj.get("tier_prices") != null && !jsonObj.get("tier_prices").isJsonNull()) {
        JsonArray jsonArraytierPrices = jsonObj.getAsJsonArray("tier_prices");
        if (jsonArraytierPrices != null) {
          // ensure the json data is an array
          if (!jsonObj.get("tier_prices").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `tier_prices` to be an array in the JSON string but got `%s`", jsonObj.get("tier_prices").toString()));
          }

          // validate the optional field `tier_prices` (array)
          for (int i = 0; i < jsonArraytierPrices.size(); i++) {
            ProductAddTierPricesInner.validateJsonElement(jsonArraytierPrices.get(i));
          };
        }
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      if ((jsonObj.get("upc") != null && !jsonObj.get("upc").isJsonNull()) && !jsonObj.get("upc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `upc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("upc").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
      if ((jsonObj.get("visible") != null && !jsonObj.get("visible").isJsonNull()) && !jsonObj.get("visible").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `visible` to be a primitive type in the JSON string but got `%s`", jsonObj.get("visible").toString()));
      }
      if ((jsonObj.get("warehouse_id") != null && !jsonObj.get("warehouse_id").isJsonNull()) && !jsonObj.get("warehouse_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `warehouse_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("warehouse_id").toString()));
      }
      if ((jsonObj.get("weight_unit") != null && !jsonObj.get("weight_unit").isJsonNull()) && !jsonObj.get("weight_unit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `weight_unit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("weight_unit").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ProductAdd.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ProductAdd' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ProductAdd> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ProductAdd.class));

       return (TypeAdapter<T>) new TypeAdapter<ProductAdd>() {
           @Override
           public void write(JsonWriter out, ProductAdd value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ProductAdd read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ProductAdd given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ProductAdd
   * @throws IOException if the JSON string is invalid with respect to ProductAdd
   */
  public static ProductAdd fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ProductAdd.class);
  }

  /**
   * Convert an instance of ProductAdd to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

