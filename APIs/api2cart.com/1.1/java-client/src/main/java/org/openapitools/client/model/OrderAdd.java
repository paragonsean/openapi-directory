/*
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.OrderAddNoteAttributesInner;
import org.openapitools.client.model.OrderAddOrderItemInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * OrderAdd
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:12:09.268126-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class OrderAdd {
  public static final String SERIALIZED_NAME_ADMIN_COMMENT = "admin_comment";
  @SerializedName(SERIALIZED_NAME_ADMIN_COMMENT)
  private String adminComment;

  public static final String SERIALIZED_NAME_ADMIN_PRIVATE_COMMENT = "admin_private_comment";
  @SerializedName(SERIALIZED_NAME_ADMIN_PRIVATE_COMMENT)
  private String adminPrivateComment;

  public static final String SERIALIZED_NAME_BILL_ADDRESS1 = "bill_address_1";
  @SerializedName(SERIALIZED_NAME_BILL_ADDRESS1)
  private String billAddress1;

  public static final String SERIALIZED_NAME_BILL_ADDRESS2 = "bill_address_2";
  @SerializedName(SERIALIZED_NAME_BILL_ADDRESS2)
  private String billAddress2;

  public static final String SERIALIZED_NAME_BILL_CITY = "bill_city";
  @SerializedName(SERIALIZED_NAME_BILL_CITY)
  private String billCity;

  public static final String SERIALIZED_NAME_BILL_COMPANY = "bill_company";
  @SerializedName(SERIALIZED_NAME_BILL_COMPANY)
  private String billCompany;

  public static final String SERIALIZED_NAME_BILL_COUNTRY = "bill_country";
  @SerializedName(SERIALIZED_NAME_BILL_COUNTRY)
  private String billCountry;

  public static final String SERIALIZED_NAME_BILL_FAX = "bill_fax";
  @SerializedName(SERIALIZED_NAME_BILL_FAX)
  private String billFax;

  public static final String SERIALIZED_NAME_BILL_FIRST_NAME = "bill_first_name";
  @SerializedName(SERIALIZED_NAME_BILL_FIRST_NAME)
  private String billFirstName;

  public static final String SERIALIZED_NAME_BILL_LAST_NAME = "bill_last_name";
  @SerializedName(SERIALIZED_NAME_BILL_LAST_NAME)
  private String billLastName;

  public static final String SERIALIZED_NAME_BILL_PHONE = "bill_phone";
  @SerializedName(SERIALIZED_NAME_BILL_PHONE)
  private String billPhone;

  public static final String SERIALIZED_NAME_BILL_POSTCODE = "bill_postcode";
  @SerializedName(SERIALIZED_NAME_BILL_POSTCODE)
  private String billPostcode;

  public static final String SERIALIZED_NAME_BILL_STATE = "bill_state";
  @SerializedName(SERIALIZED_NAME_BILL_STATE)
  private String billState;

  public static final String SERIALIZED_NAME_CHANNEL_ID = "channel_id";
  @SerializedName(SERIALIZED_NAME_CHANNEL_ID)
  private String channelId;

  public static final String SERIALIZED_NAME_CLEAR_CACHE = "clear_cache";
  @SerializedName(SERIALIZED_NAME_CLEAR_CACHE)
  private Boolean clearCache = true;

  public static final String SERIALIZED_NAME_COMMENT = "comment";
  @SerializedName(SERIALIZED_NAME_COMMENT)
  private String comment;

  public static final String SERIALIZED_NAME_COUPON_DISCOUNT = "coupon_discount";
  @SerializedName(SERIALIZED_NAME_COUPON_DISCOUNT)
  private BigDecimal couponDiscount;

  public static final String SERIALIZED_NAME_COUPONS = "coupons";
  @SerializedName(SERIALIZED_NAME_COUPONS)
  private List<String> coupons = new ArrayList<>();

  public static final String SERIALIZED_NAME_CREATE_INVOICE = "create_invoice";
  @SerializedName(SERIALIZED_NAME_CREATE_INVOICE)
  private Boolean createInvoice = false;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private String currency;

  public static final String SERIALIZED_NAME_CUSTOMER_BIRTHDAY = "customer_birthday";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_BIRTHDAY)
  private String customerBirthday;

  public static final String SERIALIZED_NAME_CUSTOMER_EMAIL = "customer_email";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_EMAIL)
  private String customerEmail;

  public static final String SERIALIZED_NAME_CUSTOMER_FAX = "customer_fax";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_FAX)
  private String customerFax;

  public static final String SERIALIZED_NAME_CUSTOMER_FIRST_NAME = "customer_first_name";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_FIRST_NAME)
  private String customerFirstName;

  public static final String SERIALIZED_NAME_CUSTOMER_LAST_NAME = "customer_last_name";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_LAST_NAME)
  private String customerLastName;

  public static final String SERIALIZED_NAME_CUSTOMER_PHONE = "customer_phone";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_PHONE)
  private String customerPhone;

  public static final String SERIALIZED_NAME_DATE = "date";
  @SerializedName(SERIALIZED_NAME_DATE)
  private String date;

  public static final String SERIALIZED_NAME_DATE_FINISHED = "date_finished";
  @SerializedName(SERIALIZED_NAME_DATE_FINISHED)
  private String dateFinished;

  public static final String SERIALIZED_NAME_DATE_MODIFIED = "date_modified";
  @SerializedName(SERIALIZED_NAME_DATE_MODIFIED)
  private String dateModified;

  public static final String SERIALIZED_NAME_DISCOUNT = "discount";
  @SerializedName(SERIALIZED_NAME_DISCOUNT)
  private BigDecimal discount;

  public static final String SERIALIZED_NAME_EXTERNAL_SOURCE = "external_source";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_SOURCE)
  private String externalSource;

  public static final String SERIALIZED_NAME_FINANCIAL_STATUS = "financial_status";
  @SerializedName(SERIALIZED_NAME_FINANCIAL_STATUS)
  private String financialStatus;

  public static final String SERIALIZED_NAME_FULFILLMENT_STATUS = "fulfillment_status";
  @SerializedName(SERIALIZED_NAME_FULFILLMENT_STATUS)
  private String fulfillmentStatus;

  public static final String SERIALIZED_NAME_GIFT_CERTIFICATE_DISCOUNT = "gift_certificate_discount";
  @SerializedName(SERIALIZED_NAME_GIFT_CERTIFICATE_DISCOUNT)
  private BigDecimal giftCertificateDiscount;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_INVENTORY_BEHAVIOUR = "inventory_behaviour";
  @SerializedName(SERIALIZED_NAME_INVENTORY_BEHAVIOUR)
  private String inventoryBehaviour = "bypass";

  public static final String SERIALIZED_NAME_NOTE_ATTRIBUTES = "note_attributes";
  @SerializedName(SERIALIZED_NAME_NOTE_ATTRIBUTES)
  private List<OrderAddNoteAttributesInner> noteAttributes = new ArrayList<>();

  public static final String SERIALIZED_NAME_ORDER_ID = "order_id";
  @SerializedName(SERIALIZED_NAME_ORDER_ID)
  private String orderId;

  public static final String SERIALIZED_NAME_ORDER_ITEM = "order_item";
  @SerializedName(SERIALIZED_NAME_ORDER_ITEM)
  private List<OrderAddOrderItemInner> orderItem = new ArrayList<>();

  public static final String SERIALIZED_NAME_ORDER_PAYMENT_METHOD = "order_payment_method";
  @SerializedName(SERIALIZED_NAME_ORDER_PAYMENT_METHOD)
  private String orderPaymentMethod;

  public static final String SERIALIZED_NAME_ORDER_SHIPPING_METHOD = "order_shipping_method";
  @SerializedName(SERIALIZED_NAME_ORDER_SHIPPING_METHOD)
  private String orderShippingMethod;

  public static final String SERIALIZED_NAME_ORDER_STATUS = "order_status";
  @SerializedName(SERIALIZED_NAME_ORDER_STATUS)
  private String orderStatus;

  public static final String SERIALIZED_NAME_PRICES_INC_TAX = "prices_inc_tax";
  @SerializedName(SERIALIZED_NAME_PRICES_INC_TAX)
  private Boolean pricesIncTax = false;

  public static final String SERIALIZED_NAME_SEND_ADMIN_NOTIFICATIONS = "send_admin_notifications";
  @SerializedName(SERIALIZED_NAME_SEND_ADMIN_NOTIFICATIONS)
  private Boolean sendAdminNotifications = false;

  public static final String SERIALIZED_NAME_SEND_NOTIFICATIONS = "send_notifications";
  @SerializedName(SERIALIZED_NAME_SEND_NOTIFICATIONS)
  private Boolean sendNotifications = false;

  public static final String SERIALIZED_NAME_SHIPP_ADDRESS1 = "shipp_address_1";
  @SerializedName(SERIALIZED_NAME_SHIPP_ADDRESS1)
  private String shippAddress1;

  public static final String SERIALIZED_NAME_SHIPP_ADDRESS2 = "shipp_address_2";
  @SerializedName(SERIALIZED_NAME_SHIPP_ADDRESS2)
  private String shippAddress2;

  public static final String SERIALIZED_NAME_SHIPP_CITY = "shipp_city";
  @SerializedName(SERIALIZED_NAME_SHIPP_CITY)
  private String shippCity;

  public static final String SERIALIZED_NAME_SHIPP_COMPANY = "shipp_company";
  @SerializedName(SERIALIZED_NAME_SHIPP_COMPANY)
  private String shippCompany;

  public static final String SERIALIZED_NAME_SHIPP_COUNTRY = "shipp_country";
  @SerializedName(SERIALIZED_NAME_SHIPP_COUNTRY)
  private String shippCountry;

  public static final String SERIALIZED_NAME_SHIPP_FAX = "shipp_fax";
  @SerializedName(SERIALIZED_NAME_SHIPP_FAX)
  private String shippFax;

  public static final String SERIALIZED_NAME_SHIPP_FIRST_NAME = "shipp_first_name";
  @SerializedName(SERIALIZED_NAME_SHIPP_FIRST_NAME)
  private String shippFirstName;

  public static final String SERIALIZED_NAME_SHIPP_LAST_NAME = "shipp_last_name";
  @SerializedName(SERIALIZED_NAME_SHIPP_LAST_NAME)
  private String shippLastName;

  public static final String SERIALIZED_NAME_SHIPP_PHONE = "shipp_phone";
  @SerializedName(SERIALIZED_NAME_SHIPP_PHONE)
  private String shippPhone;

  public static final String SERIALIZED_NAME_SHIPP_POSTCODE = "shipp_postcode";
  @SerializedName(SERIALIZED_NAME_SHIPP_POSTCODE)
  private String shippPostcode;

  public static final String SERIALIZED_NAME_SHIPP_STATE = "shipp_state";
  @SerializedName(SERIALIZED_NAME_SHIPP_STATE)
  private String shippState;

  public static final String SERIALIZED_NAME_SHIPPING_PRICE = "shipping_price";
  @SerializedName(SERIALIZED_NAME_SHIPPING_PRICE)
  private BigDecimal shippingPrice = new BigDecimal("0");

  public static final String SERIALIZED_NAME_SHIPPING_TAX = "shipping_tax";
  @SerializedName(SERIALIZED_NAME_SHIPPING_TAX)
  private BigDecimal shippingTax;

  public static final String SERIALIZED_NAME_STORE_ID = "store_id";
  @SerializedName(SERIALIZED_NAME_STORE_ID)
  private String storeId;

  public static final String SERIALIZED_NAME_SUBTOTAL_PRICE = "subtotal_price";
  @SerializedName(SERIALIZED_NAME_SUBTOTAL_PRICE)
  private BigDecimal subtotalPrice;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private String tags;

  public static final String SERIALIZED_NAME_TAX_PRICE = "tax_price";
  @SerializedName(SERIALIZED_NAME_TAX_PRICE)
  private BigDecimal taxPrice = new BigDecimal("0");

  public static final String SERIALIZED_NAME_TOTAL_PAID = "total_paid";
  @SerializedName(SERIALIZED_NAME_TOTAL_PAID)
  private BigDecimal totalPaid;

  public static final String SERIALIZED_NAME_TOTAL_PRICE = "total_price";
  @SerializedName(SERIALIZED_NAME_TOTAL_PRICE)
  private BigDecimal totalPrice;

  public static final String SERIALIZED_NAME_TOTAL_WEIGHT = "total_weight";
  @SerializedName(SERIALIZED_NAME_TOTAL_WEIGHT)
  private Integer totalWeight;

  public static final String SERIALIZED_NAME_TRANSACTION_ID = "transaction_id";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_ID)
  private String transactionId;

  public OrderAdd() {
  }

  public OrderAdd adminComment(String adminComment) {
    this.adminComment = adminComment;
    return this;
  }

  /**
   * Specifies admin&#39;s order comment
   * @return adminComment
   */
  @javax.annotation.Nullable
  public String getAdminComment() {
    return adminComment;
  }

  public void setAdminComment(String adminComment) {
    this.adminComment = adminComment;
  }


  public OrderAdd adminPrivateComment(String adminPrivateComment) {
    this.adminPrivateComment = adminPrivateComment;
    return this;
  }

  /**
   * Specifies private admin&#39;s order comment
   * @return adminPrivateComment
   */
  @javax.annotation.Nullable
  public String getAdminPrivateComment() {
    return adminPrivateComment;
  }

  public void setAdminPrivateComment(String adminPrivateComment) {
    this.adminPrivateComment = adminPrivateComment;
  }


  public OrderAdd billAddress1(String billAddress1) {
    this.billAddress1 = billAddress1;
    return this;
  }

  /**
   * Specifies first billing address
   * @return billAddress1
   */
  @javax.annotation.Nonnull
  public String getBillAddress1() {
    return billAddress1;
  }

  public void setBillAddress1(String billAddress1) {
    this.billAddress1 = billAddress1;
  }


  public OrderAdd billAddress2(String billAddress2) {
    this.billAddress2 = billAddress2;
    return this;
  }

  /**
   * Specifies second billing address
   * @return billAddress2
   */
  @javax.annotation.Nullable
  public String getBillAddress2() {
    return billAddress2;
  }

  public void setBillAddress2(String billAddress2) {
    this.billAddress2 = billAddress2;
  }


  public OrderAdd billCity(String billCity) {
    this.billCity = billCity;
    return this;
  }

  /**
   * Specifies billing city
   * @return billCity
   */
  @javax.annotation.Nonnull
  public String getBillCity() {
    return billCity;
  }

  public void setBillCity(String billCity) {
    this.billCity = billCity;
  }


  public OrderAdd billCompany(String billCompany) {
    this.billCompany = billCompany;
    return this;
  }

  /**
   * Specifies billing company
   * @return billCompany
   */
  @javax.annotation.Nullable
  public String getBillCompany() {
    return billCompany;
  }

  public void setBillCompany(String billCompany) {
    this.billCompany = billCompany;
  }


  public OrderAdd billCountry(String billCountry) {
    this.billCountry = billCountry;
    return this;
  }

  /**
   * Specifies billing country code
   * @return billCountry
   */
  @javax.annotation.Nonnull
  public String getBillCountry() {
    return billCountry;
  }

  public void setBillCountry(String billCountry) {
    this.billCountry = billCountry;
  }


  public OrderAdd billFax(String billFax) {
    this.billFax = billFax;
    return this;
  }

  /**
   * Specifies billing fax
   * @return billFax
   */
  @javax.annotation.Nullable
  public String getBillFax() {
    return billFax;
  }

  public void setBillFax(String billFax) {
    this.billFax = billFax;
  }


  public OrderAdd billFirstName(String billFirstName) {
    this.billFirstName = billFirstName;
    return this;
  }

  /**
   * Specifies billing first name
   * @return billFirstName
   */
  @javax.annotation.Nonnull
  public String getBillFirstName() {
    return billFirstName;
  }

  public void setBillFirstName(String billFirstName) {
    this.billFirstName = billFirstName;
  }


  public OrderAdd billLastName(String billLastName) {
    this.billLastName = billLastName;
    return this;
  }

  /**
   * Specifies billing last name
   * @return billLastName
   */
  @javax.annotation.Nonnull
  public String getBillLastName() {
    return billLastName;
  }

  public void setBillLastName(String billLastName) {
    this.billLastName = billLastName;
  }


  public OrderAdd billPhone(String billPhone) {
    this.billPhone = billPhone;
    return this;
  }

  /**
   * Specifies billing phone
   * @return billPhone
   */
  @javax.annotation.Nullable
  public String getBillPhone() {
    return billPhone;
  }

  public void setBillPhone(String billPhone) {
    this.billPhone = billPhone;
  }


  public OrderAdd billPostcode(String billPostcode) {
    this.billPostcode = billPostcode;
    return this;
  }

  /**
   * Specifies billing postcode
   * @return billPostcode
   */
  @javax.annotation.Nonnull
  public String getBillPostcode() {
    return billPostcode;
  }

  public void setBillPostcode(String billPostcode) {
    this.billPostcode = billPostcode;
  }


  public OrderAdd billState(String billState) {
    this.billState = billState;
    return this;
  }

  /**
   * Specifies billing state code
   * @return billState
   */
  @javax.annotation.Nonnull
  public String getBillState() {
    return billState;
  }

  public void setBillState(String billState) {
    this.billState = billState;
  }


  public OrderAdd channelId(String channelId) {
    this.channelId = channelId;
    return this;
  }

  /**
   * Channel ID
   * @return channelId
   */
  @javax.annotation.Nullable
  public String getChannelId() {
    return channelId;
  }

  public void setChannelId(String channelId) {
    this.channelId = channelId;
  }


  public OrderAdd clearCache(Boolean clearCache) {
    this.clearCache = clearCache;
    return this;
  }

  /**
   * Is cache clear required
   * @return clearCache
   */
  @javax.annotation.Nullable
  public Boolean getClearCache() {
    return clearCache;
  }

  public void setClearCache(Boolean clearCache) {
    this.clearCache = clearCache;
  }


  public OrderAdd comment(String comment) {
    this.comment = comment;
    return this;
  }

  /**
   * Specifies order comment
   * @return comment
   */
  @javax.annotation.Nullable
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }


  public OrderAdd couponDiscount(BigDecimal couponDiscount) {
    this.couponDiscount = couponDiscount;
    return this;
  }

  /**
   * Specifies order&#39;s coupon discount
   * @return couponDiscount
   */
  @javax.annotation.Nullable
  public BigDecimal getCouponDiscount() {
    return couponDiscount;
  }

  public void setCouponDiscount(BigDecimal couponDiscount) {
    this.couponDiscount = couponDiscount;
  }


  public OrderAdd coupons(List<String> coupons) {
    this.coupons = coupons;
    return this;
  }

  public OrderAdd addCouponsItem(String couponsItem) {
    if (this.coupons == null) {
      this.coupons = new ArrayList<>();
    }
    this.coupons.add(couponsItem);
    return this;
  }

  /**
   * Coupons that will be applied to order
   * @return coupons
   */
  @javax.annotation.Nullable
  public List<String> getCoupons() {
    return coupons;
  }

  public void setCoupons(List<String> coupons) {
    this.coupons = coupons;
  }


  public OrderAdd createInvoice(Boolean createInvoice) {
    this.createInvoice = createInvoice;
    return this;
  }

  /**
   * Defines whether the invoice is created automatically along with the order
   * @return createInvoice
   */
  @javax.annotation.Nullable
  public Boolean getCreateInvoice() {
    return createInvoice;
  }

  public void setCreateInvoice(Boolean createInvoice) {
    this.createInvoice = createInvoice;
  }


  public OrderAdd currency(String currency) {
    this.currency = currency;
    return this;
  }

  /**
   * Currency code of order
   * @return currency
   */
  @javax.annotation.Nullable
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public OrderAdd customerBirthday(String customerBirthday) {
    this.customerBirthday = customerBirthday;
    return this;
  }

  /**
   * Specifies customer’s birthday
   * @return customerBirthday
   */
  @javax.annotation.Nullable
  public String getCustomerBirthday() {
    return customerBirthday;
  }

  public void setCustomerBirthday(String customerBirthday) {
    this.customerBirthday = customerBirthday;
  }


  public OrderAdd customerEmail(String customerEmail) {
    this.customerEmail = customerEmail;
    return this;
  }

  /**
   * Defines the customer specified by email for whom order has to be created
   * @return customerEmail
   */
  @javax.annotation.Nonnull
  public String getCustomerEmail() {
    return customerEmail;
  }

  public void setCustomerEmail(String customerEmail) {
    this.customerEmail = customerEmail;
  }


  public OrderAdd customerFax(String customerFax) {
    this.customerFax = customerFax;
    return this;
  }

  /**
   * Specifies customer’s fax
   * @return customerFax
   */
  @javax.annotation.Nullable
  public String getCustomerFax() {
    return customerFax;
  }

  public void setCustomerFax(String customerFax) {
    this.customerFax = customerFax;
  }


  public OrderAdd customerFirstName(String customerFirstName) {
    this.customerFirstName = customerFirstName;
    return this;
  }

  /**
   * Specifies customer&#39;s first name
   * @return customerFirstName
   */
  @javax.annotation.Nullable
  public String getCustomerFirstName() {
    return customerFirstName;
  }

  public void setCustomerFirstName(String customerFirstName) {
    this.customerFirstName = customerFirstName;
  }


  public OrderAdd customerLastName(String customerLastName) {
    this.customerLastName = customerLastName;
    return this;
  }

  /**
   * Specifies customer’s last name
   * @return customerLastName
   */
  @javax.annotation.Nullable
  public String getCustomerLastName() {
    return customerLastName;
  }

  public void setCustomerLastName(String customerLastName) {
    this.customerLastName = customerLastName;
  }


  public OrderAdd customerPhone(String customerPhone) {
    this.customerPhone = customerPhone;
    return this;
  }

  /**
   * Specifies customer’s phone
   * @return customerPhone
   */
  @javax.annotation.Nullable
  public String getCustomerPhone() {
    return customerPhone;
  }

  public void setCustomerPhone(String customerPhone) {
    this.customerPhone = customerPhone;
  }


  public OrderAdd date(String date) {
    this.date = date;
    return this;
  }

  /**
   * Specifies an order creation date in format Y-m-d H:i:s
   * @return date
   */
  @javax.annotation.Nullable
  public String getDate() {
    return date;
  }

  public void setDate(String date) {
    this.date = date;
  }


  public OrderAdd dateFinished(String dateFinished) {
    this.dateFinished = dateFinished;
    return this;
  }

  /**
   * Specifies order&#39;s  finished date
   * @return dateFinished
   */
  @javax.annotation.Nullable
  public String getDateFinished() {
    return dateFinished;
  }

  public void setDateFinished(String dateFinished) {
    this.dateFinished = dateFinished;
  }


  public OrderAdd dateModified(String dateModified) {
    this.dateModified = dateModified;
    return this;
  }

  /**
   * Specifies order&#39;s  modification date
   * @return dateModified
   */
  @javax.annotation.Nullable
  public String getDateModified() {
    return dateModified;
  }

  public void setDateModified(String dateModified) {
    this.dateModified = dateModified;
  }


  public OrderAdd discount(BigDecimal discount) {
    this.discount = discount;
    return this;
  }

  /**
   * Specifies order&#39;s discount
   * @return discount
   */
  @javax.annotation.Nullable
  public BigDecimal getDiscount() {
    return discount;
  }

  public void setDiscount(BigDecimal discount) {
    this.discount = discount;
  }


  public OrderAdd externalSource(String externalSource) {
    this.externalSource = externalSource;
    return this;
  }

  /**
   * Identifying the system used to generate the order
   * @return externalSource
   */
  @javax.annotation.Nullable
  public String getExternalSource() {
    return externalSource;
  }

  public void setExternalSource(String externalSource) {
    this.externalSource = externalSource;
  }


  public OrderAdd financialStatus(String financialStatus) {
    this.financialStatus = financialStatus;
    return this;
  }

  /**
   * Create order with financial status
   * @return financialStatus
   */
  @javax.annotation.Nullable
  public String getFinancialStatus() {
    return financialStatus;
  }

  public void setFinancialStatus(String financialStatus) {
    this.financialStatus = financialStatus;
  }


  public OrderAdd fulfillmentStatus(String fulfillmentStatus) {
    this.fulfillmentStatus = fulfillmentStatus;
    return this;
  }

  /**
   * Create order with fulfillment status
   * @return fulfillmentStatus
   */
  @javax.annotation.Nullable
  public String getFulfillmentStatus() {
    return fulfillmentStatus;
  }

  public void setFulfillmentStatus(String fulfillmentStatus) {
    this.fulfillmentStatus = fulfillmentStatus;
  }


  public OrderAdd giftCertificateDiscount(BigDecimal giftCertificateDiscount) {
    this.giftCertificateDiscount = giftCertificateDiscount;
    return this;
  }

  /**
   * Discounts for order with gift certificates
   * @return giftCertificateDiscount
   */
  @javax.annotation.Nullable
  public BigDecimal getGiftCertificateDiscount() {
    return giftCertificateDiscount;
  }

  public void setGiftCertificateDiscount(BigDecimal giftCertificateDiscount) {
    this.giftCertificateDiscount = giftCertificateDiscount;
  }


  public OrderAdd id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Defines order&#39;s id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public OrderAdd inventoryBehaviour(String inventoryBehaviour) {
    this.inventoryBehaviour = inventoryBehaviour;
    return this;
  }

  /**
   * The behaviour to use when updating inventory.&lt;hr&gt;&lt;div style&#x3D;\&quot;font-style:normal\&quot;&gt;Values description:&lt;div style&#x3D;\&quot;margin-left: 2%; padding-top: 2%\&quot;&gt;&lt;div style&#x3D;\&quot;font-size:85%\&quot;&gt;&lt;b&gt;bypass&lt;/b&gt; &#x3D; Do not claim inventory &lt;/br&gt;&lt;/br&gt;&lt;b&gt;decrement_ignoring_policy&lt;/b&gt; &#x3D; Ignore the product&#39;s &lt;/br&gt; inventory policy and claim amounts&lt;/br&gt;&lt;/br&gt;&lt;b&gt;decrement_obeying_policy&lt;/b&gt; &#x3D;  Obey the product&#39;s &lt;/br&gt; inventory policy.&lt;/br&gt;&lt;/br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
   * @return inventoryBehaviour
   */
  @javax.annotation.Nullable
  public String getInventoryBehaviour() {
    return inventoryBehaviour;
  }

  public void setInventoryBehaviour(String inventoryBehaviour) {
    this.inventoryBehaviour = inventoryBehaviour;
  }


  public OrderAdd noteAttributes(List<OrderAddNoteAttributesInner> noteAttributes) {
    this.noteAttributes = noteAttributes;
    return this;
  }

  public OrderAdd addNoteAttributesItem(OrderAddNoteAttributesInner noteAttributesItem) {
    if (this.noteAttributes == null) {
      this.noteAttributes = new ArrayList<>();
    }
    this.noteAttributes.add(noteAttributesItem);
    return this;
  }

  /**
   * Defines note attributes
   * @return noteAttributes
   */
  @javax.annotation.Nullable
  public List<OrderAddNoteAttributesInner> getNoteAttributes() {
    return noteAttributes;
  }

  public void setNoteAttributes(List<OrderAddNoteAttributesInner> noteAttributes) {
    this.noteAttributes = noteAttributes;
  }


  public OrderAdd orderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

  /**
   * Defines the order id if it is supported by the cart
   * @return orderId
   */
  @javax.annotation.Nullable
  public String getOrderId() {
    return orderId;
  }

  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }


  public OrderAdd orderItem(List<OrderAddOrderItemInner> orderItem) {
    this.orderItem = orderItem;
    return this;
  }

  public OrderAdd addOrderItemItem(OrderAddOrderItemInner orderItemItem) {
    if (this.orderItem == null) {
      this.orderItem = new ArrayList<>();
    }
    this.orderItem.add(orderItemItem);
    return this;
  }

  /**
   * Get orderItem
   * @return orderItem
   */
  @javax.annotation.Nonnull
  public List<OrderAddOrderItemInner> getOrderItem() {
    return orderItem;
  }

  public void setOrderItem(List<OrderAddOrderItemInner> orderItem) {
    this.orderItem = orderItem;
  }


  public OrderAdd orderPaymentMethod(String orderPaymentMethod) {
    this.orderPaymentMethod = orderPaymentMethod;
    return this;
  }

  /**
   * Defines order payment method.&lt;br/&gt;Setting order_payment_method on Shopify will also change financial_status field value to &#39;paid&#39;
   * @return orderPaymentMethod
   */
  @javax.annotation.Nullable
  public String getOrderPaymentMethod() {
    return orderPaymentMethod;
  }

  public void setOrderPaymentMethod(String orderPaymentMethod) {
    this.orderPaymentMethod = orderPaymentMethod;
  }


  public OrderAdd orderShippingMethod(String orderShippingMethod) {
    this.orderShippingMethod = orderShippingMethod;
    return this;
  }

  /**
   * Defines order shipping method
   * @return orderShippingMethod
   */
  @javax.annotation.Nullable
  public String getOrderShippingMethod() {
    return orderShippingMethod;
  }

  public void setOrderShippingMethod(String orderShippingMethod) {
    this.orderShippingMethod = orderShippingMethod;
  }


  public OrderAdd orderStatus(String orderStatus) {
    this.orderStatus = orderStatus;
    return this;
  }

  /**
   * Defines order status.
   * @return orderStatus
   */
  @javax.annotation.Nonnull
  public String getOrderStatus() {
    return orderStatus;
  }

  public void setOrderStatus(String orderStatus) {
    this.orderStatus = orderStatus;
  }


  public OrderAdd pricesIncTax(Boolean pricesIncTax) {
    this.pricesIncTax = pricesIncTax;
    return this;
  }

  /**
   * Indicates whether prices and subtotal includes tax.
   * @return pricesIncTax
   */
  @javax.annotation.Nullable
  public Boolean getPricesIncTax() {
    return pricesIncTax;
  }

  public void setPricesIncTax(Boolean pricesIncTax) {
    this.pricesIncTax = pricesIncTax;
  }


  public OrderAdd sendAdminNotifications(Boolean sendAdminNotifications) {
    this.sendAdminNotifications = sendAdminNotifications;
    return this;
  }

  /**
   * Notify admin when new order was created.
   * @return sendAdminNotifications
   */
  @javax.annotation.Nullable
  public Boolean getSendAdminNotifications() {
    return sendAdminNotifications;
  }

  public void setSendAdminNotifications(Boolean sendAdminNotifications) {
    this.sendAdminNotifications = sendAdminNotifications;
  }


  public OrderAdd sendNotifications(Boolean sendNotifications) {
    this.sendNotifications = sendNotifications;
    return this;
  }

  /**
   * Send notifications to customer after order was created
   * @return sendNotifications
   */
  @javax.annotation.Nullable
  public Boolean getSendNotifications() {
    return sendNotifications;
  }

  public void setSendNotifications(Boolean sendNotifications) {
    this.sendNotifications = sendNotifications;
  }


  public OrderAdd shippAddress1(String shippAddress1) {
    this.shippAddress1 = shippAddress1;
    return this;
  }

  /**
   * Specifies first shipping address
   * @return shippAddress1
   */
  @javax.annotation.Nullable
  public String getShippAddress1() {
    return shippAddress1;
  }

  public void setShippAddress1(String shippAddress1) {
    this.shippAddress1 = shippAddress1;
  }


  public OrderAdd shippAddress2(String shippAddress2) {
    this.shippAddress2 = shippAddress2;
    return this;
  }

  /**
   * Specifies second address line of a shipping street address
   * @return shippAddress2
   */
  @javax.annotation.Nullable
  public String getShippAddress2() {
    return shippAddress2;
  }

  public void setShippAddress2(String shippAddress2) {
    this.shippAddress2 = shippAddress2;
  }


  public OrderAdd shippCity(String shippCity) {
    this.shippCity = shippCity;
    return this;
  }

  /**
   * Specifies shipping city
   * @return shippCity
   */
  @javax.annotation.Nullable
  public String getShippCity() {
    return shippCity;
  }

  public void setShippCity(String shippCity) {
    this.shippCity = shippCity;
  }


  public OrderAdd shippCompany(String shippCompany) {
    this.shippCompany = shippCompany;
    return this;
  }

  /**
   * Specifies shipping company
   * @return shippCompany
   */
  @javax.annotation.Nullable
  public String getShippCompany() {
    return shippCompany;
  }

  public void setShippCompany(String shippCompany) {
    this.shippCompany = shippCompany;
  }


  public OrderAdd shippCountry(String shippCountry) {
    this.shippCountry = shippCountry;
    return this;
  }

  /**
   * Specifies shipping country code
   * @return shippCountry
   */
  @javax.annotation.Nullable
  public String getShippCountry() {
    return shippCountry;
  }

  public void setShippCountry(String shippCountry) {
    this.shippCountry = shippCountry;
  }


  public OrderAdd shippFax(String shippFax) {
    this.shippFax = shippFax;
    return this;
  }

  /**
   * Specifies shipping fax
   * @return shippFax
   */
  @javax.annotation.Nullable
  public String getShippFax() {
    return shippFax;
  }

  public void setShippFax(String shippFax) {
    this.shippFax = shippFax;
  }


  public OrderAdd shippFirstName(String shippFirstName) {
    this.shippFirstName = shippFirstName;
    return this;
  }

  /**
   * Specifies shipping first name
   * @return shippFirstName
   */
  @javax.annotation.Nullable
  public String getShippFirstName() {
    return shippFirstName;
  }

  public void setShippFirstName(String shippFirstName) {
    this.shippFirstName = shippFirstName;
  }


  public OrderAdd shippLastName(String shippLastName) {
    this.shippLastName = shippLastName;
    return this;
  }

  /**
   * Specifies shipping last name
   * @return shippLastName
   */
  @javax.annotation.Nullable
  public String getShippLastName() {
    return shippLastName;
  }

  public void setShippLastName(String shippLastName) {
    this.shippLastName = shippLastName;
  }


  public OrderAdd shippPhone(String shippPhone) {
    this.shippPhone = shippPhone;
    return this;
  }

  /**
   * Specifies shipping phone
   * @return shippPhone
   */
  @javax.annotation.Nullable
  public String getShippPhone() {
    return shippPhone;
  }

  public void setShippPhone(String shippPhone) {
    this.shippPhone = shippPhone;
  }


  public OrderAdd shippPostcode(String shippPostcode) {
    this.shippPostcode = shippPostcode;
    return this;
  }

  /**
   * Specifies shipping postcode
   * @return shippPostcode
   */
  @javax.annotation.Nullable
  public String getShippPostcode() {
    return shippPostcode;
  }

  public void setShippPostcode(String shippPostcode) {
    this.shippPostcode = shippPostcode;
  }


  public OrderAdd shippState(String shippState) {
    this.shippState = shippState;
    return this;
  }

  /**
   * Specifies shipping state code
   * @return shippState
   */
  @javax.annotation.Nullable
  public String getShippState() {
    return shippState;
  }

  public void setShippState(String shippState) {
    this.shippState = shippState;
  }


  public OrderAdd shippingPrice(BigDecimal shippingPrice) {
    this.shippingPrice = shippingPrice;
    return this;
  }

  /**
   * Specifies order&#39;s shipping price
   * @return shippingPrice
   */
  @javax.annotation.Nullable
  public BigDecimal getShippingPrice() {
    return shippingPrice;
  }

  public void setShippingPrice(BigDecimal shippingPrice) {
    this.shippingPrice = shippingPrice;
  }


  public OrderAdd shippingTax(BigDecimal shippingTax) {
    this.shippingTax = shippingTax;
    return this;
  }

  /**
   * Specifies order&#39;s shipping price tax
   * @return shippingTax
   */
  @javax.annotation.Nullable
  public BigDecimal getShippingTax() {
    return shippingTax;
  }

  public void setShippingTax(BigDecimal shippingTax) {
    this.shippingTax = shippingTax;
  }


  public OrderAdd storeId(String storeId) {
    this.storeId = storeId;
    return this;
  }

  /**
   * Defines store id where the order should be assigned
   * @return storeId
   */
  @javax.annotation.Nullable
  public String getStoreId() {
    return storeId;
  }

  public void setStoreId(String storeId) {
    this.storeId = storeId;
  }


  public OrderAdd subtotalPrice(BigDecimal subtotalPrice) {
    this.subtotalPrice = subtotalPrice;
    return this;
  }

  /**
   * Total price of all ordered products multiplied by their number, excluding tax, shipping price and discounts
   * @return subtotalPrice
   */
  @javax.annotation.Nullable
  public BigDecimal getSubtotalPrice() {
    return subtotalPrice;
  }

  public void setSubtotalPrice(BigDecimal subtotalPrice) {
    this.subtotalPrice = subtotalPrice;
  }


  public OrderAdd tags(String tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Order tags
   * @return tags
   */
  @javax.annotation.Nullable
  public String getTags() {
    return tags;
  }

  public void setTags(String tags) {
    this.tags = tags;
  }


  public OrderAdd taxPrice(BigDecimal taxPrice) {
    this.taxPrice = taxPrice;
    return this;
  }

  /**
   * The value of tax cost for order
   * @return taxPrice
   */
  @javax.annotation.Nullable
  public BigDecimal getTaxPrice() {
    return taxPrice;
  }

  public void setTaxPrice(BigDecimal taxPrice) {
    this.taxPrice = taxPrice;
  }


  public OrderAdd totalPaid(BigDecimal totalPaid) {
    this.totalPaid = totalPaid;
    return this;
  }

  /**
   * Defines total paid amount for the order
   * @return totalPaid
   */
  @javax.annotation.Nullable
  public BigDecimal getTotalPaid() {
    return totalPaid;
  }

  public void setTotalPaid(BigDecimal totalPaid) {
    this.totalPaid = totalPaid;
  }


  public OrderAdd totalPrice(BigDecimal totalPrice) {
    this.totalPrice = totalPrice;
    return this;
  }

  /**
   * Defines order&#39;s total price
   * @return totalPrice
   */
  @javax.annotation.Nullable
  public BigDecimal getTotalPrice() {
    return totalPrice;
  }

  public void setTotalPrice(BigDecimal totalPrice) {
    this.totalPrice = totalPrice;
  }


  public OrderAdd totalWeight(Integer totalWeight) {
    this.totalWeight = totalWeight;
    return this;
  }

  /**
   * Defines the sum of all line item weights in grams for the order
   * @return totalWeight
   */
  @javax.annotation.Nullable
  public Integer getTotalWeight() {
    return totalWeight;
  }

  public void setTotalWeight(Integer totalWeight) {
    this.totalWeight = totalWeight;
  }


  public OrderAdd transactionId(String transactionId) {
    this.transactionId = transactionId;
    return this;
  }

  /**
   * Payment transaction id
   * @return transactionId
   */
  @javax.annotation.Nullable
  public String getTransactionId() {
    return transactionId;
  }

  public void setTransactionId(String transactionId) {
    this.transactionId = transactionId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderAdd orderAdd = (OrderAdd) o;
    return Objects.equals(this.adminComment, orderAdd.adminComment) &&
        Objects.equals(this.adminPrivateComment, orderAdd.adminPrivateComment) &&
        Objects.equals(this.billAddress1, orderAdd.billAddress1) &&
        Objects.equals(this.billAddress2, orderAdd.billAddress2) &&
        Objects.equals(this.billCity, orderAdd.billCity) &&
        Objects.equals(this.billCompany, orderAdd.billCompany) &&
        Objects.equals(this.billCountry, orderAdd.billCountry) &&
        Objects.equals(this.billFax, orderAdd.billFax) &&
        Objects.equals(this.billFirstName, orderAdd.billFirstName) &&
        Objects.equals(this.billLastName, orderAdd.billLastName) &&
        Objects.equals(this.billPhone, orderAdd.billPhone) &&
        Objects.equals(this.billPostcode, orderAdd.billPostcode) &&
        Objects.equals(this.billState, orderAdd.billState) &&
        Objects.equals(this.channelId, orderAdd.channelId) &&
        Objects.equals(this.clearCache, orderAdd.clearCache) &&
        Objects.equals(this.comment, orderAdd.comment) &&
        Objects.equals(this.couponDiscount, orderAdd.couponDiscount) &&
        Objects.equals(this.coupons, orderAdd.coupons) &&
        Objects.equals(this.createInvoice, orderAdd.createInvoice) &&
        Objects.equals(this.currency, orderAdd.currency) &&
        Objects.equals(this.customerBirthday, orderAdd.customerBirthday) &&
        Objects.equals(this.customerEmail, orderAdd.customerEmail) &&
        Objects.equals(this.customerFax, orderAdd.customerFax) &&
        Objects.equals(this.customerFirstName, orderAdd.customerFirstName) &&
        Objects.equals(this.customerLastName, orderAdd.customerLastName) &&
        Objects.equals(this.customerPhone, orderAdd.customerPhone) &&
        Objects.equals(this.date, orderAdd.date) &&
        Objects.equals(this.dateFinished, orderAdd.dateFinished) &&
        Objects.equals(this.dateModified, orderAdd.dateModified) &&
        Objects.equals(this.discount, orderAdd.discount) &&
        Objects.equals(this.externalSource, orderAdd.externalSource) &&
        Objects.equals(this.financialStatus, orderAdd.financialStatus) &&
        Objects.equals(this.fulfillmentStatus, orderAdd.fulfillmentStatus) &&
        Objects.equals(this.giftCertificateDiscount, orderAdd.giftCertificateDiscount) &&
        Objects.equals(this.id, orderAdd.id) &&
        Objects.equals(this.inventoryBehaviour, orderAdd.inventoryBehaviour) &&
        Objects.equals(this.noteAttributes, orderAdd.noteAttributes) &&
        Objects.equals(this.orderId, orderAdd.orderId) &&
        Objects.equals(this.orderItem, orderAdd.orderItem) &&
        Objects.equals(this.orderPaymentMethod, orderAdd.orderPaymentMethod) &&
        Objects.equals(this.orderShippingMethod, orderAdd.orderShippingMethod) &&
        Objects.equals(this.orderStatus, orderAdd.orderStatus) &&
        Objects.equals(this.pricesIncTax, orderAdd.pricesIncTax) &&
        Objects.equals(this.sendAdminNotifications, orderAdd.sendAdminNotifications) &&
        Objects.equals(this.sendNotifications, orderAdd.sendNotifications) &&
        Objects.equals(this.shippAddress1, orderAdd.shippAddress1) &&
        Objects.equals(this.shippAddress2, orderAdd.shippAddress2) &&
        Objects.equals(this.shippCity, orderAdd.shippCity) &&
        Objects.equals(this.shippCompany, orderAdd.shippCompany) &&
        Objects.equals(this.shippCountry, orderAdd.shippCountry) &&
        Objects.equals(this.shippFax, orderAdd.shippFax) &&
        Objects.equals(this.shippFirstName, orderAdd.shippFirstName) &&
        Objects.equals(this.shippLastName, orderAdd.shippLastName) &&
        Objects.equals(this.shippPhone, orderAdd.shippPhone) &&
        Objects.equals(this.shippPostcode, orderAdd.shippPostcode) &&
        Objects.equals(this.shippState, orderAdd.shippState) &&
        Objects.equals(this.shippingPrice, orderAdd.shippingPrice) &&
        Objects.equals(this.shippingTax, orderAdd.shippingTax) &&
        Objects.equals(this.storeId, orderAdd.storeId) &&
        Objects.equals(this.subtotalPrice, orderAdd.subtotalPrice) &&
        Objects.equals(this.tags, orderAdd.tags) &&
        Objects.equals(this.taxPrice, orderAdd.taxPrice) &&
        Objects.equals(this.totalPaid, orderAdd.totalPaid) &&
        Objects.equals(this.totalPrice, orderAdd.totalPrice) &&
        Objects.equals(this.totalWeight, orderAdd.totalWeight) &&
        Objects.equals(this.transactionId, orderAdd.transactionId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adminComment, adminPrivateComment, billAddress1, billAddress2, billCity, billCompany, billCountry, billFax, billFirstName, billLastName, billPhone, billPostcode, billState, channelId, clearCache, comment, couponDiscount, coupons, createInvoice, currency, customerBirthday, customerEmail, customerFax, customerFirstName, customerLastName, customerPhone, date, dateFinished, dateModified, discount, externalSource, financialStatus, fulfillmentStatus, giftCertificateDiscount, id, inventoryBehaviour, noteAttributes, orderId, orderItem, orderPaymentMethod, orderShippingMethod, orderStatus, pricesIncTax, sendAdminNotifications, sendNotifications, shippAddress1, shippAddress2, shippCity, shippCompany, shippCountry, shippFax, shippFirstName, shippLastName, shippPhone, shippPostcode, shippState, shippingPrice, shippingTax, storeId, subtotalPrice, tags, taxPrice, totalPaid, totalPrice, totalWeight, transactionId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderAdd {\n");
    sb.append("    adminComment: ").append(toIndentedString(adminComment)).append("\n");
    sb.append("    adminPrivateComment: ").append(toIndentedString(adminPrivateComment)).append("\n");
    sb.append("    billAddress1: ").append(toIndentedString(billAddress1)).append("\n");
    sb.append("    billAddress2: ").append(toIndentedString(billAddress2)).append("\n");
    sb.append("    billCity: ").append(toIndentedString(billCity)).append("\n");
    sb.append("    billCompany: ").append(toIndentedString(billCompany)).append("\n");
    sb.append("    billCountry: ").append(toIndentedString(billCountry)).append("\n");
    sb.append("    billFax: ").append(toIndentedString(billFax)).append("\n");
    sb.append("    billFirstName: ").append(toIndentedString(billFirstName)).append("\n");
    sb.append("    billLastName: ").append(toIndentedString(billLastName)).append("\n");
    sb.append("    billPhone: ").append(toIndentedString(billPhone)).append("\n");
    sb.append("    billPostcode: ").append(toIndentedString(billPostcode)).append("\n");
    sb.append("    billState: ").append(toIndentedString(billState)).append("\n");
    sb.append("    channelId: ").append(toIndentedString(channelId)).append("\n");
    sb.append("    clearCache: ").append(toIndentedString(clearCache)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    couponDiscount: ").append(toIndentedString(couponDiscount)).append("\n");
    sb.append("    coupons: ").append(toIndentedString(coupons)).append("\n");
    sb.append("    createInvoice: ").append(toIndentedString(createInvoice)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    customerBirthday: ").append(toIndentedString(customerBirthday)).append("\n");
    sb.append("    customerEmail: ").append(toIndentedString(customerEmail)).append("\n");
    sb.append("    customerFax: ").append(toIndentedString(customerFax)).append("\n");
    sb.append("    customerFirstName: ").append(toIndentedString(customerFirstName)).append("\n");
    sb.append("    customerLastName: ").append(toIndentedString(customerLastName)).append("\n");
    sb.append("    customerPhone: ").append(toIndentedString(customerPhone)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    dateFinished: ").append(toIndentedString(dateFinished)).append("\n");
    sb.append("    dateModified: ").append(toIndentedString(dateModified)).append("\n");
    sb.append("    discount: ").append(toIndentedString(discount)).append("\n");
    sb.append("    externalSource: ").append(toIndentedString(externalSource)).append("\n");
    sb.append("    financialStatus: ").append(toIndentedString(financialStatus)).append("\n");
    sb.append("    fulfillmentStatus: ").append(toIndentedString(fulfillmentStatus)).append("\n");
    sb.append("    giftCertificateDiscount: ").append(toIndentedString(giftCertificateDiscount)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    inventoryBehaviour: ").append(toIndentedString(inventoryBehaviour)).append("\n");
    sb.append("    noteAttributes: ").append(toIndentedString(noteAttributes)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    orderItem: ").append(toIndentedString(orderItem)).append("\n");
    sb.append("    orderPaymentMethod: ").append(toIndentedString(orderPaymentMethod)).append("\n");
    sb.append("    orderShippingMethod: ").append(toIndentedString(orderShippingMethod)).append("\n");
    sb.append("    orderStatus: ").append(toIndentedString(orderStatus)).append("\n");
    sb.append("    pricesIncTax: ").append(toIndentedString(pricesIncTax)).append("\n");
    sb.append("    sendAdminNotifications: ").append(toIndentedString(sendAdminNotifications)).append("\n");
    sb.append("    sendNotifications: ").append(toIndentedString(sendNotifications)).append("\n");
    sb.append("    shippAddress1: ").append(toIndentedString(shippAddress1)).append("\n");
    sb.append("    shippAddress2: ").append(toIndentedString(shippAddress2)).append("\n");
    sb.append("    shippCity: ").append(toIndentedString(shippCity)).append("\n");
    sb.append("    shippCompany: ").append(toIndentedString(shippCompany)).append("\n");
    sb.append("    shippCountry: ").append(toIndentedString(shippCountry)).append("\n");
    sb.append("    shippFax: ").append(toIndentedString(shippFax)).append("\n");
    sb.append("    shippFirstName: ").append(toIndentedString(shippFirstName)).append("\n");
    sb.append("    shippLastName: ").append(toIndentedString(shippLastName)).append("\n");
    sb.append("    shippPhone: ").append(toIndentedString(shippPhone)).append("\n");
    sb.append("    shippPostcode: ").append(toIndentedString(shippPostcode)).append("\n");
    sb.append("    shippState: ").append(toIndentedString(shippState)).append("\n");
    sb.append("    shippingPrice: ").append(toIndentedString(shippingPrice)).append("\n");
    sb.append("    shippingTax: ").append(toIndentedString(shippingTax)).append("\n");
    sb.append("    storeId: ").append(toIndentedString(storeId)).append("\n");
    sb.append("    subtotalPrice: ").append(toIndentedString(subtotalPrice)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    taxPrice: ").append(toIndentedString(taxPrice)).append("\n");
    sb.append("    totalPaid: ").append(toIndentedString(totalPaid)).append("\n");
    sb.append("    totalPrice: ").append(toIndentedString(totalPrice)).append("\n");
    sb.append("    totalWeight: ").append(toIndentedString(totalWeight)).append("\n");
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("admin_comment");
    openapiFields.add("admin_private_comment");
    openapiFields.add("bill_address_1");
    openapiFields.add("bill_address_2");
    openapiFields.add("bill_city");
    openapiFields.add("bill_company");
    openapiFields.add("bill_country");
    openapiFields.add("bill_fax");
    openapiFields.add("bill_first_name");
    openapiFields.add("bill_last_name");
    openapiFields.add("bill_phone");
    openapiFields.add("bill_postcode");
    openapiFields.add("bill_state");
    openapiFields.add("channel_id");
    openapiFields.add("clear_cache");
    openapiFields.add("comment");
    openapiFields.add("coupon_discount");
    openapiFields.add("coupons");
    openapiFields.add("create_invoice");
    openapiFields.add("currency");
    openapiFields.add("customer_birthday");
    openapiFields.add("customer_email");
    openapiFields.add("customer_fax");
    openapiFields.add("customer_first_name");
    openapiFields.add("customer_last_name");
    openapiFields.add("customer_phone");
    openapiFields.add("date");
    openapiFields.add("date_finished");
    openapiFields.add("date_modified");
    openapiFields.add("discount");
    openapiFields.add("external_source");
    openapiFields.add("financial_status");
    openapiFields.add("fulfillment_status");
    openapiFields.add("gift_certificate_discount");
    openapiFields.add("id");
    openapiFields.add("inventory_behaviour");
    openapiFields.add("note_attributes");
    openapiFields.add("order_id");
    openapiFields.add("order_item");
    openapiFields.add("order_payment_method");
    openapiFields.add("order_shipping_method");
    openapiFields.add("order_status");
    openapiFields.add("prices_inc_tax");
    openapiFields.add("send_admin_notifications");
    openapiFields.add("send_notifications");
    openapiFields.add("shipp_address_1");
    openapiFields.add("shipp_address_2");
    openapiFields.add("shipp_city");
    openapiFields.add("shipp_company");
    openapiFields.add("shipp_country");
    openapiFields.add("shipp_fax");
    openapiFields.add("shipp_first_name");
    openapiFields.add("shipp_last_name");
    openapiFields.add("shipp_phone");
    openapiFields.add("shipp_postcode");
    openapiFields.add("shipp_state");
    openapiFields.add("shipping_price");
    openapiFields.add("shipping_tax");
    openapiFields.add("store_id");
    openapiFields.add("subtotal_price");
    openapiFields.add("tags");
    openapiFields.add("tax_price");
    openapiFields.add("total_paid");
    openapiFields.add("total_price");
    openapiFields.add("total_weight");
    openapiFields.add("transaction_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("bill_address_1");
    openapiRequiredFields.add("bill_city");
    openapiRequiredFields.add("bill_country");
    openapiRequiredFields.add("bill_first_name");
    openapiRequiredFields.add("bill_last_name");
    openapiRequiredFields.add("bill_postcode");
    openapiRequiredFields.add("bill_state");
    openapiRequiredFields.add("customer_email");
    openapiRequiredFields.add("order_item");
    openapiRequiredFields.add("order_status");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to OrderAdd
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OrderAdd.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrderAdd is not found in the empty JSON string", OrderAdd.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OrderAdd.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OrderAdd` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : OrderAdd.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("admin_comment") != null && !jsonObj.get("admin_comment").isJsonNull()) && !jsonObj.get("admin_comment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `admin_comment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("admin_comment").toString()));
      }
      if ((jsonObj.get("admin_private_comment") != null && !jsonObj.get("admin_private_comment").isJsonNull()) && !jsonObj.get("admin_private_comment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `admin_private_comment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("admin_private_comment").toString()));
      }
      if (!jsonObj.get("bill_address_1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bill_address_1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bill_address_1").toString()));
      }
      if ((jsonObj.get("bill_address_2") != null && !jsonObj.get("bill_address_2").isJsonNull()) && !jsonObj.get("bill_address_2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bill_address_2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bill_address_2").toString()));
      }
      if (!jsonObj.get("bill_city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bill_city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bill_city").toString()));
      }
      if ((jsonObj.get("bill_company") != null && !jsonObj.get("bill_company").isJsonNull()) && !jsonObj.get("bill_company").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bill_company` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bill_company").toString()));
      }
      if (!jsonObj.get("bill_country").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bill_country` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bill_country").toString()));
      }
      if ((jsonObj.get("bill_fax") != null && !jsonObj.get("bill_fax").isJsonNull()) && !jsonObj.get("bill_fax").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bill_fax` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bill_fax").toString()));
      }
      if (!jsonObj.get("bill_first_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bill_first_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bill_first_name").toString()));
      }
      if (!jsonObj.get("bill_last_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bill_last_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bill_last_name").toString()));
      }
      if ((jsonObj.get("bill_phone") != null && !jsonObj.get("bill_phone").isJsonNull()) && !jsonObj.get("bill_phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bill_phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bill_phone").toString()));
      }
      if (!jsonObj.get("bill_postcode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bill_postcode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bill_postcode").toString()));
      }
      if (!jsonObj.get("bill_state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bill_state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bill_state").toString()));
      }
      if ((jsonObj.get("channel_id") != null && !jsonObj.get("channel_id").isJsonNull()) && !jsonObj.get("channel_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `channel_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("channel_id").toString()));
      }
      if ((jsonObj.get("comment") != null && !jsonObj.get("comment").isJsonNull()) && !jsonObj.get("comment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `comment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("comment").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("coupons") != null && !jsonObj.get("coupons").isJsonNull() && !jsonObj.get("coupons").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `coupons` to be an array in the JSON string but got `%s`", jsonObj.get("coupons").toString()));
      }
      if ((jsonObj.get("currency") != null && !jsonObj.get("currency").isJsonNull()) && !jsonObj.get("currency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currency").toString()));
      }
      if ((jsonObj.get("customer_birthday") != null && !jsonObj.get("customer_birthday").isJsonNull()) && !jsonObj.get("customer_birthday").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customer_birthday` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customer_birthday").toString()));
      }
      if (!jsonObj.get("customer_email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customer_email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customer_email").toString()));
      }
      if ((jsonObj.get("customer_fax") != null && !jsonObj.get("customer_fax").isJsonNull()) && !jsonObj.get("customer_fax").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customer_fax` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customer_fax").toString()));
      }
      if ((jsonObj.get("customer_first_name") != null && !jsonObj.get("customer_first_name").isJsonNull()) && !jsonObj.get("customer_first_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customer_first_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customer_first_name").toString()));
      }
      if ((jsonObj.get("customer_last_name") != null && !jsonObj.get("customer_last_name").isJsonNull()) && !jsonObj.get("customer_last_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customer_last_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customer_last_name").toString()));
      }
      if ((jsonObj.get("customer_phone") != null && !jsonObj.get("customer_phone").isJsonNull()) && !jsonObj.get("customer_phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customer_phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customer_phone").toString()));
      }
      if ((jsonObj.get("date") != null && !jsonObj.get("date").isJsonNull()) && !jsonObj.get("date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("date").toString()));
      }
      if ((jsonObj.get("date_finished") != null && !jsonObj.get("date_finished").isJsonNull()) && !jsonObj.get("date_finished").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `date_finished` to be a primitive type in the JSON string but got `%s`", jsonObj.get("date_finished").toString()));
      }
      if ((jsonObj.get("date_modified") != null && !jsonObj.get("date_modified").isJsonNull()) && !jsonObj.get("date_modified").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `date_modified` to be a primitive type in the JSON string but got `%s`", jsonObj.get("date_modified").toString()));
      }
      if ((jsonObj.get("external_source") != null && !jsonObj.get("external_source").isJsonNull()) && !jsonObj.get("external_source").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `external_source` to be a primitive type in the JSON string but got `%s`", jsonObj.get("external_source").toString()));
      }
      if ((jsonObj.get("financial_status") != null && !jsonObj.get("financial_status").isJsonNull()) && !jsonObj.get("financial_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `financial_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("financial_status").toString()));
      }
      if ((jsonObj.get("fulfillment_status") != null && !jsonObj.get("fulfillment_status").isJsonNull()) && !jsonObj.get("fulfillment_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fulfillment_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fulfillment_status").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("inventory_behaviour") != null && !jsonObj.get("inventory_behaviour").isJsonNull()) && !jsonObj.get("inventory_behaviour").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `inventory_behaviour` to be a primitive type in the JSON string but got `%s`", jsonObj.get("inventory_behaviour").toString()));
      }
      if (jsonObj.get("note_attributes") != null && !jsonObj.get("note_attributes").isJsonNull()) {
        JsonArray jsonArraynoteAttributes = jsonObj.getAsJsonArray("note_attributes");
        if (jsonArraynoteAttributes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("note_attributes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `note_attributes` to be an array in the JSON string but got `%s`", jsonObj.get("note_attributes").toString()));
          }

          // validate the optional field `note_attributes` (array)
          for (int i = 0; i < jsonArraynoteAttributes.size(); i++) {
            OrderAddNoteAttributesInner.validateJsonElement(jsonArraynoteAttributes.get(i));
          };
        }
      }
      if ((jsonObj.get("order_id") != null && !jsonObj.get("order_id").isJsonNull()) && !jsonObj.get("order_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `order_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("order_id").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("order_item").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `order_item` to be an array in the JSON string but got `%s`", jsonObj.get("order_item").toString()));
      }

      JsonArray jsonArrayorderItem = jsonObj.getAsJsonArray("order_item");
      // validate the required field `order_item` (array)
      for (int i = 0; i < jsonArrayorderItem.size(); i++) {
        OrderAddOrderItemInner.validateJsonElement(jsonArrayorderItem.get(i));
      };
      if ((jsonObj.get("order_payment_method") != null && !jsonObj.get("order_payment_method").isJsonNull()) && !jsonObj.get("order_payment_method").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `order_payment_method` to be a primitive type in the JSON string but got `%s`", jsonObj.get("order_payment_method").toString()));
      }
      if ((jsonObj.get("order_shipping_method") != null && !jsonObj.get("order_shipping_method").isJsonNull()) && !jsonObj.get("order_shipping_method").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `order_shipping_method` to be a primitive type in the JSON string but got `%s`", jsonObj.get("order_shipping_method").toString()));
      }
      if (!jsonObj.get("order_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `order_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("order_status").toString()));
      }
      if ((jsonObj.get("shipp_address_1") != null && !jsonObj.get("shipp_address_1").isJsonNull()) && !jsonObj.get("shipp_address_1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipp_address_1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipp_address_1").toString()));
      }
      if ((jsonObj.get("shipp_address_2") != null && !jsonObj.get("shipp_address_2").isJsonNull()) && !jsonObj.get("shipp_address_2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipp_address_2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipp_address_2").toString()));
      }
      if ((jsonObj.get("shipp_city") != null && !jsonObj.get("shipp_city").isJsonNull()) && !jsonObj.get("shipp_city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipp_city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipp_city").toString()));
      }
      if ((jsonObj.get("shipp_company") != null && !jsonObj.get("shipp_company").isJsonNull()) && !jsonObj.get("shipp_company").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipp_company` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipp_company").toString()));
      }
      if ((jsonObj.get("shipp_country") != null && !jsonObj.get("shipp_country").isJsonNull()) && !jsonObj.get("shipp_country").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipp_country` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipp_country").toString()));
      }
      if ((jsonObj.get("shipp_fax") != null && !jsonObj.get("shipp_fax").isJsonNull()) && !jsonObj.get("shipp_fax").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipp_fax` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipp_fax").toString()));
      }
      if ((jsonObj.get("shipp_first_name") != null && !jsonObj.get("shipp_first_name").isJsonNull()) && !jsonObj.get("shipp_first_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipp_first_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipp_first_name").toString()));
      }
      if ((jsonObj.get("shipp_last_name") != null && !jsonObj.get("shipp_last_name").isJsonNull()) && !jsonObj.get("shipp_last_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipp_last_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipp_last_name").toString()));
      }
      if ((jsonObj.get("shipp_phone") != null && !jsonObj.get("shipp_phone").isJsonNull()) && !jsonObj.get("shipp_phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipp_phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipp_phone").toString()));
      }
      if ((jsonObj.get("shipp_postcode") != null && !jsonObj.get("shipp_postcode").isJsonNull()) && !jsonObj.get("shipp_postcode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipp_postcode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipp_postcode").toString()));
      }
      if ((jsonObj.get("shipp_state") != null && !jsonObj.get("shipp_state").isJsonNull()) && !jsonObj.get("shipp_state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipp_state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipp_state").toString()));
      }
      if ((jsonObj.get("store_id") != null && !jsonObj.get("store_id").isJsonNull()) && !jsonObj.get("store_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `store_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("store_id").toString()));
      }
      if ((jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) && !jsonObj.get("tags").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tags` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tags").toString()));
      }
      if ((jsonObj.get("transaction_id") != null && !jsonObj.get("transaction_id").isJsonNull()) && !jsonObj.get("transaction_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transaction_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transaction_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrderAdd.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrderAdd' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrderAdd> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrderAdd.class));

       return (TypeAdapter<T>) new TypeAdapter<OrderAdd>() {
           @Override
           public void write(JsonWriter out, OrderAdd value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OrderAdd read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of OrderAdd given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of OrderAdd
   * @throws IOException if the JSON string is invalid with respect to OrderAdd
   */
  public static OrderAdd fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrderAdd.class);
  }

  /**
   * Convert an instance of OrderAdd to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

