/*
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CouponCondition
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:12:09.268126-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CouponCondition {
  public static final String SERIALIZED_NAME_ADDITIONAL_FIELDS = "additional_fields";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_FIELDS)
  private Object additionalFields;

  public static final String SERIALIZED_NAME_CUSTOM_FIELDS = "custom_fields";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELDS)
  private Object customFields;

  public static final String SERIALIZED_NAME_ENTITY = "entity";
  @SerializedName(SERIALIZED_NAME_ENTITY)
  private String entity;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_KEY = "key";
  @SerializedName(SERIALIZED_NAME_KEY)
  private String key;

  public static final String SERIALIZED_NAME_LOGIC_OPERATOR = "logic_operator";
  @SerializedName(SERIALIZED_NAME_LOGIC_OPERATOR)
  private String logicOperator;

  public static final String SERIALIZED_NAME_MATCH_ITEMS = "match_items";
  @SerializedName(SERIALIZED_NAME_MATCH_ITEMS)
  private String matchItems;

  public static final String SERIALIZED_NAME_OPERATOR = "operator";
  @SerializedName(SERIALIZED_NAME_OPERATOR)
  private String operator;

  public static final String SERIALIZED_NAME_SUB_CONDITIONS = "sub-conditions";
  @SerializedName(SERIALIZED_NAME_SUB_CONDITIONS)
  private List<CouponCondition> subConditions = new ArrayList<>();

  public static final String SERIALIZED_NAME_VALUE = "value";
  @SerializedName(SERIALIZED_NAME_VALUE)
  private String value;

  public CouponCondition() {
  }

  public CouponCondition additionalFields(Object additionalFields) {
    this.additionalFields = additionalFields;
    return this;
  }

  /**
   * Get additionalFields
   * @return additionalFields
   */
  @javax.annotation.Nullable
  public Object getAdditionalFields() {
    return additionalFields;
  }

  public void setAdditionalFields(Object additionalFields) {
    this.additionalFields = additionalFields;
  }


  public CouponCondition customFields(Object customFields) {
    this.customFields = customFields;
    return this;
  }

  /**
   * Get customFields
   * @return customFields
   */
  @javax.annotation.Nullable
  public Object getCustomFields() {
    return customFields;
  }

  public void setCustomFields(Object customFields) {
    this.customFields = customFields;
  }


  public CouponCondition entity(String entity) {
    this.entity = entity;
    return this;
  }

  /**
   * Get entity
   * @return entity
   */
  @javax.annotation.Nullable
  public String getEntity() {
    return entity;
  }

  public void setEntity(String entity) {
    this.entity = entity;
  }


  public CouponCondition id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public CouponCondition key(String key) {
    this.key = key;
    return this;
  }

  /**
   * Get key
   * @return key
   */
  @javax.annotation.Nullable
  public String getKey() {
    return key;
  }

  public void setKey(String key) {
    this.key = key;
  }


  public CouponCondition logicOperator(String logicOperator) {
    this.logicOperator = logicOperator;
    return this;
  }

  /**
   * Get logicOperator
   * @return logicOperator
   */
  @javax.annotation.Nullable
  public String getLogicOperator() {
    return logicOperator;
  }

  public void setLogicOperator(String logicOperator) {
    this.logicOperator = logicOperator;
  }


  public CouponCondition matchItems(String matchItems) {
    this.matchItems = matchItems;
    return this;
  }

  /**
   * Get matchItems
   * @return matchItems
   */
  @javax.annotation.Nullable
  public String getMatchItems() {
    return matchItems;
  }

  public void setMatchItems(String matchItems) {
    this.matchItems = matchItems;
  }


  public CouponCondition operator(String operator) {
    this.operator = operator;
    return this;
  }

  /**
   * Get operator
   * @return operator
   */
  @javax.annotation.Nullable
  public String getOperator() {
    return operator;
  }

  public void setOperator(String operator) {
    this.operator = operator;
  }


  public CouponCondition subConditions(List<CouponCondition> subConditions) {
    this.subConditions = subConditions;
    return this;
  }

  public CouponCondition addSubConditionsItem(CouponCondition subConditionsItem) {
    if (this.subConditions == null) {
      this.subConditions = new ArrayList<>();
    }
    this.subConditions.add(subConditionsItem);
    return this;
  }

  /**
   * Get subConditions
   * @return subConditions
   */
  @javax.annotation.Nullable
  public List<CouponCondition> getSubConditions() {
    return subConditions;
  }

  public void setSubConditions(List<CouponCondition> subConditions) {
    this.subConditions = subConditions;
  }


  public CouponCondition value(String value) {
    this.value = value;
    return this;
  }

  /**
   * Get value
   * @return value
   */
  @javax.annotation.Nullable
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CouponCondition couponCondition = (CouponCondition) o;
    return Objects.equals(this.additionalFields, couponCondition.additionalFields) &&
        Objects.equals(this.customFields, couponCondition.customFields) &&
        Objects.equals(this.entity, couponCondition.entity) &&
        Objects.equals(this.id, couponCondition.id) &&
        Objects.equals(this.key, couponCondition.key) &&
        Objects.equals(this.logicOperator, couponCondition.logicOperator) &&
        Objects.equals(this.matchItems, couponCondition.matchItems) &&
        Objects.equals(this.operator, couponCondition.operator) &&
        Objects.equals(this.subConditions, couponCondition.subConditions) &&
        Objects.equals(this.value, couponCondition.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalFields, customFields, entity, id, key, logicOperator, matchItems, operator, subConditions, value);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CouponCondition {\n");
    sb.append("    additionalFields: ").append(toIndentedString(additionalFields)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    entity: ").append(toIndentedString(entity)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    logicOperator: ").append(toIndentedString(logicOperator)).append("\n");
    sb.append("    matchItems: ").append(toIndentedString(matchItems)).append("\n");
    sb.append("    operator: ").append(toIndentedString(operator)).append("\n");
    sb.append("    subConditions: ").append(toIndentedString(subConditions)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("additional_fields");
    openapiFields.add("custom_fields");
    openapiFields.add("entity");
    openapiFields.add("id");
    openapiFields.add("key");
    openapiFields.add("logic_operator");
    openapiFields.add("match_items");
    openapiFields.add("operator");
    openapiFields.add("sub-conditions");
    openapiFields.add("value");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CouponCondition
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CouponCondition.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CouponCondition is not found in the empty JSON string", CouponCondition.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CouponCondition.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CouponCondition` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("entity") != null && !jsonObj.get("entity").isJsonNull()) && !jsonObj.get("entity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `entity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("entity").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("key") != null && !jsonObj.get("key").isJsonNull()) && !jsonObj.get("key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("key").toString()));
      }
      if ((jsonObj.get("logic_operator") != null && !jsonObj.get("logic_operator").isJsonNull()) && !jsonObj.get("logic_operator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logic_operator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logic_operator").toString()));
      }
      if ((jsonObj.get("match_items") != null && !jsonObj.get("match_items").isJsonNull()) && !jsonObj.get("match_items").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `match_items` to be a primitive type in the JSON string but got `%s`", jsonObj.get("match_items").toString()));
      }
      if ((jsonObj.get("operator") != null && !jsonObj.get("operator").isJsonNull()) && !jsonObj.get("operator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `operator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("operator").toString()));
      }
      if (jsonObj.get("sub-conditions") != null && !jsonObj.get("sub-conditions").isJsonNull()) {
        JsonArray jsonArraysubConditions = jsonObj.getAsJsonArray("sub-conditions");
        if (jsonArraysubConditions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("sub-conditions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `sub-conditions` to be an array in the JSON string but got `%s`", jsonObj.get("sub-conditions").toString()));
          }

          // validate the optional field `sub-conditions` (array)
          for (int i = 0; i < jsonArraysubConditions.size(); i++) {
            CouponCondition.validateJsonElement(jsonArraysubConditions.get(i));
          };
        }
      }
      if ((jsonObj.get("value") != null && !jsonObj.get("value").isJsonNull()) && !jsonObj.get("value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("value").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CouponCondition.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CouponCondition' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CouponCondition> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CouponCondition.class));

       return (TypeAdapter<T>) new TypeAdapter<CouponCondition>() {
           @Override
           public void write(JsonWriter out, CouponCondition value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CouponCondition read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CouponCondition given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CouponCondition
   * @throws IOException if the JSON string is invalid with respect to CouponCondition
   */
  public static CouponCondition fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CouponCondition.class);
  }

  /**
   * Convert an instance of CouponCondition to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

