/*
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.OrderPreestimateShippingListOrderItemInnerOrderItemOptionInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * OrderPreestimateShippingListOrderItemInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:12:09.268126-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class OrderPreestimateShippingListOrderItemInner {
  public static final String SERIALIZED_NAME_ORDER_ITEM_ID = "order_item_id";
  @SerializedName(SERIALIZED_NAME_ORDER_ITEM_ID)
  private String orderItemId;

  public static final String SERIALIZED_NAME_ORDER_ITEM_MODEL = "order_item_model";
  @SerializedName(SERIALIZED_NAME_ORDER_ITEM_MODEL)
  private String orderItemModel;

  public static final String SERIALIZED_NAME_ORDER_ITEM_OPTION = "order_item_option";
  @SerializedName(SERIALIZED_NAME_ORDER_ITEM_OPTION)
  private List<OrderPreestimateShippingListOrderItemInnerOrderItemOptionInner> orderItemOption = new ArrayList<>();

  public static final String SERIALIZED_NAME_ORDER_ITEM_QUANTITY = "order_item_quantity";
  @SerializedName(SERIALIZED_NAME_ORDER_ITEM_QUANTITY)
  private Integer orderItemQuantity;

  public static final String SERIALIZED_NAME_ORDER_ITEM_VARIANT_ID = "order_item_variant_id";
  @SerializedName(SERIALIZED_NAME_ORDER_ITEM_VARIANT_ID)
  private String orderItemVariantId;

  public static final String SERIALIZED_NAME_ORDER_ITEM_WEIGHT = "order_item_weight";
  @SerializedName(SERIALIZED_NAME_ORDER_ITEM_WEIGHT)
  private BigDecimal orderItemWeight;

  public OrderPreestimateShippingListOrderItemInner() {
  }

  public OrderPreestimateShippingListOrderItemInner orderItemId(String orderItemId) {
    this.orderItemId = orderItemId;
    return this;
  }

  /**
   * Defines orders specified by order item id
   * @return orderItemId
   */
  @javax.annotation.Nonnull
  public String getOrderItemId() {
    return orderItemId;
  }

  public void setOrderItemId(String orderItemId) {
    this.orderItemId = orderItemId;
  }


  public OrderPreestimateShippingListOrderItemInner orderItemModel(String orderItemModel) {
    this.orderItemModel = orderItemModel;
    return this;
  }

  /**
   * Defines orders specified by order item model
   * @return orderItemModel
   */
  @javax.annotation.Nullable
  public String getOrderItemModel() {
    return orderItemModel;
  }

  public void setOrderItemModel(String orderItemModel) {
    this.orderItemModel = orderItemModel;
  }


  public OrderPreestimateShippingListOrderItemInner orderItemOption(List<OrderPreestimateShippingListOrderItemInnerOrderItemOptionInner> orderItemOption) {
    this.orderItemOption = orderItemOption;
    return this;
  }

  public OrderPreestimateShippingListOrderItemInner addOrderItemOptionItem(OrderPreestimateShippingListOrderItemInnerOrderItemOptionInner orderItemOptionItem) {
    if (this.orderItemOption == null) {
      this.orderItemOption = new ArrayList<>();
    }
    this.orderItemOption.add(orderItemOptionItem);
    return this;
  }

  /**
   * Get orderItemOption
   * @return orderItemOption
   */
  @javax.annotation.Nullable
  public List<OrderPreestimateShippingListOrderItemInnerOrderItemOptionInner> getOrderItemOption() {
    return orderItemOption;
  }

  public void setOrderItemOption(List<OrderPreestimateShippingListOrderItemInnerOrderItemOptionInner> orderItemOption) {
    this.orderItemOption = orderItemOption;
  }


  public OrderPreestimateShippingListOrderItemInner orderItemQuantity(Integer orderItemQuantity) {
    this.orderItemQuantity = orderItemQuantity;
    return this;
  }

  /**
   * Defines orders specified by order item quantity
   * @return orderItemQuantity
   */
  @javax.annotation.Nonnull
  public Integer getOrderItemQuantity() {
    return orderItemQuantity;
  }

  public void setOrderItemQuantity(Integer orderItemQuantity) {
    this.orderItemQuantity = orderItemQuantity;
  }


  public OrderPreestimateShippingListOrderItemInner orderItemVariantId(String orderItemVariantId) {
    this.orderItemVariantId = orderItemVariantId;
    return this;
  }

  /**
   * Ordered product variant. Where x is order item ID
   * @return orderItemVariantId
   */
  @javax.annotation.Nullable
  public String getOrderItemVariantId() {
    return orderItemVariantId;
  }

  public void setOrderItemVariantId(String orderItemVariantId) {
    this.orderItemVariantId = orderItemVariantId;
  }


  public OrderPreestimateShippingListOrderItemInner orderItemWeight(BigDecimal orderItemWeight) {
    this.orderItemWeight = orderItemWeight;
    return this;
  }

  /**
   * Defines orders specified by order item weight
   * @return orderItemWeight
   */
  @javax.annotation.Nullable
  public BigDecimal getOrderItemWeight() {
    return orderItemWeight;
  }

  public void setOrderItemWeight(BigDecimal orderItemWeight) {
    this.orderItemWeight = orderItemWeight;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderPreestimateShippingListOrderItemInner orderPreestimateShippingListOrderItemInner = (OrderPreestimateShippingListOrderItemInner) o;
    return Objects.equals(this.orderItemId, orderPreestimateShippingListOrderItemInner.orderItemId) &&
        Objects.equals(this.orderItemModel, orderPreestimateShippingListOrderItemInner.orderItemModel) &&
        Objects.equals(this.orderItemOption, orderPreestimateShippingListOrderItemInner.orderItemOption) &&
        Objects.equals(this.orderItemQuantity, orderPreestimateShippingListOrderItemInner.orderItemQuantity) &&
        Objects.equals(this.orderItemVariantId, orderPreestimateShippingListOrderItemInner.orderItemVariantId) &&
        Objects.equals(this.orderItemWeight, orderPreestimateShippingListOrderItemInner.orderItemWeight);
  }

  @Override
  public int hashCode() {
    return Objects.hash(orderItemId, orderItemModel, orderItemOption, orderItemQuantity, orderItemVariantId, orderItemWeight);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderPreestimateShippingListOrderItemInner {\n");
    sb.append("    orderItemId: ").append(toIndentedString(orderItemId)).append("\n");
    sb.append("    orderItemModel: ").append(toIndentedString(orderItemModel)).append("\n");
    sb.append("    orderItemOption: ").append(toIndentedString(orderItemOption)).append("\n");
    sb.append("    orderItemQuantity: ").append(toIndentedString(orderItemQuantity)).append("\n");
    sb.append("    orderItemVariantId: ").append(toIndentedString(orderItemVariantId)).append("\n");
    sb.append("    orderItemWeight: ").append(toIndentedString(orderItemWeight)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("order_item_id");
    openapiFields.add("order_item_model");
    openapiFields.add("order_item_option");
    openapiFields.add("order_item_quantity");
    openapiFields.add("order_item_variant_id");
    openapiFields.add("order_item_weight");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("order_item_id");
    openapiRequiredFields.add("order_item_quantity");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to OrderPreestimateShippingListOrderItemInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OrderPreestimateShippingListOrderItemInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrderPreestimateShippingListOrderItemInner is not found in the empty JSON string", OrderPreestimateShippingListOrderItemInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OrderPreestimateShippingListOrderItemInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OrderPreestimateShippingListOrderItemInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : OrderPreestimateShippingListOrderItemInner.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("order_item_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `order_item_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("order_item_id").toString()));
      }
      if ((jsonObj.get("order_item_model") != null && !jsonObj.get("order_item_model").isJsonNull()) && !jsonObj.get("order_item_model").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `order_item_model` to be a primitive type in the JSON string but got `%s`", jsonObj.get("order_item_model").toString()));
      }
      if (jsonObj.get("order_item_option") != null && !jsonObj.get("order_item_option").isJsonNull()) {
        JsonArray jsonArrayorderItemOption = jsonObj.getAsJsonArray("order_item_option");
        if (jsonArrayorderItemOption != null) {
          // ensure the json data is an array
          if (!jsonObj.get("order_item_option").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `order_item_option` to be an array in the JSON string but got `%s`", jsonObj.get("order_item_option").toString()));
          }

          // validate the optional field `order_item_option` (array)
          for (int i = 0; i < jsonArrayorderItemOption.size(); i++) {
            OrderPreestimateShippingListOrderItemInnerOrderItemOptionInner.validateJsonElement(jsonArrayorderItemOption.get(i));
          };
        }
      }
      if ((jsonObj.get("order_item_variant_id") != null && !jsonObj.get("order_item_variant_id").isJsonNull()) && !jsonObj.get("order_item_variant_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `order_item_variant_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("order_item_variant_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrderPreestimateShippingListOrderItemInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrderPreestimateShippingListOrderItemInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrderPreestimateShippingListOrderItemInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrderPreestimateShippingListOrderItemInner.class));

       return (TypeAdapter<T>) new TypeAdapter<OrderPreestimateShippingListOrderItemInner>() {
           @Override
           public void write(JsonWriter out, OrderPreestimateShippingListOrderItemInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OrderPreestimateShippingListOrderItemInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of OrderPreestimateShippingListOrderItemInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of OrderPreestimateShippingListOrderItemInner
   * @throws IOException if the JSON string is invalid with respect to OrderPreestimateShippingListOrderItemInner
   */
  public static OrderPreestimateShippingListOrderItemInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrderPreestimateShippingListOrderItemInner.class);
  }

  /**
   * Convert an instance of OrderPreestimateShippingListOrderItemInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

