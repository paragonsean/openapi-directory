/*
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AccountCartAddHybrisWebsitesInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AccountCartAdd
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:12:09.268126-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AccountCartAdd {
  public static final String SERIALIZED_NAME_3DCART_ACCESS_TOKEN = "3dcart_access_token";
  @SerializedName(SERIALIZED_NAME_3DCART_ACCESS_TOKEN)
  private String _3dcartAccessToken;

  public static final String SERIALIZED_NAME_3DCART_PRIVATE_KEY = "3dcart_private_key";
  @SerializedName(SERIALIZED_NAME_3DCART_PRIVATE_KEY)
  private String _3dcartPrivateKey;

  public static final String SERIALIZED_NAME_3DCARTAPI_API_KEY = "3dcartapi_api_key";
  @SerializedName(SERIALIZED_NAME_3DCARTAPI_API_KEY)
  private String _3dcartapiApiKey;

  public static final String SERIALIZED_NAME_AMAZON_ACCESS_KEY_ID = "amazon_access_key_id";
  @SerializedName(SERIALIZED_NAME_AMAZON_ACCESS_KEY_ID)
  private String amazonAccessKeyId;

  public static final String SERIALIZED_NAME_AMAZON_ACCESS_TOKEN = "amazon_access_token";
  @SerializedName(SERIALIZED_NAME_AMAZON_ACCESS_TOKEN)
  private String amazonAccessToken;

  public static final String SERIALIZED_NAME_AMAZON_MARKETPLACES_IDS = "amazon_marketplaces_ids";
  @SerializedName(SERIALIZED_NAME_AMAZON_MARKETPLACES_IDS)
  private String amazonMarketplacesIds;

  public static final String SERIALIZED_NAME_AMAZON_SECRET_KEY = "amazon_secret_key";
  @SerializedName(SERIALIZED_NAME_AMAZON_SECRET_KEY)
  private String amazonSecretKey;

  public static final String SERIALIZED_NAME_AMAZON_SELLER_ID = "amazon_seller_id";
  @SerializedName(SERIALIZED_NAME_AMAZON_SELLER_ID)
  private String amazonSellerId;

  public static final String SERIALIZED_NAME_AMAZON_SP_API_ENVIRONMENT = "amazon_sp_api_environment";
  @SerializedName(SERIALIZED_NAME_AMAZON_SP_API_ENVIRONMENT)
  private String amazonSpApiEnvironment = "production";

  /**
   * Amazon AWS Region
   */
  @JsonAdapter(AmazonSpAwsRegionEnum.Adapter.class)
  public enum AmazonSpAwsRegionEnum {
    EU_WEST_1("eu-west-1"),
    
    US_EAST_1("us-east-1"),
    
    US_WEST_2("us-west-2");

    private String value;

    AmazonSpAwsRegionEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AmazonSpAwsRegionEnum fromValue(String value) {
      for (AmazonSpAwsRegionEnum b : AmazonSpAwsRegionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<AmazonSpAwsRegionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AmazonSpAwsRegionEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AmazonSpAwsRegionEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return AmazonSpAwsRegionEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      AmazonSpAwsRegionEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_AMAZON_SP_AWS_REGION = "amazon_sp_aws_region";
  @SerializedName(SERIALIZED_NAME_AMAZON_SP_AWS_REGION)
  private AmazonSpAwsRegionEnum amazonSpAwsRegion;

  public static final String SERIALIZED_NAME_AMAZON_SP_AWS_ROLE_ARN = "amazon_sp_aws_role_arn";
  @SerializedName(SERIALIZED_NAME_AMAZON_SP_AWS_ROLE_ARN)
  private String amazonSpAwsRoleArn;

  public static final String SERIALIZED_NAME_AMAZON_SP_AWS_USER_KEY_ID = "amazon_sp_aws_user_key_id";
  @SerializedName(SERIALIZED_NAME_AMAZON_SP_AWS_USER_KEY_ID)
  private String amazonSpAwsUserKeyId;

  public static final String SERIALIZED_NAME_AMAZON_SP_AWS_USER_SECRET = "amazon_sp_aws_user_secret";
  @SerializedName(SERIALIZED_NAME_AMAZON_SP_AWS_USER_SECRET)
  private String amazonSpAwsUserSecret;

  public static final String SERIALIZED_NAME_AMAZON_SP_CLIENT_ID = "amazon_sp_client_id";
  @SerializedName(SERIALIZED_NAME_AMAZON_SP_CLIENT_ID)
  private String amazonSpClientId;

  public static final String SERIALIZED_NAME_AMAZON_SP_CLIENT_SECRET = "amazon_sp_client_secret";
  @SerializedName(SERIALIZED_NAME_AMAZON_SP_CLIENT_SECRET)
  private String amazonSpClientSecret;

  public static final String SERIALIZED_NAME_AMAZON_SP_REFRESH_TOKEN = "amazon_sp_refresh_token";
  @SerializedName(SERIALIZED_NAME_AMAZON_SP_REFRESH_TOKEN)
  private String amazonSpRefreshToken;

  public static final String SERIALIZED_NAME_ASPDOTNETSTOREFRONT_API_PASS = "aspdotnetstorefront_api_pass";
  @SerializedName(SERIALIZED_NAME_ASPDOTNETSTOREFRONT_API_PASS)
  private String aspdotnetstorefrontApiPass;

  public static final String SERIALIZED_NAME_ASPDOTNETSTOREFRONT_API_USER = "aspdotnetstorefront_api_user";
  @SerializedName(SERIALIZED_NAME_ASPDOTNETSTOREFRONT_API_USER)
  private String aspdotnetstorefrontApiUser;

  public static final String SERIALIZED_NAME_BIGCOMMERCEAPI_ACCESS_TOKEN = "bigcommerceapi_access_token";
  @SerializedName(SERIALIZED_NAME_BIGCOMMERCEAPI_ACCESS_TOKEN)
  private String bigcommerceapiAccessToken;

  public static final String SERIALIZED_NAME_BIGCOMMERCEAPI_ADMIN_ACCOUNT = "bigcommerceapi_admin_account";
  @SerializedName(SERIALIZED_NAME_BIGCOMMERCEAPI_ADMIN_ACCOUNT)
  private String bigcommerceapiAdminAccount;

  public static final String SERIALIZED_NAME_BIGCOMMERCEAPI_API_KEY = "bigcommerceapi_api_key";
  @SerializedName(SERIALIZED_NAME_BIGCOMMERCEAPI_API_KEY)
  private String bigcommerceapiApiKey;

  public static final String SERIALIZED_NAME_BIGCOMMERCEAPI_API_PATH = "bigcommerceapi_api_path";
  @SerializedName(SERIALIZED_NAME_BIGCOMMERCEAPI_API_PATH)
  private String bigcommerceapiApiPath;

  public static final String SERIALIZED_NAME_BIGCOMMERCEAPI_CLIENT_ID = "bigcommerceapi_client_id";
  @SerializedName(SERIALIZED_NAME_BIGCOMMERCEAPI_CLIENT_ID)
  private String bigcommerceapiClientId;

  public static final String SERIALIZED_NAME_BIGCOMMERCEAPI_CONTEXT = "bigcommerceapi_context";
  @SerializedName(SERIALIZED_NAME_BIGCOMMERCEAPI_CONTEXT)
  private String bigcommerceapiContext;

  public static final String SERIALIZED_NAME_BRIDGE_URL = "bridge_url";
  @SerializedName(SERIALIZED_NAME_BRIDGE_URL)
  private String bridgeUrl;

  /**
   * Storeâ€™s identifier which you can get from cart_list method
   */
  @JsonAdapter(CartIdEnum.Adapter.class)
  public enum CartIdEnum {
    _3_D_CART("3DCart"),
    
    _3_D_CART_API("3DCartApi"),
    
    ACE_SHOP("AceShop"),
    
    AMAZON_SP("AmazonSP"),
    
    AMAZON("Amazon"),
    
    ASP_DOT_NET_STOREFRONT("AspDotNetStorefront"),
    
    BIGCOMMERCE_API("BigcommerceApi"),
    
    CRELOADED("Creloaded"),
    
    COMMERCE_HQ("CommerceHQ"),
    
    CSCART("Cscart"),
    
    CUBECART("Cubecart"),
    
    DEMANDWARE("Demandware"),
    
    E_BAY("EBay"),
    
    ECWID("Ecwid"),
    
    ETSY("Etsy"),
    
    ETSY_APIV3("EtsyAPIv3"),
    
    GAMBIO("Gambio"),
    
    JOO_CART("JooCart"),
    
    MAGENTO1212("Magento1212"),
    
    MAGENTO2_API("Magento2Api"),
    
    MIJO_SHOP("MijoShop"),
    
    NETO("Neto"),
    
    OPENCART14("Opencart14"),
    
    LIGHT_SPEED("LightSpeed"),
    
    OSCMAX2("Oscmax2"),
    
    OSCOMMERCE22MS2("Oscommerce22ms2"),
    
    OXID("Oxid"),
    
    PINNACLE("Pinnacle"),
    
    PRESTASHOP("Prestashop"),
    
    PRESTASHOP_API("PrestashopApi"),
    
    SS_PREMIUM("SSPremium"),
    
    SHOPIFY("Shopify"),
    
    SQUARESPACE("Squarespace"),
    
    SHOPWARE("Shopware"),
    
    SHOPWARE_API("ShopwareApi"),
    
    TOMATOCART("Tomatocart"),
    
    UBERCART("Ubercart"),
    
    VIRTUEMART("Virtuemart"),
    
    VOLUSION("Volusion"),
    
    W_PECOMMERCE("WPecommerce"),
    
    WALMART("Walmart"),
    
    WEB_ASYST("WebAsyst"),
    
    WOOCOMMERCE("Woocommerce"),
    
    WOOCOMMERCE_API("WoocommerceApi"),
    
    WIX("Wix"),
    
    XCART("Xcart"),
    
    XTCOMMERCE("Xtcommerce"),
    
    XTCOMMERCE_VEYTON("XtcommerceVeyton"),
    
    ZENCART137("Zencart137"),
    
    HYBRIS("Hybris"),
    
    MERCADO_LIBRE("MercadoLibre"),
    
    ZID("Zid"),
    
    ZOEY("Zoey");

    private String value;

    CartIdEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CartIdEnum fromValue(String value) {
      for (CartIdEnum b : CartIdEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<CartIdEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CartIdEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CartIdEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return CartIdEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      CartIdEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_CART_ID = "cart_id";
  @SerializedName(SERIALIZED_NAME_CART_ID)
  private CartIdEnum cartId;

  public static final String SERIALIZED_NAME_COMMERCEHQ_API_KEY = "commercehq_api_key";
  @SerializedName(SERIALIZED_NAME_COMMERCEHQ_API_KEY)
  private String commercehqApiKey;

  public static final String SERIALIZED_NAME_COMMERCEHQ_API_PASSWORD = "commercehq_api_password";
  @SerializedName(SERIALIZED_NAME_COMMERCEHQ_API_PASSWORD)
  private String commercehqApiPassword;

  public static final String SERIALIZED_NAME_DB_TABLES_PREFIX = "db_tables_prefix";
  @SerializedName(SERIALIZED_NAME_DB_TABLES_PREFIX)
  private String dbTablesPrefix;

  public static final String SERIALIZED_NAME_DEMANDWARE_API_PASSWORD = "demandware_api_password";
  @SerializedName(SERIALIZED_NAME_DEMANDWARE_API_PASSWORD)
  private String demandwareApiPassword;

  public static final String SERIALIZED_NAME_DEMANDWARE_CLIENT_ID = "demandware_client_id";
  @SerializedName(SERIALIZED_NAME_DEMANDWARE_CLIENT_ID)
  private String demandwareClientId;

  public static final String SERIALIZED_NAME_DEMANDWARE_USER_NAME = "demandware_user_name";
  @SerializedName(SERIALIZED_NAME_DEMANDWARE_USER_NAME)
  private String demandwareUserName;

  public static final String SERIALIZED_NAME_DEMANDWARE_USER_PASSWORD = "demandware_user_password";
  @SerializedName(SERIALIZED_NAME_DEMANDWARE_USER_PASSWORD)
  private String demandwareUserPassword;

  public static final String SERIALIZED_NAME_EBAY_ACCESS_TOKEN = "ebay_access_token";
  @SerializedName(SERIALIZED_NAME_EBAY_ACCESS_TOKEN)
  private String ebayAccessToken;

  public static final String SERIALIZED_NAME_EBAY_CLIENT_ID = "ebay_client_id";
  @SerializedName(SERIALIZED_NAME_EBAY_CLIENT_ID)
  private String ebayClientId;

  public static final String SERIALIZED_NAME_EBAY_CLIENT_SECRET = "ebay_client_secret";
  @SerializedName(SERIALIZED_NAME_EBAY_CLIENT_SECRET)
  private String ebayClientSecret;

  public static final String SERIALIZED_NAME_EBAY_ENVIRONMENT = "ebay_environment";
  @SerializedName(SERIALIZED_NAME_EBAY_ENVIRONMENT)
  private String ebayEnvironment = "production";

  public static final String SERIALIZED_NAME_EBAY_REFRESH_TOKEN = "ebay_refresh_token";
  @SerializedName(SERIALIZED_NAME_EBAY_REFRESH_TOKEN)
  private String ebayRefreshToken;

  public static final String SERIALIZED_NAME_EBAY_RUNAME = "ebay_runame";
  @SerializedName(SERIALIZED_NAME_EBAY_RUNAME)
  private String ebayRuname;

  public static final String SERIALIZED_NAME_EBAY_SITE_ID = "ebay_site_id";
  @SerializedName(SERIALIZED_NAME_EBAY_SITE_ID)
  private Integer ebaySiteId = 0;

  public static final String SERIALIZED_NAME_ECWID_ACESS_TOKEN = "ecwid_acess_token";
  @SerializedName(SERIALIZED_NAME_ECWID_ACESS_TOKEN)
  private String ecwidAcessToken;

  public static final String SERIALIZED_NAME_ECWID_STORE_ID = "ecwid_store_id";
  @SerializedName(SERIALIZED_NAME_ECWID_STORE_ID)
  private String ecwidStoreId;

  public static final String SERIALIZED_NAME_ETSY_ACCESS_TOKEN = "etsy_access_token";
  @SerializedName(SERIALIZED_NAME_ETSY_ACCESS_TOKEN)
  private String etsyAccessToken;

  public static final String SERIALIZED_NAME_ETSY_CLIENT_ID = "etsy_client_id";
  @SerializedName(SERIALIZED_NAME_ETSY_CLIENT_ID)
  private String etsyClientId;

  public static final String SERIALIZED_NAME_ETSY_KEYSTRING = "etsy_keystring";
  @SerializedName(SERIALIZED_NAME_ETSY_KEYSTRING)
  private String etsyKeystring;

  public static final String SERIALIZED_NAME_ETSY_REFRESH_TOKEN = "etsy_refresh_token";
  @SerializedName(SERIALIZED_NAME_ETSY_REFRESH_TOKEN)
  private String etsyRefreshToken;

  public static final String SERIALIZED_NAME_ETSY_SHARED_SECRET = "etsy_shared_secret";
  @SerializedName(SERIALIZED_NAME_ETSY_SHARED_SECRET)
  private String etsySharedSecret;

  public static final String SERIALIZED_NAME_ETSY_TOKEN_SECRET = "etsy_token_secret";
  @SerializedName(SERIALIZED_NAME_ETSY_TOKEN_SECRET)
  private String etsyTokenSecret;

  public static final String SERIALIZED_NAME_FTP_HOST = "ftp_host";
  @SerializedName(SERIALIZED_NAME_FTP_HOST)
  private String ftpHost;

  public static final String SERIALIZED_NAME_FTP_PASSWORD = "ftp_password";
  @SerializedName(SERIALIZED_NAME_FTP_PASSWORD)
  private String ftpPassword;

  public static final String SERIALIZED_NAME_FTP_PORT = "ftp_port";
  @SerializedName(SERIALIZED_NAME_FTP_PORT)
  private Integer ftpPort;

  public static final String SERIALIZED_NAME_FTP_STORE_DIR = "ftp_store_dir";
  @SerializedName(SERIALIZED_NAME_FTP_STORE_DIR)
  private String ftpStoreDir;

  public static final String SERIALIZED_NAME_FTP_USER = "ftp_user";
  @SerializedName(SERIALIZED_NAME_FTP_USER)
  private String ftpUser;

  public static final String SERIALIZED_NAME_HYBRIS_CLIENT_ID = "hybris_client_id";
  @SerializedName(SERIALIZED_NAME_HYBRIS_CLIENT_ID)
  private String hybrisClientId;

  public static final String SERIALIZED_NAME_HYBRIS_CLIENT_SECRET = "hybris_client_secret";
  @SerializedName(SERIALIZED_NAME_HYBRIS_CLIENT_SECRET)
  private String hybrisClientSecret;

  public static final String SERIALIZED_NAME_HYBRIS_PASSWORD = "hybris_password";
  @SerializedName(SERIALIZED_NAME_HYBRIS_PASSWORD)
  private String hybrisPassword;

  public static final String SERIALIZED_NAME_HYBRIS_USERNAME = "hybris_username";
  @SerializedName(SERIALIZED_NAME_HYBRIS_USERNAME)
  private String hybrisUsername;

  public static final String SERIALIZED_NAME_HYBRIS_WEBSITES = "hybris_websites";
  @SerializedName(SERIALIZED_NAME_HYBRIS_WEBSITES)
  private List<AccountCartAddHybrisWebsitesInner> hybrisWebsites = new ArrayList<>();

  public static final String SERIALIZED_NAME_LIGHTSPEED_API_KEY = "lightspeed_api_key";
  @SerializedName(SERIALIZED_NAME_LIGHTSPEED_API_KEY)
  private String lightspeedApiKey;

  public static final String SERIALIZED_NAME_LIGHTSPEED_API_SECRET = "lightspeed_api_secret";
  @SerializedName(SERIALIZED_NAME_LIGHTSPEED_API_SECRET)
  private String lightspeedApiSecret;

  public static final String SERIALIZED_NAME_MAGENTO_ACCESS_TOKEN = "magento_access_token";
  @SerializedName(SERIALIZED_NAME_MAGENTO_ACCESS_TOKEN)
  private String magentoAccessToken;

  public static final String SERIALIZED_NAME_MAGENTO_CONSUMER_KEY = "magento_consumer_key";
  @SerializedName(SERIALIZED_NAME_MAGENTO_CONSUMER_KEY)
  private String magentoConsumerKey;

  public static final String SERIALIZED_NAME_MAGENTO_CONSUMER_SECRET = "magento_consumer_secret";
  @SerializedName(SERIALIZED_NAME_MAGENTO_CONSUMER_SECRET)
  private String magentoConsumerSecret;

  public static final String SERIALIZED_NAME_MAGENTO_TOKEN_SECRET = "magento_token_secret";
  @SerializedName(SERIALIZED_NAME_MAGENTO_TOKEN_SECRET)
  private String magentoTokenSecret;

  public static final String SERIALIZED_NAME_MERCADO_LIBRE_APP_ID = "mercado_libre_app_id";
  @SerializedName(SERIALIZED_NAME_MERCADO_LIBRE_APP_ID)
  private String mercadoLibreAppId;

  public static final String SERIALIZED_NAME_MERCADO_LIBRE_APP_SECRET_KEY = "mercado_libre_app_secret_key";
  @SerializedName(SERIALIZED_NAME_MERCADO_LIBRE_APP_SECRET_KEY)
  private String mercadoLibreAppSecretKey;

  public static final String SERIALIZED_NAME_MERCADO_LIBRE_REFRESH_TOKEN = "mercado_libre_refresh_token";
  @SerializedName(SERIALIZED_NAME_MERCADO_LIBRE_REFRESH_TOKEN)
  private String mercadoLibreRefreshToken;

  public static final String SERIALIZED_NAME_NETO_API_KEY = "neto_api_key";
  @SerializedName(SERIALIZED_NAME_NETO_API_KEY)
  private String netoApiKey;

  public static final String SERIALIZED_NAME_NETO_API_USERNAME = "neto_api_username";
  @SerializedName(SERIALIZED_NAME_NETO_API_USERNAME)
  private String netoApiUsername;

  public static final String SERIALIZED_NAME_PRESTASHOP_WEBSERVICE_KEY = "prestashop_webservice_key";
  @SerializedName(SERIALIZED_NAME_PRESTASHOP_WEBSERVICE_KEY)
  private String prestashopWebserviceKey;

  public static final String SERIALIZED_NAME_SHOPIFY_ACCESS_TOKEN = "shopify_access_token";
  @SerializedName(SERIALIZED_NAME_SHOPIFY_ACCESS_TOKEN)
  private String shopifyAccessToken;

  public static final String SERIALIZED_NAME_SHOPIFY_API_KEY = "shopify_api_key";
  @SerializedName(SERIALIZED_NAME_SHOPIFY_API_KEY)
  private String shopifyApiKey;

  public static final String SERIALIZED_NAME_SHOPIFY_API_PASSWORD = "shopify_api_password";
  @SerializedName(SERIALIZED_NAME_SHOPIFY_API_PASSWORD)
  private String shopifyApiPassword;

  public static final String SERIALIZED_NAME_SHOPIFY_SHARED_SECRET = "shopify_shared_secret";
  @SerializedName(SERIALIZED_NAME_SHOPIFY_SHARED_SECRET)
  private String shopifySharedSecret;

  public static final String SERIALIZED_NAME_SHOPWARE_ACCESS_KEY = "shopware_access_key";
  @SerializedName(SERIALIZED_NAME_SHOPWARE_ACCESS_KEY)
  private String shopwareAccessKey;

  public static final String SERIALIZED_NAME_SHOPWARE_API_KEY = "shopware_api_key";
  @SerializedName(SERIALIZED_NAME_SHOPWARE_API_KEY)
  private String shopwareApiKey;

  public static final String SERIALIZED_NAME_SHOPWARE_API_SECRET = "shopware_api_secret";
  @SerializedName(SERIALIZED_NAME_SHOPWARE_API_SECRET)
  private String shopwareApiSecret;

  public static final String SERIALIZED_NAME_SQUARESPACE_API_KEY = "squarespace_api_key";
  @SerializedName(SERIALIZED_NAME_SQUARESPACE_API_KEY)
  private String squarespaceApiKey;

  public static final String SERIALIZED_NAME_STORE_KEY = "store_key";
  @SerializedName(SERIALIZED_NAME_STORE_KEY)
  private String storeKey;

  public static final String SERIALIZED_NAME_STORE_ROOT = "store_root";
  @SerializedName(SERIALIZED_NAME_STORE_ROOT)
  private String storeRoot;

  public static final String SERIALIZED_NAME_STORE_URL = "store_url";
  @SerializedName(SERIALIZED_NAME_STORE_URL)
  private String storeUrl;

  public static final String SERIALIZED_NAME_VALIDATE_VERSION = "validate_version";
  @SerializedName(SERIALIZED_NAME_VALIDATE_VERSION)
  private Boolean validateVersion = false;

  public static final String SERIALIZED_NAME_VERIFY = "verify";
  @SerializedName(SERIALIZED_NAME_VERIFY)
  private Boolean verify = true;

  public static final String SERIALIZED_NAME_VOLUSION_LOGIN = "volusion_login";
  @SerializedName(SERIALIZED_NAME_VOLUSION_LOGIN)
  private String volusionLogin;

  public static final String SERIALIZED_NAME_VOLUSION_PASSWORD = "volusion_password";
  @SerializedName(SERIALIZED_NAME_VOLUSION_PASSWORD)
  private String volusionPassword;

  public static final String SERIALIZED_NAME_WALMART_CHANNEL_TYPE = "walmart_channel_type";
  @SerializedName(SERIALIZED_NAME_WALMART_CHANNEL_TYPE)
  private String walmartChannelType;

  public static final String SERIALIZED_NAME_WALMART_CLIENT_ID = "walmart_client_id";
  @SerializedName(SERIALIZED_NAME_WALMART_CLIENT_ID)
  private String walmartClientId;

  public static final String SERIALIZED_NAME_WALMART_CLIENT_SECRET = "walmart_client_secret";
  @SerializedName(SERIALIZED_NAME_WALMART_CLIENT_SECRET)
  private String walmartClientSecret;

  public static final String SERIALIZED_NAME_WALMART_ENVIRONMENT = "walmart_environment";
  @SerializedName(SERIALIZED_NAME_WALMART_ENVIRONMENT)
  private String walmartEnvironment = "production";

  public static final String SERIALIZED_NAME_WC_CONSUMER_KEY = "wc_consumer_key";
  @SerializedName(SERIALIZED_NAME_WC_CONSUMER_KEY)
  private String wcConsumerKey;

  public static final String SERIALIZED_NAME_WC_CONSUMER_SECRET = "wc_consumer_secret";
  @SerializedName(SERIALIZED_NAME_WC_CONSUMER_SECRET)
  private String wcConsumerSecret;

  public static final String SERIALIZED_NAME_WIX_APP_ID = "wix_app_id";
  @SerializedName(SERIALIZED_NAME_WIX_APP_ID)
  private String wixAppId;

  public static final String SERIALIZED_NAME_WIX_APP_SECRET_KEY = "wix_app_secret_key";
  @SerializedName(SERIALIZED_NAME_WIX_APP_SECRET_KEY)
  private String wixAppSecretKey;

  public static final String SERIALIZED_NAME_WIX_REFRESH_TOKEN = "wix_refresh_token";
  @SerializedName(SERIALIZED_NAME_WIX_REFRESH_TOKEN)
  private String wixRefreshToken;

  public static final String SERIALIZED_NAME_ZID_ACCESS_TOKEN = "zid_access_token";
  @SerializedName(SERIALIZED_NAME_ZID_ACCESS_TOKEN)
  private String zidAccessToken;

  public static final String SERIALIZED_NAME_ZID_AUTHORIZATION = "zid_authorization";
  @SerializedName(SERIALIZED_NAME_ZID_AUTHORIZATION)
  private String zidAuthorization;

  public static final String SERIALIZED_NAME_ZID_CLIENT_ID = "zid_client_id";
  @SerializedName(SERIALIZED_NAME_ZID_CLIENT_ID)
  private Integer zidClientId;

  public static final String SERIALIZED_NAME_ZID_CLIENT_SECRET = "zid_client_secret";
  @SerializedName(SERIALIZED_NAME_ZID_CLIENT_SECRET)
  private String zidClientSecret;

  public static final String SERIALIZED_NAME_ZID_REFRESH_TOKEN = "zid_refresh_token";
  @SerializedName(SERIALIZED_NAME_ZID_REFRESH_TOKEN)
  private String zidRefreshToken;

  public AccountCartAdd() {
  }

  public AccountCartAdd _3dcartAccessToken(String _3dcartAccessToken) {
    this._3dcartAccessToken = _3dcartAccessToken;
    return this;
  }

  /**
   * 3DCart Token
   * @return _3dcartAccessToken
   */
  @javax.annotation.Nullable
  public String get3dcartAccessToken() {
    return _3dcartAccessToken;
  }

  public void set3dcartAccessToken(String _3dcartAccessToken) {
    this._3dcartAccessToken = _3dcartAccessToken;
  }


  public AccountCartAdd _3dcartPrivateKey(String _3dcartPrivateKey) {
    this._3dcartPrivateKey = _3dcartPrivateKey;
    return this;
  }

  /**
   * 3DCart Private Key
   * @return _3dcartPrivateKey
   */
  @javax.annotation.Nullable
  public String get3dcartPrivateKey() {
    return _3dcartPrivateKey;
  }

  public void set3dcartPrivateKey(String _3dcartPrivateKey) {
    this._3dcartPrivateKey = _3dcartPrivateKey;
  }


  public AccountCartAdd _3dcartapiApiKey(String _3dcartapiApiKey) {
    this._3dcartapiApiKey = _3dcartapiApiKey;
    return this;
  }

  /**
   * 3DCart API Key
   * @return _3dcartapiApiKey
   */
  @javax.annotation.Nullable
  public String get3dcartapiApiKey() {
    return _3dcartapiApiKey;
  }

  public void set3dcartapiApiKey(String _3dcartapiApiKey) {
    this._3dcartapiApiKey = _3dcartapiApiKey;
  }


  public AccountCartAdd amazonAccessKeyId(String amazonAccessKeyId) {
    this.amazonAccessKeyId = amazonAccessKeyId;
    return this;
  }

  /**
   * Amazon Secret Key Id
   * @return amazonAccessKeyId
   */
  @javax.annotation.Nullable
  public String getAmazonAccessKeyId() {
    return amazonAccessKeyId;
  }

  public void setAmazonAccessKeyId(String amazonAccessKeyId) {
    this.amazonAccessKeyId = amazonAccessKeyId;
  }


  public AccountCartAdd amazonAccessToken(String amazonAccessToken) {
    this.amazonAccessToken = amazonAccessToken;
    return this;
  }

  /**
   * MWS Auth Token. Access token authorizing the app to access resources on behalf of a user
   * @return amazonAccessToken
   */
  @javax.annotation.Nullable
  public String getAmazonAccessToken() {
    return amazonAccessToken;
  }

  public void setAmazonAccessToken(String amazonAccessToken) {
    this.amazonAccessToken = amazonAccessToken;
  }


  public AccountCartAdd amazonMarketplacesIds(String amazonMarketplacesIds) {
    this.amazonMarketplacesIds = amazonMarketplacesIds;
    return this;
  }

  /**
   * Amazon Marketplace IDs comma separated string
   * @return amazonMarketplacesIds
   */
  @javax.annotation.Nullable
  public String getAmazonMarketplacesIds() {
    return amazonMarketplacesIds;
  }

  public void setAmazonMarketplacesIds(String amazonMarketplacesIds) {
    this.amazonMarketplacesIds = amazonMarketplacesIds;
  }


  public AccountCartAdd amazonSecretKey(String amazonSecretKey) {
    this.amazonSecretKey = amazonSecretKey;
    return this;
  }

  /**
   * Amazon Secret Key
   * @return amazonSecretKey
   */
  @javax.annotation.Nullable
  public String getAmazonSecretKey() {
    return amazonSecretKey;
  }

  public void setAmazonSecretKey(String amazonSecretKey) {
    this.amazonSecretKey = amazonSecretKey;
  }


  public AccountCartAdd amazonSellerId(String amazonSellerId) {
    this.amazonSellerId = amazonSellerId;
    return this;
  }

  /**
   * Amazon Seller ID (Merchant token)
   * @return amazonSellerId
   */
  @javax.annotation.Nullable
  public String getAmazonSellerId() {
    return amazonSellerId;
  }

  public void setAmazonSellerId(String amazonSellerId) {
    this.amazonSellerId = amazonSellerId;
  }


  public AccountCartAdd amazonSpApiEnvironment(String amazonSpApiEnvironment) {
    this.amazonSpApiEnvironment = amazonSpApiEnvironment;
    return this;
  }

  /**
   * Amazon SP API environment
   * @return amazonSpApiEnvironment
   */
  @javax.annotation.Nullable
  public String getAmazonSpApiEnvironment() {
    return amazonSpApiEnvironment;
  }

  public void setAmazonSpApiEnvironment(String amazonSpApiEnvironment) {
    this.amazonSpApiEnvironment = amazonSpApiEnvironment;
  }


  public AccountCartAdd amazonSpAwsRegion(AmazonSpAwsRegionEnum amazonSpAwsRegion) {
    this.amazonSpAwsRegion = amazonSpAwsRegion;
    return this;
  }

  /**
   * Amazon AWS Region
   * @return amazonSpAwsRegion
   */
  @javax.annotation.Nonnull
  public AmazonSpAwsRegionEnum getAmazonSpAwsRegion() {
    return amazonSpAwsRegion;
  }

  public void setAmazonSpAwsRegion(AmazonSpAwsRegionEnum amazonSpAwsRegion) {
    this.amazonSpAwsRegion = amazonSpAwsRegion;
  }


  public AccountCartAdd amazonSpAwsRoleArn(String amazonSpAwsRoleArn) {
    this.amazonSpAwsRoleArn = amazonSpAwsRoleArn;
    return this;
  }

  /**
   * Amazon AWS Role ARN
   * @return amazonSpAwsRoleArn
   */
  @javax.annotation.Nonnull
  public String getAmazonSpAwsRoleArn() {
    return amazonSpAwsRoleArn;
  }

  public void setAmazonSpAwsRoleArn(String amazonSpAwsRoleArn) {
    this.amazonSpAwsRoleArn = amazonSpAwsRoleArn;
  }


  public AccountCartAdd amazonSpAwsUserKeyId(String amazonSpAwsUserKeyId) {
    this.amazonSpAwsUserKeyId = amazonSpAwsUserKeyId;
    return this;
  }

  /**
   * Amazon AWS user access key ID
   * @return amazonSpAwsUserKeyId
   */
  @javax.annotation.Nonnull
  public String getAmazonSpAwsUserKeyId() {
    return amazonSpAwsUserKeyId;
  }

  public void setAmazonSpAwsUserKeyId(String amazonSpAwsUserKeyId) {
    this.amazonSpAwsUserKeyId = amazonSpAwsUserKeyId;
  }


  public AccountCartAdd amazonSpAwsUserSecret(String amazonSpAwsUserSecret) {
    this.amazonSpAwsUserSecret = amazonSpAwsUserSecret;
    return this;
  }

  /**
   * Amazon AWS user secret access key
   * @return amazonSpAwsUserSecret
   */
  @javax.annotation.Nonnull
  public String getAmazonSpAwsUserSecret() {
    return amazonSpAwsUserSecret;
  }

  public void setAmazonSpAwsUserSecret(String amazonSpAwsUserSecret) {
    this.amazonSpAwsUserSecret = amazonSpAwsUserSecret;
  }


  public AccountCartAdd amazonSpClientId(String amazonSpClientId) {
    this.amazonSpClientId = amazonSpClientId;
    return this;
  }

  /**
   * Amazon SP API app client id
   * @return amazonSpClientId
   */
  @javax.annotation.Nonnull
  public String getAmazonSpClientId() {
    return amazonSpClientId;
  }

  public void setAmazonSpClientId(String amazonSpClientId) {
    this.amazonSpClientId = amazonSpClientId;
  }


  public AccountCartAdd amazonSpClientSecret(String amazonSpClientSecret) {
    this.amazonSpClientSecret = amazonSpClientSecret;
    return this;
  }

  /**
   * Amazon SP API app client secret
   * @return amazonSpClientSecret
   */
  @javax.annotation.Nonnull
  public String getAmazonSpClientSecret() {
    return amazonSpClientSecret;
  }

  public void setAmazonSpClientSecret(String amazonSpClientSecret) {
    this.amazonSpClientSecret = amazonSpClientSecret;
  }


  public AccountCartAdd amazonSpRefreshToken(String amazonSpRefreshToken) {
    this.amazonSpRefreshToken = amazonSpRefreshToken;
    return this;
  }

  /**
   * Amazon SP API OAuth refresh token
   * @return amazonSpRefreshToken
   */
  @javax.annotation.Nonnull
  public String getAmazonSpRefreshToken() {
    return amazonSpRefreshToken;
  }

  public void setAmazonSpRefreshToken(String amazonSpRefreshToken) {
    this.amazonSpRefreshToken = amazonSpRefreshToken;
  }


  public AccountCartAdd aspdotnetstorefrontApiPass(String aspdotnetstorefrontApiPass) {
    this.aspdotnetstorefrontApiPass = aspdotnetstorefrontApiPass;
    return this;
  }

  /**
   * AspDotNetStorefront API Password
   * @return aspdotnetstorefrontApiPass
   */
  @javax.annotation.Nullable
  public String getAspdotnetstorefrontApiPass() {
    return aspdotnetstorefrontApiPass;
  }

  public void setAspdotnetstorefrontApiPass(String aspdotnetstorefrontApiPass) {
    this.aspdotnetstorefrontApiPass = aspdotnetstorefrontApiPass;
  }


  public AccountCartAdd aspdotnetstorefrontApiUser(String aspdotnetstorefrontApiUser) {
    this.aspdotnetstorefrontApiUser = aspdotnetstorefrontApiUser;
    return this;
  }

  /**
   * It&#39;s a AspDotNetStorefront account for which API is available
   * @return aspdotnetstorefrontApiUser
   */
  @javax.annotation.Nullable
  public String getAspdotnetstorefrontApiUser() {
    return aspdotnetstorefrontApiUser;
  }

  public void setAspdotnetstorefrontApiUser(String aspdotnetstorefrontApiUser) {
    this.aspdotnetstorefrontApiUser = aspdotnetstorefrontApiUser;
  }


  public AccountCartAdd bigcommerceapiAccessToken(String bigcommerceapiAccessToken) {
    this.bigcommerceapiAccessToken = bigcommerceapiAccessToken;
    return this;
  }

  /**
   * Access token authorizing the app to access resources on behalf of a user
   * @return bigcommerceapiAccessToken
   */
  @javax.annotation.Nullable
  public String getBigcommerceapiAccessToken() {
    return bigcommerceapiAccessToken;
  }

  public void setBigcommerceapiAccessToken(String bigcommerceapiAccessToken) {
    this.bigcommerceapiAccessToken = bigcommerceapiAccessToken;
  }


  public AccountCartAdd bigcommerceapiAdminAccount(String bigcommerceapiAdminAccount) {
    this.bigcommerceapiAdminAccount = bigcommerceapiAdminAccount;
    return this;
  }

  /**
   * It&#39;s a BigCommerce account for which API is enabled
   * @return bigcommerceapiAdminAccount
   */
  @javax.annotation.Nullable
  public String getBigcommerceapiAdminAccount() {
    return bigcommerceapiAdminAccount;
  }

  public void setBigcommerceapiAdminAccount(String bigcommerceapiAdminAccount) {
    this.bigcommerceapiAdminAccount = bigcommerceapiAdminAccount;
  }


  public AccountCartAdd bigcommerceapiApiKey(String bigcommerceapiApiKey) {
    this.bigcommerceapiApiKey = bigcommerceapiApiKey;
    return this;
  }

  /**
   * Bigcommerce API Key
   * @return bigcommerceapiApiKey
   */
  @javax.annotation.Nullable
  public String getBigcommerceapiApiKey() {
    return bigcommerceapiApiKey;
  }

  public void setBigcommerceapiApiKey(String bigcommerceapiApiKey) {
    this.bigcommerceapiApiKey = bigcommerceapiApiKey;
  }


  public AccountCartAdd bigcommerceapiApiPath(String bigcommerceapiApiPath) {
    this.bigcommerceapiApiPath = bigcommerceapiApiPath;
    return this;
  }

  /**
   * BigCommerce API URL
   * @return bigcommerceapiApiPath
   */
  @javax.annotation.Nullable
  public String getBigcommerceapiApiPath() {
    return bigcommerceapiApiPath;
  }

  public void setBigcommerceapiApiPath(String bigcommerceapiApiPath) {
    this.bigcommerceapiApiPath = bigcommerceapiApiPath;
  }


  public AccountCartAdd bigcommerceapiClientId(String bigcommerceapiClientId) {
    this.bigcommerceapiClientId = bigcommerceapiClientId;
    return this;
  }

  /**
   * Client ID of the requesting app
   * @return bigcommerceapiClientId
   */
  @javax.annotation.Nullable
  public String getBigcommerceapiClientId() {
    return bigcommerceapiClientId;
  }

  public void setBigcommerceapiClientId(String bigcommerceapiClientId) {
    this.bigcommerceapiClientId = bigcommerceapiClientId;
  }


  public AccountCartAdd bigcommerceapiContext(String bigcommerceapiContext) {
    this.bigcommerceapiContext = bigcommerceapiContext;
    return this;
  }

  /**
   * API Path section unique to the store
   * @return bigcommerceapiContext
   */
  @javax.annotation.Nullable
  public String getBigcommerceapiContext() {
    return bigcommerceapiContext;
  }

  public void setBigcommerceapiContext(String bigcommerceapiContext) {
    this.bigcommerceapiContext = bigcommerceapiContext;
  }


  public AccountCartAdd bridgeUrl(String bridgeUrl) {
    this.bridgeUrl = bridgeUrl;
    return this;
  }

  /**
   * This parameter allows to set up store with custom bridge url (also you must use store_root parameter if a bridge folder is not in the root folder of the store)
   * @return bridgeUrl
   */
  @javax.annotation.Nullable
  public String getBridgeUrl() {
    return bridgeUrl;
  }

  public void setBridgeUrl(String bridgeUrl) {
    this.bridgeUrl = bridgeUrl;
  }


  public AccountCartAdd cartId(CartIdEnum cartId) {
    this.cartId = cartId;
    return this;
  }

  /**
   * Storeâ€™s identifier which you can get from cart_list method
   * @return cartId
   */
  @javax.annotation.Nonnull
  public CartIdEnum getCartId() {
    return cartId;
  }

  public void setCartId(CartIdEnum cartId) {
    this.cartId = cartId;
  }


  public AccountCartAdd commercehqApiKey(String commercehqApiKey) {
    this.commercehqApiKey = commercehqApiKey;
    return this;
  }

  /**
   * CommerceHQ api key
   * @return commercehqApiKey
   */
  @javax.annotation.Nullable
  public String getCommercehqApiKey() {
    return commercehqApiKey;
  }

  public void setCommercehqApiKey(String commercehqApiKey) {
    this.commercehqApiKey = commercehqApiKey;
  }


  public AccountCartAdd commercehqApiPassword(String commercehqApiPassword) {
    this.commercehqApiPassword = commercehqApiPassword;
    return this;
  }

  /**
   * CommerceHQ api password
   * @return commercehqApiPassword
   */
  @javax.annotation.Nullable
  public String getCommercehqApiPassword() {
    return commercehqApiPassword;
  }

  public void setCommercehqApiPassword(String commercehqApiPassword) {
    this.commercehqApiPassword = commercehqApiPassword;
  }


  public AccountCartAdd dbTablesPrefix(String dbTablesPrefix) {
    this.dbTablesPrefix = dbTablesPrefix;
    return this;
  }

  /**
   * DB tables prefix
   * @return dbTablesPrefix
   */
  @javax.annotation.Nullable
  public String getDbTablesPrefix() {
    return dbTablesPrefix;
  }

  public void setDbTablesPrefix(String dbTablesPrefix) {
    this.dbTablesPrefix = dbTablesPrefix;
  }


  public AccountCartAdd demandwareApiPassword(String demandwareApiPassword) {
    this.demandwareApiPassword = demandwareApiPassword;
    return this;
  }

  /**
   * Demandware api password
   * @return demandwareApiPassword
   */
  @javax.annotation.Nullable
  public String getDemandwareApiPassword() {
    return demandwareApiPassword;
  }

  public void setDemandwareApiPassword(String demandwareApiPassword) {
    this.demandwareApiPassword = demandwareApiPassword;
  }


  public AccountCartAdd demandwareClientId(String demandwareClientId) {
    this.demandwareClientId = demandwareClientId;
    return this;
  }

  /**
   * Demandware client id
   * @return demandwareClientId
   */
  @javax.annotation.Nullable
  public String getDemandwareClientId() {
    return demandwareClientId;
  }

  public void setDemandwareClientId(String demandwareClientId) {
    this.demandwareClientId = demandwareClientId;
  }


  public AccountCartAdd demandwareUserName(String demandwareUserName) {
    this.demandwareUserName = demandwareUserName;
    return this;
  }

  /**
   * Demandware user name
   * @return demandwareUserName
   */
  @javax.annotation.Nullable
  public String getDemandwareUserName() {
    return demandwareUserName;
  }

  public void setDemandwareUserName(String demandwareUserName) {
    this.demandwareUserName = demandwareUserName;
  }


  public AccountCartAdd demandwareUserPassword(String demandwareUserPassword) {
    this.demandwareUserPassword = demandwareUserPassword;
    return this;
  }

  /**
   * Demandware user password
   * @return demandwareUserPassword
   */
  @javax.annotation.Nullable
  public String getDemandwareUserPassword() {
    return demandwareUserPassword;
  }

  public void setDemandwareUserPassword(String demandwareUserPassword) {
    this.demandwareUserPassword = demandwareUserPassword;
  }


  public AccountCartAdd ebayAccessToken(String ebayAccessToken) {
    this.ebayAccessToken = ebayAccessToken;
    return this;
  }

  /**
   * Used to authenticate API requests.
   * @return ebayAccessToken
   */
  @javax.annotation.Nullable
  public String getEbayAccessToken() {
    return ebayAccessToken;
  }

  public void setEbayAccessToken(String ebayAccessToken) {
    this.ebayAccessToken = ebayAccessToken;
  }


  public AccountCartAdd ebayClientId(String ebayClientId) {
    this.ebayClientId = ebayClientId;
    return this;
  }

  /**
   * Application ID (AppID).
   * @return ebayClientId
   */
  @javax.annotation.Nullable
  public String getEbayClientId() {
    return ebayClientId;
  }

  public void setEbayClientId(String ebayClientId) {
    this.ebayClientId = ebayClientId;
  }


  public AccountCartAdd ebayClientSecret(String ebayClientSecret) {
    this.ebayClientSecret = ebayClientSecret;
    return this;
  }

  /**
   * Shared Secret from eBay application
   * @return ebayClientSecret
   */
  @javax.annotation.Nullable
  public String getEbayClientSecret() {
    return ebayClientSecret;
  }

  public void setEbayClientSecret(String ebayClientSecret) {
    this.ebayClientSecret = ebayClientSecret;
  }


  public AccountCartAdd ebayEnvironment(String ebayEnvironment) {
    this.ebayEnvironment = ebayEnvironment;
    return this;
  }

  /**
   * eBay environment
   * @return ebayEnvironment
   */
  @javax.annotation.Nullable
  public String getEbayEnvironment() {
    return ebayEnvironment;
  }

  public void setEbayEnvironment(String ebayEnvironment) {
    this.ebayEnvironment = ebayEnvironment;
  }


  public AccountCartAdd ebayRefreshToken(String ebayRefreshToken) {
    this.ebayRefreshToken = ebayRefreshToken;
    return this;
  }

  /**
   * Used to renew the access token.
   * @return ebayRefreshToken
   */
  @javax.annotation.Nullable
  public String getEbayRefreshToken() {
    return ebayRefreshToken;
  }

  public void setEbayRefreshToken(String ebayRefreshToken) {
    this.ebayRefreshToken = ebayRefreshToken;
  }


  public AccountCartAdd ebayRuname(String ebayRuname) {
    this.ebayRuname = ebayRuname;
    return this;
  }

  /**
   * The RuName value that eBay assigns to your application.
   * @return ebayRuname
   */
  @javax.annotation.Nullable
  public String getEbayRuname() {
    return ebayRuname;
  }

  public void setEbayRuname(String ebayRuname) {
    this.ebayRuname = ebayRuname;
  }


  public AccountCartAdd ebaySiteId(Integer ebaySiteId) {
    this.ebaySiteId = ebaySiteId;
    return this;
  }

  /**
   * eBay global ID
   * @return ebaySiteId
   */
  @javax.annotation.Nullable
  public Integer getEbaySiteId() {
    return ebaySiteId;
  }

  public void setEbaySiteId(Integer ebaySiteId) {
    this.ebaySiteId = ebaySiteId;
  }


  public AccountCartAdd ecwidAcessToken(String ecwidAcessToken) {
    this.ecwidAcessToken = ecwidAcessToken;
    return this;
  }

  /**
   * Access token authorizing the app to access resources on behalf of a user
   * @return ecwidAcessToken
   */
  @javax.annotation.Nullable
  public String getEcwidAcessToken() {
    return ecwidAcessToken;
  }

  public void setEcwidAcessToken(String ecwidAcessToken) {
    this.ecwidAcessToken = ecwidAcessToken;
  }


  public AccountCartAdd ecwidStoreId(String ecwidStoreId) {
    this.ecwidStoreId = ecwidStoreId;
    return this;
  }

  /**
   * Store Id
   * @return ecwidStoreId
   */
  @javax.annotation.Nullable
  public String getEcwidStoreId() {
    return ecwidStoreId;
  }

  public void setEcwidStoreId(String ecwidStoreId) {
    this.ecwidStoreId = ecwidStoreId;
  }


  public AccountCartAdd etsyAccessToken(String etsyAccessToken) {
    this.etsyAccessToken = etsyAccessToken;
    return this;
  }

  /**
   * Access token authorizing the app to access resources on behalf of a user
   * @return etsyAccessToken
   */
  @javax.annotation.Nullable
  public String getEtsyAccessToken() {
    return etsyAccessToken;
  }

  public void setEtsyAccessToken(String etsyAccessToken) {
    this.etsyAccessToken = etsyAccessToken;
  }


  public AccountCartAdd etsyClientId(String etsyClientId) {
    this.etsyClientId = etsyClientId;
    return this;
  }

  /**
   * Etsy Client Id
   * @return etsyClientId
   */
  @javax.annotation.Nonnull
  public String getEtsyClientId() {
    return etsyClientId;
  }

  public void setEtsyClientId(String etsyClientId) {
    this.etsyClientId = etsyClientId;
  }


  public AccountCartAdd etsyKeystring(String etsyKeystring) {
    this.etsyKeystring = etsyKeystring;
    return this;
  }

  /**
   * Etsy keystring
   * @return etsyKeystring
   */
  @javax.annotation.Nullable
  public String getEtsyKeystring() {
    return etsyKeystring;
  }

  public void setEtsyKeystring(String etsyKeystring) {
    this.etsyKeystring = etsyKeystring;
  }


  public AccountCartAdd etsyRefreshToken(String etsyRefreshToken) {
    this.etsyRefreshToken = etsyRefreshToken;
    return this;
  }

  /**
   * Etsy Refresh token
   * @return etsyRefreshToken
   */
  @javax.annotation.Nonnull
  public String getEtsyRefreshToken() {
    return etsyRefreshToken;
  }

  public void setEtsyRefreshToken(String etsyRefreshToken) {
    this.etsyRefreshToken = etsyRefreshToken;
  }


  public AccountCartAdd etsySharedSecret(String etsySharedSecret) {
    this.etsySharedSecret = etsySharedSecret;
    return this;
  }

  /**
   * Etsy shared secret
   * @return etsySharedSecret
   */
  @javax.annotation.Nullable
  public String getEtsySharedSecret() {
    return etsySharedSecret;
  }

  public void setEtsySharedSecret(String etsySharedSecret) {
    this.etsySharedSecret = etsySharedSecret;
  }


  public AccountCartAdd etsyTokenSecret(String etsyTokenSecret) {
    this.etsyTokenSecret = etsyTokenSecret;
    return this;
  }

  /**
   * Secret token authorizing the app to access resources on behalf of a user
   * @return etsyTokenSecret
   */
  @javax.annotation.Nullable
  public String getEtsyTokenSecret() {
    return etsyTokenSecret;
  }

  public void setEtsyTokenSecret(String etsyTokenSecret) {
    this.etsyTokenSecret = etsyTokenSecret;
  }


  public AccountCartAdd ftpHost(String ftpHost) {
    this.ftpHost = ftpHost;
    return this;
  }

  /**
   * FTP connection host
   * @return ftpHost
   */
  @javax.annotation.Nullable
  public String getFtpHost() {
    return ftpHost;
  }

  public void setFtpHost(String ftpHost) {
    this.ftpHost = ftpHost;
  }


  public AccountCartAdd ftpPassword(String ftpPassword) {
    this.ftpPassword = ftpPassword;
    return this;
  }

  /**
   * FTP Password
   * @return ftpPassword
   */
  @javax.annotation.Nullable
  public String getFtpPassword() {
    return ftpPassword;
  }

  public void setFtpPassword(String ftpPassword) {
    this.ftpPassword = ftpPassword;
  }


  public AccountCartAdd ftpPort(Integer ftpPort) {
    this.ftpPort = ftpPort;
    return this;
  }

  /**
   * FTP Port
   * @return ftpPort
   */
  @javax.annotation.Nullable
  public Integer getFtpPort() {
    return ftpPort;
  }

  public void setFtpPort(Integer ftpPort) {
    this.ftpPort = ftpPort;
  }


  public AccountCartAdd ftpStoreDir(String ftpStoreDir) {
    this.ftpStoreDir = ftpStoreDir;
    return this;
  }

  /**
   * FTP Store dir
   * @return ftpStoreDir
   */
  @javax.annotation.Nullable
  public String getFtpStoreDir() {
    return ftpStoreDir;
  }

  public void setFtpStoreDir(String ftpStoreDir) {
    this.ftpStoreDir = ftpStoreDir;
  }


  public AccountCartAdd ftpUser(String ftpUser) {
    this.ftpUser = ftpUser;
    return this;
  }

  /**
   * FTP User
   * @return ftpUser
   */
  @javax.annotation.Nullable
  public String getFtpUser() {
    return ftpUser;
  }

  public void setFtpUser(String ftpUser) {
    this.ftpUser = ftpUser;
  }


  public AccountCartAdd hybrisClientId(String hybrisClientId) {
    this.hybrisClientId = hybrisClientId;
    return this;
  }

  /**
   * Omni Commerce Connector Client ID
   * @return hybrisClientId
   */
  @javax.annotation.Nullable
  public String getHybrisClientId() {
    return hybrisClientId;
  }

  public void setHybrisClientId(String hybrisClientId) {
    this.hybrisClientId = hybrisClientId;
  }


  public AccountCartAdd hybrisClientSecret(String hybrisClientSecret) {
    this.hybrisClientSecret = hybrisClientSecret;
    return this;
  }

  /**
   * Omni Commerce Connector Client Secret
   * @return hybrisClientSecret
   */
  @javax.annotation.Nullable
  public String getHybrisClientSecret() {
    return hybrisClientSecret;
  }

  public void setHybrisClientSecret(String hybrisClientSecret) {
    this.hybrisClientSecret = hybrisClientSecret;
  }


  public AccountCartAdd hybrisPassword(String hybrisPassword) {
    this.hybrisPassword = hybrisPassword;
    return this;
  }

  /**
   * User password
   * @return hybrisPassword
   */
  @javax.annotation.Nullable
  public String getHybrisPassword() {
    return hybrisPassword;
  }

  public void setHybrisPassword(String hybrisPassword) {
    this.hybrisPassword = hybrisPassword;
  }


  public AccountCartAdd hybrisUsername(String hybrisUsername) {
    this.hybrisUsername = hybrisUsername;
    return this;
  }

  /**
   * User Name
   * @return hybrisUsername
   */
  @javax.annotation.Nullable
  public String getHybrisUsername() {
    return hybrisUsername;
  }

  public void setHybrisUsername(String hybrisUsername) {
    this.hybrisUsername = hybrisUsername;
  }


  public AccountCartAdd hybrisWebsites(List<AccountCartAddHybrisWebsitesInner> hybrisWebsites) {
    this.hybrisWebsites = hybrisWebsites;
    return this;
  }

  public AccountCartAdd addHybrisWebsitesItem(AccountCartAddHybrisWebsitesInner hybrisWebsitesItem) {
    if (this.hybrisWebsites == null) {
      this.hybrisWebsites = new ArrayList<>();
    }
    this.hybrisWebsites.add(hybrisWebsitesItem);
    return this;
  }

  /**
   * Websites to stores mapping data
   * @return hybrisWebsites
   */
  @javax.annotation.Nullable
  public List<AccountCartAddHybrisWebsitesInner> getHybrisWebsites() {
    return hybrisWebsites;
  }

  public void setHybrisWebsites(List<AccountCartAddHybrisWebsitesInner> hybrisWebsites) {
    this.hybrisWebsites = hybrisWebsites;
  }


  public AccountCartAdd lightspeedApiKey(String lightspeedApiKey) {
    this.lightspeedApiKey = lightspeedApiKey;
    return this;
  }

  /**
   * LightSpeed api key
   * @return lightspeedApiKey
   */
  @javax.annotation.Nullable
  public String getLightspeedApiKey() {
    return lightspeedApiKey;
  }

  public void setLightspeedApiKey(String lightspeedApiKey) {
    this.lightspeedApiKey = lightspeedApiKey;
  }


  public AccountCartAdd lightspeedApiSecret(String lightspeedApiSecret) {
    this.lightspeedApiSecret = lightspeedApiSecret;
    return this;
  }

  /**
   * LightSpeed api secret
   * @return lightspeedApiSecret
   */
  @javax.annotation.Nullable
  public String getLightspeedApiSecret() {
    return lightspeedApiSecret;
  }

  public void setLightspeedApiSecret(String lightspeedApiSecret) {
    this.lightspeedApiSecret = lightspeedApiSecret;
  }


  public AccountCartAdd magentoAccessToken(String magentoAccessToken) {
    this.magentoAccessToken = magentoAccessToken;
    return this;
  }

  /**
   * Magento Access Token
   * @return magentoAccessToken
   */
  @javax.annotation.Nullable
  public String getMagentoAccessToken() {
    return magentoAccessToken;
  }

  public void setMagentoAccessToken(String magentoAccessToken) {
    this.magentoAccessToken = magentoAccessToken;
  }


  public AccountCartAdd magentoConsumerKey(String magentoConsumerKey) {
    this.magentoConsumerKey = magentoConsumerKey;
    return this;
  }

  /**
   * Magento Consumer Key
   * @return magentoConsumerKey
   */
  @javax.annotation.Nullable
  public String getMagentoConsumerKey() {
    return magentoConsumerKey;
  }

  public void setMagentoConsumerKey(String magentoConsumerKey) {
    this.magentoConsumerKey = magentoConsumerKey;
  }


  public AccountCartAdd magentoConsumerSecret(String magentoConsumerSecret) {
    this.magentoConsumerSecret = magentoConsumerSecret;
    return this;
  }

  /**
   * Magento Consumer Secret
   * @return magentoConsumerSecret
   */
  @javax.annotation.Nullable
  public String getMagentoConsumerSecret() {
    return magentoConsumerSecret;
  }

  public void setMagentoConsumerSecret(String magentoConsumerSecret) {
    this.magentoConsumerSecret = magentoConsumerSecret;
  }


  public AccountCartAdd magentoTokenSecret(String magentoTokenSecret) {
    this.magentoTokenSecret = magentoTokenSecret;
    return this;
  }

  /**
   * Magento Token Secret
   * @return magentoTokenSecret
   */
  @javax.annotation.Nullable
  public String getMagentoTokenSecret() {
    return magentoTokenSecret;
  }

  public void setMagentoTokenSecret(String magentoTokenSecret) {
    this.magentoTokenSecret = magentoTokenSecret;
  }


  public AccountCartAdd mercadoLibreAppId(String mercadoLibreAppId) {
    this.mercadoLibreAppId = mercadoLibreAppId;
    return this;
  }

  /**
   * Mercado Libre App ID
   * @return mercadoLibreAppId
   */
  @javax.annotation.Nullable
  public String getMercadoLibreAppId() {
    return mercadoLibreAppId;
  }

  public void setMercadoLibreAppId(String mercadoLibreAppId) {
    this.mercadoLibreAppId = mercadoLibreAppId;
  }


  public AccountCartAdd mercadoLibreAppSecretKey(String mercadoLibreAppSecretKey) {
    this.mercadoLibreAppSecretKey = mercadoLibreAppSecretKey;
    return this;
  }

  /**
   * Mercado Libre App Secret Key
   * @return mercadoLibreAppSecretKey
   */
  @javax.annotation.Nullable
  public String getMercadoLibreAppSecretKey() {
    return mercadoLibreAppSecretKey;
  }

  public void setMercadoLibreAppSecretKey(String mercadoLibreAppSecretKey) {
    this.mercadoLibreAppSecretKey = mercadoLibreAppSecretKey;
  }


  public AccountCartAdd mercadoLibreRefreshToken(String mercadoLibreRefreshToken) {
    this.mercadoLibreRefreshToken = mercadoLibreRefreshToken;
    return this;
  }

  /**
   * Mercado Libre Refresh Token
   * @return mercadoLibreRefreshToken
   */
  @javax.annotation.Nullable
  public String getMercadoLibreRefreshToken() {
    return mercadoLibreRefreshToken;
  }

  public void setMercadoLibreRefreshToken(String mercadoLibreRefreshToken) {
    this.mercadoLibreRefreshToken = mercadoLibreRefreshToken;
  }


  public AccountCartAdd netoApiKey(String netoApiKey) {
    this.netoApiKey = netoApiKey;
    return this;
  }

  /**
   * Neto API Key
   * @return netoApiKey
   */
  @javax.annotation.Nullable
  public String getNetoApiKey() {
    return netoApiKey;
  }

  public void setNetoApiKey(String netoApiKey) {
    this.netoApiKey = netoApiKey;
  }


  public AccountCartAdd netoApiUsername(String netoApiUsername) {
    this.netoApiUsername = netoApiUsername;
    return this;
  }

  /**
   * Neto User Name
   * @return netoApiUsername
   */
  @javax.annotation.Nullable
  public String getNetoApiUsername() {
    return netoApiUsername;
  }

  public void setNetoApiUsername(String netoApiUsername) {
    this.netoApiUsername = netoApiUsername;
  }


  public AccountCartAdd prestashopWebserviceKey(String prestashopWebserviceKey) {
    this.prestashopWebserviceKey = prestashopWebserviceKey;
    return this;
  }

  /**
   * Prestashop webservice key
   * @return prestashopWebserviceKey
   */
  @javax.annotation.Nullable
  public String getPrestashopWebserviceKey() {
    return prestashopWebserviceKey;
  }

  public void setPrestashopWebserviceKey(String prestashopWebserviceKey) {
    this.prestashopWebserviceKey = prestashopWebserviceKey;
  }


  public AccountCartAdd shopifyAccessToken(String shopifyAccessToken) {
    this.shopifyAccessToken = shopifyAccessToken;
    return this;
  }

  /**
   * Access token authorizing the app to access resources on behalf of a user
   * @return shopifyAccessToken
   */
  @javax.annotation.Nullable
  public String getShopifyAccessToken() {
    return shopifyAccessToken;
  }

  public void setShopifyAccessToken(String shopifyAccessToken) {
    this.shopifyAccessToken = shopifyAccessToken;
  }


  public AccountCartAdd shopifyApiKey(String shopifyApiKey) {
    this.shopifyApiKey = shopifyApiKey;
    return this;
  }

  /**
   * Shopify API Key
   * @return shopifyApiKey
   */
  @javax.annotation.Nullable
  public String getShopifyApiKey() {
    return shopifyApiKey;
  }

  public void setShopifyApiKey(String shopifyApiKey) {
    this.shopifyApiKey = shopifyApiKey;
  }


  public AccountCartAdd shopifyApiPassword(String shopifyApiPassword) {
    this.shopifyApiPassword = shopifyApiPassword;
    return this;
  }

  /**
   * Shopify API Password
   * @return shopifyApiPassword
   */
  @javax.annotation.Nullable
  public String getShopifyApiPassword() {
    return shopifyApiPassword;
  }

  public void setShopifyApiPassword(String shopifyApiPassword) {
    this.shopifyApiPassword = shopifyApiPassword;
  }


  public AccountCartAdd shopifySharedSecret(String shopifySharedSecret) {
    this.shopifySharedSecret = shopifySharedSecret;
    return this;
  }

  /**
   * Shared secret
   * @return shopifySharedSecret
   */
  @javax.annotation.Nullable
  public String getShopifySharedSecret() {
    return shopifySharedSecret;
  }

  public void setShopifySharedSecret(String shopifySharedSecret) {
    this.shopifySharedSecret = shopifySharedSecret;
  }


  public AccountCartAdd shopwareAccessKey(String shopwareAccessKey) {
    this.shopwareAccessKey = shopwareAccessKey;
    return this;
  }

  /**
   * Shopware access key
   * @return shopwareAccessKey
   */
  @javax.annotation.Nullable
  public String getShopwareAccessKey() {
    return shopwareAccessKey;
  }

  public void setShopwareAccessKey(String shopwareAccessKey) {
    this.shopwareAccessKey = shopwareAccessKey;
  }


  public AccountCartAdd shopwareApiKey(String shopwareApiKey) {
    this.shopwareApiKey = shopwareApiKey;
    return this;
  }

  /**
   * Shopware api key
   * @return shopwareApiKey
   */
  @javax.annotation.Nullable
  public String getShopwareApiKey() {
    return shopwareApiKey;
  }

  public void setShopwareApiKey(String shopwareApiKey) {
    this.shopwareApiKey = shopwareApiKey;
  }


  public AccountCartAdd shopwareApiSecret(String shopwareApiSecret) {
    this.shopwareApiSecret = shopwareApiSecret;
    return this;
  }

  /**
   * Shopware client secret access key
   * @return shopwareApiSecret
   */
  @javax.annotation.Nullable
  public String getShopwareApiSecret() {
    return shopwareApiSecret;
  }

  public void setShopwareApiSecret(String shopwareApiSecret) {
    this.shopwareApiSecret = shopwareApiSecret;
  }


  public AccountCartAdd squarespaceApiKey(String squarespaceApiKey) {
    this.squarespaceApiKey = squarespaceApiKey;
    return this;
  }

  /**
   * Squarespace API Key
   * @return squarespaceApiKey
   */
  @javax.annotation.Nullable
  public String getSquarespaceApiKey() {
    return squarespaceApiKey;
  }

  public void setSquarespaceApiKey(String squarespaceApiKey) {
    this.squarespaceApiKey = squarespaceApiKey;
  }


  public AccountCartAdd storeKey(String storeKey) {
    this.storeKey = storeKey;
    return this;
  }

  /**
   * Set this parameter if bridge is already uploaded to store
   * @return storeKey
   */
  @javax.annotation.Nullable
  public String getStoreKey() {
    return storeKey;
  }

  public void setStoreKey(String storeKey) {
    this.storeKey = storeKey;
  }


  public AccountCartAdd storeRoot(String storeRoot) {
    this.storeRoot = storeRoot;
    return this;
  }

  /**
   * Absolute path to the store root directory (used with \&quot;bridge_url\&quot; parameter)
   * @return storeRoot
   */
  @javax.annotation.Nullable
  public String getStoreRoot() {
    return storeRoot;
  }

  public void setStoreRoot(String storeRoot) {
    this.storeRoot = storeRoot;
  }


  public AccountCartAdd storeUrl(String storeUrl) {
    this.storeUrl = storeUrl;
    return this;
  }

  /**
   * A web address of a store that you would like to connect to API2Cart
   * @return storeUrl
   */
  @javax.annotation.Nonnull
  public String getStoreUrl() {
    return storeUrl;
  }

  public void setStoreUrl(String storeUrl) {
    this.storeUrl = storeUrl;
  }


  public AccountCartAdd validateVersion(Boolean validateVersion) {
    this.validateVersion = validateVersion;
    return this;
  }

  /**
   * Specify if api2cart should validate cart version
   * @return validateVersion
   */
  @javax.annotation.Nullable
  public Boolean getValidateVersion() {
    return validateVersion;
  }

  public void setValidateVersion(Boolean validateVersion) {
    this.validateVersion = validateVersion;
  }


  public AccountCartAdd verify(Boolean verify) {
    this.verify = verify;
    return this;
  }

  /**
   * Enables or disables cart&#39;s verification
   * @return verify
   */
  @javax.annotation.Nullable
  public Boolean getVerify() {
    return verify;
  }

  public void setVerify(Boolean verify) {
    this.verify = verify;
  }


  public AccountCartAdd volusionLogin(String volusionLogin) {
    this.volusionLogin = volusionLogin;
    return this;
  }

  /**
   * It&#39;s a Volusion account for which API is enabled
   * @return volusionLogin
   */
  @javax.annotation.Nullable
  public String getVolusionLogin() {
    return volusionLogin;
  }

  public void setVolusionLogin(String volusionLogin) {
    this.volusionLogin = volusionLogin;
  }


  public AccountCartAdd volusionPassword(String volusionPassword) {
    this.volusionPassword = volusionPassword;
    return this;
  }

  /**
   * Volusion API Password
   * @return volusionPassword
   */
  @javax.annotation.Nullable
  public String getVolusionPassword() {
    return volusionPassword;
  }

  public void setVolusionPassword(String volusionPassword) {
    this.volusionPassword = volusionPassword;
  }


  public AccountCartAdd walmartChannelType(String walmartChannelType) {
    this.walmartChannelType = walmartChannelType;
    return this;
  }

  /**
   * Walmart WM_CONSUMER.CHANNEL.TYPE header
   * @return walmartChannelType
   */
  @javax.annotation.Nullable
  public String getWalmartChannelType() {
    return walmartChannelType;
  }

  public void setWalmartChannelType(String walmartChannelType) {
    this.walmartChannelType = walmartChannelType;
  }


  public AccountCartAdd walmartClientId(String walmartClientId) {
    this.walmartClientId = walmartClientId;
    return this;
  }

  /**
   * Walmart client ID
   * @return walmartClientId
   */
  @javax.annotation.Nullable
  public String getWalmartClientId() {
    return walmartClientId;
  }

  public void setWalmartClientId(String walmartClientId) {
    this.walmartClientId = walmartClientId;
  }


  public AccountCartAdd walmartClientSecret(String walmartClientSecret) {
    this.walmartClientSecret = walmartClientSecret;
    return this;
  }

  /**
   * Walmart client secret
   * @return walmartClientSecret
   */
  @javax.annotation.Nullable
  public String getWalmartClientSecret() {
    return walmartClientSecret;
  }

  public void setWalmartClientSecret(String walmartClientSecret) {
    this.walmartClientSecret = walmartClientSecret;
  }


  public AccountCartAdd walmartEnvironment(String walmartEnvironment) {
    this.walmartEnvironment = walmartEnvironment;
    return this;
  }

  /**
   * Walmart environment
   * @return walmartEnvironment
   */
  @javax.annotation.Nullable
  public String getWalmartEnvironment() {
    return walmartEnvironment;
  }

  public void setWalmartEnvironment(String walmartEnvironment) {
    this.walmartEnvironment = walmartEnvironment;
  }


  public AccountCartAdd wcConsumerKey(String wcConsumerKey) {
    this.wcConsumerKey = wcConsumerKey;
    return this;
  }

  /**
   * Woocommerce consumer key
   * @return wcConsumerKey
   */
  @javax.annotation.Nullable
  public String getWcConsumerKey() {
    return wcConsumerKey;
  }

  public void setWcConsumerKey(String wcConsumerKey) {
    this.wcConsumerKey = wcConsumerKey;
  }


  public AccountCartAdd wcConsumerSecret(String wcConsumerSecret) {
    this.wcConsumerSecret = wcConsumerSecret;
    return this;
  }

  /**
   * Woocommerce consumer secret
   * @return wcConsumerSecret
   */
  @javax.annotation.Nullable
  public String getWcConsumerSecret() {
    return wcConsumerSecret;
  }

  public void setWcConsumerSecret(String wcConsumerSecret) {
    this.wcConsumerSecret = wcConsumerSecret;
  }


  public AccountCartAdd wixAppId(String wixAppId) {
    this.wixAppId = wixAppId;
    return this;
  }

  /**
   * Wix App ID
   * @return wixAppId
   */
  @javax.annotation.Nullable
  public String getWixAppId() {
    return wixAppId;
  }

  public void setWixAppId(String wixAppId) {
    this.wixAppId = wixAppId;
  }


  public AccountCartAdd wixAppSecretKey(String wixAppSecretKey) {
    this.wixAppSecretKey = wixAppSecretKey;
    return this;
  }

  /**
   * Wix App Secret Key
   * @return wixAppSecretKey
   */
  @javax.annotation.Nullable
  public String getWixAppSecretKey() {
    return wixAppSecretKey;
  }

  public void setWixAppSecretKey(String wixAppSecretKey) {
    this.wixAppSecretKey = wixAppSecretKey;
  }


  public AccountCartAdd wixRefreshToken(String wixRefreshToken) {
    this.wixRefreshToken = wixRefreshToken;
    return this;
  }

  /**
   * Wix refresh token
   * @return wixRefreshToken
   */
  @javax.annotation.Nullable
  public String getWixRefreshToken() {
    return wixRefreshToken;
  }

  public void setWixRefreshToken(String wixRefreshToken) {
    this.wixRefreshToken = wixRefreshToken;
  }


  public AccountCartAdd zidAccessToken(String zidAccessToken) {
    this.zidAccessToken = zidAccessToken;
    return this;
  }

  /**
   * Zid Access Token
   * @return zidAccessToken
   */
  @javax.annotation.Nullable
  public String getZidAccessToken() {
    return zidAccessToken;
  }

  public void setZidAccessToken(String zidAccessToken) {
    this.zidAccessToken = zidAccessToken;
  }


  public AccountCartAdd zidAuthorization(String zidAuthorization) {
    this.zidAuthorization = zidAuthorization;
    return this;
  }

  /**
   * Zid Authorization
   * @return zidAuthorization
   */
  @javax.annotation.Nullable
  public String getZidAuthorization() {
    return zidAuthorization;
  }

  public void setZidAuthorization(String zidAuthorization) {
    this.zidAuthorization = zidAuthorization;
  }


  public AccountCartAdd zidClientId(Integer zidClientId) {
    this.zidClientId = zidClientId;
    return this;
  }

  /**
   * Zid Client ID
   * @return zidClientId
   */
  @javax.annotation.Nullable
  public Integer getZidClientId() {
    return zidClientId;
  }

  public void setZidClientId(Integer zidClientId) {
    this.zidClientId = zidClientId;
  }


  public AccountCartAdd zidClientSecret(String zidClientSecret) {
    this.zidClientSecret = zidClientSecret;
    return this;
  }

  /**
   * Zid Client Secret
   * @return zidClientSecret
   */
  @javax.annotation.Nullable
  public String getZidClientSecret() {
    return zidClientSecret;
  }

  public void setZidClientSecret(String zidClientSecret) {
    this.zidClientSecret = zidClientSecret;
  }


  public AccountCartAdd zidRefreshToken(String zidRefreshToken) {
    this.zidRefreshToken = zidRefreshToken;
    return this;
  }

  /**
   * Zid refresh token
   * @return zidRefreshToken
   */
  @javax.annotation.Nullable
  public String getZidRefreshToken() {
    return zidRefreshToken;
  }

  public void setZidRefreshToken(String zidRefreshToken) {
    this.zidRefreshToken = zidRefreshToken;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountCartAdd accountCartAdd = (AccountCartAdd) o;
    return Objects.equals(this._3dcartAccessToken, accountCartAdd._3dcartAccessToken) &&
        Objects.equals(this._3dcartPrivateKey, accountCartAdd._3dcartPrivateKey) &&
        Objects.equals(this._3dcartapiApiKey, accountCartAdd._3dcartapiApiKey) &&
        Objects.equals(this.amazonAccessKeyId, accountCartAdd.amazonAccessKeyId) &&
        Objects.equals(this.amazonAccessToken, accountCartAdd.amazonAccessToken) &&
        Objects.equals(this.amazonMarketplacesIds, accountCartAdd.amazonMarketplacesIds) &&
        Objects.equals(this.amazonSecretKey, accountCartAdd.amazonSecretKey) &&
        Objects.equals(this.amazonSellerId, accountCartAdd.amazonSellerId) &&
        Objects.equals(this.amazonSpApiEnvironment, accountCartAdd.amazonSpApiEnvironment) &&
        Objects.equals(this.amazonSpAwsRegion, accountCartAdd.amazonSpAwsRegion) &&
        Objects.equals(this.amazonSpAwsRoleArn, accountCartAdd.amazonSpAwsRoleArn) &&
        Objects.equals(this.amazonSpAwsUserKeyId, accountCartAdd.amazonSpAwsUserKeyId) &&
        Objects.equals(this.amazonSpAwsUserSecret, accountCartAdd.amazonSpAwsUserSecret) &&
        Objects.equals(this.amazonSpClientId, accountCartAdd.amazonSpClientId) &&
        Objects.equals(this.amazonSpClientSecret, accountCartAdd.amazonSpClientSecret) &&
        Objects.equals(this.amazonSpRefreshToken, accountCartAdd.amazonSpRefreshToken) &&
        Objects.equals(this.aspdotnetstorefrontApiPass, accountCartAdd.aspdotnetstorefrontApiPass) &&
        Objects.equals(this.aspdotnetstorefrontApiUser, accountCartAdd.aspdotnetstorefrontApiUser) &&
        Objects.equals(this.bigcommerceapiAccessToken, accountCartAdd.bigcommerceapiAccessToken) &&
        Objects.equals(this.bigcommerceapiAdminAccount, accountCartAdd.bigcommerceapiAdminAccount) &&
        Objects.equals(this.bigcommerceapiApiKey, accountCartAdd.bigcommerceapiApiKey) &&
        Objects.equals(this.bigcommerceapiApiPath, accountCartAdd.bigcommerceapiApiPath) &&
        Objects.equals(this.bigcommerceapiClientId, accountCartAdd.bigcommerceapiClientId) &&
        Objects.equals(this.bigcommerceapiContext, accountCartAdd.bigcommerceapiContext) &&
        Objects.equals(this.bridgeUrl, accountCartAdd.bridgeUrl) &&
        Objects.equals(this.cartId, accountCartAdd.cartId) &&
        Objects.equals(this.commercehqApiKey, accountCartAdd.commercehqApiKey) &&
        Objects.equals(this.commercehqApiPassword, accountCartAdd.commercehqApiPassword) &&
        Objects.equals(this.dbTablesPrefix, accountCartAdd.dbTablesPrefix) &&
        Objects.equals(this.demandwareApiPassword, accountCartAdd.demandwareApiPassword) &&
        Objects.equals(this.demandwareClientId, accountCartAdd.demandwareClientId) &&
        Objects.equals(this.demandwareUserName, accountCartAdd.demandwareUserName) &&
        Objects.equals(this.demandwareUserPassword, accountCartAdd.demandwareUserPassword) &&
        Objects.equals(this.ebayAccessToken, accountCartAdd.ebayAccessToken) &&
        Objects.equals(this.ebayClientId, accountCartAdd.ebayClientId) &&
        Objects.equals(this.ebayClientSecret, accountCartAdd.ebayClientSecret) &&
        Objects.equals(this.ebayEnvironment, accountCartAdd.ebayEnvironment) &&
        Objects.equals(this.ebayRefreshToken, accountCartAdd.ebayRefreshToken) &&
        Objects.equals(this.ebayRuname, accountCartAdd.ebayRuname) &&
        Objects.equals(this.ebaySiteId, accountCartAdd.ebaySiteId) &&
        Objects.equals(this.ecwidAcessToken, accountCartAdd.ecwidAcessToken) &&
        Objects.equals(this.ecwidStoreId, accountCartAdd.ecwidStoreId) &&
        Objects.equals(this.etsyAccessToken, accountCartAdd.etsyAccessToken) &&
        Objects.equals(this.etsyClientId, accountCartAdd.etsyClientId) &&
        Objects.equals(this.etsyKeystring, accountCartAdd.etsyKeystring) &&
        Objects.equals(this.etsyRefreshToken, accountCartAdd.etsyRefreshToken) &&
        Objects.equals(this.etsySharedSecret, accountCartAdd.etsySharedSecret) &&
        Objects.equals(this.etsyTokenSecret, accountCartAdd.etsyTokenSecret) &&
        Objects.equals(this.ftpHost, accountCartAdd.ftpHost) &&
        Objects.equals(this.ftpPassword, accountCartAdd.ftpPassword) &&
        Objects.equals(this.ftpPort, accountCartAdd.ftpPort) &&
        Objects.equals(this.ftpStoreDir, accountCartAdd.ftpStoreDir) &&
        Objects.equals(this.ftpUser, accountCartAdd.ftpUser) &&
        Objects.equals(this.hybrisClientId, accountCartAdd.hybrisClientId) &&
        Objects.equals(this.hybrisClientSecret, accountCartAdd.hybrisClientSecret) &&
        Objects.equals(this.hybrisPassword, accountCartAdd.hybrisPassword) &&
        Objects.equals(this.hybrisUsername, accountCartAdd.hybrisUsername) &&
        Objects.equals(this.hybrisWebsites, accountCartAdd.hybrisWebsites) &&
        Objects.equals(this.lightspeedApiKey, accountCartAdd.lightspeedApiKey) &&
        Objects.equals(this.lightspeedApiSecret, accountCartAdd.lightspeedApiSecret) &&
        Objects.equals(this.magentoAccessToken, accountCartAdd.magentoAccessToken) &&
        Objects.equals(this.magentoConsumerKey, accountCartAdd.magentoConsumerKey) &&
        Objects.equals(this.magentoConsumerSecret, accountCartAdd.magentoConsumerSecret) &&
        Objects.equals(this.magentoTokenSecret, accountCartAdd.magentoTokenSecret) &&
        Objects.equals(this.mercadoLibreAppId, accountCartAdd.mercadoLibreAppId) &&
        Objects.equals(this.mercadoLibreAppSecretKey, accountCartAdd.mercadoLibreAppSecretKey) &&
        Objects.equals(this.mercadoLibreRefreshToken, accountCartAdd.mercadoLibreRefreshToken) &&
        Objects.equals(this.netoApiKey, accountCartAdd.netoApiKey) &&
        Objects.equals(this.netoApiUsername, accountCartAdd.netoApiUsername) &&
        Objects.equals(this.prestashopWebserviceKey, accountCartAdd.prestashopWebserviceKey) &&
        Objects.equals(this.shopifyAccessToken, accountCartAdd.shopifyAccessToken) &&
        Objects.equals(this.shopifyApiKey, accountCartAdd.shopifyApiKey) &&
        Objects.equals(this.shopifyApiPassword, accountCartAdd.shopifyApiPassword) &&
        Objects.equals(this.shopifySharedSecret, accountCartAdd.shopifySharedSecret) &&
        Objects.equals(this.shopwareAccessKey, accountCartAdd.shopwareAccessKey) &&
        Objects.equals(this.shopwareApiKey, accountCartAdd.shopwareApiKey) &&
        Objects.equals(this.shopwareApiSecret, accountCartAdd.shopwareApiSecret) &&
        Objects.equals(this.squarespaceApiKey, accountCartAdd.squarespaceApiKey) &&
        Objects.equals(this.storeKey, accountCartAdd.storeKey) &&
        Objects.equals(this.storeRoot, accountCartAdd.storeRoot) &&
        Objects.equals(this.storeUrl, accountCartAdd.storeUrl) &&
        Objects.equals(this.validateVersion, accountCartAdd.validateVersion) &&
        Objects.equals(this.verify, accountCartAdd.verify) &&
        Objects.equals(this.volusionLogin, accountCartAdd.volusionLogin) &&
        Objects.equals(this.volusionPassword, accountCartAdd.volusionPassword) &&
        Objects.equals(this.walmartChannelType, accountCartAdd.walmartChannelType) &&
        Objects.equals(this.walmartClientId, accountCartAdd.walmartClientId) &&
        Objects.equals(this.walmartClientSecret, accountCartAdd.walmartClientSecret) &&
        Objects.equals(this.walmartEnvironment, accountCartAdd.walmartEnvironment) &&
        Objects.equals(this.wcConsumerKey, accountCartAdd.wcConsumerKey) &&
        Objects.equals(this.wcConsumerSecret, accountCartAdd.wcConsumerSecret) &&
        Objects.equals(this.wixAppId, accountCartAdd.wixAppId) &&
        Objects.equals(this.wixAppSecretKey, accountCartAdd.wixAppSecretKey) &&
        Objects.equals(this.wixRefreshToken, accountCartAdd.wixRefreshToken) &&
        Objects.equals(this.zidAccessToken, accountCartAdd.zidAccessToken) &&
        Objects.equals(this.zidAuthorization, accountCartAdd.zidAuthorization) &&
        Objects.equals(this.zidClientId, accountCartAdd.zidClientId) &&
        Objects.equals(this.zidClientSecret, accountCartAdd.zidClientSecret) &&
        Objects.equals(this.zidRefreshToken, accountCartAdd.zidRefreshToken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(_3dcartAccessToken, _3dcartPrivateKey, _3dcartapiApiKey, amazonAccessKeyId, amazonAccessToken, amazonMarketplacesIds, amazonSecretKey, amazonSellerId, amazonSpApiEnvironment, amazonSpAwsRegion, amazonSpAwsRoleArn, amazonSpAwsUserKeyId, amazonSpAwsUserSecret, amazonSpClientId, amazonSpClientSecret, amazonSpRefreshToken, aspdotnetstorefrontApiPass, aspdotnetstorefrontApiUser, bigcommerceapiAccessToken, bigcommerceapiAdminAccount, bigcommerceapiApiKey, bigcommerceapiApiPath, bigcommerceapiClientId, bigcommerceapiContext, bridgeUrl, cartId, commercehqApiKey, commercehqApiPassword, dbTablesPrefix, demandwareApiPassword, demandwareClientId, demandwareUserName, demandwareUserPassword, ebayAccessToken, ebayClientId, ebayClientSecret, ebayEnvironment, ebayRefreshToken, ebayRuname, ebaySiteId, ecwidAcessToken, ecwidStoreId, etsyAccessToken, etsyClientId, etsyKeystring, etsyRefreshToken, etsySharedSecret, etsyTokenSecret, ftpHost, ftpPassword, ftpPort, ftpStoreDir, ftpUser, hybrisClientId, hybrisClientSecret, hybrisPassword, hybrisUsername, hybrisWebsites, lightspeedApiKey, lightspeedApiSecret, magentoAccessToken, magentoConsumerKey, magentoConsumerSecret, magentoTokenSecret, mercadoLibreAppId, mercadoLibreAppSecretKey, mercadoLibreRefreshToken, netoApiKey, netoApiUsername, prestashopWebserviceKey, shopifyAccessToken, shopifyApiKey, shopifyApiPassword, shopifySharedSecret, shopwareAccessKey, shopwareApiKey, shopwareApiSecret, squarespaceApiKey, storeKey, storeRoot, storeUrl, validateVersion, verify, volusionLogin, volusionPassword, walmartChannelType, walmartClientId, walmartClientSecret, walmartEnvironment, wcConsumerKey, wcConsumerSecret, wixAppId, wixAppSecretKey, wixRefreshToken, zidAccessToken, zidAuthorization, zidClientId, zidClientSecret, zidRefreshToken);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountCartAdd {\n");
    sb.append("    _3dcartAccessToken: ").append(toIndentedString(_3dcartAccessToken)).append("\n");
    sb.append("    _3dcartPrivateKey: ").append(toIndentedString(_3dcartPrivateKey)).append("\n");
    sb.append("    _3dcartapiApiKey: ").append(toIndentedString(_3dcartapiApiKey)).append("\n");
    sb.append("    amazonAccessKeyId: ").append(toIndentedString(amazonAccessKeyId)).append("\n");
    sb.append("    amazonAccessToken: ").append(toIndentedString(amazonAccessToken)).append("\n");
    sb.append("    amazonMarketplacesIds: ").append(toIndentedString(amazonMarketplacesIds)).append("\n");
    sb.append("    amazonSecretKey: ").append(toIndentedString(amazonSecretKey)).append("\n");
    sb.append("    amazonSellerId: ").append(toIndentedString(amazonSellerId)).append("\n");
    sb.append("    amazonSpApiEnvironment: ").append(toIndentedString(amazonSpApiEnvironment)).append("\n");
    sb.append("    amazonSpAwsRegion: ").append(toIndentedString(amazonSpAwsRegion)).append("\n");
    sb.append("    amazonSpAwsRoleArn: ").append(toIndentedString(amazonSpAwsRoleArn)).append("\n");
    sb.append("    amazonSpAwsUserKeyId: ").append(toIndentedString(amazonSpAwsUserKeyId)).append("\n");
    sb.append("    amazonSpAwsUserSecret: ").append(toIndentedString(amazonSpAwsUserSecret)).append("\n");
    sb.append("    amazonSpClientId: ").append(toIndentedString(amazonSpClientId)).append("\n");
    sb.append("    amazonSpClientSecret: ").append(toIndentedString(amazonSpClientSecret)).append("\n");
    sb.append("    amazonSpRefreshToken: ").append(toIndentedString(amazonSpRefreshToken)).append("\n");
    sb.append("    aspdotnetstorefrontApiPass: ").append(toIndentedString(aspdotnetstorefrontApiPass)).append("\n");
    sb.append("    aspdotnetstorefrontApiUser: ").append(toIndentedString(aspdotnetstorefrontApiUser)).append("\n");
    sb.append("    bigcommerceapiAccessToken: ").append(toIndentedString(bigcommerceapiAccessToken)).append("\n");
    sb.append("    bigcommerceapiAdminAccount: ").append(toIndentedString(bigcommerceapiAdminAccount)).append("\n");
    sb.append("    bigcommerceapiApiKey: ").append(toIndentedString(bigcommerceapiApiKey)).append("\n");
    sb.append("    bigcommerceapiApiPath: ").append(toIndentedString(bigcommerceapiApiPath)).append("\n");
    sb.append("    bigcommerceapiClientId: ").append(toIndentedString(bigcommerceapiClientId)).append("\n");
    sb.append("    bigcommerceapiContext: ").append(toIndentedString(bigcommerceapiContext)).append("\n");
    sb.append("    bridgeUrl: ").append(toIndentedString(bridgeUrl)).append("\n");
    sb.append("    cartId: ").append(toIndentedString(cartId)).append("\n");
    sb.append("    commercehqApiKey: ").append(toIndentedString(commercehqApiKey)).append("\n");
    sb.append("    commercehqApiPassword: ").append(toIndentedString(commercehqApiPassword)).append("\n");
    sb.append("    dbTablesPrefix: ").append(toIndentedString(dbTablesPrefix)).append("\n");
    sb.append("    demandwareApiPassword: ").append(toIndentedString(demandwareApiPassword)).append("\n");
    sb.append("    demandwareClientId: ").append(toIndentedString(demandwareClientId)).append("\n");
    sb.append("    demandwareUserName: ").append(toIndentedString(demandwareUserName)).append("\n");
    sb.append("    demandwareUserPassword: ").append(toIndentedString(demandwareUserPassword)).append("\n");
    sb.append("    ebayAccessToken: ").append(toIndentedString(ebayAccessToken)).append("\n");
    sb.append("    ebayClientId: ").append(toIndentedString(ebayClientId)).append("\n");
    sb.append("    ebayClientSecret: ").append(toIndentedString(ebayClientSecret)).append("\n");
    sb.append("    ebayEnvironment: ").append(toIndentedString(ebayEnvironment)).append("\n");
    sb.append("    ebayRefreshToken: ").append(toIndentedString(ebayRefreshToken)).append("\n");
    sb.append("    ebayRuname: ").append(toIndentedString(ebayRuname)).append("\n");
    sb.append("    ebaySiteId: ").append(toIndentedString(ebaySiteId)).append("\n");
    sb.append("    ecwidAcessToken: ").append(toIndentedString(ecwidAcessToken)).append("\n");
    sb.append("    ecwidStoreId: ").append(toIndentedString(ecwidStoreId)).append("\n");
    sb.append("    etsyAccessToken: ").append(toIndentedString(etsyAccessToken)).append("\n");
    sb.append("    etsyClientId: ").append(toIndentedString(etsyClientId)).append("\n");
    sb.append("    etsyKeystring: ").append(toIndentedString(etsyKeystring)).append("\n");
    sb.append("    etsyRefreshToken: ").append(toIndentedString(etsyRefreshToken)).append("\n");
    sb.append("    etsySharedSecret: ").append(toIndentedString(etsySharedSecret)).append("\n");
    sb.append("    etsyTokenSecret: ").append(toIndentedString(etsyTokenSecret)).append("\n");
    sb.append("    ftpHost: ").append(toIndentedString(ftpHost)).append("\n");
    sb.append("    ftpPassword: ").append(toIndentedString(ftpPassword)).append("\n");
    sb.append("    ftpPort: ").append(toIndentedString(ftpPort)).append("\n");
    sb.append("    ftpStoreDir: ").append(toIndentedString(ftpStoreDir)).append("\n");
    sb.append("    ftpUser: ").append(toIndentedString(ftpUser)).append("\n");
    sb.append("    hybrisClientId: ").append(toIndentedString(hybrisClientId)).append("\n");
    sb.append("    hybrisClientSecret: ").append(toIndentedString(hybrisClientSecret)).append("\n");
    sb.append("    hybrisPassword: ").append(toIndentedString(hybrisPassword)).append("\n");
    sb.append("    hybrisUsername: ").append(toIndentedString(hybrisUsername)).append("\n");
    sb.append("    hybrisWebsites: ").append(toIndentedString(hybrisWebsites)).append("\n");
    sb.append("    lightspeedApiKey: ").append(toIndentedString(lightspeedApiKey)).append("\n");
    sb.append("    lightspeedApiSecret: ").append(toIndentedString(lightspeedApiSecret)).append("\n");
    sb.append("    magentoAccessToken: ").append(toIndentedString(magentoAccessToken)).append("\n");
    sb.append("    magentoConsumerKey: ").append(toIndentedString(magentoConsumerKey)).append("\n");
    sb.append("    magentoConsumerSecret: ").append(toIndentedString(magentoConsumerSecret)).append("\n");
    sb.append("    magentoTokenSecret: ").append(toIndentedString(magentoTokenSecret)).append("\n");
    sb.append("    mercadoLibreAppId: ").append(toIndentedString(mercadoLibreAppId)).append("\n");
    sb.append("    mercadoLibreAppSecretKey: ").append(toIndentedString(mercadoLibreAppSecretKey)).append("\n");
    sb.append("    mercadoLibreRefreshToken: ").append(toIndentedString(mercadoLibreRefreshToken)).append("\n");
    sb.append("    netoApiKey: ").append(toIndentedString(netoApiKey)).append("\n");
    sb.append("    netoApiUsername: ").append(toIndentedString(netoApiUsername)).append("\n");
    sb.append("    prestashopWebserviceKey: ").append(toIndentedString(prestashopWebserviceKey)).append("\n");
    sb.append("    shopifyAccessToken: ").append(toIndentedString(shopifyAccessToken)).append("\n");
    sb.append("    shopifyApiKey: ").append(toIndentedString(shopifyApiKey)).append("\n");
    sb.append("    shopifyApiPassword: ").append(toIndentedString(shopifyApiPassword)).append("\n");
    sb.append("    shopifySharedSecret: ").append(toIndentedString(shopifySharedSecret)).append("\n");
    sb.append("    shopwareAccessKey: ").append(toIndentedString(shopwareAccessKey)).append("\n");
    sb.append("    shopwareApiKey: ").append(toIndentedString(shopwareApiKey)).append("\n");
    sb.append("    shopwareApiSecret: ").append(toIndentedString(shopwareApiSecret)).append("\n");
    sb.append("    squarespaceApiKey: ").append(toIndentedString(squarespaceApiKey)).append("\n");
    sb.append("    storeKey: ").append(toIndentedString(storeKey)).append("\n");
    sb.append("    storeRoot: ").append(toIndentedString(storeRoot)).append("\n");
    sb.append("    storeUrl: ").append(toIndentedString(storeUrl)).append("\n");
    sb.append("    validateVersion: ").append(toIndentedString(validateVersion)).append("\n");
    sb.append("    verify: ").append(toIndentedString(verify)).append("\n");
    sb.append("    volusionLogin: ").append(toIndentedString(volusionLogin)).append("\n");
    sb.append("    volusionPassword: ").append(toIndentedString(volusionPassword)).append("\n");
    sb.append("    walmartChannelType: ").append(toIndentedString(walmartChannelType)).append("\n");
    sb.append("    walmartClientId: ").append(toIndentedString(walmartClientId)).append("\n");
    sb.append("    walmartClientSecret: ").append(toIndentedString(walmartClientSecret)).append("\n");
    sb.append("    walmartEnvironment: ").append(toIndentedString(walmartEnvironment)).append("\n");
    sb.append("    wcConsumerKey: ").append(toIndentedString(wcConsumerKey)).append("\n");
    sb.append("    wcConsumerSecret: ").append(toIndentedString(wcConsumerSecret)).append("\n");
    sb.append("    wixAppId: ").append(toIndentedString(wixAppId)).append("\n");
    sb.append("    wixAppSecretKey: ").append(toIndentedString(wixAppSecretKey)).append("\n");
    sb.append("    wixRefreshToken: ").append(toIndentedString(wixRefreshToken)).append("\n");
    sb.append("    zidAccessToken: ").append(toIndentedString(zidAccessToken)).append("\n");
    sb.append("    zidAuthorization: ").append(toIndentedString(zidAuthorization)).append("\n");
    sb.append("    zidClientId: ").append(toIndentedString(zidClientId)).append("\n");
    sb.append("    zidClientSecret: ").append(toIndentedString(zidClientSecret)).append("\n");
    sb.append("    zidRefreshToken: ").append(toIndentedString(zidRefreshToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("3dcart_access_token");
    openapiFields.add("3dcart_private_key");
    openapiFields.add("3dcartapi_api_key");
    openapiFields.add("amazon_access_key_id");
    openapiFields.add("amazon_access_token");
    openapiFields.add("amazon_marketplaces_ids");
    openapiFields.add("amazon_secret_key");
    openapiFields.add("amazon_seller_id");
    openapiFields.add("amazon_sp_api_environment");
    openapiFields.add("amazon_sp_aws_region");
    openapiFields.add("amazon_sp_aws_role_arn");
    openapiFields.add("amazon_sp_aws_user_key_id");
    openapiFields.add("amazon_sp_aws_user_secret");
    openapiFields.add("amazon_sp_client_id");
    openapiFields.add("amazon_sp_client_secret");
    openapiFields.add("amazon_sp_refresh_token");
    openapiFields.add("aspdotnetstorefront_api_pass");
    openapiFields.add("aspdotnetstorefront_api_user");
    openapiFields.add("bigcommerceapi_access_token");
    openapiFields.add("bigcommerceapi_admin_account");
    openapiFields.add("bigcommerceapi_api_key");
    openapiFields.add("bigcommerceapi_api_path");
    openapiFields.add("bigcommerceapi_client_id");
    openapiFields.add("bigcommerceapi_context");
    openapiFields.add("bridge_url");
    openapiFields.add("cart_id");
    openapiFields.add("commercehq_api_key");
    openapiFields.add("commercehq_api_password");
    openapiFields.add("db_tables_prefix");
    openapiFields.add("demandware_api_password");
    openapiFields.add("demandware_client_id");
    openapiFields.add("demandware_user_name");
    openapiFields.add("demandware_user_password");
    openapiFields.add("ebay_access_token");
    openapiFields.add("ebay_client_id");
    openapiFields.add("ebay_client_secret");
    openapiFields.add("ebay_environment");
    openapiFields.add("ebay_refresh_token");
    openapiFields.add("ebay_runame");
    openapiFields.add("ebay_site_id");
    openapiFields.add("ecwid_acess_token");
    openapiFields.add("ecwid_store_id");
    openapiFields.add("etsy_access_token");
    openapiFields.add("etsy_client_id");
    openapiFields.add("etsy_keystring");
    openapiFields.add("etsy_refresh_token");
    openapiFields.add("etsy_shared_secret");
    openapiFields.add("etsy_token_secret");
    openapiFields.add("ftp_host");
    openapiFields.add("ftp_password");
    openapiFields.add("ftp_port");
    openapiFields.add("ftp_store_dir");
    openapiFields.add("ftp_user");
    openapiFields.add("hybris_client_id");
    openapiFields.add("hybris_client_secret");
    openapiFields.add("hybris_password");
    openapiFields.add("hybris_username");
    openapiFields.add("hybris_websites");
    openapiFields.add("lightspeed_api_key");
    openapiFields.add("lightspeed_api_secret");
    openapiFields.add("magento_access_token");
    openapiFields.add("magento_consumer_key");
    openapiFields.add("magento_consumer_secret");
    openapiFields.add("magento_token_secret");
    openapiFields.add("mercado_libre_app_id");
    openapiFields.add("mercado_libre_app_secret_key");
    openapiFields.add("mercado_libre_refresh_token");
    openapiFields.add("neto_api_key");
    openapiFields.add("neto_api_username");
    openapiFields.add("prestashop_webservice_key");
    openapiFields.add("shopify_access_token");
    openapiFields.add("shopify_api_key");
    openapiFields.add("shopify_api_password");
    openapiFields.add("shopify_shared_secret");
    openapiFields.add("shopware_access_key");
    openapiFields.add("shopware_api_key");
    openapiFields.add("shopware_api_secret");
    openapiFields.add("squarespace_api_key");
    openapiFields.add("store_key");
    openapiFields.add("store_root");
    openapiFields.add("store_url");
    openapiFields.add("validate_version");
    openapiFields.add("verify");
    openapiFields.add("volusion_login");
    openapiFields.add("volusion_password");
    openapiFields.add("walmart_channel_type");
    openapiFields.add("walmart_client_id");
    openapiFields.add("walmart_client_secret");
    openapiFields.add("walmart_environment");
    openapiFields.add("wc_consumer_key");
    openapiFields.add("wc_consumer_secret");
    openapiFields.add("wix_app_id");
    openapiFields.add("wix_app_secret_key");
    openapiFields.add("wix_refresh_token");
    openapiFields.add("zid_access_token");
    openapiFields.add("zid_authorization");
    openapiFields.add("zid_client_id");
    openapiFields.add("zid_client_secret");
    openapiFields.add("zid_refresh_token");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("amazon_sp_aws_region");
    openapiRequiredFields.add("amazon_sp_aws_role_arn");
    openapiRequiredFields.add("amazon_sp_aws_user_key_id");
    openapiRequiredFields.add("amazon_sp_aws_user_secret");
    openapiRequiredFields.add("amazon_sp_client_id");
    openapiRequiredFields.add("amazon_sp_client_secret");
    openapiRequiredFields.add("amazon_sp_refresh_token");
    openapiRequiredFields.add("cart_id");
    openapiRequiredFields.add("etsy_client_id");
    openapiRequiredFields.add("etsy_refresh_token");
    openapiRequiredFields.add("store_url");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AccountCartAdd
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AccountCartAdd.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AccountCartAdd is not found in the empty JSON string", AccountCartAdd.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AccountCartAdd.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AccountCartAdd` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AccountCartAdd.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("3dcart_access_token") != null && !jsonObj.get("3dcart_access_token").isJsonNull()) && !jsonObj.get("3dcart_access_token").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `3dcart_access_token` to be a primitive type in the JSON string but got `%s`", jsonObj.get("3dcart_access_token").toString()));
      }
      if ((jsonObj.get("3dcart_private_key") != null && !jsonObj.get("3dcart_private_key").isJsonNull()) && !jsonObj.get("3dcart_private_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `3dcart_private_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("3dcart_private_key").toString()));
      }
      if ((jsonObj.get("3dcartapi_api_key") != null && !jsonObj.get("3dcartapi_api_key").isJsonNull()) && !jsonObj.get("3dcartapi_api_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `3dcartapi_api_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("3dcartapi_api_key").toString()));
      }
      if ((jsonObj.get("amazon_access_key_id") != null && !jsonObj.get("amazon_access_key_id").isJsonNull()) && !jsonObj.get("amazon_access_key_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `amazon_access_key_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("amazon_access_key_id").toString()));
      }
      if ((jsonObj.get("amazon_access_token") != null && !jsonObj.get("amazon_access_token").isJsonNull()) && !jsonObj.get("amazon_access_token").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `amazon_access_token` to be a primitive type in the JSON string but got `%s`", jsonObj.get("amazon_access_token").toString()));
      }
      if ((jsonObj.get("amazon_marketplaces_ids") != null && !jsonObj.get("amazon_marketplaces_ids").isJsonNull()) && !jsonObj.get("amazon_marketplaces_ids").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `amazon_marketplaces_ids` to be a primitive type in the JSON string but got `%s`", jsonObj.get("amazon_marketplaces_ids").toString()));
      }
      if ((jsonObj.get("amazon_secret_key") != null && !jsonObj.get("amazon_secret_key").isJsonNull()) && !jsonObj.get("amazon_secret_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `amazon_secret_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("amazon_secret_key").toString()));
      }
      if ((jsonObj.get("amazon_seller_id") != null && !jsonObj.get("amazon_seller_id").isJsonNull()) && !jsonObj.get("amazon_seller_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `amazon_seller_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("amazon_seller_id").toString()));
      }
      if ((jsonObj.get("amazon_sp_api_environment") != null && !jsonObj.get("amazon_sp_api_environment").isJsonNull()) && !jsonObj.get("amazon_sp_api_environment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `amazon_sp_api_environment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("amazon_sp_api_environment").toString()));
      }
      if (!jsonObj.get("amazon_sp_aws_region").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `amazon_sp_aws_region` to be a primitive type in the JSON string but got `%s`", jsonObj.get("amazon_sp_aws_region").toString()));
      }
      // validate the required field `amazon_sp_aws_region`
      AmazonSpAwsRegionEnum.validateJsonElement(jsonObj.get("amazon_sp_aws_region"));
      if (!jsonObj.get("amazon_sp_aws_role_arn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `amazon_sp_aws_role_arn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("amazon_sp_aws_role_arn").toString()));
      }
      if (!jsonObj.get("amazon_sp_aws_user_key_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `amazon_sp_aws_user_key_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("amazon_sp_aws_user_key_id").toString()));
      }
      if (!jsonObj.get("amazon_sp_aws_user_secret").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `amazon_sp_aws_user_secret` to be a primitive type in the JSON string but got `%s`", jsonObj.get("amazon_sp_aws_user_secret").toString()));
      }
      if (!jsonObj.get("amazon_sp_client_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `amazon_sp_client_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("amazon_sp_client_id").toString()));
      }
      if (!jsonObj.get("amazon_sp_client_secret").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `amazon_sp_client_secret` to be a primitive type in the JSON string but got `%s`", jsonObj.get("amazon_sp_client_secret").toString()));
      }
      if (!jsonObj.get("amazon_sp_refresh_token").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `amazon_sp_refresh_token` to be a primitive type in the JSON string but got `%s`", jsonObj.get("amazon_sp_refresh_token").toString()));
      }
      if ((jsonObj.get("aspdotnetstorefront_api_pass") != null && !jsonObj.get("aspdotnetstorefront_api_pass").isJsonNull()) && !jsonObj.get("aspdotnetstorefront_api_pass").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `aspdotnetstorefront_api_pass` to be a primitive type in the JSON string but got `%s`", jsonObj.get("aspdotnetstorefront_api_pass").toString()));
      }
      if ((jsonObj.get("aspdotnetstorefront_api_user") != null && !jsonObj.get("aspdotnetstorefront_api_user").isJsonNull()) && !jsonObj.get("aspdotnetstorefront_api_user").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `aspdotnetstorefront_api_user` to be a primitive type in the JSON string but got `%s`", jsonObj.get("aspdotnetstorefront_api_user").toString()));
      }
      if ((jsonObj.get("bigcommerceapi_access_token") != null && !jsonObj.get("bigcommerceapi_access_token").isJsonNull()) && !jsonObj.get("bigcommerceapi_access_token").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bigcommerceapi_access_token` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bigcommerceapi_access_token").toString()));
      }
      if ((jsonObj.get("bigcommerceapi_admin_account") != null && !jsonObj.get("bigcommerceapi_admin_account").isJsonNull()) && !jsonObj.get("bigcommerceapi_admin_account").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bigcommerceapi_admin_account` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bigcommerceapi_admin_account").toString()));
      }
      if ((jsonObj.get("bigcommerceapi_api_key") != null && !jsonObj.get("bigcommerceapi_api_key").isJsonNull()) && !jsonObj.get("bigcommerceapi_api_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bigcommerceapi_api_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bigcommerceapi_api_key").toString()));
      }
      if ((jsonObj.get("bigcommerceapi_api_path") != null && !jsonObj.get("bigcommerceapi_api_path").isJsonNull()) && !jsonObj.get("bigcommerceapi_api_path").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bigcommerceapi_api_path` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bigcommerceapi_api_path").toString()));
      }
      if ((jsonObj.get("bigcommerceapi_client_id") != null && !jsonObj.get("bigcommerceapi_client_id").isJsonNull()) && !jsonObj.get("bigcommerceapi_client_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bigcommerceapi_client_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bigcommerceapi_client_id").toString()));
      }
      if ((jsonObj.get("bigcommerceapi_context") != null && !jsonObj.get("bigcommerceapi_context").isJsonNull()) && !jsonObj.get("bigcommerceapi_context").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bigcommerceapi_context` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bigcommerceapi_context").toString()));
      }
      if ((jsonObj.get("bridge_url") != null && !jsonObj.get("bridge_url").isJsonNull()) && !jsonObj.get("bridge_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bridge_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bridge_url").toString()));
      }
      if (!jsonObj.get("cart_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cart_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cart_id").toString()));
      }
      // validate the required field `cart_id`
      CartIdEnum.validateJsonElement(jsonObj.get("cart_id"));
      if ((jsonObj.get("commercehq_api_key") != null && !jsonObj.get("commercehq_api_key").isJsonNull()) && !jsonObj.get("commercehq_api_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `commercehq_api_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("commercehq_api_key").toString()));
      }
      if ((jsonObj.get("commercehq_api_password") != null && !jsonObj.get("commercehq_api_password").isJsonNull()) && !jsonObj.get("commercehq_api_password").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `commercehq_api_password` to be a primitive type in the JSON string but got `%s`", jsonObj.get("commercehq_api_password").toString()));
      }
      if ((jsonObj.get("db_tables_prefix") != null && !jsonObj.get("db_tables_prefix").isJsonNull()) && !jsonObj.get("db_tables_prefix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `db_tables_prefix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("db_tables_prefix").toString()));
      }
      if ((jsonObj.get("demandware_api_password") != null && !jsonObj.get("demandware_api_password").isJsonNull()) && !jsonObj.get("demandware_api_password").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `demandware_api_password` to be a primitive type in the JSON string but got `%s`", jsonObj.get("demandware_api_password").toString()));
      }
      if ((jsonObj.get("demandware_client_id") != null && !jsonObj.get("demandware_client_id").isJsonNull()) && !jsonObj.get("demandware_client_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `demandware_client_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("demandware_client_id").toString()));
      }
      if ((jsonObj.get("demandware_user_name") != null && !jsonObj.get("demandware_user_name").isJsonNull()) && !jsonObj.get("demandware_user_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `demandware_user_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("demandware_user_name").toString()));
      }
      if ((jsonObj.get("demandware_user_password") != null && !jsonObj.get("demandware_user_password").isJsonNull()) && !jsonObj.get("demandware_user_password").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `demandware_user_password` to be a primitive type in the JSON string but got `%s`", jsonObj.get("demandware_user_password").toString()));
      }
      if ((jsonObj.get("ebay_access_token") != null && !jsonObj.get("ebay_access_token").isJsonNull()) && !jsonObj.get("ebay_access_token").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ebay_access_token` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ebay_access_token").toString()));
      }
      if ((jsonObj.get("ebay_client_id") != null && !jsonObj.get("ebay_client_id").isJsonNull()) && !jsonObj.get("ebay_client_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ebay_client_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ebay_client_id").toString()));
      }
      if ((jsonObj.get("ebay_client_secret") != null && !jsonObj.get("ebay_client_secret").isJsonNull()) && !jsonObj.get("ebay_client_secret").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ebay_client_secret` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ebay_client_secret").toString()));
      }
      if ((jsonObj.get("ebay_environment") != null && !jsonObj.get("ebay_environment").isJsonNull()) && !jsonObj.get("ebay_environment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ebay_environment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ebay_environment").toString()));
      }
      if ((jsonObj.get("ebay_refresh_token") != null && !jsonObj.get("ebay_refresh_token").isJsonNull()) && !jsonObj.get("ebay_refresh_token").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ebay_refresh_token` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ebay_refresh_token").toString()));
      }
      if ((jsonObj.get("ebay_runame") != null && !jsonObj.get("ebay_runame").isJsonNull()) && !jsonObj.get("ebay_runame").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ebay_runame` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ebay_runame").toString()));
      }
      if ((jsonObj.get("ecwid_acess_token") != null && !jsonObj.get("ecwid_acess_token").isJsonNull()) && !jsonObj.get("ecwid_acess_token").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ecwid_acess_token` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ecwid_acess_token").toString()));
      }
      if ((jsonObj.get("ecwid_store_id") != null && !jsonObj.get("ecwid_store_id").isJsonNull()) && !jsonObj.get("ecwid_store_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ecwid_store_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ecwid_store_id").toString()));
      }
      if ((jsonObj.get("etsy_access_token") != null && !jsonObj.get("etsy_access_token").isJsonNull()) && !jsonObj.get("etsy_access_token").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `etsy_access_token` to be a primitive type in the JSON string but got `%s`", jsonObj.get("etsy_access_token").toString()));
      }
      if (!jsonObj.get("etsy_client_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `etsy_client_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("etsy_client_id").toString()));
      }
      if ((jsonObj.get("etsy_keystring") != null && !jsonObj.get("etsy_keystring").isJsonNull()) && !jsonObj.get("etsy_keystring").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `etsy_keystring` to be a primitive type in the JSON string but got `%s`", jsonObj.get("etsy_keystring").toString()));
      }
      if (!jsonObj.get("etsy_refresh_token").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `etsy_refresh_token` to be a primitive type in the JSON string but got `%s`", jsonObj.get("etsy_refresh_token").toString()));
      }
      if ((jsonObj.get("etsy_shared_secret") != null && !jsonObj.get("etsy_shared_secret").isJsonNull()) && !jsonObj.get("etsy_shared_secret").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `etsy_shared_secret` to be a primitive type in the JSON string but got `%s`", jsonObj.get("etsy_shared_secret").toString()));
      }
      if ((jsonObj.get("etsy_token_secret") != null && !jsonObj.get("etsy_token_secret").isJsonNull()) && !jsonObj.get("etsy_token_secret").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `etsy_token_secret` to be a primitive type in the JSON string but got `%s`", jsonObj.get("etsy_token_secret").toString()));
      }
      if ((jsonObj.get("ftp_host") != null && !jsonObj.get("ftp_host").isJsonNull()) && !jsonObj.get("ftp_host").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ftp_host` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ftp_host").toString()));
      }
      if ((jsonObj.get("ftp_password") != null && !jsonObj.get("ftp_password").isJsonNull()) && !jsonObj.get("ftp_password").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ftp_password` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ftp_password").toString()));
      }
      if ((jsonObj.get("ftp_store_dir") != null && !jsonObj.get("ftp_store_dir").isJsonNull()) && !jsonObj.get("ftp_store_dir").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ftp_store_dir` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ftp_store_dir").toString()));
      }
      if ((jsonObj.get("ftp_user") != null && !jsonObj.get("ftp_user").isJsonNull()) && !jsonObj.get("ftp_user").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ftp_user` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ftp_user").toString()));
      }
      if ((jsonObj.get("hybris_client_id") != null && !jsonObj.get("hybris_client_id").isJsonNull()) && !jsonObj.get("hybris_client_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hybris_client_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hybris_client_id").toString()));
      }
      if ((jsonObj.get("hybris_client_secret") != null && !jsonObj.get("hybris_client_secret").isJsonNull()) && !jsonObj.get("hybris_client_secret").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hybris_client_secret` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hybris_client_secret").toString()));
      }
      if ((jsonObj.get("hybris_password") != null && !jsonObj.get("hybris_password").isJsonNull()) && !jsonObj.get("hybris_password").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hybris_password` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hybris_password").toString()));
      }
      if ((jsonObj.get("hybris_username") != null && !jsonObj.get("hybris_username").isJsonNull()) && !jsonObj.get("hybris_username").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hybris_username` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hybris_username").toString()));
      }
      if (jsonObj.get("hybris_websites") != null && !jsonObj.get("hybris_websites").isJsonNull()) {
        JsonArray jsonArrayhybrisWebsites = jsonObj.getAsJsonArray("hybris_websites");
        if (jsonArrayhybrisWebsites != null) {
          // ensure the json data is an array
          if (!jsonObj.get("hybris_websites").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `hybris_websites` to be an array in the JSON string but got `%s`", jsonObj.get("hybris_websites").toString()));
          }

          // validate the optional field `hybris_websites` (array)
          for (int i = 0; i < jsonArrayhybrisWebsites.size(); i++) {
            AccountCartAddHybrisWebsitesInner.validateJsonElement(jsonArrayhybrisWebsites.get(i));
          };
        }
      }
      if ((jsonObj.get("lightspeed_api_key") != null && !jsonObj.get("lightspeed_api_key").isJsonNull()) && !jsonObj.get("lightspeed_api_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lightspeed_api_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lightspeed_api_key").toString()));
      }
      if ((jsonObj.get("lightspeed_api_secret") != null && !jsonObj.get("lightspeed_api_secret").isJsonNull()) && !jsonObj.get("lightspeed_api_secret").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lightspeed_api_secret` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lightspeed_api_secret").toString()));
      }
      if ((jsonObj.get("magento_access_token") != null && !jsonObj.get("magento_access_token").isJsonNull()) && !jsonObj.get("magento_access_token").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `magento_access_token` to be a primitive type in the JSON string but got `%s`", jsonObj.get("magento_access_token").toString()));
      }
      if ((jsonObj.get("magento_consumer_key") != null && !jsonObj.get("magento_consumer_key").isJsonNull()) && !jsonObj.get("magento_consumer_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `magento_consumer_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("magento_consumer_key").toString()));
      }
      if ((jsonObj.get("magento_consumer_secret") != null && !jsonObj.get("magento_consumer_secret").isJsonNull()) && !jsonObj.get("magento_consumer_secret").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `magento_consumer_secret` to be a primitive type in the JSON string but got `%s`", jsonObj.get("magento_consumer_secret").toString()));
      }
      if ((jsonObj.get("magento_token_secret") != null && !jsonObj.get("magento_token_secret").isJsonNull()) && !jsonObj.get("magento_token_secret").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `magento_token_secret` to be a primitive type in the JSON string but got `%s`", jsonObj.get("magento_token_secret").toString()));
      }
      if ((jsonObj.get("mercado_libre_app_id") != null && !jsonObj.get("mercado_libre_app_id").isJsonNull()) && !jsonObj.get("mercado_libre_app_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mercado_libre_app_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mercado_libre_app_id").toString()));
      }
      if ((jsonObj.get("mercado_libre_app_secret_key") != null && !jsonObj.get("mercado_libre_app_secret_key").isJsonNull()) && !jsonObj.get("mercado_libre_app_secret_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mercado_libre_app_secret_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mercado_libre_app_secret_key").toString()));
      }
      if ((jsonObj.get("mercado_libre_refresh_token") != null && !jsonObj.get("mercado_libre_refresh_token").isJsonNull()) && !jsonObj.get("mercado_libre_refresh_token").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mercado_libre_refresh_token` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mercado_libre_refresh_token").toString()));
      }
      if ((jsonObj.get("neto_api_key") != null && !jsonObj.get("neto_api_key").isJsonNull()) && !jsonObj.get("neto_api_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `neto_api_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("neto_api_key").toString()));
      }
      if ((jsonObj.get("neto_api_username") != null && !jsonObj.get("neto_api_username").isJsonNull()) && !jsonObj.get("neto_api_username").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `neto_api_username` to be a primitive type in the JSON string but got `%s`", jsonObj.get("neto_api_username").toString()));
      }
      if ((jsonObj.get("prestashop_webservice_key") != null && !jsonObj.get("prestashop_webservice_key").isJsonNull()) && !jsonObj.get("prestashop_webservice_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `prestashop_webservice_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("prestashop_webservice_key").toString()));
      }
      if ((jsonObj.get("shopify_access_token") != null && !jsonObj.get("shopify_access_token").isJsonNull()) && !jsonObj.get("shopify_access_token").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shopify_access_token` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shopify_access_token").toString()));
      }
      if ((jsonObj.get("shopify_api_key") != null && !jsonObj.get("shopify_api_key").isJsonNull()) && !jsonObj.get("shopify_api_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shopify_api_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shopify_api_key").toString()));
      }
      if ((jsonObj.get("shopify_api_password") != null && !jsonObj.get("shopify_api_password").isJsonNull()) && !jsonObj.get("shopify_api_password").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shopify_api_password` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shopify_api_password").toString()));
      }
      if ((jsonObj.get("shopify_shared_secret") != null && !jsonObj.get("shopify_shared_secret").isJsonNull()) && !jsonObj.get("shopify_shared_secret").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shopify_shared_secret` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shopify_shared_secret").toString()));
      }
      if ((jsonObj.get("shopware_access_key") != null && !jsonObj.get("shopware_access_key").isJsonNull()) && !jsonObj.get("shopware_access_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shopware_access_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shopware_access_key").toString()));
      }
      if ((jsonObj.get("shopware_api_key") != null && !jsonObj.get("shopware_api_key").isJsonNull()) && !jsonObj.get("shopware_api_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shopware_api_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shopware_api_key").toString()));
      }
      if ((jsonObj.get("shopware_api_secret") != null && !jsonObj.get("shopware_api_secret").isJsonNull()) && !jsonObj.get("shopware_api_secret").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shopware_api_secret` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shopware_api_secret").toString()));
      }
      if ((jsonObj.get("squarespace_api_key") != null && !jsonObj.get("squarespace_api_key").isJsonNull()) && !jsonObj.get("squarespace_api_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `squarespace_api_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("squarespace_api_key").toString()));
      }
      if ((jsonObj.get("store_key") != null && !jsonObj.get("store_key").isJsonNull()) && !jsonObj.get("store_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `store_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("store_key").toString()));
      }
      if ((jsonObj.get("store_root") != null && !jsonObj.get("store_root").isJsonNull()) && !jsonObj.get("store_root").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `store_root` to be a primitive type in the JSON string but got `%s`", jsonObj.get("store_root").toString()));
      }
      if (!jsonObj.get("store_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `store_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("store_url").toString()));
      }
      if ((jsonObj.get("volusion_login") != null && !jsonObj.get("volusion_login").isJsonNull()) && !jsonObj.get("volusion_login").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `volusion_login` to be a primitive type in the JSON string but got `%s`", jsonObj.get("volusion_login").toString()));
      }
      if ((jsonObj.get("volusion_password") != null && !jsonObj.get("volusion_password").isJsonNull()) && !jsonObj.get("volusion_password").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `volusion_password` to be a primitive type in the JSON string but got `%s`", jsonObj.get("volusion_password").toString()));
      }
      if ((jsonObj.get("walmart_channel_type") != null && !jsonObj.get("walmart_channel_type").isJsonNull()) && !jsonObj.get("walmart_channel_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `walmart_channel_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("walmart_channel_type").toString()));
      }
      if ((jsonObj.get("walmart_client_id") != null && !jsonObj.get("walmart_client_id").isJsonNull()) && !jsonObj.get("walmart_client_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `walmart_client_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("walmart_client_id").toString()));
      }
      if ((jsonObj.get("walmart_client_secret") != null && !jsonObj.get("walmart_client_secret").isJsonNull()) && !jsonObj.get("walmart_client_secret").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `walmart_client_secret` to be a primitive type in the JSON string but got `%s`", jsonObj.get("walmart_client_secret").toString()));
      }
      if ((jsonObj.get("walmart_environment") != null && !jsonObj.get("walmart_environment").isJsonNull()) && !jsonObj.get("walmart_environment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `walmart_environment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("walmart_environment").toString()));
      }
      if ((jsonObj.get("wc_consumer_key") != null && !jsonObj.get("wc_consumer_key").isJsonNull()) && !jsonObj.get("wc_consumer_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `wc_consumer_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("wc_consumer_key").toString()));
      }
      if ((jsonObj.get("wc_consumer_secret") != null && !jsonObj.get("wc_consumer_secret").isJsonNull()) && !jsonObj.get("wc_consumer_secret").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `wc_consumer_secret` to be a primitive type in the JSON string but got `%s`", jsonObj.get("wc_consumer_secret").toString()));
      }
      if ((jsonObj.get("wix_app_id") != null && !jsonObj.get("wix_app_id").isJsonNull()) && !jsonObj.get("wix_app_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `wix_app_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("wix_app_id").toString()));
      }
      if ((jsonObj.get("wix_app_secret_key") != null && !jsonObj.get("wix_app_secret_key").isJsonNull()) && !jsonObj.get("wix_app_secret_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `wix_app_secret_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("wix_app_secret_key").toString()));
      }
      if ((jsonObj.get("wix_refresh_token") != null && !jsonObj.get("wix_refresh_token").isJsonNull()) && !jsonObj.get("wix_refresh_token").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `wix_refresh_token` to be a primitive type in the JSON string but got `%s`", jsonObj.get("wix_refresh_token").toString()));
      }
      if ((jsonObj.get("zid_access_token") != null && !jsonObj.get("zid_access_token").isJsonNull()) && !jsonObj.get("zid_access_token").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `zid_access_token` to be a primitive type in the JSON string but got `%s`", jsonObj.get("zid_access_token").toString()));
      }
      if ((jsonObj.get("zid_authorization") != null && !jsonObj.get("zid_authorization").isJsonNull()) && !jsonObj.get("zid_authorization").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `zid_authorization` to be a primitive type in the JSON string but got `%s`", jsonObj.get("zid_authorization").toString()));
      }
      if ((jsonObj.get("zid_client_secret") != null && !jsonObj.get("zid_client_secret").isJsonNull()) && !jsonObj.get("zid_client_secret").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `zid_client_secret` to be a primitive type in the JSON string but got `%s`", jsonObj.get("zid_client_secret").toString()));
      }
      if ((jsonObj.get("zid_refresh_token") != null && !jsonObj.get("zid_refresh_token").isJsonNull()) && !jsonObj.get("zid_refresh_token").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `zid_refresh_token` to be a primitive type in the JSON string but got `%s`", jsonObj.get("zid_refresh_token").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AccountCartAdd.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AccountCartAdd' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AccountCartAdd> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AccountCartAdd.class));

       return (TypeAdapter<T>) new TypeAdapter<AccountCartAdd>() {
           @Override
           public void write(JsonWriter out, AccountCartAdd value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AccountCartAdd read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AccountCartAdd given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AccountCartAdd
   * @throws IOException if the JSON string is invalid with respect to AccountCartAdd
   */
  public static AccountCartAdd fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AccountCartAdd.class);
  }

  /**
   * Convert an instance of AccountCartAdd to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

