/*
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CouponHistory;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GiftCard
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:12:09.268126-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GiftCard {
  public static final String SERIALIZED_NAME_ADDITIONAL_FIELDS = "additional_fields";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_FIELDS)
  private Object additionalFields;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private BigDecimal amount;

  public static final String SERIALIZED_NAME_AVAIL_TO = "avail_to";
  @SerializedName(SERIALIZED_NAME_AVAIL_TO)
  private String availTo;

  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private String code;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_CURRENCY_CODE = "currency_code";
  @SerializedName(SERIALIZED_NAME_CURRENCY_CODE)
  private String currencyCode;

  public static final String SERIALIZED_NAME_CUSTOM_FIELDS = "custom_fields";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELDS)
  private Object customFields;

  public static final String SERIALIZED_NAME_FREE_PRODUCT_IDS = "free_product_ids";
  @SerializedName(SERIALIZED_NAME_FREE_PRODUCT_IDS)
  private String freeProductIds;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_INITIAL_AMOUNT = "initial_amount";
  @SerializedName(SERIALIZED_NAME_INITIAL_AMOUNT)
  private BigDecimal initialAmount;

  public static final String SERIALIZED_NAME_ISSUER_EMAIL = "issuer_email";
  @SerializedName(SERIALIZED_NAME_ISSUER_EMAIL)
  private String issuerEmail;

  public static final String SERIALIZED_NAME_ISSUER_NAME = "issuer_name";
  @SerializedName(SERIALIZED_NAME_ISSUER_NAME)
  private String issuerName;

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_RECIPIENT_EMAIL = "recipient_email";
  @SerializedName(SERIALIZED_NAME_RECIPIENT_EMAIL)
  private String recipientEmail;

  public static final String SERIALIZED_NAME_RECIPIENT_NAME = "recipient_name";
  @SerializedName(SERIALIZED_NAME_RECIPIENT_NAME)
  private String recipientName;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_USAGE_HISTORY = "usage_history";
  @SerializedName(SERIALIZED_NAME_USAGE_HISTORY)
  private List<CouponHistory> usageHistory = new ArrayList<>();

  public GiftCard() {
  }

  public GiftCard additionalFields(Object additionalFields) {
    this.additionalFields = additionalFields;
    return this;
  }

  /**
   * Get additionalFields
   * @return additionalFields
   */
  @javax.annotation.Nullable
  public Object getAdditionalFields() {
    return additionalFields;
  }

  public void setAdditionalFields(Object additionalFields) {
    this.additionalFields = additionalFields;
  }


  public GiftCard amount(BigDecimal amount) {
    this.amount = amount;
    return this;
  }

  /**
   * Get amount
   * @return amount
   */
  @javax.annotation.Nullable
  public BigDecimal getAmount() {
    return amount;
  }

  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }


  public GiftCard availTo(String availTo) {
    this.availTo = availTo;
    return this;
  }

  /**
   * Get availTo
   * @return availTo
   */
  @javax.annotation.Nullable
  public String getAvailTo() {
    return availTo;
  }

  public void setAvailTo(String availTo) {
    this.availTo = availTo;
  }


  public GiftCard code(String code) {
    this.code = code;
    return this;
  }

  /**
   * Get code
   * @return code
   */
  @javax.annotation.Nullable
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }


  public GiftCard createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }


  public GiftCard currencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

  /**
   * Get currencyCode
   * @return currencyCode
   */
  @javax.annotation.Nullable
  public String getCurrencyCode() {
    return currencyCode;
  }

  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }


  public GiftCard customFields(Object customFields) {
    this.customFields = customFields;
    return this;
  }

  /**
   * Get customFields
   * @return customFields
   */
  @javax.annotation.Nullable
  public Object getCustomFields() {
    return customFields;
  }

  public void setCustomFields(Object customFields) {
    this.customFields = customFields;
  }


  public GiftCard freeProductIds(String freeProductIds) {
    this.freeProductIds = freeProductIds;
    return this;
  }

  /**
   * Get freeProductIds
   * @return freeProductIds
   */
  @javax.annotation.Nullable
  public String getFreeProductIds() {
    return freeProductIds;
  }

  public void setFreeProductIds(String freeProductIds) {
    this.freeProductIds = freeProductIds;
  }


  public GiftCard id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public GiftCard initialAmount(BigDecimal initialAmount) {
    this.initialAmount = initialAmount;
    return this;
  }

  /**
   * Get initialAmount
   * @return initialAmount
   */
  @javax.annotation.Nullable
  public BigDecimal getInitialAmount() {
    return initialAmount;
  }

  public void setInitialAmount(BigDecimal initialAmount) {
    this.initialAmount = initialAmount;
  }


  public GiftCard issuerEmail(String issuerEmail) {
    this.issuerEmail = issuerEmail;
    return this;
  }

  /**
   * Get issuerEmail
   * @return issuerEmail
   */
  @javax.annotation.Nullable
  public String getIssuerEmail() {
    return issuerEmail;
  }

  public void setIssuerEmail(String issuerEmail) {
    this.issuerEmail = issuerEmail;
  }


  public GiftCard issuerName(String issuerName) {
    this.issuerName = issuerName;
    return this;
  }

  /**
   * Get issuerName
   * @return issuerName
   */
  @javax.annotation.Nullable
  public String getIssuerName() {
    return issuerName;
  }

  public void setIssuerName(String issuerName) {
    this.issuerName = issuerName;
  }


  public GiftCard message(String message) {
    this.message = message;
    return this;
  }

  /**
   * Get message
   * @return message
   */
  @javax.annotation.Nullable
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }


  public GiftCard name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GiftCard recipientEmail(String recipientEmail) {
    this.recipientEmail = recipientEmail;
    return this;
  }

  /**
   * Get recipientEmail
   * @return recipientEmail
   */
  @javax.annotation.Nullable
  public String getRecipientEmail() {
    return recipientEmail;
  }

  public void setRecipientEmail(String recipientEmail) {
    this.recipientEmail = recipientEmail;
  }


  public GiftCard recipientName(String recipientName) {
    this.recipientName = recipientName;
    return this;
  }

  /**
   * Get recipientName
   * @return recipientName
   */
  @javax.annotation.Nullable
  public String getRecipientName() {
    return recipientName;
  }

  public void setRecipientName(String recipientName) {
    this.recipientName = recipientName;
  }


  public GiftCard status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public GiftCard type(String type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  public GiftCard usageHistory(List<CouponHistory> usageHistory) {
    this.usageHistory = usageHistory;
    return this;
  }

  public GiftCard addUsageHistoryItem(CouponHistory usageHistoryItem) {
    if (this.usageHistory == null) {
      this.usageHistory = new ArrayList<>();
    }
    this.usageHistory.add(usageHistoryItem);
    return this;
  }

  /**
   * Get usageHistory
   * @return usageHistory
   */
  @javax.annotation.Nullable
  public List<CouponHistory> getUsageHistory() {
    return usageHistory;
  }

  public void setUsageHistory(List<CouponHistory> usageHistory) {
    this.usageHistory = usageHistory;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GiftCard giftCard = (GiftCard) o;
    return Objects.equals(this.additionalFields, giftCard.additionalFields) &&
        Objects.equals(this.amount, giftCard.amount) &&
        Objects.equals(this.availTo, giftCard.availTo) &&
        Objects.equals(this.code, giftCard.code) &&
        Objects.equals(this.createdAt, giftCard.createdAt) &&
        Objects.equals(this.currencyCode, giftCard.currencyCode) &&
        Objects.equals(this.customFields, giftCard.customFields) &&
        Objects.equals(this.freeProductIds, giftCard.freeProductIds) &&
        Objects.equals(this.id, giftCard.id) &&
        Objects.equals(this.initialAmount, giftCard.initialAmount) &&
        Objects.equals(this.issuerEmail, giftCard.issuerEmail) &&
        Objects.equals(this.issuerName, giftCard.issuerName) &&
        Objects.equals(this.message, giftCard.message) &&
        Objects.equals(this.name, giftCard.name) &&
        Objects.equals(this.recipientEmail, giftCard.recipientEmail) &&
        Objects.equals(this.recipientName, giftCard.recipientName) &&
        Objects.equals(this.status, giftCard.status) &&
        Objects.equals(this.type, giftCard.type) &&
        Objects.equals(this.usageHistory, giftCard.usageHistory);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalFields, amount, availTo, code, createdAt, currencyCode, customFields, freeProductIds, id, initialAmount, issuerEmail, issuerName, message, name, recipientEmail, recipientName, status, type, usageHistory);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GiftCard {\n");
    sb.append("    additionalFields: ").append(toIndentedString(additionalFields)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    availTo: ").append(toIndentedString(availTo)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    freeProductIds: ").append(toIndentedString(freeProductIds)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    initialAmount: ").append(toIndentedString(initialAmount)).append("\n");
    sb.append("    issuerEmail: ").append(toIndentedString(issuerEmail)).append("\n");
    sb.append("    issuerName: ").append(toIndentedString(issuerName)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    recipientEmail: ").append(toIndentedString(recipientEmail)).append("\n");
    sb.append("    recipientName: ").append(toIndentedString(recipientName)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    usageHistory: ").append(toIndentedString(usageHistory)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("additional_fields");
    openapiFields.add("amount");
    openapiFields.add("avail_to");
    openapiFields.add("code");
    openapiFields.add("created_at");
    openapiFields.add("currency_code");
    openapiFields.add("custom_fields");
    openapiFields.add("free_product_ids");
    openapiFields.add("id");
    openapiFields.add("initial_amount");
    openapiFields.add("issuer_email");
    openapiFields.add("issuer_name");
    openapiFields.add("message");
    openapiFields.add("name");
    openapiFields.add("recipient_email");
    openapiFields.add("recipient_name");
    openapiFields.add("status");
    openapiFields.add("type");
    openapiFields.add("usage_history");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GiftCard
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GiftCard.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GiftCard is not found in the empty JSON string", GiftCard.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GiftCard.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GiftCard` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("avail_to") != null && !jsonObj.get("avail_to").isJsonNull()) && !jsonObj.get("avail_to").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `avail_to` to be a primitive type in the JSON string but got `%s`", jsonObj.get("avail_to").toString()));
      }
      if ((jsonObj.get("code") != null && !jsonObj.get("code").isJsonNull()) && !jsonObj.get("code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("code").toString()));
      }
      if ((jsonObj.get("created_at") != null && !jsonObj.get("created_at").isJsonNull()) && !jsonObj.get("created_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_at").toString()));
      }
      if ((jsonObj.get("currency_code") != null && !jsonObj.get("currency_code").isJsonNull()) && !jsonObj.get("currency_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currency_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currency_code").toString()));
      }
      if ((jsonObj.get("free_product_ids") != null && !jsonObj.get("free_product_ids").isJsonNull()) && !jsonObj.get("free_product_ids").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `free_product_ids` to be a primitive type in the JSON string but got `%s`", jsonObj.get("free_product_ids").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("issuer_email") != null && !jsonObj.get("issuer_email").isJsonNull()) && !jsonObj.get("issuer_email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `issuer_email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("issuer_email").toString()));
      }
      if ((jsonObj.get("issuer_name") != null && !jsonObj.get("issuer_name").isJsonNull()) && !jsonObj.get("issuer_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `issuer_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("issuer_name").toString()));
      }
      if ((jsonObj.get("message") != null && !jsonObj.get("message").isJsonNull()) && !jsonObj.get("message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("message").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("recipient_email") != null && !jsonObj.get("recipient_email").isJsonNull()) && !jsonObj.get("recipient_email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recipient_email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recipient_email").toString()));
      }
      if ((jsonObj.get("recipient_name") != null && !jsonObj.get("recipient_name").isJsonNull()) && !jsonObj.get("recipient_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recipient_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recipient_name").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      if (jsonObj.get("usage_history") != null && !jsonObj.get("usage_history").isJsonNull()) {
        JsonArray jsonArrayusageHistory = jsonObj.getAsJsonArray("usage_history");
        if (jsonArrayusageHistory != null) {
          // ensure the json data is an array
          if (!jsonObj.get("usage_history").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `usage_history` to be an array in the JSON string but got `%s`", jsonObj.get("usage_history").toString()));
          }

          // validate the optional field `usage_history` (array)
          for (int i = 0; i < jsonArrayusageHistory.size(); i++) {
            CouponHistory.validateJsonElement(jsonArrayusageHistory.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GiftCard.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GiftCard' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GiftCard> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GiftCard.class));

       return (TypeAdapter<T>) new TypeAdapter<GiftCard>() {
           @Override
           public void write(JsonWriter out, GiftCard value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GiftCard read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GiftCard given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GiftCard
   * @throws IOException if the JSON string is invalid with respect to GiftCard
   */
  public static GiftCard fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GiftCard.class);
  }

  /**
   * Convert an instance of GiftCard to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

