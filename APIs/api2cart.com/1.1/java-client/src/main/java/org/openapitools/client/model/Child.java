/*
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.A2CDateTime;
import org.openapitools.client.model.Discount;
import org.openapitools.client.model.Image;
import org.openapitools.client.model.ProductAdvancedPrice;
import org.openapitools.client.model.ProductChildItemCombination;
import org.openapitools.client.model.ProductInventory;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Child
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:12:09.268126-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Child {
  public static final String SERIALIZED_NAME_ADDITIONAL_FIELDS = "additional_fields";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_FIELDS)
  private Object additionalFields;

  public static final String SERIALIZED_NAME_ADVANCED_PRICE = "advanced_price";
  @SerializedName(SERIALIZED_NAME_ADVANCED_PRICE)
  private List<ProductAdvancedPrice> advancedPrice = new ArrayList<>();

  public static final String SERIALIZED_NAME_ALLOW_BACKORDERS = "allow_backorders";
  @SerializedName(SERIALIZED_NAME_ALLOW_BACKORDERS)
  private Boolean allowBackorders;

  public static final String SERIALIZED_NAME_AVAIL_FOR_SALE = "avail_for_sale";
  @SerializedName(SERIALIZED_NAME_AVAIL_FOR_SALE)
  private Boolean availForSale;

  public static final String SERIALIZED_NAME_COMBINATION = "combination";
  @SerializedName(SERIALIZED_NAME_COMBINATION)
  private List<ProductChildItemCombination> combination = new ArrayList<>();

  public static final String SERIALIZED_NAME_COST_PRICE = "cost_price";
  @SerializedName(SERIALIZED_NAME_COST_PRICE)
  private BigDecimal costPrice;

  public static final String SERIALIZED_NAME_CREATED_TIME = "created_time";
  @SerializedName(SERIALIZED_NAME_CREATED_TIME)
  private A2CDateTime createdTime;

  public static final String SERIALIZED_NAME_CUSTOM_FIELDS = "custom_fields";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELDS)
  private Object customFields;

  public static final String SERIALIZED_NAME_DEFAULT_PRICE = "default_price";
  @SerializedName(SERIALIZED_NAME_DEFAULT_PRICE)
  private BigDecimal defaultPrice;

  public static final String SERIALIZED_NAME_DEFAULT_QTY_IN_PACK = "default_qty_in_pack";
  @SerializedName(SERIALIZED_NAME_DEFAULT_QTY_IN_PACK)
  private BigDecimal defaultQtyInPack;

  public static final String SERIALIZED_NAME_DIMENSIONS_UNIT = "dimensions_unit";
  @SerializedName(SERIALIZED_NAME_DIMENSIONS_UNIT)
  private String dimensionsUnit;

  public static final String SERIALIZED_NAME_DISCOUNTS = "discounts";
  @SerializedName(SERIALIZED_NAME_DISCOUNTS)
  private List<Discount> discounts = new ArrayList<>();

  public static final String SERIALIZED_NAME_EAN = "ean";
  @SerializedName(SERIALIZED_NAME_EAN)
  private String ean;

  public static final String SERIALIZED_NAME_FULL_DESCRIPTION = "full_description";
  @SerializedName(SERIALIZED_NAME_FULL_DESCRIPTION)
  private String fullDescription;

  public static final String SERIALIZED_NAME_GTIN = "gtin";
  @SerializedName(SERIALIZED_NAME_GTIN)
  private String gtin;

  public static final String SERIALIZED_NAME_HEIGHT = "height";
  @SerializedName(SERIALIZED_NAME_HEIGHT)
  private BigDecimal height;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_IMAGES = "images";
  @SerializedName(SERIALIZED_NAME_IMAGES)
  private List<Image> images = new ArrayList<>();

  public static final String SERIALIZED_NAME_IN_STOCK = "in_stock";
  @SerializedName(SERIALIZED_NAME_IN_STOCK)
  private Boolean inStock;

  public static final String SERIALIZED_NAME_INVENTORY = "inventory";
  @SerializedName(SERIALIZED_NAME_INVENTORY)
  private List<ProductInventory> inventory = new ArrayList<>();

  public static final String SERIALIZED_NAME_INVENTORY_LEVEL = "inventory_level";
  @SerializedName(SERIALIZED_NAME_INVENTORY_LEVEL)
  private BigDecimal inventoryLevel;

  public static final String SERIALIZED_NAME_IS_QTY_IN_PACK_FIXED = "is_qty_in_pack_fixed";
  @SerializedName(SERIALIZED_NAME_IS_QTY_IN_PACK_FIXED)
  private Boolean isQtyInPackFixed;

  public static final String SERIALIZED_NAME_ISBN = "isbn";
  @SerializedName(SERIALIZED_NAME_ISBN)
  private String isbn;

  public static final String SERIALIZED_NAME_LENGTH = "length";
  @SerializedName(SERIALIZED_NAME_LENGTH)
  private BigDecimal length;

  public static final String SERIALIZED_NAME_LIST_PRICE = "list_price";
  @SerializedName(SERIALIZED_NAME_LIST_PRICE)
  private BigDecimal listPrice;

  public static final String SERIALIZED_NAME_MANAGE_STOCK = "manage_stock";
  @SerializedName(SERIALIZED_NAME_MANAGE_STOCK)
  private Boolean manageStock;

  public static final String SERIALIZED_NAME_META_DESCRIPTION = "meta_description";
  @SerializedName(SERIALIZED_NAME_META_DESCRIPTION)
  private String metaDescription;

  public static final String SERIALIZED_NAME_META_KEYWORDS = "meta_keywords";
  @SerializedName(SERIALIZED_NAME_META_KEYWORDS)
  private String metaKeywords;

  public static final String SERIALIZED_NAME_META_TITLE = "meta_title";
  @SerializedName(SERIALIZED_NAME_META_TITLE)
  private String metaTitle;

  public static final String SERIALIZED_NAME_MIN_QUANTITY = "min_quantity";
  @SerializedName(SERIALIZED_NAME_MIN_QUANTITY)
  private BigDecimal minQuantity;

  public static final String SERIALIZED_NAME_MODIFIED_TIME = "modified_time";
  @SerializedName(SERIALIZED_NAME_MODIFIED_TIME)
  private A2CDateTime modifiedTime;

  public static final String SERIALIZED_NAME_MPN = "mpn";
  @SerializedName(SERIALIZED_NAME_MPN)
  private String mpn;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PARENT_ID = "parent_id";
  @SerializedName(SERIALIZED_NAME_PARENT_ID)
  private String parentId;

  public static final String SERIALIZED_NAME_SHORT_DESCRIPTION = "short_description";
  @SerializedName(SERIALIZED_NAME_SHORT_DESCRIPTION)
  private String shortDescription;

  public static final String SERIALIZED_NAME_SKU = "sku";
  @SerializedName(SERIALIZED_NAME_SKU)
  private String sku;

  public static final String SERIALIZED_NAME_SORT_ORDER = "sort_order";
  @SerializedName(SERIALIZED_NAME_SORT_ORDER)
  private Integer sortOrder;

  public static final String SERIALIZED_NAME_TAX_CLASS_ID = "tax_class_id";
  @SerializedName(SERIALIZED_NAME_TAX_CLASS_ID)
  private String taxClassId;

  public static final String SERIALIZED_NAME_UPC = "upc";
  @SerializedName(SERIALIZED_NAME_UPC)
  private String upc;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_WEIGHT = "weight";
  @SerializedName(SERIALIZED_NAME_WEIGHT)
  private BigDecimal weight;

  public static final String SERIALIZED_NAME_WEIGHT_UNIT = "weight_unit";
  @SerializedName(SERIALIZED_NAME_WEIGHT_UNIT)
  private String weightUnit;

  public static final String SERIALIZED_NAME_WHOLESALE_PRICE = "wholesale_price";
  @SerializedName(SERIALIZED_NAME_WHOLESALE_PRICE)
  private BigDecimal wholesalePrice;

  public static final String SERIALIZED_NAME_WIDTH = "width";
  @SerializedName(SERIALIZED_NAME_WIDTH)
  private BigDecimal width;

  public Child() {
  }

  public Child additionalFields(Object additionalFields) {
    this.additionalFields = additionalFields;
    return this;
  }

  /**
   * Get additionalFields
   * @return additionalFields
   */
  @javax.annotation.Nullable
  public Object getAdditionalFields() {
    return additionalFields;
  }

  public void setAdditionalFields(Object additionalFields) {
    this.additionalFields = additionalFields;
  }


  public Child advancedPrice(List<ProductAdvancedPrice> advancedPrice) {
    this.advancedPrice = advancedPrice;
    return this;
  }

  public Child addAdvancedPriceItem(ProductAdvancedPrice advancedPriceItem) {
    if (this.advancedPrice == null) {
      this.advancedPrice = new ArrayList<>();
    }
    this.advancedPrice.add(advancedPriceItem);
    return this;
  }

  /**
   * Get advancedPrice
   * @return advancedPrice
   */
  @javax.annotation.Nullable
  public List<ProductAdvancedPrice> getAdvancedPrice() {
    return advancedPrice;
  }

  public void setAdvancedPrice(List<ProductAdvancedPrice> advancedPrice) {
    this.advancedPrice = advancedPrice;
  }


  public Child allowBackorders(Boolean allowBackorders) {
    this.allowBackorders = allowBackorders;
    return this;
  }

  /**
   * Get allowBackorders
   * @return allowBackorders
   */
  @javax.annotation.Nullable
  public Boolean getAllowBackorders() {
    return allowBackorders;
  }

  public void setAllowBackorders(Boolean allowBackorders) {
    this.allowBackorders = allowBackorders;
  }


  public Child availForSale(Boolean availForSale) {
    this.availForSale = availForSale;
    return this;
  }

  /**
   * Get availForSale
   * @return availForSale
   */
  @javax.annotation.Nullable
  public Boolean getAvailForSale() {
    return availForSale;
  }

  public void setAvailForSale(Boolean availForSale) {
    this.availForSale = availForSale;
  }


  public Child combination(List<ProductChildItemCombination> combination) {
    this.combination = combination;
    return this;
  }

  public Child addCombinationItem(ProductChildItemCombination combinationItem) {
    if (this.combination == null) {
      this.combination = new ArrayList<>();
    }
    this.combination.add(combinationItem);
    return this;
  }

  /**
   * Get combination
   * @return combination
   */
  @javax.annotation.Nullable
  public List<ProductChildItemCombination> getCombination() {
    return combination;
  }

  public void setCombination(List<ProductChildItemCombination> combination) {
    this.combination = combination;
  }


  public Child costPrice(BigDecimal costPrice) {
    this.costPrice = costPrice;
    return this;
  }

  /**
   * Get costPrice
   * @return costPrice
   */
  @javax.annotation.Nullable
  public BigDecimal getCostPrice() {
    return costPrice;
  }

  public void setCostPrice(BigDecimal costPrice) {
    this.costPrice = costPrice;
  }


  public Child createdTime(A2CDateTime createdTime) {
    this.createdTime = createdTime;
    return this;
  }

  /**
   * Get createdTime
   * @return createdTime
   */
  @javax.annotation.Nullable
  public A2CDateTime getCreatedTime() {
    return createdTime;
  }

  public void setCreatedTime(A2CDateTime createdTime) {
    this.createdTime = createdTime;
  }


  public Child customFields(Object customFields) {
    this.customFields = customFields;
    return this;
  }

  /**
   * Get customFields
   * @return customFields
   */
  @javax.annotation.Nullable
  public Object getCustomFields() {
    return customFields;
  }

  public void setCustomFields(Object customFields) {
    this.customFields = customFields;
  }


  public Child defaultPrice(BigDecimal defaultPrice) {
    this.defaultPrice = defaultPrice;
    return this;
  }

  /**
   * Get defaultPrice
   * @return defaultPrice
   */
  @javax.annotation.Nullable
  public BigDecimal getDefaultPrice() {
    return defaultPrice;
  }

  public void setDefaultPrice(BigDecimal defaultPrice) {
    this.defaultPrice = defaultPrice;
  }


  public Child defaultQtyInPack(BigDecimal defaultQtyInPack) {
    this.defaultQtyInPack = defaultQtyInPack;
    return this;
  }

  /**
   * Get defaultQtyInPack
   * @return defaultQtyInPack
   */
  @javax.annotation.Nullable
  public BigDecimal getDefaultQtyInPack() {
    return defaultQtyInPack;
  }

  public void setDefaultQtyInPack(BigDecimal defaultQtyInPack) {
    this.defaultQtyInPack = defaultQtyInPack;
  }


  public Child dimensionsUnit(String dimensionsUnit) {
    this.dimensionsUnit = dimensionsUnit;
    return this;
  }

  /**
   * Get dimensionsUnit
   * @return dimensionsUnit
   */
  @javax.annotation.Nullable
  public String getDimensionsUnit() {
    return dimensionsUnit;
  }

  public void setDimensionsUnit(String dimensionsUnit) {
    this.dimensionsUnit = dimensionsUnit;
  }


  public Child discounts(List<Discount> discounts) {
    this.discounts = discounts;
    return this;
  }

  public Child addDiscountsItem(Discount discountsItem) {
    if (this.discounts == null) {
      this.discounts = new ArrayList<>();
    }
    this.discounts.add(discountsItem);
    return this;
  }

  /**
   * Get discounts
   * @return discounts
   */
  @javax.annotation.Nullable
  public List<Discount> getDiscounts() {
    return discounts;
  }

  public void setDiscounts(List<Discount> discounts) {
    this.discounts = discounts;
  }


  public Child ean(String ean) {
    this.ean = ean;
    return this;
  }

  /**
   * Get ean
   * @return ean
   */
  @javax.annotation.Nullable
  public String getEan() {
    return ean;
  }

  public void setEan(String ean) {
    this.ean = ean;
  }


  public Child fullDescription(String fullDescription) {
    this.fullDescription = fullDescription;
    return this;
  }

  /**
   * Get fullDescription
   * @return fullDescription
   */
  @javax.annotation.Nullable
  public String getFullDescription() {
    return fullDescription;
  }

  public void setFullDescription(String fullDescription) {
    this.fullDescription = fullDescription;
  }


  public Child gtin(String gtin) {
    this.gtin = gtin;
    return this;
  }

  /**
   * Get gtin
   * @return gtin
   */
  @javax.annotation.Nullable
  public String getGtin() {
    return gtin;
  }

  public void setGtin(String gtin) {
    this.gtin = gtin;
  }


  public Child height(BigDecimal height) {
    this.height = height;
    return this;
  }

  /**
   * Get height
   * @return height
   */
  @javax.annotation.Nullable
  public BigDecimal getHeight() {
    return height;
  }

  public void setHeight(BigDecimal height) {
    this.height = height;
  }


  public Child id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public Child images(List<Image> images) {
    this.images = images;
    return this;
  }

  public Child addImagesItem(Image imagesItem) {
    if (this.images == null) {
      this.images = new ArrayList<>();
    }
    this.images.add(imagesItem);
    return this;
  }

  /**
   * Get images
   * @return images
   */
  @javax.annotation.Nullable
  public List<Image> getImages() {
    return images;
  }

  public void setImages(List<Image> images) {
    this.images = images;
  }


  public Child inStock(Boolean inStock) {
    this.inStock = inStock;
    return this;
  }

  /**
   * Get inStock
   * @return inStock
   */
  @javax.annotation.Nullable
  public Boolean getInStock() {
    return inStock;
  }

  public void setInStock(Boolean inStock) {
    this.inStock = inStock;
  }


  public Child inventory(List<ProductInventory> inventory) {
    this.inventory = inventory;
    return this;
  }

  public Child addInventoryItem(ProductInventory inventoryItem) {
    if (this.inventory == null) {
      this.inventory = new ArrayList<>();
    }
    this.inventory.add(inventoryItem);
    return this;
  }

  /**
   * Get inventory
   * @return inventory
   */
  @javax.annotation.Nullable
  public List<ProductInventory> getInventory() {
    return inventory;
  }

  public void setInventory(List<ProductInventory> inventory) {
    this.inventory = inventory;
  }


  public Child inventoryLevel(BigDecimal inventoryLevel) {
    this.inventoryLevel = inventoryLevel;
    return this;
  }

  /**
   * Get inventoryLevel
   * @return inventoryLevel
   */
  @javax.annotation.Nullable
  public BigDecimal getInventoryLevel() {
    return inventoryLevel;
  }

  public void setInventoryLevel(BigDecimal inventoryLevel) {
    this.inventoryLevel = inventoryLevel;
  }


  public Child isQtyInPackFixed(Boolean isQtyInPackFixed) {
    this.isQtyInPackFixed = isQtyInPackFixed;
    return this;
  }

  /**
   * Get isQtyInPackFixed
   * @return isQtyInPackFixed
   */
  @javax.annotation.Nullable
  public Boolean getIsQtyInPackFixed() {
    return isQtyInPackFixed;
  }

  public void setIsQtyInPackFixed(Boolean isQtyInPackFixed) {
    this.isQtyInPackFixed = isQtyInPackFixed;
  }


  public Child isbn(String isbn) {
    this.isbn = isbn;
    return this;
  }

  /**
   * Get isbn
   * @return isbn
   */
  @javax.annotation.Nullable
  public String getIsbn() {
    return isbn;
  }

  public void setIsbn(String isbn) {
    this.isbn = isbn;
  }


  public Child length(BigDecimal length) {
    this.length = length;
    return this;
  }

  /**
   * Get length
   * @return length
   */
  @javax.annotation.Nullable
  public BigDecimal getLength() {
    return length;
  }

  public void setLength(BigDecimal length) {
    this.length = length;
  }


  public Child listPrice(BigDecimal listPrice) {
    this.listPrice = listPrice;
    return this;
  }

  /**
   * Get listPrice
   * @return listPrice
   */
  @javax.annotation.Nullable
  public BigDecimal getListPrice() {
    return listPrice;
  }

  public void setListPrice(BigDecimal listPrice) {
    this.listPrice = listPrice;
  }


  public Child manageStock(Boolean manageStock) {
    this.manageStock = manageStock;
    return this;
  }

  /**
   * Get manageStock
   * @return manageStock
   */
  @javax.annotation.Nullable
  public Boolean getManageStock() {
    return manageStock;
  }

  public void setManageStock(Boolean manageStock) {
    this.manageStock = manageStock;
  }


  public Child metaDescription(String metaDescription) {
    this.metaDescription = metaDescription;
    return this;
  }

  /**
   * Get metaDescription
   * @return metaDescription
   */
  @javax.annotation.Nullable
  public String getMetaDescription() {
    return metaDescription;
  }

  public void setMetaDescription(String metaDescription) {
    this.metaDescription = metaDescription;
  }


  public Child metaKeywords(String metaKeywords) {
    this.metaKeywords = metaKeywords;
    return this;
  }

  /**
   * Get metaKeywords
   * @return metaKeywords
   */
  @javax.annotation.Nullable
  public String getMetaKeywords() {
    return metaKeywords;
  }

  public void setMetaKeywords(String metaKeywords) {
    this.metaKeywords = metaKeywords;
  }


  public Child metaTitle(String metaTitle) {
    this.metaTitle = metaTitle;
    return this;
  }

  /**
   * Get metaTitle
   * @return metaTitle
   */
  @javax.annotation.Nullable
  public String getMetaTitle() {
    return metaTitle;
  }

  public void setMetaTitle(String metaTitle) {
    this.metaTitle = metaTitle;
  }


  public Child minQuantity(BigDecimal minQuantity) {
    this.minQuantity = minQuantity;
    return this;
  }

  /**
   * Get minQuantity
   * @return minQuantity
   */
  @javax.annotation.Nullable
  public BigDecimal getMinQuantity() {
    return minQuantity;
  }

  public void setMinQuantity(BigDecimal minQuantity) {
    this.minQuantity = minQuantity;
  }


  public Child modifiedTime(A2CDateTime modifiedTime) {
    this.modifiedTime = modifiedTime;
    return this;
  }

  /**
   * Get modifiedTime
   * @return modifiedTime
   */
  @javax.annotation.Nullable
  public A2CDateTime getModifiedTime() {
    return modifiedTime;
  }

  public void setModifiedTime(A2CDateTime modifiedTime) {
    this.modifiedTime = modifiedTime;
  }


  public Child mpn(String mpn) {
    this.mpn = mpn;
    return this;
  }

  /**
   * Get mpn
   * @return mpn
   */
  @javax.annotation.Nullable
  public String getMpn() {
    return mpn;
  }

  public void setMpn(String mpn) {
    this.mpn = mpn;
  }


  public Child name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public Child parentId(String parentId) {
    this.parentId = parentId;
    return this;
  }

  /**
   * Get parentId
   * @return parentId
   */
  @javax.annotation.Nullable
  public String getParentId() {
    return parentId;
  }

  public void setParentId(String parentId) {
    this.parentId = parentId;
  }


  public Child shortDescription(String shortDescription) {
    this.shortDescription = shortDescription;
    return this;
  }

  /**
   * Get shortDescription
   * @return shortDescription
   */
  @javax.annotation.Nullable
  public String getShortDescription() {
    return shortDescription;
  }

  public void setShortDescription(String shortDescription) {
    this.shortDescription = shortDescription;
  }


  public Child sku(String sku) {
    this.sku = sku;
    return this;
  }

  /**
   * Get sku
   * @return sku
   */
  @javax.annotation.Nullable
  public String getSku() {
    return sku;
  }

  public void setSku(String sku) {
    this.sku = sku;
  }


  public Child sortOrder(Integer sortOrder) {
    this.sortOrder = sortOrder;
    return this;
  }

  /**
   * Get sortOrder
   * @return sortOrder
   */
  @javax.annotation.Nullable
  public Integer getSortOrder() {
    return sortOrder;
  }

  public void setSortOrder(Integer sortOrder) {
    this.sortOrder = sortOrder;
  }


  public Child taxClassId(String taxClassId) {
    this.taxClassId = taxClassId;
    return this;
  }

  /**
   * Get taxClassId
   * @return taxClassId
   */
  @javax.annotation.Nullable
  public String getTaxClassId() {
    return taxClassId;
  }

  public void setTaxClassId(String taxClassId) {
    this.taxClassId = taxClassId;
  }


  public Child upc(String upc) {
    this.upc = upc;
    return this;
  }

  /**
   * Get upc
   * @return upc
   */
  @javax.annotation.Nullable
  public String getUpc() {
    return upc;
  }

  public void setUpc(String upc) {
    this.upc = upc;
  }


  public Child url(String url) {
    this.url = url;
    return this;
  }

  /**
   * Get url
   * @return url
   */
  @javax.annotation.Nullable
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }


  public Child weight(BigDecimal weight) {
    this.weight = weight;
    return this;
  }

  /**
   * Get weight
   * @return weight
   */
  @javax.annotation.Nullable
  public BigDecimal getWeight() {
    return weight;
  }

  public void setWeight(BigDecimal weight) {
    this.weight = weight;
  }


  public Child weightUnit(String weightUnit) {
    this.weightUnit = weightUnit;
    return this;
  }

  /**
   * Get weightUnit
   * @return weightUnit
   */
  @javax.annotation.Nullable
  public String getWeightUnit() {
    return weightUnit;
  }

  public void setWeightUnit(String weightUnit) {
    this.weightUnit = weightUnit;
  }


  public Child wholesalePrice(BigDecimal wholesalePrice) {
    this.wholesalePrice = wholesalePrice;
    return this;
  }

  /**
   * Get wholesalePrice
   * @return wholesalePrice
   */
  @javax.annotation.Nullable
  public BigDecimal getWholesalePrice() {
    return wholesalePrice;
  }

  public void setWholesalePrice(BigDecimal wholesalePrice) {
    this.wholesalePrice = wholesalePrice;
  }


  public Child width(BigDecimal width) {
    this.width = width;
    return this;
  }

  /**
   * Get width
   * @return width
   */
  @javax.annotation.Nullable
  public BigDecimal getWidth() {
    return width;
  }

  public void setWidth(BigDecimal width) {
    this.width = width;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Child child = (Child) o;
    return Objects.equals(this.additionalFields, child.additionalFields) &&
        Objects.equals(this.advancedPrice, child.advancedPrice) &&
        Objects.equals(this.allowBackorders, child.allowBackorders) &&
        Objects.equals(this.availForSale, child.availForSale) &&
        Objects.equals(this.combination, child.combination) &&
        Objects.equals(this.costPrice, child.costPrice) &&
        Objects.equals(this.createdTime, child.createdTime) &&
        Objects.equals(this.customFields, child.customFields) &&
        Objects.equals(this.defaultPrice, child.defaultPrice) &&
        Objects.equals(this.defaultQtyInPack, child.defaultQtyInPack) &&
        Objects.equals(this.dimensionsUnit, child.dimensionsUnit) &&
        Objects.equals(this.discounts, child.discounts) &&
        Objects.equals(this.ean, child.ean) &&
        Objects.equals(this.fullDescription, child.fullDescription) &&
        Objects.equals(this.gtin, child.gtin) &&
        Objects.equals(this.height, child.height) &&
        Objects.equals(this.id, child.id) &&
        Objects.equals(this.images, child.images) &&
        Objects.equals(this.inStock, child.inStock) &&
        Objects.equals(this.inventory, child.inventory) &&
        Objects.equals(this.inventoryLevel, child.inventoryLevel) &&
        Objects.equals(this.isQtyInPackFixed, child.isQtyInPackFixed) &&
        Objects.equals(this.isbn, child.isbn) &&
        Objects.equals(this.length, child.length) &&
        Objects.equals(this.listPrice, child.listPrice) &&
        Objects.equals(this.manageStock, child.manageStock) &&
        Objects.equals(this.metaDescription, child.metaDescription) &&
        Objects.equals(this.metaKeywords, child.metaKeywords) &&
        Objects.equals(this.metaTitle, child.metaTitle) &&
        Objects.equals(this.minQuantity, child.minQuantity) &&
        Objects.equals(this.modifiedTime, child.modifiedTime) &&
        Objects.equals(this.mpn, child.mpn) &&
        Objects.equals(this.name, child.name) &&
        Objects.equals(this.parentId, child.parentId) &&
        Objects.equals(this.shortDescription, child.shortDescription) &&
        Objects.equals(this.sku, child.sku) &&
        Objects.equals(this.sortOrder, child.sortOrder) &&
        Objects.equals(this.taxClassId, child.taxClassId) &&
        Objects.equals(this.upc, child.upc) &&
        Objects.equals(this.url, child.url) &&
        Objects.equals(this.weight, child.weight) &&
        Objects.equals(this.weightUnit, child.weightUnit) &&
        Objects.equals(this.wholesalePrice, child.wholesalePrice) &&
        Objects.equals(this.width, child.width);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalFields, advancedPrice, allowBackorders, availForSale, combination, costPrice, createdTime, customFields, defaultPrice, defaultQtyInPack, dimensionsUnit, discounts, ean, fullDescription, gtin, height, id, images, inStock, inventory, inventoryLevel, isQtyInPackFixed, isbn, length, listPrice, manageStock, metaDescription, metaKeywords, metaTitle, minQuantity, modifiedTime, mpn, name, parentId, shortDescription, sku, sortOrder, taxClassId, upc, url, weight, weightUnit, wholesalePrice, width);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Child {\n");
    sb.append("    additionalFields: ").append(toIndentedString(additionalFields)).append("\n");
    sb.append("    advancedPrice: ").append(toIndentedString(advancedPrice)).append("\n");
    sb.append("    allowBackorders: ").append(toIndentedString(allowBackorders)).append("\n");
    sb.append("    availForSale: ").append(toIndentedString(availForSale)).append("\n");
    sb.append("    combination: ").append(toIndentedString(combination)).append("\n");
    sb.append("    costPrice: ").append(toIndentedString(costPrice)).append("\n");
    sb.append("    createdTime: ").append(toIndentedString(createdTime)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    defaultPrice: ").append(toIndentedString(defaultPrice)).append("\n");
    sb.append("    defaultQtyInPack: ").append(toIndentedString(defaultQtyInPack)).append("\n");
    sb.append("    dimensionsUnit: ").append(toIndentedString(dimensionsUnit)).append("\n");
    sb.append("    discounts: ").append(toIndentedString(discounts)).append("\n");
    sb.append("    ean: ").append(toIndentedString(ean)).append("\n");
    sb.append("    fullDescription: ").append(toIndentedString(fullDescription)).append("\n");
    sb.append("    gtin: ").append(toIndentedString(gtin)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    images: ").append(toIndentedString(images)).append("\n");
    sb.append("    inStock: ").append(toIndentedString(inStock)).append("\n");
    sb.append("    inventory: ").append(toIndentedString(inventory)).append("\n");
    sb.append("    inventoryLevel: ").append(toIndentedString(inventoryLevel)).append("\n");
    sb.append("    isQtyInPackFixed: ").append(toIndentedString(isQtyInPackFixed)).append("\n");
    sb.append("    isbn: ").append(toIndentedString(isbn)).append("\n");
    sb.append("    length: ").append(toIndentedString(length)).append("\n");
    sb.append("    listPrice: ").append(toIndentedString(listPrice)).append("\n");
    sb.append("    manageStock: ").append(toIndentedString(manageStock)).append("\n");
    sb.append("    metaDescription: ").append(toIndentedString(metaDescription)).append("\n");
    sb.append("    metaKeywords: ").append(toIndentedString(metaKeywords)).append("\n");
    sb.append("    metaTitle: ").append(toIndentedString(metaTitle)).append("\n");
    sb.append("    minQuantity: ").append(toIndentedString(minQuantity)).append("\n");
    sb.append("    modifiedTime: ").append(toIndentedString(modifiedTime)).append("\n");
    sb.append("    mpn: ").append(toIndentedString(mpn)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    shortDescription: ").append(toIndentedString(shortDescription)).append("\n");
    sb.append("    sku: ").append(toIndentedString(sku)).append("\n");
    sb.append("    sortOrder: ").append(toIndentedString(sortOrder)).append("\n");
    sb.append("    taxClassId: ").append(toIndentedString(taxClassId)).append("\n");
    sb.append("    upc: ").append(toIndentedString(upc)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("    weightUnit: ").append(toIndentedString(weightUnit)).append("\n");
    sb.append("    wholesalePrice: ").append(toIndentedString(wholesalePrice)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("additional_fields");
    openapiFields.add("advanced_price");
    openapiFields.add("allow_backorders");
    openapiFields.add("avail_for_sale");
    openapiFields.add("combination");
    openapiFields.add("cost_price");
    openapiFields.add("created_time");
    openapiFields.add("custom_fields");
    openapiFields.add("default_price");
    openapiFields.add("default_qty_in_pack");
    openapiFields.add("dimensions_unit");
    openapiFields.add("discounts");
    openapiFields.add("ean");
    openapiFields.add("full_description");
    openapiFields.add("gtin");
    openapiFields.add("height");
    openapiFields.add("id");
    openapiFields.add("images");
    openapiFields.add("in_stock");
    openapiFields.add("inventory");
    openapiFields.add("inventory_level");
    openapiFields.add("is_qty_in_pack_fixed");
    openapiFields.add("isbn");
    openapiFields.add("length");
    openapiFields.add("list_price");
    openapiFields.add("manage_stock");
    openapiFields.add("meta_description");
    openapiFields.add("meta_keywords");
    openapiFields.add("meta_title");
    openapiFields.add("min_quantity");
    openapiFields.add("modified_time");
    openapiFields.add("mpn");
    openapiFields.add("name");
    openapiFields.add("parent_id");
    openapiFields.add("short_description");
    openapiFields.add("sku");
    openapiFields.add("sort_order");
    openapiFields.add("tax_class_id");
    openapiFields.add("upc");
    openapiFields.add("url");
    openapiFields.add("weight");
    openapiFields.add("weight_unit");
    openapiFields.add("wholesale_price");
    openapiFields.add("width");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Child
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Child.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Child is not found in the empty JSON string", Child.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Child.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Child` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("advanced_price") != null && !jsonObj.get("advanced_price").isJsonNull()) {
        JsonArray jsonArrayadvancedPrice = jsonObj.getAsJsonArray("advanced_price");
        if (jsonArrayadvancedPrice != null) {
          // ensure the json data is an array
          if (!jsonObj.get("advanced_price").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `advanced_price` to be an array in the JSON string but got `%s`", jsonObj.get("advanced_price").toString()));
          }

          // validate the optional field `advanced_price` (array)
          for (int i = 0; i < jsonArrayadvancedPrice.size(); i++) {
            ProductAdvancedPrice.validateJsonElement(jsonArrayadvancedPrice.get(i));
          };
        }
      }
      if (jsonObj.get("combination") != null && !jsonObj.get("combination").isJsonNull()) {
        JsonArray jsonArraycombination = jsonObj.getAsJsonArray("combination");
        if (jsonArraycombination != null) {
          // ensure the json data is an array
          if (!jsonObj.get("combination").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `combination` to be an array in the JSON string but got `%s`", jsonObj.get("combination").toString()));
          }

          // validate the optional field `combination` (array)
          for (int i = 0; i < jsonArraycombination.size(); i++) {
            ProductChildItemCombination.validateJsonElement(jsonArraycombination.get(i));
          };
        }
      }
      // validate the optional field `created_time`
      if (jsonObj.get("created_time") != null && !jsonObj.get("created_time").isJsonNull()) {
        A2CDateTime.validateJsonElement(jsonObj.get("created_time"));
      }
      if ((jsonObj.get("dimensions_unit") != null && !jsonObj.get("dimensions_unit").isJsonNull()) && !jsonObj.get("dimensions_unit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dimensions_unit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dimensions_unit").toString()));
      }
      if (jsonObj.get("discounts") != null && !jsonObj.get("discounts").isJsonNull()) {
        JsonArray jsonArraydiscounts = jsonObj.getAsJsonArray("discounts");
        if (jsonArraydiscounts != null) {
          // ensure the json data is an array
          if (!jsonObj.get("discounts").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `discounts` to be an array in the JSON string but got `%s`", jsonObj.get("discounts").toString()));
          }

          // validate the optional field `discounts` (array)
          for (int i = 0; i < jsonArraydiscounts.size(); i++) {
            Discount.validateJsonElement(jsonArraydiscounts.get(i));
          };
        }
      }
      if ((jsonObj.get("ean") != null && !jsonObj.get("ean").isJsonNull()) && !jsonObj.get("ean").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ean` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ean").toString()));
      }
      if ((jsonObj.get("full_description") != null && !jsonObj.get("full_description").isJsonNull()) && !jsonObj.get("full_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `full_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("full_description").toString()));
      }
      if ((jsonObj.get("gtin") != null && !jsonObj.get("gtin").isJsonNull()) && !jsonObj.get("gtin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gtin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gtin").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if (jsonObj.get("images") != null && !jsonObj.get("images").isJsonNull()) {
        JsonArray jsonArrayimages = jsonObj.getAsJsonArray("images");
        if (jsonArrayimages != null) {
          // ensure the json data is an array
          if (!jsonObj.get("images").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `images` to be an array in the JSON string but got `%s`", jsonObj.get("images").toString()));
          }

          // validate the optional field `images` (array)
          for (int i = 0; i < jsonArrayimages.size(); i++) {
            Image.validateJsonElement(jsonArrayimages.get(i));
          };
        }
      }
      if (jsonObj.get("inventory") != null && !jsonObj.get("inventory").isJsonNull()) {
        JsonArray jsonArrayinventory = jsonObj.getAsJsonArray("inventory");
        if (jsonArrayinventory != null) {
          // ensure the json data is an array
          if (!jsonObj.get("inventory").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `inventory` to be an array in the JSON string but got `%s`", jsonObj.get("inventory").toString()));
          }

          // validate the optional field `inventory` (array)
          for (int i = 0; i < jsonArrayinventory.size(); i++) {
            ProductInventory.validateJsonElement(jsonArrayinventory.get(i));
          };
        }
      }
      if ((jsonObj.get("isbn") != null && !jsonObj.get("isbn").isJsonNull()) && !jsonObj.get("isbn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `isbn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("isbn").toString()));
      }
      if ((jsonObj.get("meta_description") != null && !jsonObj.get("meta_description").isJsonNull()) && !jsonObj.get("meta_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `meta_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("meta_description").toString()));
      }
      if ((jsonObj.get("meta_keywords") != null && !jsonObj.get("meta_keywords").isJsonNull()) && !jsonObj.get("meta_keywords").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `meta_keywords` to be a primitive type in the JSON string but got `%s`", jsonObj.get("meta_keywords").toString()));
      }
      if ((jsonObj.get("meta_title") != null && !jsonObj.get("meta_title").isJsonNull()) && !jsonObj.get("meta_title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `meta_title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("meta_title").toString()));
      }
      // validate the optional field `modified_time`
      if (jsonObj.get("modified_time") != null && !jsonObj.get("modified_time").isJsonNull()) {
        A2CDateTime.validateJsonElement(jsonObj.get("modified_time"));
      }
      if ((jsonObj.get("mpn") != null && !jsonObj.get("mpn").isJsonNull()) && !jsonObj.get("mpn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mpn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mpn").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("parent_id") != null && !jsonObj.get("parent_id").isJsonNull()) && !jsonObj.get("parent_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parent_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parent_id").toString()));
      }
      if ((jsonObj.get("short_description") != null && !jsonObj.get("short_description").isJsonNull()) && !jsonObj.get("short_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `short_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("short_description").toString()));
      }
      if ((jsonObj.get("sku") != null && !jsonObj.get("sku").isJsonNull()) && !jsonObj.get("sku").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sku` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sku").toString()));
      }
      if ((jsonObj.get("tax_class_id") != null && !jsonObj.get("tax_class_id").isJsonNull()) && !jsonObj.get("tax_class_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tax_class_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tax_class_id").toString()));
      }
      if ((jsonObj.get("upc") != null && !jsonObj.get("upc").isJsonNull()) && !jsonObj.get("upc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `upc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("upc").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
      if ((jsonObj.get("weight_unit") != null && !jsonObj.get("weight_unit").isJsonNull()) && !jsonObj.get("weight_unit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `weight_unit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("weight_unit").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Child.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Child' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Child> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Child.class));

       return (TypeAdapter<T>) new TypeAdapter<Child>() {
           @Override
           public void write(JsonWriter out, Child value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Child read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Child given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Child
   * @throws IOException if the JSON string is invalid with respect to Child
   */
  public static Child fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Child.class);
  }

  /**
   * Convert an instance of Child to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

