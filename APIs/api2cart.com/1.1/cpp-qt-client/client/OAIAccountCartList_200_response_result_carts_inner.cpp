/**
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccountCartList_200_response_result_carts_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccountCartList_200_response_result_carts_inner::OAIAccountCartList_200_response_result_carts_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccountCartList_200_response_result_carts_inner::OAIAccountCartList_200_response_result_carts_inner() {
    this->initializeModel();
}

OAIAccountCartList_200_response_result_carts_inner::~OAIAccountCartList_200_response_result_carts_inner() {}

void OAIAccountCartList_200_response_result_carts_inner::initializeModel() {

    m_cart_id_isSet = false;
    m_cart_id_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_store_key_isSet = false;
    m_store_key_isValid = false;

    m_total_calls_isSet = false;
    m_total_calls_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIAccountCartList_200_response_result_carts_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccountCartList_200_response_result_carts_inner::fromJsonObject(QJsonObject json) {

    m_cart_id_isValid = ::OpenAPI::fromJsonValue(m_cart_id, json[QString("cart_id")]);
    m_cart_id_isSet = !json[QString("cart_id")].isNull() && m_cart_id_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_store_key_isValid = ::OpenAPI::fromJsonValue(m_store_key, json[QString("store_key")]);
    m_store_key_isSet = !json[QString("store_key")].isNull() && m_store_key_isValid;

    m_total_calls_isValid = ::OpenAPI::fromJsonValue(m_total_calls, json[QString("total_calls")]);
    m_total_calls_isSet = !json[QString("total_calls")].isNull() && m_total_calls_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAIAccountCartList_200_response_result_carts_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccountCartList_200_response_result_carts_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_cart_id_isSet) {
        obj.insert(QString("cart_id"), ::OpenAPI::toJsonValue(m_cart_id));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_store_key_isSet) {
        obj.insert(QString("store_key"), ::OpenAPI::toJsonValue(m_store_key));
    }
    if (m_total_calls_isSet) {
        obj.insert(QString("total_calls"), ::OpenAPI::toJsonValue(m_total_calls));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

QString OAIAccountCartList_200_response_result_carts_inner::getCartId() const {
    return m_cart_id;
}
void OAIAccountCartList_200_response_result_carts_inner::setCartId(const QString &cart_id) {
    m_cart_id = cart_id;
    m_cart_id_isSet = true;
}

bool OAIAccountCartList_200_response_result_carts_inner::is_cart_id_Set() const{
    return m_cart_id_isSet;
}

bool OAIAccountCartList_200_response_result_carts_inner::is_cart_id_Valid() const{
    return m_cart_id_isValid;
}

QString OAIAccountCartList_200_response_result_carts_inner::getId() const {
    return m_id;
}
void OAIAccountCartList_200_response_result_carts_inner::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIAccountCartList_200_response_result_carts_inner::is_id_Set() const{
    return m_id_isSet;
}

bool OAIAccountCartList_200_response_result_carts_inner::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIAccountCartList_200_response_result_carts_inner::getStoreKey() const {
    return m_store_key;
}
void OAIAccountCartList_200_response_result_carts_inner::setStoreKey(const QString &store_key) {
    m_store_key = store_key;
    m_store_key_isSet = true;
}

bool OAIAccountCartList_200_response_result_carts_inner::is_store_key_Set() const{
    return m_store_key_isSet;
}

bool OAIAccountCartList_200_response_result_carts_inner::is_store_key_Valid() const{
    return m_store_key_isValid;
}

QString OAIAccountCartList_200_response_result_carts_inner::getTotalCalls() const {
    return m_total_calls;
}
void OAIAccountCartList_200_response_result_carts_inner::setTotalCalls(const QString &total_calls) {
    m_total_calls = total_calls;
    m_total_calls_isSet = true;
}

bool OAIAccountCartList_200_response_result_carts_inner::is_total_calls_Set() const{
    return m_total_calls_isSet;
}

bool OAIAccountCartList_200_response_result_carts_inner::is_total_calls_Valid() const{
    return m_total_calls_isValid;
}

QString OAIAccountCartList_200_response_result_carts_inner::getUrl() const {
    return m_url;
}
void OAIAccountCartList_200_response_result_carts_inner::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIAccountCartList_200_response_result_carts_inner::is_url_Set() const{
    return m_url_isSet;
}

bool OAIAccountCartList_200_response_result_carts_inner::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIAccountCartList_200_response_result_carts_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cart_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_store_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_calls_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccountCartList_200_response_result_carts_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
