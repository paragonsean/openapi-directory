/**
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProductAdd_shipping_details_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProductAdd_shipping_details_inner::OAIProductAdd_shipping_details_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProductAdd_shipping_details_inner::OAIProductAdd_shipping_details_inner() {
    this->initializeModel();
}

OAIProductAdd_shipping_details_inner::~OAIProductAdd_shipping_details_inner() {}

void OAIProductAdd_shipping_details_inner::initializeModel() {

    m_shipping_cost_isSet = false;
    m_shipping_cost_isValid = false;

    m_shipping_service_isSet = false;
    m_shipping_service_isValid = false;

    m_shipping_type_isSet = false;
    m_shipping_type_isValid = false;
}

void OAIProductAdd_shipping_details_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProductAdd_shipping_details_inner::fromJsonObject(QJsonObject json) {

    m_shipping_cost_isValid = ::OpenAPI::fromJsonValue(m_shipping_cost, json[QString("shipping_cost")]);
    m_shipping_cost_isSet = !json[QString("shipping_cost")].isNull() && m_shipping_cost_isValid;

    m_shipping_service_isValid = ::OpenAPI::fromJsonValue(m_shipping_service, json[QString("shipping_service")]);
    m_shipping_service_isSet = !json[QString("shipping_service")].isNull() && m_shipping_service_isValid;

    m_shipping_type_isValid = ::OpenAPI::fromJsonValue(m_shipping_type, json[QString("shipping_type")]);
    m_shipping_type_isSet = !json[QString("shipping_type")].isNull() && m_shipping_type_isValid;
}

QString OAIProductAdd_shipping_details_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProductAdd_shipping_details_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_shipping_cost_isSet) {
        obj.insert(QString("shipping_cost"), ::OpenAPI::toJsonValue(m_shipping_cost));
    }
    if (m_shipping_service_isSet) {
        obj.insert(QString("shipping_service"), ::OpenAPI::toJsonValue(m_shipping_service));
    }
    if (m_shipping_type_isSet) {
        obj.insert(QString("shipping_type"), ::OpenAPI::toJsonValue(m_shipping_type));
    }
    return obj;
}

double OAIProductAdd_shipping_details_inner::getShippingCost() const {
    return m_shipping_cost;
}
void OAIProductAdd_shipping_details_inner::setShippingCost(const double &shipping_cost) {
    m_shipping_cost = shipping_cost;
    m_shipping_cost_isSet = true;
}

bool OAIProductAdd_shipping_details_inner::is_shipping_cost_Set() const{
    return m_shipping_cost_isSet;
}

bool OAIProductAdd_shipping_details_inner::is_shipping_cost_Valid() const{
    return m_shipping_cost_isValid;
}

QString OAIProductAdd_shipping_details_inner::getShippingService() const {
    return m_shipping_service;
}
void OAIProductAdd_shipping_details_inner::setShippingService(const QString &shipping_service) {
    m_shipping_service = shipping_service;
    m_shipping_service_isSet = true;
}

bool OAIProductAdd_shipping_details_inner::is_shipping_service_Set() const{
    return m_shipping_service_isSet;
}

bool OAIProductAdd_shipping_details_inner::is_shipping_service_Valid() const{
    return m_shipping_service_isValid;
}

QString OAIProductAdd_shipping_details_inner::getShippingType() const {
    return m_shipping_type;
}
void OAIProductAdd_shipping_details_inner::setShippingType(const QString &shipping_type) {
    m_shipping_type = shipping_type;
    m_shipping_type_isSet = true;
}

bool OAIProductAdd_shipping_details_inner::is_shipping_type_Set() const{
    return m_shipping_type_isSet;
}

bool OAIProductAdd_shipping_details_inner::is_shipping_type_Valid() const{
    return m_shipping_type_isValid;
}

bool OAIProductAdd_shipping_details_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_shipping_cost_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_service_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProductAdd_shipping_details_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
