/**
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderAdd_order_item_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderAdd_order_item_inner::OAIOrderAdd_order_item_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderAdd_order_item_inner::OAIOrderAdd_order_item_inner() {
    this->initializeModel();
}

OAIOrderAdd_order_item_inner::~OAIOrderAdd_order_item_inner() {}

void OAIOrderAdd_order_item_inner::initializeModel() {

    m_order_item_allow_refund_items_separately_isSet = false;
    m_order_item_allow_refund_items_separately_isValid = false;

    m_order_item_allow_ship_items_separately_isSet = false;
    m_order_item_allow_ship_items_separately_isValid = false;

    m_order_item_id_isSet = false;
    m_order_item_id_isValid = false;

    m_order_item_model_isSet = false;
    m_order_item_model_isValid = false;

    m_order_item_name_isSet = false;
    m_order_item_name_isValid = false;

    m_order_item_option_isSet = false;
    m_order_item_option_isValid = false;

    m_order_item_parent_isSet = false;
    m_order_item_parent_isValid = false;

    m_order_item_parent_option_name_isSet = false;
    m_order_item_parent_option_name_isValid = false;

    m_order_item_price_isSet = false;
    m_order_item_price_isValid = false;

    m_order_item_price_includes_tax_isSet = false;
    m_order_item_price_includes_tax_isValid = false;

    m_order_item_property_isSet = false;
    m_order_item_property_isValid = false;

    m_order_item_quantity_isSet = false;
    m_order_item_quantity_isValid = false;

    m_order_item_tax_isSet = false;
    m_order_item_tax_isValid = false;

    m_order_item_variant_id_isSet = false;
    m_order_item_variant_id_isValid = false;

    m_order_item_weight_isSet = false;
    m_order_item_weight_isValid = false;
}

void OAIOrderAdd_order_item_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrderAdd_order_item_inner::fromJsonObject(QJsonObject json) {

    m_order_item_allow_refund_items_separately_isValid = ::OpenAPI::fromJsonValue(m_order_item_allow_refund_items_separately, json[QString("order_item_allow_refund_items_separately")]);
    m_order_item_allow_refund_items_separately_isSet = !json[QString("order_item_allow_refund_items_separately")].isNull() && m_order_item_allow_refund_items_separately_isValid;

    m_order_item_allow_ship_items_separately_isValid = ::OpenAPI::fromJsonValue(m_order_item_allow_ship_items_separately, json[QString("order_item_allow_ship_items_separately")]);
    m_order_item_allow_ship_items_separately_isSet = !json[QString("order_item_allow_ship_items_separately")].isNull() && m_order_item_allow_ship_items_separately_isValid;

    m_order_item_id_isValid = ::OpenAPI::fromJsonValue(m_order_item_id, json[QString("order_item_id")]);
    m_order_item_id_isSet = !json[QString("order_item_id")].isNull() && m_order_item_id_isValid;

    m_order_item_model_isValid = ::OpenAPI::fromJsonValue(m_order_item_model, json[QString("order_item_model")]);
    m_order_item_model_isSet = !json[QString("order_item_model")].isNull() && m_order_item_model_isValid;

    m_order_item_name_isValid = ::OpenAPI::fromJsonValue(m_order_item_name, json[QString("order_item_name")]);
    m_order_item_name_isSet = !json[QString("order_item_name")].isNull() && m_order_item_name_isValid;

    m_order_item_option_isValid = ::OpenAPI::fromJsonValue(m_order_item_option, json[QString("order_item_option")]);
    m_order_item_option_isSet = !json[QString("order_item_option")].isNull() && m_order_item_option_isValid;

    m_order_item_parent_isValid = ::OpenAPI::fromJsonValue(m_order_item_parent, json[QString("order_item_parent")]);
    m_order_item_parent_isSet = !json[QString("order_item_parent")].isNull() && m_order_item_parent_isValid;

    m_order_item_parent_option_name_isValid = ::OpenAPI::fromJsonValue(m_order_item_parent_option_name, json[QString("order_item_parent_option_name")]);
    m_order_item_parent_option_name_isSet = !json[QString("order_item_parent_option_name")].isNull() && m_order_item_parent_option_name_isValid;

    m_order_item_price_isValid = ::OpenAPI::fromJsonValue(m_order_item_price, json[QString("order_item_price")]);
    m_order_item_price_isSet = !json[QString("order_item_price")].isNull() && m_order_item_price_isValid;

    m_order_item_price_includes_tax_isValid = ::OpenAPI::fromJsonValue(m_order_item_price_includes_tax, json[QString("order_item_price_includes_tax")]);
    m_order_item_price_includes_tax_isSet = !json[QString("order_item_price_includes_tax")].isNull() && m_order_item_price_includes_tax_isValid;

    m_order_item_property_isValid = ::OpenAPI::fromJsonValue(m_order_item_property, json[QString("order_item_property")]);
    m_order_item_property_isSet = !json[QString("order_item_property")].isNull() && m_order_item_property_isValid;

    m_order_item_quantity_isValid = ::OpenAPI::fromJsonValue(m_order_item_quantity, json[QString("order_item_quantity")]);
    m_order_item_quantity_isSet = !json[QString("order_item_quantity")].isNull() && m_order_item_quantity_isValid;

    m_order_item_tax_isValid = ::OpenAPI::fromJsonValue(m_order_item_tax, json[QString("order_item_tax")]);
    m_order_item_tax_isSet = !json[QString("order_item_tax")].isNull() && m_order_item_tax_isValid;

    m_order_item_variant_id_isValid = ::OpenAPI::fromJsonValue(m_order_item_variant_id, json[QString("order_item_variant_id")]);
    m_order_item_variant_id_isSet = !json[QString("order_item_variant_id")].isNull() && m_order_item_variant_id_isValid;

    m_order_item_weight_isValid = ::OpenAPI::fromJsonValue(m_order_item_weight, json[QString("order_item_weight")]);
    m_order_item_weight_isSet = !json[QString("order_item_weight")].isNull() && m_order_item_weight_isValid;
}

QString OAIOrderAdd_order_item_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrderAdd_order_item_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_order_item_allow_refund_items_separately_isSet) {
        obj.insert(QString("order_item_allow_refund_items_separately"), ::OpenAPI::toJsonValue(m_order_item_allow_refund_items_separately));
    }
    if (m_order_item_allow_ship_items_separately_isSet) {
        obj.insert(QString("order_item_allow_ship_items_separately"), ::OpenAPI::toJsonValue(m_order_item_allow_ship_items_separately));
    }
    if (m_order_item_id_isSet) {
        obj.insert(QString("order_item_id"), ::OpenAPI::toJsonValue(m_order_item_id));
    }
    if (m_order_item_model_isSet) {
        obj.insert(QString("order_item_model"), ::OpenAPI::toJsonValue(m_order_item_model));
    }
    if (m_order_item_name_isSet) {
        obj.insert(QString("order_item_name"), ::OpenAPI::toJsonValue(m_order_item_name));
    }
    if (m_order_item_option.size() > 0) {
        obj.insert(QString("order_item_option"), ::OpenAPI::toJsonValue(m_order_item_option));
    }
    if (m_order_item_parent_isSet) {
        obj.insert(QString("order_item_parent"), ::OpenAPI::toJsonValue(m_order_item_parent));
    }
    if (m_order_item_parent_option_name_isSet) {
        obj.insert(QString("order_item_parent_option_name"), ::OpenAPI::toJsonValue(m_order_item_parent_option_name));
    }
    if (m_order_item_price_isSet) {
        obj.insert(QString("order_item_price"), ::OpenAPI::toJsonValue(m_order_item_price));
    }
    if (m_order_item_price_includes_tax_isSet) {
        obj.insert(QString("order_item_price_includes_tax"), ::OpenAPI::toJsonValue(m_order_item_price_includes_tax));
    }
    if (m_order_item_property.size() > 0) {
        obj.insert(QString("order_item_property"), ::OpenAPI::toJsonValue(m_order_item_property));
    }
    if (m_order_item_quantity_isSet) {
        obj.insert(QString("order_item_quantity"), ::OpenAPI::toJsonValue(m_order_item_quantity));
    }
    if (m_order_item_tax_isSet) {
        obj.insert(QString("order_item_tax"), ::OpenAPI::toJsonValue(m_order_item_tax));
    }
    if (m_order_item_variant_id_isSet) {
        obj.insert(QString("order_item_variant_id"), ::OpenAPI::toJsonValue(m_order_item_variant_id));
    }
    if (m_order_item_weight_isSet) {
        obj.insert(QString("order_item_weight"), ::OpenAPI::toJsonValue(m_order_item_weight));
    }
    return obj;
}

bool OAIOrderAdd_order_item_inner::isOrderItemAllowRefundItemsSeparately() const {
    return m_order_item_allow_refund_items_separately;
}
void OAIOrderAdd_order_item_inner::setOrderItemAllowRefundItemsSeparately(const bool &order_item_allow_refund_items_separately) {
    m_order_item_allow_refund_items_separately = order_item_allow_refund_items_separately;
    m_order_item_allow_refund_items_separately_isSet = true;
}

bool OAIOrderAdd_order_item_inner::is_order_item_allow_refund_items_separately_Set() const{
    return m_order_item_allow_refund_items_separately_isSet;
}

bool OAIOrderAdd_order_item_inner::is_order_item_allow_refund_items_separately_Valid() const{
    return m_order_item_allow_refund_items_separately_isValid;
}

bool OAIOrderAdd_order_item_inner::isOrderItemAllowShipItemsSeparately() const {
    return m_order_item_allow_ship_items_separately;
}
void OAIOrderAdd_order_item_inner::setOrderItemAllowShipItemsSeparately(const bool &order_item_allow_ship_items_separately) {
    m_order_item_allow_ship_items_separately = order_item_allow_ship_items_separately;
    m_order_item_allow_ship_items_separately_isSet = true;
}

bool OAIOrderAdd_order_item_inner::is_order_item_allow_ship_items_separately_Set() const{
    return m_order_item_allow_ship_items_separately_isSet;
}

bool OAIOrderAdd_order_item_inner::is_order_item_allow_ship_items_separately_Valid() const{
    return m_order_item_allow_ship_items_separately_isValid;
}

QString OAIOrderAdd_order_item_inner::getOrderItemId() const {
    return m_order_item_id;
}
void OAIOrderAdd_order_item_inner::setOrderItemId(const QString &order_item_id) {
    m_order_item_id = order_item_id;
    m_order_item_id_isSet = true;
}

bool OAIOrderAdd_order_item_inner::is_order_item_id_Set() const{
    return m_order_item_id_isSet;
}

bool OAIOrderAdd_order_item_inner::is_order_item_id_Valid() const{
    return m_order_item_id_isValid;
}

QString OAIOrderAdd_order_item_inner::getOrderItemModel() const {
    return m_order_item_model;
}
void OAIOrderAdd_order_item_inner::setOrderItemModel(const QString &order_item_model) {
    m_order_item_model = order_item_model;
    m_order_item_model_isSet = true;
}

bool OAIOrderAdd_order_item_inner::is_order_item_model_Set() const{
    return m_order_item_model_isSet;
}

bool OAIOrderAdd_order_item_inner::is_order_item_model_Valid() const{
    return m_order_item_model_isValid;
}

QString OAIOrderAdd_order_item_inner::getOrderItemName() const {
    return m_order_item_name;
}
void OAIOrderAdd_order_item_inner::setOrderItemName(const QString &order_item_name) {
    m_order_item_name = order_item_name;
    m_order_item_name_isSet = true;
}

bool OAIOrderAdd_order_item_inner::is_order_item_name_Set() const{
    return m_order_item_name_isSet;
}

bool OAIOrderAdd_order_item_inner::is_order_item_name_Valid() const{
    return m_order_item_name_isValid;
}

QList<OAIOrderAdd_order_item_inner_order_item_option_inner> OAIOrderAdd_order_item_inner::getOrderItemOption() const {
    return m_order_item_option;
}
void OAIOrderAdd_order_item_inner::setOrderItemOption(const QList<OAIOrderAdd_order_item_inner_order_item_option_inner> &order_item_option) {
    m_order_item_option = order_item_option;
    m_order_item_option_isSet = true;
}

bool OAIOrderAdd_order_item_inner::is_order_item_option_Set() const{
    return m_order_item_option_isSet;
}

bool OAIOrderAdd_order_item_inner::is_order_item_option_Valid() const{
    return m_order_item_option_isValid;
}

qint32 OAIOrderAdd_order_item_inner::getOrderItemParent() const {
    return m_order_item_parent;
}
void OAIOrderAdd_order_item_inner::setOrderItemParent(const qint32 &order_item_parent) {
    m_order_item_parent = order_item_parent;
    m_order_item_parent_isSet = true;
}

bool OAIOrderAdd_order_item_inner::is_order_item_parent_Set() const{
    return m_order_item_parent_isSet;
}

bool OAIOrderAdd_order_item_inner::is_order_item_parent_Valid() const{
    return m_order_item_parent_isValid;
}

QString OAIOrderAdd_order_item_inner::getOrderItemParentOptionName() const {
    return m_order_item_parent_option_name;
}
void OAIOrderAdd_order_item_inner::setOrderItemParentOptionName(const QString &order_item_parent_option_name) {
    m_order_item_parent_option_name = order_item_parent_option_name;
    m_order_item_parent_option_name_isSet = true;
}

bool OAIOrderAdd_order_item_inner::is_order_item_parent_option_name_Set() const{
    return m_order_item_parent_option_name_isSet;
}

bool OAIOrderAdd_order_item_inner::is_order_item_parent_option_name_Valid() const{
    return m_order_item_parent_option_name_isValid;
}

double OAIOrderAdd_order_item_inner::getOrderItemPrice() const {
    return m_order_item_price;
}
void OAIOrderAdd_order_item_inner::setOrderItemPrice(const double &order_item_price) {
    m_order_item_price = order_item_price;
    m_order_item_price_isSet = true;
}

bool OAIOrderAdd_order_item_inner::is_order_item_price_Set() const{
    return m_order_item_price_isSet;
}

bool OAIOrderAdd_order_item_inner::is_order_item_price_Valid() const{
    return m_order_item_price_isValid;
}

bool OAIOrderAdd_order_item_inner::isOrderItemPriceIncludesTax() const {
    return m_order_item_price_includes_tax;
}
void OAIOrderAdd_order_item_inner::setOrderItemPriceIncludesTax(const bool &order_item_price_includes_tax) {
    m_order_item_price_includes_tax = order_item_price_includes_tax;
    m_order_item_price_includes_tax_isSet = true;
}

bool OAIOrderAdd_order_item_inner::is_order_item_price_includes_tax_Set() const{
    return m_order_item_price_includes_tax_isSet;
}

bool OAIOrderAdd_order_item_inner::is_order_item_price_includes_tax_Valid() const{
    return m_order_item_price_includes_tax_isValid;
}

QList<OAIOrderAdd_order_item_inner_order_item_property_inner> OAIOrderAdd_order_item_inner::getOrderItemProperty() const {
    return m_order_item_property;
}
void OAIOrderAdd_order_item_inner::setOrderItemProperty(const QList<OAIOrderAdd_order_item_inner_order_item_property_inner> &order_item_property) {
    m_order_item_property = order_item_property;
    m_order_item_property_isSet = true;
}

bool OAIOrderAdd_order_item_inner::is_order_item_property_Set() const{
    return m_order_item_property_isSet;
}

bool OAIOrderAdd_order_item_inner::is_order_item_property_Valid() const{
    return m_order_item_property_isValid;
}

qint32 OAIOrderAdd_order_item_inner::getOrderItemQuantity() const {
    return m_order_item_quantity;
}
void OAIOrderAdd_order_item_inner::setOrderItemQuantity(const qint32 &order_item_quantity) {
    m_order_item_quantity = order_item_quantity;
    m_order_item_quantity_isSet = true;
}

bool OAIOrderAdd_order_item_inner::is_order_item_quantity_Set() const{
    return m_order_item_quantity_isSet;
}

bool OAIOrderAdd_order_item_inner::is_order_item_quantity_Valid() const{
    return m_order_item_quantity_isValid;
}

double OAIOrderAdd_order_item_inner::getOrderItemTax() const {
    return m_order_item_tax;
}
void OAIOrderAdd_order_item_inner::setOrderItemTax(const double &order_item_tax) {
    m_order_item_tax = order_item_tax;
    m_order_item_tax_isSet = true;
}

bool OAIOrderAdd_order_item_inner::is_order_item_tax_Set() const{
    return m_order_item_tax_isSet;
}

bool OAIOrderAdd_order_item_inner::is_order_item_tax_Valid() const{
    return m_order_item_tax_isValid;
}

QString OAIOrderAdd_order_item_inner::getOrderItemVariantId() const {
    return m_order_item_variant_id;
}
void OAIOrderAdd_order_item_inner::setOrderItemVariantId(const QString &order_item_variant_id) {
    m_order_item_variant_id = order_item_variant_id;
    m_order_item_variant_id_isSet = true;
}

bool OAIOrderAdd_order_item_inner::is_order_item_variant_id_Set() const{
    return m_order_item_variant_id_isSet;
}

bool OAIOrderAdd_order_item_inner::is_order_item_variant_id_Valid() const{
    return m_order_item_variant_id_isValid;
}

double OAIOrderAdd_order_item_inner::getOrderItemWeight() const {
    return m_order_item_weight;
}
void OAIOrderAdd_order_item_inner::setOrderItemWeight(const double &order_item_weight) {
    m_order_item_weight = order_item_weight;
    m_order_item_weight_isSet = true;
}

bool OAIOrderAdd_order_item_inner::is_order_item_weight_Set() const{
    return m_order_item_weight_isSet;
}

bool OAIOrderAdd_order_item_inner::is_order_item_weight_Valid() const{
    return m_order_item_weight_isValid;
}

bool OAIOrderAdd_order_item_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_order_item_allow_refund_items_separately_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_item_allow_ship_items_separately_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_item_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_item_model_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_item_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_item_option.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_item_parent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_item_parent_option_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_item_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_item_price_includes_tax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_item_property.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_item_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_item_tax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_item_variant_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_item_weight_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrderAdd_order_item_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_order_item_id_isValid && m_order_item_name_isValid && m_order_item_price_isValid && m_order_item_quantity_isValid && true;
}

} // namespace OpenAPI
