/**
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrder_PreestimateShipping.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrder_PreestimateShipping::OAIOrder_PreestimateShipping(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrder_PreestimateShipping::OAIOrder_PreestimateShipping() {
    this->initializeModel();
}

OAIOrder_PreestimateShipping::~OAIOrder_PreestimateShipping() {}

void OAIOrder_PreestimateShipping::initializeModel() {

    m_additional_fields_isSet = false;
    m_additional_fields_isValid = false;

    m_carrier_code_isSet = false;
    m_carrier_code_isValid = false;

    m_carrier_name_isSet = false;
    m_carrier_name_isValid = false;

    m_custom_fields_isSet = false;
    m_custom_fields_isValid = false;

    m_delivery_time_isSet = false;
    m_delivery_time_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_method_code_isSet = false;
    m_method_code_isValid = false;

    m_method_name_isSet = false;
    m_method_name_isValid = false;

    m_price_isSet = false;
    m_price_isValid = false;

    m_price_inc_tax_isSet = false;
    m_price_inc_tax_isValid = false;
}

void OAIOrder_PreestimateShipping::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrder_PreestimateShipping::fromJsonObject(QJsonObject json) {

    m_additional_fields_isValid = ::OpenAPI::fromJsonValue(m_additional_fields, json[QString("additional_fields")]);
    m_additional_fields_isSet = !json[QString("additional_fields")].isNull() && m_additional_fields_isValid;

    m_carrier_code_isValid = ::OpenAPI::fromJsonValue(m_carrier_code, json[QString("carrier_code")]);
    m_carrier_code_isSet = !json[QString("carrier_code")].isNull() && m_carrier_code_isValid;

    m_carrier_name_isValid = ::OpenAPI::fromJsonValue(m_carrier_name, json[QString("carrier_name")]);
    m_carrier_name_isSet = !json[QString("carrier_name")].isNull() && m_carrier_name_isValid;

    m_custom_fields_isValid = ::OpenAPI::fromJsonValue(m_custom_fields, json[QString("custom_fields")]);
    m_custom_fields_isSet = !json[QString("custom_fields")].isNull() && m_custom_fields_isValid;

    m_delivery_time_isValid = ::OpenAPI::fromJsonValue(m_delivery_time, json[QString("delivery_time")]);
    m_delivery_time_isSet = !json[QString("delivery_time")].isNull() && m_delivery_time_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_method_code_isValid = ::OpenAPI::fromJsonValue(m_method_code, json[QString("method_code")]);
    m_method_code_isSet = !json[QString("method_code")].isNull() && m_method_code_isValid;

    m_method_name_isValid = ::OpenAPI::fromJsonValue(m_method_name, json[QString("method_name")]);
    m_method_name_isSet = !json[QString("method_name")].isNull() && m_method_name_isValid;

    m_price_isValid = ::OpenAPI::fromJsonValue(m_price, json[QString("price")]);
    m_price_isSet = !json[QString("price")].isNull() && m_price_isValid;

    m_price_inc_tax_isValid = ::OpenAPI::fromJsonValue(m_price_inc_tax, json[QString("price_inc_tax")]);
    m_price_inc_tax_isSet = !json[QString("price_inc_tax")].isNull() && m_price_inc_tax_isValid;
}

QString OAIOrder_PreestimateShipping::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrder_PreestimateShipping::asJsonObject() const {
    QJsonObject obj;
    if (m_additional_fields_isSet) {
        obj.insert(QString("additional_fields"), ::OpenAPI::toJsonValue(m_additional_fields));
    }
    if (m_carrier_code_isSet) {
        obj.insert(QString("carrier_code"), ::OpenAPI::toJsonValue(m_carrier_code));
    }
    if (m_carrier_name_isSet) {
        obj.insert(QString("carrier_name"), ::OpenAPI::toJsonValue(m_carrier_name));
    }
    if (m_custom_fields_isSet) {
        obj.insert(QString("custom_fields"), ::OpenAPI::toJsonValue(m_custom_fields));
    }
    if (m_delivery_time_isSet) {
        obj.insert(QString("delivery_time"), ::OpenAPI::toJsonValue(m_delivery_time));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_method_code_isSet) {
        obj.insert(QString("method_code"), ::OpenAPI::toJsonValue(m_method_code));
    }
    if (m_method_name_isSet) {
        obj.insert(QString("method_name"), ::OpenAPI::toJsonValue(m_method_name));
    }
    if (m_price_isSet) {
        obj.insert(QString("price"), ::OpenAPI::toJsonValue(m_price));
    }
    if (m_price_inc_tax_isSet) {
        obj.insert(QString("price_inc_tax"), ::OpenAPI::toJsonValue(m_price_inc_tax));
    }
    return obj;
}

OAIObject OAIOrder_PreestimateShipping::getAdditionalFields() const {
    return m_additional_fields;
}
void OAIOrder_PreestimateShipping::setAdditionalFields(const OAIObject &additional_fields) {
    m_additional_fields = additional_fields;
    m_additional_fields_isSet = true;
}

bool OAIOrder_PreestimateShipping::is_additional_fields_Set() const{
    return m_additional_fields_isSet;
}

bool OAIOrder_PreestimateShipping::is_additional_fields_Valid() const{
    return m_additional_fields_isValid;
}

QString OAIOrder_PreestimateShipping::getCarrierCode() const {
    return m_carrier_code;
}
void OAIOrder_PreestimateShipping::setCarrierCode(const QString &carrier_code) {
    m_carrier_code = carrier_code;
    m_carrier_code_isSet = true;
}

bool OAIOrder_PreestimateShipping::is_carrier_code_Set() const{
    return m_carrier_code_isSet;
}

bool OAIOrder_PreestimateShipping::is_carrier_code_Valid() const{
    return m_carrier_code_isValid;
}

QString OAIOrder_PreestimateShipping::getCarrierName() const {
    return m_carrier_name;
}
void OAIOrder_PreestimateShipping::setCarrierName(const QString &carrier_name) {
    m_carrier_name = carrier_name;
    m_carrier_name_isSet = true;
}

bool OAIOrder_PreestimateShipping::is_carrier_name_Set() const{
    return m_carrier_name_isSet;
}

bool OAIOrder_PreestimateShipping::is_carrier_name_Valid() const{
    return m_carrier_name_isValid;
}

OAIObject OAIOrder_PreestimateShipping::getCustomFields() const {
    return m_custom_fields;
}
void OAIOrder_PreestimateShipping::setCustomFields(const OAIObject &custom_fields) {
    m_custom_fields = custom_fields;
    m_custom_fields_isSet = true;
}

bool OAIOrder_PreestimateShipping::is_custom_fields_Set() const{
    return m_custom_fields_isSet;
}

bool OAIOrder_PreestimateShipping::is_custom_fields_Valid() const{
    return m_custom_fields_isValid;
}

QString OAIOrder_PreestimateShipping::getDeliveryTime() const {
    return m_delivery_time;
}
void OAIOrder_PreestimateShipping::setDeliveryTime(const QString &delivery_time) {
    m_delivery_time = delivery_time;
    m_delivery_time_isSet = true;
}

bool OAIOrder_PreestimateShipping::is_delivery_time_Set() const{
    return m_delivery_time_isSet;
}

bool OAIOrder_PreestimateShipping::is_delivery_time_Valid() const{
    return m_delivery_time_isValid;
}

QString OAIOrder_PreestimateShipping::getDescription() const {
    return m_description;
}
void OAIOrder_PreestimateShipping::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIOrder_PreestimateShipping::is_description_Set() const{
    return m_description_isSet;
}

bool OAIOrder_PreestimateShipping::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIOrder_PreestimateShipping::getMethodCode() const {
    return m_method_code;
}
void OAIOrder_PreestimateShipping::setMethodCode(const QString &method_code) {
    m_method_code = method_code;
    m_method_code_isSet = true;
}

bool OAIOrder_PreestimateShipping::is_method_code_Set() const{
    return m_method_code_isSet;
}

bool OAIOrder_PreestimateShipping::is_method_code_Valid() const{
    return m_method_code_isValid;
}

QString OAIOrder_PreestimateShipping::getMethodName() const {
    return m_method_name;
}
void OAIOrder_PreestimateShipping::setMethodName(const QString &method_name) {
    m_method_name = method_name;
    m_method_name_isSet = true;
}

bool OAIOrder_PreestimateShipping::is_method_name_Set() const{
    return m_method_name_isSet;
}

bool OAIOrder_PreestimateShipping::is_method_name_Valid() const{
    return m_method_name_isValid;
}

double OAIOrder_PreestimateShipping::getPrice() const {
    return m_price;
}
void OAIOrder_PreestimateShipping::setPrice(const double &price) {
    m_price = price;
    m_price_isSet = true;
}

bool OAIOrder_PreestimateShipping::is_price_Set() const{
    return m_price_isSet;
}

bool OAIOrder_PreestimateShipping::is_price_Valid() const{
    return m_price_isValid;
}

double OAIOrder_PreestimateShipping::getPriceIncTax() const {
    return m_price_inc_tax;
}
void OAIOrder_PreestimateShipping::setPriceIncTax(const double &price_inc_tax) {
    m_price_inc_tax = price_inc_tax;
    m_price_inc_tax_isSet = true;
}

bool OAIOrder_PreestimateShipping::is_price_inc_tax_Set() const{
    return m_price_inc_tax_isSet;
}

bool OAIOrder_PreestimateShipping::is_price_inc_tax_Valid() const{
    return m_price_inc_tax_isValid;
}

bool OAIOrder_PreestimateShipping::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_additional_fields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_carrier_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_carrier_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_fields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_delivery_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_method_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_method_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_inc_tax_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrder_PreestimateShipping::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
