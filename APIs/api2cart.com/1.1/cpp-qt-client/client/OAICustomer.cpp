/**
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustomer.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustomer::OAICustomer(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustomer::OAICustomer() {
    this->initializeModel();
}

OAICustomer::~OAICustomer() {}

void OAICustomer::initializeModel() {

    m_additional_fields_isSet = false;
    m_additional_fields_isValid = false;

    m_address_book_isSet = false;
    m_address_book_isValid = false;

    m_birth_day_isSet = false;
    m_birth_day_isValid = false;

    m_company_isSet = false;
    m_company_isValid = false;

    m_created_time_isSet = false;
    m_created_time_isValid = false;

    m_custom_fields_isSet = false;
    m_custom_fields_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_fax_isSet = false;
    m_fax_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_gender_isSet = false;
    m_gender_isValid = false;

    m_group_isSet = false;
    m_group_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_ip_address_isSet = false;
    m_ip_address_isValid = false;

    m_lang_id_isSet = false;
    m_lang_id_isValid = false;

    m_last_login_isSet = false;
    m_last_login_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_last_order_id_isSet = false;
    m_last_order_id_isValid = false;

    m_login_isSet = false;
    m_login_isValid = false;

    m_modified_time_isSet = false;
    m_modified_time_isValid = false;

    m_news_letter_subscription_isSet = false;
    m_news_letter_subscription_isValid = false;

    m_orders_count_isSet = false;
    m_orders_count_isValid = false;

    m_phone_isSet = false;
    m_phone_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_stores_ids_isSet = false;
    m_stores_ids_isValid = false;

    m_website_isSet = false;
    m_website_isValid = false;
}

void OAICustomer::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustomer::fromJsonObject(QJsonObject json) {

    m_additional_fields_isValid = ::OpenAPI::fromJsonValue(m_additional_fields, json[QString("additional_fields")]);
    m_additional_fields_isSet = !json[QString("additional_fields")].isNull() && m_additional_fields_isValid;

    m_address_book_isValid = ::OpenAPI::fromJsonValue(m_address_book, json[QString("address_book")]);
    m_address_book_isSet = !json[QString("address_book")].isNull() && m_address_book_isValid;

    m_birth_day_isValid = ::OpenAPI::fromJsonValue(m_birth_day, json[QString("birth_day")]);
    m_birth_day_isSet = !json[QString("birth_day")].isNull() && m_birth_day_isValid;

    m_company_isValid = ::OpenAPI::fromJsonValue(m_company, json[QString("company")]);
    m_company_isSet = !json[QString("company")].isNull() && m_company_isValid;

    m_created_time_isValid = ::OpenAPI::fromJsonValue(m_created_time, json[QString("created_time")]);
    m_created_time_isSet = !json[QString("created_time")].isNull() && m_created_time_isValid;

    m_custom_fields_isValid = ::OpenAPI::fromJsonValue(m_custom_fields, json[QString("custom_fields")]);
    m_custom_fields_isSet = !json[QString("custom_fields")].isNull() && m_custom_fields_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_fax_isValid = ::OpenAPI::fromJsonValue(m_fax, json[QString("fax")]);
    m_fax_isSet = !json[QString("fax")].isNull() && m_fax_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("first_name")]);
    m_first_name_isSet = !json[QString("first_name")].isNull() && m_first_name_isValid;

    m_gender_isValid = ::OpenAPI::fromJsonValue(m_gender, json[QString("gender")]);
    m_gender_isSet = !json[QString("gender")].isNull() && m_gender_isValid;

    m_group_isValid = ::OpenAPI::fromJsonValue(m_group, json[QString("group")]);
    m_group_isSet = !json[QString("group")].isNull() && m_group_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_ip_address_isValid = ::OpenAPI::fromJsonValue(m_ip_address, json[QString("ip_address")]);
    m_ip_address_isSet = !json[QString("ip_address")].isNull() && m_ip_address_isValid;

    m_lang_id_isValid = ::OpenAPI::fromJsonValue(m_lang_id, json[QString("lang_id")]);
    m_lang_id_isSet = !json[QString("lang_id")].isNull() && m_lang_id_isValid;

    m_last_login_isValid = ::OpenAPI::fromJsonValue(m_last_login, json[QString("last_login")]);
    m_last_login_isSet = !json[QString("last_login")].isNull() && m_last_login_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("last_name")]);
    m_last_name_isSet = !json[QString("last_name")].isNull() && m_last_name_isValid;

    m_last_order_id_isValid = ::OpenAPI::fromJsonValue(m_last_order_id, json[QString("last_order_id")]);
    m_last_order_id_isSet = !json[QString("last_order_id")].isNull() && m_last_order_id_isValid;

    m_login_isValid = ::OpenAPI::fromJsonValue(m_login, json[QString("login")]);
    m_login_isSet = !json[QString("login")].isNull() && m_login_isValid;

    m_modified_time_isValid = ::OpenAPI::fromJsonValue(m_modified_time, json[QString("modified_time")]);
    m_modified_time_isSet = !json[QString("modified_time")].isNull() && m_modified_time_isValid;

    m_news_letter_subscription_isValid = ::OpenAPI::fromJsonValue(m_news_letter_subscription, json[QString("news_letter_subscription")]);
    m_news_letter_subscription_isSet = !json[QString("news_letter_subscription")].isNull() && m_news_letter_subscription_isValid;

    m_orders_count_isValid = ::OpenAPI::fromJsonValue(m_orders_count, json[QString("orders_count")]);
    m_orders_count_isSet = !json[QString("orders_count")].isNull() && m_orders_count_isValid;

    m_phone_isValid = ::OpenAPI::fromJsonValue(m_phone, json[QString("phone")]);
    m_phone_isSet = !json[QString("phone")].isNull() && m_phone_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_stores_ids_isValid = ::OpenAPI::fromJsonValue(m_stores_ids, json[QString("stores_ids")]);
    m_stores_ids_isSet = !json[QString("stores_ids")].isNull() && m_stores_ids_isValid;

    m_website_isValid = ::OpenAPI::fromJsonValue(m_website, json[QString("website")]);
    m_website_isSet = !json[QString("website")].isNull() && m_website_isValid;
}

QString OAICustomer::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustomer::asJsonObject() const {
    QJsonObject obj;
    if (m_additional_fields_isSet) {
        obj.insert(QString("additional_fields"), ::OpenAPI::toJsonValue(m_additional_fields));
    }
    if (m_address_book.size() > 0) {
        obj.insert(QString("address_book"), ::OpenAPI::toJsonValue(m_address_book));
    }
    if (m_birth_day.isSet()) {
        obj.insert(QString("birth_day"), ::OpenAPI::toJsonValue(m_birth_day));
    }
    if (m_company_isSet) {
        obj.insert(QString("company"), ::OpenAPI::toJsonValue(m_company));
    }
    if (m_created_time.isSet()) {
        obj.insert(QString("created_time"), ::OpenAPI::toJsonValue(m_created_time));
    }
    if (m_custom_fields_isSet) {
        obj.insert(QString("custom_fields"), ::OpenAPI::toJsonValue(m_custom_fields));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_fax_isSet) {
        obj.insert(QString("fax"), ::OpenAPI::toJsonValue(m_fax));
    }
    if (m_first_name_isSet) {
        obj.insert(QString("first_name"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_gender_isSet) {
        obj.insert(QString("gender"), ::OpenAPI::toJsonValue(m_gender));
    }
    if (m_group.size() > 0) {
        obj.insert(QString("group"), ::OpenAPI::toJsonValue(m_group));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_ip_address_isSet) {
        obj.insert(QString("ip_address"), ::OpenAPI::toJsonValue(m_ip_address));
    }
    if (m_lang_id_isSet) {
        obj.insert(QString("lang_id"), ::OpenAPI::toJsonValue(m_lang_id));
    }
    if (m_last_login.isSet()) {
        obj.insert(QString("last_login"), ::OpenAPI::toJsonValue(m_last_login));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("last_name"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_last_order_id_isSet) {
        obj.insert(QString("last_order_id"), ::OpenAPI::toJsonValue(m_last_order_id));
    }
    if (m_login_isSet) {
        obj.insert(QString("login"), ::OpenAPI::toJsonValue(m_login));
    }
    if (m_modified_time.isSet()) {
        obj.insert(QString("modified_time"), ::OpenAPI::toJsonValue(m_modified_time));
    }
    if (m_news_letter_subscription_isSet) {
        obj.insert(QString("news_letter_subscription"), ::OpenAPI::toJsonValue(m_news_letter_subscription));
    }
    if (m_orders_count_isSet) {
        obj.insert(QString("orders_count"), ::OpenAPI::toJsonValue(m_orders_count));
    }
    if (m_phone_isSet) {
        obj.insert(QString("phone"), ::OpenAPI::toJsonValue(m_phone));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_stores_ids.size() > 0) {
        obj.insert(QString("stores_ids"), ::OpenAPI::toJsonValue(m_stores_ids));
    }
    if (m_website_isSet) {
        obj.insert(QString("website"), ::OpenAPI::toJsonValue(m_website));
    }
    return obj;
}

OAIObject OAICustomer::getAdditionalFields() const {
    return m_additional_fields;
}
void OAICustomer::setAdditionalFields(const OAIObject &additional_fields) {
    m_additional_fields = additional_fields;
    m_additional_fields_isSet = true;
}

bool OAICustomer::is_additional_fields_Set() const{
    return m_additional_fields_isSet;
}

bool OAICustomer::is_additional_fields_Valid() const{
    return m_additional_fields_isValid;
}

QList<OAICustomer_Address> OAICustomer::getAddressBook() const {
    return m_address_book;
}
void OAICustomer::setAddressBook(const QList<OAICustomer_Address> &address_book) {
    m_address_book = address_book;
    m_address_book_isSet = true;
}

bool OAICustomer::is_address_book_Set() const{
    return m_address_book_isSet;
}

bool OAICustomer::is_address_book_Valid() const{
    return m_address_book_isValid;
}

OAIA2CDateTime OAICustomer::getBirthDay() const {
    return m_birth_day;
}
void OAICustomer::setBirthDay(const OAIA2CDateTime &birth_day) {
    m_birth_day = birth_day;
    m_birth_day_isSet = true;
}

bool OAICustomer::is_birth_day_Set() const{
    return m_birth_day_isSet;
}

bool OAICustomer::is_birth_day_Valid() const{
    return m_birth_day_isValid;
}

QString OAICustomer::getCompany() const {
    return m_company;
}
void OAICustomer::setCompany(const QString &company) {
    m_company = company;
    m_company_isSet = true;
}

bool OAICustomer::is_company_Set() const{
    return m_company_isSet;
}

bool OAICustomer::is_company_Valid() const{
    return m_company_isValid;
}

OAIA2CDateTime OAICustomer::getCreatedTime() const {
    return m_created_time;
}
void OAICustomer::setCreatedTime(const OAIA2CDateTime &created_time) {
    m_created_time = created_time;
    m_created_time_isSet = true;
}

bool OAICustomer::is_created_time_Set() const{
    return m_created_time_isSet;
}

bool OAICustomer::is_created_time_Valid() const{
    return m_created_time_isValid;
}

OAIObject OAICustomer::getCustomFields() const {
    return m_custom_fields;
}
void OAICustomer::setCustomFields(const OAIObject &custom_fields) {
    m_custom_fields = custom_fields;
    m_custom_fields_isSet = true;
}

bool OAICustomer::is_custom_fields_Set() const{
    return m_custom_fields_isSet;
}

bool OAICustomer::is_custom_fields_Valid() const{
    return m_custom_fields_isValid;
}

QString OAICustomer::getEmail() const {
    return m_email;
}
void OAICustomer::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAICustomer::is_email_Set() const{
    return m_email_isSet;
}

bool OAICustomer::is_email_Valid() const{
    return m_email_isValid;
}

QString OAICustomer::getFax() const {
    return m_fax;
}
void OAICustomer::setFax(const QString &fax) {
    m_fax = fax;
    m_fax_isSet = true;
}

bool OAICustomer::is_fax_Set() const{
    return m_fax_isSet;
}

bool OAICustomer::is_fax_Valid() const{
    return m_fax_isValid;
}

QString OAICustomer::getFirstName() const {
    return m_first_name;
}
void OAICustomer::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAICustomer::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAICustomer::is_first_name_Valid() const{
    return m_first_name_isValid;
}

QString OAICustomer::getGender() const {
    return m_gender;
}
void OAICustomer::setGender(const QString &gender) {
    m_gender = gender;
    m_gender_isSet = true;
}

bool OAICustomer::is_gender_Set() const{
    return m_gender_isSet;
}

bool OAICustomer::is_gender_Valid() const{
    return m_gender_isValid;
}

QList<OAICustomer_Group> OAICustomer::getGroup() const {
    return m_group;
}
void OAICustomer::setGroup(const QList<OAICustomer_Group> &group) {
    m_group = group;
    m_group_isSet = true;
}

bool OAICustomer::is_group_Set() const{
    return m_group_isSet;
}

bool OAICustomer::is_group_Valid() const{
    return m_group_isValid;
}

QString OAICustomer::getId() const {
    return m_id;
}
void OAICustomer::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICustomer::is_id_Set() const{
    return m_id_isSet;
}

bool OAICustomer::is_id_Valid() const{
    return m_id_isValid;
}

QString OAICustomer::getIpAddress() const {
    return m_ip_address;
}
void OAICustomer::setIpAddress(const QString &ip_address) {
    m_ip_address = ip_address;
    m_ip_address_isSet = true;
}

bool OAICustomer::is_ip_address_Set() const{
    return m_ip_address_isSet;
}

bool OAICustomer::is_ip_address_Valid() const{
    return m_ip_address_isValid;
}

QString OAICustomer::getLangId() const {
    return m_lang_id;
}
void OAICustomer::setLangId(const QString &lang_id) {
    m_lang_id = lang_id;
    m_lang_id_isSet = true;
}

bool OAICustomer::is_lang_id_Set() const{
    return m_lang_id_isSet;
}

bool OAICustomer::is_lang_id_Valid() const{
    return m_lang_id_isValid;
}

OAIA2CDateTime OAICustomer::getLastLogin() const {
    return m_last_login;
}
void OAICustomer::setLastLogin(const OAIA2CDateTime &last_login) {
    m_last_login = last_login;
    m_last_login_isSet = true;
}

bool OAICustomer::is_last_login_Set() const{
    return m_last_login_isSet;
}

bool OAICustomer::is_last_login_Valid() const{
    return m_last_login_isValid;
}

QString OAICustomer::getLastName() const {
    return m_last_name;
}
void OAICustomer::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAICustomer::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAICustomer::is_last_name_Valid() const{
    return m_last_name_isValid;
}

QString OAICustomer::getLastOrderId() const {
    return m_last_order_id;
}
void OAICustomer::setLastOrderId(const QString &last_order_id) {
    m_last_order_id = last_order_id;
    m_last_order_id_isSet = true;
}

bool OAICustomer::is_last_order_id_Set() const{
    return m_last_order_id_isSet;
}

bool OAICustomer::is_last_order_id_Valid() const{
    return m_last_order_id_isValid;
}

QString OAICustomer::getLogin() const {
    return m_login;
}
void OAICustomer::setLogin(const QString &login) {
    m_login = login;
    m_login_isSet = true;
}

bool OAICustomer::is_login_Set() const{
    return m_login_isSet;
}

bool OAICustomer::is_login_Valid() const{
    return m_login_isValid;
}

OAIA2CDateTime OAICustomer::getModifiedTime() const {
    return m_modified_time;
}
void OAICustomer::setModifiedTime(const OAIA2CDateTime &modified_time) {
    m_modified_time = modified_time;
    m_modified_time_isSet = true;
}

bool OAICustomer::is_modified_time_Set() const{
    return m_modified_time_isSet;
}

bool OAICustomer::is_modified_time_Valid() const{
    return m_modified_time_isValid;
}

bool OAICustomer::isNewsLetterSubscription() const {
    return m_news_letter_subscription;
}
void OAICustomer::setNewsLetterSubscription(const bool &news_letter_subscription) {
    m_news_letter_subscription = news_letter_subscription;
    m_news_letter_subscription_isSet = true;
}

bool OAICustomer::is_news_letter_subscription_Set() const{
    return m_news_letter_subscription_isSet;
}

bool OAICustomer::is_news_letter_subscription_Valid() const{
    return m_news_letter_subscription_isValid;
}

qint32 OAICustomer::getOrdersCount() const {
    return m_orders_count;
}
void OAICustomer::setOrdersCount(const qint32 &orders_count) {
    m_orders_count = orders_count;
    m_orders_count_isSet = true;
}

bool OAICustomer::is_orders_count_Set() const{
    return m_orders_count_isSet;
}

bool OAICustomer::is_orders_count_Valid() const{
    return m_orders_count_isValid;
}

QString OAICustomer::getPhone() const {
    return m_phone;
}
void OAICustomer::setPhone(const QString &phone) {
    m_phone = phone;
    m_phone_isSet = true;
}

bool OAICustomer::is_phone_Set() const{
    return m_phone_isSet;
}

bool OAICustomer::is_phone_Valid() const{
    return m_phone_isValid;
}

QString OAICustomer::getStatus() const {
    return m_status;
}
void OAICustomer::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAICustomer::is_status_Set() const{
    return m_status_isSet;
}

bool OAICustomer::is_status_Valid() const{
    return m_status_isValid;
}

QList<QString> OAICustomer::getStoresIds() const {
    return m_stores_ids;
}
void OAICustomer::setStoresIds(const QList<QString> &stores_ids) {
    m_stores_ids = stores_ids;
    m_stores_ids_isSet = true;
}

bool OAICustomer::is_stores_ids_Set() const{
    return m_stores_ids_isSet;
}

bool OAICustomer::is_stores_ids_Valid() const{
    return m_stores_ids_isValid;
}

QString OAICustomer::getWebsite() const {
    return m_website;
}
void OAICustomer::setWebsite(const QString &website) {
    m_website = website;
    m_website_isSet = true;
}

bool OAICustomer::is_website_Set() const{
    return m_website_isSet;
}

bool OAICustomer::is_website_Valid() const{
    return m_website_isValid;
}

bool OAICustomer::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_additional_fields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_address_book.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_birth_day.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_time.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_fields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gender_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_group.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ip_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lang_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_login.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_order_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_login_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_modified_time.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_news_letter_subscription_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_orders_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stores_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_website_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustomer::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
