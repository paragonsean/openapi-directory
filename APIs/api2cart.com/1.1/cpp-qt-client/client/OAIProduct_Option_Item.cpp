/**
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProduct_Option_Item.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProduct_Option_Item::OAIProduct_Option_Item(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProduct_Option_Item::OAIProduct_Option_Item() {
    this->initializeModel();
}

OAIProduct_Option_Item::~OAIProduct_Option_Item() {}

void OAIProduct_Option_Item::initializeModel() {

    m_additional_fields_isSet = false;
    m_additional_fields_isValid = false;

    m_custom_fields_isSet = false;
    m_custom_fields_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_price_isSet = false;
    m_price_isValid = false;

    m_product_option_item_id_isSet = false;
    m_product_option_item_id_isValid = false;

    m_quantity_isSet = false;
    m_quantity_isValid = false;

    m_sku_isSet = false;
    m_sku_isValid = false;

    m_sort_order_isSet = false;
    m_sort_order_isValid = false;

    m_type_price_isSet = false;
    m_type_price_isValid = false;

    m_weight_isSet = false;
    m_weight_isValid = false;
}

void OAIProduct_Option_Item::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProduct_Option_Item::fromJsonObject(QJsonObject json) {

    m_additional_fields_isValid = ::OpenAPI::fromJsonValue(m_additional_fields, json[QString("additional_fields")]);
    m_additional_fields_isSet = !json[QString("additional_fields")].isNull() && m_additional_fields_isValid;

    m_custom_fields_isValid = ::OpenAPI::fromJsonValue(m_custom_fields, json[QString("custom_fields")]);
    m_custom_fields_isSet = !json[QString("custom_fields")].isNull() && m_custom_fields_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_price_isValid = ::OpenAPI::fromJsonValue(m_price, json[QString("price")]);
    m_price_isSet = !json[QString("price")].isNull() && m_price_isValid;

    m_product_option_item_id_isValid = ::OpenAPI::fromJsonValue(m_product_option_item_id, json[QString("product_option_item_id")]);
    m_product_option_item_id_isSet = !json[QString("product_option_item_id")].isNull() && m_product_option_item_id_isValid;

    m_quantity_isValid = ::OpenAPI::fromJsonValue(m_quantity, json[QString("quantity")]);
    m_quantity_isSet = !json[QString("quantity")].isNull() && m_quantity_isValid;

    m_sku_isValid = ::OpenAPI::fromJsonValue(m_sku, json[QString("sku")]);
    m_sku_isSet = !json[QString("sku")].isNull() && m_sku_isValid;

    m_sort_order_isValid = ::OpenAPI::fromJsonValue(m_sort_order, json[QString("sort_order")]);
    m_sort_order_isSet = !json[QString("sort_order")].isNull() && m_sort_order_isValid;

    m_type_price_isValid = ::OpenAPI::fromJsonValue(m_type_price, json[QString("type_price")]);
    m_type_price_isSet = !json[QString("type_price")].isNull() && m_type_price_isValid;

    m_weight_isValid = ::OpenAPI::fromJsonValue(m_weight, json[QString("weight")]);
    m_weight_isSet = !json[QString("weight")].isNull() && m_weight_isValid;
}

QString OAIProduct_Option_Item::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProduct_Option_Item::asJsonObject() const {
    QJsonObject obj;
    if (m_additional_fields_isSet) {
        obj.insert(QString("additional_fields"), ::OpenAPI::toJsonValue(m_additional_fields));
    }
    if (m_custom_fields_isSet) {
        obj.insert(QString("custom_fields"), ::OpenAPI::toJsonValue(m_custom_fields));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_price_isSet) {
        obj.insert(QString("price"), ::OpenAPI::toJsonValue(m_price));
    }
    if (m_product_option_item_id_isSet) {
        obj.insert(QString("product_option_item_id"), ::OpenAPI::toJsonValue(m_product_option_item_id));
    }
    if (m_quantity_isSet) {
        obj.insert(QString("quantity"), ::OpenAPI::toJsonValue(m_quantity));
    }
    if (m_sku_isSet) {
        obj.insert(QString("sku"), ::OpenAPI::toJsonValue(m_sku));
    }
    if (m_sort_order_isSet) {
        obj.insert(QString("sort_order"), ::OpenAPI::toJsonValue(m_sort_order));
    }
    if (m_type_price_isSet) {
        obj.insert(QString("type_price"), ::OpenAPI::toJsonValue(m_type_price));
    }
    if (m_weight_isSet) {
        obj.insert(QString("weight"), ::OpenAPI::toJsonValue(m_weight));
    }
    return obj;
}

OAIObject OAIProduct_Option_Item::getAdditionalFields() const {
    return m_additional_fields;
}
void OAIProduct_Option_Item::setAdditionalFields(const OAIObject &additional_fields) {
    m_additional_fields = additional_fields;
    m_additional_fields_isSet = true;
}

bool OAIProduct_Option_Item::is_additional_fields_Set() const{
    return m_additional_fields_isSet;
}

bool OAIProduct_Option_Item::is_additional_fields_Valid() const{
    return m_additional_fields_isValid;
}

OAIObject OAIProduct_Option_Item::getCustomFields() const {
    return m_custom_fields;
}
void OAIProduct_Option_Item::setCustomFields(const OAIObject &custom_fields) {
    m_custom_fields = custom_fields;
    m_custom_fields_isSet = true;
}

bool OAIProduct_Option_Item::is_custom_fields_Set() const{
    return m_custom_fields_isSet;
}

bool OAIProduct_Option_Item::is_custom_fields_Valid() const{
    return m_custom_fields_isValid;
}

QString OAIProduct_Option_Item::getId() const {
    return m_id;
}
void OAIProduct_Option_Item::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIProduct_Option_Item::is_id_Set() const{
    return m_id_isSet;
}

bool OAIProduct_Option_Item::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIProduct_Option_Item::getName() const {
    return m_name;
}
void OAIProduct_Option_Item::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIProduct_Option_Item::is_name_Set() const{
    return m_name_isSet;
}

bool OAIProduct_Option_Item::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIProduct_Option_Item::getPrice() const {
    return m_price;
}
void OAIProduct_Option_Item::setPrice(const QString &price) {
    m_price = price;
    m_price_isSet = true;
}

bool OAIProduct_Option_Item::is_price_Set() const{
    return m_price_isSet;
}

bool OAIProduct_Option_Item::is_price_Valid() const{
    return m_price_isValid;
}

QString OAIProduct_Option_Item::getProductOptionItemId() const {
    return m_product_option_item_id;
}
void OAIProduct_Option_Item::setProductOptionItemId(const QString &product_option_item_id) {
    m_product_option_item_id = product_option_item_id;
    m_product_option_item_id_isSet = true;
}

bool OAIProduct_Option_Item::is_product_option_item_id_Set() const{
    return m_product_option_item_id_isSet;
}

bool OAIProduct_Option_Item::is_product_option_item_id_Valid() const{
    return m_product_option_item_id_isValid;
}

qint32 OAIProduct_Option_Item::getQuantity() const {
    return m_quantity;
}
void OAIProduct_Option_Item::setQuantity(const qint32 &quantity) {
    m_quantity = quantity;
    m_quantity_isSet = true;
}

bool OAIProduct_Option_Item::is_quantity_Set() const{
    return m_quantity_isSet;
}

bool OAIProduct_Option_Item::is_quantity_Valid() const{
    return m_quantity_isValid;
}

QString OAIProduct_Option_Item::getSku() const {
    return m_sku;
}
void OAIProduct_Option_Item::setSku(const QString &sku) {
    m_sku = sku;
    m_sku_isSet = true;
}

bool OAIProduct_Option_Item::is_sku_Set() const{
    return m_sku_isSet;
}

bool OAIProduct_Option_Item::is_sku_Valid() const{
    return m_sku_isValid;
}

qint32 OAIProduct_Option_Item::getSortOrder() const {
    return m_sort_order;
}
void OAIProduct_Option_Item::setSortOrder(const qint32 &sort_order) {
    m_sort_order = sort_order;
    m_sort_order_isSet = true;
}

bool OAIProduct_Option_Item::is_sort_order_Set() const{
    return m_sort_order_isSet;
}

bool OAIProduct_Option_Item::is_sort_order_Valid() const{
    return m_sort_order_isValid;
}

QString OAIProduct_Option_Item::getTypePrice() const {
    return m_type_price;
}
void OAIProduct_Option_Item::setTypePrice(const QString &type_price) {
    m_type_price = type_price;
    m_type_price_isSet = true;
}

bool OAIProduct_Option_Item::is_type_price_Set() const{
    return m_type_price_isSet;
}

bool OAIProduct_Option_Item::is_type_price_Valid() const{
    return m_type_price_isValid;
}

QString OAIProduct_Option_Item::getWeight() const {
    return m_weight;
}
void OAIProduct_Option_Item::setWeight(const QString &weight) {
    m_weight = weight;
    m_weight_isSet = true;
}

bool OAIProduct_Option_Item::is_weight_Set() const{
    return m_weight_isSet;
}

bool OAIProduct_Option_Item::is_weight_Valid() const{
    return m_weight_isValid;
}

bool OAIProduct_Option_Item::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_additional_fields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_fields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_option_item_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sku_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sort_order_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_weight_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProduct_Option_Item::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
