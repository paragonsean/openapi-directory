/**
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGiftCard.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGiftCard::OAIGiftCard(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGiftCard::OAIGiftCard() {
    this->initializeModel();
}

OAIGiftCard::~OAIGiftCard() {}

void OAIGiftCard::initializeModel() {

    m_additional_fields_isSet = false;
    m_additional_fields_isValid = false;

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_avail_to_isSet = false;
    m_avail_to_isValid = false;

    m_code_isSet = false;
    m_code_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_currency_code_isSet = false;
    m_currency_code_isValid = false;

    m_custom_fields_isSet = false;
    m_custom_fields_isValid = false;

    m_free_product_ids_isSet = false;
    m_free_product_ids_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_initial_amount_isSet = false;
    m_initial_amount_isValid = false;

    m_issuer_email_isSet = false;
    m_issuer_email_isValid = false;

    m_issuer_name_isSet = false;
    m_issuer_name_isValid = false;

    m_message_isSet = false;
    m_message_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_recipient_email_isSet = false;
    m_recipient_email_isValid = false;

    m_recipient_name_isSet = false;
    m_recipient_name_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_usage_history_isSet = false;
    m_usage_history_isValid = false;
}

void OAIGiftCard::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGiftCard::fromJsonObject(QJsonObject json) {

    m_additional_fields_isValid = ::OpenAPI::fromJsonValue(m_additional_fields, json[QString("additional_fields")]);
    m_additional_fields_isSet = !json[QString("additional_fields")].isNull() && m_additional_fields_isValid;

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_avail_to_isValid = ::OpenAPI::fromJsonValue(m_avail_to, json[QString("avail_to")]);
    m_avail_to_isSet = !json[QString("avail_to")].isNull() && m_avail_to_isValid;

    m_code_isValid = ::OpenAPI::fromJsonValue(m_code, json[QString("code")]);
    m_code_isSet = !json[QString("code")].isNull() && m_code_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_currency_code_isValid = ::OpenAPI::fromJsonValue(m_currency_code, json[QString("currency_code")]);
    m_currency_code_isSet = !json[QString("currency_code")].isNull() && m_currency_code_isValid;

    m_custom_fields_isValid = ::OpenAPI::fromJsonValue(m_custom_fields, json[QString("custom_fields")]);
    m_custom_fields_isSet = !json[QString("custom_fields")].isNull() && m_custom_fields_isValid;

    m_free_product_ids_isValid = ::OpenAPI::fromJsonValue(m_free_product_ids, json[QString("free_product_ids")]);
    m_free_product_ids_isSet = !json[QString("free_product_ids")].isNull() && m_free_product_ids_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_initial_amount_isValid = ::OpenAPI::fromJsonValue(m_initial_amount, json[QString("initial_amount")]);
    m_initial_amount_isSet = !json[QString("initial_amount")].isNull() && m_initial_amount_isValid;

    m_issuer_email_isValid = ::OpenAPI::fromJsonValue(m_issuer_email, json[QString("issuer_email")]);
    m_issuer_email_isSet = !json[QString("issuer_email")].isNull() && m_issuer_email_isValid;

    m_issuer_name_isValid = ::OpenAPI::fromJsonValue(m_issuer_name, json[QString("issuer_name")]);
    m_issuer_name_isSet = !json[QString("issuer_name")].isNull() && m_issuer_name_isValid;

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_recipient_email_isValid = ::OpenAPI::fromJsonValue(m_recipient_email, json[QString("recipient_email")]);
    m_recipient_email_isSet = !json[QString("recipient_email")].isNull() && m_recipient_email_isValid;

    m_recipient_name_isValid = ::OpenAPI::fromJsonValue(m_recipient_name, json[QString("recipient_name")]);
    m_recipient_name_isSet = !json[QString("recipient_name")].isNull() && m_recipient_name_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_usage_history_isValid = ::OpenAPI::fromJsonValue(m_usage_history, json[QString("usage_history")]);
    m_usage_history_isSet = !json[QString("usage_history")].isNull() && m_usage_history_isValid;
}

QString OAIGiftCard::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGiftCard::asJsonObject() const {
    QJsonObject obj;
    if (m_additional_fields_isSet) {
        obj.insert(QString("additional_fields"), ::OpenAPI::toJsonValue(m_additional_fields));
    }
    if (m_amount_isSet) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_avail_to_isSet) {
        obj.insert(QString("avail_to"), ::OpenAPI::toJsonValue(m_avail_to));
    }
    if (m_code_isSet) {
        obj.insert(QString("code"), ::OpenAPI::toJsonValue(m_code));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_currency_code_isSet) {
        obj.insert(QString("currency_code"), ::OpenAPI::toJsonValue(m_currency_code));
    }
    if (m_custom_fields_isSet) {
        obj.insert(QString("custom_fields"), ::OpenAPI::toJsonValue(m_custom_fields));
    }
    if (m_free_product_ids_isSet) {
        obj.insert(QString("free_product_ids"), ::OpenAPI::toJsonValue(m_free_product_ids));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_initial_amount_isSet) {
        obj.insert(QString("initial_amount"), ::OpenAPI::toJsonValue(m_initial_amount));
    }
    if (m_issuer_email_isSet) {
        obj.insert(QString("issuer_email"), ::OpenAPI::toJsonValue(m_issuer_email));
    }
    if (m_issuer_name_isSet) {
        obj.insert(QString("issuer_name"), ::OpenAPI::toJsonValue(m_issuer_name));
    }
    if (m_message_isSet) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_recipient_email_isSet) {
        obj.insert(QString("recipient_email"), ::OpenAPI::toJsonValue(m_recipient_email));
    }
    if (m_recipient_name_isSet) {
        obj.insert(QString("recipient_name"), ::OpenAPI::toJsonValue(m_recipient_name));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_usage_history.size() > 0) {
        obj.insert(QString("usage_history"), ::OpenAPI::toJsonValue(m_usage_history));
    }
    return obj;
}

OAIObject OAIGiftCard::getAdditionalFields() const {
    return m_additional_fields;
}
void OAIGiftCard::setAdditionalFields(const OAIObject &additional_fields) {
    m_additional_fields = additional_fields;
    m_additional_fields_isSet = true;
}

bool OAIGiftCard::is_additional_fields_Set() const{
    return m_additional_fields_isSet;
}

bool OAIGiftCard::is_additional_fields_Valid() const{
    return m_additional_fields_isValid;
}

double OAIGiftCard::getAmount() const {
    return m_amount;
}
void OAIGiftCard::setAmount(const double &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAIGiftCard::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAIGiftCard::is_amount_Valid() const{
    return m_amount_isValid;
}

QString OAIGiftCard::getAvailTo() const {
    return m_avail_to;
}
void OAIGiftCard::setAvailTo(const QString &avail_to) {
    m_avail_to = avail_to;
    m_avail_to_isSet = true;
}

bool OAIGiftCard::is_avail_to_Set() const{
    return m_avail_to_isSet;
}

bool OAIGiftCard::is_avail_to_Valid() const{
    return m_avail_to_isValid;
}

QString OAIGiftCard::getCode() const {
    return m_code;
}
void OAIGiftCard::setCode(const QString &code) {
    m_code = code;
    m_code_isSet = true;
}

bool OAIGiftCard::is_code_Set() const{
    return m_code_isSet;
}

bool OAIGiftCard::is_code_Valid() const{
    return m_code_isValid;
}

QString OAIGiftCard::getCreatedAt() const {
    return m_created_at;
}
void OAIGiftCard::setCreatedAt(const QString &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIGiftCard::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIGiftCard::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAIGiftCard::getCurrencyCode() const {
    return m_currency_code;
}
void OAIGiftCard::setCurrencyCode(const QString &currency_code) {
    m_currency_code = currency_code;
    m_currency_code_isSet = true;
}

bool OAIGiftCard::is_currency_code_Set() const{
    return m_currency_code_isSet;
}

bool OAIGiftCard::is_currency_code_Valid() const{
    return m_currency_code_isValid;
}

OAIObject OAIGiftCard::getCustomFields() const {
    return m_custom_fields;
}
void OAIGiftCard::setCustomFields(const OAIObject &custom_fields) {
    m_custom_fields = custom_fields;
    m_custom_fields_isSet = true;
}

bool OAIGiftCard::is_custom_fields_Set() const{
    return m_custom_fields_isSet;
}

bool OAIGiftCard::is_custom_fields_Valid() const{
    return m_custom_fields_isValid;
}

QString OAIGiftCard::getFreeProductIds() const {
    return m_free_product_ids;
}
void OAIGiftCard::setFreeProductIds(const QString &free_product_ids) {
    m_free_product_ids = free_product_ids;
    m_free_product_ids_isSet = true;
}

bool OAIGiftCard::is_free_product_ids_Set() const{
    return m_free_product_ids_isSet;
}

bool OAIGiftCard::is_free_product_ids_Valid() const{
    return m_free_product_ids_isValid;
}

QString OAIGiftCard::getId() const {
    return m_id;
}
void OAIGiftCard::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIGiftCard::is_id_Set() const{
    return m_id_isSet;
}

bool OAIGiftCard::is_id_Valid() const{
    return m_id_isValid;
}

double OAIGiftCard::getInitialAmount() const {
    return m_initial_amount;
}
void OAIGiftCard::setInitialAmount(const double &initial_amount) {
    m_initial_amount = initial_amount;
    m_initial_amount_isSet = true;
}

bool OAIGiftCard::is_initial_amount_Set() const{
    return m_initial_amount_isSet;
}

bool OAIGiftCard::is_initial_amount_Valid() const{
    return m_initial_amount_isValid;
}

QString OAIGiftCard::getIssuerEmail() const {
    return m_issuer_email;
}
void OAIGiftCard::setIssuerEmail(const QString &issuer_email) {
    m_issuer_email = issuer_email;
    m_issuer_email_isSet = true;
}

bool OAIGiftCard::is_issuer_email_Set() const{
    return m_issuer_email_isSet;
}

bool OAIGiftCard::is_issuer_email_Valid() const{
    return m_issuer_email_isValid;
}

QString OAIGiftCard::getIssuerName() const {
    return m_issuer_name;
}
void OAIGiftCard::setIssuerName(const QString &issuer_name) {
    m_issuer_name = issuer_name;
    m_issuer_name_isSet = true;
}

bool OAIGiftCard::is_issuer_name_Set() const{
    return m_issuer_name_isSet;
}

bool OAIGiftCard::is_issuer_name_Valid() const{
    return m_issuer_name_isValid;
}

QString OAIGiftCard::getMessage() const {
    return m_message;
}
void OAIGiftCard::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAIGiftCard::is_message_Set() const{
    return m_message_isSet;
}

bool OAIGiftCard::is_message_Valid() const{
    return m_message_isValid;
}

QString OAIGiftCard::getName() const {
    return m_name;
}
void OAIGiftCard::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGiftCard::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGiftCard::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGiftCard::getRecipientEmail() const {
    return m_recipient_email;
}
void OAIGiftCard::setRecipientEmail(const QString &recipient_email) {
    m_recipient_email = recipient_email;
    m_recipient_email_isSet = true;
}

bool OAIGiftCard::is_recipient_email_Set() const{
    return m_recipient_email_isSet;
}

bool OAIGiftCard::is_recipient_email_Valid() const{
    return m_recipient_email_isValid;
}

QString OAIGiftCard::getRecipientName() const {
    return m_recipient_name;
}
void OAIGiftCard::setRecipientName(const QString &recipient_name) {
    m_recipient_name = recipient_name;
    m_recipient_name_isSet = true;
}

bool OAIGiftCard::is_recipient_name_Set() const{
    return m_recipient_name_isSet;
}

bool OAIGiftCard::is_recipient_name_Valid() const{
    return m_recipient_name_isValid;
}

QString OAIGiftCard::getStatus() const {
    return m_status;
}
void OAIGiftCard::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIGiftCard::is_status_Set() const{
    return m_status_isSet;
}

bool OAIGiftCard::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIGiftCard::getType() const {
    return m_type;
}
void OAIGiftCard::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIGiftCard::is_type_Set() const{
    return m_type_isSet;
}

bool OAIGiftCard::is_type_Valid() const{
    return m_type_isValid;
}

QList<OAICoupon_History> OAIGiftCard::getUsageHistory() const {
    return m_usage_history;
}
void OAIGiftCard::setUsageHistory(const QList<OAICoupon_History> &usage_history) {
    m_usage_history = usage_history;
    m_usage_history_isSet = true;
}

bool OAIGiftCard::is_usage_history_Set() const{
    return m_usage_history_isSet;
}

bool OAIGiftCard::is_usage_history_Valid() const{
    return m_usage_history_isValid;
}

bool OAIGiftCard::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_additional_fields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_avail_to_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_fields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_free_product_ids_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_initial_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_issuer_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_issuer_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recipient_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recipient_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_usage_history.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGiftCard::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
