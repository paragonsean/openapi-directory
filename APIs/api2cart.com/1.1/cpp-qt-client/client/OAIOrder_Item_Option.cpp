/**
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrder_Item_Option.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrder_Item_Option::OAIOrder_Item_Option(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrder_Item_Option::OAIOrder_Item_Option() {
    this->initializeModel();
}

OAIOrder_Item_Option::~OAIOrder_Item_Option() {}

void OAIOrder_Item_Option::initializeModel() {

    m_additional_fields_isSet = false;
    m_additional_fields_isValid = false;

    m_custom_fields_isSet = false;
    m_custom_fields_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_option_id_isSet = false;
    m_option_id_isValid = false;

    m_price_isSet = false;
    m_price_isValid = false;

    m_product_option_value_id_isSet = false;
    m_product_option_value_id_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;

    m_weight_isSet = false;
    m_weight_isValid = false;
}

void OAIOrder_Item_Option::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrder_Item_Option::fromJsonObject(QJsonObject json) {

    m_additional_fields_isValid = ::OpenAPI::fromJsonValue(m_additional_fields, json[QString("additional_fields")]);
    m_additional_fields_isSet = !json[QString("additional_fields")].isNull() && m_additional_fields_isValid;

    m_custom_fields_isValid = ::OpenAPI::fromJsonValue(m_custom_fields, json[QString("custom_fields")]);
    m_custom_fields_isSet = !json[QString("custom_fields")].isNull() && m_custom_fields_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_option_id_isValid = ::OpenAPI::fromJsonValue(m_option_id, json[QString("option_id")]);
    m_option_id_isSet = !json[QString("option_id")].isNull() && m_option_id_isValid;

    m_price_isValid = ::OpenAPI::fromJsonValue(m_price, json[QString("price")]);
    m_price_isSet = !json[QString("price")].isNull() && m_price_isValid;

    m_product_option_value_id_isValid = ::OpenAPI::fromJsonValue(m_product_option_value_id, json[QString("product_option_value_id")]);
    m_product_option_value_id_isSet = !json[QString("product_option_value_id")].isNull() && m_product_option_value_id_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;

    m_weight_isValid = ::OpenAPI::fromJsonValue(m_weight, json[QString("weight")]);
    m_weight_isSet = !json[QString("weight")].isNull() && m_weight_isValid;
}

QString OAIOrder_Item_Option::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrder_Item_Option::asJsonObject() const {
    QJsonObject obj;
    if (m_additional_fields_isSet) {
        obj.insert(QString("additional_fields"), ::OpenAPI::toJsonValue(m_additional_fields));
    }
    if (m_custom_fields_isSet) {
        obj.insert(QString("custom_fields"), ::OpenAPI::toJsonValue(m_custom_fields));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_option_id_isSet) {
        obj.insert(QString("option_id"), ::OpenAPI::toJsonValue(m_option_id));
    }
    if (m_price_isSet) {
        obj.insert(QString("price"), ::OpenAPI::toJsonValue(m_price));
    }
    if (m_product_option_value_id_isSet) {
        obj.insert(QString("product_option_value_id"), ::OpenAPI::toJsonValue(m_product_option_value_id));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_value_isSet) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    if (m_weight_isSet) {
        obj.insert(QString("weight"), ::OpenAPI::toJsonValue(m_weight));
    }
    return obj;
}

OAIObject OAIOrder_Item_Option::getAdditionalFields() const {
    return m_additional_fields;
}
void OAIOrder_Item_Option::setAdditionalFields(const OAIObject &additional_fields) {
    m_additional_fields = additional_fields;
    m_additional_fields_isSet = true;
}

bool OAIOrder_Item_Option::is_additional_fields_Set() const{
    return m_additional_fields_isSet;
}

bool OAIOrder_Item_Option::is_additional_fields_Valid() const{
    return m_additional_fields_isValid;
}

OAIObject OAIOrder_Item_Option::getCustomFields() const {
    return m_custom_fields;
}
void OAIOrder_Item_Option::setCustomFields(const OAIObject &custom_fields) {
    m_custom_fields = custom_fields;
    m_custom_fields_isSet = true;
}

bool OAIOrder_Item_Option::is_custom_fields_Set() const{
    return m_custom_fields_isSet;
}

bool OAIOrder_Item_Option::is_custom_fields_Valid() const{
    return m_custom_fields_isValid;
}

QString OAIOrder_Item_Option::getName() const {
    return m_name;
}
void OAIOrder_Item_Option::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIOrder_Item_Option::is_name_Set() const{
    return m_name_isSet;
}

bool OAIOrder_Item_Option::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIOrder_Item_Option::getOptionId() const {
    return m_option_id;
}
void OAIOrder_Item_Option::setOptionId(const QString &option_id) {
    m_option_id = option_id;
    m_option_id_isSet = true;
}

bool OAIOrder_Item_Option::is_option_id_Set() const{
    return m_option_id_isSet;
}

bool OAIOrder_Item_Option::is_option_id_Valid() const{
    return m_option_id_isValid;
}

double OAIOrder_Item_Option::getPrice() const {
    return m_price;
}
void OAIOrder_Item_Option::setPrice(const double &price) {
    m_price = price;
    m_price_isSet = true;
}

bool OAIOrder_Item_Option::is_price_Set() const{
    return m_price_isSet;
}

bool OAIOrder_Item_Option::is_price_Valid() const{
    return m_price_isValid;
}

QString OAIOrder_Item_Option::getProductOptionValueId() const {
    return m_product_option_value_id;
}
void OAIOrder_Item_Option::setProductOptionValueId(const QString &product_option_value_id) {
    m_product_option_value_id = product_option_value_id;
    m_product_option_value_id_isSet = true;
}

bool OAIOrder_Item_Option::is_product_option_value_id_Set() const{
    return m_product_option_value_id_isSet;
}

bool OAIOrder_Item_Option::is_product_option_value_id_Valid() const{
    return m_product_option_value_id_isValid;
}

QString OAIOrder_Item_Option::getType() const {
    return m_type;
}
void OAIOrder_Item_Option::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIOrder_Item_Option::is_type_Set() const{
    return m_type_isSet;
}

bool OAIOrder_Item_Option::is_type_Valid() const{
    return m_type_isValid;
}

QString OAIOrder_Item_Option::getValue() const {
    return m_value;
}
void OAIOrder_Item_Option::setValue(const QString &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIOrder_Item_Option::is_value_Set() const{
    return m_value_isSet;
}

bool OAIOrder_Item_Option::is_value_Valid() const{
    return m_value_isValid;
}

double OAIOrder_Item_Option::getWeight() const {
    return m_weight;
}
void OAIOrder_Item_Option::setWeight(const double &weight) {
    m_weight = weight;
    m_weight_isSet = true;
}

bool OAIOrder_Item_Option::is_weight_Set() const{
    return m_weight_isSet;
}

bool OAIOrder_Item_Option::is_weight_Valid() const{
    return m_weight_isValid;
}

bool OAIOrder_Item_Option::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_additional_fields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_fields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_option_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_option_value_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_weight_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrder_Item_Option::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
