/**
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICustomer_Address.h
 *
 * 
 */

#ifndef OAICustomer_Address_H
#define OAICustomer_Address_H

#include <QJsonObject>

#include "OAICountry.h"
#include "OAIObject.h"
#include "OAIState.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICountry;
class OAIState;

class OAICustomer_Address : public OAIObject {
public:
    OAICustomer_Address();
    OAICustomer_Address(QString json);
    ~OAICustomer_Address() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIObject getAdditionalFields() const;
    void setAdditionalFields(const OAIObject &additional_fields);
    bool is_additional_fields_Set() const;
    bool is_additional_fields_Valid() const;

    QString getAddress1() const;
    void setAddress1(const QString &address1);
    bool is_address1_Set() const;
    bool is_address1_Valid() const;

    QString getAddress2() const;
    void setAddress2(const QString &address2);
    bool is_address2_Set() const;
    bool is_address2_Valid() const;

    QString getCity() const;
    void setCity(const QString &city);
    bool is_city_Set() const;
    bool is_city_Valid() const;

    QString getCompany() const;
    void setCompany(const QString &company);
    bool is_company_Set() const;
    bool is_company_Valid() const;

    OAICountry getCountry() const;
    void setCountry(const OAICountry &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    OAIObject getCustomFields() const;
    void setCustomFields(const OAIObject &custom_fields);
    bool is_custom_fields_Set() const;
    bool is_custom_fields_Valid() const;

    bool isRDefault() const;
    void setRDefault(const bool &r_default);
    bool is_r_default_Set() const;
    bool is_r_default_Valid() const;

    QString getFax() const;
    void setFax(const QString &fax);
    bool is_fax_Set() const;
    bool is_fax_Valid() const;

    QString getFirstName() const;
    void setFirstName(const QString &first_name);
    bool is_first_name_Set() const;
    bool is_first_name_Valid() const;

    QString getGender() const;
    void setGender(const QString &gender);
    bool is_gender_Set() const;
    bool is_gender_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getIdentificationNumber() const;
    void setIdentificationNumber(const QString &identification_number);
    bool is_identification_number_Set() const;
    bool is_identification_number_Valid() const;

    QString getLastName() const;
    void setLastName(const QString &last_name);
    bool is_last_name_Set() const;
    bool is_last_name_Valid() const;

    QString getPhone() const;
    void setPhone(const QString &phone);
    bool is_phone_Set() const;
    bool is_phone_Valid() const;

    QString getPhoneMobile() const;
    void setPhoneMobile(const QString &phone_mobile);
    bool is_phone_mobile_Set() const;
    bool is_phone_mobile_Valid() const;

    QString getPostcode() const;
    void setPostcode(const QString &postcode);
    bool is_postcode_Set() const;
    bool is_postcode_Valid() const;

    QString getRegion() const;
    void setRegion(const QString &region);
    bool is_region_Set() const;
    bool is_region_Valid() const;

    OAIState getState() const;
    void setState(const OAIState &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getTaxId() const;
    void setTaxId(const QString &tax_id);
    bool is_tax_id_Set() const;
    bool is_tax_id_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getWebsite() const;
    void setWebsite(const QString &website);
    bool is_website_Set() const;
    bool is_website_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIObject m_additional_fields;
    bool m_additional_fields_isSet;
    bool m_additional_fields_isValid;

    QString m_address1;
    bool m_address1_isSet;
    bool m_address1_isValid;

    QString m_address2;
    bool m_address2_isSet;
    bool m_address2_isValid;

    QString m_city;
    bool m_city_isSet;
    bool m_city_isValid;

    QString m_company;
    bool m_company_isSet;
    bool m_company_isValid;

    OAICountry m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    OAIObject m_custom_fields;
    bool m_custom_fields_isSet;
    bool m_custom_fields_isValid;

    bool m_r_default;
    bool m_r_default_isSet;
    bool m_r_default_isValid;

    QString m_fax;
    bool m_fax_isSet;
    bool m_fax_isValid;

    QString m_first_name;
    bool m_first_name_isSet;
    bool m_first_name_isValid;

    QString m_gender;
    bool m_gender_isSet;
    bool m_gender_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_identification_number;
    bool m_identification_number_isSet;
    bool m_identification_number_isValid;

    QString m_last_name;
    bool m_last_name_isSet;
    bool m_last_name_isValid;

    QString m_phone;
    bool m_phone_isSet;
    bool m_phone_isValid;

    QString m_phone_mobile;
    bool m_phone_mobile_isSet;
    bool m_phone_mobile_isValid;

    QString m_postcode;
    bool m_postcode_isSet;
    bool m_postcode_isValid;

    QString m_region;
    bool m_region_isSet;
    bool m_region_isValid;

    OAIState m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_tax_id;
    bool m_tax_id_isSet;
    bool m_tax_id_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_website;
    bool m_website_isSet;
    bool m_website_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICustomer_Address)

#endif // OAICustomer_Address_H
