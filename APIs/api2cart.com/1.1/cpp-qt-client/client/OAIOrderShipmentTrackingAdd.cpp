/**
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderShipmentTrackingAdd.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderShipmentTrackingAdd::OAIOrderShipmentTrackingAdd(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderShipmentTrackingAdd::OAIOrderShipmentTrackingAdd() {
    this->initializeModel();
}

OAIOrderShipmentTrackingAdd::~OAIOrderShipmentTrackingAdd() {}

void OAIOrderShipmentTrackingAdd::initializeModel() {

    m_carrier_id_isSet = false;
    m_carrier_id_isValid = false;

    m_order_id_isSet = false;
    m_order_id_isValid = false;

    m_send_notifications_isSet = false;
    m_send_notifications_isValid = false;

    m_shipment_id_isSet = false;
    m_shipment_id_isValid = false;

    m_store_id_isSet = false;
    m_store_id_isValid = false;

    m_tracking_link_isSet = false;
    m_tracking_link_isValid = false;

    m_tracking_number_isSet = false;
    m_tracking_number_isValid = false;

    m_tracking_provider_isSet = false;
    m_tracking_provider_isValid = false;
}

void OAIOrderShipmentTrackingAdd::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrderShipmentTrackingAdd::fromJsonObject(QJsonObject json) {

    m_carrier_id_isValid = ::OpenAPI::fromJsonValue(m_carrier_id, json[QString("carrier_id")]);
    m_carrier_id_isSet = !json[QString("carrier_id")].isNull() && m_carrier_id_isValid;

    m_order_id_isValid = ::OpenAPI::fromJsonValue(m_order_id, json[QString("order_id")]);
    m_order_id_isSet = !json[QString("order_id")].isNull() && m_order_id_isValid;

    m_send_notifications_isValid = ::OpenAPI::fromJsonValue(m_send_notifications, json[QString("send_notifications")]);
    m_send_notifications_isSet = !json[QString("send_notifications")].isNull() && m_send_notifications_isValid;

    m_shipment_id_isValid = ::OpenAPI::fromJsonValue(m_shipment_id, json[QString("shipment_id")]);
    m_shipment_id_isSet = !json[QString("shipment_id")].isNull() && m_shipment_id_isValid;

    m_store_id_isValid = ::OpenAPI::fromJsonValue(m_store_id, json[QString("store_id")]);
    m_store_id_isSet = !json[QString("store_id")].isNull() && m_store_id_isValid;

    m_tracking_link_isValid = ::OpenAPI::fromJsonValue(m_tracking_link, json[QString("tracking_link")]);
    m_tracking_link_isSet = !json[QString("tracking_link")].isNull() && m_tracking_link_isValid;

    m_tracking_number_isValid = ::OpenAPI::fromJsonValue(m_tracking_number, json[QString("tracking_number")]);
    m_tracking_number_isSet = !json[QString("tracking_number")].isNull() && m_tracking_number_isValid;

    m_tracking_provider_isValid = ::OpenAPI::fromJsonValue(m_tracking_provider, json[QString("tracking_provider")]);
    m_tracking_provider_isSet = !json[QString("tracking_provider")].isNull() && m_tracking_provider_isValid;
}

QString OAIOrderShipmentTrackingAdd::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrderShipmentTrackingAdd::asJsonObject() const {
    QJsonObject obj;
    if (m_carrier_id_isSet) {
        obj.insert(QString("carrier_id"), ::OpenAPI::toJsonValue(m_carrier_id));
    }
    if (m_order_id_isSet) {
        obj.insert(QString("order_id"), ::OpenAPI::toJsonValue(m_order_id));
    }
    if (m_send_notifications_isSet) {
        obj.insert(QString("send_notifications"), ::OpenAPI::toJsonValue(m_send_notifications));
    }
    if (m_shipment_id_isSet) {
        obj.insert(QString("shipment_id"), ::OpenAPI::toJsonValue(m_shipment_id));
    }
    if (m_store_id_isSet) {
        obj.insert(QString("store_id"), ::OpenAPI::toJsonValue(m_store_id));
    }
    if (m_tracking_link_isSet) {
        obj.insert(QString("tracking_link"), ::OpenAPI::toJsonValue(m_tracking_link));
    }
    if (m_tracking_number_isSet) {
        obj.insert(QString("tracking_number"), ::OpenAPI::toJsonValue(m_tracking_number));
    }
    if (m_tracking_provider_isSet) {
        obj.insert(QString("tracking_provider"), ::OpenAPI::toJsonValue(m_tracking_provider));
    }
    return obj;
}

QString OAIOrderShipmentTrackingAdd::getCarrierId() const {
    return m_carrier_id;
}
void OAIOrderShipmentTrackingAdd::setCarrierId(const QString &carrier_id) {
    m_carrier_id = carrier_id;
    m_carrier_id_isSet = true;
}

bool OAIOrderShipmentTrackingAdd::is_carrier_id_Set() const{
    return m_carrier_id_isSet;
}

bool OAIOrderShipmentTrackingAdd::is_carrier_id_Valid() const{
    return m_carrier_id_isValid;
}

QString OAIOrderShipmentTrackingAdd::getOrderId() const {
    return m_order_id;
}
void OAIOrderShipmentTrackingAdd::setOrderId(const QString &order_id) {
    m_order_id = order_id;
    m_order_id_isSet = true;
}

bool OAIOrderShipmentTrackingAdd::is_order_id_Set() const{
    return m_order_id_isSet;
}

bool OAIOrderShipmentTrackingAdd::is_order_id_Valid() const{
    return m_order_id_isValid;
}

bool OAIOrderShipmentTrackingAdd::isSendNotifications() const {
    return m_send_notifications;
}
void OAIOrderShipmentTrackingAdd::setSendNotifications(const bool &send_notifications) {
    m_send_notifications = send_notifications;
    m_send_notifications_isSet = true;
}

bool OAIOrderShipmentTrackingAdd::is_send_notifications_Set() const{
    return m_send_notifications_isSet;
}

bool OAIOrderShipmentTrackingAdd::is_send_notifications_Valid() const{
    return m_send_notifications_isValid;
}

QString OAIOrderShipmentTrackingAdd::getShipmentId() const {
    return m_shipment_id;
}
void OAIOrderShipmentTrackingAdd::setShipmentId(const QString &shipment_id) {
    m_shipment_id = shipment_id;
    m_shipment_id_isSet = true;
}

bool OAIOrderShipmentTrackingAdd::is_shipment_id_Set() const{
    return m_shipment_id_isSet;
}

bool OAIOrderShipmentTrackingAdd::is_shipment_id_Valid() const{
    return m_shipment_id_isValid;
}

QString OAIOrderShipmentTrackingAdd::getStoreId() const {
    return m_store_id;
}
void OAIOrderShipmentTrackingAdd::setStoreId(const QString &store_id) {
    m_store_id = store_id;
    m_store_id_isSet = true;
}

bool OAIOrderShipmentTrackingAdd::is_store_id_Set() const{
    return m_store_id_isSet;
}

bool OAIOrderShipmentTrackingAdd::is_store_id_Valid() const{
    return m_store_id_isValid;
}

QString OAIOrderShipmentTrackingAdd::getTrackingLink() const {
    return m_tracking_link;
}
void OAIOrderShipmentTrackingAdd::setTrackingLink(const QString &tracking_link) {
    m_tracking_link = tracking_link;
    m_tracking_link_isSet = true;
}

bool OAIOrderShipmentTrackingAdd::is_tracking_link_Set() const{
    return m_tracking_link_isSet;
}

bool OAIOrderShipmentTrackingAdd::is_tracking_link_Valid() const{
    return m_tracking_link_isValid;
}

QString OAIOrderShipmentTrackingAdd::getTrackingNumber() const {
    return m_tracking_number;
}
void OAIOrderShipmentTrackingAdd::setTrackingNumber(const QString &tracking_number) {
    m_tracking_number = tracking_number;
    m_tracking_number_isSet = true;
}

bool OAIOrderShipmentTrackingAdd::is_tracking_number_Set() const{
    return m_tracking_number_isSet;
}

bool OAIOrderShipmentTrackingAdd::is_tracking_number_Valid() const{
    return m_tracking_number_isValid;
}

QString OAIOrderShipmentTrackingAdd::getTrackingProvider() const {
    return m_tracking_provider;
}
void OAIOrderShipmentTrackingAdd::setTrackingProvider(const QString &tracking_provider) {
    m_tracking_provider = tracking_provider;
    m_tracking_provider_isSet = true;
}

bool OAIOrderShipmentTrackingAdd::is_tracking_provider_Set() const{
    return m_tracking_provider_isSet;
}

bool OAIOrderShipmentTrackingAdd::is_tracking_provider_Valid() const{
    return m_tracking_provider_isValid;
}

bool OAIOrderShipmentTrackingAdd::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_carrier_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_send_notifications_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipment_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_store_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tracking_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tracking_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tracking_provider_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrderShipmentTrackingAdd::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_shipment_id_isValid && m_tracking_number_isValid && true;
}

} // namespace OpenAPI
