/**
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderPreestimateShippingList.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderPreestimateShippingList::OAIOrderPreestimateShippingList(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderPreestimateShippingList::OAIOrderPreestimateShippingList() {
    this->initializeModel();
}

OAIOrderPreestimateShippingList::~OAIOrderPreestimateShippingList() {}

void OAIOrderPreestimateShippingList::initializeModel() {

    m_customer_email_isSet = false;
    m_customer_email_isValid = false;

    m_customer_id_isSet = false;
    m_customer_id_isValid = false;

    m_exclude_isSet = false;
    m_exclude_isValid = false;

    m_order_item_isSet = false;
    m_order_item_isValid = false;

    m_params_isSet = false;
    m_params_isValid = false;

    m_shipp_address_1_isSet = false;
    m_shipp_address_1_isValid = false;

    m_shipp_city_isSet = false;
    m_shipp_city_isValid = false;

    m_shipp_country_isSet = false;
    m_shipp_country_isValid = false;

    m_shipp_postcode_isSet = false;
    m_shipp_postcode_isValid = false;

    m_shipp_state_isSet = false;
    m_shipp_state_isValid = false;

    m_store_id_isSet = false;
    m_store_id_isValid = false;

    m_warehouse_id_isSet = false;
    m_warehouse_id_isValid = false;
}

void OAIOrderPreestimateShippingList::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrderPreestimateShippingList::fromJsonObject(QJsonObject json) {

    m_customer_email_isValid = ::OpenAPI::fromJsonValue(m_customer_email, json[QString("customer_email")]);
    m_customer_email_isSet = !json[QString("customer_email")].isNull() && m_customer_email_isValid;

    m_customer_id_isValid = ::OpenAPI::fromJsonValue(m_customer_id, json[QString("customer_id")]);
    m_customer_id_isSet = !json[QString("customer_id")].isNull() && m_customer_id_isValid;

    m_exclude_isValid = ::OpenAPI::fromJsonValue(m_exclude, json[QString("exclude")]);
    m_exclude_isSet = !json[QString("exclude")].isNull() && m_exclude_isValid;

    m_order_item_isValid = ::OpenAPI::fromJsonValue(m_order_item, json[QString("order_item")]);
    m_order_item_isSet = !json[QString("order_item")].isNull() && m_order_item_isValid;

    m_params_isValid = ::OpenAPI::fromJsonValue(m_params, json[QString("params")]);
    m_params_isSet = !json[QString("params")].isNull() && m_params_isValid;

    m_shipp_address_1_isValid = ::OpenAPI::fromJsonValue(m_shipp_address_1, json[QString("shipp_address_1")]);
    m_shipp_address_1_isSet = !json[QString("shipp_address_1")].isNull() && m_shipp_address_1_isValid;

    m_shipp_city_isValid = ::OpenAPI::fromJsonValue(m_shipp_city, json[QString("shipp_city")]);
    m_shipp_city_isSet = !json[QString("shipp_city")].isNull() && m_shipp_city_isValid;

    m_shipp_country_isValid = ::OpenAPI::fromJsonValue(m_shipp_country, json[QString("shipp_country")]);
    m_shipp_country_isSet = !json[QString("shipp_country")].isNull() && m_shipp_country_isValid;

    m_shipp_postcode_isValid = ::OpenAPI::fromJsonValue(m_shipp_postcode, json[QString("shipp_postcode")]);
    m_shipp_postcode_isSet = !json[QString("shipp_postcode")].isNull() && m_shipp_postcode_isValid;

    m_shipp_state_isValid = ::OpenAPI::fromJsonValue(m_shipp_state, json[QString("shipp_state")]);
    m_shipp_state_isSet = !json[QString("shipp_state")].isNull() && m_shipp_state_isValid;

    m_store_id_isValid = ::OpenAPI::fromJsonValue(m_store_id, json[QString("store_id")]);
    m_store_id_isSet = !json[QString("store_id")].isNull() && m_store_id_isValid;

    m_warehouse_id_isValid = ::OpenAPI::fromJsonValue(m_warehouse_id, json[QString("warehouse_id")]);
    m_warehouse_id_isSet = !json[QString("warehouse_id")].isNull() && m_warehouse_id_isValid;
}

QString OAIOrderPreestimateShippingList::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrderPreestimateShippingList::asJsonObject() const {
    QJsonObject obj;
    if (m_customer_email_isSet) {
        obj.insert(QString("customer_email"), ::OpenAPI::toJsonValue(m_customer_email));
    }
    if (m_customer_id_isSet) {
        obj.insert(QString("customer_id"), ::OpenAPI::toJsonValue(m_customer_id));
    }
    if (m_exclude_isSet) {
        obj.insert(QString("exclude"), ::OpenAPI::toJsonValue(m_exclude));
    }
    if (m_order_item.size() > 0) {
        obj.insert(QString("order_item"), ::OpenAPI::toJsonValue(m_order_item));
    }
    if (m_params_isSet) {
        obj.insert(QString("params"), ::OpenAPI::toJsonValue(m_params));
    }
    if (m_shipp_address_1_isSet) {
        obj.insert(QString("shipp_address_1"), ::OpenAPI::toJsonValue(m_shipp_address_1));
    }
    if (m_shipp_city_isSet) {
        obj.insert(QString("shipp_city"), ::OpenAPI::toJsonValue(m_shipp_city));
    }
    if (m_shipp_country_isSet) {
        obj.insert(QString("shipp_country"), ::OpenAPI::toJsonValue(m_shipp_country));
    }
    if (m_shipp_postcode_isSet) {
        obj.insert(QString("shipp_postcode"), ::OpenAPI::toJsonValue(m_shipp_postcode));
    }
    if (m_shipp_state_isSet) {
        obj.insert(QString("shipp_state"), ::OpenAPI::toJsonValue(m_shipp_state));
    }
    if (m_store_id_isSet) {
        obj.insert(QString("store_id"), ::OpenAPI::toJsonValue(m_store_id));
    }
    if (m_warehouse_id_isSet) {
        obj.insert(QString("warehouse_id"), ::OpenAPI::toJsonValue(m_warehouse_id));
    }
    return obj;
}

QString OAIOrderPreestimateShippingList::getCustomerEmail() const {
    return m_customer_email;
}
void OAIOrderPreestimateShippingList::setCustomerEmail(const QString &customer_email) {
    m_customer_email = customer_email;
    m_customer_email_isSet = true;
}

bool OAIOrderPreestimateShippingList::is_customer_email_Set() const{
    return m_customer_email_isSet;
}

bool OAIOrderPreestimateShippingList::is_customer_email_Valid() const{
    return m_customer_email_isValid;
}

QString OAIOrderPreestimateShippingList::getCustomerId() const {
    return m_customer_id;
}
void OAIOrderPreestimateShippingList::setCustomerId(const QString &customer_id) {
    m_customer_id = customer_id;
    m_customer_id_isSet = true;
}

bool OAIOrderPreestimateShippingList::is_customer_id_Set() const{
    return m_customer_id_isSet;
}

bool OAIOrderPreestimateShippingList::is_customer_id_Valid() const{
    return m_customer_id_isValid;
}

QString OAIOrderPreestimateShippingList::getExclude() const {
    return m_exclude;
}
void OAIOrderPreestimateShippingList::setExclude(const QString &exclude) {
    m_exclude = exclude;
    m_exclude_isSet = true;
}

bool OAIOrderPreestimateShippingList::is_exclude_Set() const{
    return m_exclude_isSet;
}

bool OAIOrderPreestimateShippingList::is_exclude_Valid() const{
    return m_exclude_isValid;
}

QList<OAIOrderPreestimateShippingList_order_item_inner> OAIOrderPreestimateShippingList::getOrderItem() const {
    return m_order_item;
}
void OAIOrderPreestimateShippingList::setOrderItem(const QList<OAIOrderPreestimateShippingList_order_item_inner> &order_item) {
    m_order_item = order_item;
    m_order_item_isSet = true;
}

bool OAIOrderPreestimateShippingList::is_order_item_Set() const{
    return m_order_item_isSet;
}

bool OAIOrderPreestimateShippingList::is_order_item_Valid() const{
    return m_order_item_isValid;
}

QString OAIOrderPreestimateShippingList::getParams() const {
    return m_params;
}
void OAIOrderPreestimateShippingList::setParams(const QString &params) {
    m_params = params;
    m_params_isSet = true;
}

bool OAIOrderPreestimateShippingList::is_params_Set() const{
    return m_params_isSet;
}

bool OAIOrderPreestimateShippingList::is_params_Valid() const{
    return m_params_isValid;
}

QString OAIOrderPreestimateShippingList::getShippAddress1() const {
    return m_shipp_address_1;
}
void OAIOrderPreestimateShippingList::setShippAddress1(const QString &shipp_address_1) {
    m_shipp_address_1 = shipp_address_1;
    m_shipp_address_1_isSet = true;
}

bool OAIOrderPreestimateShippingList::is_shipp_address_1_Set() const{
    return m_shipp_address_1_isSet;
}

bool OAIOrderPreestimateShippingList::is_shipp_address_1_Valid() const{
    return m_shipp_address_1_isValid;
}

QString OAIOrderPreestimateShippingList::getShippCity() const {
    return m_shipp_city;
}
void OAIOrderPreestimateShippingList::setShippCity(const QString &shipp_city) {
    m_shipp_city = shipp_city;
    m_shipp_city_isSet = true;
}

bool OAIOrderPreestimateShippingList::is_shipp_city_Set() const{
    return m_shipp_city_isSet;
}

bool OAIOrderPreestimateShippingList::is_shipp_city_Valid() const{
    return m_shipp_city_isValid;
}

QString OAIOrderPreestimateShippingList::getShippCountry() const {
    return m_shipp_country;
}
void OAIOrderPreestimateShippingList::setShippCountry(const QString &shipp_country) {
    m_shipp_country = shipp_country;
    m_shipp_country_isSet = true;
}

bool OAIOrderPreestimateShippingList::is_shipp_country_Set() const{
    return m_shipp_country_isSet;
}

bool OAIOrderPreestimateShippingList::is_shipp_country_Valid() const{
    return m_shipp_country_isValid;
}

QString OAIOrderPreestimateShippingList::getShippPostcode() const {
    return m_shipp_postcode;
}
void OAIOrderPreestimateShippingList::setShippPostcode(const QString &shipp_postcode) {
    m_shipp_postcode = shipp_postcode;
    m_shipp_postcode_isSet = true;
}

bool OAIOrderPreestimateShippingList::is_shipp_postcode_Set() const{
    return m_shipp_postcode_isSet;
}

bool OAIOrderPreestimateShippingList::is_shipp_postcode_Valid() const{
    return m_shipp_postcode_isValid;
}

QString OAIOrderPreestimateShippingList::getShippState() const {
    return m_shipp_state;
}
void OAIOrderPreestimateShippingList::setShippState(const QString &shipp_state) {
    m_shipp_state = shipp_state;
    m_shipp_state_isSet = true;
}

bool OAIOrderPreestimateShippingList::is_shipp_state_Set() const{
    return m_shipp_state_isSet;
}

bool OAIOrderPreestimateShippingList::is_shipp_state_Valid() const{
    return m_shipp_state_isValid;
}

QString OAIOrderPreestimateShippingList::getStoreId() const {
    return m_store_id;
}
void OAIOrderPreestimateShippingList::setStoreId(const QString &store_id) {
    m_store_id = store_id;
    m_store_id_isSet = true;
}

bool OAIOrderPreestimateShippingList::is_store_id_Set() const{
    return m_store_id_isSet;
}

bool OAIOrderPreestimateShippingList::is_store_id_Valid() const{
    return m_store_id_isValid;
}

QString OAIOrderPreestimateShippingList::getWarehouseId() const {
    return m_warehouse_id;
}
void OAIOrderPreestimateShippingList::setWarehouseId(const QString &warehouse_id) {
    m_warehouse_id = warehouse_id;
    m_warehouse_id_isSet = true;
}

bool OAIOrderPreestimateShippingList::is_warehouse_id_Set() const{
    return m_warehouse_id_isSet;
}

bool OAIOrderPreestimateShippingList::is_warehouse_id_Valid() const{
    return m_warehouse_id_isValid;
}

bool OAIOrderPreestimateShippingList::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_customer_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_exclude_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_item.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_params_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipp_address_1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipp_city_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipp_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipp_postcode_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipp_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_store_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_warehouse_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrderPreestimateShippingList::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_order_item_isValid && m_shipp_country_isValid && true;
}

} // namespace OpenAPI
