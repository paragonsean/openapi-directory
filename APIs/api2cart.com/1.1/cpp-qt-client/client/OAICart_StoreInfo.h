/**
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICart_StoreInfo.h
 *
 * 
 */

#ifndef OAICart_StoreInfo_H
#define OAICart_StoreInfo_H

#include <QJsonObject>

#include "OAICarrier.h"
#include "OAICart_Channel.h"
#include "OAICurrency.h"
#include "OAIInfo.h"
#include "OAILanguage.h"
#include "OAIObject.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICarrier;
class OAICart_Channel;
class OAICurrency;
class OAILanguage;
class OAIInfo;

class OAICart_StoreInfo : public OAIObject {
public:
    OAICart_StoreInfo();
    OAICart_StoreInfo(QString json);
    ~OAICart_StoreInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isActive() const;
    void setActive(const bool &active);
    bool is_active_Set() const;
    bool is_active_Valid() const;

    OAIObject getAdditionalFields() const;
    void setAdditionalFields(const OAIObject &additional_fields);
    bool is_additional_fields_Set() const;
    bool is_additional_fields_Valid() const;

    QList<OAICarrier> getCarrierInfo() const;
    void setCarrierInfo(const QList<OAICarrier> &carrier_info);
    bool is_carrier_info_Set() const;
    bool is_carrier_info_Valid() const;

    QList<OAICart_Channel> getChannels() const;
    void setChannels(const QList<OAICart_Channel> &channels);
    bool is_channels_Set() const;
    bool is_channels_Valid() const;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    OAICurrency getCurrency() const;
    void setCurrency(const OAICurrency &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    OAIObject getCustomFields() const;
    void setCustomFields(const OAIObject &custom_fields);
    bool is_custom_fields_Set() const;
    bool is_custom_fields_Valid() const;

    QString getDefaultWarehouseId() const;
    void setDefaultWarehouseId(const QString &default_warehouse_id);
    bool is_default_warehouse_id_Set() const;
    bool is_default_warehouse_id_Valid() const;

    QString getDimensionUnit() const;
    void setDimensionUnit(const QString &dimension_unit);
    bool is_dimension_unit_Set() const;
    bool is_dimension_unit_Valid() const;

    QString getLanguage() const;
    void setLanguage(const QString &language);
    bool is_language_Set() const;
    bool is_language_Valid() const;

    QString getMultiStoreUrl() const;
    void setMultiStoreUrl(const QString &multi_store_url);
    bool is_multi_store_url_Set() const;
    bool is_multi_store_url_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    bool isPricesIncludeTax() const;
    void setPricesIncludeTax(const bool &prices_include_tax);
    bool is_prices_include_tax_Set() const;
    bool is_prices_include_tax_Valid() const;

    QString getRootCategoryId() const;
    void setRootCategoryId(const QString &root_category_id);
    bool is_root_category_id_Set() const;
    bool is_root_category_id_Valid() const;

    QList<OAICurrency> getStoreCurrencies() const;
    void setStoreCurrencies(const QList<OAICurrency> &store_currencies);
    bool is_store_currencies_Set() const;
    bool is_store_currencies_Valid() const;

    QString getStoreId() const;
    void setStoreId(const QString &store_id);
    bool is_store_id_Set() const;
    bool is_store_id_Valid() const;

    QList<OAILanguage> getStoreLanguages() const;
    void setStoreLanguages(const QList<OAILanguage> &store_languages);
    bool is_store_languages_Set() const;
    bool is_store_languages_Valid() const;

    OAIInfo getStoreOwnerInfo() const;
    void setStoreOwnerInfo(const OAIInfo &store_owner_info);
    bool is_store_owner_info_Set() const;
    bool is_store_owner_info_Valid() const;

    QString getTimezone() const;
    void setTimezone(const QString &timezone);
    bool is_timezone_Set() const;
    bool is_timezone_Valid() const;

    QString getWeightUnit() const;
    void setWeightUnit(const QString &weight_unit);
    bool is_weight_unit_Set() const;
    bool is_weight_unit_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_active;
    bool m_active_isSet;
    bool m_active_isValid;

    OAIObject m_additional_fields;
    bool m_additional_fields_isSet;
    bool m_additional_fields_isValid;

    QList<OAICarrier> m_carrier_info;
    bool m_carrier_info_isSet;
    bool m_carrier_info_isValid;

    QList<OAICart_Channel> m_channels;
    bool m_channels_isSet;
    bool m_channels_isValid;

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    OAICurrency m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    OAIObject m_custom_fields;
    bool m_custom_fields_isSet;
    bool m_custom_fields_isValid;

    QString m_default_warehouse_id;
    bool m_default_warehouse_id_isSet;
    bool m_default_warehouse_id_isValid;

    QString m_dimension_unit;
    bool m_dimension_unit_isSet;
    bool m_dimension_unit_isValid;

    QString m_language;
    bool m_language_isSet;
    bool m_language_isValid;

    QString m_multi_store_url;
    bool m_multi_store_url_isSet;
    bool m_multi_store_url_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    bool m_prices_include_tax;
    bool m_prices_include_tax_isSet;
    bool m_prices_include_tax_isValid;

    QString m_root_category_id;
    bool m_root_category_id_isSet;
    bool m_root_category_id_isValid;

    QList<OAICurrency> m_store_currencies;
    bool m_store_currencies_isSet;
    bool m_store_currencies_isValid;

    QString m_store_id;
    bool m_store_id_isSet;
    bool m_store_id_isValid;

    QList<OAILanguage> m_store_languages;
    bool m_store_languages_isSet;
    bool m_store_languages_isValid;

    OAIInfo m_store_owner_info;
    bool m_store_owner_info_isSet;
    bool m_store_owner_info_isValid;

    QString m_timezone;
    bool m_timezone_isSet;
    bool m_timezone_isValid;

    QString m_weight_unit;
    bool m_weight_unit_isSet;
    bool m_weight_unit_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICart_StoreInfo)

#endif // OAICart_StoreInfo_H
