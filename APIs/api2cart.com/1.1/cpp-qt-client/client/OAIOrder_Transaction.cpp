/**
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrder_Transaction.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrder_Transaction::OAIOrder_Transaction(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrder_Transaction::OAIOrder_Transaction() {
    this->initializeModel();
}

OAIOrder_Transaction::~OAIOrder_Transaction() {}

void OAIOrder_Transaction::initializeModel() {

    m_additional_fields_isSet = false;
    m_additional_fields_isValid = false;

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_avs_message_isSet = false;
    m_avs_message_isValid = false;

    m_avs_postal_resp_code_isSet = false;
    m_avs_postal_resp_code_isValid = false;

    m_avs_street_resp_code_isSet = false;
    m_avs_street_resp_code_isValid = false;

    m_card_bin_isSet = false;
    m_card_bin_isValid = false;

    m_card_brand_isSet = false;
    m_card_brand_isValid = false;

    m_card_last_four_isSet = false;
    m_card_last_four_isValid = false;

    m_created_time_isSet = false;
    m_created_time_isValid = false;

    m_currency_isSet = false;
    m_currency_isValid = false;

    m_custom_fields_isSet = false;
    m_custom_fields_isValid = false;

    m_cvv_code_isSet = false;
    m_cvv_code_isValid = false;

    m_cvv_message_isSet = false;
    m_cvv_message_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_gateway_isSet = false;
    m_gateway_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_is_test_mode_isSet = false;
    m_is_test_mode_isValid = false;

    m_order_id_isSet = false;
    m_order_id_isValid = false;

    m_parent_id_isSet = false;
    m_parent_id_isValid = false;

    m_reference_number_isSet = false;
    m_reference_number_isValid = false;

    m_settlement_amount_isSet = false;
    m_settlement_amount_isValid = false;

    m_settlement_created_time_isSet = false;
    m_settlement_created_time_isValid = false;

    m_settlement_currency_isSet = false;
    m_settlement_currency_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_transaction_id_isSet = false;
    m_transaction_id_isValid = false;
}

void OAIOrder_Transaction::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrder_Transaction::fromJsonObject(QJsonObject json) {

    m_additional_fields_isValid = ::OpenAPI::fromJsonValue(m_additional_fields, json[QString("additional_fields")]);
    m_additional_fields_isSet = !json[QString("additional_fields")].isNull() && m_additional_fields_isValid;

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_avs_message_isValid = ::OpenAPI::fromJsonValue(m_avs_message, json[QString("avs_message")]);
    m_avs_message_isSet = !json[QString("avs_message")].isNull() && m_avs_message_isValid;

    m_avs_postal_resp_code_isValid = ::OpenAPI::fromJsonValue(m_avs_postal_resp_code, json[QString("avs_postal_resp_code")]);
    m_avs_postal_resp_code_isSet = !json[QString("avs_postal_resp_code")].isNull() && m_avs_postal_resp_code_isValid;

    m_avs_street_resp_code_isValid = ::OpenAPI::fromJsonValue(m_avs_street_resp_code, json[QString("avs_street_resp_code")]);
    m_avs_street_resp_code_isSet = !json[QString("avs_street_resp_code")].isNull() && m_avs_street_resp_code_isValid;

    m_card_bin_isValid = ::OpenAPI::fromJsonValue(m_card_bin, json[QString("card_bin")]);
    m_card_bin_isSet = !json[QString("card_bin")].isNull() && m_card_bin_isValid;

    m_card_brand_isValid = ::OpenAPI::fromJsonValue(m_card_brand, json[QString("card_brand")]);
    m_card_brand_isSet = !json[QString("card_brand")].isNull() && m_card_brand_isValid;

    m_card_last_four_isValid = ::OpenAPI::fromJsonValue(m_card_last_four, json[QString("card_last_four")]);
    m_card_last_four_isSet = !json[QString("card_last_four")].isNull() && m_card_last_four_isValid;

    m_created_time_isValid = ::OpenAPI::fromJsonValue(m_created_time, json[QString("created_time")]);
    m_created_time_isSet = !json[QString("created_time")].isNull() && m_created_time_isValid;

    m_currency_isValid = ::OpenAPI::fromJsonValue(m_currency, json[QString("currency")]);
    m_currency_isSet = !json[QString("currency")].isNull() && m_currency_isValid;

    m_custom_fields_isValid = ::OpenAPI::fromJsonValue(m_custom_fields, json[QString("custom_fields")]);
    m_custom_fields_isSet = !json[QString("custom_fields")].isNull() && m_custom_fields_isValid;

    m_cvv_code_isValid = ::OpenAPI::fromJsonValue(m_cvv_code, json[QString("cvv_code")]);
    m_cvv_code_isSet = !json[QString("cvv_code")].isNull() && m_cvv_code_isValid;

    m_cvv_message_isValid = ::OpenAPI::fromJsonValue(m_cvv_message, json[QString("cvv_message")]);
    m_cvv_message_isSet = !json[QString("cvv_message")].isNull() && m_cvv_message_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_gateway_isValid = ::OpenAPI::fromJsonValue(m_gateway, json[QString("gateway")]);
    m_gateway_isSet = !json[QString("gateway")].isNull() && m_gateway_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_is_test_mode_isValid = ::OpenAPI::fromJsonValue(m_is_test_mode, json[QString("is_test_mode")]);
    m_is_test_mode_isSet = !json[QString("is_test_mode")].isNull() && m_is_test_mode_isValid;

    m_order_id_isValid = ::OpenAPI::fromJsonValue(m_order_id, json[QString("order_id")]);
    m_order_id_isSet = !json[QString("order_id")].isNull() && m_order_id_isValid;

    m_parent_id_isValid = ::OpenAPI::fromJsonValue(m_parent_id, json[QString("parent_id")]);
    m_parent_id_isSet = !json[QString("parent_id")].isNull() && m_parent_id_isValid;

    m_reference_number_isValid = ::OpenAPI::fromJsonValue(m_reference_number, json[QString("reference_number")]);
    m_reference_number_isSet = !json[QString("reference_number")].isNull() && m_reference_number_isValid;

    m_settlement_amount_isValid = ::OpenAPI::fromJsonValue(m_settlement_amount, json[QString("settlement_amount")]);
    m_settlement_amount_isSet = !json[QString("settlement_amount")].isNull() && m_settlement_amount_isValid;

    m_settlement_created_time_isValid = ::OpenAPI::fromJsonValue(m_settlement_created_time, json[QString("settlement_created_time")]);
    m_settlement_created_time_isSet = !json[QString("settlement_created_time")].isNull() && m_settlement_created_time_isValid;

    m_settlement_currency_isValid = ::OpenAPI::fromJsonValue(m_settlement_currency, json[QString("settlement_currency")]);
    m_settlement_currency_isSet = !json[QString("settlement_currency")].isNull() && m_settlement_currency_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_transaction_id_isValid = ::OpenAPI::fromJsonValue(m_transaction_id, json[QString("transaction_id")]);
    m_transaction_id_isSet = !json[QString("transaction_id")].isNull() && m_transaction_id_isValid;
}

QString OAIOrder_Transaction::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrder_Transaction::asJsonObject() const {
    QJsonObject obj;
    if (m_additional_fields_isSet) {
        obj.insert(QString("additional_fields"), ::OpenAPI::toJsonValue(m_additional_fields));
    }
    if (m_amount_isSet) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_avs_message_isSet) {
        obj.insert(QString("avs_message"), ::OpenAPI::toJsonValue(m_avs_message));
    }
    if (m_avs_postal_resp_code_isSet) {
        obj.insert(QString("avs_postal_resp_code"), ::OpenAPI::toJsonValue(m_avs_postal_resp_code));
    }
    if (m_avs_street_resp_code_isSet) {
        obj.insert(QString("avs_street_resp_code"), ::OpenAPI::toJsonValue(m_avs_street_resp_code));
    }
    if (m_card_bin_isSet) {
        obj.insert(QString("card_bin"), ::OpenAPI::toJsonValue(m_card_bin));
    }
    if (m_card_brand_isSet) {
        obj.insert(QString("card_brand"), ::OpenAPI::toJsonValue(m_card_brand));
    }
    if (m_card_last_four_isSet) {
        obj.insert(QString("card_last_four"), ::OpenAPI::toJsonValue(m_card_last_four));
    }
    if (m_created_time.isSet()) {
        obj.insert(QString("created_time"), ::OpenAPI::toJsonValue(m_created_time));
    }
    if (m_currency_isSet) {
        obj.insert(QString("currency"), ::OpenAPI::toJsonValue(m_currency));
    }
    if (m_custom_fields_isSet) {
        obj.insert(QString("custom_fields"), ::OpenAPI::toJsonValue(m_custom_fields));
    }
    if (m_cvv_code_isSet) {
        obj.insert(QString("cvv_code"), ::OpenAPI::toJsonValue(m_cvv_code));
    }
    if (m_cvv_message_isSet) {
        obj.insert(QString("cvv_message"), ::OpenAPI::toJsonValue(m_cvv_message));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_gateway_isSet) {
        obj.insert(QString("gateway"), ::OpenAPI::toJsonValue(m_gateway));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_is_test_mode_isSet) {
        obj.insert(QString("is_test_mode"), ::OpenAPI::toJsonValue(m_is_test_mode));
    }
    if (m_order_id_isSet) {
        obj.insert(QString("order_id"), ::OpenAPI::toJsonValue(m_order_id));
    }
    if (m_parent_id_isSet) {
        obj.insert(QString("parent_id"), ::OpenAPI::toJsonValue(m_parent_id));
    }
    if (m_reference_number_isSet) {
        obj.insert(QString("reference_number"), ::OpenAPI::toJsonValue(m_reference_number));
    }
    if (m_settlement_amount_isSet) {
        obj.insert(QString("settlement_amount"), ::OpenAPI::toJsonValue(m_settlement_amount));
    }
    if (m_settlement_created_time.isSet()) {
        obj.insert(QString("settlement_created_time"), ::OpenAPI::toJsonValue(m_settlement_created_time));
    }
    if (m_settlement_currency_isSet) {
        obj.insert(QString("settlement_currency"), ::OpenAPI::toJsonValue(m_settlement_currency));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_transaction_id_isSet) {
        obj.insert(QString("transaction_id"), ::OpenAPI::toJsonValue(m_transaction_id));
    }
    return obj;
}

OAIObject OAIOrder_Transaction::getAdditionalFields() const {
    return m_additional_fields;
}
void OAIOrder_Transaction::setAdditionalFields(const OAIObject &additional_fields) {
    m_additional_fields = additional_fields;
    m_additional_fields_isSet = true;
}

bool OAIOrder_Transaction::is_additional_fields_Set() const{
    return m_additional_fields_isSet;
}

bool OAIOrder_Transaction::is_additional_fields_Valid() const{
    return m_additional_fields_isValid;
}

double OAIOrder_Transaction::getAmount() const {
    return m_amount;
}
void OAIOrder_Transaction::setAmount(const double &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAIOrder_Transaction::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAIOrder_Transaction::is_amount_Valid() const{
    return m_amount_isValid;
}

QString OAIOrder_Transaction::getAvsMessage() const {
    return m_avs_message;
}
void OAIOrder_Transaction::setAvsMessage(const QString &avs_message) {
    m_avs_message = avs_message;
    m_avs_message_isSet = true;
}

bool OAIOrder_Transaction::is_avs_message_Set() const{
    return m_avs_message_isSet;
}

bool OAIOrder_Transaction::is_avs_message_Valid() const{
    return m_avs_message_isValid;
}

QString OAIOrder_Transaction::getAvsPostalRespCode() const {
    return m_avs_postal_resp_code;
}
void OAIOrder_Transaction::setAvsPostalRespCode(const QString &avs_postal_resp_code) {
    m_avs_postal_resp_code = avs_postal_resp_code;
    m_avs_postal_resp_code_isSet = true;
}

bool OAIOrder_Transaction::is_avs_postal_resp_code_Set() const{
    return m_avs_postal_resp_code_isSet;
}

bool OAIOrder_Transaction::is_avs_postal_resp_code_Valid() const{
    return m_avs_postal_resp_code_isValid;
}

QString OAIOrder_Transaction::getAvsStreetRespCode() const {
    return m_avs_street_resp_code;
}
void OAIOrder_Transaction::setAvsStreetRespCode(const QString &avs_street_resp_code) {
    m_avs_street_resp_code = avs_street_resp_code;
    m_avs_street_resp_code_isSet = true;
}

bool OAIOrder_Transaction::is_avs_street_resp_code_Set() const{
    return m_avs_street_resp_code_isSet;
}

bool OAIOrder_Transaction::is_avs_street_resp_code_Valid() const{
    return m_avs_street_resp_code_isValid;
}

QString OAIOrder_Transaction::getCardBin() const {
    return m_card_bin;
}
void OAIOrder_Transaction::setCardBin(const QString &card_bin) {
    m_card_bin = card_bin;
    m_card_bin_isSet = true;
}

bool OAIOrder_Transaction::is_card_bin_Set() const{
    return m_card_bin_isSet;
}

bool OAIOrder_Transaction::is_card_bin_Valid() const{
    return m_card_bin_isValid;
}

QString OAIOrder_Transaction::getCardBrand() const {
    return m_card_brand;
}
void OAIOrder_Transaction::setCardBrand(const QString &card_brand) {
    m_card_brand = card_brand;
    m_card_brand_isSet = true;
}

bool OAIOrder_Transaction::is_card_brand_Set() const{
    return m_card_brand_isSet;
}

bool OAIOrder_Transaction::is_card_brand_Valid() const{
    return m_card_brand_isValid;
}

QString OAIOrder_Transaction::getCardLastFour() const {
    return m_card_last_four;
}
void OAIOrder_Transaction::setCardLastFour(const QString &card_last_four) {
    m_card_last_four = card_last_four;
    m_card_last_four_isSet = true;
}

bool OAIOrder_Transaction::is_card_last_four_Set() const{
    return m_card_last_four_isSet;
}

bool OAIOrder_Transaction::is_card_last_four_Valid() const{
    return m_card_last_four_isValid;
}

OAIA2CDateTime OAIOrder_Transaction::getCreatedTime() const {
    return m_created_time;
}
void OAIOrder_Transaction::setCreatedTime(const OAIA2CDateTime &created_time) {
    m_created_time = created_time;
    m_created_time_isSet = true;
}

bool OAIOrder_Transaction::is_created_time_Set() const{
    return m_created_time_isSet;
}

bool OAIOrder_Transaction::is_created_time_Valid() const{
    return m_created_time_isValid;
}

QString OAIOrder_Transaction::getCurrency() const {
    return m_currency;
}
void OAIOrder_Transaction::setCurrency(const QString &currency) {
    m_currency = currency;
    m_currency_isSet = true;
}

bool OAIOrder_Transaction::is_currency_Set() const{
    return m_currency_isSet;
}

bool OAIOrder_Transaction::is_currency_Valid() const{
    return m_currency_isValid;
}

OAIObject OAIOrder_Transaction::getCustomFields() const {
    return m_custom_fields;
}
void OAIOrder_Transaction::setCustomFields(const OAIObject &custom_fields) {
    m_custom_fields = custom_fields;
    m_custom_fields_isSet = true;
}

bool OAIOrder_Transaction::is_custom_fields_Set() const{
    return m_custom_fields_isSet;
}

bool OAIOrder_Transaction::is_custom_fields_Valid() const{
    return m_custom_fields_isValid;
}

QString OAIOrder_Transaction::getCvvCode() const {
    return m_cvv_code;
}
void OAIOrder_Transaction::setCvvCode(const QString &cvv_code) {
    m_cvv_code = cvv_code;
    m_cvv_code_isSet = true;
}

bool OAIOrder_Transaction::is_cvv_code_Set() const{
    return m_cvv_code_isSet;
}

bool OAIOrder_Transaction::is_cvv_code_Valid() const{
    return m_cvv_code_isValid;
}

QString OAIOrder_Transaction::getCvvMessage() const {
    return m_cvv_message;
}
void OAIOrder_Transaction::setCvvMessage(const QString &cvv_message) {
    m_cvv_message = cvv_message;
    m_cvv_message_isSet = true;
}

bool OAIOrder_Transaction::is_cvv_message_Set() const{
    return m_cvv_message_isSet;
}

bool OAIOrder_Transaction::is_cvv_message_Valid() const{
    return m_cvv_message_isValid;
}

QString OAIOrder_Transaction::getDescription() const {
    return m_description;
}
void OAIOrder_Transaction::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIOrder_Transaction::is_description_Set() const{
    return m_description_isSet;
}

bool OAIOrder_Transaction::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIOrder_Transaction::getGateway() const {
    return m_gateway;
}
void OAIOrder_Transaction::setGateway(const QString &gateway) {
    m_gateway = gateway;
    m_gateway_isSet = true;
}

bool OAIOrder_Transaction::is_gateway_Set() const{
    return m_gateway_isSet;
}

bool OAIOrder_Transaction::is_gateway_Valid() const{
    return m_gateway_isValid;
}

QString OAIOrder_Transaction::getId() const {
    return m_id;
}
void OAIOrder_Transaction::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIOrder_Transaction::is_id_Set() const{
    return m_id_isSet;
}

bool OAIOrder_Transaction::is_id_Valid() const{
    return m_id_isValid;
}

bool OAIOrder_Transaction::isIsTestMode() const {
    return m_is_test_mode;
}
void OAIOrder_Transaction::setIsTestMode(const bool &is_test_mode) {
    m_is_test_mode = is_test_mode;
    m_is_test_mode_isSet = true;
}

bool OAIOrder_Transaction::is_is_test_mode_Set() const{
    return m_is_test_mode_isSet;
}

bool OAIOrder_Transaction::is_is_test_mode_Valid() const{
    return m_is_test_mode_isValid;
}

QString OAIOrder_Transaction::getOrderId() const {
    return m_order_id;
}
void OAIOrder_Transaction::setOrderId(const QString &order_id) {
    m_order_id = order_id;
    m_order_id_isSet = true;
}

bool OAIOrder_Transaction::is_order_id_Set() const{
    return m_order_id_isSet;
}

bool OAIOrder_Transaction::is_order_id_Valid() const{
    return m_order_id_isValid;
}

QString OAIOrder_Transaction::getParentId() const {
    return m_parent_id;
}
void OAIOrder_Transaction::setParentId(const QString &parent_id) {
    m_parent_id = parent_id;
    m_parent_id_isSet = true;
}

bool OAIOrder_Transaction::is_parent_id_Set() const{
    return m_parent_id_isSet;
}

bool OAIOrder_Transaction::is_parent_id_Valid() const{
    return m_parent_id_isValid;
}

QString OAIOrder_Transaction::getReferenceNumber() const {
    return m_reference_number;
}
void OAIOrder_Transaction::setReferenceNumber(const QString &reference_number) {
    m_reference_number = reference_number;
    m_reference_number_isSet = true;
}

bool OAIOrder_Transaction::is_reference_number_Set() const{
    return m_reference_number_isSet;
}

bool OAIOrder_Transaction::is_reference_number_Valid() const{
    return m_reference_number_isValid;
}

double OAIOrder_Transaction::getSettlementAmount() const {
    return m_settlement_amount;
}
void OAIOrder_Transaction::setSettlementAmount(const double &settlement_amount) {
    m_settlement_amount = settlement_amount;
    m_settlement_amount_isSet = true;
}

bool OAIOrder_Transaction::is_settlement_amount_Set() const{
    return m_settlement_amount_isSet;
}

bool OAIOrder_Transaction::is_settlement_amount_Valid() const{
    return m_settlement_amount_isValid;
}

OAIA2CDateTime OAIOrder_Transaction::getSettlementCreatedTime() const {
    return m_settlement_created_time;
}
void OAIOrder_Transaction::setSettlementCreatedTime(const OAIA2CDateTime &settlement_created_time) {
    m_settlement_created_time = settlement_created_time;
    m_settlement_created_time_isSet = true;
}

bool OAIOrder_Transaction::is_settlement_created_time_Set() const{
    return m_settlement_created_time_isSet;
}

bool OAIOrder_Transaction::is_settlement_created_time_Valid() const{
    return m_settlement_created_time_isValid;
}

QString OAIOrder_Transaction::getSettlementCurrency() const {
    return m_settlement_currency;
}
void OAIOrder_Transaction::setSettlementCurrency(const QString &settlement_currency) {
    m_settlement_currency = settlement_currency;
    m_settlement_currency_isSet = true;
}

bool OAIOrder_Transaction::is_settlement_currency_Set() const{
    return m_settlement_currency_isSet;
}

bool OAIOrder_Transaction::is_settlement_currency_Valid() const{
    return m_settlement_currency_isValid;
}

QString OAIOrder_Transaction::getStatus() const {
    return m_status;
}
void OAIOrder_Transaction::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIOrder_Transaction::is_status_Set() const{
    return m_status_isSet;
}

bool OAIOrder_Transaction::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIOrder_Transaction::getTransactionId() const {
    return m_transaction_id;
}
void OAIOrder_Transaction::setTransactionId(const QString &transaction_id) {
    m_transaction_id = transaction_id;
    m_transaction_id_isSet = true;
}

bool OAIOrder_Transaction::is_transaction_id_Set() const{
    return m_transaction_id_isSet;
}

bool OAIOrder_Transaction::is_transaction_id_Valid() const{
    return m_transaction_id_isValid;
}

bool OAIOrder_Transaction::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_additional_fields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_avs_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_avs_postal_resp_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_avs_street_resp_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_card_bin_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_card_brand_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_card_last_four_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_time.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_fields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cvv_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cvv_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gateway_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_test_mode_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reference_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_settlement_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_settlement_created_time.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_settlement_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transaction_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrder_Transaction::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
