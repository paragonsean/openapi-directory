/**
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICoupon_Code.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICoupon_Code::OAICoupon_Code(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICoupon_Code::OAICoupon_Code() {
    this->initializeModel();
}

OAICoupon_Code::~OAICoupon_Code() {}

void OAICoupon_Code::initializeModel() {

    m_additional_fields_isSet = false;
    m_additional_fields_isValid = false;

    m_code_isSet = false;
    m_code_isValid = false;

    m_custom_fields_isSet = false;
    m_custom_fields_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_used_times_isSet = false;
    m_used_times_isValid = false;
}

void OAICoupon_Code::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICoupon_Code::fromJsonObject(QJsonObject json) {

    m_additional_fields_isValid = ::OpenAPI::fromJsonValue(m_additional_fields, json[QString("additional_fields")]);
    m_additional_fields_isSet = !json[QString("additional_fields")].isNull() && m_additional_fields_isValid;

    m_code_isValid = ::OpenAPI::fromJsonValue(m_code, json[QString("code")]);
    m_code_isSet = !json[QString("code")].isNull() && m_code_isValid;

    m_custom_fields_isValid = ::OpenAPI::fromJsonValue(m_custom_fields, json[QString("custom_fields")]);
    m_custom_fields_isSet = !json[QString("custom_fields")].isNull() && m_custom_fields_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_used_times_isValid = ::OpenAPI::fromJsonValue(m_used_times, json[QString("used_times")]);
    m_used_times_isSet = !json[QString("used_times")].isNull() && m_used_times_isValid;
}

QString OAICoupon_Code::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICoupon_Code::asJsonObject() const {
    QJsonObject obj;
    if (m_additional_fields_isSet) {
        obj.insert(QString("additional_fields"), ::OpenAPI::toJsonValue(m_additional_fields));
    }
    if (m_code_isSet) {
        obj.insert(QString("code"), ::OpenAPI::toJsonValue(m_code));
    }
    if (m_custom_fields_isSet) {
        obj.insert(QString("custom_fields"), ::OpenAPI::toJsonValue(m_custom_fields));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_used_times_isSet) {
        obj.insert(QString("used_times"), ::OpenAPI::toJsonValue(m_used_times));
    }
    return obj;
}

OAIObject OAICoupon_Code::getAdditionalFields() const {
    return m_additional_fields;
}
void OAICoupon_Code::setAdditionalFields(const OAIObject &additional_fields) {
    m_additional_fields = additional_fields;
    m_additional_fields_isSet = true;
}

bool OAICoupon_Code::is_additional_fields_Set() const{
    return m_additional_fields_isSet;
}

bool OAICoupon_Code::is_additional_fields_Valid() const{
    return m_additional_fields_isValid;
}

QString OAICoupon_Code::getCode() const {
    return m_code;
}
void OAICoupon_Code::setCode(const QString &code) {
    m_code = code;
    m_code_isSet = true;
}

bool OAICoupon_Code::is_code_Set() const{
    return m_code_isSet;
}

bool OAICoupon_Code::is_code_Valid() const{
    return m_code_isValid;
}

OAIObject OAICoupon_Code::getCustomFields() const {
    return m_custom_fields;
}
void OAICoupon_Code::setCustomFields(const OAIObject &custom_fields) {
    m_custom_fields = custom_fields;
    m_custom_fields_isSet = true;
}

bool OAICoupon_Code::is_custom_fields_Set() const{
    return m_custom_fields_isSet;
}

bool OAICoupon_Code::is_custom_fields_Valid() const{
    return m_custom_fields_isValid;
}

QString OAICoupon_Code::getId() const {
    return m_id;
}
void OAICoupon_Code::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICoupon_Code::is_id_Set() const{
    return m_id_isSet;
}

bool OAICoupon_Code::is_id_Valid() const{
    return m_id_isValid;
}

qint32 OAICoupon_Code::getUsedTimes() const {
    return m_used_times;
}
void OAICoupon_Code::setUsedTimes(const qint32 &used_times) {
    m_used_times = used_times;
    m_used_times_isSet = true;
}

bool OAICoupon_Code::is_used_times_Set() const{
    return m_used_times_isSet;
}

bool OAICoupon_Code::is_used_times_Valid() const{
    return m_used_times_isValid;
}

bool OAICoupon_Code::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_additional_fields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_fields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_used_times_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICoupon_Code::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
