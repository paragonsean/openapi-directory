/**
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICoupon.h
 *
 * 
 */

#ifndef OAICoupon_H
#define OAICoupon_H

#include <QJsonObject>

#include "OAIA2CDateTime.h"
#include "OAICoupon_Action.h"
#include "OAICoupon_Code.h"
#include "OAICoupon_Condition.h"
#include "OAICoupon_History.h"
#include "OAIObject.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICoupon_Action;
class OAICoupon_Code;
class OAICoupon_Condition;
class OAIA2CDateTime;
class OAICoupon_History;

class OAICoupon : public OAIObject {
public:
    OAICoupon();
    OAICoupon(QString json);
    ~OAICoupon() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAICoupon_Action> getActions() const;
    void setActions(const QList<OAICoupon_Action> &actions);
    bool is_actions_Set() const;
    bool is_actions_Valid() const;

    OAIObject getAdditionalFields() const;
    void setAdditionalFields(const OAIObject &additional_fields);
    bool is_additional_fields_Set() const;
    bool is_additional_fields_Valid() const;

    bool isAvail() const;
    void setAvail(const bool &avail);
    bool is_avail_Set() const;
    bool is_avail_Valid() const;

    QString getCode() const;
    void setCode(const QString &code);
    bool is_code_Set() const;
    bool is_code_Valid() const;

    QList<OAICoupon_Code> getCodes() const;
    void setCodes(const QList<OAICoupon_Code> &codes);
    bool is_codes_Set() const;
    bool is_codes_Valid() const;

    QList<OAICoupon_Condition> getConditions() const;
    void setConditions(const QList<OAICoupon_Condition> &conditions);
    bool is_conditions_Set() const;
    bool is_conditions_Valid() const;

    OAIObject getCustomFields() const;
    void setCustomFields(const OAIObject &custom_fields);
    bool is_custom_fields_Set() const;
    bool is_custom_fields_Valid() const;

    OAIA2CDateTime getDateEnd() const;
    void setDateEnd(const OAIA2CDateTime &date_end);
    bool is_date_end_Set() const;
    bool is_date_end_Valid() const;

    OAIA2CDateTime getDateStart() const;
    void setDateStart(const OAIA2CDateTime &date_start);
    bool is_date_start_Set() const;
    bool is_date_start_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getLogicOperator() const;
    void setLogicOperator(const QString &logic_operator);
    bool is_logic_operator_Set() const;
    bool is_logic_operator_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getPriority() const;
    void setPriority(const qint32 &priority);
    bool is_priority_Set() const;
    bool is_priority_Valid() const;

    QList<OAICoupon_History> getUsageHistory() const;
    void setUsageHistory(const QList<OAICoupon_History> &usage_history);
    bool is_usage_history_Set() const;
    bool is_usage_history_Valid() const;

    qint32 getUsageLimit() const;
    void setUsageLimit(const qint32 &usage_limit);
    bool is_usage_limit_Set() const;
    bool is_usage_limit_Valid() const;

    qint32 getUsageLimitPerCustomer() const;
    void setUsageLimitPerCustomer(const qint32 &usage_limit_per_customer);
    bool is_usage_limit_per_customer_Set() const;
    bool is_usage_limit_per_customer_Valid() const;

    qint32 getUsedTimes() const;
    void setUsedTimes(const qint32 &used_times);
    bool is_used_times_Set() const;
    bool is_used_times_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAICoupon_Action> m_actions;
    bool m_actions_isSet;
    bool m_actions_isValid;

    OAIObject m_additional_fields;
    bool m_additional_fields_isSet;
    bool m_additional_fields_isValid;

    bool m_avail;
    bool m_avail_isSet;
    bool m_avail_isValid;

    QString m_code;
    bool m_code_isSet;
    bool m_code_isValid;

    QList<OAICoupon_Code> m_codes;
    bool m_codes_isSet;
    bool m_codes_isValid;

    QList<OAICoupon_Condition> m_conditions;
    bool m_conditions_isSet;
    bool m_conditions_isValid;

    OAIObject m_custom_fields;
    bool m_custom_fields_isSet;
    bool m_custom_fields_isValid;

    OAIA2CDateTime m_date_end;
    bool m_date_end_isSet;
    bool m_date_end_isValid;

    OAIA2CDateTime m_date_start;
    bool m_date_start_isSet;
    bool m_date_start_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_logic_operator;
    bool m_logic_operator_isSet;
    bool m_logic_operator_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_priority;
    bool m_priority_isSet;
    bool m_priority_isValid;

    QList<OAICoupon_History> m_usage_history;
    bool m_usage_history_isSet;
    bool m_usage_history_isValid;

    qint32 m_usage_limit;
    bool m_usage_limit_isSet;
    bool m_usage_limit_isValid;

    qint32 m_usage_limit_per_customer;
    bool m_usage_limit_per_customer_isSet;
    bool m_usage_limit_per_customer_isValid;

    qint32 m_used_times;
    bool m_used_times_isSet;
    bool m_used_times_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICoupon)

#endif // OAICoupon_H
