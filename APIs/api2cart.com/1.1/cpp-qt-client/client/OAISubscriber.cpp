/**
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISubscriber.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISubscriber::OAISubscriber(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISubscriber::OAISubscriber() {
    this->initializeModel();
}

OAISubscriber::~OAISubscriber() {}

void OAISubscriber::initializeModel() {

    m_additional_fields_isSet = false;
    m_additional_fields_isValid = false;

    m_created_time_isSet = false;
    m_created_time_isValid = false;

    m_custom_fields_isSet = false;
    m_custom_fields_isValid = false;

    m_customer_id_isSet = false;
    m_customer_id_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_modified_time_isSet = false;
    m_modified_time_isValid = false;

    m_subscribed_isSet = false;
    m_subscribed_isValid = false;
}

void OAISubscriber::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISubscriber::fromJsonObject(QJsonObject json) {

    m_additional_fields_isValid = ::OpenAPI::fromJsonValue(m_additional_fields, json[QString("additional_fields")]);
    m_additional_fields_isSet = !json[QString("additional_fields")].isNull() && m_additional_fields_isValid;

    m_created_time_isValid = ::OpenAPI::fromJsonValue(m_created_time, json[QString("created_time")]);
    m_created_time_isSet = !json[QString("created_time")].isNull() && m_created_time_isValid;

    m_custom_fields_isValid = ::OpenAPI::fromJsonValue(m_custom_fields, json[QString("custom_fields")]);
    m_custom_fields_isSet = !json[QString("custom_fields")].isNull() && m_custom_fields_isValid;

    m_customer_id_isValid = ::OpenAPI::fromJsonValue(m_customer_id, json[QString("customer_id")]);
    m_customer_id_isSet = !json[QString("customer_id")].isNull() && m_customer_id_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("first_name")]);
    m_first_name_isSet = !json[QString("first_name")].isNull() && m_first_name_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("last_name")]);
    m_last_name_isSet = !json[QString("last_name")].isNull() && m_last_name_isValid;

    m_modified_time_isValid = ::OpenAPI::fromJsonValue(m_modified_time, json[QString("modified_time")]);
    m_modified_time_isSet = !json[QString("modified_time")].isNull() && m_modified_time_isValid;

    m_subscribed_isValid = ::OpenAPI::fromJsonValue(m_subscribed, json[QString("subscribed")]);
    m_subscribed_isSet = !json[QString("subscribed")].isNull() && m_subscribed_isValid;
}

QString OAISubscriber::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISubscriber::asJsonObject() const {
    QJsonObject obj;
    if (m_additional_fields_isSet) {
        obj.insert(QString("additional_fields"), ::OpenAPI::toJsonValue(m_additional_fields));
    }
    if (m_created_time_isSet) {
        obj.insert(QString("created_time"), ::OpenAPI::toJsonValue(m_created_time));
    }
    if (m_custom_fields_isSet) {
        obj.insert(QString("custom_fields"), ::OpenAPI::toJsonValue(m_custom_fields));
    }
    if (m_customer_id_isSet) {
        obj.insert(QString("customer_id"), ::OpenAPI::toJsonValue(m_customer_id));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_first_name_isSet) {
        obj.insert(QString("first_name"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("last_name"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_modified_time_isSet) {
        obj.insert(QString("modified_time"), ::OpenAPI::toJsonValue(m_modified_time));
    }
    if (m_subscribed_isSet) {
        obj.insert(QString("subscribed"), ::OpenAPI::toJsonValue(m_subscribed));
    }
    return obj;
}

OAIObject OAISubscriber::getAdditionalFields() const {
    return m_additional_fields;
}
void OAISubscriber::setAdditionalFields(const OAIObject &additional_fields) {
    m_additional_fields = additional_fields;
    m_additional_fields_isSet = true;
}

bool OAISubscriber::is_additional_fields_Set() const{
    return m_additional_fields_isSet;
}

bool OAISubscriber::is_additional_fields_Valid() const{
    return m_additional_fields_isValid;
}

QString OAISubscriber::getCreatedTime() const {
    return m_created_time;
}
void OAISubscriber::setCreatedTime(const QString &created_time) {
    m_created_time = created_time;
    m_created_time_isSet = true;
}

bool OAISubscriber::is_created_time_Set() const{
    return m_created_time_isSet;
}

bool OAISubscriber::is_created_time_Valid() const{
    return m_created_time_isValid;
}

OAIObject OAISubscriber::getCustomFields() const {
    return m_custom_fields;
}
void OAISubscriber::setCustomFields(const OAIObject &custom_fields) {
    m_custom_fields = custom_fields;
    m_custom_fields_isSet = true;
}

bool OAISubscriber::is_custom_fields_Set() const{
    return m_custom_fields_isSet;
}

bool OAISubscriber::is_custom_fields_Valid() const{
    return m_custom_fields_isValid;
}

QString OAISubscriber::getCustomerId() const {
    return m_customer_id;
}
void OAISubscriber::setCustomerId(const QString &customer_id) {
    m_customer_id = customer_id;
    m_customer_id_isSet = true;
}

bool OAISubscriber::is_customer_id_Set() const{
    return m_customer_id_isSet;
}

bool OAISubscriber::is_customer_id_Valid() const{
    return m_customer_id_isValid;
}

QString OAISubscriber::getEmail() const {
    return m_email;
}
void OAISubscriber::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAISubscriber::is_email_Set() const{
    return m_email_isSet;
}

bool OAISubscriber::is_email_Valid() const{
    return m_email_isValid;
}

QString OAISubscriber::getFirstName() const {
    return m_first_name;
}
void OAISubscriber::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAISubscriber::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAISubscriber::is_first_name_Valid() const{
    return m_first_name_isValid;
}

QString OAISubscriber::getId() const {
    return m_id;
}
void OAISubscriber::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAISubscriber::is_id_Set() const{
    return m_id_isSet;
}

bool OAISubscriber::is_id_Valid() const{
    return m_id_isValid;
}

QString OAISubscriber::getLastName() const {
    return m_last_name;
}
void OAISubscriber::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAISubscriber::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAISubscriber::is_last_name_Valid() const{
    return m_last_name_isValid;
}

QString OAISubscriber::getModifiedTime() const {
    return m_modified_time;
}
void OAISubscriber::setModifiedTime(const QString &modified_time) {
    m_modified_time = modified_time;
    m_modified_time_isSet = true;
}

bool OAISubscriber::is_modified_time_Set() const{
    return m_modified_time_isSet;
}

bool OAISubscriber::is_modified_time_Valid() const{
    return m_modified_time_isValid;
}

bool OAISubscriber::isSubscribed() const {
    return m_subscribed;
}
void OAISubscriber::setSubscribed(const bool &subscribed) {
    m_subscribed = subscribed;
    m_subscribed_isSet = true;
}

bool OAISubscriber::is_subscribed_Set() const{
    return m_subscribed_isSet;
}

bool OAISubscriber::is_subscribed_Valid() const{
    return m_subscribed_isValid;
}

bool OAISubscriber::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_additional_fields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_fields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_modified_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subscribed_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISubscriber::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
