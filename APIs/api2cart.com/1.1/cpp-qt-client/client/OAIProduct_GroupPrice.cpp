/**
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProduct_GroupPrice.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProduct_GroupPrice::OAIProduct_GroupPrice(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProduct_GroupPrice::OAIProduct_GroupPrice() {
    this->initializeModel();
}

OAIProduct_GroupPrice::~OAIProduct_GroupPrice() {}

void OAIProduct_GroupPrice::initializeModel() {

    m_additional_fields_isSet = false;
    m_additional_fields_isValid = false;

    m_custom_fields_isSet = false;
    m_custom_fields_isValid = false;

    m_expire_time_isSet = false;
    m_expire_time_isValid = false;

    m_group_id_isSet = false;
    m_group_id_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_price_isSet = false;
    m_price_isValid = false;

    m_quantity_isSet = false;
    m_quantity_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;

    m_store_id_isSet = false;
    m_store_id_isValid = false;
}

void OAIProduct_GroupPrice::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProduct_GroupPrice::fromJsonObject(QJsonObject json) {

    m_additional_fields_isValid = ::OpenAPI::fromJsonValue(m_additional_fields, json[QString("additional_fields")]);
    m_additional_fields_isSet = !json[QString("additional_fields")].isNull() && m_additional_fields_isValid;

    m_custom_fields_isValid = ::OpenAPI::fromJsonValue(m_custom_fields, json[QString("custom_fields")]);
    m_custom_fields_isSet = !json[QString("custom_fields")].isNull() && m_custom_fields_isValid;

    m_expire_time_isValid = ::OpenAPI::fromJsonValue(m_expire_time, json[QString("expire_time")]);
    m_expire_time_isSet = !json[QString("expire_time")].isNull() && m_expire_time_isValid;

    m_group_id_isValid = ::OpenAPI::fromJsonValue(m_group_id, json[QString("group_id")]);
    m_group_id_isSet = !json[QString("group_id")].isNull() && m_group_id_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_price_isValid = ::OpenAPI::fromJsonValue(m_price, json[QString("price")]);
    m_price_isSet = !json[QString("price")].isNull() && m_price_isValid;

    m_quantity_isValid = ::OpenAPI::fromJsonValue(m_quantity, json[QString("quantity")]);
    m_quantity_isSet = !json[QString("quantity")].isNull() && m_quantity_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("start_time")]);
    m_start_time_isSet = !json[QString("start_time")].isNull() && m_start_time_isValid;

    m_store_id_isValid = ::OpenAPI::fromJsonValue(m_store_id, json[QString("store_id")]);
    m_store_id_isSet = !json[QString("store_id")].isNull() && m_store_id_isValid;
}

QString OAIProduct_GroupPrice::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProduct_GroupPrice::asJsonObject() const {
    QJsonObject obj;
    if (m_additional_fields_isSet) {
        obj.insert(QString("additional_fields"), ::OpenAPI::toJsonValue(m_additional_fields));
    }
    if (m_custom_fields_isSet) {
        obj.insert(QString("custom_fields"), ::OpenAPI::toJsonValue(m_custom_fields));
    }
    if (m_expire_time_isSet) {
        obj.insert(QString("expire_time"), ::OpenAPI::toJsonValue(m_expire_time));
    }
    if (m_group_id_isSet) {
        obj.insert(QString("group_id"), ::OpenAPI::toJsonValue(m_group_id));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_price_isSet) {
        obj.insert(QString("price"), ::OpenAPI::toJsonValue(m_price));
    }
    if (m_quantity_isSet) {
        obj.insert(QString("quantity"), ::OpenAPI::toJsonValue(m_quantity));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("start_time"), ::OpenAPI::toJsonValue(m_start_time));
    }
    if (m_store_id_isSet) {
        obj.insert(QString("store_id"), ::OpenAPI::toJsonValue(m_store_id));
    }
    return obj;
}

OAIObject OAIProduct_GroupPrice::getAdditionalFields() const {
    return m_additional_fields;
}
void OAIProduct_GroupPrice::setAdditionalFields(const OAIObject &additional_fields) {
    m_additional_fields = additional_fields;
    m_additional_fields_isSet = true;
}

bool OAIProduct_GroupPrice::is_additional_fields_Set() const{
    return m_additional_fields_isSet;
}

bool OAIProduct_GroupPrice::is_additional_fields_Valid() const{
    return m_additional_fields_isValid;
}

OAIObject OAIProduct_GroupPrice::getCustomFields() const {
    return m_custom_fields;
}
void OAIProduct_GroupPrice::setCustomFields(const OAIObject &custom_fields) {
    m_custom_fields = custom_fields;
    m_custom_fields_isSet = true;
}

bool OAIProduct_GroupPrice::is_custom_fields_Set() const{
    return m_custom_fields_isSet;
}

bool OAIProduct_GroupPrice::is_custom_fields_Valid() const{
    return m_custom_fields_isValid;
}

QString OAIProduct_GroupPrice::getExpireTime() const {
    return m_expire_time;
}
void OAIProduct_GroupPrice::setExpireTime(const QString &expire_time) {
    m_expire_time = expire_time;
    m_expire_time_isSet = true;
}

bool OAIProduct_GroupPrice::is_expire_time_Set() const{
    return m_expire_time_isSet;
}

bool OAIProduct_GroupPrice::is_expire_time_Valid() const{
    return m_expire_time_isValid;
}

QString OAIProduct_GroupPrice::getGroupId() const {
    return m_group_id;
}
void OAIProduct_GroupPrice::setGroupId(const QString &group_id) {
    m_group_id = group_id;
    m_group_id_isSet = true;
}

bool OAIProduct_GroupPrice::is_group_id_Set() const{
    return m_group_id_isSet;
}

bool OAIProduct_GroupPrice::is_group_id_Valid() const{
    return m_group_id_isValid;
}

QString OAIProduct_GroupPrice::getId() const {
    return m_id;
}
void OAIProduct_GroupPrice::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIProduct_GroupPrice::is_id_Set() const{
    return m_id_isSet;
}

bool OAIProduct_GroupPrice::is_id_Valid() const{
    return m_id_isValid;
}

double OAIProduct_GroupPrice::getPrice() const {
    return m_price;
}
void OAIProduct_GroupPrice::setPrice(const double &price) {
    m_price = price;
    m_price_isSet = true;
}

bool OAIProduct_GroupPrice::is_price_Set() const{
    return m_price_isSet;
}

bool OAIProduct_GroupPrice::is_price_Valid() const{
    return m_price_isValid;
}

double OAIProduct_GroupPrice::getQuantity() const {
    return m_quantity;
}
void OAIProduct_GroupPrice::setQuantity(const double &quantity) {
    m_quantity = quantity;
    m_quantity_isSet = true;
}

bool OAIProduct_GroupPrice::is_quantity_Set() const{
    return m_quantity_isSet;
}

bool OAIProduct_GroupPrice::is_quantity_Valid() const{
    return m_quantity_isValid;
}

QString OAIProduct_GroupPrice::getStartTime() const {
    return m_start_time;
}
void OAIProduct_GroupPrice::setStartTime(const QString &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIProduct_GroupPrice::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIProduct_GroupPrice::is_start_time_Valid() const{
    return m_start_time_isValid;
}

QString OAIProduct_GroupPrice::getStoreId() const {
    return m_store_id;
}
void OAIProduct_GroupPrice::setStoreId(const QString &store_id) {
    m_store_id = store_id;
    m_store_id_isSet = true;
}

bool OAIProduct_GroupPrice::is_store_id_Set() const{
    return m_store_id_isSet;
}

bool OAIProduct_GroupPrice::is_store_id_Valid() const{
    return m_store_id_isValid;
}

bool OAIProduct_GroupPrice::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_additional_fields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_fields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expire_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_group_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_store_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProduct_GroupPrice::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
