/**
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProduct_GroupItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProduct_GroupItem::OAIProduct_GroupItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProduct_GroupItem::OAIProduct_GroupItem() {
    this->initializeModel();
}

OAIProduct_GroupItem::~OAIProduct_GroupItem() {}

void OAIProduct_GroupItem::initializeModel() {

    m_additional_fields_isSet = false;
    m_additional_fields_isValid = false;

    m_child_item_id_isSet = false;
    m_child_item_id_isValid = false;

    m_custom_fields_isSet = false;
    m_custom_fields_isValid = false;

    m_default_qty_in_pack_isSet = false;
    m_default_qty_in_pack_isValid = false;

    m_is_qty_in_pack_fixed_isSet = false;
    m_is_qty_in_pack_fixed_isValid = false;

    m_product_id_isSet = false;
    m_product_id_isValid = false;
}

void OAIProduct_GroupItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProduct_GroupItem::fromJsonObject(QJsonObject json) {

    m_additional_fields_isValid = ::OpenAPI::fromJsonValue(m_additional_fields, json[QString("additional_fields")]);
    m_additional_fields_isSet = !json[QString("additional_fields")].isNull() && m_additional_fields_isValid;

    m_child_item_id_isValid = ::OpenAPI::fromJsonValue(m_child_item_id, json[QString("child_item_id")]);
    m_child_item_id_isSet = !json[QString("child_item_id")].isNull() && m_child_item_id_isValid;

    m_custom_fields_isValid = ::OpenAPI::fromJsonValue(m_custom_fields, json[QString("custom_fields")]);
    m_custom_fields_isSet = !json[QString("custom_fields")].isNull() && m_custom_fields_isValid;

    m_default_qty_in_pack_isValid = ::OpenAPI::fromJsonValue(m_default_qty_in_pack, json[QString("default_qty_in_pack")]);
    m_default_qty_in_pack_isSet = !json[QString("default_qty_in_pack")].isNull() && m_default_qty_in_pack_isValid;

    m_is_qty_in_pack_fixed_isValid = ::OpenAPI::fromJsonValue(m_is_qty_in_pack_fixed, json[QString("is_qty_in_pack_fixed")]);
    m_is_qty_in_pack_fixed_isSet = !json[QString("is_qty_in_pack_fixed")].isNull() && m_is_qty_in_pack_fixed_isValid;

    m_product_id_isValid = ::OpenAPI::fromJsonValue(m_product_id, json[QString("product_id")]);
    m_product_id_isSet = !json[QString("product_id")].isNull() && m_product_id_isValid;
}

QString OAIProduct_GroupItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProduct_GroupItem::asJsonObject() const {
    QJsonObject obj;
    if (m_additional_fields_isSet) {
        obj.insert(QString("additional_fields"), ::OpenAPI::toJsonValue(m_additional_fields));
    }
    if (m_child_item_id_isSet) {
        obj.insert(QString("child_item_id"), ::OpenAPI::toJsonValue(m_child_item_id));
    }
    if (m_custom_fields_isSet) {
        obj.insert(QString("custom_fields"), ::OpenAPI::toJsonValue(m_custom_fields));
    }
    if (m_default_qty_in_pack_isSet) {
        obj.insert(QString("default_qty_in_pack"), ::OpenAPI::toJsonValue(m_default_qty_in_pack));
    }
    if (m_is_qty_in_pack_fixed_isSet) {
        obj.insert(QString("is_qty_in_pack_fixed"), ::OpenAPI::toJsonValue(m_is_qty_in_pack_fixed));
    }
    if (m_product_id_isSet) {
        obj.insert(QString("product_id"), ::OpenAPI::toJsonValue(m_product_id));
    }
    return obj;
}

OAIObject OAIProduct_GroupItem::getAdditionalFields() const {
    return m_additional_fields;
}
void OAIProduct_GroupItem::setAdditionalFields(const OAIObject &additional_fields) {
    m_additional_fields = additional_fields;
    m_additional_fields_isSet = true;
}

bool OAIProduct_GroupItem::is_additional_fields_Set() const{
    return m_additional_fields_isSet;
}

bool OAIProduct_GroupItem::is_additional_fields_Valid() const{
    return m_additional_fields_isValid;
}

QString OAIProduct_GroupItem::getChildItemId() const {
    return m_child_item_id;
}
void OAIProduct_GroupItem::setChildItemId(const QString &child_item_id) {
    m_child_item_id = child_item_id;
    m_child_item_id_isSet = true;
}

bool OAIProduct_GroupItem::is_child_item_id_Set() const{
    return m_child_item_id_isSet;
}

bool OAIProduct_GroupItem::is_child_item_id_Valid() const{
    return m_child_item_id_isValid;
}

OAIObject OAIProduct_GroupItem::getCustomFields() const {
    return m_custom_fields;
}
void OAIProduct_GroupItem::setCustomFields(const OAIObject &custom_fields) {
    m_custom_fields = custom_fields;
    m_custom_fields_isSet = true;
}

bool OAIProduct_GroupItem::is_custom_fields_Set() const{
    return m_custom_fields_isSet;
}

bool OAIProduct_GroupItem::is_custom_fields_Valid() const{
    return m_custom_fields_isValid;
}

QString OAIProduct_GroupItem::getDefaultQtyInPack() const {
    return m_default_qty_in_pack;
}
void OAIProduct_GroupItem::setDefaultQtyInPack(const QString &default_qty_in_pack) {
    m_default_qty_in_pack = default_qty_in_pack;
    m_default_qty_in_pack_isSet = true;
}

bool OAIProduct_GroupItem::is_default_qty_in_pack_Set() const{
    return m_default_qty_in_pack_isSet;
}

bool OAIProduct_GroupItem::is_default_qty_in_pack_Valid() const{
    return m_default_qty_in_pack_isValid;
}

bool OAIProduct_GroupItem::isIsQtyInPackFixed() const {
    return m_is_qty_in_pack_fixed;
}
void OAIProduct_GroupItem::setIsQtyInPackFixed(const bool &is_qty_in_pack_fixed) {
    m_is_qty_in_pack_fixed = is_qty_in_pack_fixed;
    m_is_qty_in_pack_fixed_isSet = true;
}

bool OAIProduct_GroupItem::is_is_qty_in_pack_fixed_Set() const{
    return m_is_qty_in_pack_fixed_isSet;
}

bool OAIProduct_GroupItem::is_is_qty_in_pack_fixed_Valid() const{
    return m_is_qty_in_pack_fixed_isValid;
}

QString OAIProduct_GroupItem::getProductId() const {
    return m_product_id;
}
void OAIProduct_GroupItem::setProductId(const QString &product_id) {
    m_product_id = product_id;
    m_product_id_isSet = true;
}

bool OAIProduct_GroupItem::is_product_id_Set() const{
    return m_product_id_isSet;
}

bool OAIProduct_GroupItem::is_product_id_Valid() const{
    return m_product_id_isValid;
}

bool OAIProduct_GroupItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_additional_fields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_child_item_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_fields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_qty_in_pack_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_qty_in_pack_fixed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProduct_GroupItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
