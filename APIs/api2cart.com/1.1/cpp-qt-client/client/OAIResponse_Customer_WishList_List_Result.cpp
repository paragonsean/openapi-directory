/**
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIResponse_Customer_WishList_List_Result.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIResponse_Customer_WishList_List_Result::OAIResponse_Customer_WishList_List_Result(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIResponse_Customer_WishList_List_Result::OAIResponse_Customer_WishList_List_Result() {
    this->initializeModel();
}

OAIResponse_Customer_WishList_List_Result::~OAIResponse_Customer_WishList_List_Result() {}

void OAIResponse_Customer_WishList_List_Result::initializeModel() {

    m_additional_fields_isSet = false;
    m_additional_fields_isValid = false;

    m_custom_fields_isSet = false;
    m_custom_fields_isValid = false;

    m_total_count_isSet = false;
    m_total_count_isValid = false;

    m_wish_lists_isSet = false;
    m_wish_lists_isValid = false;
}

void OAIResponse_Customer_WishList_List_Result::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIResponse_Customer_WishList_List_Result::fromJsonObject(QJsonObject json) {

    m_additional_fields_isValid = ::OpenAPI::fromJsonValue(m_additional_fields, json[QString("additional_fields")]);
    m_additional_fields_isSet = !json[QString("additional_fields")].isNull() && m_additional_fields_isValid;

    m_custom_fields_isValid = ::OpenAPI::fromJsonValue(m_custom_fields, json[QString("custom_fields")]);
    m_custom_fields_isSet = !json[QString("custom_fields")].isNull() && m_custom_fields_isValid;

    m_total_count_isValid = ::OpenAPI::fromJsonValue(m_total_count, json[QString("total_count")]);
    m_total_count_isSet = !json[QString("total_count")].isNull() && m_total_count_isValid;

    m_wish_lists_isValid = ::OpenAPI::fromJsonValue(m_wish_lists, json[QString("wish_lists")]);
    m_wish_lists_isSet = !json[QString("wish_lists")].isNull() && m_wish_lists_isValid;
}

QString OAIResponse_Customer_WishList_List_Result::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIResponse_Customer_WishList_List_Result::asJsonObject() const {
    QJsonObject obj;
    if (m_additional_fields_isSet) {
        obj.insert(QString("additional_fields"), ::OpenAPI::toJsonValue(m_additional_fields));
    }
    if (m_custom_fields_isSet) {
        obj.insert(QString("custom_fields"), ::OpenAPI::toJsonValue(m_custom_fields));
    }
    if (m_total_count_isSet) {
        obj.insert(QString("total_count"), ::OpenAPI::toJsonValue(m_total_count));
    }
    if (m_wish_lists.size() > 0) {
        obj.insert(QString("wish_lists"), ::OpenAPI::toJsonValue(m_wish_lists));
    }
    return obj;
}

OAIObject OAIResponse_Customer_WishList_List_Result::getAdditionalFields() const {
    return m_additional_fields;
}
void OAIResponse_Customer_WishList_List_Result::setAdditionalFields(const OAIObject &additional_fields) {
    m_additional_fields = additional_fields;
    m_additional_fields_isSet = true;
}

bool OAIResponse_Customer_WishList_List_Result::is_additional_fields_Set() const{
    return m_additional_fields_isSet;
}

bool OAIResponse_Customer_WishList_List_Result::is_additional_fields_Valid() const{
    return m_additional_fields_isValid;
}

OAIObject OAIResponse_Customer_WishList_List_Result::getCustomFields() const {
    return m_custom_fields;
}
void OAIResponse_Customer_WishList_List_Result::setCustomFields(const OAIObject &custom_fields) {
    m_custom_fields = custom_fields;
    m_custom_fields_isSet = true;
}

bool OAIResponse_Customer_WishList_List_Result::is_custom_fields_Set() const{
    return m_custom_fields_isSet;
}

bool OAIResponse_Customer_WishList_List_Result::is_custom_fields_Valid() const{
    return m_custom_fields_isValid;
}

qint32 OAIResponse_Customer_WishList_List_Result::getTotalCount() const {
    return m_total_count;
}
void OAIResponse_Customer_WishList_List_Result::setTotalCount(const qint32 &total_count) {
    m_total_count = total_count;
    m_total_count_isSet = true;
}

bool OAIResponse_Customer_WishList_List_Result::is_total_count_Set() const{
    return m_total_count_isSet;
}

bool OAIResponse_Customer_WishList_List_Result::is_total_count_Valid() const{
    return m_total_count_isValid;
}

QList<OAICustomer_WishList> OAIResponse_Customer_WishList_List_Result::getWishLists() const {
    return m_wish_lists;
}
void OAIResponse_Customer_WishList_List_Result::setWishLists(const QList<OAICustomer_WishList> &wish_lists) {
    m_wish_lists = wish_lists;
    m_wish_lists_isSet = true;
}

bool OAIResponse_Customer_WishList_List_Result::is_wish_lists_Set() const{
    return m_wish_lists_isSet;
}

bool OAIResponse_Customer_WishList_List_Result::is_wish_lists_Valid() const{
    return m_wish_lists_isValid;
}

bool OAIResponse_Customer_WishList_List_Result::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_additional_fields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_fields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_wish_lists.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIResponse_Customer_WishList_List_Result::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
