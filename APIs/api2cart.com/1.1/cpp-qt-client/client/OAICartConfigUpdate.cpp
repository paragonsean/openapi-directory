/**
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICartConfigUpdate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICartConfigUpdate::OAICartConfigUpdate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICartConfigUpdate::OAICartConfigUpdate() {
    this->initializeModel();
}

OAICartConfigUpdate::~OAICartConfigUpdate() {}

void OAICartConfigUpdate::initializeModel() {

    m_custom_fields_isSet = false;
    m_custom_fields_isValid = false;

    m_db_tables_prefix_isSet = false;
    m_db_tables_prefix_isValid = false;

    m_store_id_isSet = false;
    m_store_id_isValid = false;
}

void OAICartConfigUpdate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICartConfigUpdate::fromJsonObject(QJsonObject json) {

    m_custom_fields_isValid = ::OpenAPI::fromJsonValue(m_custom_fields, json[QString("custom_fields")]);
    m_custom_fields_isSet = !json[QString("custom_fields")].isNull() && m_custom_fields_isValid;

    m_db_tables_prefix_isValid = ::OpenAPI::fromJsonValue(m_db_tables_prefix, json[QString("db_tables_prefix")]);
    m_db_tables_prefix_isSet = !json[QString("db_tables_prefix")].isNull() && m_db_tables_prefix_isValid;

    m_store_id_isValid = ::OpenAPI::fromJsonValue(m_store_id, json[QString("store_id")]);
    m_store_id_isSet = !json[QString("store_id")].isNull() && m_store_id_isValid;
}

QString OAICartConfigUpdate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICartConfigUpdate::asJsonObject() const {
    QJsonObject obj;
    if (m_custom_fields_isSet) {
        obj.insert(QString("custom_fields"), ::OpenAPI::toJsonValue(m_custom_fields));
    }
    if (m_db_tables_prefix_isSet) {
        obj.insert(QString("db_tables_prefix"), ::OpenAPI::toJsonValue(m_db_tables_prefix));
    }
    if (m_store_id_isSet) {
        obj.insert(QString("store_id"), ::OpenAPI::toJsonValue(m_store_id));
    }
    return obj;
}

OAIObject OAICartConfigUpdate::getCustomFields() const {
    return m_custom_fields;
}
void OAICartConfigUpdate::setCustomFields(const OAIObject &custom_fields) {
    m_custom_fields = custom_fields;
    m_custom_fields_isSet = true;
}

bool OAICartConfigUpdate::is_custom_fields_Set() const{
    return m_custom_fields_isSet;
}

bool OAICartConfigUpdate::is_custom_fields_Valid() const{
    return m_custom_fields_isValid;
}

QString OAICartConfigUpdate::getDbTablesPrefix() const {
    return m_db_tables_prefix;
}
void OAICartConfigUpdate::setDbTablesPrefix(const QString &db_tables_prefix) {
    m_db_tables_prefix = db_tables_prefix;
    m_db_tables_prefix_isSet = true;
}

bool OAICartConfigUpdate::is_db_tables_prefix_Set() const{
    return m_db_tables_prefix_isSet;
}

bool OAICartConfigUpdate::is_db_tables_prefix_Valid() const{
    return m_db_tables_prefix_isValid;
}

QString OAICartConfigUpdate::getStoreId() const {
    return m_store_id;
}
void OAICartConfigUpdate::setStoreId(const QString &store_id) {
    m_store_id = store_id;
    m_store_id_isSet = true;
}

bool OAICartConfigUpdate::is_store_id_Set() const{
    return m_store_id_isSet;
}

bool OAICartConfigUpdate::is_store_id_Valid() const{
    return m_store_id_isValid;
}

bool OAICartConfigUpdate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_custom_fields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_db_tables_prefix_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_store_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICartConfigUpdate::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
