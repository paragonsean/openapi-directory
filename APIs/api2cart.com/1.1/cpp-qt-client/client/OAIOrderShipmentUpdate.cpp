/**
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderShipmentUpdate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderShipmentUpdate::OAIOrderShipmentUpdate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderShipmentUpdate::OAIOrderShipmentUpdate() {
    this->initializeModel();
}

OAIOrderShipmentUpdate::~OAIOrderShipmentUpdate() {}

void OAIOrderShipmentUpdate::initializeModel() {

    m_is_shipped_isSet = false;
    m_is_shipped_isValid = false;

    m_order_id_isSet = false;
    m_order_id_isValid = false;

    m_replace_isSet = false;
    m_replace_isValid = false;

    m_shipment_id_isSet = false;
    m_shipment_id_isValid = false;

    m_store_id_isSet = false;
    m_store_id_isValid = false;

    m_tracking_link_isSet = false;
    m_tracking_link_isValid = false;

    m_tracking_numbers_isSet = false;
    m_tracking_numbers_isValid = false;
}

void OAIOrderShipmentUpdate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrderShipmentUpdate::fromJsonObject(QJsonObject json) {

    m_is_shipped_isValid = ::OpenAPI::fromJsonValue(m_is_shipped, json[QString("is_shipped")]);
    m_is_shipped_isSet = !json[QString("is_shipped")].isNull() && m_is_shipped_isValid;

    m_order_id_isValid = ::OpenAPI::fromJsonValue(m_order_id, json[QString("order_id")]);
    m_order_id_isSet = !json[QString("order_id")].isNull() && m_order_id_isValid;

    m_replace_isValid = ::OpenAPI::fromJsonValue(m_replace, json[QString("replace")]);
    m_replace_isSet = !json[QString("replace")].isNull() && m_replace_isValid;

    m_shipment_id_isValid = ::OpenAPI::fromJsonValue(m_shipment_id, json[QString("shipment_id")]);
    m_shipment_id_isSet = !json[QString("shipment_id")].isNull() && m_shipment_id_isValid;

    m_store_id_isValid = ::OpenAPI::fromJsonValue(m_store_id, json[QString("store_id")]);
    m_store_id_isSet = !json[QString("store_id")].isNull() && m_store_id_isValid;

    m_tracking_link_isValid = ::OpenAPI::fromJsonValue(m_tracking_link, json[QString("tracking_link")]);
    m_tracking_link_isSet = !json[QString("tracking_link")].isNull() && m_tracking_link_isValid;

    m_tracking_numbers_isValid = ::OpenAPI::fromJsonValue(m_tracking_numbers, json[QString("tracking_numbers")]);
    m_tracking_numbers_isSet = !json[QString("tracking_numbers")].isNull() && m_tracking_numbers_isValid;
}

QString OAIOrderShipmentUpdate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrderShipmentUpdate::asJsonObject() const {
    QJsonObject obj;
    if (m_is_shipped_isSet) {
        obj.insert(QString("is_shipped"), ::OpenAPI::toJsonValue(m_is_shipped));
    }
    if (m_order_id_isSet) {
        obj.insert(QString("order_id"), ::OpenAPI::toJsonValue(m_order_id));
    }
    if (m_replace_isSet) {
        obj.insert(QString("replace"), ::OpenAPI::toJsonValue(m_replace));
    }
    if (m_shipment_id_isSet) {
        obj.insert(QString("shipment_id"), ::OpenAPI::toJsonValue(m_shipment_id));
    }
    if (m_store_id_isSet) {
        obj.insert(QString("store_id"), ::OpenAPI::toJsonValue(m_store_id));
    }
    if (m_tracking_link_isSet) {
        obj.insert(QString("tracking_link"), ::OpenAPI::toJsonValue(m_tracking_link));
    }
    if (m_tracking_numbers.size() > 0) {
        obj.insert(QString("tracking_numbers"), ::OpenAPI::toJsonValue(m_tracking_numbers));
    }
    return obj;
}

bool OAIOrderShipmentUpdate::isIsShipped() const {
    return m_is_shipped;
}
void OAIOrderShipmentUpdate::setIsShipped(const bool &is_shipped) {
    m_is_shipped = is_shipped;
    m_is_shipped_isSet = true;
}

bool OAIOrderShipmentUpdate::is_is_shipped_Set() const{
    return m_is_shipped_isSet;
}

bool OAIOrderShipmentUpdate::is_is_shipped_Valid() const{
    return m_is_shipped_isValid;
}

QString OAIOrderShipmentUpdate::getOrderId() const {
    return m_order_id;
}
void OAIOrderShipmentUpdate::setOrderId(const QString &order_id) {
    m_order_id = order_id;
    m_order_id_isSet = true;
}

bool OAIOrderShipmentUpdate::is_order_id_Set() const{
    return m_order_id_isSet;
}

bool OAIOrderShipmentUpdate::is_order_id_Valid() const{
    return m_order_id_isValid;
}

bool OAIOrderShipmentUpdate::isReplace() const {
    return m_replace;
}
void OAIOrderShipmentUpdate::setReplace(const bool &replace) {
    m_replace = replace;
    m_replace_isSet = true;
}

bool OAIOrderShipmentUpdate::is_replace_Set() const{
    return m_replace_isSet;
}

bool OAIOrderShipmentUpdate::is_replace_Valid() const{
    return m_replace_isValid;
}

QString OAIOrderShipmentUpdate::getShipmentId() const {
    return m_shipment_id;
}
void OAIOrderShipmentUpdate::setShipmentId(const QString &shipment_id) {
    m_shipment_id = shipment_id;
    m_shipment_id_isSet = true;
}

bool OAIOrderShipmentUpdate::is_shipment_id_Set() const{
    return m_shipment_id_isSet;
}

bool OAIOrderShipmentUpdate::is_shipment_id_Valid() const{
    return m_shipment_id_isValid;
}

QString OAIOrderShipmentUpdate::getStoreId() const {
    return m_store_id;
}
void OAIOrderShipmentUpdate::setStoreId(const QString &store_id) {
    m_store_id = store_id;
    m_store_id_isSet = true;
}

bool OAIOrderShipmentUpdate::is_store_id_Set() const{
    return m_store_id_isSet;
}

bool OAIOrderShipmentUpdate::is_store_id_Valid() const{
    return m_store_id_isValid;
}

QString OAIOrderShipmentUpdate::getTrackingLink() const {
    return m_tracking_link;
}
void OAIOrderShipmentUpdate::setTrackingLink(const QString &tracking_link) {
    m_tracking_link = tracking_link;
    m_tracking_link_isSet = true;
}

bool OAIOrderShipmentUpdate::is_tracking_link_Set() const{
    return m_tracking_link_isSet;
}

bool OAIOrderShipmentUpdate::is_tracking_link_Valid() const{
    return m_tracking_link_isValid;
}

QList<OAIOrderShipmentAdd_tracking_numbers_inner> OAIOrderShipmentUpdate::getTrackingNumbers() const {
    return m_tracking_numbers;
}
void OAIOrderShipmentUpdate::setTrackingNumbers(const QList<OAIOrderShipmentAdd_tracking_numbers_inner> &tracking_numbers) {
    m_tracking_numbers = tracking_numbers;
    m_tracking_numbers_isSet = true;
}

bool OAIOrderShipmentUpdate::is_tracking_numbers_Set() const{
    return m_tracking_numbers_isSet;
}

bool OAIOrderShipmentUpdate::is_tracking_numbers_Valid() const{
    return m_tracking_numbers_isValid;
}

bool OAIOrderShipmentUpdate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_is_shipped_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_replace_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipment_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_store_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tracking_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tracking_numbers.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrderShipmentUpdate::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_shipment_id_isValid && true;
}

} // namespace OpenAPI
