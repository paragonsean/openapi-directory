/**
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIShipment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIShipment::OAIShipment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIShipment::OAIShipment() {
    this->initializeModel();
}

OAIShipment::~OAIShipment() {}

void OAIShipment::initializeModel() {

    m_additional_fields_isSet = false;
    m_additional_fields_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_custom_fields_isSet = false;
    m_custom_fields_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_is_shipped_isSet = false;
    m_is_shipped_isValid = false;

    m_items_isSet = false;
    m_items_isValid = false;

    m_modified_time_isSet = false;
    m_modified_time_isValid = false;

    m_order_id_isSet = false;
    m_order_id_isValid = false;

    m_shipment_provider_isSet = false;
    m_shipment_provider_isValid = false;

    m_tracking_numbers_isSet = false;
    m_tracking_numbers_isValid = false;

    m_warehouse_id_isSet = false;
    m_warehouse_id_isValid = false;
}

void OAIShipment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIShipment::fromJsonObject(QJsonObject json) {

    m_additional_fields_isValid = ::OpenAPI::fromJsonValue(m_additional_fields, json[QString("additional_fields")]);
    m_additional_fields_isSet = !json[QString("additional_fields")].isNull() && m_additional_fields_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_custom_fields_isValid = ::OpenAPI::fromJsonValue(m_custom_fields, json[QString("custom_fields")]);
    m_custom_fields_isSet = !json[QString("custom_fields")].isNull() && m_custom_fields_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_is_shipped_isValid = ::OpenAPI::fromJsonValue(m_is_shipped, json[QString("is_shipped")]);
    m_is_shipped_isSet = !json[QString("is_shipped")].isNull() && m_is_shipped_isValid;

    m_items_isValid = ::OpenAPI::fromJsonValue(m_items, json[QString("items")]);
    m_items_isSet = !json[QString("items")].isNull() && m_items_isValid;

    m_modified_time_isValid = ::OpenAPI::fromJsonValue(m_modified_time, json[QString("modified_time")]);
    m_modified_time_isSet = !json[QString("modified_time")].isNull() && m_modified_time_isValid;

    m_order_id_isValid = ::OpenAPI::fromJsonValue(m_order_id, json[QString("order_id")]);
    m_order_id_isSet = !json[QString("order_id")].isNull() && m_order_id_isValid;

    m_shipment_provider_isValid = ::OpenAPI::fromJsonValue(m_shipment_provider, json[QString("shipment_provider")]);
    m_shipment_provider_isSet = !json[QString("shipment_provider")].isNull() && m_shipment_provider_isValid;

    m_tracking_numbers_isValid = ::OpenAPI::fromJsonValue(m_tracking_numbers, json[QString("tracking_numbers")]);
    m_tracking_numbers_isSet = !json[QString("tracking_numbers")].isNull() && m_tracking_numbers_isValid;

    m_warehouse_id_isValid = ::OpenAPI::fromJsonValue(m_warehouse_id, json[QString("warehouse_id")]);
    m_warehouse_id_isSet = !json[QString("warehouse_id")].isNull() && m_warehouse_id_isValid;
}

QString OAIShipment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIShipment::asJsonObject() const {
    QJsonObject obj;
    if (m_additional_fields_isSet) {
        obj.insert(QString("additional_fields"), ::OpenAPI::toJsonValue(m_additional_fields));
    }
    if (m_created_at.isSet()) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_custom_fields_isSet) {
        obj.insert(QString("custom_fields"), ::OpenAPI::toJsonValue(m_custom_fields));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_is_shipped_isSet) {
        obj.insert(QString("is_shipped"), ::OpenAPI::toJsonValue(m_is_shipped));
    }
    if (m_items.size() > 0) {
        obj.insert(QString("items"), ::OpenAPI::toJsonValue(m_items));
    }
    if (m_modified_time.isSet()) {
        obj.insert(QString("modified_time"), ::OpenAPI::toJsonValue(m_modified_time));
    }
    if (m_order_id_isSet) {
        obj.insert(QString("order_id"), ::OpenAPI::toJsonValue(m_order_id));
    }
    if (m_shipment_provider_isSet) {
        obj.insert(QString("shipment_provider"), ::OpenAPI::toJsonValue(m_shipment_provider));
    }
    if (m_tracking_numbers.size() > 0) {
        obj.insert(QString("tracking_numbers"), ::OpenAPI::toJsonValue(m_tracking_numbers));
    }
    if (m_warehouse_id_isSet) {
        obj.insert(QString("warehouse_id"), ::OpenAPI::toJsonValue(m_warehouse_id));
    }
    return obj;
}

OAIObject OAIShipment::getAdditionalFields() const {
    return m_additional_fields;
}
void OAIShipment::setAdditionalFields(const OAIObject &additional_fields) {
    m_additional_fields = additional_fields;
    m_additional_fields_isSet = true;
}

bool OAIShipment::is_additional_fields_Set() const{
    return m_additional_fields_isSet;
}

bool OAIShipment::is_additional_fields_Valid() const{
    return m_additional_fields_isValid;
}

OAIA2CDateTime OAIShipment::getCreatedAt() const {
    return m_created_at;
}
void OAIShipment::setCreatedAt(const OAIA2CDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIShipment::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIShipment::is_created_at_Valid() const{
    return m_created_at_isValid;
}

OAIObject OAIShipment::getCustomFields() const {
    return m_custom_fields;
}
void OAIShipment::setCustomFields(const OAIObject &custom_fields) {
    m_custom_fields = custom_fields;
    m_custom_fields_isSet = true;
}

bool OAIShipment::is_custom_fields_Set() const{
    return m_custom_fields_isSet;
}

bool OAIShipment::is_custom_fields_Valid() const{
    return m_custom_fields_isValid;
}

QString OAIShipment::getId() const {
    return m_id;
}
void OAIShipment::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIShipment::is_id_Set() const{
    return m_id_isSet;
}

bool OAIShipment::is_id_Valid() const{
    return m_id_isValid;
}

bool OAIShipment::isIsShipped() const {
    return m_is_shipped;
}
void OAIShipment::setIsShipped(const bool &is_shipped) {
    m_is_shipped = is_shipped;
    m_is_shipped_isSet = true;
}

bool OAIShipment::is_is_shipped_Set() const{
    return m_is_shipped_isSet;
}

bool OAIShipment::is_is_shipped_Valid() const{
    return m_is_shipped_isValid;
}

QList<OAIShipment_Item> OAIShipment::getItems() const {
    return m_items;
}
void OAIShipment::setItems(const QList<OAIShipment_Item> &items) {
    m_items = items;
    m_items_isSet = true;
}

bool OAIShipment::is_items_Set() const{
    return m_items_isSet;
}

bool OAIShipment::is_items_Valid() const{
    return m_items_isValid;
}

OAIA2CDateTime OAIShipment::getModifiedTime() const {
    return m_modified_time;
}
void OAIShipment::setModifiedTime(const OAIA2CDateTime &modified_time) {
    m_modified_time = modified_time;
    m_modified_time_isSet = true;
}

bool OAIShipment::is_modified_time_Set() const{
    return m_modified_time_isSet;
}

bool OAIShipment::is_modified_time_Valid() const{
    return m_modified_time_isValid;
}

QString OAIShipment::getOrderId() const {
    return m_order_id;
}
void OAIShipment::setOrderId(const QString &order_id) {
    m_order_id = order_id;
    m_order_id_isSet = true;
}

bool OAIShipment::is_order_id_Set() const{
    return m_order_id_isSet;
}

bool OAIShipment::is_order_id_Valid() const{
    return m_order_id_isValid;
}

QString OAIShipment::getShipmentProvider() const {
    return m_shipment_provider;
}
void OAIShipment::setShipmentProvider(const QString &shipment_provider) {
    m_shipment_provider = shipment_provider;
    m_shipment_provider_isSet = true;
}

bool OAIShipment::is_shipment_provider_Set() const{
    return m_shipment_provider_isSet;
}

bool OAIShipment::is_shipment_provider_Valid() const{
    return m_shipment_provider_isValid;
}

QList<OAIShipment_TrackingNumber> OAIShipment::getTrackingNumbers() const {
    return m_tracking_numbers;
}
void OAIShipment::setTrackingNumbers(const QList<OAIShipment_TrackingNumber> &tracking_numbers) {
    m_tracking_numbers = tracking_numbers;
    m_tracking_numbers_isSet = true;
}

bool OAIShipment::is_tracking_numbers_Set() const{
    return m_tracking_numbers_isSet;
}

bool OAIShipment::is_tracking_numbers_Valid() const{
    return m_tracking_numbers_isValid;
}

QString OAIShipment::getWarehouseId() const {
    return m_warehouse_id;
}
void OAIShipment::setWarehouseId(const QString &warehouse_id) {
    m_warehouse_id = warehouse_id;
    m_warehouse_id_isSet = true;
}

bool OAIShipment::is_warehouse_id_Set() const{
    return m_warehouse_id_isSet;
}

bool OAIShipment::is_warehouse_id_Valid() const{
    return m_warehouse_id_isValid;
}

bool OAIShipment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_additional_fields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_fields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_shipped_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_items.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_modified_time.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipment_provider_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tracking_numbers.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_warehouse_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIShipment::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
