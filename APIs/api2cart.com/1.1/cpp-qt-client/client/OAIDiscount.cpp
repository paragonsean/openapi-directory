/**
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDiscount.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDiscount::OAIDiscount(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDiscount::OAIDiscount() {
    this->initializeModel();
}

OAIDiscount::~OAIDiscount() {}

void OAIDiscount::initializeModel() {

    m_additional_fields_isSet = false;
    m_additional_fields_isValid = false;

    m_custom_fields_isSet = false;
    m_custom_fields_isValid = false;

    m_customer_group_ids_isSet = false;
    m_customer_group_ids_isValid = false;

    m_from_time_isSet = false;
    m_from_time_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_modifier_type_isSet = false;
    m_modifier_type_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_sort_order_isSet = false;
    m_sort_order_isValid = false;

    m_to_time_isSet = false;
    m_to_time_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIDiscount::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDiscount::fromJsonObject(QJsonObject json) {

    m_additional_fields_isValid = ::OpenAPI::fromJsonValue(m_additional_fields, json[QString("additional_fields")]);
    m_additional_fields_isSet = !json[QString("additional_fields")].isNull() && m_additional_fields_isValid;

    m_custom_fields_isValid = ::OpenAPI::fromJsonValue(m_custom_fields, json[QString("custom_fields")]);
    m_custom_fields_isSet = !json[QString("custom_fields")].isNull() && m_custom_fields_isValid;

    m_customer_group_ids_isValid = ::OpenAPI::fromJsonValue(m_customer_group_ids, json[QString("customer_group_ids")]);
    m_customer_group_ids_isSet = !json[QString("customer_group_ids")].isNull() && m_customer_group_ids_isValid;

    m_from_time_isValid = ::OpenAPI::fromJsonValue(m_from_time, json[QString("from_time")]);
    m_from_time_isSet = !json[QString("from_time")].isNull() && m_from_time_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_modifier_type_isValid = ::OpenAPI::fromJsonValue(m_modifier_type, json[QString("modifier_type")]);
    m_modifier_type_isSet = !json[QString("modifier_type")].isNull() && m_modifier_type_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_sort_order_isValid = ::OpenAPI::fromJsonValue(m_sort_order, json[QString("sort_order")]);
    m_sort_order_isSet = !json[QString("sort_order")].isNull() && m_sort_order_isValid;

    m_to_time_isValid = ::OpenAPI::fromJsonValue(m_to_time, json[QString("to_time")]);
    m_to_time_isSet = !json[QString("to_time")].isNull() && m_to_time_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAIDiscount::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDiscount::asJsonObject() const {
    QJsonObject obj;
    if (m_additional_fields_isSet) {
        obj.insert(QString("additional_fields"), ::OpenAPI::toJsonValue(m_additional_fields));
    }
    if (m_custom_fields_isSet) {
        obj.insert(QString("custom_fields"), ::OpenAPI::toJsonValue(m_custom_fields));
    }
    if (m_customer_group_ids_isSet) {
        obj.insert(QString("customer_group_ids"), ::OpenAPI::toJsonValue(m_customer_group_ids));
    }
    if (m_from_time_isSet) {
        obj.insert(QString("from_time"), ::OpenAPI::toJsonValue(m_from_time));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_modifier_type_isSet) {
        obj.insert(QString("modifier_type"), ::OpenAPI::toJsonValue(m_modifier_type));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_sort_order_isSet) {
        obj.insert(QString("sort_order"), ::OpenAPI::toJsonValue(m_sort_order));
    }
    if (m_to_time_isSet) {
        obj.insert(QString("to_time"), ::OpenAPI::toJsonValue(m_to_time));
    }
    if (m_value_isSet) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

OAIObject OAIDiscount::getAdditionalFields() const {
    return m_additional_fields;
}
void OAIDiscount::setAdditionalFields(const OAIObject &additional_fields) {
    m_additional_fields = additional_fields;
    m_additional_fields_isSet = true;
}

bool OAIDiscount::is_additional_fields_Set() const{
    return m_additional_fields_isSet;
}

bool OAIDiscount::is_additional_fields_Valid() const{
    return m_additional_fields_isValid;
}

OAIObject OAIDiscount::getCustomFields() const {
    return m_custom_fields;
}
void OAIDiscount::setCustomFields(const OAIObject &custom_fields) {
    m_custom_fields = custom_fields;
    m_custom_fields_isSet = true;
}

bool OAIDiscount::is_custom_fields_Set() const{
    return m_custom_fields_isSet;
}

bool OAIDiscount::is_custom_fields_Valid() const{
    return m_custom_fields_isValid;
}

QString OAIDiscount::getCustomerGroupIds() const {
    return m_customer_group_ids;
}
void OAIDiscount::setCustomerGroupIds(const QString &customer_group_ids) {
    m_customer_group_ids = customer_group_ids;
    m_customer_group_ids_isSet = true;
}

bool OAIDiscount::is_customer_group_ids_Set() const{
    return m_customer_group_ids_isSet;
}

bool OAIDiscount::is_customer_group_ids_Valid() const{
    return m_customer_group_ids_isValid;
}

QString OAIDiscount::getFromTime() const {
    return m_from_time;
}
void OAIDiscount::setFromTime(const QString &from_time) {
    m_from_time = from_time;
    m_from_time_isSet = true;
}

bool OAIDiscount::is_from_time_Set() const{
    return m_from_time_isSet;
}

bool OAIDiscount::is_from_time_Valid() const{
    return m_from_time_isValid;
}

QString OAIDiscount::getId() const {
    return m_id;
}
void OAIDiscount::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIDiscount::is_id_Set() const{
    return m_id_isSet;
}

bool OAIDiscount::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIDiscount::getModifierType() const {
    return m_modifier_type;
}
void OAIDiscount::setModifierType(const QString &modifier_type) {
    m_modifier_type = modifier_type;
    m_modifier_type_isSet = true;
}

bool OAIDiscount::is_modifier_type_Set() const{
    return m_modifier_type_isSet;
}

bool OAIDiscount::is_modifier_type_Valid() const{
    return m_modifier_type_isValid;
}

QString OAIDiscount::getName() const {
    return m_name;
}
void OAIDiscount::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIDiscount::is_name_Set() const{
    return m_name_isSet;
}

bool OAIDiscount::is_name_Valid() const{
    return m_name_isValid;
}

qint32 OAIDiscount::getSortOrder() const {
    return m_sort_order;
}
void OAIDiscount::setSortOrder(const qint32 &sort_order) {
    m_sort_order = sort_order;
    m_sort_order_isSet = true;
}

bool OAIDiscount::is_sort_order_Set() const{
    return m_sort_order_isSet;
}

bool OAIDiscount::is_sort_order_Valid() const{
    return m_sort_order_isValid;
}

QString OAIDiscount::getToTime() const {
    return m_to_time;
}
void OAIDiscount::setToTime(const QString &to_time) {
    m_to_time = to_time;
    m_to_time_isSet = true;
}

bool OAIDiscount::is_to_time_Set() const{
    return m_to_time_isSet;
}

bool OAIDiscount::is_to_time_Valid() const{
    return m_to_time_isValid;
}

double OAIDiscount::getValue() const {
    return m_value;
}
void OAIDiscount::setValue(const double &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIDiscount::is_value_Set() const{
    return m_value_isSet;
}

bool OAIDiscount::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIDiscount::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_additional_fields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_fields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_group_ids_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_from_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_modifier_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sort_order_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_to_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDiscount::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
