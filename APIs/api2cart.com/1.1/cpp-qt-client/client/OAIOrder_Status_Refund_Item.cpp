/**
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrder_Status_Refund_Item.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrder_Status_Refund_Item::OAIOrder_Status_Refund_Item(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrder_Status_Refund_Item::OAIOrder_Status_Refund_Item() {
    this->initializeModel();
}

OAIOrder_Status_Refund_Item::~OAIOrder_Status_Refund_Item() {}

void OAIOrder_Status_Refund_Item::initializeModel() {

    m_additional_fields_isSet = false;
    m_additional_fields_isValid = false;

    m_custom_fields_isSet = false;
    m_custom_fields_isValid = false;

    m_order_product_id_isSet = false;
    m_order_product_id_isValid = false;

    m_product_id_isSet = false;
    m_product_id_isValid = false;

    m_qty_isSet = false;
    m_qty_isValid = false;

    m_refund_isSet = false;
    m_refund_isValid = false;

    m_variant_id_isSet = false;
    m_variant_id_isValid = false;
}

void OAIOrder_Status_Refund_Item::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrder_Status_Refund_Item::fromJsonObject(QJsonObject json) {

    m_additional_fields_isValid = ::OpenAPI::fromJsonValue(m_additional_fields, json[QString("additional_fields")]);
    m_additional_fields_isSet = !json[QString("additional_fields")].isNull() && m_additional_fields_isValid;

    m_custom_fields_isValid = ::OpenAPI::fromJsonValue(m_custom_fields, json[QString("custom_fields")]);
    m_custom_fields_isSet = !json[QString("custom_fields")].isNull() && m_custom_fields_isValid;

    m_order_product_id_isValid = ::OpenAPI::fromJsonValue(m_order_product_id, json[QString("order_product_id")]);
    m_order_product_id_isSet = !json[QString("order_product_id")].isNull() && m_order_product_id_isValid;

    m_product_id_isValid = ::OpenAPI::fromJsonValue(m_product_id, json[QString("product_id")]);
    m_product_id_isSet = !json[QString("product_id")].isNull() && m_product_id_isValid;

    m_qty_isValid = ::OpenAPI::fromJsonValue(m_qty, json[QString("qty")]);
    m_qty_isSet = !json[QString("qty")].isNull() && m_qty_isValid;

    m_refund_isValid = ::OpenAPI::fromJsonValue(m_refund, json[QString("refund")]);
    m_refund_isSet = !json[QString("refund")].isNull() && m_refund_isValid;

    m_variant_id_isValid = ::OpenAPI::fromJsonValue(m_variant_id, json[QString("variant_id")]);
    m_variant_id_isSet = !json[QString("variant_id")].isNull() && m_variant_id_isValid;
}

QString OAIOrder_Status_Refund_Item::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrder_Status_Refund_Item::asJsonObject() const {
    QJsonObject obj;
    if (m_additional_fields_isSet) {
        obj.insert(QString("additional_fields"), ::OpenAPI::toJsonValue(m_additional_fields));
    }
    if (m_custom_fields_isSet) {
        obj.insert(QString("custom_fields"), ::OpenAPI::toJsonValue(m_custom_fields));
    }
    if (m_order_product_id_isSet) {
        obj.insert(QString("order_product_id"), ::OpenAPI::toJsonValue(m_order_product_id));
    }
    if (m_product_id_isSet) {
        obj.insert(QString("product_id"), ::OpenAPI::toJsonValue(m_product_id));
    }
    if (m_qty_isSet) {
        obj.insert(QString("qty"), ::OpenAPI::toJsonValue(m_qty));
    }
    if (m_refund_isSet) {
        obj.insert(QString("refund"), ::OpenAPI::toJsonValue(m_refund));
    }
    if (m_variant_id_isSet) {
        obj.insert(QString("variant_id"), ::OpenAPI::toJsonValue(m_variant_id));
    }
    return obj;
}

OAIObject OAIOrder_Status_Refund_Item::getAdditionalFields() const {
    return m_additional_fields;
}
void OAIOrder_Status_Refund_Item::setAdditionalFields(const OAIObject &additional_fields) {
    m_additional_fields = additional_fields;
    m_additional_fields_isSet = true;
}

bool OAIOrder_Status_Refund_Item::is_additional_fields_Set() const{
    return m_additional_fields_isSet;
}

bool OAIOrder_Status_Refund_Item::is_additional_fields_Valid() const{
    return m_additional_fields_isValid;
}

OAIObject OAIOrder_Status_Refund_Item::getCustomFields() const {
    return m_custom_fields;
}
void OAIOrder_Status_Refund_Item::setCustomFields(const OAIObject &custom_fields) {
    m_custom_fields = custom_fields;
    m_custom_fields_isSet = true;
}

bool OAIOrder_Status_Refund_Item::is_custom_fields_Set() const{
    return m_custom_fields_isSet;
}

bool OAIOrder_Status_Refund_Item::is_custom_fields_Valid() const{
    return m_custom_fields_isValid;
}

QString OAIOrder_Status_Refund_Item::getOrderProductId() const {
    return m_order_product_id;
}
void OAIOrder_Status_Refund_Item::setOrderProductId(const QString &order_product_id) {
    m_order_product_id = order_product_id;
    m_order_product_id_isSet = true;
}

bool OAIOrder_Status_Refund_Item::is_order_product_id_Set() const{
    return m_order_product_id_isSet;
}

bool OAIOrder_Status_Refund_Item::is_order_product_id_Valid() const{
    return m_order_product_id_isValid;
}

QString OAIOrder_Status_Refund_Item::getProductId() const {
    return m_product_id;
}
void OAIOrder_Status_Refund_Item::setProductId(const QString &product_id) {
    m_product_id = product_id;
    m_product_id_isSet = true;
}

bool OAIOrder_Status_Refund_Item::is_product_id_Set() const{
    return m_product_id_isSet;
}

bool OAIOrder_Status_Refund_Item::is_product_id_Valid() const{
    return m_product_id_isValid;
}

double OAIOrder_Status_Refund_Item::getQty() const {
    return m_qty;
}
void OAIOrder_Status_Refund_Item::setQty(const double &qty) {
    m_qty = qty;
    m_qty_isSet = true;
}

bool OAIOrder_Status_Refund_Item::is_qty_Set() const{
    return m_qty_isSet;
}

bool OAIOrder_Status_Refund_Item::is_qty_Valid() const{
    return m_qty_isValid;
}

double OAIOrder_Status_Refund_Item::getRefund() const {
    return m_refund;
}
void OAIOrder_Status_Refund_Item::setRefund(const double &refund) {
    m_refund = refund;
    m_refund_isSet = true;
}

bool OAIOrder_Status_Refund_Item::is_refund_Set() const{
    return m_refund_isSet;
}

bool OAIOrder_Status_Refund_Item::is_refund_Valid() const{
    return m_refund_isValid;
}

QString OAIOrder_Status_Refund_Item::getVariantId() const {
    return m_variant_id;
}
void OAIOrder_Status_Refund_Item::setVariantId(const QString &variant_id) {
    m_variant_id = variant_id;
    m_variant_id_isSet = true;
}

bool OAIOrder_Status_Refund_Item::is_variant_id_Set() const{
    return m_variant_id_isSet;
}

bool OAIOrder_Status_Refund_Item::is_variant_id_Valid() const{
    return m_variant_id_isValid;
}

bool OAIOrder_Status_Refund_Item::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_additional_fields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_fields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_product_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_qty_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_refund_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_variant_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrder_Status_Refund_Item::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
