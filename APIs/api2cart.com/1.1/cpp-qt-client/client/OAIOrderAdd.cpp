/**
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderAdd.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderAdd::OAIOrderAdd(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderAdd::OAIOrderAdd() {
    this->initializeModel();
}

OAIOrderAdd::~OAIOrderAdd() {}

void OAIOrderAdd::initializeModel() {

    m_admin_comment_isSet = false;
    m_admin_comment_isValid = false;

    m_admin_private_comment_isSet = false;
    m_admin_private_comment_isValid = false;

    m_bill_address_1_isSet = false;
    m_bill_address_1_isValid = false;

    m_bill_address_2_isSet = false;
    m_bill_address_2_isValid = false;

    m_bill_city_isSet = false;
    m_bill_city_isValid = false;

    m_bill_company_isSet = false;
    m_bill_company_isValid = false;

    m_bill_country_isSet = false;
    m_bill_country_isValid = false;

    m_bill_fax_isSet = false;
    m_bill_fax_isValid = false;

    m_bill_first_name_isSet = false;
    m_bill_first_name_isValid = false;

    m_bill_last_name_isSet = false;
    m_bill_last_name_isValid = false;

    m_bill_phone_isSet = false;
    m_bill_phone_isValid = false;

    m_bill_postcode_isSet = false;
    m_bill_postcode_isValid = false;

    m_bill_state_isSet = false;
    m_bill_state_isValid = false;

    m_channel_id_isSet = false;
    m_channel_id_isValid = false;

    m_clear_cache_isSet = false;
    m_clear_cache_isValid = false;

    m_comment_isSet = false;
    m_comment_isValid = false;

    m_coupon_discount_isSet = false;
    m_coupon_discount_isValid = false;

    m_coupons_isSet = false;
    m_coupons_isValid = false;

    m_create_invoice_isSet = false;
    m_create_invoice_isValid = false;

    m_currency_isSet = false;
    m_currency_isValid = false;

    m_customer_birthday_isSet = false;
    m_customer_birthday_isValid = false;

    m_customer_email_isSet = false;
    m_customer_email_isValid = false;

    m_customer_fax_isSet = false;
    m_customer_fax_isValid = false;

    m_customer_first_name_isSet = false;
    m_customer_first_name_isValid = false;

    m_customer_last_name_isSet = false;
    m_customer_last_name_isValid = false;

    m_customer_phone_isSet = false;
    m_customer_phone_isValid = false;

    m_date_isSet = false;
    m_date_isValid = false;

    m_date_finished_isSet = false;
    m_date_finished_isValid = false;

    m_date_modified_isSet = false;
    m_date_modified_isValid = false;

    m_discount_isSet = false;
    m_discount_isValid = false;

    m_external_source_isSet = false;
    m_external_source_isValid = false;

    m_financial_status_isSet = false;
    m_financial_status_isValid = false;

    m_fulfillment_status_isSet = false;
    m_fulfillment_status_isValid = false;

    m_gift_certificate_discount_isSet = false;
    m_gift_certificate_discount_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_inventory_behaviour_isSet = false;
    m_inventory_behaviour_isValid = false;

    m_note_attributes_isSet = false;
    m_note_attributes_isValid = false;

    m_order_id_isSet = false;
    m_order_id_isValid = false;

    m_order_item_isSet = false;
    m_order_item_isValid = false;

    m_order_payment_method_isSet = false;
    m_order_payment_method_isValid = false;

    m_order_shipping_method_isSet = false;
    m_order_shipping_method_isValid = false;

    m_order_status_isSet = false;
    m_order_status_isValid = false;

    m_prices_inc_tax_isSet = false;
    m_prices_inc_tax_isValid = false;

    m_send_admin_notifications_isSet = false;
    m_send_admin_notifications_isValid = false;

    m_send_notifications_isSet = false;
    m_send_notifications_isValid = false;

    m_shipp_address_1_isSet = false;
    m_shipp_address_1_isValid = false;

    m_shipp_address_2_isSet = false;
    m_shipp_address_2_isValid = false;

    m_shipp_city_isSet = false;
    m_shipp_city_isValid = false;

    m_shipp_company_isSet = false;
    m_shipp_company_isValid = false;

    m_shipp_country_isSet = false;
    m_shipp_country_isValid = false;

    m_shipp_fax_isSet = false;
    m_shipp_fax_isValid = false;

    m_shipp_first_name_isSet = false;
    m_shipp_first_name_isValid = false;

    m_shipp_last_name_isSet = false;
    m_shipp_last_name_isValid = false;

    m_shipp_phone_isSet = false;
    m_shipp_phone_isValid = false;

    m_shipp_postcode_isSet = false;
    m_shipp_postcode_isValid = false;

    m_shipp_state_isSet = false;
    m_shipp_state_isValid = false;

    m_shipping_price_isSet = false;
    m_shipping_price_isValid = false;

    m_shipping_tax_isSet = false;
    m_shipping_tax_isValid = false;

    m_store_id_isSet = false;
    m_store_id_isValid = false;

    m_subtotal_price_isSet = false;
    m_subtotal_price_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;

    m_tax_price_isSet = false;
    m_tax_price_isValid = false;

    m_total_paid_isSet = false;
    m_total_paid_isValid = false;

    m_total_price_isSet = false;
    m_total_price_isValid = false;

    m_total_weight_isSet = false;
    m_total_weight_isValid = false;

    m_transaction_id_isSet = false;
    m_transaction_id_isValid = false;
}

void OAIOrderAdd::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrderAdd::fromJsonObject(QJsonObject json) {

    m_admin_comment_isValid = ::OpenAPI::fromJsonValue(m_admin_comment, json[QString("admin_comment")]);
    m_admin_comment_isSet = !json[QString("admin_comment")].isNull() && m_admin_comment_isValid;

    m_admin_private_comment_isValid = ::OpenAPI::fromJsonValue(m_admin_private_comment, json[QString("admin_private_comment")]);
    m_admin_private_comment_isSet = !json[QString("admin_private_comment")].isNull() && m_admin_private_comment_isValid;

    m_bill_address_1_isValid = ::OpenAPI::fromJsonValue(m_bill_address_1, json[QString("bill_address_1")]);
    m_bill_address_1_isSet = !json[QString("bill_address_1")].isNull() && m_bill_address_1_isValid;

    m_bill_address_2_isValid = ::OpenAPI::fromJsonValue(m_bill_address_2, json[QString("bill_address_2")]);
    m_bill_address_2_isSet = !json[QString("bill_address_2")].isNull() && m_bill_address_2_isValid;

    m_bill_city_isValid = ::OpenAPI::fromJsonValue(m_bill_city, json[QString("bill_city")]);
    m_bill_city_isSet = !json[QString("bill_city")].isNull() && m_bill_city_isValid;

    m_bill_company_isValid = ::OpenAPI::fromJsonValue(m_bill_company, json[QString("bill_company")]);
    m_bill_company_isSet = !json[QString("bill_company")].isNull() && m_bill_company_isValid;

    m_bill_country_isValid = ::OpenAPI::fromJsonValue(m_bill_country, json[QString("bill_country")]);
    m_bill_country_isSet = !json[QString("bill_country")].isNull() && m_bill_country_isValid;

    m_bill_fax_isValid = ::OpenAPI::fromJsonValue(m_bill_fax, json[QString("bill_fax")]);
    m_bill_fax_isSet = !json[QString("bill_fax")].isNull() && m_bill_fax_isValid;

    m_bill_first_name_isValid = ::OpenAPI::fromJsonValue(m_bill_first_name, json[QString("bill_first_name")]);
    m_bill_first_name_isSet = !json[QString("bill_first_name")].isNull() && m_bill_first_name_isValid;

    m_bill_last_name_isValid = ::OpenAPI::fromJsonValue(m_bill_last_name, json[QString("bill_last_name")]);
    m_bill_last_name_isSet = !json[QString("bill_last_name")].isNull() && m_bill_last_name_isValid;

    m_bill_phone_isValid = ::OpenAPI::fromJsonValue(m_bill_phone, json[QString("bill_phone")]);
    m_bill_phone_isSet = !json[QString("bill_phone")].isNull() && m_bill_phone_isValid;

    m_bill_postcode_isValid = ::OpenAPI::fromJsonValue(m_bill_postcode, json[QString("bill_postcode")]);
    m_bill_postcode_isSet = !json[QString("bill_postcode")].isNull() && m_bill_postcode_isValid;

    m_bill_state_isValid = ::OpenAPI::fromJsonValue(m_bill_state, json[QString("bill_state")]);
    m_bill_state_isSet = !json[QString("bill_state")].isNull() && m_bill_state_isValid;

    m_channel_id_isValid = ::OpenAPI::fromJsonValue(m_channel_id, json[QString("channel_id")]);
    m_channel_id_isSet = !json[QString("channel_id")].isNull() && m_channel_id_isValid;

    m_clear_cache_isValid = ::OpenAPI::fromJsonValue(m_clear_cache, json[QString("clear_cache")]);
    m_clear_cache_isSet = !json[QString("clear_cache")].isNull() && m_clear_cache_isValid;

    m_comment_isValid = ::OpenAPI::fromJsonValue(m_comment, json[QString("comment")]);
    m_comment_isSet = !json[QString("comment")].isNull() && m_comment_isValid;

    m_coupon_discount_isValid = ::OpenAPI::fromJsonValue(m_coupon_discount, json[QString("coupon_discount")]);
    m_coupon_discount_isSet = !json[QString("coupon_discount")].isNull() && m_coupon_discount_isValid;

    m_coupons_isValid = ::OpenAPI::fromJsonValue(m_coupons, json[QString("coupons")]);
    m_coupons_isSet = !json[QString("coupons")].isNull() && m_coupons_isValid;

    m_create_invoice_isValid = ::OpenAPI::fromJsonValue(m_create_invoice, json[QString("create_invoice")]);
    m_create_invoice_isSet = !json[QString("create_invoice")].isNull() && m_create_invoice_isValid;

    m_currency_isValid = ::OpenAPI::fromJsonValue(m_currency, json[QString("currency")]);
    m_currency_isSet = !json[QString("currency")].isNull() && m_currency_isValid;

    m_customer_birthday_isValid = ::OpenAPI::fromJsonValue(m_customer_birthday, json[QString("customer_birthday")]);
    m_customer_birthday_isSet = !json[QString("customer_birthday")].isNull() && m_customer_birthday_isValid;

    m_customer_email_isValid = ::OpenAPI::fromJsonValue(m_customer_email, json[QString("customer_email")]);
    m_customer_email_isSet = !json[QString("customer_email")].isNull() && m_customer_email_isValid;

    m_customer_fax_isValid = ::OpenAPI::fromJsonValue(m_customer_fax, json[QString("customer_fax")]);
    m_customer_fax_isSet = !json[QString("customer_fax")].isNull() && m_customer_fax_isValid;

    m_customer_first_name_isValid = ::OpenAPI::fromJsonValue(m_customer_first_name, json[QString("customer_first_name")]);
    m_customer_first_name_isSet = !json[QString("customer_first_name")].isNull() && m_customer_first_name_isValid;

    m_customer_last_name_isValid = ::OpenAPI::fromJsonValue(m_customer_last_name, json[QString("customer_last_name")]);
    m_customer_last_name_isSet = !json[QString("customer_last_name")].isNull() && m_customer_last_name_isValid;

    m_customer_phone_isValid = ::OpenAPI::fromJsonValue(m_customer_phone, json[QString("customer_phone")]);
    m_customer_phone_isSet = !json[QString("customer_phone")].isNull() && m_customer_phone_isValid;

    m_date_isValid = ::OpenAPI::fromJsonValue(m_date, json[QString("date")]);
    m_date_isSet = !json[QString("date")].isNull() && m_date_isValid;

    m_date_finished_isValid = ::OpenAPI::fromJsonValue(m_date_finished, json[QString("date_finished")]);
    m_date_finished_isSet = !json[QString("date_finished")].isNull() && m_date_finished_isValid;

    m_date_modified_isValid = ::OpenAPI::fromJsonValue(m_date_modified, json[QString("date_modified")]);
    m_date_modified_isSet = !json[QString("date_modified")].isNull() && m_date_modified_isValid;

    m_discount_isValid = ::OpenAPI::fromJsonValue(m_discount, json[QString("discount")]);
    m_discount_isSet = !json[QString("discount")].isNull() && m_discount_isValid;

    m_external_source_isValid = ::OpenAPI::fromJsonValue(m_external_source, json[QString("external_source")]);
    m_external_source_isSet = !json[QString("external_source")].isNull() && m_external_source_isValid;

    m_financial_status_isValid = ::OpenAPI::fromJsonValue(m_financial_status, json[QString("financial_status")]);
    m_financial_status_isSet = !json[QString("financial_status")].isNull() && m_financial_status_isValid;

    m_fulfillment_status_isValid = ::OpenAPI::fromJsonValue(m_fulfillment_status, json[QString("fulfillment_status")]);
    m_fulfillment_status_isSet = !json[QString("fulfillment_status")].isNull() && m_fulfillment_status_isValid;

    m_gift_certificate_discount_isValid = ::OpenAPI::fromJsonValue(m_gift_certificate_discount, json[QString("gift_certificate_discount")]);
    m_gift_certificate_discount_isSet = !json[QString("gift_certificate_discount")].isNull() && m_gift_certificate_discount_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_inventory_behaviour_isValid = ::OpenAPI::fromJsonValue(m_inventory_behaviour, json[QString("inventory_behaviour")]);
    m_inventory_behaviour_isSet = !json[QString("inventory_behaviour")].isNull() && m_inventory_behaviour_isValid;

    m_note_attributes_isValid = ::OpenAPI::fromJsonValue(m_note_attributes, json[QString("note_attributes")]);
    m_note_attributes_isSet = !json[QString("note_attributes")].isNull() && m_note_attributes_isValid;

    m_order_id_isValid = ::OpenAPI::fromJsonValue(m_order_id, json[QString("order_id")]);
    m_order_id_isSet = !json[QString("order_id")].isNull() && m_order_id_isValid;

    m_order_item_isValid = ::OpenAPI::fromJsonValue(m_order_item, json[QString("order_item")]);
    m_order_item_isSet = !json[QString("order_item")].isNull() && m_order_item_isValid;

    m_order_payment_method_isValid = ::OpenAPI::fromJsonValue(m_order_payment_method, json[QString("order_payment_method")]);
    m_order_payment_method_isSet = !json[QString("order_payment_method")].isNull() && m_order_payment_method_isValid;

    m_order_shipping_method_isValid = ::OpenAPI::fromJsonValue(m_order_shipping_method, json[QString("order_shipping_method")]);
    m_order_shipping_method_isSet = !json[QString("order_shipping_method")].isNull() && m_order_shipping_method_isValid;

    m_order_status_isValid = ::OpenAPI::fromJsonValue(m_order_status, json[QString("order_status")]);
    m_order_status_isSet = !json[QString("order_status")].isNull() && m_order_status_isValid;

    m_prices_inc_tax_isValid = ::OpenAPI::fromJsonValue(m_prices_inc_tax, json[QString("prices_inc_tax")]);
    m_prices_inc_tax_isSet = !json[QString("prices_inc_tax")].isNull() && m_prices_inc_tax_isValid;

    m_send_admin_notifications_isValid = ::OpenAPI::fromJsonValue(m_send_admin_notifications, json[QString("send_admin_notifications")]);
    m_send_admin_notifications_isSet = !json[QString("send_admin_notifications")].isNull() && m_send_admin_notifications_isValid;

    m_send_notifications_isValid = ::OpenAPI::fromJsonValue(m_send_notifications, json[QString("send_notifications")]);
    m_send_notifications_isSet = !json[QString("send_notifications")].isNull() && m_send_notifications_isValid;

    m_shipp_address_1_isValid = ::OpenAPI::fromJsonValue(m_shipp_address_1, json[QString("shipp_address_1")]);
    m_shipp_address_1_isSet = !json[QString("shipp_address_1")].isNull() && m_shipp_address_1_isValid;

    m_shipp_address_2_isValid = ::OpenAPI::fromJsonValue(m_shipp_address_2, json[QString("shipp_address_2")]);
    m_shipp_address_2_isSet = !json[QString("shipp_address_2")].isNull() && m_shipp_address_2_isValid;

    m_shipp_city_isValid = ::OpenAPI::fromJsonValue(m_shipp_city, json[QString("shipp_city")]);
    m_shipp_city_isSet = !json[QString("shipp_city")].isNull() && m_shipp_city_isValid;

    m_shipp_company_isValid = ::OpenAPI::fromJsonValue(m_shipp_company, json[QString("shipp_company")]);
    m_shipp_company_isSet = !json[QString("shipp_company")].isNull() && m_shipp_company_isValid;

    m_shipp_country_isValid = ::OpenAPI::fromJsonValue(m_shipp_country, json[QString("shipp_country")]);
    m_shipp_country_isSet = !json[QString("shipp_country")].isNull() && m_shipp_country_isValid;

    m_shipp_fax_isValid = ::OpenAPI::fromJsonValue(m_shipp_fax, json[QString("shipp_fax")]);
    m_shipp_fax_isSet = !json[QString("shipp_fax")].isNull() && m_shipp_fax_isValid;

    m_shipp_first_name_isValid = ::OpenAPI::fromJsonValue(m_shipp_first_name, json[QString("shipp_first_name")]);
    m_shipp_first_name_isSet = !json[QString("shipp_first_name")].isNull() && m_shipp_first_name_isValid;

    m_shipp_last_name_isValid = ::OpenAPI::fromJsonValue(m_shipp_last_name, json[QString("shipp_last_name")]);
    m_shipp_last_name_isSet = !json[QString("shipp_last_name")].isNull() && m_shipp_last_name_isValid;

    m_shipp_phone_isValid = ::OpenAPI::fromJsonValue(m_shipp_phone, json[QString("shipp_phone")]);
    m_shipp_phone_isSet = !json[QString("shipp_phone")].isNull() && m_shipp_phone_isValid;

    m_shipp_postcode_isValid = ::OpenAPI::fromJsonValue(m_shipp_postcode, json[QString("shipp_postcode")]);
    m_shipp_postcode_isSet = !json[QString("shipp_postcode")].isNull() && m_shipp_postcode_isValid;

    m_shipp_state_isValid = ::OpenAPI::fromJsonValue(m_shipp_state, json[QString("shipp_state")]);
    m_shipp_state_isSet = !json[QString("shipp_state")].isNull() && m_shipp_state_isValid;

    m_shipping_price_isValid = ::OpenAPI::fromJsonValue(m_shipping_price, json[QString("shipping_price")]);
    m_shipping_price_isSet = !json[QString("shipping_price")].isNull() && m_shipping_price_isValid;

    m_shipping_tax_isValid = ::OpenAPI::fromJsonValue(m_shipping_tax, json[QString("shipping_tax")]);
    m_shipping_tax_isSet = !json[QString("shipping_tax")].isNull() && m_shipping_tax_isValid;

    m_store_id_isValid = ::OpenAPI::fromJsonValue(m_store_id, json[QString("store_id")]);
    m_store_id_isSet = !json[QString("store_id")].isNull() && m_store_id_isValid;

    m_subtotal_price_isValid = ::OpenAPI::fromJsonValue(m_subtotal_price, json[QString("subtotal_price")]);
    m_subtotal_price_isSet = !json[QString("subtotal_price")].isNull() && m_subtotal_price_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("tags")]);
    m_tags_isSet = !json[QString("tags")].isNull() && m_tags_isValid;

    m_tax_price_isValid = ::OpenAPI::fromJsonValue(m_tax_price, json[QString("tax_price")]);
    m_tax_price_isSet = !json[QString("tax_price")].isNull() && m_tax_price_isValid;

    m_total_paid_isValid = ::OpenAPI::fromJsonValue(m_total_paid, json[QString("total_paid")]);
    m_total_paid_isSet = !json[QString("total_paid")].isNull() && m_total_paid_isValid;

    m_total_price_isValid = ::OpenAPI::fromJsonValue(m_total_price, json[QString("total_price")]);
    m_total_price_isSet = !json[QString("total_price")].isNull() && m_total_price_isValid;

    m_total_weight_isValid = ::OpenAPI::fromJsonValue(m_total_weight, json[QString("total_weight")]);
    m_total_weight_isSet = !json[QString("total_weight")].isNull() && m_total_weight_isValid;

    m_transaction_id_isValid = ::OpenAPI::fromJsonValue(m_transaction_id, json[QString("transaction_id")]);
    m_transaction_id_isSet = !json[QString("transaction_id")].isNull() && m_transaction_id_isValid;
}

QString OAIOrderAdd::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrderAdd::asJsonObject() const {
    QJsonObject obj;
    if (m_admin_comment_isSet) {
        obj.insert(QString("admin_comment"), ::OpenAPI::toJsonValue(m_admin_comment));
    }
    if (m_admin_private_comment_isSet) {
        obj.insert(QString("admin_private_comment"), ::OpenAPI::toJsonValue(m_admin_private_comment));
    }
    if (m_bill_address_1_isSet) {
        obj.insert(QString("bill_address_1"), ::OpenAPI::toJsonValue(m_bill_address_1));
    }
    if (m_bill_address_2_isSet) {
        obj.insert(QString("bill_address_2"), ::OpenAPI::toJsonValue(m_bill_address_2));
    }
    if (m_bill_city_isSet) {
        obj.insert(QString("bill_city"), ::OpenAPI::toJsonValue(m_bill_city));
    }
    if (m_bill_company_isSet) {
        obj.insert(QString("bill_company"), ::OpenAPI::toJsonValue(m_bill_company));
    }
    if (m_bill_country_isSet) {
        obj.insert(QString("bill_country"), ::OpenAPI::toJsonValue(m_bill_country));
    }
    if (m_bill_fax_isSet) {
        obj.insert(QString("bill_fax"), ::OpenAPI::toJsonValue(m_bill_fax));
    }
    if (m_bill_first_name_isSet) {
        obj.insert(QString("bill_first_name"), ::OpenAPI::toJsonValue(m_bill_first_name));
    }
    if (m_bill_last_name_isSet) {
        obj.insert(QString("bill_last_name"), ::OpenAPI::toJsonValue(m_bill_last_name));
    }
    if (m_bill_phone_isSet) {
        obj.insert(QString("bill_phone"), ::OpenAPI::toJsonValue(m_bill_phone));
    }
    if (m_bill_postcode_isSet) {
        obj.insert(QString("bill_postcode"), ::OpenAPI::toJsonValue(m_bill_postcode));
    }
    if (m_bill_state_isSet) {
        obj.insert(QString("bill_state"), ::OpenAPI::toJsonValue(m_bill_state));
    }
    if (m_channel_id_isSet) {
        obj.insert(QString("channel_id"), ::OpenAPI::toJsonValue(m_channel_id));
    }
    if (m_clear_cache_isSet) {
        obj.insert(QString("clear_cache"), ::OpenAPI::toJsonValue(m_clear_cache));
    }
    if (m_comment_isSet) {
        obj.insert(QString("comment"), ::OpenAPI::toJsonValue(m_comment));
    }
    if (m_coupon_discount_isSet) {
        obj.insert(QString("coupon_discount"), ::OpenAPI::toJsonValue(m_coupon_discount));
    }
    if (m_coupons.size() > 0) {
        obj.insert(QString("coupons"), ::OpenAPI::toJsonValue(m_coupons));
    }
    if (m_create_invoice_isSet) {
        obj.insert(QString("create_invoice"), ::OpenAPI::toJsonValue(m_create_invoice));
    }
    if (m_currency_isSet) {
        obj.insert(QString("currency"), ::OpenAPI::toJsonValue(m_currency));
    }
    if (m_customer_birthday_isSet) {
        obj.insert(QString("customer_birthday"), ::OpenAPI::toJsonValue(m_customer_birthday));
    }
    if (m_customer_email_isSet) {
        obj.insert(QString("customer_email"), ::OpenAPI::toJsonValue(m_customer_email));
    }
    if (m_customer_fax_isSet) {
        obj.insert(QString("customer_fax"), ::OpenAPI::toJsonValue(m_customer_fax));
    }
    if (m_customer_first_name_isSet) {
        obj.insert(QString("customer_first_name"), ::OpenAPI::toJsonValue(m_customer_first_name));
    }
    if (m_customer_last_name_isSet) {
        obj.insert(QString("customer_last_name"), ::OpenAPI::toJsonValue(m_customer_last_name));
    }
    if (m_customer_phone_isSet) {
        obj.insert(QString("customer_phone"), ::OpenAPI::toJsonValue(m_customer_phone));
    }
    if (m_date_isSet) {
        obj.insert(QString("date"), ::OpenAPI::toJsonValue(m_date));
    }
    if (m_date_finished_isSet) {
        obj.insert(QString("date_finished"), ::OpenAPI::toJsonValue(m_date_finished));
    }
    if (m_date_modified_isSet) {
        obj.insert(QString("date_modified"), ::OpenAPI::toJsonValue(m_date_modified));
    }
    if (m_discount_isSet) {
        obj.insert(QString("discount"), ::OpenAPI::toJsonValue(m_discount));
    }
    if (m_external_source_isSet) {
        obj.insert(QString("external_source"), ::OpenAPI::toJsonValue(m_external_source));
    }
    if (m_financial_status_isSet) {
        obj.insert(QString("financial_status"), ::OpenAPI::toJsonValue(m_financial_status));
    }
    if (m_fulfillment_status_isSet) {
        obj.insert(QString("fulfillment_status"), ::OpenAPI::toJsonValue(m_fulfillment_status));
    }
    if (m_gift_certificate_discount_isSet) {
        obj.insert(QString("gift_certificate_discount"), ::OpenAPI::toJsonValue(m_gift_certificate_discount));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_inventory_behaviour_isSet) {
        obj.insert(QString("inventory_behaviour"), ::OpenAPI::toJsonValue(m_inventory_behaviour));
    }
    if (m_note_attributes.size() > 0) {
        obj.insert(QString("note_attributes"), ::OpenAPI::toJsonValue(m_note_attributes));
    }
    if (m_order_id_isSet) {
        obj.insert(QString("order_id"), ::OpenAPI::toJsonValue(m_order_id));
    }
    if (m_order_item.size() > 0) {
        obj.insert(QString("order_item"), ::OpenAPI::toJsonValue(m_order_item));
    }
    if (m_order_payment_method_isSet) {
        obj.insert(QString("order_payment_method"), ::OpenAPI::toJsonValue(m_order_payment_method));
    }
    if (m_order_shipping_method_isSet) {
        obj.insert(QString("order_shipping_method"), ::OpenAPI::toJsonValue(m_order_shipping_method));
    }
    if (m_order_status_isSet) {
        obj.insert(QString("order_status"), ::OpenAPI::toJsonValue(m_order_status));
    }
    if (m_prices_inc_tax_isSet) {
        obj.insert(QString("prices_inc_tax"), ::OpenAPI::toJsonValue(m_prices_inc_tax));
    }
    if (m_send_admin_notifications_isSet) {
        obj.insert(QString("send_admin_notifications"), ::OpenAPI::toJsonValue(m_send_admin_notifications));
    }
    if (m_send_notifications_isSet) {
        obj.insert(QString("send_notifications"), ::OpenAPI::toJsonValue(m_send_notifications));
    }
    if (m_shipp_address_1_isSet) {
        obj.insert(QString("shipp_address_1"), ::OpenAPI::toJsonValue(m_shipp_address_1));
    }
    if (m_shipp_address_2_isSet) {
        obj.insert(QString("shipp_address_2"), ::OpenAPI::toJsonValue(m_shipp_address_2));
    }
    if (m_shipp_city_isSet) {
        obj.insert(QString("shipp_city"), ::OpenAPI::toJsonValue(m_shipp_city));
    }
    if (m_shipp_company_isSet) {
        obj.insert(QString("shipp_company"), ::OpenAPI::toJsonValue(m_shipp_company));
    }
    if (m_shipp_country_isSet) {
        obj.insert(QString("shipp_country"), ::OpenAPI::toJsonValue(m_shipp_country));
    }
    if (m_shipp_fax_isSet) {
        obj.insert(QString("shipp_fax"), ::OpenAPI::toJsonValue(m_shipp_fax));
    }
    if (m_shipp_first_name_isSet) {
        obj.insert(QString("shipp_first_name"), ::OpenAPI::toJsonValue(m_shipp_first_name));
    }
    if (m_shipp_last_name_isSet) {
        obj.insert(QString("shipp_last_name"), ::OpenAPI::toJsonValue(m_shipp_last_name));
    }
    if (m_shipp_phone_isSet) {
        obj.insert(QString("shipp_phone"), ::OpenAPI::toJsonValue(m_shipp_phone));
    }
    if (m_shipp_postcode_isSet) {
        obj.insert(QString("shipp_postcode"), ::OpenAPI::toJsonValue(m_shipp_postcode));
    }
    if (m_shipp_state_isSet) {
        obj.insert(QString("shipp_state"), ::OpenAPI::toJsonValue(m_shipp_state));
    }
    if (m_shipping_price_isSet) {
        obj.insert(QString("shipping_price"), ::OpenAPI::toJsonValue(m_shipping_price));
    }
    if (m_shipping_tax_isSet) {
        obj.insert(QString("shipping_tax"), ::OpenAPI::toJsonValue(m_shipping_tax));
    }
    if (m_store_id_isSet) {
        obj.insert(QString("store_id"), ::OpenAPI::toJsonValue(m_store_id));
    }
    if (m_subtotal_price_isSet) {
        obj.insert(QString("subtotal_price"), ::OpenAPI::toJsonValue(m_subtotal_price));
    }
    if (m_tags_isSet) {
        obj.insert(QString("tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    if (m_tax_price_isSet) {
        obj.insert(QString("tax_price"), ::OpenAPI::toJsonValue(m_tax_price));
    }
    if (m_total_paid_isSet) {
        obj.insert(QString("total_paid"), ::OpenAPI::toJsonValue(m_total_paid));
    }
    if (m_total_price_isSet) {
        obj.insert(QString("total_price"), ::OpenAPI::toJsonValue(m_total_price));
    }
    if (m_total_weight_isSet) {
        obj.insert(QString("total_weight"), ::OpenAPI::toJsonValue(m_total_weight));
    }
    if (m_transaction_id_isSet) {
        obj.insert(QString("transaction_id"), ::OpenAPI::toJsonValue(m_transaction_id));
    }
    return obj;
}

QString OAIOrderAdd::getAdminComment() const {
    return m_admin_comment;
}
void OAIOrderAdd::setAdminComment(const QString &admin_comment) {
    m_admin_comment = admin_comment;
    m_admin_comment_isSet = true;
}

bool OAIOrderAdd::is_admin_comment_Set() const{
    return m_admin_comment_isSet;
}

bool OAIOrderAdd::is_admin_comment_Valid() const{
    return m_admin_comment_isValid;
}

QString OAIOrderAdd::getAdminPrivateComment() const {
    return m_admin_private_comment;
}
void OAIOrderAdd::setAdminPrivateComment(const QString &admin_private_comment) {
    m_admin_private_comment = admin_private_comment;
    m_admin_private_comment_isSet = true;
}

bool OAIOrderAdd::is_admin_private_comment_Set() const{
    return m_admin_private_comment_isSet;
}

bool OAIOrderAdd::is_admin_private_comment_Valid() const{
    return m_admin_private_comment_isValid;
}

QString OAIOrderAdd::getBillAddress1() const {
    return m_bill_address_1;
}
void OAIOrderAdd::setBillAddress1(const QString &bill_address_1) {
    m_bill_address_1 = bill_address_1;
    m_bill_address_1_isSet = true;
}

bool OAIOrderAdd::is_bill_address_1_Set() const{
    return m_bill_address_1_isSet;
}

bool OAIOrderAdd::is_bill_address_1_Valid() const{
    return m_bill_address_1_isValid;
}

QString OAIOrderAdd::getBillAddress2() const {
    return m_bill_address_2;
}
void OAIOrderAdd::setBillAddress2(const QString &bill_address_2) {
    m_bill_address_2 = bill_address_2;
    m_bill_address_2_isSet = true;
}

bool OAIOrderAdd::is_bill_address_2_Set() const{
    return m_bill_address_2_isSet;
}

bool OAIOrderAdd::is_bill_address_2_Valid() const{
    return m_bill_address_2_isValid;
}

QString OAIOrderAdd::getBillCity() const {
    return m_bill_city;
}
void OAIOrderAdd::setBillCity(const QString &bill_city) {
    m_bill_city = bill_city;
    m_bill_city_isSet = true;
}

bool OAIOrderAdd::is_bill_city_Set() const{
    return m_bill_city_isSet;
}

bool OAIOrderAdd::is_bill_city_Valid() const{
    return m_bill_city_isValid;
}

QString OAIOrderAdd::getBillCompany() const {
    return m_bill_company;
}
void OAIOrderAdd::setBillCompany(const QString &bill_company) {
    m_bill_company = bill_company;
    m_bill_company_isSet = true;
}

bool OAIOrderAdd::is_bill_company_Set() const{
    return m_bill_company_isSet;
}

bool OAIOrderAdd::is_bill_company_Valid() const{
    return m_bill_company_isValid;
}

QString OAIOrderAdd::getBillCountry() const {
    return m_bill_country;
}
void OAIOrderAdd::setBillCountry(const QString &bill_country) {
    m_bill_country = bill_country;
    m_bill_country_isSet = true;
}

bool OAIOrderAdd::is_bill_country_Set() const{
    return m_bill_country_isSet;
}

bool OAIOrderAdd::is_bill_country_Valid() const{
    return m_bill_country_isValid;
}

QString OAIOrderAdd::getBillFax() const {
    return m_bill_fax;
}
void OAIOrderAdd::setBillFax(const QString &bill_fax) {
    m_bill_fax = bill_fax;
    m_bill_fax_isSet = true;
}

bool OAIOrderAdd::is_bill_fax_Set() const{
    return m_bill_fax_isSet;
}

bool OAIOrderAdd::is_bill_fax_Valid() const{
    return m_bill_fax_isValid;
}

QString OAIOrderAdd::getBillFirstName() const {
    return m_bill_first_name;
}
void OAIOrderAdd::setBillFirstName(const QString &bill_first_name) {
    m_bill_first_name = bill_first_name;
    m_bill_first_name_isSet = true;
}

bool OAIOrderAdd::is_bill_first_name_Set() const{
    return m_bill_first_name_isSet;
}

bool OAIOrderAdd::is_bill_first_name_Valid() const{
    return m_bill_first_name_isValid;
}

QString OAIOrderAdd::getBillLastName() const {
    return m_bill_last_name;
}
void OAIOrderAdd::setBillLastName(const QString &bill_last_name) {
    m_bill_last_name = bill_last_name;
    m_bill_last_name_isSet = true;
}

bool OAIOrderAdd::is_bill_last_name_Set() const{
    return m_bill_last_name_isSet;
}

bool OAIOrderAdd::is_bill_last_name_Valid() const{
    return m_bill_last_name_isValid;
}

QString OAIOrderAdd::getBillPhone() const {
    return m_bill_phone;
}
void OAIOrderAdd::setBillPhone(const QString &bill_phone) {
    m_bill_phone = bill_phone;
    m_bill_phone_isSet = true;
}

bool OAIOrderAdd::is_bill_phone_Set() const{
    return m_bill_phone_isSet;
}

bool OAIOrderAdd::is_bill_phone_Valid() const{
    return m_bill_phone_isValid;
}

QString OAIOrderAdd::getBillPostcode() const {
    return m_bill_postcode;
}
void OAIOrderAdd::setBillPostcode(const QString &bill_postcode) {
    m_bill_postcode = bill_postcode;
    m_bill_postcode_isSet = true;
}

bool OAIOrderAdd::is_bill_postcode_Set() const{
    return m_bill_postcode_isSet;
}

bool OAIOrderAdd::is_bill_postcode_Valid() const{
    return m_bill_postcode_isValid;
}

QString OAIOrderAdd::getBillState() const {
    return m_bill_state;
}
void OAIOrderAdd::setBillState(const QString &bill_state) {
    m_bill_state = bill_state;
    m_bill_state_isSet = true;
}

bool OAIOrderAdd::is_bill_state_Set() const{
    return m_bill_state_isSet;
}

bool OAIOrderAdd::is_bill_state_Valid() const{
    return m_bill_state_isValid;
}

QString OAIOrderAdd::getChannelId() const {
    return m_channel_id;
}
void OAIOrderAdd::setChannelId(const QString &channel_id) {
    m_channel_id = channel_id;
    m_channel_id_isSet = true;
}

bool OAIOrderAdd::is_channel_id_Set() const{
    return m_channel_id_isSet;
}

bool OAIOrderAdd::is_channel_id_Valid() const{
    return m_channel_id_isValid;
}

bool OAIOrderAdd::isClearCache() const {
    return m_clear_cache;
}
void OAIOrderAdd::setClearCache(const bool &clear_cache) {
    m_clear_cache = clear_cache;
    m_clear_cache_isSet = true;
}

bool OAIOrderAdd::is_clear_cache_Set() const{
    return m_clear_cache_isSet;
}

bool OAIOrderAdd::is_clear_cache_Valid() const{
    return m_clear_cache_isValid;
}

QString OAIOrderAdd::getComment() const {
    return m_comment;
}
void OAIOrderAdd::setComment(const QString &comment) {
    m_comment = comment;
    m_comment_isSet = true;
}

bool OAIOrderAdd::is_comment_Set() const{
    return m_comment_isSet;
}

bool OAIOrderAdd::is_comment_Valid() const{
    return m_comment_isValid;
}

double OAIOrderAdd::getCouponDiscount() const {
    return m_coupon_discount;
}
void OAIOrderAdd::setCouponDiscount(const double &coupon_discount) {
    m_coupon_discount = coupon_discount;
    m_coupon_discount_isSet = true;
}

bool OAIOrderAdd::is_coupon_discount_Set() const{
    return m_coupon_discount_isSet;
}

bool OAIOrderAdd::is_coupon_discount_Valid() const{
    return m_coupon_discount_isValid;
}

QList<QString> OAIOrderAdd::getCoupons() const {
    return m_coupons;
}
void OAIOrderAdd::setCoupons(const QList<QString> &coupons) {
    m_coupons = coupons;
    m_coupons_isSet = true;
}

bool OAIOrderAdd::is_coupons_Set() const{
    return m_coupons_isSet;
}

bool OAIOrderAdd::is_coupons_Valid() const{
    return m_coupons_isValid;
}

bool OAIOrderAdd::isCreateInvoice() const {
    return m_create_invoice;
}
void OAIOrderAdd::setCreateInvoice(const bool &create_invoice) {
    m_create_invoice = create_invoice;
    m_create_invoice_isSet = true;
}

bool OAIOrderAdd::is_create_invoice_Set() const{
    return m_create_invoice_isSet;
}

bool OAIOrderAdd::is_create_invoice_Valid() const{
    return m_create_invoice_isValid;
}

QString OAIOrderAdd::getCurrency() const {
    return m_currency;
}
void OAIOrderAdd::setCurrency(const QString &currency) {
    m_currency = currency;
    m_currency_isSet = true;
}

bool OAIOrderAdd::is_currency_Set() const{
    return m_currency_isSet;
}

bool OAIOrderAdd::is_currency_Valid() const{
    return m_currency_isValid;
}

QString OAIOrderAdd::getCustomerBirthday() const {
    return m_customer_birthday;
}
void OAIOrderAdd::setCustomerBirthday(const QString &customer_birthday) {
    m_customer_birthday = customer_birthday;
    m_customer_birthday_isSet = true;
}

bool OAIOrderAdd::is_customer_birthday_Set() const{
    return m_customer_birthday_isSet;
}

bool OAIOrderAdd::is_customer_birthday_Valid() const{
    return m_customer_birthday_isValid;
}

QString OAIOrderAdd::getCustomerEmail() const {
    return m_customer_email;
}
void OAIOrderAdd::setCustomerEmail(const QString &customer_email) {
    m_customer_email = customer_email;
    m_customer_email_isSet = true;
}

bool OAIOrderAdd::is_customer_email_Set() const{
    return m_customer_email_isSet;
}

bool OAIOrderAdd::is_customer_email_Valid() const{
    return m_customer_email_isValid;
}

QString OAIOrderAdd::getCustomerFax() const {
    return m_customer_fax;
}
void OAIOrderAdd::setCustomerFax(const QString &customer_fax) {
    m_customer_fax = customer_fax;
    m_customer_fax_isSet = true;
}

bool OAIOrderAdd::is_customer_fax_Set() const{
    return m_customer_fax_isSet;
}

bool OAIOrderAdd::is_customer_fax_Valid() const{
    return m_customer_fax_isValid;
}

QString OAIOrderAdd::getCustomerFirstName() const {
    return m_customer_first_name;
}
void OAIOrderAdd::setCustomerFirstName(const QString &customer_first_name) {
    m_customer_first_name = customer_first_name;
    m_customer_first_name_isSet = true;
}

bool OAIOrderAdd::is_customer_first_name_Set() const{
    return m_customer_first_name_isSet;
}

bool OAIOrderAdd::is_customer_first_name_Valid() const{
    return m_customer_first_name_isValid;
}

QString OAIOrderAdd::getCustomerLastName() const {
    return m_customer_last_name;
}
void OAIOrderAdd::setCustomerLastName(const QString &customer_last_name) {
    m_customer_last_name = customer_last_name;
    m_customer_last_name_isSet = true;
}

bool OAIOrderAdd::is_customer_last_name_Set() const{
    return m_customer_last_name_isSet;
}

bool OAIOrderAdd::is_customer_last_name_Valid() const{
    return m_customer_last_name_isValid;
}

QString OAIOrderAdd::getCustomerPhone() const {
    return m_customer_phone;
}
void OAIOrderAdd::setCustomerPhone(const QString &customer_phone) {
    m_customer_phone = customer_phone;
    m_customer_phone_isSet = true;
}

bool OAIOrderAdd::is_customer_phone_Set() const{
    return m_customer_phone_isSet;
}

bool OAIOrderAdd::is_customer_phone_Valid() const{
    return m_customer_phone_isValid;
}

QString OAIOrderAdd::getDate() const {
    return m_date;
}
void OAIOrderAdd::setDate(const QString &date) {
    m_date = date;
    m_date_isSet = true;
}

bool OAIOrderAdd::is_date_Set() const{
    return m_date_isSet;
}

bool OAIOrderAdd::is_date_Valid() const{
    return m_date_isValid;
}

QString OAIOrderAdd::getDateFinished() const {
    return m_date_finished;
}
void OAIOrderAdd::setDateFinished(const QString &date_finished) {
    m_date_finished = date_finished;
    m_date_finished_isSet = true;
}

bool OAIOrderAdd::is_date_finished_Set() const{
    return m_date_finished_isSet;
}

bool OAIOrderAdd::is_date_finished_Valid() const{
    return m_date_finished_isValid;
}

QString OAIOrderAdd::getDateModified() const {
    return m_date_modified;
}
void OAIOrderAdd::setDateModified(const QString &date_modified) {
    m_date_modified = date_modified;
    m_date_modified_isSet = true;
}

bool OAIOrderAdd::is_date_modified_Set() const{
    return m_date_modified_isSet;
}

bool OAIOrderAdd::is_date_modified_Valid() const{
    return m_date_modified_isValid;
}

double OAIOrderAdd::getDiscount() const {
    return m_discount;
}
void OAIOrderAdd::setDiscount(const double &discount) {
    m_discount = discount;
    m_discount_isSet = true;
}

bool OAIOrderAdd::is_discount_Set() const{
    return m_discount_isSet;
}

bool OAIOrderAdd::is_discount_Valid() const{
    return m_discount_isValid;
}

QString OAIOrderAdd::getExternalSource() const {
    return m_external_source;
}
void OAIOrderAdd::setExternalSource(const QString &external_source) {
    m_external_source = external_source;
    m_external_source_isSet = true;
}

bool OAIOrderAdd::is_external_source_Set() const{
    return m_external_source_isSet;
}

bool OAIOrderAdd::is_external_source_Valid() const{
    return m_external_source_isValid;
}

QString OAIOrderAdd::getFinancialStatus() const {
    return m_financial_status;
}
void OAIOrderAdd::setFinancialStatus(const QString &financial_status) {
    m_financial_status = financial_status;
    m_financial_status_isSet = true;
}

bool OAIOrderAdd::is_financial_status_Set() const{
    return m_financial_status_isSet;
}

bool OAIOrderAdd::is_financial_status_Valid() const{
    return m_financial_status_isValid;
}

QString OAIOrderAdd::getFulfillmentStatus() const {
    return m_fulfillment_status;
}
void OAIOrderAdd::setFulfillmentStatus(const QString &fulfillment_status) {
    m_fulfillment_status = fulfillment_status;
    m_fulfillment_status_isSet = true;
}

bool OAIOrderAdd::is_fulfillment_status_Set() const{
    return m_fulfillment_status_isSet;
}

bool OAIOrderAdd::is_fulfillment_status_Valid() const{
    return m_fulfillment_status_isValid;
}

double OAIOrderAdd::getGiftCertificateDiscount() const {
    return m_gift_certificate_discount;
}
void OAIOrderAdd::setGiftCertificateDiscount(const double &gift_certificate_discount) {
    m_gift_certificate_discount = gift_certificate_discount;
    m_gift_certificate_discount_isSet = true;
}

bool OAIOrderAdd::is_gift_certificate_discount_Set() const{
    return m_gift_certificate_discount_isSet;
}

bool OAIOrderAdd::is_gift_certificate_discount_Valid() const{
    return m_gift_certificate_discount_isValid;
}

QString OAIOrderAdd::getId() const {
    return m_id;
}
void OAIOrderAdd::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIOrderAdd::is_id_Set() const{
    return m_id_isSet;
}

bool OAIOrderAdd::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIOrderAdd::getInventoryBehaviour() const {
    return m_inventory_behaviour;
}
void OAIOrderAdd::setInventoryBehaviour(const QString &inventory_behaviour) {
    m_inventory_behaviour = inventory_behaviour;
    m_inventory_behaviour_isSet = true;
}

bool OAIOrderAdd::is_inventory_behaviour_Set() const{
    return m_inventory_behaviour_isSet;
}

bool OAIOrderAdd::is_inventory_behaviour_Valid() const{
    return m_inventory_behaviour_isValid;
}

QList<OAIOrderAdd_note_attributes_inner> OAIOrderAdd::getNoteAttributes() const {
    return m_note_attributes;
}
void OAIOrderAdd::setNoteAttributes(const QList<OAIOrderAdd_note_attributes_inner> &note_attributes) {
    m_note_attributes = note_attributes;
    m_note_attributes_isSet = true;
}

bool OAIOrderAdd::is_note_attributes_Set() const{
    return m_note_attributes_isSet;
}

bool OAIOrderAdd::is_note_attributes_Valid() const{
    return m_note_attributes_isValid;
}

QString OAIOrderAdd::getOrderId() const {
    return m_order_id;
}
void OAIOrderAdd::setOrderId(const QString &order_id) {
    m_order_id = order_id;
    m_order_id_isSet = true;
}

bool OAIOrderAdd::is_order_id_Set() const{
    return m_order_id_isSet;
}

bool OAIOrderAdd::is_order_id_Valid() const{
    return m_order_id_isValid;
}

QList<OAIOrderAdd_order_item_inner> OAIOrderAdd::getOrderItem() const {
    return m_order_item;
}
void OAIOrderAdd::setOrderItem(const QList<OAIOrderAdd_order_item_inner> &order_item) {
    m_order_item = order_item;
    m_order_item_isSet = true;
}

bool OAIOrderAdd::is_order_item_Set() const{
    return m_order_item_isSet;
}

bool OAIOrderAdd::is_order_item_Valid() const{
    return m_order_item_isValid;
}

QString OAIOrderAdd::getOrderPaymentMethod() const {
    return m_order_payment_method;
}
void OAIOrderAdd::setOrderPaymentMethod(const QString &order_payment_method) {
    m_order_payment_method = order_payment_method;
    m_order_payment_method_isSet = true;
}

bool OAIOrderAdd::is_order_payment_method_Set() const{
    return m_order_payment_method_isSet;
}

bool OAIOrderAdd::is_order_payment_method_Valid() const{
    return m_order_payment_method_isValid;
}

QString OAIOrderAdd::getOrderShippingMethod() const {
    return m_order_shipping_method;
}
void OAIOrderAdd::setOrderShippingMethod(const QString &order_shipping_method) {
    m_order_shipping_method = order_shipping_method;
    m_order_shipping_method_isSet = true;
}

bool OAIOrderAdd::is_order_shipping_method_Set() const{
    return m_order_shipping_method_isSet;
}

bool OAIOrderAdd::is_order_shipping_method_Valid() const{
    return m_order_shipping_method_isValid;
}

QString OAIOrderAdd::getOrderStatus() const {
    return m_order_status;
}
void OAIOrderAdd::setOrderStatus(const QString &order_status) {
    m_order_status = order_status;
    m_order_status_isSet = true;
}

bool OAIOrderAdd::is_order_status_Set() const{
    return m_order_status_isSet;
}

bool OAIOrderAdd::is_order_status_Valid() const{
    return m_order_status_isValid;
}

bool OAIOrderAdd::isPricesIncTax() const {
    return m_prices_inc_tax;
}
void OAIOrderAdd::setPricesIncTax(const bool &prices_inc_tax) {
    m_prices_inc_tax = prices_inc_tax;
    m_prices_inc_tax_isSet = true;
}

bool OAIOrderAdd::is_prices_inc_tax_Set() const{
    return m_prices_inc_tax_isSet;
}

bool OAIOrderAdd::is_prices_inc_tax_Valid() const{
    return m_prices_inc_tax_isValid;
}

bool OAIOrderAdd::isSendAdminNotifications() const {
    return m_send_admin_notifications;
}
void OAIOrderAdd::setSendAdminNotifications(const bool &send_admin_notifications) {
    m_send_admin_notifications = send_admin_notifications;
    m_send_admin_notifications_isSet = true;
}

bool OAIOrderAdd::is_send_admin_notifications_Set() const{
    return m_send_admin_notifications_isSet;
}

bool OAIOrderAdd::is_send_admin_notifications_Valid() const{
    return m_send_admin_notifications_isValid;
}

bool OAIOrderAdd::isSendNotifications() const {
    return m_send_notifications;
}
void OAIOrderAdd::setSendNotifications(const bool &send_notifications) {
    m_send_notifications = send_notifications;
    m_send_notifications_isSet = true;
}

bool OAIOrderAdd::is_send_notifications_Set() const{
    return m_send_notifications_isSet;
}

bool OAIOrderAdd::is_send_notifications_Valid() const{
    return m_send_notifications_isValid;
}

QString OAIOrderAdd::getShippAddress1() const {
    return m_shipp_address_1;
}
void OAIOrderAdd::setShippAddress1(const QString &shipp_address_1) {
    m_shipp_address_1 = shipp_address_1;
    m_shipp_address_1_isSet = true;
}

bool OAIOrderAdd::is_shipp_address_1_Set() const{
    return m_shipp_address_1_isSet;
}

bool OAIOrderAdd::is_shipp_address_1_Valid() const{
    return m_shipp_address_1_isValid;
}

QString OAIOrderAdd::getShippAddress2() const {
    return m_shipp_address_2;
}
void OAIOrderAdd::setShippAddress2(const QString &shipp_address_2) {
    m_shipp_address_2 = shipp_address_2;
    m_shipp_address_2_isSet = true;
}

bool OAIOrderAdd::is_shipp_address_2_Set() const{
    return m_shipp_address_2_isSet;
}

bool OAIOrderAdd::is_shipp_address_2_Valid() const{
    return m_shipp_address_2_isValid;
}

QString OAIOrderAdd::getShippCity() const {
    return m_shipp_city;
}
void OAIOrderAdd::setShippCity(const QString &shipp_city) {
    m_shipp_city = shipp_city;
    m_shipp_city_isSet = true;
}

bool OAIOrderAdd::is_shipp_city_Set() const{
    return m_shipp_city_isSet;
}

bool OAIOrderAdd::is_shipp_city_Valid() const{
    return m_shipp_city_isValid;
}

QString OAIOrderAdd::getShippCompany() const {
    return m_shipp_company;
}
void OAIOrderAdd::setShippCompany(const QString &shipp_company) {
    m_shipp_company = shipp_company;
    m_shipp_company_isSet = true;
}

bool OAIOrderAdd::is_shipp_company_Set() const{
    return m_shipp_company_isSet;
}

bool OAIOrderAdd::is_shipp_company_Valid() const{
    return m_shipp_company_isValid;
}

QString OAIOrderAdd::getShippCountry() const {
    return m_shipp_country;
}
void OAIOrderAdd::setShippCountry(const QString &shipp_country) {
    m_shipp_country = shipp_country;
    m_shipp_country_isSet = true;
}

bool OAIOrderAdd::is_shipp_country_Set() const{
    return m_shipp_country_isSet;
}

bool OAIOrderAdd::is_shipp_country_Valid() const{
    return m_shipp_country_isValid;
}

QString OAIOrderAdd::getShippFax() const {
    return m_shipp_fax;
}
void OAIOrderAdd::setShippFax(const QString &shipp_fax) {
    m_shipp_fax = shipp_fax;
    m_shipp_fax_isSet = true;
}

bool OAIOrderAdd::is_shipp_fax_Set() const{
    return m_shipp_fax_isSet;
}

bool OAIOrderAdd::is_shipp_fax_Valid() const{
    return m_shipp_fax_isValid;
}

QString OAIOrderAdd::getShippFirstName() const {
    return m_shipp_first_name;
}
void OAIOrderAdd::setShippFirstName(const QString &shipp_first_name) {
    m_shipp_first_name = shipp_first_name;
    m_shipp_first_name_isSet = true;
}

bool OAIOrderAdd::is_shipp_first_name_Set() const{
    return m_shipp_first_name_isSet;
}

bool OAIOrderAdd::is_shipp_first_name_Valid() const{
    return m_shipp_first_name_isValid;
}

QString OAIOrderAdd::getShippLastName() const {
    return m_shipp_last_name;
}
void OAIOrderAdd::setShippLastName(const QString &shipp_last_name) {
    m_shipp_last_name = shipp_last_name;
    m_shipp_last_name_isSet = true;
}

bool OAIOrderAdd::is_shipp_last_name_Set() const{
    return m_shipp_last_name_isSet;
}

bool OAIOrderAdd::is_shipp_last_name_Valid() const{
    return m_shipp_last_name_isValid;
}

QString OAIOrderAdd::getShippPhone() const {
    return m_shipp_phone;
}
void OAIOrderAdd::setShippPhone(const QString &shipp_phone) {
    m_shipp_phone = shipp_phone;
    m_shipp_phone_isSet = true;
}

bool OAIOrderAdd::is_shipp_phone_Set() const{
    return m_shipp_phone_isSet;
}

bool OAIOrderAdd::is_shipp_phone_Valid() const{
    return m_shipp_phone_isValid;
}

QString OAIOrderAdd::getShippPostcode() const {
    return m_shipp_postcode;
}
void OAIOrderAdd::setShippPostcode(const QString &shipp_postcode) {
    m_shipp_postcode = shipp_postcode;
    m_shipp_postcode_isSet = true;
}

bool OAIOrderAdd::is_shipp_postcode_Set() const{
    return m_shipp_postcode_isSet;
}

bool OAIOrderAdd::is_shipp_postcode_Valid() const{
    return m_shipp_postcode_isValid;
}

QString OAIOrderAdd::getShippState() const {
    return m_shipp_state;
}
void OAIOrderAdd::setShippState(const QString &shipp_state) {
    m_shipp_state = shipp_state;
    m_shipp_state_isSet = true;
}

bool OAIOrderAdd::is_shipp_state_Set() const{
    return m_shipp_state_isSet;
}

bool OAIOrderAdd::is_shipp_state_Valid() const{
    return m_shipp_state_isValid;
}

double OAIOrderAdd::getShippingPrice() const {
    return m_shipping_price;
}
void OAIOrderAdd::setShippingPrice(const double &shipping_price) {
    m_shipping_price = shipping_price;
    m_shipping_price_isSet = true;
}

bool OAIOrderAdd::is_shipping_price_Set() const{
    return m_shipping_price_isSet;
}

bool OAIOrderAdd::is_shipping_price_Valid() const{
    return m_shipping_price_isValid;
}

double OAIOrderAdd::getShippingTax() const {
    return m_shipping_tax;
}
void OAIOrderAdd::setShippingTax(const double &shipping_tax) {
    m_shipping_tax = shipping_tax;
    m_shipping_tax_isSet = true;
}

bool OAIOrderAdd::is_shipping_tax_Set() const{
    return m_shipping_tax_isSet;
}

bool OAIOrderAdd::is_shipping_tax_Valid() const{
    return m_shipping_tax_isValid;
}

QString OAIOrderAdd::getStoreId() const {
    return m_store_id;
}
void OAIOrderAdd::setStoreId(const QString &store_id) {
    m_store_id = store_id;
    m_store_id_isSet = true;
}

bool OAIOrderAdd::is_store_id_Set() const{
    return m_store_id_isSet;
}

bool OAIOrderAdd::is_store_id_Valid() const{
    return m_store_id_isValid;
}

double OAIOrderAdd::getSubtotalPrice() const {
    return m_subtotal_price;
}
void OAIOrderAdd::setSubtotalPrice(const double &subtotal_price) {
    m_subtotal_price = subtotal_price;
    m_subtotal_price_isSet = true;
}

bool OAIOrderAdd::is_subtotal_price_Set() const{
    return m_subtotal_price_isSet;
}

bool OAIOrderAdd::is_subtotal_price_Valid() const{
    return m_subtotal_price_isValid;
}

QString OAIOrderAdd::getTags() const {
    return m_tags;
}
void OAIOrderAdd::setTags(const QString &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIOrderAdd::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIOrderAdd::is_tags_Valid() const{
    return m_tags_isValid;
}

double OAIOrderAdd::getTaxPrice() const {
    return m_tax_price;
}
void OAIOrderAdd::setTaxPrice(const double &tax_price) {
    m_tax_price = tax_price;
    m_tax_price_isSet = true;
}

bool OAIOrderAdd::is_tax_price_Set() const{
    return m_tax_price_isSet;
}

bool OAIOrderAdd::is_tax_price_Valid() const{
    return m_tax_price_isValid;
}

double OAIOrderAdd::getTotalPaid() const {
    return m_total_paid;
}
void OAIOrderAdd::setTotalPaid(const double &total_paid) {
    m_total_paid = total_paid;
    m_total_paid_isSet = true;
}

bool OAIOrderAdd::is_total_paid_Set() const{
    return m_total_paid_isSet;
}

bool OAIOrderAdd::is_total_paid_Valid() const{
    return m_total_paid_isValid;
}

double OAIOrderAdd::getTotalPrice() const {
    return m_total_price;
}
void OAIOrderAdd::setTotalPrice(const double &total_price) {
    m_total_price = total_price;
    m_total_price_isSet = true;
}

bool OAIOrderAdd::is_total_price_Set() const{
    return m_total_price_isSet;
}

bool OAIOrderAdd::is_total_price_Valid() const{
    return m_total_price_isValid;
}

qint32 OAIOrderAdd::getTotalWeight() const {
    return m_total_weight;
}
void OAIOrderAdd::setTotalWeight(const qint32 &total_weight) {
    m_total_weight = total_weight;
    m_total_weight_isSet = true;
}

bool OAIOrderAdd::is_total_weight_Set() const{
    return m_total_weight_isSet;
}

bool OAIOrderAdd::is_total_weight_Valid() const{
    return m_total_weight_isValid;
}

QString OAIOrderAdd::getTransactionId() const {
    return m_transaction_id;
}
void OAIOrderAdd::setTransactionId(const QString &transaction_id) {
    m_transaction_id = transaction_id;
    m_transaction_id_isSet = true;
}

bool OAIOrderAdd::is_transaction_id_Set() const{
    return m_transaction_id_isSet;
}

bool OAIOrderAdd::is_transaction_id_Valid() const{
    return m_transaction_id_isValid;
}

bool OAIOrderAdd::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_admin_comment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_admin_private_comment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bill_address_1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bill_address_2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bill_city_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bill_company_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bill_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bill_fax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bill_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bill_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bill_phone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bill_postcode_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bill_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_channel_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_clear_cache_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_comment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_coupon_discount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_coupons.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_invoice_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_birthday_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_fax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_phone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_finished_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_modified_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_discount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_source_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_financial_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fulfillment_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gift_certificate_discount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_inventory_behaviour_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_note_attributes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_item.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_payment_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_shipping_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_prices_inc_tax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_send_admin_notifications_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_send_notifications_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipp_address_1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipp_address_2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipp_city_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipp_company_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipp_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipp_fax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipp_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipp_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipp_phone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipp_postcode_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipp_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_tax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_store_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subtotal_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tax_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_paid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_weight_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transaction_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrderAdd::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_bill_address_1_isValid && m_bill_city_isValid && m_bill_country_isValid && m_bill_first_name_isValid && m_bill_last_name_isValid && m_bill_postcode_isValid && m_bill_state_isValid && m_customer_email_isValid && m_order_item_isValid && m_order_status_isValid && true;
}

} // namespace OpenAPI
