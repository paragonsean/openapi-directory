/**
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustomer_Address.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustomer_Address::OAICustomer_Address(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustomer_Address::OAICustomer_Address() {
    this->initializeModel();
}

OAICustomer_Address::~OAICustomer_Address() {}

void OAICustomer_Address::initializeModel() {

    m_additional_fields_isSet = false;
    m_additional_fields_isValid = false;

    m_address1_isSet = false;
    m_address1_isValid = false;

    m_address2_isSet = false;
    m_address2_isValid = false;

    m_city_isSet = false;
    m_city_isValid = false;

    m_company_isSet = false;
    m_company_isValid = false;

    m_country_isSet = false;
    m_country_isValid = false;

    m_custom_fields_isSet = false;
    m_custom_fields_isValid = false;

    m_r_default_isSet = false;
    m_r_default_isValid = false;

    m_fax_isSet = false;
    m_fax_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_gender_isSet = false;
    m_gender_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_identification_number_isSet = false;
    m_identification_number_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_phone_isSet = false;
    m_phone_isValid = false;

    m_phone_mobile_isSet = false;
    m_phone_mobile_isValid = false;

    m_postcode_isSet = false;
    m_postcode_isValid = false;

    m_region_isSet = false;
    m_region_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_tax_id_isSet = false;
    m_tax_id_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_website_isSet = false;
    m_website_isValid = false;
}

void OAICustomer_Address::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustomer_Address::fromJsonObject(QJsonObject json) {

    m_additional_fields_isValid = ::OpenAPI::fromJsonValue(m_additional_fields, json[QString("additional_fields")]);
    m_additional_fields_isSet = !json[QString("additional_fields")].isNull() && m_additional_fields_isValid;

    m_address1_isValid = ::OpenAPI::fromJsonValue(m_address1, json[QString("address1")]);
    m_address1_isSet = !json[QString("address1")].isNull() && m_address1_isValid;

    m_address2_isValid = ::OpenAPI::fromJsonValue(m_address2, json[QString("address2")]);
    m_address2_isSet = !json[QString("address2")].isNull() && m_address2_isValid;

    m_city_isValid = ::OpenAPI::fromJsonValue(m_city, json[QString("city")]);
    m_city_isSet = !json[QString("city")].isNull() && m_city_isValid;

    m_company_isValid = ::OpenAPI::fromJsonValue(m_company, json[QString("company")]);
    m_company_isSet = !json[QString("company")].isNull() && m_company_isValid;

    m_country_isValid = ::OpenAPI::fromJsonValue(m_country, json[QString("country")]);
    m_country_isSet = !json[QString("country")].isNull() && m_country_isValid;

    m_custom_fields_isValid = ::OpenAPI::fromJsonValue(m_custom_fields, json[QString("custom_fields")]);
    m_custom_fields_isSet = !json[QString("custom_fields")].isNull() && m_custom_fields_isValid;

    m_r_default_isValid = ::OpenAPI::fromJsonValue(m_r_default, json[QString("default")]);
    m_r_default_isSet = !json[QString("default")].isNull() && m_r_default_isValid;

    m_fax_isValid = ::OpenAPI::fromJsonValue(m_fax, json[QString("fax")]);
    m_fax_isSet = !json[QString("fax")].isNull() && m_fax_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("first_name")]);
    m_first_name_isSet = !json[QString("first_name")].isNull() && m_first_name_isValid;

    m_gender_isValid = ::OpenAPI::fromJsonValue(m_gender, json[QString("gender")]);
    m_gender_isSet = !json[QString("gender")].isNull() && m_gender_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_identification_number_isValid = ::OpenAPI::fromJsonValue(m_identification_number, json[QString("identification_number")]);
    m_identification_number_isSet = !json[QString("identification_number")].isNull() && m_identification_number_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("last_name")]);
    m_last_name_isSet = !json[QString("last_name")].isNull() && m_last_name_isValid;

    m_phone_isValid = ::OpenAPI::fromJsonValue(m_phone, json[QString("phone")]);
    m_phone_isSet = !json[QString("phone")].isNull() && m_phone_isValid;

    m_phone_mobile_isValid = ::OpenAPI::fromJsonValue(m_phone_mobile, json[QString("phone_mobile")]);
    m_phone_mobile_isSet = !json[QString("phone_mobile")].isNull() && m_phone_mobile_isValid;

    m_postcode_isValid = ::OpenAPI::fromJsonValue(m_postcode, json[QString("postcode")]);
    m_postcode_isSet = !json[QString("postcode")].isNull() && m_postcode_isValid;

    m_region_isValid = ::OpenAPI::fromJsonValue(m_region, json[QString("region")]);
    m_region_isSet = !json[QString("region")].isNull() && m_region_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_tax_id_isValid = ::OpenAPI::fromJsonValue(m_tax_id, json[QString("tax_id")]);
    m_tax_id_isSet = !json[QString("tax_id")].isNull() && m_tax_id_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_website_isValid = ::OpenAPI::fromJsonValue(m_website, json[QString("website")]);
    m_website_isSet = !json[QString("website")].isNull() && m_website_isValid;
}

QString OAICustomer_Address::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustomer_Address::asJsonObject() const {
    QJsonObject obj;
    if (m_additional_fields_isSet) {
        obj.insert(QString("additional_fields"), ::OpenAPI::toJsonValue(m_additional_fields));
    }
    if (m_address1_isSet) {
        obj.insert(QString("address1"), ::OpenAPI::toJsonValue(m_address1));
    }
    if (m_address2_isSet) {
        obj.insert(QString("address2"), ::OpenAPI::toJsonValue(m_address2));
    }
    if (m_city_isSet) {
        obj.insert(QString("city"), ::OpenAPI::toJsonValue(m_city));
    }
    if (m_company_isSet) {
        obj.insert(QString("company"), ::OpenAPI::toJsonValue(m_company));
    }
    if (m_country.isSet()) {
        obj.insert(QString("country"), ::OpenAPI::toJsonValue(m_country));
    }
    if (m_custom_fields_isSet) {
        obj.insert(QString("custom_fields"), ::OpenAPI::toJsonValue(m_custom_fields));
    }
    if (m_r_default_isSet) {
        obj.insert(QString("default"), ::OpenAPI::toJsonValue(m_r_default));
    }
    if (m_fax_isSet) {
        obj.insert(QString("fax"), ::OpenAPI::toJsonValue(m_fax));
    }
    if (m_first_name_isSet) {
        obj.insert(QString("first_name"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_gender_isSet) {
        obj.insert(QString("gender"), ::OpenAPI::toJsonValue(m_gender));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_identification_number_isSet) {
        obj.insert(QString("identification_number"), ::OpenAPI::toJsonValue(m_identification_number));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("last_name"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_phone_isSet) {
        obj.insert(QString("phone"), ::OpenAPI::toJsonValue(m_phone));
    }
    if (m_phone_mobile_isSet) {
        obj.insert(QString("phone_mobile"), ::OpenAPI::toJsonValue(m_phone_mobile));
    }
    if (m_postcode_isSet) {
        obj.insert(QString("postcode"), ::OpenAPI::toJsonValue(m_postcode));
    }
    if (m_region_isSet) {
        obj.insert(QString("region"), ::OpenAPI::toJsonValue(m_region));
    }
    if (m_state.isSet()) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_tax_id_isSet) {
        obj.insert(QString("tax_id"), ::OpenAPI::toJsonValue(m_tax_id));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_website_isSet) {
        obj.insert(QString("website"), ::OpenAPI::toJsonValue(m_website));
    }
    return obj;
}

OAIObject OAICustomer_Address::getAdditionalFields() const {
    return m_additional_fields;
}
void OAICustomer_Address::setAdditionalFields(const OAIObject &additional_fields) {
    m_additional_fields = additional_fields;
    m_additional_fields_isSet = true;
}

bool OAICustomer_Address::is_additional_fields_Set() const{
    return m_additional_fields_isSet;
}

bool OAICustomer_Address::is_additional_fields_Valid() const{
    return m_additional_fields_isValid;
}

QString OAICustomer_Address::getAddress1() const {
    return m_address1;
}
void OAICustomer_Address::setAddress1(const QString &address1) {
    m_address1 = address1;
    m_address1_isSet = true;
}

bool OAICustomer_Address::is_address1_Set() const{
    return m_address1_isSet;
}

bool OAICustomer_Address::is_address1_Valid() const{
    return m_address1_isValid;
}

QString OAICustomer_Address::getAddress2() const {
    return m_address2;
}
void OAICustomer_Address::setAddress2(const QString &address2) {
    m_address2 = address2;
    m_address2_isSet = true;
}

bool OAICustomer_Address::is_address2_Set() const{
    return m_address2_isSet;
}

bool OAICustomer_Address::is_address2_Valid() const{
    return m_address2_isValid;
}

QString OAICustomer_Address::getCity() const {
    return m_city;
}
void OAICustomer_Address::setCity(const QString &city) {
    m_city = city;
    m_city_isSet = true;
}

bool OAICustomer_Address::is_city_Set() const{
    return m_city_isSet;
}

bool OAICustomer_Address::is_city_Valid() const{
    return m_city_isValid;
}

QString OAICustomer_Address::getCompany() const {
    return m_company;
}
void OAICustomer_Address::setCompany(const QString &company) {
    m_company = company;
    m_company_isSet = true;
}

bool OAICustomer_Address::is_company_Set() const{
    return m_company_isSet;
}

bool OAICustomer_Address::is_company_Valid() const{
    return m_company_isValid;
}

OAICountry OAICustomer_Address::getCountry() const {
    return m_country;
}
void OAICustomer_Address::setCountry(const OAICountry &country) {
    m_country = country;
    m_country_isSet = true;
}

bool OAICustomer_Address::is_country_Set() const{
    return m_country_isSet;
}

bool OAICustomer_Address::is_country_Valid() const{
    return m_country_isValid;
}

OAIObject OAICustomer_Address::getCustomFields() const {
    return m_custom_fields;
}
void OAICustomer_Address::setCustomFields(const OAIObject &custom_fields) {
    m_custom_fields = custom_fields;
    m_custom_fields_isSet = true;
}

bool OAICustomer_Address::is_custom_fields_Set() const{
    return m_custom_fields_isSet;
}

bool OAICustomer_Address::is_custom_fields_Valid() const{
    return m_custom_fields_isValid;
}

bool OAICustomer_Address::isRDefault() const {
    return m_r_default;
}
void OAICustomer_Address::setRDefault(const bool &r_default) {
    m_r_default = r_default;
    m_r_default_isSet = true;
}

bool OAICustomer_Address::is_r_default_Set() const{
    return m_r_default_isSet;
}

bool OAICustomer_Address::is_r_default_Valid() const{
    return m_r_default_isValid;
}

QString OAICustomer_Address::getFax() const {
    return m_fax;
}
void OAICustomer_Address::setFax(const QString &fax) {
    m_fax = fax;
    m_fax_isSet = true;
}

bool OAICustomer_Address::is_fax_Set() const{
    return m_fax_isSet;
}

bool OAICustomer_Address::is_fax_Valid() const{
    return m_fax_isValid;
}

QString OAICustomer_Address::getFirstName() const {
    return m_first_name;
}
void OAICustomer_Address::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAICustomer_Address::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAICustomer_Address::is_first_name_Valid() const{
    return m_first_name_isValid;
}

QString OAICustomer_Address::getGender() const {
    return m_gender;
}
void OAICustomer_Address::setGender(const QString &gender) {
    m_gender = gender;
    m_gender_isSet = true;
}

bool OAICustomer_Address::is_gender_Set() const{
    return m_gender_isSet;
}

bool OAICustomer_Address::is_gender_Valid() const{
    return m_gender_isValid;
}

QString OAICustomer_Address::getId() const {
    return m_id;
}
void OAICustomer_Address::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICustomer_Address::is_id_Set() const{
    return m_id_isSet;
}

bool OAICustomer_Address::is_id_Valid() const{
    return m_id_isValid;
}

QString OAICustomer_Address::getIdentificationNumber() const {
    return m_identification_number;
}
void OAICustomer_Address::setIdentificationNumber(const QString &identification_number) {
    m_identification_number = identification_number;
    m_identification_number_isSet = true;
}

bool OAICustomer_Address::is_identification_number_Set() const{
    return m_identification_number_isSet;
}

bool OAICustomer_Address::is_identification_number_Valid() const{
    return m_identification_number_isValid;
}

QString OAICustomer_Address::getLastName() const {
    return m_last_name;
}
void OAICustomer_Address::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAICustomer_Address::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAICustomer_Address::is_last_name_Valid() const{
    return m_last_name_isValid;
}

QString OAICustomer_Address::getPhone() const {
    return m_phone;
}
void OAICustomer_Address::setPhone(const QString &phone) {
    m_phone = phone;
    m_phone_isSet = true;
}

bool OAICustomer_Address::is_phone_Set() const{
    return m_phone_isSet;
}

bool OAICustomer_Address::is_phone_Valid() const{
    return m_phone_isValid;
}

QString OAICustomer_Address::getPhoneMobile() const {
    return m_phone_mobile;
}
void OAICustomer_Address::setPhoneMobile(const QString &phone_mobile) {
    m_phone_mobile = phone_mobile;
    m_phone_mobile_isSet = true;
}

bool OAICustomer_Address::is_phone_mobile_Set() const{
    return m_phone_mobile_isSet;
}

bool OAICustomer_Address::is_phone_mobile_Valid() const{
    return m_phone_mobile_isValid;
}

QString OAICustomer_Address::getPostcode() const {
    return m_postcode;
}
void OAICustomer_Address::setPostcode(const QString &postcode) {
    m_postcode = postcode;
    m_postcode_isSet = true;
}

bool OAICustomer_Address::is_postcode_Set() const{
    return m_postcode_isSet;
}

bool OAICustomer_Address::is_postcode_Valid() const{
    return m_postcode_isValid;
}

QString OAICustomer_Address::getRegion() const {
    return m_region;
}
void OAICustomer_Address::setRegion(const QString &region) {
    m_region = region;
    m_region_isSet = true;
}

bool OAICustomer_Address::is_region_Set() const{
    return m_region_isSet;
}

bool OAICustomer_Address::is_region_Valid() const{
    return m_region_isValid;
}

OAIState OAICustomer_Address::getState() const {
    return m_state;
}
void OAICustomer_Address::setState(const OAIState &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAICustomer_Address::is_state_Set() const{
    return m_state_isSet;
}

bool OAICustomer_Address::is_state_Valid() const{
    return m_state_isValid;
}

QString OAICustomer_Address::getTaxId() const {
    return m_tax_id;
}
void OAICustomer_Address::setTaxId(const QString &tax_id) {
    m_tax_id = tax_id;
    m_tax_id_isSet = true;
}

bool OAICustomer_Address::is_tax_id_Set() const{
    return m_tax_id_isSet;
}

bool OAICustomer_Address::is_tax_id_Valid() const{
    return m_tax_id_isValid;
}

QString OAICustomer_Address::getType() const {
    return m_type;
}
void OAICustomer_Address::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAICustomer_Address::is_type_Set() const{
    return m_type_isSet;
}

bool OAICustomer_Address::is_type_Valid() const{
    return m_type_isValid;
}

QString OAICustomer_Address::getWebsite() const {
    return m_website;
}
void OAICustomer_Address::setWebsite(const QString &website) {
    m_website = website;
    m_website_isSet = true;
}

bool OAICustomer_Address::is_website_Set() const{
    return m_website_isSet;
}

bool OAICustomer_Address::is_website_Valid() const{
    return m_website_isValid;
}

bool OAICustomer_Address::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_additional_fields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_address1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_address2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_city_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_country.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_fields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_r_default_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gender_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_identification_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_mobile_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_postcode_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_region_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tax_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_website_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustomer_Address::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
