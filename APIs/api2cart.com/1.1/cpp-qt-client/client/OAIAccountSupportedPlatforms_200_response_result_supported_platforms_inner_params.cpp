/**
 * Swagger API2Cart
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccountSupportedPlatforms_200_response_result_supported_platforms_inner_params.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccountSupportedPlatforms_200_response_result_supported_platforms_inner_params::OAIAccountSupportedPlatforms_200_response_result_supported_platforms_inner_params(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccountSupportedPlatforms_200_response_result_supported_platforms_inner_params::OAIAccountSupportedPlatforms_200_response_result_supported_platforms_inner_params() {
    this->initializeModel();
}

OAIAccountSupportedPlatforms_200_response_result_supported_platforms_inner_params::~OAIAccountSupportedPlatforms_200_response_result_supported_platforms_inner_params() {}

void OAIAccountSupportedPlatforms_200_response_result_supported_platforms_inner_params::initializeModel() {

    m_additional_isSet = false;
    m_additional_isValid = false;

    m_required_isSet = false;
    m_required_isValid = false;
}

void OAIAccountSupportedPlatforms_200_response_result_supported_platforms_inner_params::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccountSupportedPlatforms_200_response_result_supported_platforms_inner_params::fromJsonObject(QJsonObject json) {

    m_additional_isValid = ::OpenAPI::fromJsonValue(m_additional, json[QString("additional")]);
    m_additional_isSet = !json[QString("additional")].isNull() && m_additional_isValid;

    if(json["required"].isArray()){
        auto arr = json["required"].toArray();
        m_required_isValid = true;
        if(arr.count() > 0) {
            for (const QJsonValue jval : arr) {
                QList<OAIAccountSupportedPlatforms_200_response_result_supported_platforms_inner_params_additional_inner> item;
                m_required_isValid &= ::OpenAPI::fromJsonValue(item, jval);
                m_required_isSet = !jval.isNull() && m_required_isValid;
                m_required.push_back(item);
            }
        }
    }
}

QString OAIAccountSupportedPlatforms_200_response_result_supported_platforms_inner_params::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccountSupportedPlatforms_200_response_result_supported_platforms_inner_params::asJsonObject() const {
    QJsonObject obj;
    if (m_additional.size() > 0) {
        obj.insert(QString("additional"), ::OpenAPI::toJsonValue(m_additional));
    }
    if (m_required.size() > 0) {
        
        obj.insert(QString("required"), toJsonValue(m_required));
    }
    return obj;
}

QList<OAIAccountSupportedPlatforms_200_response_result_supported_platforms_inner_params_additional_inner> OAIAccountSupportedPlatforms_200_response_result_supported_platforms_inner_params::getAdditional() const {
    return m_additional;
}
void OAIAccountSupportedPlatforms_200_response_result_supported_platforms_inner_params::setAdditional(const QList<OAIAccountSupportedPlatforms_200_response_result_supported_platforms_inner_params_additional_inner> &additional) {
    m_additional = additional;
    m_additional_isSet = true;
}

bool OAIAccountSupportedPlatforms_200_response_result_supported_platforms_inner_params::is_additional_Set() const{
    return m_additional_isSet;
}

bool OAIAccountSupportedPlatforms_200_response_result_supported_platforms_inner_params::is_additional_Valid() const{
    return m_additional_isValid;
}

QList<QList<OAIAccountSupportedPlatforms_200_response_result_supported_platforms_inner_params_additional_inner>> OAIAccountSupportedPlatforms_200_response_result_supported_platforms_inner_params::getRequired() const {
    return m_required;
}
void OAIAccountSupportedPlatforms_200_response_result_supported_platforms_inner_params::setRequired(const QList<QList<OAIAccountSupportedPlatforms_200_response_result_supported_platforms_inner_params_additional_inner>> &required) {
    m_required = required;
    m_required_isSet = true;
}

bool OAIAccountSupportedPlatforms_200_response_result_supported_platforms_inner_params::is_required_Set() const{
    return m_required_isSet;
}

bool OAIAccountSupportedPlatforms_200_response_result_supported_platforms_inner_params::is_required_Valid() const{
    return m_required_isValid;
}

bool OAIAccountSupportedPlatforms_200_response_result_supported_platforms_inner_params::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_additional.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_required.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccountSupportedPlatforms_200_response_result_supported_platforms_inner_params::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
