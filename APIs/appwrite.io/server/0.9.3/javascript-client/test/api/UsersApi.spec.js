/**
 * Appwrite
 * Appwrite backend as a service cuts up to 70% of the time and costs required for building a modern application. We abstract and simplify common development tasks behind a REST APIs, to help you develop your app in a fast and secure way. For full API documentation and tutorials go to [https://appwrite.io/docs](https://appwrite.io/docs)
 *
 * The version of the OpenAPI document: 0.9.3
 * Contact: team@appwrite.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Appwrite);
  }
}(this, function(expect, Appwrite) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Appwrite.UsersApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UsersApi', function() {
    describe('usersCreate', function() {
      it('should call usersCreate successfully', function(done) {
        //uncomment below and update the code to test usersCreate
        //instance.usersCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersDelete', function() {
      it('should call usersDelete successfully', function(done) {
        //uncomment below and update the code to test usersDelete
        //instance.usersDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersDeleteSession', function() {
      it('should call usersDeleteSession successfully', function(done) {
        //uncomment below and update the code to test usersDeleteSession
        //instance.usersDeleteSession(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersDeleteSessions', function() {
      it('should call usersDeleteSessions successfully', function(done) {
        //uncomment below and update the code to test usersDeleteSessions
        //instance.usersDeleteSessions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersGet', function() {
      it('should call usersGet successfully', function(done) {
        //uncomment below and update the code to test usersGet
        //instance.usersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersGetLogs', function() {
      it('should call usersGetLogs successfully', function(done) {
        //uncomment below and update the code to test usersGetLogs
        //instance.usersGetLogs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersGetPrefs', function() {
      it('should call usersGetPrefs successfully', function(done) {
        //uncomment below and update the code to test usersGetPrefs
        //instance.usersGetPrefs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersGetSessions', function() {
      it('should call usersGetSessions successfully', function(done) {
        //uncomment below and update the code to test usersGetSessions
        //instance.usersGetSessions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersList', function() {
      it('should call usersList successfully', function(done) {
        //uncomment below and update the code to test usersList
        //instance.usersList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersUpdatePrefs', function() {
      it('should call usersUpdatePrefs successfully', function(done) {
        //uncomment below and update the code to test usersUpdatePrefs
        //instance.usersUpdatePrefs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersUpdateStatus', function() {
      it('should call usersUpdateStatus successfully', function(done) {
        //uncomment below and update the code to test usersUpdateStatus
        //instance.usersUpdateStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersUpdateVerification', function() {
      it('should call usersUpdateVerification successfully', function(done) {
        //uncomment below and update the code to test usersUpdateVerification
        //instance.usersUpdateVerification(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
