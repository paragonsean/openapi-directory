/**
 * Appwrite
 * Appwrite backend as a service cuts up to 70% of the time and costs required for building a modern application. We abstract and simplify common development tasks behind a REST APIs, to help you develop your app in a fast and secure way. For full API documentation and tutorials go to [https://appwrite.io/docs](https://appwrite.io/docs)
 *
 * The version of the OpenAPI document: 0.9.3
 * Contact: team@appwrite.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITeamList.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITeamList::OAITeamList(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITeamList::OAITeamList() {
    this->initializeModel();
}

OAITeamList::~OAITeamList() {}

void OAITeamList::initializeModel() {

    m_sum_isSet = false;
    m_sum_isValid = false;

    m_teams_isSet = false;
    m_teams_isValid = false;
}

void OAITeamList::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITeamList::fromJsonObject(QJsonObject json) {

    m_sum_isValid = ::OpenAPI::fromJsonValue(m_sum, json[QString("sum")]);
    m_sum_isSet = !json[QString("sum")].isNull() && m_sum_isValid;

    m_teams_isValid = ::OpenAPI::fromJsonValue(m_teams, json[QString("teams")]);
    m_teams_isSet = !json[QString("teams")].isNull() && m_teams_isValid;
}

QString OAITeamList::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITeamList::asJsonObject() const {
    QJsonObject obj;
    if (m_sum_isSet) {
        obj.insert(QString("sum"), ::OpenAPI::toJsonValue(m_sum));
    }
    if (m_teams.size() > 0) {
        obj.insert(QString("teams"), ::OpenAPI::toJsonValue(m_teams));
    }
    return obj;
}

qint32 OAITeamList::getSum() const {
    return m_sum;
}
void OAITeamList::setSum(const qint32 &sum) {
    m_sum = sum;
    m_sum_isSet = true;
}

bool OAITeamList::is_sum_Set() const{
    return m_sum_isSet;
}

bool OAITeamList::is_sum_Valid() const{
    return m_sum_isValid;
}

QList<OAITeam> OAITeamList::getTeams() const {
    return m_teams;
}
void OAITeamList::setTeams(const QList<OAITeam> &teams) {
    m_teams = teams;
    m_teams_isSet = true;
}

bool OAITeamList::is_teams_Set() const{
    return m_teams_isSet;
}

bool OAITeamList::is_teams_Valid() const{
    return m_teams_isValid;
}

bool OAITeamList::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_sum_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_teams.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITeamList::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_sum_isValid && m_teams_isValid && true;
}

} // namespace OpenAPI
