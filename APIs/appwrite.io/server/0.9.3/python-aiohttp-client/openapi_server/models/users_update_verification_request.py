# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UsersUpdateVerificationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, email_verification: bool=None):
        """UsersUpdateVerificationRequest - a model defined in OpenAPI

        :param email_verification: The email_verification of this UsersUpdateVerificationRequest.
        """
        self.openapi_types = {
            'email_verification': bool
        }

        self.attribute_map = {
            'email_verification': 'emailVerification'
        }

        self._email_verification = email_verification

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UsersUpdateVerificationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The usersUpdateVerification_request of this UsersUpdateVerificationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def email_verification(self):
        """Gets the email_verification of this UsersUpdateVerificationRequest.

        User Email Verification Status.

        :return: The email_verification of this UsersUpdateVerificationRequest.
        :rtype: bool
        """
        return self._email_verification

    @email_verification.setter
    def email_verification(self, email_verification):
        """Sets the email_verification of this UsersUpdateVerificationRequest.

        User Email Verification Status.

        :param email_verification: The email_verification of this UsersUpdateVerificationRequest.
        :type email_verification: bool
        """
        if email_verification is None:
            raise ValueError("Invalid value for `email_verification`, must not be `None`")

        self._email_verification = email_verification
