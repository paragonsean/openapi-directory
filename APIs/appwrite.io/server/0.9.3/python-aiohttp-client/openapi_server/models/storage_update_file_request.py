# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StorageUpdateFileRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, read: List[str]=None, write: List[str]=None):
        """StorageUpdateFileRequest - a model defined in OpenAPI

        :param read: The read of this StorageUpdateFileRequest.
        :param write: The write of this StorageUpdateFileRequest.
        """
        self.openapi_types = {
            'read': List[str],
            'write': List[str]
        }

        self.attribute_map = {
            'read': 'read',
            'write': 'write'
        }

        self._read = read
        self._write = write

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StorageUpdateFileRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The storageUpdateFile_request of this StorageUpdateFileRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def read(self):
        """Gets the read of this StorageUpdateFileRequest.

        An array of strings with read permissions. By default no user is granted with any read permissions. [learn more about permissions](/docs/permissions) and get a full list of available permissions.

        :return: The read of this StorageUpdateFileRequest.
        :rtype: List[str]
        """
        return self._read

    @read.setter
    def read(self, read):
        """Sets the read of this StorageUpdateFileRequest.

        An array of strings with read permissions. By default no user is granted with any read permissions. [learn more about permissions](/docs/permissions) and get a full list of available permissions.

        :param read: The read of this StorageUpdateFileRequest.
        :type read: List[str]
        """
        if read is None:
            raise ValueError("Invalid value for `read`, must not be `None`")

        self._read = read

    @property
    def write(self):
        """Gets the write of this StorageUpdateFileRequest.

        An array of strings with write permissions. By default no user is granted with any write permissions. [learn more about permissions](/docs/permissions) and get a full list of available permissions.

        :return: The write of this StorageUpdateFileRequest.
        :rtype: List[str]
        """
        return self._write

    @write.setter
    def write(self, write):
        """Sets the write of this StorageUpdateFileRequest.

        An array of strings with write permissions. By default no user is granted with any write permissions. [learn more about permissions](/docs/permissions) and get a full list of available permissions.

        :param write: The write of this StorageUpdateFileRequest.
        :type write: List[str]
        """
        if write is None:
            raise ValueError("Invalid value for `write`, must not be `None`")

        self._write = write
