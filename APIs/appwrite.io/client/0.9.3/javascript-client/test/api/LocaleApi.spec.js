/**
 * Appwrite
 * Appwrite backend as a service cuts up to 70% of the time and costs required for building a modern application. We abstract and simplify common development tasks behind a REST APIs, to help you develop your app in a fast and secure way. For full API documentation and tutorials go to [https://appwrite.io/docs](https://appwrite.io/docs)
 *
 * The version of the OpenAPI document: 0.9.3
 * Contact: team@appwrite.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Appwrite);
  }
}(this, function(expect, Appwrite) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Appwrite.LocaleApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('LocaleApi', function() {
    describe('localeGet', function() {
      it('should call localeGet successfully', function(done) {
        //uncomment below and update the code to test localeGet
        //instance.localeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('localeGetContinents', function() {
      it('should call localeGetContinents successfully', function(done) {
        //uncomment below and update the code to test localeGetContinents
        //instance.localeGetContinents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('localeGetCountries', function() {
      it('should call localeGetCountries successfully', function(done) {
        //uncomment below and update the code to test localeGetCountries
        //instance.localeGetCountries(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('localeGetCountriesEU', function() {
      it('should call localeGetCountriesEU successfully', function(done) {
        //uncomment below and update the code to test localeGetCountriesEU
        //instance.localeGetCountriesEU(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('localeGetCountriesPhones', function() {
      it('should call localeGetCountriesPhones successfully', function(done) {
        //uncomment below and update the code to test localeGetCountriesPhones
        //instance.localeGetCountriesPhones(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('localeGetCurrencies', function() {
      it('should call localeGetCurrencies successfully', function(done) {
        //uncomment below and update the code to test localeGetCurrencies
        //instance.localeGetCurrencies(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('localeGetLanguages', function() {
      it('should call localeGetLanguages successfully', function(done) {
        //uncomment below and update the code to test localeGetLanguages
        //instance.localeGetLanguages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
