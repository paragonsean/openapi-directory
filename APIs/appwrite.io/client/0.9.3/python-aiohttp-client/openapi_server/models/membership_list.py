# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.membership import Membership
from openapi_server import util


class MembershipList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, memberships: List[Membership]=None, sum: int=None):
        """MembershipList - a model defined in OpenAPI

        :param memberships: The memberships of this MembershipList.
        :param sum: The sum of this MembershipList.
        """
        self.openapi_types = {
            'memberships': List[Membership],
            'sum': int
        }

        self.attribute_map = {
            'memberships': 'memberships',
            'sum': 'sum'
        }

        self._memberships = memberships
        self._sum = sum

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MembershipList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The membershipList of this MembershipList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def memberships(self):
        """Gets the memberships of this MembershipList.

        List of memberships.

        :return: The memberships of this MembershipList.
        :rtype: List[Membership]
        """
        return self._memberships

    @memberships.setter
    def memberships(self, memberships):
        """Sets the memberships of this MembershipList.

        List of memberships.

        :param memberships: The memberships of this MembershipList.
        :type memberships: List[Membership]
        """
        if memberships is None:
            raise ValueError("Invalid value for `memberships`, must not be `None`")

        self._memberships = memberships

    @property
    def sum(self):
        """Gets the sum of this MembershipList.

        Total sum of items in the list.

        :return: The sum of this MembershipList.
        :rtype: int
        """
        return self._sum

    @sum.setter
    def sum(self, sum):
        """Sets the sum of this MembershipList.

        Total sum of items in the list.

        :param sum: The sum of this MembershipList.
        :type sum: int
        """
        if sum is None:
            raise ValueError("Invalid value for `sum`, must not be `None`")

        self._sum = sum
