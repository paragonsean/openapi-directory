/**
 * Appwrite
 * Appwrite backend as a service cuts up to 70% of the time and costs required for building a modern application. We abstract and simplify common development tasks behind a REST APIs, to help you develop your app in a fast and secure way. For full API documentation and tutorials go to [https://appwrite.io/docs](https://appwrite.io/docs)
 *
 * The version of the OpenAPI document: 0.9.3
 * Contact: team@appwrite.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILocale.h
 *
 * Locale
 */

#ifndef OAILocale_H
#define OAILocale_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILocale : public OAIObject {
public:
    OAILocale();
    OAILocale(QString json);
    ~OAILocale() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getContinent() const;
    void setContinent(const QString &continent);
    bool is_continent_Set() const;
    bool is_continent_Valid() const;

    QString getContinentCode() const;
    void setContinentCode(const QString &continent_code);
    bool is_continent_code_Set() const;
    bool is_continent_code_Valid() const;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    QString getCountryCode() const;
    void setCountryCode(const QString &country_code);
    bool is_country_code_Set() const;
    bool is_country_code_Valid() const;

    QString getCurrency() const;
    void setCurrency(const QString &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    bool isEu() const;
    void setEu(const bool &eu);
    bool is_eu_Set() const;
    bool is_eu_Valid() const;

    QString getIp() const;
    void setIp(const QString &ip);
    bool is_ip_Set() const;
    bool is_ip_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_continent;
    bool m_continent_isSet;
    bool m_continent_isValid;

    QString m_continent_code;
    bool m_continent_code_isSet;
    bool m_continent_code_isValid;

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    QString m_country_code;
    bool m_country_code_isSet;
    bool m_country_code_isValid;

    QString m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    bool m_eu;
    bool m_eu_isSet;
    bool m_eu_isValid;

    QString m_ip;
    bool m_ip_isSet;
    bool m_ip_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILocale)

#endif // OAILocale_H
