/**
 * Appwrite
 * Appwrite backend as a service cuts up to 70% of the time and costs required for building a modern application. We abstract and simplify common development tasks behind a REST APIs, to help you develop your app in a fast and secure way. For full API documentation and tutorials go to [https://appwrite.io/docs](https://appwrite.io/docs)
 *
 * The version of the OpenAPI document: 0.9.3
 * Contact: team@appwrite.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDocument.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDocument::OAIDocument(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDocument::OAIDocument() {
    this->initializeModel();
}

OAIDocument::~OAIDocument() {}

void OAIDocument::initializeModel() {

    m_collection_isSet = false;
    m_collection_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_permissions_isSet = false;
    m_permissions_isValid = false;
}

void OAIDocument::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDocument::fromJsonObject(QJsonObject json) {

    m_collection_isValid = ::OpenAPI::fromJsonValue(m_collection, json[QString("$collection")]);
    m_collection_isSet = !json[QString("$collection")].isNull() && m_collection_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("$id")]);
    m_id_isSet = !json[QString("$id")].isNull() && m_id_isValid;

    m_permissions_isValid = ::OpenAPI::fromJsonValue(m_permissions, json[QString("$permissions")]);
    m_permissions_isSet = !json[QString("$permissions")].isNull() && m_permissions_isValid;
}

QString OAIDocument::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDocument::asJsonObject() const {
    QJsonObject obj;
    if (m_collection_isSet) {
        obj.insert(QString("$collection"), ::OpenAPI::toJsonValue(m_collection));
    }
    if (m_id_isSet) {
        obj.insert(QString("$id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_permissions.size() > 0) {
        obj.insert(QString("$permissions"), ::OpenAPI::toJsonValue(m_permissions));
    }
    return obj;
}

QString OAIDocument::getCollection() const {
    return m_collection;
}
void OAIDocument::setCollection(const QString &collection) {
    m_collection = collection;
    m_collection_isSet = true;
}

bool OAIDocument::is_collection_Set() const{
    return m_collection_isSet;
}

bool OAIDocument::is_collection_Valid() const{
    return m_collection_isValid;
}

QString OAIDocument::getId() const {
    return m_id;
}
void OAIDocument::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIDocument::is_id_Set() const{
    return m_id_isSet;
}

bool OAIDocument::is_id_Valid() const{
    return m_id_isValid;
}

QList<OAIPermissions> OAIDocument::getPermissions() const {
    return m_permissions;
}
void OAIDocument::setPermissions(const QList<OAIPermissions> &permissions) {
    m_permissions = permissions;
    m_permissions_isSet = true;
}

bool OAIDocument::is_permissions_Set() const{
    return m_permissions_isSet;
}

bool OAIDocument::is_permissions_Valid() const{
    return m_permissions_isValid;
}

bool OAIDocument::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_collection_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_permissions.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDocument::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_collection_isValid && m_id_isValid && m_permissions_isValid && true;
}

} // namespace OpenAPI
