/**
 * Appwrite
 * Appwrite backend as a service cuts up to 70% of the time and costs required for building a modern application. We abstract and simplify common development tasks behind a REST APIs, to help you develop your app in a fast and secure way. For full API documentation and tutorials go to [https://appwrite.io/docs](https://appwrite.io/docs)
 *
 * The version of the OpenAPI document: 0.9.3
 * Contact: team@appwrite.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccountCreateRecovery_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccountCreateRecovery_request::OAIAccountCreateRecovery_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccountCreateRecovery_request::OAIAccountCreateRecovery_request() {
    this->initializeModel();
}

OAIAccountCreateRecovery_request::~OAIAccountCreateRecovery_request() {}

void OAIAccountCreateRecovery_request::initializeModel() {

    m_email_isSet = false;
    m_email_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIAccountCreateRecovery_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccountCreateRecovery_request::fromJsonObject(QJsonObject json) {

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAIAccountCreateRecovery_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccountCreateRecovery_request::asJsonObject() const {
    QJsonObject obj;
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

QString OAIAccountCreateRecovery_request::getEmail() const {
    return m_email;
}
void OAIAccountCreateRecovery_request::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIAccountCreateRecovery_request::is_email_Set() const{
    return m_email_isSet;
}

bool OAIAccountCreateRecovery_request::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIAccountCreateRecovery_request::getUrl() const {
    return m_url;
}
void OAIAccountCreateRecovery_request::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIAccountCreateRecovery_request::is_url_Set() const{
    return m_url_isSet;
}

bool OAIAccountCreateRecovery_request::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIAccountCreateRecovery_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccountCreateRecovery_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_email_isValid && m_url_isValid && true;
}

} // namespace OpenAPI
