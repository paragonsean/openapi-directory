# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TimeEntryNumbersCollection(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, numbers: List[int]=None):
        """TimeEntryNumbersCollection - a model defined in OpenAPI

        :param numbers: The numbers of this TimeEntryNumbersCollection.
        """
        self.openapi_types = {
            'numbers': List[int]
        }

        self.attribute_map = {
            'numbers': 'numbers'
        }

        self._numbers = numbers

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TimeEntryNumbersCollection':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TimeEntryNumbersCollection of this TimeEntryNumbersCollection.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def numbers(self):
        """Gets the numbers of this TimeEntryNumbersCollection.

        The time entries numbers.<p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>

        :return: The numbers of this TimeEntryNumbersCollection.
        :rtype: List[int]
        """
        return self._numbers

    @numbers.setter
    def numbers(self, numbers):
        """Sets the numbers of this TimeEntryNumbersCollection.

        The time entries numbers.<p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>

        :param numbers: The numbers of this TimeEntryNumbersCollection.
        :type numbers: List[int]
        """
        if numbers is None:
            raise ValueError("Invalid value for `numbers`, must not be `None`")

        self._numbers = numbers
