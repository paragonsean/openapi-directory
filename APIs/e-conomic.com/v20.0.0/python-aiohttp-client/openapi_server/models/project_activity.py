# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProjectActivity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, activity_number: int=None, completed: bool=None, end_date: datetime=None, number: int=None, object_version: str=None, project_number: int=None, responsible_employee_number: int=None, start_date: datetime=None):
        """ProjectActivity - a model defined in OpenAPI

        :param activity_number: The activity_number of this ProjectActivity.
        :param completed: The completed of this ProjectActivity.
        :param end_date: The end_date of this ProjectActivity.
        :param number: The number of this ProjectActivity.
        :param object_version: The object_version of this ProjectActivity.
        :param project_number: The project_number of this ProjectActivity.
        :param responsible_employee_number: The responsible_employee_number of this ProjectActivity.
        :param start_date: The start_date of this ProjectActivity.
        """
        self.openapi_types = {
            'activity_number': int,
            'completed': bool,
            'end_date': datetime,
            'number': int,
            'object_version': str,
            'project_number': int,
            'responsible_employee_number': int,
            'start_date': datetime
        }

        self.attribute_map = {
            'activity_number': 'activityNumber',
            'completed': 'completed',
            'end_date': 'endDate',
            'number': 'number',
            'object_version': 'objectVersion',
            'project_number': 'projectNumber',
            'responsible_employee_number': 'responsibleEmployeeNumber',
            'start_date': 'startDate'
        }

        self._activity_number = activity_number
        self._completed = completed
        self._end_date = end_date
        self._number = number
        self._object_version = object_version
        self._project_number = project_number
        self._responsible_employee_number = responsible_employee_number
        self._start_date = start_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProjectActivity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProjectActivity of this ProjectActivity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def activity_number(self):
        """Gets the activity_number of this ProjectActivity.

        The number of the activity that is linked to the project.<p class='filter'>Filterable: eq, ne, lt, lte, gt, gte, in, nin</p><p class='sort'>Sortable: false</p>

        :return: The activity_number of this ProjectActivity.
        :rtype: int
        """
        return self._activity_number

    @activity_number.setter
    def activity_number(self, activity_number):
        """Sets the activity_number of this ProjectActivity.

        The number of the activity that is linked to the project.<p class='filter'>Filterable: eq, ne, lt, lte, gt, gte, in, nin</p><p class='sort'>Sortable: false</p>

        :param activity_number: The activity_number of this ProjectActivity.
        :type activity_number: int
        """
        if activity_number is None:
            raise ValueError("Invalid value for `activity_number`, must not be `None`")

        self._activity_number = activity_number

    @property
    def completed(self):
        """Gets the completed of this ProjectActivity.

        If set to true, registration on the project is no longer allowed.<p class='filter'>Filterable: eq, ne, lt, lte, gt, gte</p><p class='sort'>Sortable: false</p>

        :return: The completed of this ProjectActivity.
        :rtype: bool
        """
        return self._completed

    @completed.setter
    def completed(self, completed):
        """Sets the completed of this ProjectActivity.

        If set to true, registration on the project is no longer allowed.<p class='filter'>Filterable: eq, ne, lt, lte, gt, gte</p><p class='sort'>Sortable: false</p>

        :param completed: The completed of this ProjectActivity.
        :type completed: bool
        """

        self._completed = completed

    @property
    def end_date(self):
        """Gets the end_date of this ProjectActivity.

        The date when registration on the project activity stops being allowed.<p class='filter'>Filterable: eq, ne, lt, lte, gt, gte</p><p class='sort'>Sortable: false</p>

        :return: The end_date of this ProjectActivity.
        :rtype: datetime
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this ProjectActivity.

        The date when registration on the project activity stops being allowed.<p class='filter'>Filterable: eq, ne, lt, lte, gt, gte</p><p class='sort'>Sortable: false</p>

        :param end_date: The end_date of this ProjectActivity.
        :type end_date: datetime
        """

        self._end_date = end_date

    @property
    def number(self):
        """Gets the number of this ProjectActivity.

        The system unique number of the project activity entry. This property is not visible in the UI.<p class='filter'>Filterable: eq, ne, lt, lte, gt, gte, in, nin</p><p class='sort'>Sortable: true</p>

        :return: The number of this ProjectActivity.
        :rtype: int
        """
        return self._number

    @number.setter
    def number(self, number):
        """Sets the number of this ProjectActivity.

        The system unique number of the project activity entry. This property is not visible in the UI.<p class='filter'>Filterable: eq, ne, lt, lte, gt, gte, in, nin</p><p class='sort'>Sortable: true</p>

        :param number: The number of this ProjectActivity.
        :type number: int
        """

        self._number = number

    @property
    def object_version(self):
        """Gets the object_version of this ProjectActivity.

        The object version, required for PUT requests.<p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>

        :return: The object_version of this ProjectActivity.
        :rtype: str
        """
        return self._object_version

    @object_version.setter
    def object_version(self, object_version):
        """Sets the object_version of this ProjectActivity.

        The object version, required for PUT requests.<p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>

        :param object_version: The object_version of this ProjectActivity.
        :type object_version: str
        """

        self._object_version = object_version

    @property
    def project_number(self):
        """Gets the project_number of this ProjectActivity.

        The number of the project that the activity is linked to.<p class='filter'>Filterable: eq, ne, lt, lte, gt, gte, in, nin</p><p class='sort'>Sortable: false</p>

        :return: The project_number of this ProjectActivity.
        :rtype: int
        """
        return self._project_number

    @project_number.setter
    def project_number(self, project_number):
        """Sets the project_number of this ProjectActivity.

        The number of the project that the activity is linked to.<p class='filter'>Filterable: eq, ne, lt, lte, gt, gte, in, nin</p><p class='sort'>Sortable: false</p>

        :param project_number: The project_number of this ProjectActivity.
        :type project_number: int
        """
        if project_number is None:
            raise ValueError("Invalid value for `project_number`, must not be `None`")

        self._project_number = project_number

    @property
    def responsible_employee_number(self):
        """Gets the responsible_employee_number of this ProjectActivity.

        The number of the employee that is responsible for the project activity.<p class='filter'>Filterable: eq, ne, lt, lte, gt, gte, in, nin</p><p class='sort'>Sortable: false</p>

        :return: The responsible_employee_number of this ProjectActivity.
        :rtype: int
        """
        return self._responsible_employee_number

    @responsible_employee_number.setter
    def responsible_employee_number(self, responsible_employee_number):
        """Sets the responsible_employee_number of this ProjectActivity.

        The number of the employee that is responsible for the project activity.<p class='filter'>Filterable: eq, ne, lt, lte, gt, gte, in, nin</p><p class='sort'>Sortable: false</p>

        :param responsible_employee_number: The responsible_employee_number of this ProjectActivity.
        :type responsible_employee_number: int
        """

        self._responsible_employee_number = responsible_employee_number

    @property
    def start_date(self):
        """Gets the start_date of this ProjectActivity.

        The date when registration on the project activity starts being allowed.<p class='filter'>Filterable: eq, ne, lt, lte, gt, gte</p><p class='sort'>Sortable: false</p>

        :return: The start_date of this ProjectActivity.
        :rtype: datetime
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this ProjectActivity.

        The date when registration on the project activity starts being allowed.<p class='filter'>Filterable: eq, ne, lt, lte, gt, gte</p><p class='sort'>Sortable: false</p>

        :param start_date: The start_date of this ProjectActivity.
        :type start_date: datetime
        """

        self._start_date = start_date
