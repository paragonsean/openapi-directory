# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Error(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, developer_hint: str=None, error_code: str=None, log_id: str=None, log_time_utc: str=None, message: str=None, _property: str=None):
        """Error - a model defined in OpenAPI

        :param developer_hint: The developer_hint of this Error.
        :param error_code: The error_code of this Error.
        :param log_id: The log_id of this Error.
        :param log_time_utc: The log_time_utc of this Error.
        :param message: The message of this Error.
        :param _property: The _property of this Error.
        """
        self.openapi_types = {
            'developer_hint': str,
            'error_code': str,
            'log_id': str,
            'log_time_utc': str,
            'message': str,
            '_property': str
        }

        self.attribute_map = {
            'developer_hint': 'developerHint',
            'error_code': 'errorCode',
            'log_id': 'logId',
            'log_time_utc': 'logTimeUtc',
            'message': 'message',
            '_property': 'property'
        }

        self._developer_hint = developer_hint
        self._error_code = error_code
        self._log_id = log_id
        self._log_time_utc = log_time_utc
        self._message = message
        self.__property = _property

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Error':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Error of this Error.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def developer_hint(self):
        """Gets the developer_hint of this Error.

        Some hints for the developer that might help avoid the error.<p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>

        :return: The developer_hint of this Error.
        :rtype: str
        """
        return self._developer_hint

    @developer_hint.setter
    def developer_hint(self, developer_hint):
        """Sets the developer_hint of this Error.

        Some hints for the developer that might help avoid the error.<p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>

        :param developer_hint: The developer_hint of this Error.
        :type developer_hint: str
        """

        self._developer_hint = developer_hint

    @property
    def error_code(self):
        """Gets the error_code of this Error.

        The error code.<p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>

        :return: The error_code of this Error.
        :rtype: str
        """
        return self._error_code

    @error_code.setter
    def error_code(self, error_code):
        """Sets the error_code of this Error.

        The error code.<p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>

        :param error_code: The error_code of this Error.
        :type error_code: str
        """

        self._error_code = error_code

    @property
    def log_id(self):
        """Gets the log_id of this Error.

        The unique log identifier of the error.<p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>

        :return: The log_id of this Error.
        :rtype: str
        """
        return self._log_id

    @log_id.setter
    def log_id(self, log_id):
        """Sets the log_id of this Error.

        The unique log identifier of the error.<p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>

        :param log_id: The log_id of this Error.
        :type log_id: str
        """

        self._log_id = log_id

    @property
    def log_time_utc(self):
        """Gets the log_time_utc of this Error.

        The UTC time of the error being logged.<p class='filter'>Read-only: true</p><p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>

        :return: The log_time_utc of this Error.
        :rtype: str
        """
        return self._log_time_utc

    @log_time_utc.setter
    def log_time_utc(self, log_time_utc):
        """Sets the log_time_utc of this Error.

        The UTC time of the error being logged.<p class='filter'>Read-only: true</p><p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>

        :param log_time_utc: The log_time_utc of this Error.
        :type log_time_utc: str
        """

        self._log_time_utc = log_time_utc

    @property
    def message(self):
        """Gets the message of this Error.

        Short description about the error.<p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>

        :return: The message of this Error.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this Error.

        Short description about the error.<p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>

        :param message: The message of this Error.
        :type message: str
        """

        self._message = message

    @property
    def _property(self):
        """Gets the _property of this Error.

        The property name in case of validation logic issue.<p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>

        :return: The _property of this Error.
        :rtype: str
        """
        return self.__property

    @_property.setter
    def _property(self, _property):
        """Sets the _property of this Error.

        The property name in case of validation logic issue.<p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>

        :param _property: The _property of this Error.
        :type _property: str
        """

        self.__property = _property
