# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cost_type import CostType
from openapi_server import util


class CostTypeCursorResults(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cursor: str=None, items: List[CostType]=None):
        """CostTypeCursorResults - a model defined in OpenAPI

        :param cursor: The cursor of this CostTypeCursorResults.
        :param items: The items of this CostTypeCursorResults.
        """
        self.openapi_types = {
            'cursor': str,
            'items': List[CostType]
        }

        self.attribute_map = {
            'cursor': 'cursor',
            'items': 'items'
        }

        self._cursor = cursor
        self._items = items

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CostTypeCursorResults':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CostTypeCursorResults of this CostTypeCursorResults.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cursor(self):
        """Gets the cursor of this CostTypeCursorResults.

        Use this continuation cursor in a request back to continue the list. In case there are no more items to retrieve, the cursor is not returned at all.<p class='filter'>Read-only: true</p><p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>

        :return: The cursor of this CostTypeCursorResults.
        :rtype: str
        """
        return self._cursor

    @cursor.setter
    def cursor(self, cursor):
        """Sets the cursor of this CostTypeCursorResults.

        Use this continuation cursor in a request back to continue the list. In case there are no more items to retrieve, the cursor is not returned at all.<p class='filter'>Read-only: true</p><p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>

        :param cursor: The cursor of this CostTypeCursorResults.
        :type cursor: str
        """

        self._cursor = cursor

    @property
    def items(self):
        """Gets the items of this CostTypeCursorResults.

        Max number of items returned is 1000.<p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>

        :return: The items of this CostTypeCursorResults.
        :rtype: List[CostType]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this CostTypeCursorResults.

        Max number of items returned is 1000.<p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>

        :param items: The items of this CostTypeCursorResults.
        :type items: List[CostType]
        """

        self._items = items
