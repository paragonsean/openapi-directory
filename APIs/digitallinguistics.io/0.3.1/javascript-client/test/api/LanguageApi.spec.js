/**
 * DLx
 * The Digital Linguistics (DLx) REST API
 *
 * The version of the OpenAPI document: 0.3.1
 * Contact: dhieber@umail.ucsb.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Dlx);
  }
}(this, function(expect, Dlx) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Dlx.LanguageApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('LanguageApi', function() {
    describe('addLanguage', function() {
      it('should call addLanguage successfully', function(done) {
        //uncomment below and update the code to test addLanguage
        //instance.addLanguage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addLexemeByLanguage', function() {
      it('should call addLexemeByLanguage successfully', function(done) {
        //uncomment below and update the code to test addLexemeByLanguage
        //instance.addLexemeByLanguage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteLanguage', function() {
      it('should call deleteLanguage successfully', function(done) {
        //uncomment below and update the code to test deleteLanguage
        //instance.deleteLanguage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteLexemeByLanguage', function() {
      it('should call deleteLexemeByLanguage successfully', function(done) {
        //uncomment below and update the code to test deleteLexemeByLanguage
        //instance.deleteLexemeByLanguage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLanguage', function() {
      it('should call getLanguage successfully', function(done) {
        //uncomment below and update the code to test getLanguage
        //instance.getLanguage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLanguages', function() {
      it('should call getLanguages successfully', function(done) {
        //uncomment below and update the code to test getLanguages
        //instance.getLanguages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLexemeByLanguage', function() {
      it('should call getLexemeByLanguage successfully', function(done) {
        //uncomment below and update the code to test getLexemeByLanguage
        //instance.getLexemeByLanguage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLexemesByLanguage', function() {
      it('should call getLexemesByLanguage successfully', function(done) {
        //uncomment below and update the code to test getLexemesByLanguage
        //instance.getLexemesByLanguage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateLanguage', function() {
      it('should call updateLanguage successfully', function(done) {
        //uncomment below and update the code to test updateLanguage
        //instance.updateLanguage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('upsertLanguage', function() {
      it('should call upsertLanguage successfully', function(done) {
        //uncomment below and update the code to test upsertLanguage
        //instance.upsertLanguage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('upsertLexemeByLanguage', function() {
      it('should call upsertLexemeByLanguage successfully', function(done) {
        //uncomment below and update the code to test upsertLexemeByLanguage
        //instance.upsertLexemeByLanguage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
