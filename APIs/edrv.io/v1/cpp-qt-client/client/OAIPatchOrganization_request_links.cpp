/**
 * eDRV API
 * edrv.io API Documentation
 *
 * The version of the OpenAPI document: v1
 * Contact: hello@edrv.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPatchOrganization_request_links.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPatchOrganization_request_links::OAIPatchOrganization_request_links(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPatchOrganization_request_links::OAIPatchOrganization_request_links() {
    this->initializeModel();
}

OAIPatchOrganization_request_links::~OAIPatchOrganization_request_links() {}

void OAIPatchOrganization_request_links::initializeModel() {

    m_about_isSet = false;
    m_about_isValid = false;

    m_contact_isSet = false;
    m_contact_isValid = false;

    m_privacy_isSet = false;
    m_privacy_isValid = false;

    m_support_isSet = false;
    m_support_isValid = false;
}

void OAIPatchOrganization_request_links::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPatchOrganization_request_links::fromJsonObject(QJsonObject json) {

    m_about_isValid = ::OpenAPI::fromJsonValue(m_about, json[QString("about")]);
    m_about_isSet = !json[QString("about")].isNull() && m_about_isValid;

    m_contact_isValid = ::OpenAPI::fromJsonValue(m_contact, json[QString("contact")]);
    m_contact_isSet = !json[QString("contact")].isNull() && m_contact_isValid;

    m_privacy_isValid = ::OpenAPI::fromJsonValue(m_privacy, json[QString("privacy")]);
    m_privacy_isSet = !json[QString("privacy")].isNull() && m_privacy_isValid;

    m_support_isValid = ::OpenAPI::fromJsonValue(m_support, json[QString("support")]);
    m_support_isSet = !json[QString("support")].isNull() && m_support_isValid;
}

QString OAIPatchOrganization_request_links::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPatchOrganization_request_links::asJsonObject() const {
    QJsonObject obj;
    if (m_about_isSet) {
        obj.insert(QString("about"), ::OpenAPI::toJsonValue(m_about));
    }
    if (m_contact_isSet) {
        obj.insert(QString("contact"), ::OpenAPI::toJsonValue(m_contact));
    }
    if (m_privacy_isSet) {
        obj.insert(QString("privacy"), ::OpenAPI::toJsonValue(m_privacy));
    }
    if (m_support_isSet) {
        obj.insert(QString("support"), ::OpenAPI::toJsonValue(m_support));
    }
    return obj;
}

QString OAIPatchOrganization_request_links::getAbout() const {
    return m_about;
}
void OAIPatchOrganization_request_links::setAbout(const QString &about) {
    m_about = about;
    m_about_isSet = true;
}

bool OAIPatchOrganization_request_links::is_about_Set() const{
    return m_about_isSet;
}

bool OAIPatchOrganization_request_links::is_about_Valid() const{
    return m_about_isValid;
}

QString OAIPatchOrganization_request_links::getContact() const {
    return m_contact;
}
void OAIPatchOrganization_request_links::setContact(const QString &contact) {
    m_contact = contact;
    m_contact_isSet = true;
}

bool OAIPatchOrganization_request_links::is_contact_Set() const{
    return m_contact_isSet;
}

bool OAIPatchOrganization_request_links::is_contact_Valid() const{
    return m_contact_isValid;
}

QString OAIPatchOrganization_request_links::getPrivacy() const {
    return m_privacy;
}
void OAIPatchOrganization_request_links::setPrivacy(const QString &privacy) {
    m_privacy = privacy;
    m_privacy_isSet = true;
}

bool OAIPatchOrganization_request_links::is_privacy_Set() const{
    return m_privacy_isSet;
}

bool OAIPatchOrganization_request_links::is_privacy_Valid() const{
    return m_privacy_isValid;
}

QString OAIPatchOrganization_request_links::getSupport() const {
    return m_support;
}
void OAIPatchOrganization_request_links::setSupport(const QString &support) {
    m_support = support;
    m_support_isSet = true;
}

bool OAIPatchOrganization_request_links::is_support_Set() const{
    return m_support_isSet;
}

bool OAIPatchOrganization_request_links::is_support_Valid() const{
    return m_support_isValid;
}

bool OAIPatchOrganization_request_links::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_about_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_privacy_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_support_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPatchOrganization_request_links::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
