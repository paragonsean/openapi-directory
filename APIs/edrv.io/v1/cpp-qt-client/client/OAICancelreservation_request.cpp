/**
 * eDRV API
 * edrv.io API Documentation
 *
 * The version of the OpenAPI document: v1
 * Contact: hello@edrv.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICancelreservation_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICancelreservation_request::OAICancelreservation_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICancelreservation_request::OAICancelreservation_request() {
    this->initializeModel();
}

OAICancelreservation_request::~OAICancelreservation_request() {}

void OAICancelreservation_request::initializeModel() {

    m_reservation_isSet = false;
    m_reservation_isValid = false;
}

void OAICancelreservation_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICancelreservation_request::fromJsonObject(QJsonObject json) {

    m_reservation_isValid = ::OpenAPI::fromJsonValue(m_reservation, json[QString("reservation")]);
    m_reservation_isSet = !json[QString("reservation")].isNull() && m_reservation_isValid;
}

QString OAICancelreservation_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICancelreservation_request::asJsonObject() const {
    QJsonObject obj;
    if (m_reservation_isSet) {
        obj.insert(QString("reservation"), ::OpenAPI::toJsonValue(m_reservation));
    }
    return obj;
}

QString OAICancelreservation_request::getReservation() const {
    return m_reservation;
}
void OAICancelreservation_request::setReservation(const QString &reservation) {
    m_reservation = reservation;
    m_reservation_isSet = true;
}

bool OAICancelreservation_request::is_reservation_Set() const{
    return m_reservation_isSet;
}

bool OAICancelreservation_request::is_reservation_Valid() const{
    return m_reservation_isValid;
}

bool OAICancelreservation_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_reservation_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICancelreservation_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
