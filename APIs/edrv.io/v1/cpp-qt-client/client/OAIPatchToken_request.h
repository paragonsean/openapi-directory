/**
 * eDRV API
 * edrv.io API Documentation
 *
 * The version of the OpenAPI document: v1
 * Contact: hello@edrv.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPatchToken_request.h
 *
 * 
 */

#ifndef OAIPatchToken_request_H
#define OAIPatchToken_request_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPatchToken_request : public OAIObject {
public:
    OAIPatchToken_request();
    OAIPatchToken_request(QString json);
    ~OAIPatchToken_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isActive() const;
    void setActive(const bool &active);
    bool is_active_Set() const;
    bool is_active_Valid() const;

    QString getChannel() const;
    void setChannel(const QString &channel);
    bool is_channel_Set() const;
    bool is_channel_Valid() const;

    QString getDriver() const;
    void setDriver(const QString &driver);
    bool is_driver_Set() const;
    bool is_driver_Valid() const;

    QString getPhysicalId() const;
    void setPhysicalId(const QString &physical_id);
    bool is_physical_id_Set() const;
    bool is_physical_id_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_active;
    bool m_active_isSet;
    bool m_active_isValid;

    QString m_channel;
    bool m_channel_isSet;
    bool m_channel_isValid;

    QString m_driver;
    bool m_driver_isSet;
    bool m_driver_isValid;

    QString m_physical_id;
    bool m_physical_id_isSet;
    bool m_physical_id_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPatchToken_request)

#endif // OAIPatchToken_request_H
