/**
 * eDRV API
 * edrv.io API Documentation
 *
 * The version of the OpenAPI document: v1
 * Contact: hello@edrv.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPostChargeStations_201_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPostChargeStations_201_response::OAIPostChargeStations_201_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPostChargeStations_201_response::OAIPostChargeStations_201_response() {
    this->initializeModel();
}

OAIPostChargeStations_201_response::~OAIPostChargeStations_201_response() {}

void OAIPostChargeStations_201_response::initializeModel() {

    m_chargestation_isSet = false;
    m_chargestation_isValid = false;

    m_message_isSet = false;
    m_message_isValid = false;

    m_ok_isSet = false;
    m_ok_isValid = false;
}

void OAIPostChargeStations_201_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPostChargeStations_201_response::fromJsonObject(QJsonObject json) {

    m_chargestation_isValid = ::OpenAPI::fromJsonValue(m_chargestation, json[QString("chargestation")]);
    m_chargestation_isSet = !json[QString("chargestation")].isNull() && m_chargestation_isValid;

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;

    m_ok_isValid = ::OpenAPI::fromJsonValue(m_ok, json[QString("ok")]);
    m_ok_isSet = !json[QString("ok")].isNull() && m_ok_isValid;
}

QString OAIPostChargeStations_201_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPostChargeStations_201_response::asJsonObject() const {
    QJsonObject obj;
    if (m_chargestation_isSet) {
        obj.insert(QString("chargestation"), ::OpenAPI::toJsonValue(m_chargestation));
    }
    if (m_message_isSet) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    if (m_ok_isSet) {
        obj.insert(QString("ok"), ::OpenAPI::toJsonValue(m_ok));
    }
    return obj;
}

OAIObject OAIPostChargeStations_201_response::getChargestation() const {
    return m_chargestation;
}
void OAIPostChargeStations_201_response::setChargestation(const OAIObject &chargestation) {
    m_chargestation = chargestation;
    m_chargestation_isSet = true;
}

bool OAIPostChargeStations_201_response::is_chargestation_Set() const{
    return m_chargestation_isSet;
}

bool OAIPostChargeStations_201_response::is_chargestation_Valid() const{
    return m_chargestation_isValid;
}

QString OAIPostChargeStations_201_response::getMessage() const {
    return m_message;
}
void OAIPostChargeStations_201_response::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAIPostChargeStations_201_response::is_message_Set() const{
    return m_message_isSet;
}

bool OAIPostChargeStations_201_response::is_message_Valid() const{
    return m_message_isValid;
}

bool OAIPostChargeStations_201_response::isOk() const {
    return m_ok;
}
void OAIPostChargeStations_201_response::setOk(const bool &ok) {
    m_ok = ok;
    m_ok_isSet = true;
}

bool OAIPostChargeStations_201_response::is_ok_Set() const{
    return m_ok_isSet;
}

bool OAIPostChargeStations_201_response::is_ok_Valid() const{
    return m_ok_isValid;
}

bool OAIPostChargeStations_201_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_chargestation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ok_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPostChargeStations_201_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
