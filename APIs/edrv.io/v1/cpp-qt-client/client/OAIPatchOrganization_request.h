/**
 * eDRV API
 * edrv.io API Documentation
 *
 * The version of the OpenAPI document: v1
 * Contact: hello@edrv.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPatchOrganization_request.h
 *
 * 
 */

#ifndef OAIPatchOrganization_request_H
#define OAIPatchOrganization_request_H

#include <QJsonObject>

#include "OAIPatchOrganization_request_channels.h"
#include "OAIPatchOrganization_request_configurations.h"
#include "OAIPatchOrganization_request_links.h"
#include "OAIPatchOrganization_request_support.h"
#include "OAIPatchOrganization_request_supportChat.h"
#include "OAIPatchOrganization_request_theme.h"
#include "OAIPostDrivers_request_address.h"
#include <QJsonValue>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPostDrivers_request_address;
class OAIPatchOrganization_request_channels;
class OAIPatchOrganization_request_configurations;
class OAIPatchOrganization_request_links;
class OAIPatchOrganization_request_support;
class OAIPatchOrganization_request_supportChat;
class OAIPatchOrganization_request_theme;

class OAIPatchOrganization_request : public OAIObject {
public:
    OAIPatchOrganization_request();
    OAIPatchOrganization_request(QString json);
    ~OAIPatchOrganization_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isActive() const;
    void setActive(const bool &active);
    bool is_active_Set() const;
    bool is_active_Valid() const;

    OAIPostDrivers_request_address getAddress() const;
    void setAddress(const OAIPostDrivers_request_address &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    OAIPatchOrganization_request_channels getChannels() const;
    void setChannels(const OAIPatchOrganization_request_channels &channels);
    bool is_channels_Set() const;
    bool is_channels_Valid() const;

    OAIPatchOrganization_request_configurations getConfigurations() const;
    void setConfigurations(const OAIPatchOrganization_request_configurations &configurations);
    bool is_configurations_Set() const;
    bool is_configurations_Valid() const;

    OAIPatchOrganization_request_links getLinks() const;
    void setLinks(const OAIPatchOrganization_request_links &links);
    bool is_links_Set() const;
    bool is_links_Valid() const;

    QList<QJsonValue> getLocations() const;
    void setLocations(const QList<QJsonValue> &locations);
    bool is_locations_Set() const;
    bool is_locations_Valid() const;

    QString getLogo() const;
    void setLogo(const QString &logo);
    bool is_logo_Set() const;
    bool is_logo_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getOtp() const;
    void setOtp(const QString &otp);
    bool is_otp_Set() const;
    bool is_otp_Valid() const;

    QString getStripeConnectedAccountId() const;
    void setStripeConnectedAccountId(const QString &stripe_connected_account_id);
    bool is_stripe_connected_account_id_Set() const;
    bool is_stripe_connected_account_id_Valid() const;

    QString getStripeCountry() const;
    void setStripeCountry(const QString &stripe_country);
    bool is_stripe_country_Set() const;
    bool is_stripe_country_Valid() const;

    QString getStripeCurrency() const;
    void setStripeCurrency(const QString &stripe_currency);
    bool is_stripe_currency_Set() const;
    bool is_stripe_currency_Valid() const;

    qint32 getStripeReserveAmount() const;
    void setStripeReserveAmount(const qint32 &stripe_reserve_amount);
    bool is_stripe_reserve_amount_Set() const;
    bool is_stripe_reserve_amount_Valid() const;

    OAIPatchOrganization_request_support getSupport() const;
    void setSupport(const OAIPatchOrganization_request_support &support);
    bool is_support_Set() const;
    bool is_support_Valid() const;

    OAIPatchOrganization_request_supportChat getSupportChat() const;
    void setSupportChat(const OAIPatchOrganization_request_supportChat &support_chat);
    bool is_support_chat_Set() const;
    bool is_support_chat_Valid() const;

    OAIPatchOrganization_request_theme getTheme() const;
    void setTheme(const OAIPatchOrganization_request_theme &theme);
    bool is_theme_Set() const;
    bool is_theme_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_active;
    bool m_active_isSet;
    bool m_active_isValid;

    OAIPostDrivers_request_address m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    OAIPatchOrganization_request_channels m_channels;
    bool m_channels_isSet;
    bool m_channels_isValid;

    OAIPatchOrganization_request_configurations m_configurations;
    bool m_configurations_isSet;
    bool m_configurations_isValid;

    OAIPatchOrganization_request_links m_links;
    bool m_links_isSet;
    bool m_links_isValid;

    QList<QJsonValue> m_locations;
    bool m_locations_isSet;
    bool m_locations_isValid;

    QString m_logo;
    bool m_logo_isSet;
    bool m_logo_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_otp;
    bool m_otp_isSet;
    bool m_otp_isValid;

    QString m_stripe_connected_account_id;
    bool m_stripe_connected_account_id_isSet;
    bool m_stripe_connected_account_id_isValid;

    QString m_stripe_country;
    bool m_stripe_country_isSet;
    bool m_stripe_country_isValid;

    QString m_stripe_currency;
    bool m_stripe_currency_isSet;
    bool m_stripe_currency_isValid;

    qint32 m_stripe_reserve_amount;
    bool m_stripe_reserve_amount_isSet;
    bool m_stripe_reserve_amount_isValid;

    OAIPatchOrganization_request_support m_support;
    bool m_support_isSet;
    bool m_support_isValid;

    OAIPatchOrganization_request_supportChat m_support_chat;
    bool m_support_chat_isSet;
    bool m_support_chat_isValid;

    OAIPatchOrganization_request_theme m_theme;
    bool m_theme_isSet;
    bool m_theme_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPatchOrganization_request)

#endif // OAIPatchOrganization_request_H
