/**
 * eDRV API
 * edrv.io API Documentation
 *
 * The version of the OpenAPI document: v1
 * Contact: hello@edrv.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* Realtime service.
* @module api/RealtimeApi
* @version v1
*/
export default class RealtimeApi {

    /**
    * Constructs a new RealtimeApi. 
    * @alias module:api/RealtimeApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getRealtime operation.
     * @callback module:api/RealtimeApi~getRealtimeCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Use to request a Websockets handshake
     * @param {String} secWebsocketProtocol The JWT token to use for auth
     * @param {module:api/RealtimeApi~getRealtimeCallback} callback The callback function, accepting three arguments: error, data, response
     */
    getRealtime(secWebsocketProtocol, callback) {
      let postBody = null;
      // verify the required parameter 'secWebsocketProtocol' is set
      if (secWebsocketProtocol === undefined || secWebsocketProtocol === null) {
        throw new Error("Missing the required parameter 'secWebsocketProtocol' when calling getRealtime");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'sec-websocket-protocol': secWebsocketProtocol
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/v1/realtime', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
