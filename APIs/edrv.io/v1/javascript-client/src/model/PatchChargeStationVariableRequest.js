/**
 * eDRV API
 * edrv.io API Documentation
 *
 * The version of the OpenAPI document: v1
 * Contact: hello@edrv.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PatchChargeStationVariableRequest model module.
 * @module model/PatchChargeStationVariableRequest
 * @version v1
 */
class PatchChargeStationVariableRequest {
    /**
     * Constructs a new <code>PatchChargeStationVariableRequest</code>.
     * @alias module:model/PatchChargeStationVariableRequest
     */
    constructor() { 
        
        PatchChargeStationVariableRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PatchChargeStationVariableRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PatchChargeStationVariableRequest} obj Optional instance to populate.
     * @return {module:model/PatchChargeStationVariableRequest} The populated <code>PatchChargeStationVariableRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PatchChargeStationVariableRequest();

            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
            if (data.hasOwnProperty('variable')) {
                obj['variable'] = ApiClient.convertToType(data['variable'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PatchChargeStationVariableRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PatchChargeStationVariableRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }
        // ensure the json data is a string
        if (data['variable'] && !(typeof data['variable'] === 'string' || data['variable'] instanceof String)) {
            throw new Error("Expected the field `variable` to be a primitive type in the JSON string but got " + data['variable']);
        }

        return true;
    }


}



/**
 * @member {String} value
 */
PatchChargeStationVariableRequest.prototype['value'] = undefined;

/**
 * @member {module:model/PatchChargeStationVariableRequest.VariableEnum} variable
 */
PatchChargeStationVariableRequest.prototype['variable'] = undefined;





/**
 * Allowed values for the <code>variable</code> property.
 * @enum {String}
 * @readonly
 */
PatchChargeStationVariableRequest['VariableEnum'] = {

    /**
     * value: "MeterValueSampleInterval"
     * @const
     */
    "MeterValueSampleInterval": "MeterValueSampleInterval",

    /**
     * value: "HeartbeatInterval"
     * @const
     */
    "HeartbeatInterval": "HeartbeatInterval",

    /**
     * value: "ConnectionTimeOut"
     * @const
     */
    "ConnectionTimeOut": "ConnectionTimeOut",

    /**
     * value: "WebSocketPingInterval"
     * @const
     */
    "WebSocketPingInterval": "WebSocketPingInterval",

    /**
     * value: "TransactionMessageRetryInterval"
     * @const
     */
    "TransactionMessageRetryInterval": "TransactionMessageRetryInterval",

    /**
     * value: "TransactionMessageAttempts"
     * @const
     */
    "TransactionMessageAttempts": "TransactionMessageAttempts"
};



export default PatchChargeStationVariableRequest;

