/**
 * eDRV API
 * edrv.io API Documentation
 *
 * The version of the OpenAPI document: v1
 * Contact: hello@edrv.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PostDriversRequestPhone model module.
 * @module model/PostDriversRequestPhone
 * @version v1
 */
class PostDriversRequestPhone {
    /**
     * Constructs a new <code>PostDriversRequestPhone</code>.
     * @alias module:model/PostDriversRequestPhone
     */
    constructor() { 
        
        PostDriversRequestPhone.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PostDriversRequestPhone</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PostDriversRequestPhone} obj Optional instance to populate.
     * @return {module:model/PostDriversRequestPhone} The populated <code>PostDriversRequestPhone</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PostDriversRequestPhone();

            if (data.hasOwnProperty('home')) {
                obj['home'] = ApiClient.convertToType(data['home'], 'String');
            }
            if (data.hasOwnProperty('mobile')) {
                obj['mobile'] = ApiClient.convertToType(data['mobile'], 'String');
            }
            if (data.hasOwnProperty('work')) {
                obj['work'] = ApiClient.convertToType(data['work'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PostDriversRequestPhone</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PostDriversRequestPhone</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['home'] && !(typeof data['home'] === 'string' || data['home'] instanceof String)) {
            throw new Error("Expected the field `home` to be a primitive type in the JSON string but got " + data['home']);
        }
        // ensure the json data is a string
        if (data['mobile'] && !(typeof data['mobile'] === 'string' || data['mobile'] instanceof String)) {
            throw new Error("Expected the field `mobile` to be a primitive type in the JSON string but got " + data['mobile']);
        }
        // ensure the json data is a string
        if (data['work'] && !(typeof data['work'] === 'string' || data['work'] instanceof String)) {
            throw new Error("Expected the field `work` to be a primitive type in the JSON string but got " + data['work']);
        }

        return true;
    }


}



/**
 * @member {String} home
 */
PostDriversRequestPhone.prototype['home'] = undefined;

/**
 * @member {String} mobile
 */
PostDriversRequestPhone.prototype['mobile'] = undefined;

/**
 * @member {String} work
 */
PostDriversRequestPhone.prototype['work'] = undefined;






export default PostDriversRequestPhone;

