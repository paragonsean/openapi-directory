/**
 * eDRV API
 * edrv.io API Documentation
 *
 * The version of the OpenAPI document: v1
 * Contact: hello@edrv.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PatchOrganizationRequestChannels from './PatchOrganizationRequestChannels';
import PatchOrganizationRequestConfigurations from './PatchOrganizationRequestConfigurations';
import PatchOrganizationRequestLinks from './PatchOrganizationRequestLinks';
import PatchOrganizationRequestSupport from './PatchOrganizationRequestSupport';
import PatchOrganizationRequestSupportChat from './PatchOrganizationRequestSupportChat';
import PatchOrganizationRequestTheme from './PatchOrganizationRequestTheme';
import PostDriversRequestAddress from './PostDriversRequestAddress';

/**
 * The PatchOrganizationRequest model module.
 * @module model/PatchOrganizationRequest
 * @version v1
 */
class PatchOrganizationRequest {
    /**
     * Constructs a new <code>PatchOrganizationRequest</code>.
     * @alias module:model/PatchOrganizationRequest
     */
    constructor() { 
        
        PatchOrganizationRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PatchOrganizationRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PatchOrganizationRequest} obj Optional instance to populate.
     * @return {module:model/PatchOrganizationRequest} The populated <code>PatchOrganizationRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PatchOrganizationRequest();

            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
            }
            if (data.hasOwnProperty('address')) {
                obj['address'] = PostDriversRequestAddress.constructFromObject(data['address']);
            }
            if (data.hasOwnProperty('channels')) {
                obj['channels'] = PatchOrganizationRequestChannels.constructFromObject(data['channels']);
            }
            if (data.hasOwnProperty('configurations')) {
                obj['configurations'] = PatchOrganizationRequestConfigurations.constructFromObject(data['configurations']);
            }
            if (data.hasOwnProperty('links')) {
                obj['links'] = PatchOrganizationRequestLinks.constructFromObject(data['links']);
            }
            if (data.hasOwnProperty('locations')) {
                obj['locations'] = ApiClient.convertToType(data['locations'], [Object]);
            }
            if (data.hasOwnProperty('logo')) {
                obj['logo'] = ApiClient.convertToType(data['logo'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('otp')) {
                obj['otp'] = ApiClient.convertToType(data['otp'], 'String');
            }
            if (data.hasOwnProperty('stripe_connected_account_id')) {
                obj['stripe_connected_account_id'] = ApiClient.convertToType(data['stripe_connected_account_id'], 'String');
            }
            if (data.hasOwnProperty('stripe_country')) {
                obj['stripe_country'] = ApiClient.convertToType(data['stripe_country'], 'String');
            }
            if (data.hasOwnProperty('stripe_currency')) {
                obj['stripe_currency'] = ApiClient.convertToType(data['stripe_currency'], 'String');
            }
            if (data.hasOwnProperty('stripe_reserve_amount')) {
                obj['stripe_reserve_amount'] = ApiClient.convertToType(data['stripe_reserve_amount'], 'Number');
            }
            if (data.hasOwnProperty('support')) {
                obj['support'] = PatchOrganizationRequestSupport.constructFromObject(data['support']);
            }
            if (data.hasOwnProperty('supportChat')) {
                obj['supportChat'] = PatchOrganizationRequestSupportChat.constructFromObject(data['supportChat']);
            }
            if (data.hasOwnProperty('theme')) {
                obj['theme'] = PatchOrganizationRequestTheme.constructFromObject(data['theme']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PatchOrganizationRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PatchOrganizationRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `address`
        if (data['address']) { // data not null
          PostDriversRequestAddress.validateJSON(data['address']);
        }
        // validate the optional field `channels`
        if (data['channels']) { // data not null
          PatchOrganizationRequestChannels.validateJSON(data['channels']);
        }
        // validate the optional field `configurations`
        if (data['configurations']) { // data not null
          PatchOrganizationRequestConfigurations.validateJSON(data['configurations']);
        }
        // validate the optional field `links`
        if (data['links']) { // data not null
          PatchOrganizationRequestLinks.validateJSON(data['links']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['locations'])) {
            throw new Error("Expected the field `locations` to be an array in the JSON data but got " + data['locations']);
        }
        // ensure the json data is a string
        if (data['logo'] && !(typeof data['logo'] === 'string' || data['logo'] instanceof String)) {
            throw new Error("Expected the field `logo` to be a primitive type in the JSON string but got " + data['logo']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['otp'] && !(typeof data['otp'] === 'string' || data['otp'] instanceof String)) {
            throw new Error("Expected the field `otp` to be a primitive type in the JSON string but got " + data['otp']);
        }
        // ensure the json data is a string
        if (data['stripe_connected_account_id'] && !(typeof data['stripe_connected_account_id'] === 'string' || data['stripe_connected_account_id'] instanceof String)) {
            throw new Error("Expected the field `stripe_connected_account_id` to be a primitive type in the JSON string but got " + data['stripe_connected_account_id']);
        }
        // ensure the json data is a string
        if (data['stripe_country'] && !(typeof data['stripe_country'] === 'string' || data['stripe_country'] instanceof String)) {
            throw new Error("Expected the field `stripe_country` to be a primitive type in the JSON string but got " + data['stripe_country']);
        }
        // ensure the json data is a string
        if (data['stripe_currency'] && !(typeof data['stripe_currency'] === 'string' || data['stripe_currency'] instanceof String)) {
            throw new Error("Expected the field `stripe_currency` to be a primitive type in the JSON string but got " + data['stripe_currency']);
        }
        // validate the optional field `support`
        if (data['support']) { // data not null
          PatchOrganizationRequestSupport.validateJSON(data['support']);
        }
        // validate the optional field `supportChat`
        if (data['supportChat']) { // data not null
          PatchOrganizationRequestSupportChat.validateJSON(data['supportChat']);
        }
        // validate the optional field `theme`
        if (data['theme']) { // data not null
          PatchOrganizationRequestTheme.validateJSON(data['theme']);
        }

        return true;
    }


}



/**
 * @member {Boolean} active
 */
PatchOrganizationRequest.prototype['active'] = undefined;

/**
 * @member {module:model/PostDriversRequestAddress} address
 */
PatchOrganizationRequest.prototype['address'] = undefined;

/**
 * @member {module:model/PatchOrganizationRequestChannels} channels
 */
PatchOrganizationRequest.prototype['channels'] = undefined;

/**
 * @member {module:model/PatchOrganizationRequestConfigurations} configurations
 */
PatchOrganizationRequest.prototype['configurations'] = undefined;

/**
 * @member {module:model/PatchOrganizationRequestLinks} links
 */
PatchOrganizationRequest.prototype['links'] = undefined;

/**
 * @member {Array.<Object>} locations
 */
PatchOrganizationRequest.prototype['locations'] = undefined;

/**
 * @member {String} logo
 */
PatchOrganizationRequest.prototype['logo'] = undefined;

/**
 * @member {String} name
 */
PatchOrganizationRequest.prototype['name'] = undefined;

/**
 * @member {String} otp
 */
PatchOrganizationRequest.prototype['otp'] = undefined;

/**
 * @member {String} stripe_connected_account_id
 */
PatchOrganizationRequest.prototype['stripe_connected_account_id'] = undefined;

/**
 * @member {String} stripe_country
 */
PatchOrganizationRequest.prototype['stripe_country'] = undefined;

/**
 * @member {String} stripe_currency
 */
PatchOrganizationRequest.prototype['stripe_currency'] = undefined;

/**
 * @member {Number} stripe_reserve_amount
 */
PatchOrganizationRequest.prototype['stripe_reserve_amount'] = undefined;

/**
 * @member {module:model/PatchOrganizationRequestSupport} support
 */
PatchOrganizationRequest.prototype['support'] = undefined;

/**
 * @member {module:model/PatchOrganizationRequestSupportChat} supportChat
 */
PatchOrganizationRequest.prototype['supportChat'] = undefined;

/**
 * @member {module:model/PatchOrganizationRequestTheme} theme
 */
PatchOrganizationRequest.prototype['theme'] = undefined;






export default PatchOrganizationRequest;

