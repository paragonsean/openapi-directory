/**
 * eDRV API
 * edrv.io API Documentation
 *
 * The version of the OpenAPI document: v1
 * Contact: hello@edrv.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EDrvApi);
  }
}(this, function(expect, EDrvApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new EDrvApi.PatchOrganizationRequest();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PatchOrganizationRequest', function() {
    it('should create an instance of PatchOrganizationRequest', function() {
      // uncomment below and update the code to test PatchOrganizationRequest
      //var instance = new EDrvApi.PatchOrganizationRequest();
      //expect(instance).to.be.a(EDrvApi.PatchOrganizationRequest);
    });

    it('should have the property active (base name: "active")', function() {
      // uncomment below and update the code to test the property active
      //var instance = new EDrvApi.PatchOrganizationRequest();
      //expect(instance).to.be();
    });

    it('should have the property address (base name: "address")', function() {
      // uncomment below and update the code to test the property address
      //var instance = new EDrvApi.PatchOrganizationRequest();
      //expect(instance).to.be();
    });

    it('should have the property channels (base name: "channels")', function() {
      // uncomment below and update the code to test the property channels
      //var instance = new EDrvApi.PatchOrganizationRequest();
      //expect(instance).to.be();
    });

    it('should have the property configurations (base name: "configurations")', function() {
      // uncomment below and update the code to test the property configurations
      //var instance = new EDrvApi.PatchOrganizationRequest();
      //expect(instance).to.be();
    });

    it('should have the property links (base name: "links")', function() {
      // uncomment below and update the code to test the property links
      //var instance = new EDrvApi.PatchOrganizationRequest();
      //expect(instance).to.be();
    });

    it('should have the property locations (base name: "locations")', function() {
      // uncomment below and update the code to test the property locations
      //var instance = new EDrvApi.PatchOrganizationRequest();
      //expect(instance).to.be();
    });

    it('should have the property logo (base name: "logo")', function() {
      // uncomment below and update the code to test the property logo
      //var instance = new EDrvApi.PatchOrganizationRequest();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new EDrvApi.PatchOrganizationRequest();
      //expect(instance).to.be();
    });

    it('should have the property otp (base name: "otp")', function() {
      // uncomment below and update the code to test the property otp
      //var instance = new EDrvApi.PatchOrganizationRequest();
      //expect(instance).to.be();
    });

    it('should have the property stripeConnectedAccountId (base name: "stripe_connected_account_id")', function() {
      // uncomment below and update the code to test the property stripeConnectedAccountId
      //var instance = new EDrvApi.PatchOrganizationRequest();
      //expect(instance).to.be();
    });

    it('should have the property stripeCountry (base name: "stripe_country")', function() {
      // uncomment below and update the code to test the property stripeCountry
      //var instance = new EDrvApi.PatchOrganizationRequest();
      //expect(instance).to.be();
    });

    it('should have the property stripeCurrency (base name: "stripe_currency")', function() {
      // uncomment below and update the code to test the property stripeCurrency
      //var instance = new EDrvApi.PatchOrganizationRequest();
      //expect(instance).to.be();
    });

    it('should have the property stripeReserveAmount (base name: "stripe_reserve_amount")', function() {
      // uncomment below and update the code to test the property stripeReserveAmount
      //var instance = new EDrvApi.PatchOrganizationRequest();
      //expect(instance).to.be();
    });

    it('should have the property support (base name: "support")', function() {
      // uncomment below and update the code to test the property support
      //var instance = new EDrvApi.PatchOrganizationRequest();
      //expect(instance).to.be();
    });

    it('should have the property supportChat (base name: "supportChat")', function() {
      // uncomment below and update the code to test the property supportChat
      //var instance = new EDrvApi.PatchOrganizationRequest();
      //expect(instance).to.be();
    });

    it('should have the property theme (base name: "theme")', function() {
      // uncomment below and update the code to test the property theme
      //var instance = new EDrvApi.PatchOrganizationRequest();
      //expect(instance).to.be();
    });

  });

}));
