/*
 * eDRV API
 * edrv.io API Documentation
 *
 * The version of the OpenAPI document: v1
 * Contact: hello@edrv.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GetDrivers200Response;
import java.time.OffsetDateTime;
import org.openapitools.client.model.PatchTokenRequest;
import org.openapitools.client.model.PostTokensRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TokensApi
 */
@Disabled
public class TokensApiTest {

    private final TokensApi api = new TokensApi();

    /**
     * Use to delete a token
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteTokenTest() throws ApiException {
        String id = null;
        api.deleteToken(id);
        // TODO: test validations
    }

    /**
     * Get a single token&#39;s data
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTokenTest() throws ApiException {
        String id = null;
        Boolean includeDriver = null;
        Boolean includeOrganization = null;
        api.getToken(id, includeDriver, includeOrganization);
        // TODO: test validations
    }

    /**
     * List tokens
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTokensTest() throws ApiException {
        Integer paginateLimit = null;
        String paginatePage = null;
        Boolean paginateEnabled = null;
        String sortBy = null;
        String sortOrder = null;
        OffsetDateTime createdAt$gte = null;
        OffsetDateTime createdAt$lte = null;
        OffsetDateTime updatedAt$gte = null;
        OffsetDateTime updatedAt$lte = null;
        Boolean includeDriver = null;
        Boolean includeOrganization = null;
        GetDrivers200Response response = api.getTokens(paginateLimit, paginatePage, paginateEnabled, sortBy, sortOrder, createdAt$gte, createdAt$lte, updatedAt$gte, updatedAt$lte, includeDriver, includeOrganization);
        // TODO: test validations
    }

    /**
     * Update a token
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void patchTokenTest() throws ApiException {
        String id = null;
        PatchTokenRequest patchTokenRequest = null;
        GetDrivers200Response response = api.patchToken(id, patchTokenRequest);
        // TODO: test validations
    }

    /**
     * Create a new token
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postTokensTest() throws ApiException {
        PostTokensRequest postTokensRequest = null;
        GetDrivers200Response response = api.postTokens(postTokensRequest);
        // TODO: test validations
    }

}
