/*
 * eDRV API
 * edrv.io API Documentation
 *
 * The version of the OpenAPI document: v1
 * Contact: hello@edrv.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.time.OffsetDateTime;
import org.openapitools.client.model.PatchChargeStation200Response;
import org.openapitools.client.model.UpdatereservationRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ReservationsApi
 */
@Disabled
public class ReservationsApiTest {

    private final ReservationsApi api = new ReservationsApi();

    /**
     * Get one reservation data
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getReservationTest() throws ApiException {
        String id = null;
        Boolean includeChargestation = null;
        Boolean includeOrganization = null;
        api.getReservation(id, includeChargestation, includeOrganization);
        // TODO: test validations
    }

    /**
     * Get Reservations data
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getReservationsTest() throws ApiException {
        Integer paginateLimit = null;
        String paginatePage = null;
        Boolean paginateEnabled = null;
        String sortBy = null;
        String sortOrder = null;
        OffsetDateTime createdAt$gte = null;
        OffsetDateTime createdAt$lte = null;
        OffsetDateTime updatedAt$gte = null;
        OffsetDateTime updatedAt$lte = null;
        Boolean includeChargestation = null;
        Boolean includeOrganization = null;
        api.getReservations(paginateLimit, paginatePage, paginateEnabled, sortBy, sortOrder, createdAt$gte, createdAt$lte, updatedAt$gte, updatedAt$lte, includeChargestation, includeOrganization);
        // TODO: test validations
    }

    /**
     * Use to request a update an existing reservation. The request will wait for the charge station to process the command. It will timeout after 60 seconds.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updatereservationTest() throws ApiException {
        String id = null;
        UpdatereservationRequest updatereservationRequest = null;
        PatchChargeStation200Response response = api.updatereservation(id, updatereservationRequest);
        // TODO: test validations
    }

}
