/*
 * eDRV API
 * edrv.io API Documentation
 *
 * The version of the OpenAPI document: v1
 * Contact: hello@edrv.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.PatchLocationRequestOpeningHours0Inner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PatchLocationRequestOpeningHours
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:54:14.123389-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PatchLocationRequestOpeningHours {
  public static final String SERIALIZED_NAME_0 = "0";
  @SerializedName(SERIALIZED_NAME_0)
  private List<PatchLocationRequestOpeningHours0Inner> _0 = new ArrayList<>();

  public static final String SERIALIZED_NAME_1 = "1";
  @SerializedName(SERIALIZED_NAME_1)
  private List<PatchLocationRequestOpeningHours0Inner> _1 = new ArrayList<>();

  public static final String SERIALIZED_NAME_2 = "2";
  @SerializedName(SERIALIZED_NAME_2)
  private List<PatchLocationRequestOpeningHours0Inner> _2 = new ArrayList<>();

  public static final String SERIALIZED_NAME_3 = "3";
  @SerializedName(SERIALIZED_NAME_3)
  private List<PatchLocationRequestOpeningHours0Inner> _3 = new ArrayList<>();

  public static final String SERIALIZED_NAME_4 = "4";
  @SerializedName(SERIALIZED_NAME_4)
  private List<PatchLocationRequestOpeningHours0Inner> _4 = new ArrayList<>();

  public static final String SERIALIZED_NAME_5 = "5";
  @SerializedName(SERIALIZED_NAME_5)
  private List<PatchLocationRequestOpeningHours0Inner> _5 = new ArrayList<>();

  public static final String SERIALIZED_NAME_6 = "6";
  @SerializedName(SERIALIZED_NAME_6)
  private List<PatchLocationRequestOpeningHours0Inner> _6 = new ArrayList<>();

  public PatchLocationRequestOpeningHours() {
  }

  public PatchLocationRequestOpeningHours _0(List<PatchLocationRequestOpeningHours0Inner> _0) {
    this._0 = _0;
    return this;
  }

  public PatchLocationRequestOpeningHours add0Item(PatchLocationRequestOpeningHours0Inner _0Item) {
    if (this._0 == null) {
      this._0 = new ArrayList<>();
    }
    this._0.add(_0Item);
    return this;
  }

  /**
   * Get _0
   * @return _0
   */
  @javax.annotation.Nullable
  public List<PatchLocationRequestOpeningHours0Inner> get0() {
    return _0;
  }

  public void set0(List<PatchLocationRequestOpeningHours0Inner> _0) {
    this._0 = _0;
  }


  public PatchLocationRequestOpeningHours _1(List<PatchLocationRequestOpeningHours0Inner> _1) {
    this._1 = _1;
    return this;
  }

  public PatchLocationRequestOpeningHours add1Item(PatchLocationRequestOpeningHours0Inner _1Item) {
    if (this._1 == null) {
      this._1 = new ArrayList<>();
    }
    this._1.add(_1Item);
    return this;
  }

  /**
   * Get _1
   * @return _1
   */
  @javax.annotation.Nullable
  public List<PatchLocationRequestOpeningHours0Inner> get1() {
    return _1;
  }

  public void set1(List<PatchLocationRequestOpeningHours0Inner> _1) {
    this._1 = _1;
  }


  public PatchLocationRequestOpeningHours _2(List<PatchLocationRequestOpeningHours0Inner> _2) {
    this._2 = _2;
    return this;
  }

  public PatchLocationRequestOpeningHours add2Item(PatchLocationRequestOpeningHours0Inner _2Item) {
    if (this._2 == null) {
      this._2 = new ArrayList<>();
    }
    this._2.add(_2Item);
    return this;
  }

  /**
   * Get _2
   * @return _2
   */
  @javax.annotation.Nullable
  public List<PatchLocationRequestOpeningHours0Inner> get2() {
    return _2;
  }

  public void set2(List<PatchLocationRequestOpeningHours0Inner> _2) {
    this._2 = _2;
  }


  public PatchLocationRequestOpeningHours _3(List<PatchLocationRequestOpeningHours0Inner> _3) {
    this._3 = _3;
    return this;
  }

  public PatchLocationRequestOpeningHours add3Item(PatchLocationRequestOpeningHours0Inner _3Item) {
    if (this._3 == null) {
      this._3 = new ArrayList<>();
    }
    this._3.add(_3Item);
    return this;
  }

  /**
   * Get _3
   * @return _3
   */
  @javax.annotation.Nullable
  public List<PatchLocationRequestOpeningHours0Inner> get3() {
    return _3;
  }

  public void set3(List<PatchLocationRequestOpeningHours0Inner> _3) {
    this._3 = _3;
  }


  public PatchLocationRequestOpeningHours _4(List<PatchLocationRequestOpeningHours0Inner> _4) {
    this._4 = _4;
    return this;
  }

  public PatchLocationRequestOpeningHours add4Item(PatchLocationRequestOpeningHours0Inner _4Item) {
    if (this._4 == null) {
      this._4 = new ArrayList<>();
    }
    this._4.add(_4Item);
    return this;
  }

  /**
   * Get _4
   * @return _4
   */
  @javax.annotation.Nullable
  public List<PatchLocationRequestOpeningHours0Inner> get4() {
    return _4;
  }

  public void set4(List<PatchLocationRequestOpeningHours0Inner> _4) {
    this._4 = _4;
  }


  public PatchLocationRequestOpeningHours _5(List<PatchLocationRequestOpeningHours0Inner> _5) {
    this._5 = _5;
    return this;
  }

  public PatchLocationRequestOpeningHours add5Item(PatchLocationRequestOpeningHours0Inner _5Item) {
    if (this._5 == null) {
      this._5 = new ArrayList<>();
    }
    this._5.add(_5Item);
    return this;
  }

  /**
   * Get _5
   * @return _5
   */
  @javax.annotation.Nullable
  public List<PatchLocationRequestOpeningHours0Inner> get5() {
    return _5;
  }

  public void set5(List<PatchLocationRequestOpeningHours0Inner> _5) {
    this._5 = _5;
  }


  public PatchLocationRequestOpeningHours _6(List<PatchLocationRequestOpeningHours0Inner> _6) {
    this._6 = _6;
    return this;
  }

  public PatchLocationRequestOpeningHours add6Item(PatchLocationRequestOpeningHours0Inner _6Item) {
    if (this._6 == null) {
      this._6 = new ArrayList<>();
    }
    this._6.add(_6Item);
    return this;
  }

  /**
   * Get _6
   * @return _6
   */
  @javax.annotation.Nullable
  public List<PatchLocationRequestOpeningHours0Inner> get6() {
    return _6;
  }

  public void set6(List<PatchLocationRequestOpeningHours0Inner> _6) {
    this._6 = _6;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PatchLocationRequestOpeningHours patchLocationRequestOpeningHours = (PatchLocationRequestOpeningHours) o;
    return Objects.equals(this._0, patchLocationRequestOpeningHours._0) &&
        Objects.equals(this._1, patchLocationRequestOpeningHours._1) &&
        Objects.equals(this._2, patchLocationRequestOpeningHours._2) &&
        Objects.equals(this._3, patchLocationRequestOpeningHours._3) &&
        Objects.equals(this._4, patchLocationRequestOpeningHours._4) &&
        Objects.equals(this._5, patchLocationRequestOpeningHours._5) &&
        Objects.equals(this._6, patchLocationRequestOpeningHours._6);
  }

  @Override
  public int hashCode() {
    return Objects.hash(_0, _1, _2, _3, _4, _5, _6);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PatchLocationRequestOpeningHours {\n");
    sb.append("    _0: ").append(toIndentedString(_0)).append("\n");
    sb.append("    _1: ").append(toIndentedString(_1)).append("\n");
    sb.append("    _2: ").append(toIndentedString(_2)).append("\n");
    sb.append("    _3: ").append(toIndentedString(_3)).append("\n");
    sb.append("    _4: ").append(toIndentedString(_4)).append("\n");
    sb.append("    _5: ").append(toIndentedString(_5)).append("\n");
    sb.append("    _6: ").append(toIndentedString(_6)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("0");
    openapiFields.add("1");
    openapiFields.add("2");
    openapiFields.add("3");
    openapiFields.add("4");
    openapiFields.add("5");
    openapiFields.add("6");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PatchLocationRequestOpeningHours
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PatchLocationRequestOpeningHours.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PatchLocationRequestOpeningHours is not found in the empty JSON string", PatchLocationRequestOpeningHours.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PatchLocationRequestOpeningHours.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PatchLocationRequestOpeningHours` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("0") != null && !jsonObj.get("0").isJsonNull()) {
        JsonArray jsonArray_0 = jsonObj.getAsJsonArray("0");
        if (jsonArray_0 != null) {
          // ensure the json data is an array
          if (!jsonObj.get("0").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `0` to be an array in the JSON string but got `%s`", jsonObj.get("0").toString()));
          }

          // validate the optional field `0` (array)
          for (int i = 0; i < jsonArray_0.size(); i++) {
            PatchLocationRequestOpeningHours0Inner.validateJsonElement(jsonArray_0.get(i));
          };
        }
      }
      if (jsonObj.get("1") != null && !jsonObj.get("1").isJsonNull()) {
        JsonArray jsonArray_1 = jsonObj.getAsJsonArray("1");
        if (jsonArray_1 != null) {
          // ensure the json data is an array
          if (!jsonObj.get("1").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `1` to be an array in the JSON string but got `%s`", jsonObj.get("1").toString()));
          }

          // validate the optional field `1` (array)
          for (int i = 0; i < jsonArray_1.size(); i++) {
            PatchLocationRequestOpeningHours0Inner.validateJsonElement(jsonArray_1.get(i));
          };
        }
      }
      if (jsonObj.get("2") != null && !jsonObj.get("2").isJsonNull()) {
        JsonArray jsonArray_2 = jsonObj.getAsJsonArray("2");
        if (jsonArray_2 != null) {
          // ensure the json data is an array
          if (!jsonObj.get("2").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `2` to be an array in the JSON string but got `%s`", jsonObj.get("2").toString()));
          }

          // validate the optional field `2` (array)
          for (int i = 0; i < jsonArray_2.size(); i++) {
            PatchLocationRequestOpeningHours0Inner.validateJsonElement(jsonArray_2.get(i));
          };
        }
      }
      if (jsonObj.get("3") != null && !jsonObj.get("3").isJsonNull()) {
        JsonArray jsonArray_3 = jsonObj.getAsJsonArray("3");
        if (jsonArray_3 != null) {
          // ensure the json data is an array
          if (!jsonObj.get("3").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `3` to be an array in the JSON string but got `%s`", jsonObj.get("3").toString()));
          }

          // validate the optional field `3` (array)
          for (int i = 0; i < jsonArray_3.size(); i++) {
            PatchLocationRequestOpeningHours0Inner.validateJsonElement(jsonArray_3.get(i));
          };
        }
      }
      if (jsonObj.get("4") != null && !jsonObj.get("4").isJsonNull()) {
        JsonArray jsonArray_4 = jsonObj.getAsJsonArray("4");
        if (jsonArray_4 != null) {
          // ensure the json data is an array
          if (!jsonObj.get("4").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `4` to be an array in the JSON string but got `%s`", jsonObj.get("4").toString()));
          }

          // validate the optional field `4` (array)
          for (int i = 0; i < jsonArray_4.size(); i++) {
            PatchLocationRequestOpeningHours0Inner.validateJsonElement(jsonArray_4.get(i));
          };
        }
      }
      if (jsonObj.get("5") != null && !jsonObj.get("5").isJsonNull()) {
        JsonArray jsonArray_5 = jsonObj.getAsJsonArray("5");
        if (jsonArray_5 != null) {
          // ensure the json data is an array
          if (!jsonObj.get("5").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `5` to be an array in the JSON string but got `%s`", jsonObj.get("5").toString()));
          }

          // validate the optional field `5` (array)
          for (int i = 0; i < jsonArray_5.size(); i++) {
            PatchLocationRequestOpeningHours0Inner.validateJsonElement(jsonArray_5.get(i));
          };
        }
      }
      if (jsonObj.get("6") != null && !jsonObj.get("6").isJsonNull()) {
        JsonArray jsonArray_6 = jsonObj.getAsJsonArray("6");
        if (jsonArray_6 != null) {
          // ensure the json data is an array
          if (!jsonObj.get("6").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `6` to be an array in the JSON string but got `%s`", jsonObj.get("6").toString()));
          }

          // validate the optional field `6` (array)
          for (int i = 0; i < jsonArray_6.size(); i++) {
            PatchLocationRequestOpeningHours0Inner.validateJsonElement(jsonArray_6.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PatchLocationRequestOpeningHours.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PatchLocationRequestOpeningHours' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PatchLocationRequestOpeningHours> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PatchLocationRequestOpeningHours.class));

       return (TypeAdapter<T>) new TypeAdapter<PatchLocationRequestOpeningHours>() {
           @Override
           public void write(JsonWriter out, PatchLocationRequestOpeningHours value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PatchLocationRequestOpeningHours read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PatchLocationRequestOpeningHours given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PatchLocationRequestOpeningHours
   * @throws IOException if the JSON string is invalid with respect to PatchLocationRequestOpeningHours
   */
  public static PatchLocationRequestOpeningHours fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PatchLocationRequestOpeningHours.class);
  }

  /**
   * Convert an instance of PatchLocationRequestOpeningHours to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

