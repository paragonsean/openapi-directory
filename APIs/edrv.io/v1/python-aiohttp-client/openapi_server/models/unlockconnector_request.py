# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UnlockconnectorRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, chargestation: str=None, connector: str=None):
        """UnlockconnectorRequest - a model defined in OpenAPI

        :param chargestation: The chargestation of this UnlockconnectorRequest.
        :param connector: The connector of this UnlockconnectorRequest.
        """
        self.openapi_types = {
            'chargestation': str,
            'connector': str
        }

        self.attribute_map = {
            'chargestation': 'chargestation',
            'connector': 'connector'
        }

        self._chargestation = chargestation
        self._connector = connector

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UnlockconnectorRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The unlockconnector_request of this UnlockconnectorRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def chargestation(self):
        """Gets the chargestation of this UnlockconnectorRequest.


        :return: The chargestation of this UnlockconnectorRequest.
        :rtype: str
        """
        return self._chargestation

    @chargestation.setter
    def chargestation(self, chargestation):
        """Sets the chargestation of this UnlockconnectorRequest.


        :param chargestation: The chargestation of this UnlockconnectorRequest.
        :type chargestation: str
        """

        self._chargestation = chargestation

    @property
    def connector(self):
        """Gets the connector of this UnlockconnectorRequest.


        :return: The connector of this UnlockconnectorRequest.
        :rtype: str
        """
        return self._connector

    @connector.setter
    def connector(self, connector):
        """Sets the connector of this UnlockconnectorRequest.


        :param connector: The connector of this UnlockconnectorRequest.
        :type connector: str
        """

        self._connector = connector
