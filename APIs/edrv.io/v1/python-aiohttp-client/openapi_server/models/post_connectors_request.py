# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PostConnectorsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, chargestation: str=None, format: str=None, power: int=None, power_type: str=None, rate: str=None, type: str=None):
        """PostConnectorsRequest - a model defined in OpenAPI

        :param chargestation: The chargestation of this PostConnectorsRequest.
        :param format: The format of this PostConnectorsRequest.
        :param power: The power of this PostConnectorsRequest.
        :param power_type: The power_type of this PostConnectorsRequest.
        :param rate: The rate of this PostConnectorsRequest.
        :param type: The type of this PostConnectorsRequest.
        """
        self.openapi_types = {
            'chargestation': str,
            'format': str,
            'power': int,
            'power_type': str,
            'rate': str,
            'type': str
        }

        self.attribute_map = {
            'chargestation': 'chargestation',
            'format': 'format',
            'power': 'power',
            'power_type': 'power_type',
            'rate': 'rate',
            'type': 'type'
        }

        self._chargestation = chargestation
        self._format = format
        self._power = power
        self._power_type = power_type
        self._rate = rate
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PostConnectorsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The postConnectors_request of this PostConnectorsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def chargestation(self):
        """Gets the chargestation of this PostConnectorsRequest.


        :return: The chargestation of this PostConnectorsRequest.
        :rtype: str
        """
        return self._chargestation

    @chargestation.setter
    def chargestation(self, chargestation):
        """Sets the chargestation of this PostConnectorsRequest.


        :param chargestation: The chargestation of this PostConnectorsRequest.
        :type chargestation: str
        """

        self._chargestation = chargestation

    @property
    def format(self):
        """Gets the format of this PostConnectorsRequest.


        :return: The format of this PostConnectorsRequest.
        :rtype: str
        """
        return self._format

    @format.setter
    def format(self, format):
        """Sets the format of this PostConnectorsRequest.


        :param format: The format of this PostConnectorsRequest.
        :type format: str
        """

        self._format = format

    @property
    def power(self):
        """Gets the power of this PostConnectorsRequest.


        :return: The power of this PostConnectorsRequest.
        :rtype: int
        """
        return self._power

    @power.setter
    def power(self, power):
        """Sets the power of this PostConnectorsRequest.


        :param power: The power of this PostConnectorsRequest.
        :type power: int
        """

        self._power = power

    @property
    def power_type(self):
        """Gets the power_type of this PostConnectorsRequest.


        :return: The power_type of this PostConnectorsRequest.
        :rtype: str
        """
        return self._power_type

    @power_type.setter
    def power_type(self, power_type):
        """Sets the power_type of this PostConnectorsRequest.


        :param power_type: The power_type of this PostConnectorsRequest.
        :type power_type: str
        """

        self._power_type = power_type

    @property
    def rate(self):
        """Gets the rate of this PostConnectorsRequest.


        :return: The rate of this PostConnectorsRequest.
        :rtype: str
        """
        return self._rate

    @rate.setter
    def rate(self, rate):
        """Sets the rate of this PostConnectorsRequest.


        :param rate: The rate of this PostConnectorsRequest.
        :type rate: str
        """

        self._rate = rate

    @property
    def type(self):
        """Gets the type of this PostConnectorsRequest.


        :return: The type of this PostConnectorsRequest.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this PostConnectorsRequest.


        :param type: The type of this PostConnectorsRequest.
        :type type: str
        """

        self._type = type
