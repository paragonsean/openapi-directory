# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReserveRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, chargestation: str=None, connector: str=None, driver: str=None, end_date: str=None, token: str=None):
        """ReserveRequest - a model defined in OpenAPI

        :param chargestation: The chargestation of this ReserveRequest.
        :param connector: The connector of this ReserveRequest.
        :param driver: The driver of this ReserveRequest.
        :param end_date: The end_date of this ReserveRequest.
        :param token: The token of this ReserveRequest.
        """
        self.openapi_types = {
            'chargestation': str,
            'connector': str,
            'driver': str,
            'end_date': str,
            'token': str
        }

        self.attribute_map = {
            'chargestation': 'chargestation',
            'connector': 'connector',
            'driver': 'driver',
            'end_date': 'endDate',
            'token': 'token'
        }

        self._chargestation = chargestation
        self._connector = connector
        self._driver = driver
        self._end_date = end_date
        self._token = token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReserveRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The reserve_request of this ReserveRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def chargestation(self):
        """Gets the chargestation of this ReserveRequest.


        :return: The chargestation of this ReserveRequest.
        :rtype: str
        """
        return self._chargestation

    @chargestation.setter
    def chargestation(self, chargestation):
        """Sets the chargestation of this ReserveRequest.


        :param chargestation: The chargestation of this ReserveRequest.
        :type chargestation: str
        """

        self._chargestation = chargestation

    @property
    def connector(self):
        """Gets the connector of this ReserveRequest.


        :return: The connector of this ReserveRequest.
        :rtype: str
        """
        return self._connector

    @connector.setter
    def connector(self, connector):
        """Sets the connector of this ReserveRequest.


        :param connector: The connector of this ReserveRequest.
        :type connector: str
        """

        self._connector = connector

    @property
    def driver(self):
        """Gets the driver of this ReserveRequest.


        :return: The driver of this ReserveRequest.
        :rtype: str
        """
        return self._driver

    @driver.setter
    def driver(self, driver):
        """Sets the driver of this ReserveRequest.


        :param driver: The driver of this ReserveRequest.
        :type driver: str
        """

        self._driver = driver

    @property
    def end_date(self):
        """Gets the end_date of this ReserveRequest.


        :return: The end_date of this ReserveRequest.
        :rtype: str
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this ReserveRequest.


        :param end_date: The end_date of this ReserveRequest.
        :type end_date: str
        """

        self._end_date = end_date

    @property
    def token(self):
        """Gets the token of this ReserveRequest.


        :return: The token of this ReserveRequest.
        :rtype: str
        """
        return self._token

    @token.setter
    def token(self, token):
        """Sets the token of this ReserveRequest.


        :param token: The token of this ReserveRequest.
        :type token: str
        """

        self._token = token
