# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PostDriversRequestPhone(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, home: str=None, mobile: str=None, work: str=None):
        """PostDriversRequestPhone - a model defined in OpenAPI

        :param home: The home of this PostDriversRequestPhone.
        :param mobile: The mobile of this PostDriversRequestPhone.
        :param work: The work of this PostDriversRequestPhone.
        """
        self.openapi_types = {
            'home': str,
            'mobile': str,
            'work': str
        }

        self.attribute_map = {
            'home': 'home',
            'mobile': 'mobile',
            'work': 'work'
        }

        self._home = home
        self._mobile = mobile
        self._work = work

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PostDriversRequestPhone':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The postDrivers_request_phone of this PostDriversRequestPhone.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def home(self):
        """Gets the home of this PostDriversRequestPhone.


        :return: The home of this PostDriversRequestPhone.
        :rtype: str
        """
        return self._home

    @home.setter
    def home(self, home):
        """Sets the home of this PostDriversRequestPhone.


        :param home: The home of this PostDriversRequestPhone.
        :type home: str
        """

        self._home = home

    @property
    def mobile(self):
        """Gets the mobile of this PostDriversRequestPhone.


        :return: The mobile of this PostDriversRequestPhone.
        :rtype: str
        """
        return self._mobile

    @mobile.setter
    def mobile(self, mobile):
        """Sets the mobile of this PostDriversRequestPhone.


        :param mobile: The mobile of this PostDriversRequestPhone.
        :type mobile: str
        """

        self._mobile = mobile

    @property
    def work(self):
        """Gets the work of this PostDriversRequestPhone.


        :return: The work of this PostDriversRequestPhone.
        :rtype: str
        """
        return self._work

    @work.setter
    def work(self, work):
        """Sets the work of this PostDriversRequestPhone.


        :param work: The work of this PostDriversRequestPhone.
        :type work: str
        """

        self._work = work
