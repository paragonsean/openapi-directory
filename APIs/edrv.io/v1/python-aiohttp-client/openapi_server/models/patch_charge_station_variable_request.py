# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PatchChargeStationVariableRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, value: str=None, variable: str=None):
        """PatchChargeStationVariableRequest - a model defined in OpenAPI

        :param value: The value of this PatchChargeStationVariableRequest.
        :param variable: The variable of this PatchChargeStationVariableRequest.
        """
        self.openapi_types = {
            'value': str,
            'variable': str
        }

        self.attribute_map = {
            'value': 'value',
            'variable': 'variable'
        }

        self._value = value
        self._variable = variable

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PatchChargeStationVariableRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The patchChargeStationVariable_request of this PatchChargeStationVariableRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def value(self):
        """Gets the value of this PatchChargeStationVariableRequest.


        :return: The value of this PatchChargeStationVariableRequest.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this PatchChargeStationVariableRequest.


        :param value: The value of this PatchChargeStationVariableRequest.
        :type value: str
        """

        self._value = value

    @property
    def variable(self):
        """Gets the variable of this PatchChargeStationVariableRequest.


        :return: The variable of this PatchChargeStationVariableRequest.
        :rtype: str
        """
        return self._variable

    @variable.setter
    def variable(self, variable):
        """Sets the variable of this PatchChargeStationVariableRequest.


        :param variable: The variable of this PatchChargeStationVariableRequest.
        :type variable: str
        """
        allowed_values = ["MeterValueSampleInterval", "HeartbeatInterval", "ConnectionTimeOut", "WebSocketPingInterval", "TransactionMessageRetryInterval", "TransactionMessageAttempts"]  # noqa: E501
        if variable not in allowed_values:
            raise ValueError(
                "Invalid value for `variable` ({0}), must be one of {1}"
                .format(variable, allowed_values)
            )

        self._variable = variable
