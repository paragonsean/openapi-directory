# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.patch_location_request_address import PatchLocationRequestAddress
from openapi_server.models.patch_location_request_coordinates import PatchLocationRequestCoordinates
from openapi_server.models.patch_location_request_opening_hours import PatchLocationRequestOpeningHours
from openapi_server import util


class PatchLocationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active: bool=True, address: PatchLocationRequestAddress=None, chargestations: List[object]=None, coordinates: PatchLocationRequestCoordinates=None, opening_hours: PatchLocationRequestOpeningHours=None, operator_name: str=None, timezone: str=None):
        """PatchLocationRequest - a model defined in OpenAPI

        :param active: The active of this PatchLocationRequest.
        :param address: The address of this PatchLocationRequest.
        :param chargestations: The chargestations of this PatchLocationRequest.
        :param coordinates: The coordinates of this PatchLocationRequest.
        :param opening_hours: The opening_hours of this PatchLocationRequest.
        :param operator_name: The operator_name of this PatchLocationRequest.
        :param timezone: The timezone of this PatchLocationRequest.
        """
        self.openapi_types = {
            'active': bool,
            'address': PatchLocationRequestAddress,
            'chargestations': List[object],
            'coordinates': PatchLocationRequestCoordinates,
            'opening_hours': PatchLocationRequestOpeningHours,
            'operator_name': str,
            'timezone': str
        }

        self.attribute_map = {
            'active': 'active',
            'address': 'address',
            'chargestations': 'chargestations',
            'coordinates': 'coordinates',
            'opening_hours': 'openingHours',
            'operator_name': 'operatorName',
            'timezone': 'timezone'
        }

        self._active = active
        self._address = address
        self._chargestations = chargestations
        self._coordinates = coordinates
        self._opening_hours = opening_hours
        self._operator_name = operator_name
        self._timezone = timezone

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PatchLocationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The patchLocation_request of this PatchLocationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active(self):
        """Gets the active of this PatchLocationRequest.


        :return: The active of this PatchLocationRequest.
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this PatchLocationRequest.


        :param active: The active of this PatchLocationRequest.
        :type active: bool
        """

        self._active = active

    @property
    def address(self):
        """Gets the address of this PatchLocationRequest.


        :return: The address of this PatchLocationRequest.
        :rtype: PatchLocationRequestAddress
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this PatchLocationRequest.


        :param address: The address of this PatchLocationRequest.
        :type address: PatchLocationRequestAddress
        """

        self._address = address

    @property
    def chargestations(self):
        """Gets the chargestations of this PatchLocationRequest.


        :return: The chargestations of this PatchLocationRequest.
        :rtype: List[object]
        """
        return self._chargestations

    @chargestations.setter
    def chargestations(self, chargestations):
        """Sets the chargestations of this PatchLocationRequest.


        :param chargestations: The chargestations of this PatchLocationRequest.
        :type chargestations: List[object]
        """

        self._chargestations = chargestations

    @property
    def coordinates(self):
        """Gets the coordinates of this PatchLocationRequest.


        :return: The coordinates of this PatchLocationRequest.
        :rtype: PatchLocationRequestCoordinates
        """
        return self._coordinates

    @coordinates.setter
    def coordinates(self, coordinates):
        """Sets the coordinates of this PatchLocationRequest.


        :param coordinates: The coordinates of this PatchLocationRequest.
        :type coordinates: PatchLocationRequestCoordinates
        """

        self._coordinates = coordinates

    @property
    def opening_hours(self):
        """Gets the opening_hours of this PatchLocationRequest.


        :return: The opening_hours of this PatchLocationRequest.
        :rtype: PatchLocationRequestOpeningHours
        """
        return self._opening_hours

    @opening_hours.setter
    def opening_hours(self, opening_hours):
        """Sets the opening_hours of this PatchLocationRequest.


        :param opening_hours: The opening_hours of this PatchLocationRequest.
        :type opening_hours: PatchLocationRequestOpeningHours
        """

        self._opening_hours = opening_hours

    @property
    def operator_name(self):
        """Gets the operator_name of this PatchLocationRequest.


        :return: The operator_name of this PatchLocationRequest.
        :rtype: str
        """
        return self._operator_name

    @operator_name.setter
    def operator_name(self, operator_name):
        """Sets the operator_name of this PatchLocationRequest.


        :param operator_name: The operator_name of this PatchLocationRequest.
        :type operator_name: str
        """

        self._operator_name = operator_name

    @property
    def timezone(self):
        """Gets the timezone of this PatchLocationRequest.


        :return: The timezone of this PatchLocationRequest.
        :rtype: str
        """
        return self._timezone

    @timezone.setter
    def timezone(self, timezone):
        """Sets the timezone of this PatchLocationRequest.


        :param timezone: The timezone of this PatchLocationRequest.
        :type timezone: str
        """

        self._timezone = timezone
