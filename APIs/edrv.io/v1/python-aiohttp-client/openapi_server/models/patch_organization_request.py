# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.patch_organization_request_channels import PatchOrganizationRequestChannels
from openapi_server.models.patch_organization_request_configurations import PatchOrganizationRequestConfigurations
from openapi_server.models.patch_organization_request_links import PatchOrganizationRequestLinks
from openapi_server.models.patch_organization_request_support import PatchOrganizationRequestSupport
from openapi_server.models.patch_organization_request_support_chat import PatchOrganizationRequestSupportChat
from openapi_server.models.patch_organization_request_theme import PatchOrganizationRequestTheme
from openapi_server.models.post_drivers_request_address import PostDriversRequestAddress
from openapi_server import util


class PatchOrganizationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active: bool=None, address: PostDriversRequestAddress=None, channels: PatchOrganizationRequestChannels=None, configurations: PatchOrganizationRequestConfigurations=None, links: PatchOrganizationRequestLinks=None, locations: List[object]=None, logo: str=None, name: str=None, otp: str=None, stripe_connected_account_id: str=None, stripe_country: str=None, stripe_currency: str=None, stripe_reserve_amount: int=None, support: PatchOrganizationRequestSupport=None, support_chat: PatchOrganizationRequestSupportChat=None, theme: PatchOrganizationRequestTheme=None):
        """PatchOrganizationRequest - a model defined in OpenAPI

        :param active: The active of this PatchOrganizationRequest.
        :param address: The address of this PatchOrganizationRequest.
        :param channels: The channels of this PatchOrganizationRequest.
        :param configurations: The configurations of this PatchOrganizationRequest.
        :param links: The links of this PatchOrganizationRequest.
        :param locations: The locations of this PatchOrganizationRequest.
        :param logo: The logo of this PatchOrganizationRequest.
        :param name: The name of this PatchOrganizationRequest.
        :param otp: The otp of this PatchOrganizationRequest.
        :param stripe_connected_account_id: The stripe_connected_account_id of this PatchOrganizationRequest.
        :param stripe_country: The stripe_country of this PatchOrganizationRequest.
        :param stripe_currency: The stripe_currency of this PatchOrganizationRequest.
        :param stripe_reserve_amount: The stripe_reserve_amount of this PatchOrganizationRequest.
        :param support: The support of this PatchOrganizationRequest.
        :param support_chat: The support_chat of this PatchOrganizationRequest.
        :param theme: The theme of this PatchOrganizationRequest.
        """
        self.openapi_types = {
            'active': bool,
            'address': PostDriversRequestAddress,
            'channels': PatchOrganizationRequestChannels,
            'configurations': PatchOrganizationRequestConfigurations,
            'links': PatchOrganizationRequestLinks,
            'locations': List[object],
            'logo': str,
            'name': str,
            'otp': str,
            'stripe_connected_account_id': str,
            'stripe_country': str,
            'stripe_currency': str,
            'stripe_reserve_amount': int,
            'support': PatchOrganizationRequestSupport,
            'support_chat': PatchOrganizationRequestSupportChat,
            'theme': PatchOrganizationRequestTheme
        }

        self.attribute_map = {
            'active': 'active',
            'address': 'address',
            'channels': 'channels',
            'configurations': 'configurations',
            'links': 'links',
            'locations': 'locations',
            'logo': 'logo',
            'name': 'name',
            'otp': 'otp',
            'stripe_connected_account_id': 'stripe_connected_account_id',
            'stripe_country': 'stripe_country',
            'stripe_currency': 'stripe_currency',
            'stripe_reserve_amount': 'stripe_reserve_amount',
            'support': 'support',
            'support_chat': 'supportChat',
            'theme': 'theme'
        }

        self._active = active
        self._address = address
        self._channels = channels
        self._configurations = configurations
        self._links = links
        self._locations = locations
        self._logo = logo
        self._name = name
        self._otp = otp
        self._stripe_connected_account_id = stripe_connected_account_id
        self._stripe_country = stripe_country
        self._stripe_currency = stripe_currency
        self._stripe_reserve_amount = stripe_reserve_amount
        self._support = support
        self._support_chat = support_chat
        self._theme = theme

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PatchOrganizationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The patchOrganization_request of this PatchOrganizationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active(self):
        """Gets the active of this PatchOrganizationRequest.


        :return: The active of this PatchOrganizationRequest.
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this PatchOrganizationRequest.


        :param active: The active of this PatchOrganizationRequest.
        :type active: bool
        """

        self._active = active

    @property
    def address(self):
        """Gets the address of this PatchOrganizationRequest.


        :return: The address of this PatchOrganizationRequest.
        :rtype: PostDriversRequestAddress
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this PatchOrganizationRequest.


        :param address: The address of this PatchOrganizationRequest.
        :type address: PostDriversRequestAddress
        """

        self._address = address

    @property
    def channels(self):
        """Gets the channels of this PatchOrganizationRequest.


        :return: The channels of this PatchOrganizationRequest.
        :rtype: PatchOrganizationRequestChannels
        """
        return self._channels

    @channels.setter
    def channels(self, channels):
        """Sets the channels of this PatchOrganizationRequest.


        :param channels: The channels of this PatchOrganizationRequest.
        :type channels: PatchOrganizationRequestChannels
        """

        self._channels = channels

    @property
    def configurations(self):
        """Gets the configurations of this PatchOrganizationRequest.


        :return: The configurations of this PatchOrganizationRequest.
        :rtype: PatchOrganizationRequestConfigurations
        """
        return self._configurations

    @configurations.setter
    def configurations(self, configurations):
        """Sets the configurations of this PatchOrganizationRequest.


        :param configurations: The configurations of this PatchOrganizationRequest.
        :type configurations: PatchOrganizationRequestConfigurations
        """

        self._configurations = configurations

    @property
    def links(self):
        """Gets the links of this PatchOrganizationRequest.


        :return: The links of this PatchOrganizationRequest.
        :rtype: PatchOrganizationRequestLinks
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this PatchOrganizationRequest.


        :param links: The links of this PatchOrganizationRequest.
        :type links: PatchOrganizationRequestLinks
        """

        self._links = links

    @property
    def locations(self):
        """Gets the locations of this PatchOrganizationRequest.


        :return: The locations of this PatchOrganizationRequest.
        :rtype: List[object]
        """
        return self._locations

    @locations.setter
    def locations(self, locations):
        """Sets the locations of this PatchOrganizationRequest.


        :param locations: The locations of this PatchOrganizationRequest.
        :type locations: List[object]
        """

        self._locations = locations

    @property
    def logo(self):
        """Gets the logo of this PatchOrganizationRequest.


        :return: The logo of this PatchOrganizationRequest.
        :rtype: str
        """
        return self._logo

    @logo.setter
    def logo(self, logo):
        """Sets the logo of this PatchOrganizationRequest.


        :param logo: The logo of this PatchOrganizationRequest.
        :type logo: str
        """

        self._logo = logo

    @property
    def name(self):
        """Gets the name of this PatchOrganizationRequest.


        :return: The name of this PatchOrganizationRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PatchOrganizationRequest.


        :param name: The name of this PatchOrganizationRequest.
        :type name: str
        """

        self._name = name

    @property
    def otp(self):
        """Gets the otp of this PatchOrganizationRequest.


        :return: The otp of this PatchOrganizationRequest.
        :rtype: str
        """
        return self._otp

    @otp.setter
    def otp(self, otp):
        """Sets the otp of this PatchOrganizationRequest.


        :param otp: The otp of this PatchOrganizationRequest.
        :type otp: str
        """

        self._otp = otp

    @property
    def stripe_connected_account_id(self):
        """Gets the stripe_connected_account_id of this PatchOrganizationRequest.


        :return: The stripe_connected_account_id of this PatchOrganizationRequest.
        :rtype: str
        """
        return self._stripe_connected_account_id

    @stripe_connected_account_id.setter
    def stripe_connected_account_id(self, stripe_connected_account_id):
        """Sets the stripe_connected_account_id of this PatchOrganizationRequest.


        :param stripe_connected_account_id: The stripe_connected_account_id of this PatchOrganizationRequest.
        :type stripe_connected_account_id: str
        """

        self._stripe_connected_account_id = stripe_connected_account_id

    @property
    def stripe_country(self):
        """Gets the stripe_country of this PatchOrganizationRequest.


        :return: The stripe_country of this PatchOrganizationRequest.
        :rtype: str
        """
        return self._stripe_country

    @stripe_country.setter
    def stripe_country(self, stripe_country):
        """Sets the stripe_country of this PatchOrganizationRequest.


        :param stripe_country: The stripe_country of this PatchOrganizationRequest.
        :type stripe_country: str
        """

        self._stripe_country = stripe_country

    @property
    def stripe_currency(self):
        """Gets the stripe_currency of this PatchOrganizationRequest.


        :return: The stripe_currency of this PatchOrganizationRequest.
        :rtype: str
        """
        return self._stripe_currency

    @stripe_currency.setter
    def stripe_currency(self, stripe_currency):
        """Sets the stripe_currency of this PatchOrganizationRequest.


        :param stripe_currency: The stripe_currency of this PatchOrganizationRequest.
        :type stripe_currency: str
        """

        self._stripe_currency = stripe_currency

    @property
    def stripe_reserve_amount(self):
        """Gets the stripe_reserve_amount of this PatchOrganizationRequest.


        :return: The stripe_reserve_amount of this PatchOrganizationRequest.
        :rtype: int
        """
        return self._stripe_reserve_amount

    @stripe_reserve_amount.setter
    def stripe_reserve_amount(self, stripe_reserve_amount):
        """Sets the stripe_reserve_amount of this PatchOrganizationRequest.


        :param stripe_reserve_amount: The stripe_reserve_amount of this PatchOrganizationRequest.
        :type stripe_reserve_amount: int
        """

        self._stripe_reserve_amount = stripe_reserve_amount

    @property
    def support(self):
        """Gets the support of this PatchOrganizationRequest.


        :return: The support of this PatchOrganizationRequest.
        :rtype: PatchOrganizationRequestSupport
        """
        return self._support

    @support.setter
    def support(self, support):
        """Sets the support of this PatchOrganizationRequest.


        :param support: The support of this PatchOrganizationRequest.
        :type support: PatchOrganizationRequestSupport
        """

        self._support = support

    @property
    def support_chat(self):
        """Gets the support_chat of this PatchOrganizationRequest.


        :return: The support_chat of this PatchOrganizationRequest.
        :rtype: PatchOrganizationRequestSupportChat
        """
        return self._support_chat

    @support_chat.setter
    def support_chat(self, support_chat):
        """Sets the support_chat of this PatchOrganizationRequest.


        :param support_chat: The support_chat of this PatchOrganizationRequest.
        :type support_chat: PatchOrganizationRequestSupportChat
        """

        self._support_chat = support_chat

    @property
    def theme(self):
        """Gets the theme of this PatchOrganizationRequest.


        :return: The theme of this PatchOrganizationRequest.
        :rtype: PatchOrganizationRequestTheme
        """
        return self._theme

    @theme.setter
    def theme(self, theme):
        """Sets the theme of this PatchOrganizationRequest.


        :param theme: The theme of this PatchOrganizationRequest.
        :type theme: PatchOrganizationRequestTheme
        """

        self._theme = theme
