# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PatchOrganizationRequestLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, about: str=None, contact: str=None, privacy: str=None, support: str=None):
        """PatchOrganizationRequestLinks - a model defined in OpenAPI

        :param about: The about of this PatchOrganizationRequestLinks.
        :param contact: The contact of this PatchOrganizationRequestLinks.
        :param privacy: The privacy of this PatchOrganizationRequestLinks.
        :param support: The support of this PatchOrganizationRequestLinks.
        """
        self.openapi_types = {
            'about': str,
            'contact': str,
            'privacy': str,
            'support': str
        }

        self.attribute_map = {
            'about': 'about',
            'contact': 'contact',
            'privacy': 'privacy',
            'support': 'support'
        }

        self._about = about
        self._contact = contact
        self._privacy = privacy
        self._support = support

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PatchOrganizationRequestLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The patchOrganization_request_links of this PatchOrganizationRequestLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def about(self):
        """Gets the about of this PatchOrganizationRequestLinks.


        :return: The about of this PatchOrganizationRequestLinks.
        :rtype: str
        """
        return self._about

    @about.setter
    def about(self, about):
        """Sets the about of this PatchOrganizationRequestLinks.


        :param about: The about of this PatchOrganizationRequestLinks.
        :type about: str
        """

        self._about = about

    @property
    def contact(self):
        """Gets the contact of this PatchOrganizationRequestLinks.


        :return: The contact of this PatchOrganizationRequestLinks.
        :rtype: str
        """
        return self._contact

    @contact.setter
    def contact(self, contact):
        """Sets the contact of this PatchOrganizationRequestLinks.


        :param contact: The contact of this PatchOrganizationRequestLinks.
        :type contact: str
        """

        self._contact = contact

    @property
    def privacy(self):
        """Gets the privacy of this PatchOrganizationRequestLinks.


        :return: The privacy of this PatchOrganizationRequestLinks.
        :rtype: str
        """
        return self._privacy

    @privacy.setter
    def privacy(self, privacy):
        """Sets the privacy of this PatchOrganizationRequestLinks.


        :param privacy: The privacy of this PatchOrganizationRequestLinks.
        :type privacy: str
        """

        self._privacy = privacy

    @property
    def support(self):
        """Gets the support of this PatchOrganizationRequestLinks.


        :return: The support of this PatchOrganizationRequestLinks.
        :rtype: str
        """
        return self._support

    @support.setter
    def support(self, support):
        """Sets the support of this PatchOrganizationRequestLinks.


        :param support: The support of this PatchOrganizationRequestLinks.
        :type support: str
        """

        self._support = support
