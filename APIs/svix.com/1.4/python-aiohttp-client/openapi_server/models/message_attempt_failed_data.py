# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MessageAttemptFailedData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, response_status_code: int=None, timestamp: datetime=None):
        """MessageAttemptFailedData - a model defined in OpenAPI

        :param id: The id of this MessageAttemptFailedData.
        :param response_status_code: The response_status_code of this MessageAttemptFailedData.
        :param timestamp: The timestamp of this MessageAttemptFailedData.
        """
        self.openapi_types = {
            'id': str,
            'response_status_code': int,
            'timestamp': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'response_status_code': 'responseStatusCode',
            'timestamp': 'timestamp'
        }

        self._id = id
        self._response_status_code = response_status_code
        self._timestamp = timestamp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MessageAttemptFailedData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MessageAttemptFailedData of this MessageAttemptFailedData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this MessageAttemptFailedData.


        :return: The id of this MessageAttemptFailedData.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this MessageAttemptFailedData.


        :param id: The id of this MessageAttemptFailedData.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def response_status_code(self):
        """Gets the response_status_code of this MessageAttemptFailedData.


        :return: The response_status_code of this MessageAttemptFailedData.
        :rtype: int
        """
        return self._response_status_code

    @response_status_code.setter
    def response_status_code(self, response_status_code):
        """Sets the response_status_code of this MessageAttemptFailedData.


        :param response_status_code: The response_status_code of this MessageAttemptFailedData.
        :type response_status_code: int
        """
        if response_status_code is None:
            raise ValueError("Invalid value for `response_status_code`, must not be `None`")

        self._response_status_code = response_status_code

    @property
    def timestamp(self):
        """Gets the timestamp of this MessageAttemptFailedData.


        :return: The timestamp of this MessageAttemptFailedData.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this MessageAttemptFailedData.


        :param timestamp: The timestamp of this MessageAttemptFailedData.
        :type timestamp: datetime
        """
        if timestamp is None:
            raise ValueError("Invalid value for `timestamp`, must not be `None`")

        self._timestamp = timestamp
