# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class QueryResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, error: str=None, exception_type: str=None, extractor_data: object=None, page_data: object=None, runtime_config_id: str=None, sequence_number: int=None, timestamp: int=None, url: str=None):
        """QueryResponse - a model defined in OpenAPI

        :param error: The error of this QueryResponse.
        :param exception_type: The exception_type of this QueryResponse.
        :param extractor_data: The extractor_data of this QueryResponse.
        :param page_data: The page_data of this QueryResponse.
        :param runtime_config_id: The runtime_config_id of this QueryResponse.
        :param sequence_number: The sequence_number of this QueryResponse.
        :param timestamp: The timestamp of this QueryResponse.
        :param url: The url of this QueryResponse.
        """
        self.openapi_types = {
            'error': str,
            'exception_type': str,
            'extractor_data': object,
            'page_data': object,
            'runtime_config_id': str,
            'sequence_number': int,
            'timestamp': int,
            'url': str
        }

        self.attribute_map = {
            'error': 'error',
            'exception_type': 'exceptionType',
            'extractor_data': 'extractorData',
            'page_data': 'pageData',
            'runtime_config_id': 'runtimeConfigId',
            'sequence_number': 'sequenceNumber',
            'timestamp': 'timestamp',
            'url': 'url'
        }

        self._error = error
        self._exception_type = exception_type
        self._extractor_data = extractor_data
        self._page_data = page_data
        self._runtime_config_id = runtime_config_id
        self._sequence_number = sequence_number
        self._timestamp = timestamp
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QueryResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The QueryResponse of this QueryResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error(self):
        """Gets the error of this QueryResponse.


        :return: The error of this QueryResponse.
        :rtype: str
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this QueryResponse.


        :param error: The error of this QueryResponse.
        :type error: str
        """

        self._error = error

    @property
    def exception_type(self):
        """Gets the exception_type of this QueryResponse.


        :return: The exception_type of this QueryResponse.
        :rtype: str
        """
        return self._exception_type

    @exception_type.setter
    def exception_type(self, exception_type):
        """Sets the exception_type of this QueryResponse.


        :param exception_type: The exception_type of this QueryResponse.
        :type exception_type: str
        """

        self._exception_type = exception_type

    @property
    def extractor_data(self):
        """Gets the extractor_data of this QueryResponse.


        :return: The extractor_data of this QueryResponse.
        :rtype: object
        """
        return self._extractor_data

    @extractor_data.setter
    def extractor_data(self, extractor_data):
        """Sets the extractor_data of this QueryResponse.


        :param extractor_data: The extractor_data of this QueryResponse.
        :type extractor_data: object
        """

        self._extractor_data = extractor_data

    @property
    def page_data(self):
        """Gets the page_data of this QueryResponse.


        :return: The page_data of this QueryResponse.
        :rtype: object
        """
        return self._page_data

    @page_data.setter
    def page_data(self, page_data):
        """Sets the page_data of this QueryResponse.


        :param page_data: The page_data of this QueryResponse.
        :type page_data: object
        """

        self._page_data = page_data

    @property
    def runtime_config_id(self):
        """Gets the runtime_config_id of this QueryResponse.


        :return: The runtime_config_id of this QueryResponse.
        :rtype: str
        """
        return self._runtime_config_id

    @runtime_config_id.setter
    def runtime_config_id(self, runtime_config_id):
        """Sets the runtime_config_id of this QueryResponse.


        :param runtime_config_id: The runtime_config_id of this QueryResponse.
        :type runtime_config_id: str
        """

        self._runtime_config_id = runtime_config_id

    @property
    def sequence_number(self):
        """Gets the sequence_number of this QueryResponse.


        :return: The sequence_number of this QueryResponse.
        :rtype: int
        """
        return self._sequence_number

    @sequence_number.setter
    def sequence_number(self, sequence_number):
        """Sets the sequence_number of this QueryResponse.


        :param sequence_number: The sequence_number of this QueryResponse.
        :type sequence_number: int
        """

        self._sequence_number = sequence_number

    @property
    def timestamp(self):
        """Gets the timestamp of this QueryResponse.


        :return: The timestamp of this QueryResponse.
        :rtype: int
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this QueryResponse.


        :param timestamp: The timestamp of this QueryResponse.
        :type timestamp: int
        """

        self._timestamp = timestamp

    @property
    def url(self):
        """Gets the url of this QueryResponse.


        :return: The url of this QueryResponse.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this QueryResponse.


        :param url: The url of this QueryResponse.
        :type url: str
        """

        self._url = url
