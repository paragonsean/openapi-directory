/**
 * import.io
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import APIError from '../model/APIError';
import QueryResponse from '../model/QueryResponse';

/**
* ExtractionImportIo service.
* @module api/ExtractionImportIoApi
* @version 1.0
*/
export default class ExtractionImportIoApi {

    /**
    * Constructs a new ExtractionImportIoApi. 
    * @alias module:api/ExtractionImportIoApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the extractorExtractorIdGet operation.
     * @callback module:api/ExtractionImportIoApi~extractorExtractorIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/QueryResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Query by extractor endpoint, adhoc runs only.
     * @param {String} extractorId extractorId
     * @param {String} url url
     * @param {module:api/ExtractionImportIoApi~extractorExtractorIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/QueryResponse}
     */
    extractorExtractorIdGet(extractorId, url, callback) {
      let postBody = null;
      // verify the required parameter 'extractorId' is set
      if (extractorId === undefined || extractorId === null) {
        throw new Error("Missing the required parameter 'extractorId' when calling extractorExtractorIdGet");
      }
      // verify the required parameter 'url' is set
      if (url === undefined || url === null) {
        throw new Error("Missing the required parameter 'url' when calling extractorExtractorIdGet");
      }

      let pathParams = {
        'extractorId': extractorId
      };
      let queryParams = {
        'url': url
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['api_key'];
      let contentTypes = [];
      let accepts = ['application/json;charset=UTF-8'];
      let returnType = QueryResponse;
      return this.apiClient.callApi(
        '/extractor/{extractorId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
