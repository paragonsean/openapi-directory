/**
 * import.io
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReportRun.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReportRun::OAIReportRun(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReportRun::OAIReportRun() {
    this->initializeModel();
}

OAIReportRun::~OAIReportRun() {}

void OAIReportRun::initializeModel() {

    m_auto_publish_isSet = false;
    m_auto_publish_isValid = false;

    m_guid_isSet = false;
    m_guid_isValid = false;

    m_latest_config_id_isSet = false;
    m_latest_config_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIReportRun::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReportRun::fromJsonObject(QJsonObject json) {

    m_auto_publish_isValid = ::OpenAPI::fromJsonValue(m_auto_publish, json[QString("autoPublish")]);
    m_auto_publish_isSet = !json[QString("autoPublish")].isNull() && m_auto_publish_isValid;

    m_guid_isValid = ::OpenAPI::fromJsonValue(m_guid, json[QString("guid")]);
    m_guid_isSet = !json[QString("guid")].isNull() && m_guid_isValid;

    m_latest_config_id_isValid = ::OpenAPI::fromJsonValue(m_latest_config_id, json[QString("latestConfigId")]);
    m_latest_config_id_isSet = !json[QString("latestConfigId")].isNull() && m_latest_config_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIReportRun::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReportRun::asJsonObject() const {
    QJsonObject obj;
    if (m_auto_publish_isSet) {
        obj.insert(QString("autoPublish"), ::OpenAPI::toJsonValue(m_auto_publish));
    }
    if (m_guid_isSet) {
        obj.insert(QString("guid"), ::OpenAPI::toJsonValue(m_guid));
    }
    if (m_latest_config_id_isSet) {
        obj.insert(QString("latestConfigId"), ::OpenAPI::toJsonValue(m_latest_config_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

bool OAIReportRun::isAutoPublish() const {
    return m_auto_publish;
}
void OAIReportRun::setAutoPublish(const bool &auto_publish) {
    m_auto_publish = auto_publish;
    m_auto_publish_isSet = true;
}

bool OAIReportRun::is_auto_publish_Set() const{
    return m_auto_publish_isSet;
}

bool OAIReportRun::is_auto_publish_Valid() const{
    return m_auto_publish_isValid;
}

QString OAIReportRun::getGuid() const {
    return m_guid;
}
void OAIReportRun::setGuid(const QString &guid) {
    m_guid = guid;
    m_guid_isSet = true;
}

bool OAIReportRun::is_guid_Set() const{
    return m_guid_isSet;
}

bool OAIReportRun::is_guid_Valid() const{
    return m_guid_isValid;
}

QString OAIReportRun::getLatestConfigId() const {
    return m_latest_config_id;
}
void OAIReportRun::setLatestConfigId(const QString &latest_config_id) {
    m_latest_config_id = latest_config_id;
    m_latest_config_id_isSet = true;
}

bool OAIReportRun::is_latest_config_id_Set() const{
    return m_latest_config_id_isSet;
}

bool OAIReportRun::is_latest_config_id_Valid() const{
    return m_latest_config_id_isValid;
}

QString OAIReportRun::getName() const {
    return m_name;
}
void OAIReportRun::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIReportRun::is_name_Set() const{
    return m_name_isSet;
}

bool OAIReportRun::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIReportRun::getType() const {
    return m_type;
}
void OAIReportRun::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIReportRun::is_type_Set() const{
    return m_type_isSet;
}

bool OAIReportRun::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIReportRun::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_auto_publish_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_guid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_latest_config_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReportRun::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
