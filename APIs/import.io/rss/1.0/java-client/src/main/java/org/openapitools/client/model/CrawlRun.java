/*
 * import.io
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CrawlRun
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:03:53.337897-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CrawlRun {
  public static final String SERIALIZED_NAME_EXTRACTOR_ID = "extractorId";
  @SerializedName(SERIALIZED_NAME_EXTRACTOR_ID)
  private String extractorId;

  public static final String SERIALIZED_NAME_FAILED_URL_COUNT = "failedUrlCount";
  @SerializedName(SERIALIZED_NAME_FAILED_URL_COUNT)
  private Integer failedUrlCount;

  public static final String SERIALIZED_NAME_GUID = "guid";
  @SerializedName(SERIALIZED_NAME_GUID)
  private String guid;

  public static final String SERIALIZED_NAME_ROW_COUNT = "rowCount";
  @SerializedName(SERIALIZED_NAME_ROW_COUNT)
  private Integer rowCount;

  public static final String SERIALIZED_NAME_RUNTIME_CONFIG_ID = "runtimeConfigId";
  @SerializedName(SERIALIZED_NAME_RUNTIME_CONFIG_ID)
  private String runtimeConfigId;

  public static final String SERIALIZED_NAME_STARTED_AT = "startedAt";
  @SerializedName(SERIALIZED_NAME_STARTED_AT)
  private Long startedAt;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public static final String SERIALIZED_NAME_STOPPED_AT = "stoppedAt";
  @SerializedName(SERIALIZED_NAME_STOPPED_AT)
  private Long stoppedAt;

  public static final String SERIALIZED_NAME_SUCCESS_URL_COUNT = "successUrlCount";
  @SerializedName(SERIALIZED_NAME_SUCCESS_URL_COUNT)
  private Integer successUrlCount;

  public static final String SERIALIZED_NAME_TOTAL_URL_COUNT = "totalUrlCount";
  @SerializedName(SERIALIZED_NAME_TOTAL_URL_COUNT)
  private Integer totalUrlCount;

  public static final String SERIALIZED_NAME_URL_LIST_ID = "urlListId";
  @SerializedName(SERIALIZED_NAME_URL_LIST_ID)
  private String urlListId;

  public CrawlRun() {
  }

  public CrawlRun extractorId(String extractorId) {
    this.extractorId = extractorId;
    return this;
  }

  /**
   * Get extractorId
   * @return extractorId
   */
  @javax.annotation.Nullable
  public String getExtractorId() {
    return extractorId;
  }

  public void setExtractorId(String extractorId) {
    this.extractorId = extractorId;
  }


  public CrawlRun failedUrlCount(Integer failedUrlCount) {
    this.failedUrlCount = failedUrlCount;
    return this;
  }

  /**
   * Get failedUrlCount
   * @return failedUrlCount
   */
  @javax.annotation.Nullable
  public Integer getFailedUrlCount() {
    return failedUrlCount;
  }

  public void setFailedUrlCount(Integer failedUrlCount) {
    this.failedUrlCount = failedUrlCount;
  }


  public CrawlRun guid(String guid) {
    this.guid = guid;
    return this;
  }

  /**
   * Get guid
   * @return guid
   */
  @javax.annotation.Nullable
  public String getGuid() {
    return guid;
  }

  public void setGuid(String guid) {
    this.guid = guid;
  }


  public CrawlRun rowCount(Integer rowCount) {
    this.rowCount = rowCount;
    return this;
  }

  /**
   * Get rowCount
   * @return rowCount
   */
  @javax.annotation.Nullable
  public Integer getRowCount() {
    return rowCount;
  }

  public void setRowCount(Integer rowCount) {
    this.rowCount = rowCount;
  }


  public CrawlRun runtimeConfigId(String runtimeConfigId) {
    this.runtimeConfigId = runtimeConfigId;
    return this;
  }

  /**
   * Get runtimeConfigId
   * @return runtimeConfigId
   */
  @javax.annotation.Nullable
  public String getRuntimeConfigId() {
    return runtimeConfigId;
  }

  public void setRuntimeConfigId(String runtimeConfigId) {
    this.runtimeConfigId = runtimeConfigId;
  }


  public CrawlRun startedAt(Long startedAt) {
    this.startedAt = startedAt;
    return this;
  }

  /**
   * Get startedAt
   * @return startedAt
   */
  @javax.annotation.Nullable
  public Long getStartedAt() {
    return startedAt;
  }

  public void setStartedAt(Long startedAt) {
    this.startedAt = startedAt;
  }


  public CrawlRun state(String state) {
    this.state = state;
    return this;
  }

  /**
   * Get state
   * @return state
   */
  @javax.annotation.Nullable
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }


  public CrawlRun stoppedAt(Long stoppedAt) {
    this.stoppedAt = stoppedAt;
    return this;
  }

  /**
   * Get stoppedAt
   * @return stoppedAt
   */
  @javax.annotation.Nullable
  public Long getStoppedAt() {
    return stoppedAt;
  }

  public void setStoppedAt(Long stoppedAt) {
    this.stoppedAt = stoppedAt;
  }


  public CrawlRun successUrlCount(Integer successUrlCount) {
    this.successUrlCount = successUrlCount;
    return this;
  }

  /**
   * Get successUrlCount
   * @return successUrlCount
   */
  @javax.annotation.Nullable
  public Integer getSuccessUrlCount() {
    return successUrlCount;
  }

  public void setSuccessUrlCount(Integer successUrlCount) {
    this.successUrlCount = successUrlCount;
  }


  public CrawlRun totalUrlCount(Integer totalUrlCount) {
    this.totalUrlCount = totalUrlCount;
    return this;
  }

  /**
   * Get totalUrlCount
   * @return totalUrlCount
   */
  @javax.annotation.Nullable
  public Integer getTotalUrlCount() {
    return totalUrlCount;
  }

  public void setTotalUrlCount(Integer totalUrlCount) {
    this.totalUrlCount = totalUrlCount;
  }


  public CrawlRun urlListId(String urlListId) {
    this.urlListId = urlListId;
    return this;
  }

  /**
   * Get urlListId
   * @return urlListId
   */
  @javax.annotation.Nullable
  public String getUrlListId() {
    return urlListId;
  }

  public void setUrlListId(String urlListId) {
    this.urlListId = urlListId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CrawlRun crawlRun = (CrawlRun) o;
    return Objects.equals(this.extractorId, crawlRun.extractorId) &&
        Objects.equals(this.failedUrlCount, crawlRun.failedUrlCount) &&
        Objects.equals(this.guid, crawlRun.guid) &&
        Objects.equals(this.rowCount, crawlRun.rowCount) &&
        Objects.equals(this.runtimeConfigId, crawlRun.runtimeConfigId) &&
        Objects.equals(this.startedAt, crawlRun.startedAt) &&
        Objects.equals(this.state, crawlRun.state) &&
        Objects.equals(this.stoppedAt, crawlRun.stoppedAt) &&
        Objects.equals(this.successUrlCount, crawlRun.successUrlCount) &&
        Objects.equals(this.totalUrlCount, crawlRun.totalUrlCount) &&
        Objects.equals(this.urlListId, crawlRun.urlListId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(extractorId, failedUrlCount, guid, rowCount, runtimeConfigId, startedAt, state, stoppedAt, successUrlCount, totalUrlCount, urlListId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CrawlRun {\n");
    sb.append("    extractorId: ").append(toIndentedString(extractorId)).append("\n");
    sb.append("    failedUrlCount: ").append(toIndentedString(failedUrlCount)).append("\n");
    sb.append("    guid: ").append(toIndentedString(guid)).append("\n");
    sb.append("    rowCount: ").append(toIndentedString(rowCount)).append("\n");
    sb.append("    runtimeConfigId: ").append(toIndentedString(runtimeConfigId)).append("\n");
    sb.append("    startedAt: ").append(toIndentedString(startedAt)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    stoppedAt: ").append(toIndentedString(stoppedAt)).append("\n");
    sb.append("    successUrlCount: ").append(toIndentedString(successUrlCount)).append("\n");
    sb.append("    totalUrlCount: ").append(toIndentedString(totalUrlCount)).append("\n");
    sb.append("    urlListId: ").append(toIndentedString(urlListId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("extractorId");
    openapiFields.add("failedUrlCount");
    openapiFields.add("guid");
    openapiFields.add("rowCount");
    openapiFields.add("runtimeConfigId");
    openapiFields.add("startedAt");
    openapiFields.add("state");
    openapiFields.add("stoppedAt");
    openapiFields.add("successUrlCount");
    openapiFields.add("totalUrlCount");
    openapiFields.add("urlListId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CrawlRun
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CrawlRun.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CrawlRun is not found in the empty JSON string", CrawlRun.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CrawlRun.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CrawlRun` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("extractorId") != null && !jsonObj.get("extractorId").isJsonNull()) && !jsonObj.get("extractorId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `extractorId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("extractorId").toString()));
      }
      if ((jsonObj.get("guid") != null && !jsonObj.get("guid").isJsonNull()) && !jsonObj.get("guid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `guid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("guid").toString()));
      }
      if ((jsonObj.get("runtimeConfigId") != null && !jsonObj.get("runtimeConfigId").isJsonNull()) && !jsonObj.get("runtimeConfigId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `runtimeConfigId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("runtimeConfigId").toString()));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      if ((jsonObj.get("urlListId") != null && !jsonObj.get("urlListId").isJsonNull()) && !jsonObj.get("urlListId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `urlListId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("urlListId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CrawlRun.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CrawlRun' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CrawlRun> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CrawlRun.class));

       return (TypeAdapter<T>) new TypeAdapter<CrawlRun>() {
           @Override
           public void write(JsonWriter out, CrawlRun value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CrawlRun read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CrawlRun given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CrawlRun
   * @throws IOException if the JSON string is invalid with respect to CrawlRun
   */
  public static CrawlRun fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CrawlRun.class);
  }

  /**
   * Convert an instance of CrawlRun to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

