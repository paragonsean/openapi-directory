# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CrawlRun(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, extractor_id: str=None, failed_url_count: int=None, guid: str=None, row_count: int=None, runtime_config_id: str=None, started_at: int=None, state: str=None, stopped_at: int=None, success_url_count: int=None, total_url_count: int=None, url_list_id: str=None):
        """CrawlRun - a model defined in OpenAPI

        :param extractor_id: The extractor_id of this CrawlRun.
        :param failed_url_count: The failed_url_count of this CrawlRun.
        :param guid: The guid of this CrawlRun.
        :param row_count: The row_count of this CrawlRun.
        :param runtime_config_id: The runtime_config_id of this CrawlRun.
        :param started_at: The started_at of this CrawlRun.
        :param state: The state of this CrawlRun.
        :param stopped_at: The stopped_at of this CrawlRun.
        :param success_url_count: The success_url_count of this CrawlRun.
        :param total_url_count: The total_url_count of this CrawlRun.
        :param url_list_id: The url_list_id of this CrawlRun.
        """
        self.openapi_types = {
            'extractor_id': str,
            'failed_url_count': int,
            'guid': str,
            'row_count': int,
            'runtime_config_id': str,
            'started_at': int,
            'state': str,
            'stopped_at': int,
            'success_url_count': int,
            'total_url_count': int,
            'url_list_id': str
        }

        self.attribute_map = {
            'extractor_id': 'extractorId',
            'failed_url_count': 'failedUrlCount',
            'guid': 'guid',
            'row_count': 'rowCount',
            'runtime_config_id': 'runtimeConfigId',
            'started_at': 'startedAt',
            'state': 'state',
            'stopped_at': 'stoppedAt',
            'success_url_count': 'successUrlCount',
            'total_url_count': 'totalUrlCount',
            'url_list_id': 'urlListId'
        }

        self._extractor_id = extractor_id
        self._failed_url_count = failed_url_count
        self._guid = guid
        self._row_count = row_count
        self._runtime_config_id = runtime_config_id
        self._started_at = started_at
        self._state = state
        self._stopped_at = stopped_at
        self._success_url_count = success_url_count
        self._total_url_count = total_url_count
        self._url_list_id = url_list_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CrawlRun':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CrawlRun of this CrawlRun.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def extractor_id(self):
        """Gets the extractor_id of this CrawlRun.


        :return: The extractor_id of this CrawlRun.
        :rtype: str
        """
        return self._extractor_id

    @extractor_id.setter
    def extractor_id(self, extractor_id):
        """Sets the extractor_id of this CrawlRun.


        :param extractor_id: The extractor_id of this CrawlRun.
        :type extractor_id: str
        """

        self._extractor_id = extractor_id

    @property
    def failed_url_count(self):
        """Gets the failed_url_count of this CrawlRun.


        :return: The failed_url_count of this CrawlRun.
        :rtype: int
        """
        return self._failed_url_count

    @failed_url_count.setter
    def failed_url_count(self, failed_url_count):
        """Sets the failed_url_count of this CrawlRun.


        :param failed_url_count: The failed_url_count of this CrawlRun.
        :type failed_url_count: int
        """

        self._failed_url_count = failed_url_count

    @property
    def guid(self):
        """Gets the guid of this CrawlRun.


        :return: The guid of this CrawlRun.
        :rtype: str
        """
        return self._guid

    @guid.setter
    def guid(self, guid):
        """Sets the guid of this CrawlRun.


        :param guid: The guid of this CrawlRun.
        :type guid: str
        """

        self._guid = guid

    @property
    def row_count(self):
        """Gets the row_count of this CrawlRun.


        :return: The row_count of this CrawlRun.
        :rtype: int
        """
        return self._row_count

    @row_count.setter
    def row_count(self, row_count):
        """Sets the row_count of this CrawlRun.


        :param row_count: The row_count of this CrawlRun.
        :type row_count: int
        """

        self._row_count = row_count

    @property
    def runtime_config_id(self):
        """Gets the runtime_config_id of this CrawlRun.


        :return: The runtime_config_id of this CrawlRun.
        :rtype: str
        """
        return self._runtime_config_id

    @runtime_config_id.setter
    def runtime_config_id(self, runtime_config_id):
        """Sets the runtime_config_id of this CrawlRun.


        :param runtime_config_id: The runtime_config_id of this CrawlRun.
        :type runtime_config_id: str
        """

        self._runtime_config_id = runtime_config_id

    @property
    def started_at(self):
        """Gets the started_at of this CrawlRun.


        :return: The started_at of this CrawlRun.
        :rtype: int
        """
        return self._started_at

    @started_at.setter
    def started_at(self, started_at):
        """Sets the started_at of this CrawlRun.


        :param started_at: The started_at of this CrawlRun.
        :type started_at: int
        """

        self._started_at = started_at

    @property
    def state(self):
        """Gets the state of this CrawlRun.


        :return: The state of this CrawlRun.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this CrawlRun.


        :param state: The state of this CrawlRun.
        :type state: str
        """

        self._state = state

    @property
    def stopped_at(self):
        """Gets the stopped_at of this CrawlRun.


        :return: The stopped_at of this CrawlRun.
        :rtype: int
        """
        return self._stopped_at

    @stopped_at.setter
    def stopped_at(self, stopped_at):
        """Sets the stopped_at of this CrawlRun.


        :param stopped_at: The stopped_at of this CrawlRun.
        :type stopped_at: int
        """

        self._stopped_at = stopped_at

    @property
    def success_url_count(self):
        """Gets the success_url_count of this CrawlRun.


        :return: The success_url_count of this CrawlRun.
        :rtype: int
        """
        return self._success_url_count

    @success_url_count.setter
    def success_url_count(self, success_url_count):
        """Sets the success_url_count of this CrawlRun.


        :param success_url_count: The success_url_count of this CrawlRun.
        :type success_url_count: int
        """

        self._success_url_count = success_url_count

    @property
    def total_url_count(self):
        """Gets the total_url_count of this CrawlRun.


        :return: The total_url_count of this CrawlRun.
        :rtype: int
        """
        return self._total_url_count

    @total_url_count.setter
    def total_url_count(self, total_url_count):
        """Sets the total_url_count of this CrawlRun.


        :param total_url_count: The total_url_count of this CrawlRun.
        :type total_url_count: int
        """

        self._total_url_count = total_url_count

    @property
    def url_list_id(self):
        """Gets the url_list_id of this CrawlRun.


        :return: The url_list_id of this CrawlRun.
        :rtype: str
        """
        return self._url_list_id

    @url_list_id.setter
    def url_list_id(self, url_list_id):
        """Sets the url_list_id of this CrawlRun.


        :param url_list_id: The url_list_id of this CrawlRun.
        :type url_list_id: str
        """

        self._url_list_id = url_list_id
