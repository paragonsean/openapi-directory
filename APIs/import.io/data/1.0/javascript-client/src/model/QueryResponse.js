/**
 * import.io
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The QueryResponse model module.
 * @module model/QueryResponse
 * @version 1.0
 */
class QueryResponse {
    /**
     * Constructs a new <code>QueryResponse</code>.
     * @alias module:model/QueryResponse
     */
    constructor() { 
        
        QueryResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>QueryResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QueryResponse} obj Optional instance to populate.
     * @return {module:model/QueryResponse} The populated <code>QueryResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QueryResponse();

            if (data.hasOwnProperty('error')) {
                obj['error'] = ApiClient.convertToType(data['error'], 'String');
            }
            if (data.hasOwnProperty('exceptionType')) {
                obj['exceptionType'] = ApiClient.convertToType(data['exceptionType'], 'String');
            }
            if (data.hasOwnProperty('extractorData')) {
                obj['extractorData'] = ApiClient.convertToType(data['extractorData'], Object);
            }
            if (data.hasOwnProperty('pageData')) {
                obj['pageData'] = ApiClient.convertToType(data['pageData'], Object);
            }
            if (data.hasOwnProperty('runtimeConfigId')) {
                obj['runtimeConfigId'] = ApiClient.convertToType(data['runtimeConfigId'], 'String');
            }
            if (data.hasOwnProperty('sequenceNumber')) {
                obj['sequenceNumber'] = ApiClient.convertToType(data['sequenceNumber'], 'Number');
            }
            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'Number');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QueryResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QueryResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['error'] && !(typeof data['error'] === 'string' || data['error'] instanceof String)) {
            throw new Error("Expected the field `error` to be a primitive type in the JSON string but got " + data['error']);
        }
        // ensure the json data is a string
        if (data['exceptionType'] && !(typeof data['exceptionType'] === 'string' || data['exceptionType'] instanceof String)) {
            throw new Error("Expected the field `exceptionType` to be a primitive type in the JSON string but got " + data['exceptionType']);
        }
        // ensure the json data is a string
        if (data['runtimeConfigId'] && !(typeof data['runtimeConfigId'] === 'string' || data['runtimeConfigId'] instanceof String)) {
            throw new Error("Expected the field `runtimeConfigId` to be a primitive type in the JSON string but got " + data['runtimeConfigId']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * @member {String} error
 */
QueryResponse.prototype['error'] = undefined;

/**
 * @member {String} exceptionType
 */
QueryResponse.prototype['exceptionType'] = undefined;

/**
 * @member {Object} extractorData
 */
QueryResponse.prototype['extractorData'] = undefined;

/**
 * @member {Object} pageData
 */
QueryResponse.prototype['pageData'] = undefined;

/**
 * @member {String} runtimeConfigId
 */
QueryResponse.prototype['runtimeConfigId'] = undefined;

/**
 * @member {Number} sequenceNumber
 */
QueryResponse.prototype['sequenceNumber'] = undefined;

/**
 * @member {Number} timestamp
 */
QueryResponse.prototype['timestamp'] = undefined;

/**
 * @member {String} url
 */
QueryResponse.prototype['url'] = undefined;






export default QueryResponse;

