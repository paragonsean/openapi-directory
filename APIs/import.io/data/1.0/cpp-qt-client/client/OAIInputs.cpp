/**
 * import.io
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInputs.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInputs::OAIInputs(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInputs::OAIInputs() {
    this->initializeModel();
}

OAIInputs::~OAIInputs() {}

void OAIInputs::initializeModel() {

    m_example_input_isSet = false;
    m_example_input_isValid = false;

    m__url_isSet = false;
    m__url_isValid = false;
}

void OAIInputs::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInputs::fromJsonObject(QJsonObject json) {

    m_example_input_isValid = ::OpenAPI::fromJsonValue(m_example_input, json[QString("Example Input")]);
    m_example_input_isSet = !json[QString("Example Input")].isNull() && m_example_input_isValid;

    m__url_isValid = ::OpenAPI::fromJsonValue(m__url, json[QString("_url")]);
    m__url_isSet = !json[QString("_url")].isNull() && m__url_isValid;
}

QString OAIInputs::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInputs::asJsonObject() const {
    QJsonObject obj;
    if (m_example_input_isSet) {
        obj.insert(QString("Example Input"), ::OpenAPI::toJsonValue(m_example_input));
    }
    if (m__url_isSet) {
        obj.insert(QString("_url"), ::OpenAPI::toJsonValue(m__url));
    }
    return obj;
}

QString OAIInputs::getExampleInput() const {
    return m_example_input;
}
void OAIInputs::setExampleInput(const QString &example_input) {
    m_example_input = example_input;
    m_example_input_isSet = true;
}

bool OAIInputs::is_example_input_Set() const{
    return m_example_input_isSet;
}

bool OAIInputs::is_example_input_Valid() const{
    return m_example_input_isValid;
}

QString OAIInputs::getUrl() const {
    return m__url;
}
void OAIInputs::setUrl(const QString &_url) {
    m__url = _url;
    m__url_isSet = true;
}

bool OAIInputs::is__url_Set() const{
    return m__url_isSet;
}

bool OAIInputs::is__url_Valid() const{
    return m__url_isValid;
}

bool OAIInputs::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_example_input_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m__url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInputs::isValid() const {
    // only required properties are required for the object to be considered valid
    return m__url_isValid && true;
}

} // namespace OpenAPI
