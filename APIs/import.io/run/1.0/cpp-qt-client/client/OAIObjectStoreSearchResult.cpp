/**
 * import.io
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIObjectStoreSearchResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIObjectStoreSearchResult::OAIObjectStoreSearchResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIObjectStoreSearchResult::OAIObjectStoreSearchResult() {
    this->initializeModel();
}

OAIObjectStoreSearchResult::~OAIObjectStoreSearchResult() {}

void OAIObjectStoreSearchResult::initializeModel() {

    m_hits_isSet = false;
    m_hits_isValid = false;

    m_timed_out_isSet = false;
    m_timed_out_isValid = false;

    m_took_isSet = false;
    m_took_isValid = false;
}

void OAIObjectStoreSearchResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIObjectStoreSearchResult::fromJsonObject(QJsonObject json) {

    m_hits_isValid = ::OpenAPI::fromJsonValue(m_hits, json[QString("hits")]);
    m_hits_isSet = !json[QString("hits")].isNull() && m_hits_isValid;

    m_timed_out_isValid = ::OpenAPI::fromJsonValue(m_timed_out, json[QString("timed_out")]);
    m_timed_out_isSet = !json[QString("timed_out")].isNull() && m_timed_out_isValid;

    m_took_isValid = ::OpenAPI::fromJsonValue(m_took, json[QString("took")]);
    m_took_isSet = !json[QString("took")].isNull() && m_took_isValid;
}

QString OAIObjectStoreSearchResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIObjectStoreSearchResult::asJsonObject() const {
    QJsonObject obj;
    if (m_hits.isSet()) {
        obj.insert(QString("hits"), ::OpenAPI::toJsonValue(m_hits));
    }
    if (m_timed_out_isSet) {
        obj.insert(QString("timed_out"), ::OpenAPI::toJsonValue(m_timed_out));
    }
    if (m_took_isSet) {
        obj.insert(QString("took"), ::OpenAPI::toJsonValue(m_took));
    }
    return obj;
}

OAIObjectStoreSearchResult_hits OAIObjectStoreSearchResult::getHits() const {
    return m_hits;
}
void OAIObjectStoreSearchResult::setHits(const OAIObjectStoreSearchResult_hits &hits) {
    m_hits = hits;
    m_hits_isSet = true;
}

bool OAIObjectStoreSearchResult::is_hits_Set() const{
    return m_hits_isSet;
}

bool OAIObjectStoreSearchResult::is_hits_Valid() const{
    return m_hits_isValid;
}

bool OAIObjectStoreSearchResult::isTimedOut() const {
    return m_timed_out;
}
void OAIObjectStoreSearchResult::setTimedOut(const bool &timed_out) {
    m_timed_out = timed_out;
    m_timed_out_isSet = true;
}

bool OAIObjectStoreSearchResult::is_timed_out_Set() const{
    return m_timed_out_isSet;
}

bool OAIObjectStoreSearchResult::is_timed_out_Valid() const{
    return m_timed_out_isValid;
}

qint32 OAIObjectStoreSearchResult::getTook() const {
    return m_took;
}
void OAIObjectStoreSearchResult::setTook(const qint32 &took) {
    m_took = took;
    m_took_isSet = true;
}

bool OAIObjectStoreSearchResult::is_took_Set() const{
    return m_took_isSet;
}

bool OAIObjectStoreSearchResult::is_took_Valid() const{
    return m_took_isValid;
}

bool OAIObjectStoreSearchResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_hits.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_timed_out_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_took_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIObjectStoreSearchResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
