# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.schedule_interval_data import ScheduleIntervalData
from openapi_server import util


class Schedule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, extractor_id: str=None, interval: str=None, interval_data: ScheduleIntervalData=None, next_run_at: int=None, owner_id: str=None, start_timestamp: int=None):
        """Schedule - a model defined in OpenAPI

        :param extractor_id: The extractor_id of this Schedule.
        :param interval: The interval of this Schedule.
        :param interval_data: The interval_data of this Schedule.
        :param next_run_at: The next_run_at of this Schedule.
        :param owner_id: The owner_id of this Schedule.
        :param start_timestamp: The start_timestamp of this Schedule.
        """
        self.openapi_types = {
            'extractor_id': str,
            'interval': str,
            'interval_data': ScheduleIntervalData,
            'next_run_at': int,
            'owner_id': str,
            'start_timestamp': int
        }

        self.attribute_map = {
            'extractor_id': 'extractorId',
            'interval': 'interval',
            'interval_data': 'intervalData',
            'next_run_at': 'nextRunAt',
            'owner_id': 'ownerId',
            'start_timestamp': 'startTimestamp'
        }

        self._extractor_id = extractor_id
        self._interval = interval
        self._interval_data = interval_data
        self._next_run_at = next_run_at
        self._owner_id = owner_id
        self._start_timestamp = start_timestamp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Schedule':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Schedule of this Schedule.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def extractor_id(self):
        """Gets the extractor_id of this Schedule.


        :return: The extractor_id of this Schedule.
        :rtype: str
        """
        return self._extractor_id

    @extractor_id.setter
    def extractor_id(self, extractor_id):
        """Sets the extractor_id of this Schedule.


        :param extractor_id: The extractor_id of this Schedule.
        :type extractor_id: str
        """

        self._extractor_id = extractor_id

    @property
    def interval(self):
        """Gets the interval of this Schedule.


        :return: The interval of this Schedule.
        :rtype: str
        """
        return self._interval

    @interval.setter
    def interval(self, interval):
        """Sets the interval of this Schedule.


        :param interval: The interval of this Schedule.
        :type interval: str
        """

        self._interval = interval

    @property
    def interval_data(self):
        """Gets the interval_data of this Schedule.


        :return: The interval_data of this Schedule.
        :rtype: ScheduleIntervalData
        """
        return self._interval_data

    @interval_data.setter
    def interval_data(self, interval_data):
        """Sets the interval_data of this Schedule.


        :param interval_data: The interval_data of this Schedule.
        :type interval_data: ScheduleIntervalData
        """

        self._interval_data = interval_data

    @property
    def next_run_at(self):
        """Gets the next_run_at of this Schedule.


        :return: The next_run_at of this Schedule.
        :rtype: int
        """
        return self._next_run_at

    @next_run_at.setter
    def next_run_at(self, next_run_at):
        """Sets the next_run_at of this Schedule.


        :param next_run_at: The next_run_at of this Schedule.
        :type next_run_at: int
        """

        self._next_run_at = next_run_at

    @property
    def owner_id(self):
        """Gets the owner_id of this Schedule.


        :return: The owner_id of this Schedule.
        :rtype: str
        """
        return self._owner_id

    @owner_id.setter
    def owner_id(self, owner_id):
        """Sets the owner_id of this Schedule.


        :param owner_id: The owner_id of this Schedule.
        :type owner_id: str
        """

        self._owner_id = owner_id

    @property
    def start_timestamp(self):
        """Gets the start_timestamp of this Schedule.


        :return: The start_timestamp of this Schedule.
        :rtype: int
        """
        return self._start_timestamp

    @start_timestamp.setter
    def start_timestamp(self, start_timestamp):
        """Sets the start_timestamp of this Schedule.


        :param start_timestamp: The start_timestamp of this Schedule.
        :type start_timestamp: int
        """

        self._start_timestamp = start_timestamp
