/**
 * import.io
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICrawlRun.h
 *
 * 
 */

#ifndef OAICrawlRun_H
#define OAICrawlRun_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICrawlRun : public OAIObject {
public:
    OAICrawlRun();
    OAICrawlRun(QString json);
    ~OAICrawlRun() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getExtractorId() const;
    void setExtractorId(const QString &extractor_id);
    bool is_extractor_id_Set() const;
    bool is_extractor_id_Valid() const;

    qint32 getFailedUrlCount() const;
    void setFailedUrlCount(const qint32 &failed_url_count);
    bool is_failed_url_count_Set() const;
    bool is_failed_url_count_Valid() const;

    QString getGuid() const;
    void setGuid(const QString &guid);
    bool is_guid_Set() const;
    bool is_guid_Valid() const;

    qint32 getRowCount() const;
    void setRowCount(const qint32 &row_count);
    bool is_row_count_Set() const;
    bool is_row_count_Valid() const;

    QString getRuntimeConfigId() const;
    void setRuntimeConfigId(const QString &runtime_config_id);
    bool is_runtime_config_id_Set() const;
    bool is_runtime_config_id_Valid() const;

    qint64 getStartedAt() const;
    void setStartedAt(const qint64 &started_at);
    bool is_started_at_Set() const;
    bool is_started_at_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    qint64 getStoppedAt() const;
    void setStoppedAt(const qint64 &stopped_at);
    bool is_stopped_at_Set() const;
    bool is_stopped_at_Valid() const;

    qint32 getSuccessUrlCount() const;
    void setSuccessUrlCount(const qint32 &success_url_count);
    bool is_success_url_count_Set() const;
    bool is_success_url_count_Valid() const;

    qint32 getTotalUrlCount() const;
    void setTotalUrlCount(const qint32 &total_url_count);
    bool is_total_url_count_Set() const;
    bool is_total_url_count_Valid() const;

    QString getUrlListId() const;
    void setUrlListId(const QString &url_list_id);
    bool is_url_list_id_Set() const;
    bool is_url_list_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_extractor_id;
    bool m_extractor_id_isSet;
    bool m_extractor_id_isValid;

    qint32 m_failed_url_count;
    bool m_failed_url_count_isSet;
    bool m_failed_url_count_isValid;

    QString m_guid;
    bool m_guid_isSet;
    bool m_guid_isValid;

    qint32 m_row_count;
    bool m_row_count_isSet;
    bool m_row_count_isValid;

    QString m_runtime_config_id;
    bool m_runtime_config_id_isSet;
    bool m_runtime_config_id_isValid;

    qint64 m_started_at;
    bool m_started_at_isSet;
    bool m_started_at_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    qint64 m_stopped_at;
    bool m_stopped_at_isSet;
    bool m_stopped_at_isValid;

    qint32 m_success_url_count;
    bool m_success_url_count_isSet;
    bool m_success_url_count_isValid;

    qint32 m_total_url_count;
    bool m_total_url_count_isSet;
    bool m_total_url_count_isValid;

    QString m_url_list_id;
    bool m_url_list_id_isSet;
    bool m_url_list_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICrawlRun)

#endif // OAICrawlRun_H
