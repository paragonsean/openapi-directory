# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class JournalExpressionDataTable1(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, table_name: str=None):
        """JournalExpressionDataTable1 - a model defined in OpenAPI

        :param table_name: The table_name of this JournalExpressionDataTable1.
        """
        self.openapi_types = {
            'table_name': str
        }

        self.attribute_map = {
            'table_name': 'TableName'
        }

        self._table_name = table_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JournalExpressionDataTable1':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JournalExpressionDataTable_1 of this JournalExpressionDataTable1.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def table_name(self):
        """Gets the table_name of this JournalExpressionDataTable1.

        The journal expression data tables' table name

        :return: The table_name of this JournalExpressionDataTable1.
        :rtype: str
        """
        return self._table_name

    @table_name.setter
    def table_name(self, table_name):
        """Sets the table_name of this JournalExpressionDataTable1.

        The journal expression data tables' table name

        :param table_name: The table_name of this JournalExpressionDataTable1.
        :type table_name: str
        """

        self._table_name = table_name
