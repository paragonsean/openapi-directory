# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.reporting_instruction1 import ReportingInstruction1
from openapi_server import util


class ReportingInstruction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, reporting_instruction: ReportingInstruction1=None):
        """ReportingInstruction - a model defined in OpenAPI

        :param reporting_instruction: The reporting_instruction of this ReportingInstruction.
        """
        self.openapi_types = {
            'reporting_instruction': ReportingInstruction1
        }

        self.attribute_map = {
            'reporting_instruction': 'ReportingInstruction'
        }

        self._reporting_instruction = reporting_instruction

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReportingInstruction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReportingInstruction of this ReportingInstruction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def reporting_instruction(self):
        """Gets the reporting_instruction of this ReportingInstruction.


        :return: The reporting_instruction of this ReportingInstruction.
        :rtype: ReportingInstruction1
        """
        return self._reporting_instruction

    @reporting_instruction.setter
    def reporting_instruction(self, reporting_instruction):
        """Sets the reporting_instruction of this ReportingInstruction.


        :param reporting_instruction: The reporting_instruction of this ReportingInstruction.
        :type reporting_instruction: ReportingInstruction1
        """

        self._reporting_instruction = reporting_instruction
