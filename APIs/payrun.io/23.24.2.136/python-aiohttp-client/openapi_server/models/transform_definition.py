# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.transform_definition1 import TransformDefinition1
from openapi_server import util


class TransformDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, transform_definition: TransformDefinition1=None):
        """TransformDefinition - a model defined in OpenAPI

        :param transform_definition: The transform_definition of this TransformDefinition.
        """
        self.openapi_types = {
            'transform_definition': TransformDefinition1
        }

        self.attribute_map = {
            'transform_definition': 'TransformDefinition'
        }

        self._transform_definition = transform_definition

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TransformDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TransformDefinition of this TransformDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def transform_definition(self):
        """Gets the transform_definition of this TransformDefinition.


        :return: The transform_definition of this TransformDefinition.
        :rtype: TransformDefinition1
        """
        return self._transform_definition

    @transform_definition.setter
    def transform_definition(self, transform_definition):
        """Sets the transform_definition of this TransformDefinition.


        :param transform_definition: The transform_definition of this TransformDefinition.
        :type transform_definition: TransformDefinition1
        """

        self._transform_definition = transform_definition
