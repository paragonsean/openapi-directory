# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ConditionInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, value_a: str=None, value_b: str=None):
        """ConditionInner - a model defined in OpenAPI

        :param value_a: The value_a of this ConditionInner.
        :param value_b: The value_b of this ConditionInner.
        """
        self.openapi_types = {
            'value_a': str,
            'value_b': str
        }

        self.attribute_map = {
            'value_a': '@ValueA',
            'value_b': '@ValueB'
        }

        self._value_a = value_a
        self._value_b = value_b

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConditionInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Condition_inner of this ConditionInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def value_a(self):
        """Gets the value_a of this ConditionInner.

        The compare condition bases' value a

        :return: The value_a of this ConditionInner.
        :rtype: str
        """
        return self._value_a

    @value_a.setter
    def value_a(self, value_a):
        """Sets the value_a of this ConditionInner.

        The compare condition bases' value a

        :param value_a: The value_a of this ConditionInner.
        :type value_a: str
        """

        self._value_a = value_a

    @property
    def value_b(self):
        """Gets the value_b of this ConditionInner.

        The compare condition bases' value b

        :return: The value_b of this ConditionInner.
        :rtype: str
        """
        return self._value_b

    @value_b.setter
    def value_b(self, value_b):
        """Sets the value_b of this ConditionInner.

        The compare condition bases' value b

        :param value_b: The value_b of this ConditionInner.
        :type value_b: str
        """

        self._value_b = value_b
