# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReportLine1(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, generated: datetime=None, tax_month: int=None, tax_year: int=None, value: float=None):
        """ReportLine1 - a model defined in OpenAPI

        :param description: The description of this ReportLine1.
        :param generated: The generated of this ReportLine1.
        :param tax_month: The tax_month of this ReportLine1.
        :param tax_year: The tax_year of this ReportLine1.
        :param value: The value of this ReportLine1.
        """
        self.openapi_types = {
            'description': str,
            'generated': datetime,
            'tax_month': int,
            'tax_year': int,
            'value': float
        }

        self.attribute_map = {
            'description': 'Description',
            'generated': 'Generated',
            'tax_month': 'TaxMonth',
            'tax_year': 'TaxYear',
            'value': 'Value'
        }

        self._description = description
        self._generated = generated
        self._tax_month = tax_month
        self._tax_year = tax_year
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReportLine1':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReportLine_1 of this ReportLine1.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this ReportLine1.

        The report lines' description

        :return: The description of this ReportLine1.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ReportLine1.

        The report lines' description

        :param description: The description of this ReportLine1.
        :type description: str
        """

        self._description = description

    @property
    def generated(self):
        """Gets the generated of this ReportLine1.

        The report lines' generated

        :return: The generated of this ReportLine1.
        :rtype: datetime
        """
        return self._generated

    @generated.setter
    def generated(self, generated):
        """Sets the generated of this ReportLine1.

        The report lines' generated

        :param generated: The generated of this ReportLine1.
        :type generated: datetime
        """

        self._generated = generated

    @property
    def tax_month(self):
        """Gets the tax_month of this ReportLine1.

        The report lines' tax month

        :return: The tax_month of this ReportLine1.
        :rtype: int
        """
        return self._tax_month

    @tax_month.setter
    def tax_month(self, tax_month):
        """Sets the tax_month of this ReportLine1.

        The report lines' tax month

        :param tax_month: The tax_month of this ReportLine1.
        :type tax_month: int
        """

        self._tax_month = tax_month

    @property
    def tax_year(self):
        """Gets the tax_year of this ReportLine1.

        The report lines' tax year

        :return: The tax_year of this ReportLine1.
        :rtype: int
        """
        return self._tax_year

    @tax_year.setter
    def tax_year(self, tax_year):
        """Sets the tax_year of this ReportLine1.

        The report lines' tax year

        :param tax_year: The tax_year of this ReportLine1.
        :type tax_year: int
        """

        self._tax_year = tax_year

    @property
    def value(self):
        """Gets the value of this ReportLine1.

        The report lines' value

        :return: The value of this ReportLine1.
        :rtype: float
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this ReportLine1.

        The report lines' value

        :param value: The value of this ReportLine1.
        :type value: float
        """

        self._value = value
