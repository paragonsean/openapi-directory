# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.group_group_inner import GroupGroupInner
from openapi_server import util


class Group(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, group: List[GroupGroupInner]=None):
        """Group - a model defined in OpenAPI

        :param group: The group of this Group.
        """
        self.openapi_types = {
            'group': List[GroupGroupInner]
        }

        self.attribute_map = {
            'group': 'Group'
        }

        self._group = group

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Group':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Group of this Group.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def group(self):
        """Gets the group of this Group.


        :return: The group of this Group.
        :rtype: List[GroupGroupInner]
        """
        return self._group

    @group.setter
    def group(self, group):
        """Sets the group of this Group.


        :param group: The group of this Group.
        :type group: List[GroupGroupInner]
        """

        self._group = group
