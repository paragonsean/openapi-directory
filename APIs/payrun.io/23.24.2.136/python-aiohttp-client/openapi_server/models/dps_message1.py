# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DpsMessage1(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, form_type: str=None, issue_date: date=None, last_updated: datetime=None, message: str=None, message_status: str=None, message_type: str=None, processing_result: str=None, retrieve_date: datetime=None, sequence_number: int=None):
        """DpsMessage1 - a model defined in OpenAPI

        :param form_type: The form_type of this DpsMessage1.
        :param issue_date: The issue_date of this DpsMessage1.
        :param last_updated: The last_updated of this DpsMessage1.
        :param message: The message of this DpsMessage1.
        :param message_status: The message_status of this DpsMessage1.
        :param message_type: The message_type of this DpsMessage1.
        :param processing_result: The processing_result of this DpsMessage1.
        :param retrieve_date: The retrieve_date of this DpsMessage1.
        :param sequence_number: The sequence_number of this DpsMessage1.
        """
        self.openapi_types = {
            'form_type': str,
            'issue_date': date,
            'last_updated': datetime,
            'message': str,
            'message_status': str,
            'message_type': str,
            'processing_result': str,
            'retrieve_date': datetime,
            'sequence_number': int
        }

        self.attribute_map = {
            'form_type': 'FormType',
            'issue_date': 'IssueDate',
            'last_updated': 'LastUpdated',
            'message': 'Message',
            'message_status': 'MessageStatus',
            'message_type': 'MessageType',
            'processing_result': 'ProcessingResult',
            'retrieve_date': 'RetrieveDate',
            'sequence_number': 'SequenceNumber'
        }

        self._form_type = form_type
        self._issue_date = issue_date
        self._last_updated = last_updated
        self._message = message
        self._message_status = message_status
        self._message_type = message_type
        self._processing_result = processing_result
        self._retrieve_date = retrieve_date
        self._sequence_number = sequence_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DpsMessage1':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DpsMessage_1 of this DpsMessage1.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def form_type(self):
        """Gets the form_type of this DpsMessage1.

        The dps messages' form type

        :return: The form_type of this DpsMessage1.
        :rtype: str
        """
        return self._form_type

    @form_type.setter
    def form_type(self, form_type):
        """Sets the form_type of this DpsMessage1.

        The dps messages' form type

        :param form_type: The form_type of this DpsMessage1.
        :type form_type: str
        """

        self._form_type = form_type

    @property
    def issue_date(self):
        """Gets the issue_date of this DpsMessage1.

        The dps messages' issue date

        :return: The issue_date of this DpsMessage1.
        :rtype: date
        """
        return self._issue_date

    @issue_date.setter
    def issue_date(self, issue_date):
        """Sets the issue_date of this DpsMessage1.

        The dps messages' issue date

        :param issue_date: The issue_date of this DpsMessage1.
        :type issue_date: date
        """

        self._issue_date = issue_date

    @property
    def last_updated(self):
        """Gets the last_updated of this DpsMessage1.

        The dps messages' last updated

        :return: The last_updated of this DpsMessage1.
        :rtype: datetime
        """
        return self._last_updated

    @last_updated.setter
    def last_updated(self, last_updated):
        """Sets the last_updated of this DpsMessage1.

        The dps messages' last updated

        :param last_updated: The last_updated of this DpsMessage1.
        :type last_updated: datetime
        """

        self._last_updated = last_updated

    @property
    def message(self):
        """Gets the message of this DpsMessage1.

        The dps messages' message

        :return: The message of this DpsMessage1.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this DpsMessage1.

        The dps messages' message

        :param message: The message of this DpsMessage1.
        :type message: str
        """

        self._message = message

    @property
    def message_status(self):
        """Gets the message_status of this DpsMessage1.

        The dps messages' message status

        :return: The message_status of this DpsMessage1.
        :rtype: str
        """
        return self._message_status

    @message_status.setter
    def message_status(self, message_status):
        """Sets the message_status of this DpsMessage1.

        The dps messages' message status

        :param message_status: The message_status of this DpsMessage1.
        :type message_status: str
        """
        allowed_values = ["Retrieved", "Applied", "Unresolved", "Ignored", "Information"]  # noqa: E501
        if message_status not in allowed_values:
            raise ValueError(
                "Invalid value for `message_status` ({0}), must be one of {1}"
                .format(message_status, allowed_values)
            )

        self._message_status = message_status

    @property
    def message_type(self):
        """Gets the message_type of this DpsMessage1.

        The dps messages' message type

        :return: The message_type of this DpsMessage1.
        :rtype: str
        """
        return self._message_type

    @message_type.setter
    def message_type(self, message_type):
        """Sets the message_type of this DpsMessage1.

        The dps messages' message type

        :param message_type: The message_type of this DpsMessage1.
        :type message_type: str
        """

        self._message_type = message_type

    @property
    def processing_result(self):
        """Gets the processing_result of this DpsMessage1.

        The dps messages' processing result

        :return: The processing_result of this DpsMessage1.
        :rtype: str
        """
        return self._processing_result

    @processing_result.setter
    def processing_result(self, processing_result):
        """Sets the processing_result of this DpsMessage1.

        The dps messages' processing result

        :param processing_result: The processing_result of this DpsMessage1.
        :type processing_result: str
        """

        self._processing_result = processing_result

    @property
    def retrieve_date(self):
        """Gets the retrieve_date of this DpsMessage1.

        The dps messages' retrieve date

        :return: The retrieve_date of this DpsMessage1.
        :rtype: datetime
        """
        return self._retrieve_date

    @retrieve_date.setter
    def retrieve_date(self, retrieve_date):
        """Sets the retrieve_date of this DpsMessage1.

        The dps messages' retrieve date

        :param retrieve_date: The retrieve_date of this DpsMessage1.
        :type retrieve_date: datetime
        """

        self._retrieve_date = retrieve_date

    @property
    def sequence_number(self):
        """Gets the sequence_number of this DpsMessage1.

        The dps messages' sequence number

        :return: The sequence_number of this DpsMessage1.
        :rtype: int
        """
        return self._sequence_number

    @sequence_number.setter
    def sequence_number(self, sequence_number):
        """Sets the sequence_number of this DpsMessage1.

        The dps messages' sequence number

        :param sequence_number: The sequence_number of this DpsMessage1.
        :type sequence_number: int
        """

        self._sequence_number = sequence_number
