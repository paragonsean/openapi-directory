# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.deletedelete_inner import DELETEDELETEInner
from openapi_server import util


class DELETE(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, delete: List[DELETEDELETEInner]=None):
        """DELETE - a model defined in OpenAPI

        :param delete: The delete of this DELETE.
        """
        self.openapi_types = {
            'delete': List[DELETEDELETEInner]
        }

        self.attribute_map = {
            'delete': 'DELETE'
        }

        self._delete = delete

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DELETE':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DELETE of this DELETE.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def delete(self):
        """Gets the delete of this DELETE.


        :return: The delete of this DELETE.
        :rtype: List[DELETEDELETEInner]
        """
        return self._delete

    @delete.setter
    def delete(self, delete):
        """Sets the delete of this DELETE.


        :param delete: The delete of this DELETE.
        :type delete: List[DELETEDELETEInner]
        """

        self._delete = delete
