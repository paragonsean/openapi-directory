# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.report_definition1 import ReportDefinition1
from openapi_server import util


class ReportDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, report_definition: ReportDefinition1=None):
        """ReportDefinition - a model defined in OpenAPI

        :param report_definition: The report_definition of this ReportDefinition.
        """
        self.openapi_types = {
            'report_definition': ReportDefinition1
        }

        self.attribute_map = {
            'report_definition': 'ReportDefinition'
        }

        self._report_definition = report_definition

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReportDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReportDefinition of this ReportDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def report_definition(self):
        """Gets the report_definition of this ReportDefinition.


        :return: The report_definition of this ReportDefinition.
        :rtype: ReportDefinition1
        """
        return self._report_definition

    @report_definition.setter
    def report_definition(self, report_definition):
        """Sets the report_definition of this ReportDefinition.


        :param report_definition: The report_definition of this ReportDefinition.
        :type report_definition: ReportDefinition1
        """

        self._report_definition = report_definition
