# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.employer4 import Employer4
from openapi_server.models.pay_schedule5 import PaySchedule5
from openapi_server.models.rti_transaction import RtiTransaction
from openapi_server import util


class RtiJobInstruction1(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, earlier_tax_year: int=None, employer: Employer4=None, final_submission_for_year: bool=None, generate: bool=None, holding_date: datetime=None, late_reason: str=None, no_payment_for_period_from: date=None, no_payment_for_period_to: date=None, pay_schedule: PaySchedule5=None, payment_date: date=None, period_of_inactivity_from: date=None, period_of_inactivity_to: date=None, rti_transaction: RtiTransaction=None, rti_type: str=None, scheme_ceased: date=None, tax_month: int=None, tax_year: int=None, timestamp: datetime=None, transmit: bool=None):
        """RtiJobInstruction1 - a model defined in OpenAPI

        :param earlier_tax_year: The earlier_tax_year of this RtiJobInstruction1.
        :param employer: The employer of this RtiJobInstruction1.
        :param final_submission_for_year: The final_submission_for_year of this RtiJobInstruction1.
        :param generate: The generate of this RtiJobInstruction1.
        :param holding_date: The holding_date of this RtiJobInstruction1.
        :param late_reason: The late_reason of this RtiJobInstruction1.
        :param no_payment_for_period_from: The no_payment_for_period_from of this RtiJobInstruction1.
        :param no_payment_for_period_to: The no_payment_for_period_to of this RtiJobInstruction1.
        :param pay_schedule: The pay_schedule of this RtiJobInstruction1.
        :param payment_date: The payment_date of this RtiJobInstruction1.
        :param period_of_inactivity_from: The period_of_inactivity_from of this RtiJobInstruction1.
        :param period_of_inactivity_to: The period_of_inactivity_to of this RtiJobInstruction1.
        :param rti_transaction: The rti_transaction of this RtiJobInstruction1.
        :param rti_type: The rti_type of this RtiJobInstruction1.
        :param scheme_ceased: The scheme_ceased of this RtiJobInstruction1.
        :param tax_month: The tax_month of this RtiJobInstruction1.
        :param tax_year: The tax_year of this RtiJobInstruction1.
        :param timestamp: The timestamp of this RtiJobInstruction1.
        :param transmit: The transmit of this RtiJobInstruction1.
        """
        self.openapi_types = {
            'earlier_tax_year': int,
            'employer': Employer4,
            'final_submission_for_year': bool,
            'generate': bool,
            'holding_date': datetime,
            'late_reason': str,
            'no_payment_for_period_from': date,
            'no_payment_for_period_to': date,
            'pay_schedule': PaySchedule5,
            'payment_date': date,
            'period_of_inactivity_from': date,
            'period_of_inactivity_to': date,
            'rti_transaction': RtiTransaction,
            'rti_type': str,
            'scheme_ceased': date,
            'tax_month': int,
            'tax_year': int,
            'timestamp': datetime,
            'transmit': bool
        }

        self.attribute_map = {
            'earlier_tax_year': 'EarlierTaxYear',
            'employer': 'Employer',
            'final_submission_for_year': 'FinalSubmissionForYear',
            'generate': 'Generate',
            'holding_date': 'HoldingDate',
            'late_reason': 'LateReason',
            'no_payment_for_period_from': 'NoPaymentForPeriodFrom',
            'no_payment_for_period_to': 'NoPaymentForPeriodTo',
            'pay_schedule': 'PaySchedule',
            'payment_date': 'PaymentDate',
            'period_of_inactivity_from': 'PeriodOfInactivityFrom',
            'period_of_inactivity_to': 'PeriodOfInactivityTo',
            'rti_transaction': 'RtiTransaction',
            'rti_type': 'RtiType',
            'scheme_ceased': 'SchemeCeased',
            'tax_month': 'TaxMonth',
            'tax_year': 'TaxYear',
            'timestamp': 'Timestamp',
            'transmit': 'Transmit'
        }

        self._earlier_tax_year = earlier_tax_year
        self._employer = employer
        self._final_submission_for_year = final_submission_for_year
        self._generate = generate
        self._holding_date = holding_date
        self._late_reason = late_reason
        self._no_payment_for_period_from = no_payment_for_period_from
        self._no_payment_for_period_to = no_payment_for_period_to
        self._pay_schedule = pay_schedule
        self._payment_date = payment_date
        self._period_of_inactivity_from = period_of_inactivity_from
        self._period_of_inactivity_to = period_of_inactivity_to
        self._rti_transaction = rti_transaction
        self._rti_type = rti_type
        self._scheme_ceased = scheme_ceased
        self._tax_month = tax_month
        self._tax_year = tax_year
        self._timestamp = timestamp
        self._transmit = transmit

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RtiJobInstruction1':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RtiJobInstruction_1 of this RtiJobInstruction1.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def earlier_tax_year(self):
        """Gets the earlier_tax_year of this RtiJobInstruction1.

        The rti job instructions' earlier tax year

        :return: The earlier_tax_year of this RtiJobInstruction1.
        :rtype: int
        """
        return self._earlier_tax_year

    @earlier_tax_year.setter
    def earlier_tax_year(self, earlier_tax_year):
        """Sets the earlier_tax_year of this RtiJobInstruction1.

        The rti job instructions' earlier tax year

        :param earlier_tax_year: The earlier_tax_year of this RtiJobInstruction1.
        :type earlier_tax_year: int
        """

        self._earlier_tax_year = earlier_tax_year

    @property
    def employer(self):
        """Gets the employer of this RtiJobInstruction1.


        :return: The employer of this RtiJobInstruction1.
        :rtype: Employer4
        """
        return self._employer

    @employer.setter
    def employer(self, employer):
        """Sets the employer of this RtiJobInstruction1.


        :param employer: The employer of this RtiJobInstruction1.
        :type employer: Employer4
        """

        self._employer = employer

    @property
    def final_submission_for_year(self):
        """Gets the final_submission_for_year of this RtiJobInstruction1.

        The rti job instructions' final submission for year

        :return: The final_submission_for_year of this RtiJobInstruction1.
        :rtype: bool
        """
        return self._final_submission_for_year

    @final_submission_for_year.setter
    def final_submission_for_year(self, final_submission_for_year):
        """Sets the final_submission_for_year of this RtiJobInstruction1.

        The rti job instructions' final submission for year

        :param final_submission_for_year: The final_submission_for_year of this RtiJobInstruction1.
        :type final_submission_for_year: bool
        """

        self._final_submission_for_year = final_submission_for_year

    @property
    def generate(self):
        """Gets the generate of this RtiJobInstruction1.

        The rti job instructions' generate

        :return: The generate of this RtiJobInstruction1.
        :rtype: bool
        """
        return self._generate

    @generate.setter
    def generate(self, generate):
        """Sets the generate of this RtiJobInstruction1.

        The rti job instructions' generate

        :param generate: The generate of this RtiJobInstruction1.
        :type generate: bool
        """

        self._generate = generate

    @property
    def holding_date(self):
        """Gets the holding_date of this RtiJobInstruction1.

        The rti job instructions' holding date

        :return: The holding_date of this RtiJobInstruction1.
        :rtype: datetime
        """
        return self._holding_date

    @holding_date.setter
    def holding_date(self, holding_date):
        """Sets the holding_date of this RtiJobInstruction1.

        The rti job instructions' holding date

        :param holding_date: The holding_date of this RtiJobInstruction1.
        :type holding_date: datetime
        """

        self._holding_date = holding_date

    @property
    def late_reason(self):
        """Gets the late_reason of this RtiJobInstruction1.

        The rti job instructions' late reason

        :return: The late_reason of this RtiJobInstruction1.
        :rtype: str
        """
        return self._late_reason

    @late_reason.setter
    def late_reason(self, late_reason):
        """Sets the late_reason of this RtiJobInstruction1.

        The rti job instructions' late reason

        :param late_reason: The late_reason of this RtiJobInstruction1.
        :type late_reason: str
        """
        allowed_values = ["A", "B", "C", "D", "F", "G", "H"]  # noqa: E501
        if late_reason not in allowed_values:
            raise ValueError(
                "Invalid value for `late_reason` ({0}), must be one of {1}"
                .format(late_reason, allowed_values)
            )

        self._late_reason = late_reason

    @property
    def no_payment_for_period_from(self):
        """Gets the no_payment_for_period_from of this RtiJobInstruction1.

        The rti job instructions' no payment for period from

        :return: The no_payment_for_period_from of this RtiJobInstruction1.
        :rtype: date
        """
        return self._no_payment_for_period_from

    @no_payment_for_period_from.setter
    def no_payment_for_period_from(self, no_payment_for_period_from):
        """Sets the no_payment_for_period_from of this RtiJobInstruction1.

        The rti job instructions' no payment for period from

        :param no_payment_for_period_from: The no_payment_for_period_from of this RtiJobInstruction1.
        :type no_payment_for_period_from: date
        """

        self._no_payment_for_period_from = no_payment_for_period_from

    @property
    def no_payment_for_period_to(self):
        """Gets the no_payment_for_period_to of this RtiJobInstruction1.

        The rti job instructions' no payment for period to

        :return: The no_payment_for_period_to of this RtiJobInstruction1.
        :rtype: date
        """
        return self._no_payment_for_period_to

    @no_payment_for_period_to.setter
    def no_payment_for_period_to(self, no_payment_for_period_to):
        """Sets the no_payment_for_period_to of this RtiJobInstruction1.

        The rti job instructions' no payment for period to

        :param no_payment_for_period_to: The no_payment_for_period_to of this RtiJobInstruction1.
        :type no_payment_for_period_to: date
        """

        self._no_payment_for_period_to = no_payment_for_period_to

    @property
    def pay_schedule(self):
        """Gets the pay_schedule of this RtiJobInstruction1.


        :return: The pay_schedule of this RtiJobInstruction1.
        :rtype: PaySchedule5
        """
        return self._pay_schedule

    @pay_schedule.setter
    def pay_schedule(self, pay_schedule):
        """Sets the pay_schedule of this RtiJobInstruction1.


        :param pay_schedule: The pay_schedule of this RtiJobInstruction1.
        :type pay_schedule: PaySchedule5
        """

        self._pay_schedule = pay_schedule

    @property
    def payment_date(self):
        """Gets the payment_date of this RtiJobInstruction1.

        The rti job instructions' payment date

        :return: The payment_date of this RtiJobInstruction1.
        :rtype: date
        """
        return self._payment_date

    @payment_date.setter
    def payment_date(self, payment_date):
        """Sets the payment_date of this RtiJobInstruction1.

        The rti job instructions' payment date

        :param payment_date: The payment_date of this RtiJobInstruction1.
        :type payment_date: date
        """

        self._payment_date = payment_date

    @property
    def period_of_inactivity_from(self):
        """Gets the period_of_inactivity_from of this RtiJobInstruction1.

        The rti job instructions' period of inactivity from

        :return: The period_of_inactivity_from of this RtiJobInstruction1.
        :rtype: date
        """
        return self._period_of_inactivity_from

    @period_of_inactivity_from.setter
    def period_of_inactivity_from(self, period_of_inactivity_from):
        """Sets the period_of_inactivity_from of this RtiJobInstruction1.

        The rti job instructions' period of inactivity from

        :param period_of_inactivity_from: The period_of_inactivity_from of this RtiJobInstruction1.
        :type period_of_inactivity_from: date
        """

        self._period_of_inactivity_from = period_of_inactivity_from

    @property
    def period_of_inactivity_to(self):
        """Gets the period_of_inactivity_to of this RtiJobInstruction1.

        The rti job instructions' period of inactivity to

        :return: The period_of_inactivity_to of this RtiJobInstruction1.
        :rtype: date
        """
        return self._period_of_inactivity_to

    @period_of_inactivity_to.setter
    def period_of_inactivity_to(self, period_of_inactivity_to):
        """Sets the period_of_inactivity_to of this RtiJobInstruction1.

        The rti job instructions' period of inactivity to

        :param period_of_inactivity_to: The period_of_inactivity_to of this RtiJobInstruction1.
        :type period_of_inactivity_to: date
        """

        self._period_of_inactivity_to = period_of_inactivity_to

    @property
    def rti_transaction(self):
        """Gets the rti_transaction of this RtiJobInstruction1.


        :return: The rti_transaction of this RtiJobInstruction1.
        :rtype: RtiTransaction
        """
        return self._rti_transaction

    @rti_transaction.setter
    def rti_transaction(self, rti_transaction):
        """Sets the rti_transaction of this RtiJobInstruction1.


        :param rti_transaction: The rti_transaction of this RtiJobInstruction1.
        :type rti_transaction: RtiTransaction
        """

        self._rti_transaction = rti_transaction

    @property
    def rti_type(self):
        """Gets the rti_type of this RtiJobInstruction1.

        The rti job instructions' rti type

        :return: The rti_type of this RtiJobInstruction1.
        :rtype: str
        """
        return self._rti_type

    @rti_type.setter
    def rti_type(self, rti_type):
        """Sets the rti_type of this RtiJobInstruction1.

        The rti job instructions' rti type

        :param rti_type: The rti_type of this RtiJobInstruction1.
        :type rti_type: str
        """

        self._rti_type = rti_type

    @property
    def scheme_ceased(self):
        """Gets the scheme_ceased of this RtiJobInstruction1.

        The rti job instructions' scheme ceased

        :return: The scheme_ceased of this RtiJobInstruction1.
        :rtype: date
        """
        return self._scheme_ceased

    @scheme_ceased.setter
    def scheme_ceased(self, scheme_ceased):
        """Sets the scheme_ceased of this RtiJobInstruction1.

        The rti job instructions' scheme ceased

        :param scheme_ceased: The scheme_ceased of this RtiJobInstruction1.
        :type scheme_ceased: date
        """

        self._scheme_ceased = scheme_ceased

    @property
    def tax_month(self):
        """Gets the tax_month of this RtiJobInstruction1.

        The rti job instructions' tax month

        :return: The tax_month of this RtiJobInstruction1.
        :rtype: int
        """
        return self._tax_month

    @tax_month.setter
    def tax_month(self, tax_month):
        """Sets the tax_month of this RtiJobInstruction1.

        The rti job instructions' tax month

        :param tax_month: The tax_month of this RtiJobInstruction1.
        :type tax_month: int
        """

        self._tax_month = tax_month

    @property
    def tax_year(self):
        """Gets the tax_year of this RtiJobInstruction1.

        The rti job instructions' tax year

        :return: The tax_year of this RtiJobInstruction1.
        :rtype: int
        """
        return self._tax_year

    @tax_year.setter
    def tax_year(self, tax_year):
        """Sets the tax_year of this RtiJobInstruction1.

        The rti job instructions' tax year

        :param tax_year: The tax_year of this RtiJobInstruction1.
        :type tax_year: int
        """

        self._tax_year = tax_year

    @property
    def timestamp(self):
        """Gets the timestamp of this RtiJobInstruction1.

        The rti job instructions' timestamp

        :return: The timestamp of this RtiJobInstruction1.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this RtiJobInstruction1.

        The rti job instructions' timestamp

        :param timestamp: The timestamp of this RtiJobInstruction1.
        :type timestamp: datetime
        """

        self._timestamp = timestamp

    @property
    def transmit(self):
        """Gets the transmit of this RtiJobInstruction1.

        The rti job instructions' transmit

        :return: The transmit of this RtiJobInstruction1.
        :rtype: bool
        """
        return self._transmit

    @transmit.setter
    def transmit(self, transmit):
        """Sets the transmit of this RtiJobInstruction1.

        The rti job instructions' transmit

        :param transmit: The transmit of this RtiJobInstruction1.
        :type transmit: bool
        """

        self._transmit = transmit
