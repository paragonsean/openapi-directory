# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ae_assessment1 import AEAssessment1
from openapi_server import util


class AEAssessment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ae_assessment: AEAssessment1=None):
        """AEAssessment - a model defined in OpenAPI

        :param ae_assessment: The ae_assessment of this AEAssessment.
        """
        self.openapi_types = {
            'ae_assessment': AEAssessment1
        }

        self.attribute_map = {
            'ae_assessment': 'AEAssessment'
        }

        self._ae_assessment = ae_assessment

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AEAssessment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AEAssessment of this AEAssessment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ae_assessment(self):
        """Gets the ae_assessment of this AEAssessment.


        :return: The ae_assessment of this AEAssessment.
        :rtype: AEAssessment1
        """
        return self._ae_assessment

    @ae_assessment.setter
    def ae_assessment(self, ae_assessment):
        """Sets the ae_assessment of this AEAssessment.


        :param ae_assessment: The ae_assessment of this AEAssessment.
        :type ae_assessment: AEAssessment1
        """

        self._ae_assessment = ae_assessment
