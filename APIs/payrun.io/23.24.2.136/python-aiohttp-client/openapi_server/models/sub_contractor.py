# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.sub_contractor3 import SubContractor3
from openapi_server import util


class SubContractor(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sub_contractor: SubContractor3=None):
        """SubContractor - a model defined in OpenAPI

        :param sub_contractor: The sub_contractor of this SubContractor.
        """
        self.openapi_types = {
            'sub_contractor': SubContractor3
        }

        self.attribute_map = {
            'sub_contractor': 'SubContractor'
        }

        self._sub_contractor = sub_contractor

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SubContractor':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SubContractor of this SubContractor.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sub_contractor(self):
        """Gets the sub_contractor of this SubContractor.


        :return: The sub_contractor of this SubContractor.
        :rtype: SubContractor3
        """
        return self._sub_contractor

    @sub_contractor.setter
    def sub_contractor(self, sub_contractor):
        """Sets the sub_contractor of this SubContractor.


        :param sub_contractor: The sub_contractor of this SubContractor.
        :type sub_contractor: SubContractor3
        """

        self._sub_contractor = sub_contractor
