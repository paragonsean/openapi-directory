# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.batch_item_base1 import BatchItemBase1
from openapi_server import util


class BatchItemBase(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, batch_item_base: BatchItemBase1=None):
        """BatchItemBase - a model defined in OpenAPI

        :param batch_item_base: The batch_item_base of this BatchItemBase.
        """
        self.openapi_types = {
            'batch_item_base': BatchItemBase1
        }

        self.attribute_map = {
            'batch_item_base': 'BatchItemBase'
        }

        self._batch_item_base = batch_item_base

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchItemBase':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchItemBase of this BatchItemBase.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def batch_item_base(self):
        """Gets the batch_item_base of this BatchItemBase.


        :return: The batch_item_base of this BatchItemBase.
        :rtype: BatchItemBase1
        """
        return self._batch_item_base

    @batch_item_base.setter
    def batch_item_base(self, batch_item_base):
        """Sets the batch_item_base of this BatchItemBase.


        :param batch_item_base: The batch_item_base of this BatchItemBase.
        :type batch_item_base: BatchItemBase1
        """

        self._batch_item_base = batch_item_base
