# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CisInstruction1(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cis_line_tag: str=None, cis_line_type: str=None, description: str=None, pay_frequency: str=None, period_end: int=None, period_start: int=None, tax_year_end: int=None, tax_year_start: int=None, uom: str=None, units: float=None, vat: float=None, value: float=None):
        """CisInstruction1 - a model defined in OpenAPI

        :param cis_line_tag: The cis_line_tag of this CisInstruction1.
        :param cis_line_type: The cis_line_type of this CisInstruction1.
        :param description: The description of this CisInstruction1.
        :param pay_frequency: The pay_frequency of this CisInstruction1.
        :param period_end: The period_end of this CisInstruction1.
        :param period_start: The period_start of this CisInstruction1.
        :param tax_year_end: The tax_year_end of this CisInstruction1.
        :param tax_year_start: The tax_year_start of this CisInstruction1.
        :param uom: The uom of this CisInstruction1.
        :param units: The units of this CisInstruction1.
        :param vat: The vat of this CisInstruction1.
        :param value: The value of this CisInstruction1.
        """
        self.openapi_types = {
            'cis_line_tag': str,
            'cis_line_type': str,
            'description': str,
            'pay_frequency': str,
            'period_end': int,
            'period_start': int,
            'tax_year_end': int,
            'tax_year_start': int,
            'uom': str,
            'units': float,
            'vat': float,
            'value': float
        }

        self.attribute_map = {
            'cis_line_tag': 'CisLineTag',
            'cis_line_type': 'CisLineType',
            'description': 'Description',
            'pay_frequency': 'PayFrequency',
            'period_end': 'PeriodEnd',
            'period_start': 'PeriodStart',
            'tax_year_end': 'TaxYearEnd',
            'tax_year_start': 'TaxYearStart',
            'uom': 'UOM',
            'units': 'Units',
            'vat': 'VAT',
            'value': 'Value'
        }

        self._cis_line_tag = cis_line_tag
        self._cis_line_type = cis_line_type
        self._description = description
        self._pay_frequency = pay_frequency
        self._period_end = period_end
        self._period_start = period_start
        self._tax_year_end = tax_year_end
        self._tax_year_start = tax_year_start
        self._uom = uom
        self._units = units
        self._vat = vat
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CisInstruction1':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CisInstruction_1 of this CisInstruction1.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cis_line_tag(self):
        """Gets the cis_line_tag of this CisInstruction1.

        The cis instructions' cis line tag

        :return: The cis_line_tag of this CisInstruction1.
        :rtype: str
        """
        return self._cis_line_tag

    @cis_line_tag.setter
    def cis_line_tag(self, cis_line_tag):
        """Sets the cis_line_tag of this CisInstruction1.

        The cis instructions' cis line tag

        :param cis_line_tag: The cis_line_tag of this CisInstruction1.
        :type cis_line_tag: str
        """

        self._cis_line_tag = cis_line_tag

    @property
    def cis_line_type(self):
        """Gets the cis_line_type of this CisInstruction1.

        The cis instructions' cis line type

        :return: The cis_line_type of this CisInstruction1.
        :rtype: str
        """
        return self._cis_line_type

    @cis_line_type.setter
    def cis_line_type(self, cis_line_type):
        """Sets the cis_line_type of this CisInstruction1.

        The cis instructions' cis line type

        :param cis_line_type: The cis_line_type of this CisInstruction1.
        :type cis_line_type: str
        """

        self._cis_line_type = cis_line_type

    @property
    def description(self):
        """Gets the description of this CisInstruction1.

        The cis instructions' description

        :return: The description of this CisInstruction1.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CisInstruction1.

        The cis instructions' description

        :param description: The description of this CisInstruction1.
        :type description: str
        """

        self._description = description

    @property
    def pay_frequency(self):
        """Gets the pay_frequency of this CisInstruction1.

        The cis instructions' pay frequency

        :return: The pay_frequency of this CisInstruction1.
        :rtype: str
        """
        return self._pay_frequency

    @pay_frequency.setter
    def pay_frequency(self, pay_frequency):
        """Sets the pay_frequency of this CisInstruction1.

        The cis instructions' pay frequency

        :param pay_frequency: The pay_frequency of this CisInstruction1.
        :type pay_frequency: str
        """
        allowed_values = ["Monthly", "Weekly"]  # noqa: E501
        if pay_frequency not in allowed_values:
            raise ValueError(
                "Invalid value for `pay_frequency` ({0}), must be one of {1}"
                .format(pay_frequency, allowed_values)
            )

        self._pay_frequency = pay_frequency

    @property
    def period_end(self):
        """Gets the period_end of this CisInstruction1.

        The cis instructions' period end

        :return: The period_end of this CisInstruction1.
        :rtype: int
        """
        return self._period_end

    @period_end.setter
    def period_end(self, period_end):
        """Sets the period_end of this CisInstruction1.

        The cis instructions' period end

        :param period_end: The period_end of this CisInstruction1.
        :type period_end: int
        """

        self._period_end = period_end

    @property
    def period_start(self):
        """Gets the period_start of this CisInstruction1.

        The cis instructions' period start

        :return: The period_start of this CisInstruction1.
        :rtype: int
        """
        return self._period_start

    @period_start.setter
    def period_start(self, period_start):
        """Sets the period_start of this CisInstruction1.

        The cis instructions' period start

        :param period_start: The period_start of this CisInstruction1.
        :type period_start: int
        """

        self._period_start = period_start

    @property
    def tax_year_end(self):
        """Gets the tax_year_end of this CisInstruction1.

        The cis instructions' tax year end

        :return: The tax_year_end of this CisInstruction1.
        :rtype: int
        """
        return self._tax_year_end

    @tax_year_end.setter
    def tax_year_end(self, tax_year_end):
        """Sets the tax_year_end of this CisInstruction1.

        The cis instructions' tax year end

        :param tax_year_end: The tax_year_end of this CisInstruction1.
        :type tax_year_end: int
        """

        self._tax_year_end = tax_year_end

    @property
    def tax_year_start(self):
        """Gets the tax_year_start of this CisInstruction1.

        The cis instructions' tax year start

        :return: The tax_year_start of this CisInstruction1.
        :rtype: int
        """
        return self._tax_year_start

    @tax_year_start.setter
    def tax_year_start(self, tax_year_start):
        """Sets the tax_year_start of this CisInstruction1.

        The cis instructions' tax year start

        :param tax_year_start: The tax_year_start of this CisInstruction1.
        :type tax_year_start: int
        """

        self._tax_year_start = tax_year_start

    @property
    def uom(self):
        """Gets the uom of this CisInstruction1.

        The cis instructions' u o m

        :return: The uom of this CisInstruction1.
        :rtype: str
        """
        return self._uom

    @uom.setter
    def uom(self, uom):
        """Sets the uom of this CisInstruction1.

        The cis instructions' u o m

        :param uom: The uom of this CisInstruction1.
        :type uom: str
        """
        allowed_values = ["NotSet", "Minute", "Hour", "Day", "Week", "Month", "Year", "Unit"]  # noqa: E501
        if uom not in allowed_values:
            raise ValueError(
                "Invalid value for `uom` ({0}), must be one of {1}"
                .format(uom, allowed_values)
            )

        self._uom = uom

    @property
    def units(self):
        """Gets the units of this CisInstruction1.

        The cis instructions' units

        :return: The units of this CisInstruction1.
        :rtype: float
        """
        return self._units

    @units.setter
    def units(self, units):
        """Sets the units of this CisInstruction1.

        The cis instructions' units

        :param units: The units of this CisInstruction1.
        :type units: float
        """

        self._units = units

    @property
    def vat(self):
        """Gets the vat of this CisInstruction1.

        The cis instructions' v a t

        :return: The vat of this CisInstruction1.
        :rtype: float
        """
        return self._vat

    @vat.setter
    def vat(self, vat):
        """Sets the vat of this CisInstruction1.

        The cis instructions' v a t

        :param vat: The vat of this CisInstruction1.
        :type vat: float
        """

        self._vat = vat

    @property
    def value(self):
        """Gets the value of this CisInstruction1.

        The cis instructions' value

        :return: The value of this CisInstruction1.
        :rtype: float
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this CisInstruction1.

        The cis instructions' value

        :param value: The value of this CisInstruction1.
        :type value: float
        """

        self._value = value
