# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.batch_job_instruction1 import BatchJobInstruction1
from openapi_server import util


class BatchJobInstruction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, batch_job_instruction: BatchJobInstruction1=None):
        """BatchJobInstruction - a model defined in OpenAPI

        :param batch_job_instruction: The batch_job_instruction of this BatchJobInstruction.
        """
        self.openapi_types = {
            'batch_job_instruction': BatchJobInstruction1
        }

        self.attribute_map = {
            'batch_job_instruction': 'BatchJobInstruction'
        }

        self._batch_job_instruction = batch_job_instruction

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchJobInstruction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchJobInstruction of this BatchJobInstruction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def batch_job_instruction(self):
        """Gets the batch_job_instruction of this BatchJobInstruction.


        :return: The batch_job_instruction of this BatchJobInstruction.
        :rtype: BatchJobInstruction1
        """
        return self._batch_job_instruction

    @batch_job_instruction.setter
    def batch_job_instruction(self, batch_job_instruction):
        """Sets the batch_job_instruction of this BatchJobInstruction.


        :param batch_job_instruction: The batch_job_instruction of this BatchJobInstruction.
        :type batch_job_instruction: BatchJobInstruction1
        """

        self._batch_job_instruction = batch_job_instruction
