# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.third_party_transaction1 import ThirdPartyTransaction1
from openapi_server import util


class ThirdPartyTransaction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, third_party_transaction: ThirdPartyTransaction1=None):
        """ThirdPartyTransaction - a model defined in OpenAPI

        :param third_party_transaction: The third_party_transaction of this ThirdPartyTransaction.
        """
        self.openapi_types = {
            'third_party_transaction': ThirdPartyTransaction1
        }

        self.attribute_map = {
            'third_party_transaction': 'ThirdPartyTransaction'
        }

        self._third_party_transaction = third_party_transaction

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ThirdPartyTransaction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ThirdPartyTransaction of this ThirdPartyTransaction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def third_party_transaction(self):
        """Gets the third_party_transaction of this ThirdPartyTransaction.


        :return: The third_party_transaction of this ThirdPartyTransaction.
        :rtype: ThirdPartyTransaction1
        """
        return self._third_party_transaction

    @third_party_transaction.setter
    def third_party_transaction(self, third_party_transaction):
        """Sets the third_party_transaction of this ThirdPartyTransaction.


        :param third_party_transaction: The third_party_transaction of this ThirdPartyTransaction.
        :type third_party_transaction: ThirdPartyTransaction1
        """

        self._third_party_transaction = third_party_transaction
