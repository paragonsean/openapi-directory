/**
 * PayRun.IO
 * Open, scableable, transparent payroll API.
 *
 * The version of the OpenAPI document: 23.24.2.136
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PayRunIo);
  }
}(this, function(expect, PayRunIo) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PayRunIo.JobsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('JobsApi', function() {
    describe('deleteBatchJob', function() {
      it('should call deleteBatchJob successfully', function(done) {
        //uncomment below and update the code to test deleteBatchJob
        //instance.deleteBatchJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCisJob', function() {
      it('should call deleteCisJob successfully', function(done) {
        //uncomment below and update the code to test deleteCisJob
        //instance.deleteCisJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteDpsJob', function() {
      it('should call deleteDpsJob successfully', function(done) {
        //uncomment below and update the code to test deleteDpsJob
        //instance.deleteDpsJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePayRunJob', function() {
      it('should call deletePayRunJob successfully', function(done) {
        //uncomment below and update the code to test deletePayRunJob
        //instance.deletePayRunJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteRtiJob', function() {
      it('should call deleteRtiJob successfully', function(done) {
        //uncomment below and update the code to test deleteRtiJob
        //instance.deleteRtiJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteThirdPartyJob', function() {
      it('should call deleteThirdPartyJob successfully', function(done) {
        //uncomment below and update the code to test deleteThirdPartyJob
        //instance.deleteThirdPartyJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBatchJobInfo', function() {
      it('should call getBatchJobInfo successfully', function(done) {
        //uncomment below and update the code to test getBatchJobInfo
        //instance.getBatchJobInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBatchJobProgress', function() {
      it('should call getBatchJobProgress successfully', function(done) {
        //uncomment below and update the code to test getBatchJobProgress
        //instance.getBatchJobProgress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBatchJobStatus', function() {
      it('should call getBatchJobStatus successfully', function(done) {
        //uncomment below and update the code to test getBatchJobStatus
        //instance.getBatchJobStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBatchJobs', function() {
      it('should call getBatchJobs successfully', function(done) {
        //uncomment below and update the code to test getBatchJobs
        //instance.getBatchJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCisJobInfo', function() {
      it('should call getCisJobInfo successfully', function(done) {
        //uncomment below and update the code to test getCisJobInfo
        //instance.getCisJobInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCisJobProgress', function() {
      it('should call getCisJobProgress successfully', function(done) {
        //uncomment below and update the code to test getCisJobProgress
        //instance.getCisJobProgress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCisJobStatus', function() {
      it('should call getCisJobStatus successfully', function(done) {
        //uncomment below and update the code to test getCisJobStatus
        //instance.getCisJobStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCisJobs', function() {
      it('should call getCisJobs successfully', function(done) {
        //uncomment below and update the code to test getCisJobs
        //instance.getCisJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDpsJobInfo', function() {
      it('should call getDpsJobInfo successfully', function(done) {
        //uncomment below and update the code to test getDpsJobInfo
        //instance.getDpsJobInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDpsJobProgress', function() {
      it('should call getDpsJobProgress successfully', function(done) {
        //uncomment below and update the code to test getDpsJobProgress
        //instance.getDpsJobProgress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDpsJobStatus', function() {
      it('should call getDpsJobStatus successfully', function(done) {
        //uncomment below and update the code to test getDpsJobStatus
        //instance.getDpsJobStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDpsJobs', function() {
      it('should call getDpsJobs successfully', function(done) {
        //uncomment below and update the code to test getDpsJobs
        //instance.getDpsJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEmployerJobs', function() {
      it('should call getEmployerJobs successfully', function(done) {
        //uncomment below and update the code to test getEmployerJobs
        //instance.getEmployerJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPayRunJobInfo', function() {
      it('should call getPayRunJobInfo successfully', function(done) {
        //uncomment below and update the code to test getPayRunJobInfo
        //instance.getPayRunJobInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPayRunJobProgress', function() {
      it('should call getPayRunJobProgress successfully', function(done) {
        //uncomment below and update the code to test getPayRunJobProgress
        //instance.getPayRunJobProgress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPayRunJobStatus', function() {
      it('should call getPayRunJobStatus successfully', function(done) {
        //uncomment below and update the code to test getPayRunJobStatus
        //instance.getPayRunJobStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPayRunJobs', function() {
      it('should call getPayRunJobs successfully', function(done) {
        //uncomment below and update the code to test getPayRunJobs
        //instance.getPayRunJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRtiJobInfo', function() {
      it('should call getRtiJobInfo successfully', function(done) {
        //uncomment below and update the code to test getRtiJobInfo
        //instance.getRtiJobInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRtiJobProgress', function() {
      it('should call getRtiJobProgress successfully', function(done) {
        //uncomment below and update the code to test getRtiJobProgress
        //instance.getRtiJobProgress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRtiJobStatus', function() {
      it('should call getRtiJobStatus successfully', function(done) {
        //uncomment below and update the code to test getRtiJobStatus
        //instance.getRtiJobStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRtiJobs', function() {
      it('should call getRtiJobs successfully', function(done) {
        //uncomment below and update the code to test getRtiJobs
        //instance.getRtiJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getThirdPartyJobInfo', function() {
      it('should call getThirdPartyJobInfo successfully', function(done) {
        //uncomment below and update the code to test getThirdPartyJobInfo
        //instance.getThirdPartyJobInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getThirdPartyJobProgress', function() {
      it('should call getThirdPartyJobProgress successfully', function(done) {
        //uncomment below and update the code to test getThirdPartyJobProgress
        //instance.getThirdPartyJobProgress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getThirdPartyJobStatus', function() {
      it('should call getThirdPartyJobStatus successfully', function(done) {
        //uncomment below and update the code to test getThirdPartyJobStatus
        //instance.getThirdPartyJobStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getThirdPartyJobs', function() {
      it('should call getThirdPartyJobs successfully', function(done) {
        //uncomment below and update the code to test getThirdPartyJobs
        //instance.getThirdPartyJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postNewBatchJob', function() {
      it('should call postNewBatchJob successfully', function(done) {
        //uncomment below and update the code to test postNewBatchJob
        //instance.postNewBatchJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postNewCisJob', function() {
      it('should call postNewCisJob successfully', function(done) {
        //uncomment below and update the code to test postNewCisJob
        //instance.postNewCisJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postNewDpsJob', function() {
      it('should call postNewDpsJob successfully', function(done) {
        //uncomment below and update the code to test postNewDpsJob
        //instance.postNewDpsJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postNewPayRunJob', function() {
      it('should call postNewPayRunJob successfully', function(done) {
        //uncomment below and update the code to test postNewPayRunJob
        //instance.postNewPayRunJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postNewRtiJob', function() {
      it('should call postNewRtiJob successfully', function(done) {
        //uncomment below and update the code to test postNewRtiJob
        //instance.postNewRtiJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postNewThirdPartyJob', function() {
      it('should call postNewThirdPartyJob successfully', function(done) {
        //uncomment below and update the code to test postNewThirdPartyJob
        //instance.postNewThirdPartyJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
