/**
 * PayRun.IO
 * Open, scableable, transparent payroll API.
 *
 * The version of the OpenAPI document: 23.24.2.136
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PayRunIo);
  }
}(this, function(expect, PayRunIo) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PayRunIo.AEAssessment1();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AEAssessment1', function() {
    it('should create an instance of AEAssessment1', function() {
      // uncomment below and update the code to test AEAssessment1
      //var instance = new PayRunIo.AEAssessment1();
      //expect(instance).to.be.a(PayRunIo.AEAssessment1);
    });

    it('should have the property age (base name: "Age")', function() {
      // uncomment below and update the code to test the property age
      //var instance = new PayRunIo.AEAssessment1();
      //expect(instance).to.be();
    });

    it('should have the property assessmentCode (base name: "AssessmentCode")', function() {
      // uncomment below and update the code to test the property assessmentCode
      //var instance = new PayRunIo.AEAssessment1();
      //expect(instance).to.be();
    });

    it('should have the property assessmentDate (base name: "AssessmentDate")', function() {
      // uncomment below and update the code to test the property assessmentDate
      //var instance = new PayRunIo.AEAssessment1();
      //expect(instance).to.be();
    });

    it('should have the property assessmentEvent (base name: "AssessmentEvent")', function() {
      // uncomment below and update the code to test the property assessmentEvent
      //var instance = new PayRunIo.AEAssessment1();
      //expect(instance).to.be();
    });

    it('should have the property assessmentOverride (base name: "AssessmentOverride")', function() {
      // uncomment below and update the code to test the property assessmentOverride
      //var instance = new PayRunIo.AEAssessment1();
      //expect(instance).to.be();
    });

    it('should have the property assessmentResult (base name: "AssessmentResult")', function() {
      // uncomment below and update the code to test the property assessmentResult
      //var instance = new PayRunIo.AEAssessment1();
      //expect(instance).to.be();
    });

    it('should have the property isMemberOfAlternativePensionScheme (base name: "IsMemberOfAlternativePensionScheme")', function() {
      // uncomment below and update the code to test the property isMemberOfAlternativePensionScheme
      //var instance = new PayRunIo.AEAssessment1();
      //expect(instance).to.be();
    });

    it('should have the property optOutWindowEndDate (base name: "OptOutWindowEndDate")', function() {
      // uncomment below and update the code to test the property optOutWindowEndDate
      //var instance = new PayRunIo.AEAssessment1();
      //expect(instance).to.be();
    });

    it('should have the property qualifyingEarnings (base name: "QualifyingEarnings")', function() {
      // uncomment below and update the code to test the property qualifyingEarnings
      //var instance = new PayRunIo.AEAssessment1();
      //expect(instance).to.be();
    });

    it('should have the property reenrolmentDate (base name: "ReenrolmentDate")', function() {
      // uncomment below and update the code to test the property reenrolmentDate
      //var instance = new PayRunIo.AEAssessment1();
      //expect(instance).to.be();
    });

    it('should have the property statePensionAge (base name: "StatePensionAge")', function() {
      // uncomment below and update the code to test the property statePensionAge
      //var instance = new PayRunIo.AEAssessment1();
      //expect(instance).to.be();
    });

    it('should have the property statePensionDate (base name: "StatePensionDate")', function() {
      // uncomment below and update the code to test the property statePensionDate
      //var instance = new PayRunIo.AEAssessment1();
      //expect(instance).to.be();
    });

    it('should have the property taxPeriod (base name: "TaxPeriod")', function() {
      // uncomment below and update the code to test the property taxPeriod
      //var instance = new PayRunIo.AEAssessment1();
      //expect(instance).to.be();
    });

    it('should have the property taxYear (base name: "TaxYear")', function() {
      // uncomment below and update the code to test the property taxYear
      //var instance = new PayRunIo.AEAssessment1();
      //expect(instance).to.be();
    });

  });

}));
