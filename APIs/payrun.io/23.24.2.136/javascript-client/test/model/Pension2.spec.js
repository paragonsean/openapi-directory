/**
 * PayRun.IO
 * Open, scableable, transparent payroll API.
 *
 * The version of the OpenAPI document: 23.24.2.136
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PayRunIo);
  }
}(this, function(expect, PayRunIo) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PayRunIo.Pension2();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Pension2', function() {
    it('should create an instance of Pension2', function() {
      // uncomment below and update the code to test Pension2
      //var instance = new PayRunIo.Pension2();
      //expect(instance).to.be.a(PayRunIo.Pension2);
    });

    it('should have the property aECompatible (base name: "AECompatible")', function() {
      // uncomment below and update the code to test the property aECompatible
      //var instance = new PayRunIo.Pension2();
      //expect(instance).to.be();
    });

    it('should have the property certification (base name: "Certification")', function() {
      // uncomment below and update the code to test the property certification
      //var instance = new PayRunIo.Pension2();
      //expect(instance).to.be();
    });

    it('should have the property code (base name: "Code")', function() {
      // uncomment below and update the code to test the property code
      //var instance = new PayRunIo.Pension2();
      //expect(instance).to.be();
    });

    it('should have the property contributionDeductionDay (base name: "ContributionDeductionDay")', function() {
      // uncomment below and update the code to test the property contributionDeductionDay
      //var instance = new PayRunIo.Pension2();
      //expect(instance).to.be();
    });

    it('should have the property effectiveDate (base name: "EffectiveDate")', function() {
      // uncomment below and update the code to test the property effectiveDate
      //var instance = new PayRunIo.Pension2();
      //expect(instance).to.be();
    });

    it('should have the property employeeContributionCash (base name: "EmployeeContributionCash")', function() {
      // uncomment below and update the code to test the property employeeContributionCash
      //var instance = new PayRunIo.Pension2();
      //expect(instance).to.be();
    });

    it('should have the property employeeContributionPercent (base name: "EmployeeContributionPercent")', function() {
      // uncomment below and update the code to test the property employeeContributionPercent
      //var instance = new PayRunIo.Pension2();
      //expect(instance).to.be();
    });

    it('should have the property employerContributionCash (base name: "EmployerContributionCash")', function() {
      // uncomment below and update the code to test the property employerContributionCash
      //var instance = new PayRunIo.Pension2();
      //expect(instance).to.be();
    });

    it('should have the property employerContributionPercent (base name: "EmployerContributionPercent")', function() {
      // uncomment below and update the code to test the property employerContributionPercent
      //var instance = new PayRunIo.Pension2();
      //expect(instance).to.be();
    });

    it('should have the property employerNiSaving (base name: "EmployerNiSaving")', function() {
      // uncomment below and update the code to test the property employerNiSaving
      //var instance = new PayRunIo.Pension2();
      //expect(instance).to.be();
    });

    it('should have the property employerNiSavingPercentage (base name: "EmployerNiSavingPercentage")', function() {
      // uncomment below and update the code to test the property employerNiSavingPercentage
      //var instance = new PayRunIo.Pension2();
      //expect(instance).to.be();
    });

    it('should have the property group (base name: "Group")', function() {
      // uncomment below and update the code to test the property group
      //var instance = new PayRunIo.Pension2();
      //expect(instance).to.be();
    });

    it('should have the property lowerThreshold (base name: "LowerThreshold")', function() {
      // uncomment below and update the code to test the property lowerThreshold
      //var instance = new PayRunIo.Pension2();
      //expect(instance).to.be();
    });

    it('should have the property metaData (base name: "MetaData")', function() {
      // uncomment below and update the code to test the property metaData
      //var instance = new PayRunIo.Pension2();
      //expect(instance).to.be();
    });

    it('should have the property nextRevisionDate (base name: "NextRevisionDate")', function() {
      // uncomment below and update the code to test the property nextRevisionDate
      //var instance = new PayRunIo.Pension2();
      //expect(instance).to.be();
    });

    it('should have the property pensionablePayCodes (base name: "PensionablePayCodes")', function() {
      // uncomment below and update the code to test the property pensionablePayCodes
      //var instance = new PayRunIo.Pension2();
      //expect(instance).to.be();
    });

    it('should have the property proRataMethod (base name: "ProRataMethod")', function() {
      // uncomment below and update the code to test the property proRataMethod
      //var instance = new PayRunIo.Pension2();
      //expect(instance).to.be();
    });

    it('should have the property providerEmployerRef (base name: "ProviderEmployerRef")', function() {
      // uncomment below and update the code to test the property providerEmployerRef
      //var instance = new PayRunIo.Pension2();
      //expect(instance).to.be();
    });

    it('should have the property providerName (base name: "ProviderName")', function() {
      // uncomment below and update the code to test the property providerName
      //var instance = new PayRunIo.Pension2();
      //expect(instance).to.be();
    });

    it('should have the property qualifyingPayCodes (base name: "QualifyingPayCodes")', function() {
      // uncomment below and update the code to test the property qualifyingPayCodes
      //var instance = new PayRunIo.Pension2();
      //expect(instance).to.be();
    });

    it('should have the property rasRoundingOverride (base name: "RasRoundingOverride")', function() {
      // uncomment below and update the code to test the property rasRoundingOverride
      //var instance = new PayRunIo.Pension2();
      //expect(instance).to.be();
    });

    it('should have the property revision (base name: "Revision")', function() {
      // uncomment below and update the code to test the property revision
      //var instance = new PayRunIo.Pension2();
      //expect(instance).to.be();
    });

    it('should have the property roundingOption (base name: "RoundingOption")', function() {
      // uncomment below and update the code to test the property roundingOption
      //var instance = new PayRunIo.Pension2();
      //expect(instance).to.be();
    });

    it('should have the property salarySacrifice (base name: "SalarySacrifice")', function() {
      // uncomment below and update the code to test the property salarySacrifice
      //var instance = new PayRunIo.Pension2();
      //expect(instance).to.be();
    });

    it('should have the property schemeName (base name: "SchemeName")', function() {
      // uncomment below and update the code to test the property schemeName
      //var instance = new PayRunIo.Pension2();
      //expect(instance).to.be();
    });

    it('should have the property subGroup (base name: "SubGroup")', function() {
      // uncomment below and update the code to test the property subGroup
      //var instance = new PayRunIo.Pension2();
      //expect(instance).to.be();
    });

    it('should have the property taxationMethod (base name: "TaxationMethod")', function() {
      // uncomment below and update the code to test the property taxationMethod
      //var instance = new PayRunIo.Pension2();
      //expect(instance).to.be();
    });

    it('should have the property upperThreshold (base name: "UpperThreshold")', function() {
      // uncomment below and update the code to test the property upperThreshold
      //var instance = new PayRunIo.Pension2();
      //expect(instance).to.be();
    });

    it('should have the property useAEThresholds (base name: "UseAEThresholds")', function() {
      // uncomment below and update the code to test the property useAEThresholds
      //var instance = new PayRunIo.Pension2();
      //expect(instance).to.be();
    });

  });

}));
