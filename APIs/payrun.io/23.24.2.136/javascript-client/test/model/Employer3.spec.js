/**
 * PayRun.IO
 * Open, scableable, transparent payroll API.
 *
 * The version of the OpenAPI document: 23.24.2.136
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PayRunIo);
  }
}(this, function(expect, PayRunIo) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PayRunIo.Employer3();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Employer3', function() {
    it('should create an instance of Employer3', function() {
      // uncomment below and update the code to test Employer3
      //var instance = new PayRunIo.Employer3();
      //expect(instance).to.be.a(PayRunIo.Employer3);
    });

    it('should have the property address (base name: "Address")', function() {
      // uncomment below and update the code to test the property address
      //var instance = new PayRunIo.Employer3();
      //expect(instance).to.be();
    });

    it('should have the property apprenticeshipLevyAllowance (base name: "ApprenticeshipLevyAllowance")', function() {
      // uncomment below and update the code to test the property apprenticeshipLevyAllowance
      //var instance = new PayRunIo.Employer3();
      //expect(instance).to.be();
    });

    it('should have the property autoEnrolment (base name: "AutoEnrolment")', function() {
      // uncomment below and update the code to test the property autoEnrolment
      //var instance = new PayRunIo.Employer3();
      //expect(instance).to.be();
    });

    it('should have the property bacsServiceUserNumber (base name: "BacsServiceUserNumber")', function() {
      // uncomment below and update the code to test the property bacsServiceUserNumber
      //var instance = new PayRunIo.Employer3();
      //expect(instance).to.be();
    });

    it('should have the property bankAccount (base name: "BankAccount")', function() {
      // uncomment below and update the code to test the property bankAccount
      //var instance = new PayRunIo.Employer3();
      //expect(instance).to.be();
    });

    it('should have the property calculateApprenticeshipLevy (base name: "CalculateApprenticeshipLevy")', function() {
      // uncomment below and update the code to test the property calculateApprenticeshipLevy
      //var instance = new PayRunIo.Employer3();
      //expect(instance).to.be();
    });

    it('should have the property claimEmploymentAllowance (base name: "ClaimEmploymentAllowance")', function() {
      // uncomment below and update the code to test the property claimEmploymentAllowance
      //var instance = new PayRunIo.Employer3();
      //expect(instance).to.be();
    });

    it('should have the property claimSmallEmployerRelief (base name: "ClaimSmallEmployerRelief")', function() {
      // uncomment below and update the code to test the property claimSmallEmployerRelief
      //var instance = new PayRunIo.Employer3();
      //expect(instance).to.be();
    });

    it('should have the property effectiveDate (base name: "EffectiveDate")', function() {
      // uncomment below and update the code to test the property effectiveDate
      //var instance = new PayRunIo.Employer3();
      //expect(instance).to.be();
    });

    it('should have the property hmrcSettings (base name: "HmrcSettings")', function() {
      // uncomment below and update the code to test the property hmrcSettings
      //var instance = new PayRunIo.Employer3();
      //expect(instance).to.be();
    });

    it('should have the property metaData (base name: "MetaData")', function() {
      // uncomment below and update the code to test the property metaData
      //var instance = new PayRunIo.Employer3();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "Name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new PayRunIo.Employer3();
      //expect(instance).to.be();
    });

    it('should have the property nextRevisionDate (base name: "NextRevisionDate")', function() {
      // uncomment below and update the code to test the property nextRevisionDate
      //var instance = new PayRunIo.Employer3();
      //expect(instance).to.be();
    });

    it('should have the property region (base name: "Region")', function() {
      // uncomment below and update the code to test the property region
      //var instance = new PayRunIo.Employer3();
      //expect(instance).to.be();
    });

    it('should have the property revision (base name: "Revision")', function() {
      // uncomment below and update the code to test the property revision
      //var instance = new PayRunIo.Employer3();
      //expect(instance).to.be();
    });

    it('should have the property ruleExclusions (base name: "RuleExclusions")', function() {
      // uncomment below and update the code to test the property ruleExclusions
      //var instance = new PayRunIo.Employer3();
      //expect(instance).to.be();
    });

    it('should have the property territory (base name: "Territory")', function() {
      // uncomment below and update the code to test the property territory
      //var instance = new PayRunIo.Employer3();
      //expect(instance).to.be();
    });

  });

}));
