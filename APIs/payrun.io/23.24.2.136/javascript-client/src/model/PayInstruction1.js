/**
 * PayRun.IO
 * Open, scableable, transparent payroll API.
 *
 * The version of the OpenAPI document: 23.24.2.136
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PayInstruction1 model module.
 * @module model/PayInstruction1
 * @version 23.24.2.136
 */
class PayInstruction1 {
    /**
     * Constructs a new <code>PayInstruction1</code>.
     * @alias module:model/PayInstruction1
     */
    constructor() { 
        
        PayInstruction1.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PayInstruction1</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PayInstruction1} obj Optional instance to populate.
     * @return {module:model/PayInstruction1} The populated <code>PayInstruction1</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PayInstruction1();

            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('EndDate')) {
                obj['EndDate'] = ApiClient.convertToType(data['EndDate'], 'Date');
            }
            if (data.hasOwnProperty('PayLineTag')) {
                obj['PayLineTag'] = ApiClient.convertToType(data['PayLineTag'], 'String');
            }
            if (data.hasOwnProperty('StartDate')) {
                obj['StartDate'] = ApiClient.convertToType(data['StartDate'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PayInstruction1</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PayInstruction1</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Description'] && !(typeof data['Description'] === 'string' || data['Description'] instanceof String)) {
            throw new Error("Expected the field `Description` to be a primitive type in the JSON string but got " + data['Description']);
        }
        // ensure the json data is a string
        if (data['PayLineTag'] && !(typeof data['PayLineTag'] === 'string' || data['PayLineTag'] instanceof String)) {
            throw new Error("Expected the field `PayLineTag` to be a primitive type in the JSON string but got " + data['PayLineTag']);
        }

        return true;
    }


}



/**
 * The pay instructions' description
 * @member {String} Description
 */
PayInstruction1.prototype['Description'] = undefined;

/**
 * The pay instructions' end date
 * @member {Date} EndDate
 */
PayInstruction1.prototype['EndDate'] = undefined;

/**
 * The pay instructions' pay line tag
 * @member {String} PayLineTag
 */
PayInstruction1.prototype['PayLineTag'] = undefined;

/**
 * The pay instructions' start date
 * @member {Date} StartDate
 */
PayInstruction1.prototype['StartDate'] = undefined;






export default PayInstruction1;

