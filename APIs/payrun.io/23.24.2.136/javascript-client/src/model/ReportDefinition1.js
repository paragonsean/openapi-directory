/**
 * PayRun.IO
 * Open, scableable, transparent payroll API.
 *
 * The version of the OpenAPI document: 23.24.2.136
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ReportQuery from './ReportQuery';

/**
 * The ReportDefinition1 model module.
 * @module model/ReportDefinition1
 * @version 23.24.2.136
 */
class ReportDefinition1 {
    /**
     * Constructs a new <code>ReportDefinition1</code>.
     * @alias module:model/ReportDefinition1
     */
    constructor() { 
        
        ReportDefinition1.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReportDefinition1</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReportDefinition1} obj Optional instance to populate.
     * @return {module:model/ReportDefinition1} The populated <code>ReportDefinition1</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReportDefinition1();

            if (data.hasOwnProperty('Active')) {
                obj['Active'] = ApiClient.convertToType(data['Active'], 'Boolean');
            }
            if (data.hasOwnProperty('Readonly')) {
                obj['Readonly'] = ApiClient.convertToType(data['Readonly'], 'Boolean');
            }
            if (data.hasOwnProperty('ReportQuery')) {
                obj['ReportQuery'] = ReportQuery.constructFromObject(data['ReportQuery']);
            }
            if (data.hasOwnProperty('SupportedTransforms')) {
                obj['SupportedTransforms'] = ApiClient.convertToType(data['SupportedTransforms'], 'String');
            }
            if (data.hasOwnProperty('Title')) {
                obj['Title'] = ApiClient.convertToType(data['Title'], 'String');
            }
            if (data.hasOwnProperty('Version')) {
                obj['Version'] = ApiClient.convertToType(data['Version'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReportDefinition1</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReportDefinition1</code>.
     */
    static validateJSON(data) {
        // validate the optional field `ReportQuery`
        if (data['ReportQuery']) { // data not null
          ReportQuery.validateJSON(data['ReportQuery']);
        }
        // ensure the json data is a string
        if (data['SupportedTransforms'] && !(typeof data['SupportedTransforms'] === 'string' || data['SupportedTransforms'] instanceof String)) {
            throw new Error("Expected the field `SupportedTransforms` to be a primitive type in the JSON string but got " + data['SupportedTransforms']);
        }
        // ensure the json data is a string
        if (data['Title'] && !(typeof data['Title'] === 'string' || data['Title'] instanceof String)) {
            throw new Error("Expected the field `Title` to be a primitive type in the JSON string but got " + data['Title']);
        }
        // ensure the json data is a string
        if (data['Version'] && !(typeof data['Version'] === 'string' || data['Version'] instanceof String)) {
            throw new Error("Expected the field `Version` to be a primitive type in the JSON string but got " + data['Version']);
        }

        return true;
    }


}



/**
 * The report definitions' active
 * @member {Boolean} Active
 */
ReportDefinition1.prototype['Active'] = undefined;

/**
 * The report definitions' readonly
 * @member {Boolean} Readonly
 */
ReportDefinition1.prototype['Readonly'] = undefined;

/**
 * @member {module:model/ReportQuery} ReportQuery
 */
ReportDefinition1.prototype['ReportQuery'] = undefined;

/**
 * The report definitions' supported transforms
 * @member {String} SupportedTransforms
 */
ReportDefinition1.prototype['SupportedTransforms'] = undefined;

/**
 * The report definitions' title
 * @member {String} Title
 */
ReportDefinition1.prototype['Title'] = undefined;

/**
 * The report definitions' version
 * @member {String} Version
 */
ReportDefinition1.prototype['Version'] = undefined;






export default ReportDefinition1;

