/**
 * PayRun.IO
 * Open, scableable, transparent payroll API.
 *
 * The version of the OpenAPI document: 23.24.2.136
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OutputInner model module.
 * @module model/OutputInner
 * @version 23.24.2.136
 */
class OutputInner {
    /**
     * Constructs a new <code>OutputInner</code>.
     * @alias module:model/OutputInner
     */
    constructor() { 
        
        OutputInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OutputInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OutputInner} obj Optional instance to populate.
     * @return {module:model/OutputInner} The populated <code>OutputInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OutputInner();

            if (data.hasOwnProperty('@MaxLength')) {
                obj['@MaxLength'] = ApiClient.convertToType(data['@MaxLength'], 'String');
            }
            if (data.hasOwnProperty('@Output')) {
                obj['@Output'] = ApiClient.convertToType(data['@Output'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OutputInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OutputInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['@MaxLength'] && !(typeof data['@MaxLength'] === 'string' || data['@MaxLength'] instanceof String)) {
            throw new Error("Expected the field `@MaxLength` to be a primitive type in the JSON string but got " + data['@MaxLength']);
        }
        // ensure the json data is a string
        if (data['@Output'] && !(typeof data['@Output'] === 'string' || data['@Output'] instanceof String)) {
            throw new Error("Expected the field `@Output` to be a primitive type in the JSON string but got " + data['@Output']);
        }

        return true;
    }


}



/**
 * The output bases' max length
 * @member {String} @MaxLength
 */
OutputInner.prototype['@MaxLength'] = undefined;

/**
 * The output bases' output
 * @member {module:model/OutputInner.OutputEnum} @Output
 */
OutputInner.prototype['@Output'] = undefined;





/**
 * Allowed values for the <code>@Output</code> property.
 * @enum {String}
 * @readonly
 */
OutputInner['OutputEnum'] = {

    /**
     * value: "Element"
     * @const
     */
    "Element": "Element",

    /**
     * value: "Attribute"
     * @const
     */
    "Attribute": "Attribute",

    /**
     * value: "Variable"
     * @const
     */
    "Variable": "Variable",

    /**
     * value: "VariableSum"
     * @const
     */
    "VariableSum": "VariableSum",

    /**
     * value: "VariableAppend"
     * @const
     */
    "VariableAppend": "VariableAppend",

    /**
     * value: "VariablePrepend"
     * @const
     */
    "VariablePrepend": "VariablePrepend",

    /**
     * value: "ElementDatePart"
     * @const
     */
    "ElementDatePart": "ElementDatePart",

    /**
     * value: "InnerText"
     * @const
     */
    "InnerText": "InnerText"
};



export default OutputInner;

