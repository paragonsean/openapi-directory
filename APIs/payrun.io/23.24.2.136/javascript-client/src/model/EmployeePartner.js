/**
 * PayRun.IO
 * Open, scableable, transparent payroll API.
 *
 * The version of the OpenAPI document: 23.24.2.136
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EmployeePartner model module.
 * @module model/EmployeePartner
 * @version 23.24.2.136
 */
class EmployeePartner {
    /**
     * Constructs a new <code>EmployeePartner</code>.
     * The employees&#39; employee partner
     * @alias module:model/EmployeePartner
     */
    constructor() { 
        
        EmployeePartner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EmployeePartner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EmployeePartner} obj Optional instance to populate.
     * @return {module:model/EmployeePartner} The populated <code>EmployeePartner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EmployeePartner();

            if (data.hasOwnProperty('FirstName')) {
                obj['FirstName'] = ApiClient.convertToType(data['FirstName'], 'String');
            }
            if (data.hasOwnProperty('Initials')) {
                obj['Initials'] = ApiClient.convertToType(data['Initials'], 'String');
            }
            if (data.hasOwnProperty('LastName')) {
                obj['LastName'] = ApiClient.convertToType(data['LastName'], 'String');
            }
            if (data.hasOwnProperty('MiddleName')) {
                obj['MiddleName'] = ApiClient.convertToType(data['MiddleName'], 'String');
            }
            if (data.hasOwnProperty('NiNumber')) {
                obj['NiNumber'] = ApiClient.convertToType(data['NiNumber'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EmployeePartner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EmployeePartner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['FirstName'] && !(typeof data['FirstName'] === 'string' || data['FirstName'] instanceof String)) {
            throw new Error("Expected the field `FirstName` to be a primitive type in the JSON string but got " + data['FirstName']);
        }
        // ensure the json data is a string
        if (data['Initials'] && !(typeof data['Initials'] === 'string' || data['Initials'] instanceof String)) {
            throw new Error("Expected the field `Initials` to be a primitive type in the JSON string but got " + data['Initials']);
        }
        // ensure the json data is a string
        if (data['LastName'] && !(typeof data['LastName'] === 'string' || data['LastName'] instanceof String)) {
            throw new Error("Expected the field `LastName` to be a primitive type in the JSON string but got " + data['LastName']);
        }
        // ensure the json data is a string
        if (data['MiddleName'] && !(typeof data['MiddleName'] === 'string' || data['MiddleName'] instanceof String)) {
            throw new Error("Expected the field `MiddleName` to be a primitive type in the JSON string but got " + data['MiddleName']);
        }
        // ensure the json data is a string
        if (data['NiNumber'] && !(typeof data['NiNumber'] === 'string' || data['NiNumber'] instanceof String)) {
            throw new Error("Expected the field `NiNumber` to be a primitive type in the JSON string but got " + data['NiNumber']);
        }

        return true;
    }


}



/**
 * The employee partners' first name
 * @member {String} FirstName
 */
EmployeePartner.prototype['FirstName'] = undefined;

/**
 * The employee partners' initials
 * @member {String} Initials
 */
EmployeePartner.prototype['Initials'] = undefined;

/**
 * The employee partners' last name
 * @member {String} LastName
 */
EmployeePartner.prototype['LastName'] = undefined;

/**
 * The employee partners' middle name
 * @member {String} MiddleName
 */
EmployeePartner.prototype['MiddleName'] = undefined;

/**
 * The employee partners' ni number
 * @member {String} NiNumber
 */
EmployeePartner.prototype['NiNumber'] = undefined;






export default EmployeePartner;

