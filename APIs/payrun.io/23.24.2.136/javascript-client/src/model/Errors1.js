/**
 * PayRun.IO
 * Open, scableable, transparent payroll API.
 *
 * The version of the OpenAPI document: 23.24.2.136
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Errors1 model module.
 * @module model/Errors1
 * @version 23.24.2.136
 */
class Errors1 {
    /**
     * Constructs a new <code>Errors1</code>.
     * The job infos&#39; errors
     * @alias module:model/Errors1
     */
    constructor() { 
        
        Errors1.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Errors1</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Errors1} obj Optional instance to populate.
     * @return {module:model/Errors1} The populated <code>Errors1</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Errors1();

            if (data.hasOwnProperty('Error')) {
                obj['Error'] = ApiClient.convertToType(data['Error'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Errors1</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Errors1</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['Error'])) {
            throw new Error("Expected the field `Error` to be an array in the JSON data but got " + data['Error']);
        }

        return true;
    }


}



/**
 * @member {Array.<String>} Error
 */
Errors1.prototype['Error'] = undefined;






export default Errors1;

