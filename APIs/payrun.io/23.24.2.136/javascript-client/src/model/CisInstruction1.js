/**
 * PayRun.IO
 * Open, scableable, transparent payroll API.
 *
 * The version of the OpenAPI document: 23.24.2.136
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CisInstruction1 model module.
 * @module model/CisInstruction1
 * @version 23.24.2.136
 */
class CisInstruction1 {
    /**
     * Constructs a new <code>CisInstruction1</code>.
     * @alias module:model/CisInstruction1
     */
    constructor() { 
        
        CisInstruction1.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CisInstruction1</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CisInstruction1} obj Optional instance to populate.
     * @return {module:model/CisInstruction1} The populated <code>CisInstruction1</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CisInstruction1();

            if (data.hasOwnProperty('CisLineTag')) {
                obj['CisLineTag'] = ApiClient.convertToType(data['CisLineTag'], 'String');
            }
            if (data.hasOwnProperty('CisLineType')) {
                obj['CisLineType'] = ApiClient.convertToType(data['CisLineType'], 'String');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('PayFrequency')) {
                obj['PayFrequency'] = ApiClient.convertToType(data['PayFrequency'], 'String');
            }
            if (data.hasOwnProperty('PeriodEnd')) {
                obj['PeriodEnd'] = ApiClient.convertToType(data['PeriodEnd'], 'Number');
            }
            if (data.hasOwnProperty('PeriodStart')) {
                obj['PeriodStart'] = ApiClient.convertToType(data['PeriodStart'], 'Number');
            }
            if (data.hasOwnProperty('TaxYearEnd')) {
                obj['TaxYearEnd'] = ApiClient.convertToType(data['TaxYearEnd'], 'Number');
            }
            if (data.hasOwnProperty('TaxYearStart')) {
                obj['TaxYearStart'] = ApiClient.convertToType(data['TaxYearStart'], 'Number');
            }
            if (data.hasOwnProperty('UOM')) {
                obj['UOM'] = ApiClient.convertToType(data['UOM'], 'String');
            }
            if (data.hasOwnProperty('Units')) {
                obj['Units'] = ApiClient.convertToType(data['Units'], 'Number');
            }
            if (data.hasOwnProperty('VAT')) {
                obj['VAT'] = ApiClient.convertToType(data['VAT'], 'Number');
            }
            if (data.hasOwnProperty('Value')) {
                obj['Value'] = ApiClient.convertToType(data['Value'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CisInstruction1</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CisInstruction1</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['CisLineTag'] && !(typeof data['CisLineTag'] === 'string' || data['CisLineTag'] instanceof String)) {
            throw new Error("Expected the field `CisLineTag` to be a primitive type in the JSON string but got " + data['CisLineTag']);
        }
        // ensure the json data is a string
        if (data['CisLineType'] && !(typeof data['CisLineType'] === 'string' || data['CisLineType'] instanceof String)) {
            throw new Error("Expected the field `CisLineType` to be a primitive type in the JSON string but got " + data['CisLineType']);
        }
        // ensure the json data is a string
        if (data['Description'] && !(typeof data['Description'] === 'string' || data['Description'] instanceof String)) {
            throw new Error("Expected the field `Description` to be a primitive type in the JSON string but got " + data['Description']);
        }
        // ensure the json data is a string
        if (data['PayFrequency'] && !(typeof data['PayFrequency'] === 'string' || data['PayFrequency'] instanceof String)) {
            throw new Error("Expected the field `PayFrequency` to be a primitive type in the JSON string but got " + data['PayFrequency']);
        }
        // ensure the json data is a string
        if (data['UOM'] && !(typeof data['UOM'] === 'string' || data['UOM'] instanceof String)) {
            throw new Error("Expected the field `UOM` to be a primitive type in the JSON string but got " + data['UOM']);
        }

        return true;
    }


}



/**
 * The cis instructions' cis line tag
 * @member {String} CisLineTag
 */
CisInstruction1.prototype['CisLineTag'] = undefined;

/**
 * The cis instructions' cis line type
 * @member {String} CisLineType
 */
CisInstruction1.prototype['CisLineType'] = undefined;

/**
 * The cis instructions' description
 * @member {String} Description
 */
CisInstruction1.prototype['Description'] = undefined;

/**
 * The cis instructions' pay frequency
 * @member {module:model/CisInstruction1.PayFrequencyEnum} PayFrequency
 */
CisInstruction1.prototype['PayFrequency'] = undefined;

/**
 * The cis instructions' period end
 * @member {Number} PeriodEnd
 */
CisInstruction1.prototype['PeriodEnd'] = undefined;

/**
 * The cis instructions' period start
 * @member {Number} PeriodStart
 */
CisInstruction1.prototype['PeriodStart'] = undefined;

/**
 * The cis instructions' tax year end
 * @member {Number} TaxYearEnd
 */
CisInstruction1.prototype['TaxYearEnd'] = undefined;

/**
 * The cis instructions' tax year start
 * @member {Number} TaxYearStart
 */
CisInstruction1.prototype['TaxYearStart'] = undefined;

/**
 * The cis instructions' u o m
 * @member {module:model/CisInstruction1.UOMEnum} UOM
 */
CisInstruction1.prototype['UOM'] = undefined;

/**
 * The cis instructions' units
 * @member {Number} Units
 */
CisInstruction1.prototype['Units'] = undefined;

/**
 * The cis instructions' v a t
 * @member {Number} VAT
 */
CisInstruction1.prototype['VAT'] = undefined;

/**
 * The cis instructions' value
 * @member {Number} Value
 */
CisInstruction1.prototype['Value'] = undefined;





/**
 * Allowed values for the <code>PayFrequency</code> property.
 * @enum {String}
 * @readonly
 */
CisInstruction1['PayFrequencyEnum'] = {

    /**
     * value: "Monthly"
     * @const
     */
    "Monthly": "Monthly",

    /**
     * value: "Weekly"
     * @const
     */
    "Weekly": "Weekly"
};


/**
 * Allowed values for the <code>UOM</code> property.
 * @enum {String}
 * @readonly
 */
CisInstruction1['UOMEnum'] = {

    /**
     * value: "NotSet"
     * @const
     */
    "NotSet": "NotSet",

    /**
     * value: "Minute"
     * @const
     */
    "Minute": "Minute",

    /**
     * value: "Hour"
     * @const
     */
    "Hour": "Hour",

    /**
     * value: "Day"
     * @const
     */
    "Day": "Day",

    /**
     * value: "Week"
     * @const
     */
    "Week": "Week",

    /**
     * value: "Month"
     * @const
     */
    "Month": "Month",

    /**
     * value: "Year"
     * @const
     */
    "Year": "Year",

    /**
     * value: "Unit"
     * @const
     */
    "Unit": "Unit"
};



export default CisInstruction1;

