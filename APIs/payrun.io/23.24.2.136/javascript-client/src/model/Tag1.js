/**
 * PayRun.IO
 * Open, scableable, transparent payroll API.
 *
 * The version of the OpenAPI document: 23.24.2.136
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TaggedItem from './TaggedItem';

/**
 * The Tag1 model module.
 * @module model/Tag1
 * @version 23.24.2.136
 */
class Tag1 {
    /**
     * Constructs a new <code>Tag1</code>.
     * @alias module:model/Tag1
     */
    constructor() { 
        
        Tag1.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Tag1</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Tag1} obj Optional instance to populate.
     * @return {module:model/Tag1} The populated <code>Tag1</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Tag1();

            if (data.hasOwnProperty('Created')) {
                obj['Created'] = ApiClient.convertToType(data['Created'], 'Date');
            }
            if (data.hasOwnProperty('TaggedItem')) {
                obj['TaggedItem'] = TaggedItem.constructFromObject(data['TaggedItem']);
            }
            if (data.hasOwnProperty('Text')) {
                obj['Text'] = ApiClient.convertToType(data['Text'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Tag1</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Tag1</code>.
     */
    static validateJSON(data) {
        // validate the optional field `TaggedItem`
        if (data['TaggedItem']) { // data not null
          TaggedItem.validateJSON(data['TaggedItem']);
        }
        // ensure the json data is a string
        if (data['Text'] && !(typeof data['Text'] === 'string' || data['Text'] instanceof String)) {
            throw new Error("Expected the field `Text` to be a primitive type in the JSON string but got " + data['Text']);
        }

        return true;
    }


}



/**
 * The tags' created
 * @member {Date} Created
 */
Tag1.prototype['Created'] = undefined;

/**
 * @member {module:model/TaggedItem} TaggedItem
 */
Tag1.prototype['TaggedItem'] = undefined;

/**
 * The tags' text
 * @member {String} Text
 */
Tag1.prototype['Text'] = undefined;






export default Tag1;

