/**
 * PayRun.IO
 * Open, scableable, transparent payroll API.
 *
 * The version of the OpenAPI document: 23.24.2.136
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ThirdPartyJobInstruction1 model module.
 * @module model/ThirdPartyJobInstruction1
 * @version 23.24.2.136
 */
class ThirdPartyJobInstruction1 {
    /**
     * Constructs a new <code>ThirdPartyJobInstruction1</code>.
     * @alias module:model/ThirdPartyJobInstruction1
     */
    constructor() { 
        
        ThirdPartyJobInstruction1.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ThirdPartyJobInstruction1</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ThirdPartyJobInstruction1} obj Optional instance to populate.
     * @return {module:model/ThirdPartyJobInstruction1} The populated <code>ThirdPartyJobInstruction1</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ThirdPartyJobInstruction1();

            if (data.hasOwnProperty('EmployerHref')) {
                obj['EmployerHref'] = ApiClient.convertToType(data['EmployerHref'], 'String');
            }
            if (data.hasOwnProperty('HoldingDate')) {
                obj['HoldingDate'] = ApiClient.convertToType(data['HoldingDate'], 'Date');
            }
            if (data.hasOwnProperty('InstructionType')) {
                obj['InstructionType'] = ApiClient.convertToType(data['InstructionType'], 'String');
            }
            if (data.hasOwnProperty('MetaData')) {
                obj['MetaData'] = ApiClient.convertToType(data['MetaData'], Object);
            }
            if (data.hasOwnProperty('PayLoad')) {
                obj['PayLoad'] = ApiClient.convertToType(data['PayLoad'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ThirdPartyJobInstruction1</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ThirdPartyJobInstruction1</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['EmployerHref'] && !(typeof data['EmployerHref'] === 'string' || data['EmployerHref'] instanceof String)) {
            throw new Error("Expected the field `EmployerHref` to be a primitive type in the JSON string but got " + data['EmployerHref']);
        }
        // ensure the json data is a string
        if (data['InstructionType'] && !(typeof data['InstructionType'] === 'string' || data['InstructionType'] instanceof String)) {
            throw new Error("Expected the field `InstructionType` to be a primitive type in the JSON string but got " + data['InstructionType']);
        }
        // ensure the json data is a string
        if (data['PayLoad'] && !(typeof data['PayLoad'] === 'string' || data['PayLoad'] instanceof String)) {
            throw new Error("Expected the field `PayLoad` to be a primitive type in the JSON string but got " + data['PayLoad']);
        }

        return true;
    }


}



/**
 * The third party job instructions' employer href
 * @member {String} EmployerHref
 */
ThirdPartyJobInstruction1.prototype['EmployerHref'] = undefined;

/**
 * The third party job instructions' holding date
 * @member {Date} HoldingDate
 */
ThirdPartyJobInstruction1.prototype['HoldingDate'] = undefined;

/**
 * The third party job instructions' instruction type
 * @member {String} InstructionType
 */
ThirdPartyJobInstruction1.prototype['InstructionType'] = undefined;

/**
 * The third party job instructions' meta data
 * @member {Object} MetaData
 */
ThirdPartyJobInstruction1.prototype['MetaData'] = undefined;

/**
 * The third party job instructions' pay load
 * @member {String} PayLoad
 */
ThirdPartyJobInstruction1.prototype['PayLoad'] = undefined;






export default ThirdPartyJobInstruction1;

