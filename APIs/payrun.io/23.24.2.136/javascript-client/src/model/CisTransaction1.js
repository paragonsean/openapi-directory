/**
 * PayRun.IO
 * Open, scableable, transparent payroll API.
 *
 * The version of the OpenAPI document: 23.24.2.136
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EmployerCore from './EmployerCore';

/**
 * The CisTransaction1 model module.
 * @module model/CisTransaction1
 * @version 23.24.2.136
 */
class CisTransaction1 {
    /**
     * Constructs a new <code>CisTransaction1</code>.
     * @alias module:model/CisTransaction1
     */
    constructor() { 
        
        CisTransaction1.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CisTransaction1</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CisTransaction1} obj Optional instance to populate.
     * @return {module:model/CisTransaction1} The populated <code>CisTransaction1</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CisTransaction1();

            if (data.hasOwnProperty('CisMessageType')) {
                obj['CisMessageType'] = ApiClient.convertToType(data['CisMessageType'], 'String');
            }
            if (data.hasOwnProperty('EmployerCore')) {
                obj['EmployerCore'] = EmployerCore.constructFromObject(data['EmployerCore']);
            }
            if (data.hasOwnProperty('RequestData')) {
                obj['RequestData'] = ApiClient.convertToType(data['RequestData'], 'String');
            }
            if (data.hasOwnProperty('ResponseData')) {
                obj['ResponseData'] = ApiClient.convertToType(data['ResponseData'], 'String');
            }
            if (data.hasOwnProperty('TaxYear')) {
                obj['TaxYear'] = ApiClient.convertToType(data['TaxYear'], 'Number');
            }
            if (data.hasOwnProperty('Timestamp')) {
                obj['Timestamp'] = ApiClient.convertToType(data['Timestamp'], 'Date');
            }
            if (data.hasOwnProperty('TransactionStatus')) {
                obj['TransactionStatus'] = ApiClient.convertToType(data['TransactionStatus'], 'String');
            }
            if (data.hasOwnProperty('TransmissionDate')) {
                obj['TransmissionDate'] = ApiClient.convertToType(data['TransmissionDate'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CisTransaction1</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CisTransaction1</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['CisMessageType'] && !(typeof data['CisMessageType'] === 'string' || data['CisMessageType'] instanceof String)) {
            throw new Error("Expected the field `CisMessageType` to be a primitive type in the JSON string but got " + data['CisMessageType']);
        }
        // validate the optional field `EmployerCore`
        if (data['EmployerCore']) { // data not null
          EmployerCore.validateJSON(data['EmployerCore']);
        }
        // ensure the json data is a string
        if (data['RequestData'] && !(typeof data['RequestData'] === 'string' || data['RequestData'] instanceof String)) {
            throw new Error("Expected the field `RequestData` to be a primitive type in the JSON string but got " + data['RequestData']);
        }
        // ensure the json data is a string
        if (data['ResponseData'] && !(typeof data['ResponseData'] === 'string' || data['ResponseData'] instanceof String)) {
            throw new Error("Expected the field `ResponseData` to be a primitive type in the JSON string but got " + data['ResponseData']);
        }
        // ensure the json data is a string
        if (data['TransactionStatus'] && !(typeof data['TransactionStatus'] === 'string' || data['TransactionStatus'] instanceof String)) {
            throw new Error("Expected the field `TransactionStatus` to be a primitive type in the JSON string but got " + data['TransactionStatus']);
        }

        return true;
    }


}



/**
 * The cis transactions' cis message type
 * @member {module:model/CisTransaction1.CisMessageTypeEnum} CisMessageType
 */
CisTransaction1.prototype['CisMessageType'] = undefined;

/**
 * @member {module:model/EmployerCore} EmployerCore
 */
CisTransaction1.prototype['EmployerCore'] = undefined;

/**
 * The cis transactions' request data
 * @member {String} RequestData
 */
CisTransaction1.prototype['RequestData'] = undefined;

/**
 * The cis transactions' response data
 * @member {String} ResponseData
 */
CisTransaction1.prototype['ResponseData'] = undefined;

/**
 * The cis transactions' tax year
 * @member {Number} TaxYear
 */
CisTransaction1.prototype['TaxYear'] = undefined;

/**
 * The cis transactions' timestamp
 * @member {Date} Timestamp
 */
CisTransaction1.prototype['Timestamp'] = undefined;

/**
 * The cis transactions' transaction status
 * @member {module:model/CisTransaction1.TransactionStatusEnum} TransactionStatus
 */
CisTransaction1.prototype['TransactionStatus'] = undefined;

/**
 * The cis transactions' transmission date
 * @member {Date} TransmissionDate
 */
CisTransaction1.prototype['TransmissionDate'] = undefined;





/**
 * Allowed values for the <code>CisMessageType</code> property.
 * @enum {String}
 * @readonly
 */
CisTransaction1['CisMessageTypeEnum'] = {

    /**
     * value: "Verification"
     * @const
     */
    "Verification": "Verification",

    /**
     * value: "Return"
     * @const
     */
    "Return": "Return"
};


/**
 * Allowed values for the <code>TransactionStatus</code> property.
 * @enum {String}
 * @readonly
 */
CisTransaction1['TransactionStatusEnum'] = {

    /**
     * value: "New"
     * @const
     */
    "New": "New",

    /**
     * value: "RequestGenerated"
     * @const
     */
    "RequestGenerated": "RequestGenerated",

    /**
     * value: "CompletedWithError"
     * @const
     */
    "CompletedWithError": "CompletedWithError",

    /**
     * value: "CompletedWithSuccess"
     * @const
     */
    "CompletedWithSuccess": "CompletedWithSuccess",

    /**
     * value: "TimeOut"
     * @const
     */
    "TimeOut": "TimeOut"
};



export default CisTransaction1;

