/**
 * PayRun.IO
 * Open, scableable, transparent payroll API.
 *
 * The version of the OpenAPI document: 23.24.2.136
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorModel from '../model/ErrorModel';
import Link from '../model/Link';
import LinkCollection from '../model/LinkCollection';
import NominalCode from '../model/NominalCode';

/**
* NominalCode service.
* @module api/NominalCodeApi
* @version 23.24.2.136
*/
export default class NominalCodeApi {

    /**
    * Constructs a new NominalCodeApi. 
    * @alias module:api/NominalCodeApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the deleteNominalCode operation.
     * @callback module:api/NominalCodeApi~deleteNominalCodeCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the nominal codes
     * Deletes the nominal code
     * @param {String} employerId The employers' unique identifier. E.g ER001
     * @param {String} nominalCodeId The nominal code unique identifier. E.g. NOM001
     * @param {String} authorization The OAuth 1 authorization header. &apos;Auto&apos; enables auto complete.
     * @param {String} apiVersion The version of the api to target. Omit or set as &apos;default&apos; to target the current api version.
     * @param {module:api/NominalCodeApi~deleteNominalCodeCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteNominalCode(employerId, nominalCodeId, authorization, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'employerId' is set
      if (employerId === undefined || employerId === null) {
        throw new Error("Missing the required parameter 'employerId' when calling deleteNominalCode");
      }
      // verify the required parameter 'nominalCodeId' is set
      if (nominalCodeId === undefined || nominalCodeId === null) {
        throw new Error("Missing the required parameter 'nominalCodeId' when calling deleteNominalCode");
      }
      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling deleteNominalCode");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling deleteNominalCode");
      }

      let pathParams = {
        'EmployerId': employerId,
        'NominalCodeId': nominalCodeId
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': authorization,
        'Api-Version': apiVersion
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/Employer/{EmployerId}/NominalCode/{NominalCodeId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNominalCodeFromEmployer operation.
     * @callback module:api/NominalCodeApi~getNominalCodeFromEmployerCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NominalCode} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the nominal code
     * Gets the nominal code
     * @param {String} employerId The employers' unique identifier. E.g ER001
     * @param {String} nominalCodeId The nominal code unique identifier. E.g. NOM001
     * @param {String} authorization The OAuth 1 authorization header. &apos;Auto&apos; enables auto complete.
     * @param {String} apiVersion The version of the api to target. Omit or set as &apos;default&apos; to target the current api version.
     * @param {module:api/NominalCodeApi~getNominalCodeFromEmployerCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NominalCode}
     */
    getNominalCodeFromEmployer(employerId, nominalCodeId, authorization, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'employerId' is set
      if (employerId === undefined || employerId === null) {
        throw new Error("Missing the required parameter 'employerId' when calling getNominalCodeFromEmployer");
      }
      // verify the required parameter 'nominalCodeId' is set
      if (nominalCodeId === undefined || nominalCodeId === null) {
        throw new Error("Missing the required parameter 'nominalCodeId' when calling getNominalCodeFromEmployer");
      }
      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling getNominalCodeFromEmployer");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling getNominalCodeFromEmployer");
      }

      let pathParams = {
        'EmployerId': employerId,
        'NominalCodeId': nominalCodeId
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': authorization,
        'Api-Version': apiVersion
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = NominalCode;
      return this.apiClient.callApi(
        '/Employer/{EmployerId}/NominalCode/{NominalCodeId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNominalCodesFromEmployer operation.
     * @callback module:api/NominalCodeApi~getNominalCodesFromEmployerCallback
     * @param {String} error Error message, if any.
     * @param {module:model/LinkCollection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the nominal codes
     * Gets the nominal code links
     * @param {String} employerId The employers' unique identifier. E.g ER001
     * @param {String} authorization The OAuth 1 authorization header. &apos;Auto&apos; enables auto complete.
     * @param {String} apiVersion The version of the api to target. Omit or set as &apos;default&apos; to target the current api version.
     * @param {module:api/NominalCodeApi~getNominalCodesFromEmployerCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/LinkCollection}
     */
    getNominalCodesFromEmployer(employerId, authorization, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'employerId' is set
      if (employerId === undefined || employerId === null) {
        throw new Error("Missing the required parameter 'employerId' when calling getNominalCodesFromEmployer");
      }
      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling getNominalCodesFromEmployer");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling getNominalCodesFromEmployer");
      }

      let pathParams = {
        'EmployerId': employerId
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': authorization,
        'Api-Version': apiVersion
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = LinkCollection;
      return this.apiClient.callApi(
        '/Employer/{EmployerId}/NominalCodes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postNominalCode operation.
     * @callback module:api/NominalCodeApi~postNominalCodeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Link} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Insert nominal code
     * Inserts a new nominal code
     * @param {String} employerId The employers' unique identifier. E.g ER001
     * @param {String} authorization The OAuth 1 authorization header. &apos;Auto&apos; enables auto complete.
     * @param {String} apiVersion The version of the api to target. Omit or set as &apos;default&apos; to target the current api version.
     * @param {module:model/NominalCode} nominalCode The nominal code object.
     * @param {module:api/NominalCodeApi~postNominalCodeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Link}
     */
    postNominalCode(employerId, authorization, apiVersion, nominalCode, callback) {
      let postBody = nominalCode;
      // verify the required parameter 'employerId' is set
      if (employerId === undefined || employerId === null) {
        throw new Error("Missing the required parameter 'employerId' when calling postNominalCode");
      }
      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling postNominalCode");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling postNominalCode");
      }
      // verify the required parameter 'nominalCode' is set
      if (nominalCode === undefined || nominalCode === null) {
        throw new Error("Missing the required parameter 'nominalCode' when calling postNominalCode");
      }

      let pathParams = {
        'EmployerId': employerId
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': authorization,
        'Api-Version': apiVersion
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Link;
      return this.apiClient.callApi(
        '/Employer/{EmployerId}/NominalCodes', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the putNominalCode operation.
     * @callback module:api/NominalCodeApi~putNominalCodeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NominalCode} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Insert nominal code
     * Inserts a new nominal code at the specified resource location
     * @param {String} employerId The employers' unique identifier. E.g ER001
     * @param {String} nominalCodeId The nominal code unique identifier. E.g. NOM001
     * @param {String} authorization The OAuth 1 authorization header. &apos;Auto&apos; enables auto complete.
     * @param {String} apiVersion The version of the api to target. Omit or set as &apos;default&apos; to target the current api version.
     * @param {module:model/NominalCode} nominalCode The nominal code object.
     * @param {module:api/NominalCodeApi~putNominalCodeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NominalCode}
     */
    putNominalCode(employerId, nominalCodeId, authorization, apiVersion, nominalCode, callback) {
      let postBody = nominalCode;
      // verify the required parameter 'employerId' is set
      if (employerId === undefined || employerId === null) {
        throw new Error("Missing the required parameter 'employerId' when calling putNominalCode");
      }
      // verify the required parameter 'nominalCodeId' is set
      if (nominalCodeId === undefined || nominalCodeId === null) {
        throw new Error("Missing the required parameter 'nominalCodeId' when calling putNominalCode");
      }
      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling putNominalCode");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling putNominalCode");
      }
      // verify the required parameter 'nominalCode' is set
      if (nominalCode === undefined || nominalCode === null) {
        throw new Error("Missing the required parameter 'nominalCode' when calling putNominalCode");
      }

      let pathParams = {
        'EmployerId': employerId,
        'NominalCodeId': nominalCodeId
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': authorization,
        'Api-Version': apiVersion
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = NominalCode;
      return this.apiClient.callApi(
        '/Employer/{EmployerId}/NominalCode/{NominalCodeId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
