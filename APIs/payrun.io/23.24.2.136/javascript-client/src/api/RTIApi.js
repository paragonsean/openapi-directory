/**
 * PayRun.IO
 * Open, scableable, transparent payroll API.
 *
 * The version of the OpenAPI document: 23.24.2.136
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorModel from '../model/ErrorModel';
import LinkCollection from '../model/LinkCollection';
import RtiTransactionBase from '../model/RtiTransactionBase';

/**
* RTI service.
* @module api/RTIApi
* @version 23.24.2.136
*/
export default class RTIApi {

    /**
    * Constructs a new RTIApi. 
    * @alias module:api/RTIApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the deleteRtiTransaction operation.
     * @callback module:api/RTIApi~deleteRtiTransactionCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete the RTI transaction
     * Deletes the specified RTI transaction
     * @param {String} employerId The employers' unique identifier. E.g ER001
     * @param {String} rtiTransactionId The RTI transaction unique identifier. E.g. FPS001
     * @param {String} authorization The OAuth 1 authorization header. &apos;Auto&apos; enables auto complete.
     * @param {String} apiVersion The version of the api to target. Omit or set as &apos;default&apos; to target the current api version.
     * @param {module:api/RTIApi~deleteRtiTransactionCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteRtiTransaction(employerId, rtiTransactionId, authorization, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'employerId' is set
      if (employerId === undefined || employerId === null) {
        throw new Error("Missing the required parameter 'employerId' when calling deleteRtiTransaction");
      }
      // verify the required parameter 'rtiTransactionId' is set
      if (rtiTransactionId === undefined || rtiTransactionId === null) {
        throw new Error("Missing the required parameter 'rtiTransactionId' when calling deleteRtiTransaction");
      }
      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling deleteRtiTransaction");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling deleteRtiTransaction");
      }

      let pathParams = {
        'EmployerId': employerId,
        'RtiTransactionId': rtiTransactionId
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': authorization,
        'Api-Version': apiVersion
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/Employer/{EmployerId}/RtiTransaction/{RtiTransactionId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAllRtiTransactionTags_0 operation.
     * @callback module:api/RTIApi~getAllRtiTransactionTags_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/LinkCollection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all RTI transaction tags
     * Gets all the RTI transaction tags
     * @param {String} employerId The employers' unique identifier. E.g ER001
     * @param {String} authorization The OAuth 1 authorization header. &apos;Auto&apos; enables auto complete.
     * @param {String} apiVersion The version of the api to target. Omit or set as &apos;default&apos; to target the current api version.
     * @param {module:api/RTIApi~getAllRtiTransactionTags_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/LinkCollection}
     */
    getAllRtiTransactionTags_0(employerId, authorization, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'employerId' is set
      if (employerId === undefined || employerId === null) {
        throw new Error("Missing the required parameter 'employerId' when calling getAllRtiTransactionTags_0");
      }
      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling getAllRtiTransactionTags_0");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling getAllRtiTransactionTags_0");
      }

      let pathParams = {
        'EmployerId': employerId
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': authorization,
        'Api-Version': apiVersion
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = LinkCollection;
      return this.apiClient.callApi(
        '/Employer/{EmployerId}/RtiTransactions/Tags', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getRtiTransactionFromEmployer operation.
     * @callback module:api/RTIApi~getRtiTransactionFromEmployerCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RtiTransactionBase} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the RTI transaction
     * Returns the specified RTI transaction
     * @param {String} employerId The employers' unique identifier. E.g ER001
     * @param {String} rtiTransactionId The RTI transaction unique identifier. E.g. FPS001
     * @param {String} authorization The OAuth 1 authorization header. &apos;Auto&apos; enables auto complete.
     * @param {String} apiVersion The version of the api to target. Omit or set as &apos;default&apos; to target the current api version.
     * @param {module:api/RTIApi~getRtiTransactionFromEmployerCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RtiTransactionBase}
     */
    getRtiTransactionFromEmployer(employerId, rtiTransactionId, authorization, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'employerId' is set
      if (employerId === undefined || employerId === null) {
        throw new Error("Missing the required parameter 'employerId' when calling getRtiTransactionFromEmployer");
      }
      // verify the required parameter 'rtiTransactionId' is set
      if (rtiTransactionId === undefined || rtiTransactionId === null) {
        throw new Error("Missing the required parameter 'rtiTransactionId' when calling getRtiTransactionFromEmployer");
      }
      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling getRtiTransactionFromEmployer");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling getRtiTransactionFromEmployer");
      }

      let pathParams = {
        'EmployerId': employerId,
        'RtiTransactionId': rtiTransactionId
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': authorization,
        'Api-Version': apiVersion
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = RtiTransactionBase;
      return this.apiClient.callApi(
        '/Employer/{EmployerId}/RtiTransaction/{RtiTransactionId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getRtiTransactionSummariesFromEmployer operation.
     * @callback module:api/RTIApi~getRtiTransactionSummariesFromEmployerCallback
     * @param {String} error Error message, if any.
     * @param {module:model/LinkCollection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all RTI transaction summaries for the employer
     * Get links for all RTI transaction summaries for the specified employer
     * @param {String} employerId The employers' unique identifier. E.g ER001
     * @param {String} authorization The OAuth 1 authorization header. &apos;Auto&apos; enables auto complete.
     * @param {String} apiVersion The version of the api to target. Omit or set as &apos;default&apos; to target the current api version.
     * @param {module:api/RTIApi~getRtiTransactionSummariesFromEmployerCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/LinkCollection}
     */
    getRtiTransactionSummariesFromEmployer(employerId, authorization, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'employerId' is set
      if (employerId === undefined || employerId === null) {
        throw new Error("Missing the required parameter 'employerId' when calling getRtiTransactionSummariesFromEmployer");
      }
      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling getRtiTransactionSummariesFromEmployer");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling getRtiTransactionSummariesFromEmployer");
      }

      let pathParams = {
        'EmployerId': employerId
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': authorization,
        'Api-Version': apiVersion
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = LinkCollection;
      return this.apiClient.callApi(
        '/Employer/{EmployerId}/RtiTransactions/Summary', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getRtiTransactionSummaryFromEmployer operation.
     * @callback module:api/RTIApi~getRtiTransactionSummaryFromEmployerCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RtiTransactionBase} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the RTI transaction summary
     * Returns the specified RTI transaction summary data excluding some poroperties
     * @param {String} employerId The employers' unique identifier. E.g ER001
     * @param {String} rtiTransactionId The RTI transaction unique identifier. E.g. FPS001
     * @param {String} authorization The OAuth 1 authorization header. &apos;Auto&apos; enables auto complete.
     * @param {String} apiVersion The version of the api to target. Omit or set as &apos;default&apos; to target the current api version.
     * @param {module:api/RTIApi~getRtiTransactionSummaryFromEmployerCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RtiTransactionBase}
     */
    getRtiTransactionSummaryFromEmployer(employerId, rtiTransactionId, authorization, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'employerId' is set
      if (employerId === undefined || employerId === null) {
        throw new Error("Missing the required parameter 'employerId' when calling getRtiTransactionSummaryFromEmployer");
      }
      // verify the required parameter 'rtiTransactionId' is set
      if (rtiTransactionId === undefined || rtiTransactionId === null) {
        throw new Error("Missing the required parameter 'rtiTransactionId' when calling getRtiTransactionSummaryFromEmployer");
      }
      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling getRtiTransactionSummaryFromEmployer");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling getRtiTransactionSummaryFromEmployer");
      }

      let pathParams = {
        'EmployerId': employerId,
        'RtiTransactionId': rtiTransactionId
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': authorization,
        'Api-Version': apiVersion
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = RtiTransactionBase;
      return this.apiClient.callApi(
        '/Employer/{EmployerId}/RtiTransaction/{RtiTransactionId}/Summary', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getRtiTransactionsFromEmployer operation.
     * @callback module:api/RTIApi~getRtiTransactionsFromEmployerCallback
     * @param {String} error Error message, if any.
     * @param {module:model/LinkCollection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all RTI transactions for the employer
     * Get links for all RTI transactions for the specified employer
     * @param {String} employerId The employers' unique identifier. E.g ER001
     * @param {String} authorization The OAuth 1 authorization header. &apos;Auto&apos; enables auto complete.
     * @param {String} apiVersion The version of the api to target. Omit or set as &apos;default&apos; to target the current api version.
     * @param {module:api/RTIApi~getRtiTransactionsFromEmployerCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/LinkCollection}
     */
    getRtiTransactionsFromEmployer(employerId, authorization, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'employerId' is set
      if (employerId === undefined || employerId === null) {
        throw new Error("Missing the required parameter 'employerId' when calling getRtiTransactionsFromEmployer");
      }
      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling getRtiTransactionsFromEmployer");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling getRtiTransactionsFromEmployer");
      }

      let pathParams = {
        'EmployerId': employerId
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': authorization,
        'Api-Version': apiVersion
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = LinkCollection;
      return this.apiClient.callApi(
        '/Employer/{EmployerId}/RtiTransactions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getRtiTransactionsWithTag_0 operation.
     * @callback module:api/RTIApi~getRtiTransactionsWithTag_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/LinkCollection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get RTI transactions with tag
     * Gets the RTI transactions with the tag
     * @param {String} employerId The employers' unique identifier. E.g ER001
     * @param {String} tagId The tag unique identifier. E.g. MyTag
     * @param {String} authorization The OAuth 1 authorization header. &apos;Auto&apos; enables auto complete.
     * @param {String} apiVersion The version of the api to target. Omit or set as &apos;default&apos; to target the current api version.
     * @param {module:api/RTIApi~getRtiTransactionsWithTag_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/LinkCollection}
     */
    getRtiTransactionsWithTag_0(employerId, tagId, authorization, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'employerId' is set
      if (employerId === undefined || employerId === null) {
        throw new Error("Missing the required parameter 'employerId' when calling getRtiTransactionsWithTag_0");
      }
      // verify the required parameter 'tagId' is set
      if (tagId === undefined || tagId === null) {
        throw new Error("Missing the required parameter 'tagId' when calling getRtiTransactionsWithTag_0");
      }
      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling getRtiTransactionsWithTag_0");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling getRtiTransactionsWithTag_0");
      }

      let pathParams = {
        'EmployerId': employerId,
        'TagId': tagId
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': authorization,
        'Api-Version': apiVersion
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = LinkCollection;
      return this.apiClient.callApi(
        '/Employer/{EmployerId}/RtiTransactions/Tag/{TagId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
