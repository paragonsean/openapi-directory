/*
 * PayRun.IO
 * Open, scableable, transparent payroll API.
 *
 * The version of the OpenAPI document: 23.24.2.136
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ErrorModel;
import org.openapitools.client.model.LinkCollection;
import org.openapitools.client.model.Tag;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ThirdPartyTransactionApi
 */
@Disabled
public class ThirdPartyTransactionApiTest {

    private final ThirdPartyTransactionApi api = new ThirdPartyTransactionApi();

    /**
     * Delete third party transaction tag
     *
     * Deletes a tag from the third party transaction
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteThirdPartyTransactionTag_0Test() throws ApiException {
        String employerId = null;
        String thirdPartyTransactionId = null;
        String tagId = null;
        String authorization = null;
        String apiVersion = null;
        api.deleteThirdPartyTransactionTag_0(employerId, thirdPartyTransactionId, tagId, authorization, apiVersion);
        // TODO: test validations
    }

    /**
     * Get all third party transaction tags
     *
     * Gets all the third party transaction tags
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllThirdPartyTransactionTags_0Test() throws ApiException {
        String employerId = null;
        String authorization = null;
        String apiVersion = null;
        LinkCollection response = api.getAllThirdPartyTransactionTags_0(employerId, authorization, apiVersion);
        // TODO: test validations
    }

    /**
     * Get links to tagged third party transactions
     *
     * Gets the third party transactions with the specified tag
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllThirdPartyTransactionsWithTag_0Test() throws ApiException {
        String employerId = null;
        String tagId = null;
        String authorization = null;
        String apiVersion = null;
        LinkCollection response = api.getAllThirdPartyTransactionsWithTag_0(employerId, tagId, authorization, apiVersion);
        // TODO: test validations
    }

    /**
     * Get third party transaction tag
     *
     * Gets a tag from the third party transaction
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTagFromThirdPartyTransaction_0Test() throws ApiException {
        String employerId = null;
        String thirdPartyTransactionId = null;
        String tagId = null;
        String authorization = null;
        String apiVersion = null;
        Tag response = api.getTagFromThirdPartyTransaction_0(employerId, thirdPartyTransactionId, tagId, authorization, apiVersion);
        // TODO: test validations
    }

    /**
     * Get tags from third party transaction
     *
     * Gets all tags from the third party transaction
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTagsFromThirdPartyTransaction_0Test() throws ApiException {
        String employerId = null;
        String thirdPartyTransactionId = null;
        String authorization = null;
        String apiVersion = null;
        LinkCollection response = api.getTagsFromThirdPartyTransaction_0(employerId, thirdPartyTransactionId, authorization, apiVersion);
        // TODO: test validations
    }

    /**
     * insert third party transaction tag
     *
     * Inserts a tag on the third party transaction
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putThirdPartyTransactionTag_0Test() throws ApiException {
        String employerId = null;
        String thirdPartyTransactionId = null;
        String tagId = null;
        String authorization = null;
        String apiVersion = null;
        Tag response = api.putThirdPartyTransactionTag_0(employerId, thirdPartyTransactionId, tagId, authorization, apiVersion);
        // TODO: test validations
    }

}
