/*
 * PayRun.IO
 * Open, scableable, transparent payroll API.
 *
 * The version of the OpenAPI document: 23.24.2.136
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApplicationSecret;
import org.openapitools.client.model.ErrorModel;
import org.openapitools.client.model.Link;
import org.openapitools.client.model.LinkCollection;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ApplicationApi
 */
@Disabled
public class ApplicationApiTest {

    private final ApplicationApi api = new ApplicationApi();

    /**
     * Deletes Application secret
     *
     * Deletes an Application secret from the given resource location
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteApplicationSecretTest() throws ApiException {
        String secretId = null;
        String authorization = null;
        String apiVersion = null;
        api.deleteApplicationSecret(secretId, authorization, apiVersion);
        // TODO: test validations
    }

    /**
     * Get Application secret
     *
     * Get the public visible Application secret object
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getApplicationSecretTest() throws ApiException {
        String secretId = null;
        String authorization = null;
        String apiVersion = null;
        ApplicationSecret response = api.getApplicationSecret(secretId, authorization, apiVersion);
        // TODO: test validations
    }

    /**
     * Get all Application secret links
     *
     * Get all the Application secret links
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getApplicationSecretsTest() throws ApiException {
        String authorization = null;
        String apiVersion = null;
        LinkCollection response = api.getApplicationSecrets(authorization, apiVersion);
        // TODO: test validations
    }

    /**
     * Create a new Application secret
     *
     * Create new Application secret using auto generated resource location key
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postApplicationSecretTest() throws ApiException {
        String authorization = null;
        String apiVersion = null;
        Link response = api.postApplicationSecret(authorization, apiVersion);
        // TODO: test validations
    }

    /**
     * Create a new Application secret
     *
     * Create / update an Application secret at the given resource location
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putApplicationSecretTest() throws ApiException {
        String secretId = null;
        String authorization = null;
        String apiVersion = null;
        ApplicationSecret response = api.putApplicationSecret(secretId, authorization, apiVersion);
        // TODO: test validations
    }

}
