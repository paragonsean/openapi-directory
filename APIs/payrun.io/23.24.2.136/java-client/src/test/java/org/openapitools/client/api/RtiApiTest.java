/*
 * PayRun.IO
 * Open, scableable, transparent payroll API.
 *
 * The version of the OpenAPI document: 23.24.2.136
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ErrorModel;
import org.openapitools.client.model.LinkCollection;
import org.openapitools.client.model.RtiTransactionBase;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RtiApi
 */
@Disabled
public class RtiApiTest {

    private final RtiApi api = new RtiApi();

    /**
     * Delete the RTI transaction
     *
     * Deletes the specified RTI transaction
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteRtiTransactionTest() throws ApiException {
        String employerId = null;
        String rtiTransactionId = null;
        String authorization = null;
        String apiVersion = null;
        api.deleteRtiTransaction(employerId, rtiTransactionId, authorization, apiVersion);
        // TODO: test validations
    }

    /**
     * Get all RTI transaction tags
     *
     * Gets all the RTI transaction tags
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllRtiTransactionTags_0Test() throws ApiException {
        String employerId = null;
        String authorization = null;
        String apiVersion = null;
        LinkCollection response = api.getAllRtiTransactionTags_0(employerId, authorization, apiVersion);
        // TODO: test validations
    }

    /**
     * Get the RTI transaction
     *
     * Returns the specified RTI transaction
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRtiTransactionFromEmployerTest() throws ApiException {
        String employerId = null;
        String rtiTransactionId = null;
        String authorization = null;
        String apiVersion = null;
        RtiTransactionBase response = api.getRtiTransactionFromEmployer(employerId, rtiTransactionId, authorization, apiVersion);
        // TODO: test validations
    }

    /**
     * Get all RTI transaction summaries for the employer
     *
     * Get links for all RTI transaction summaries for the specified employer
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRtiTransactionSummariesFromEmployerTest() throws ApiException {
        String employerId = null;
        String authorization = null;
        String apiVersion = null;
        LinkCollection response = api.getRtiTransactionSummariesFromEmployer(employerId, authorization, apiVersion);
        // TODO: test validations
    }

    /**
     * Get the RTI transaction summary
     *
     * Returns the specified RTI transaction summary data excluding some poroperties
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRtiTransactionSummaryFromEmployerTest() throws ApiException {
        String employerId = null;
        String rtiTransactionId = null;
        String authorization = null;
        String apiVersion = null;
        RtiTransactionBase response = api.getRtiTransactionSummaryFromEmployer(employerId, rtiTransactionId, authorization, apiVersion);
        // TODO: test validations
    }

    /**
     * Get all RTI transactions for the employer
     *
     * Get links for all RTI transactions for the specified employer
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRtiTransactionsFromEmployerTest() throws ApiException {
        String employerId = null;
        String authorization = null;
        String apiVersion = null;
        LinkCollection response = api.getRtiTransactionsFromEmployer(employerId, authorization, apiVersion);
        // TODO: test validations
    }

    /**
     * Get RTI transactions with tag
     *
     * Gets the RTI transactions with the tag
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRtiTransactionsWithTag_0Test() throws ApiException {
        String employerId = null;
        String tagId = null;
        String authorization = null;
        String apiVersion = null;
        LinkCollection response = api.getRtiTransactionsWithTag_0(employerId, tagId, authorization, apiVersion);
        // TODO: test validations
    }

}
