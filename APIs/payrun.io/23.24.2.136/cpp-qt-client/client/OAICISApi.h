/**
 * PayRun.IO
 * Open, scableable, transparent payroll API.
 *
 * The version of the OpenAPI document: 23.24.2.136
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef OAI_OAICISApi_H
#define OAI_OAICISApi_H

#include "OAIHelpers.h"
#include "OAIHttpRequest.h"
#include "OAIServerConfiguration.h"
#include "OAIOauth.h"

#include "OAICisInstruction.h"
#include "OAICisLine.h"
#include "OAICisLineType.h"
#include "OAICisTransaction.h"
#include "OAIErrorModel.h"
#include "OAILink.h"
#include "OAILinkCollection.h"
#include "OAITag.h"
#include <QString>

#include <QObject>
#include <QByteArray>
#include <QStringList>
#include <QList>
#include <QNetworkAccessManager>

namespace OpenAPI {

class OAICISApi : public QObject {
    Q_OBJECT

public:
    OAICISApi(const int timeOut = 0);
    ~OAICISApi();

    void initializeServerConfigs();
    int setDefaultServerValue(int serverIndex,const QString &operation, const QString &variable,const QString &val);
    void setServerIndex(const QString &operation, int serverIndex);
    void setApiKey(const QString &apiKeyName, const QString &apiKey);
    void setBearerToken(const QString &token);
    void setUsername(const QString &username);
    void setPassword(const QString &password);
    void setTimeOut(const int timeOut);
    void setWorkingDirectory(const QString &path);
    void setNetworkAccessManager(QNetworkAccessManager* manager);
    int addServerConfiguration(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables = QMap<QString, OAIServerVariable>());
    void setNewServerForAllOperations(const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void setNewServer(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void addHeaders(const QString &key, const QString &value);
    void enableRequestCompression();
    void enableResponseCompression();
    void abortRequests();
    QString getParamStylePrefix(const QString &style);
    QString getParamStyleSuffix(const QString &style);
    QString getParamStyleDelimiter(const QString &style, const QString &name, bool isExplode);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  sub_contractor_id QString [required]
    * @param[in]  cis_instruction_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void deleteCisInstruction(const QString &employer_id, const QString &sub_contractor_id, const QString &cis_instruction_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  sub_contractor_id QString [required]
    * @param[in]  cis_instruction_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void deleteCisInstructionTag(const QString &employer_id, const QString &sub_contractor_id, const QString &cis_instruction_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  sub_contractor_id QString [required]
    * @param[in]  cis_line_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void deleteCisLine(const QString &employer_id, const QString &sub_contractor_id, const QString &cis_line_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  sub_contractor_id QString [required]
    * @param[in]  cis_line_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void deleteCisLineTag(const QString &employer_id, const QString &sub_contractor_id, const QString &cis_line_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  cis_line_type_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void deleteCisLineType(const QString &employer_id, const QString &cis_line_type_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  cis_line_type_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void deleteCisLineTypeTag(const QString &employer_id, const QString &cis_line_type_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  cis_transaction_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void deleteCisTransaction(const QString &employer_id, const QString &cis_transaction_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  sub_contractor_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void deleteSubContractorTag(const QString &employer_id, const QString &sub_contractor_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  sub_contractor_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getAllCisInstructionTags(const QString &employer_id, const QString &sub_contractor_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  sub_contractor_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getAllCisLineTags(const QString &employer_id, const QString &sub_contractor_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getAllCisLineTypeTags(const QString &employer_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getAllSubContractorTags(const QString &employer_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  sub_contractor_id QString [required]
    * @param[in]  cis_instruction_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getCisInstructionFromSubContractor(const QString &employer_id, const QString &sub_contractor_id, const QString &cis_instruction_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  sub_contractor_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getCisInstructionsFromSubContractor(const QString &employer_id, const QString &sub_contractor_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  sub_contractor_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getCisInstructionsWithTag(const QString &employer_id, const QString &sub_contractor_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  sub_contractor_id QString [required]
    * @param[in]  cis_line_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getCisLineFromSubContractor(const QString &employer_id, const QString &sub_contractor_id, const QString &cis_line_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  cis_line_type_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getCisLineTypeFromEmployer(const QString &employer_id, const QString &cis_line_type_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getCisLineTypesFromEmployer(const QString &employer_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getCisLineTypesWithTag(const QString &employer_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  sub_contractor_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getCisLinesFromSubContractor(const QString &employer_id, const QString &sub_contractor_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  sub_contractor_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getCisLinesWithTag(const QString &employer_id, const QString &sub_contractor_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  cis_transaction_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getCisTransactionFromEmployer(const QString &employer_id, const QString &cis_transaction_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getCisTransactionsFromEmployer(const QString &employer_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getSubContractorsWithTag(const QString &employer_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  sub_contractor_id QString [required]
    * @param[in]  cis_instruction_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagFromCisInstruction(const QString &employer_id, const QString &sub_contractor_id, const QString &cis_instruction_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  cis_line_type_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagFromCisLineType(const QString &employer_id, const QString &cis_line_type_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  sub_contractor_id QString [required]
    * @param[in]  cis_line_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagFromCisLine(const QString &employer_id, const QString &sub_contractor_id, const QString &cis_line_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  sub_contractor_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  effective_date QDate [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagFromSubContractorRevision(const QString &employer_id, const QString &sub_contractor_id, const QString &tag_id, const QDate &effective_date, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  sub_contractor_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagFromSubContractor(const QString &employer_id, const QString &sub_contractor_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  sub_contractor_id QString [required]
    * @param[in]  cis_instruction_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagsFromCisInstruction(const QString &employer_id, const QString &sub_contractor_id, const QString &cis_instruction_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  cis_line_type_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagsFromCisLineType(const QString &employer_id, const QString &cis_line_type_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  sub_contractor_id QString [required]
    * @param[in]  cis_line_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagsFromCisLine(const QString &employer_id, const QString &sub_contractor_id, const QString &cis_line_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  sub_contractor_id QString [required]
    * @param[in]  effective_date QDate [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagsFromSubContractorRevision(const QString &employer_id, const QString &sub_contractor_id, const QDate &effective_date, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  sub_contractor_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagsFromSubContractor(const QString &employer_id, const QString &sub_contractor_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  sub_contractor_id QString [required]
    * @param[in]  cis_instruction_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void patchCisInstruction(const QString &employer_id, const QString &sub_contractor_id, const QString &cis_instruction_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  sub_contractor_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    * @param[in]  oai_cis_instruction OAICisInstruction [required]
    */
    virtual void postCisInstructionIntoSubContractor(const QString &employer_id, const QString &sub_contractor_id, const QString &authorization, const QString &api_version, const OAICisInstruction &oai_cis_instruction);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    * @param[in]  oai_cis_line_type OAICisLineType [required]
    */
    virtual void postCisLineTypeIntoEmployer(const QString &employer_id, const QString &authorization, const QString &api_version, const OAICisLineType &oai_cis_line_type);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  sub_contractor_id QString [required]
    * @param[in]  cis_instruction_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    * @param[in]  oai_cis_instruction OAICisInstruction [required]
    */
    virtual void putCisInstructionIntoSubContractor(const QString &employer_id, const QString &sub_contractor_id, const QString &cis_instruction_id, const QString &authorization, const QString &api_version, const OAICisInstruction &oai_cis_instruction);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  sub_contractor_id QString [required]
    * @param[in]  cis_instruction_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void putCisInstructionTag(const QString &employer_id, const QString &sub_contractor_id, const QString &cis_instruction_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  sub_contractor_id QString [required]
    * @param[in]  cis_line_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void putCisLineTag(const QString &employer_id, const QString &sub_contractor_id, const QString &cis_line_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  cis_line_type_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    * @param[in]  oai_cis_line_type OAICisLineType [required]
    */
    virtual void putCisLineTypeIntoEmployer(const QString &employer_id, const QString &cis_line_type_id, const QString &authorization, const QString &api_version, const OAICisLineType &oai_cis_line_type);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  cis_line_type_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void putCisLineTypeTag(const QString &employer_id, const QString &cis_line_type_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  sub_contractor_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void putSubContractorTag(const QString &employer_id, const QString &sub_contractor_id, const QString &tag_id, const QString &authorization, const QString &api_version);


private:
    QMap<QString,int> _serverIndices;
    QMap<QString,QList<OAIServerConfiguration>> _serverConfigs;
    QMap<QString, QString> _apiKeys;
    QString _bearerToken;
    QString _username;
    QString _password;
    int _timeOut;
    QString _workingDirectory;
    QNetworkAccessManager* _manager;
    QMap<QString, QString> _defaultHeaders;
    bool _isResponseCompressionEnabled;
    bool _isRequestCompressionEnabled;
    OAIHttpRequestInput _latestInput;
    OAIHttpRequestWorker *_latestWorker;
    QStringList _latestScope;
    OauthCode _authFlow;
    OauthImplicit _implicitFlow;
    OauthCredentials _credentialFlow;
    OauthPassword _passwordFlow;
    int _OauthMethod = 0;

    void deleteCisInstructionCallback(OAIHttpRequestWorker *worker);
    void deleteCisInstructionTagCallback(OAIHttpRequestWorker *worker);
    void deleteCisLineCallback(OAIHttpRequestWorker *worker);
    void deleteCisLineTagCallback(OAIHttpRequestWorker *worker);
    void deleteCisLineTypeCallback(OAIHttpRequestWorker *worker);
    void deleteCisLineTypeTagCallback(OAIHttpRequestWorker *worker);
    void deleteCisTransactionCallback(OAIHttpRequestWorker *worker);
    void deleteSubContractorTagCallback(OAIHttpRequestWorker *worker);
    void getAllCisInstructionTagsCallback(OAIHttpRequestWorker *worker);
    void getAllCisLineTagsCallback(OAIHttpRequestWorker *worker);
    void getAllCisLineTypeTagsCallback(OAIHttpRequestWorker *worker);
    void getAllSubContractorTagsCallback(OAIHttpRequestWorker *worker);
    void getCisInstructionFromSubContractorCallback(OAIHttpRequestWorker *worker);
    void getCisInstructionsFromSubContractorCallback(OAIHttpRequestWorker *worker);
    void getCisInstructionsWithTagCallback(OAIHttpRequestWorker *worker);
    void getCisLineFromSubContractorCallback(OAIHttpRequestWorker *worker);
    void getCisLineTypeFromEmployerCallback(OAIHttpRequestWorker *worker);
    void getCisLineTypesFromEmployerCallback(OAIHttpRequestWorker *worker);
    void getCisLineTypesWithTagCallback(OAIHttpRequestWorker *worker);
    void getCisLinesFromSubContractorCallback(OAIHttpRequestWorker *worker);
    void getCisLinesWithTagCallback(OAIHttpRequestWorker *worker);
    void getCisTransactionFromEmployerCallback(OAIHttpRequestWorker *worker);
    void getCisTransactionsFromEmployerCallback(OAIHttpRequestWorker *worker);
    void getSubContractorsWithTagCallback(OAIHttpRequestWorker *worker);
    void getTagFromCisInstructionCallback(OAIHttpRequestWorker *worker);
    void getTagFromCisLineTypeCallback(OAIHttpRequestWorker *worker);
    void getTagFromCisLineCallback(OAIHttpRequestWorker *worker);
    void getTagFromSubContractorRevisionCallback(OAIHttpRequestWorker *worker);
    void getTagFromSubContractorCallback(OAIHttpRequestWorker *worker);
    void getTagsFromCisInstructionCallback(OAIHttpRequestWorker *worker);
    void getTagsFromCisLineTypeCallback(OAIHttpRequestWorker *worker);
    void getTagsFromCisLineCallback(OAIHttpRequestWorker *worker);
    void getTagsFromSubContractorRevisionCallback(OAIHttpRequestWorker *worker);
    void getTagsFromSubContractorCallback(OAIHttpRequestWorker *worker);
    void patchCisInstructionCallback(OAIHttpRequestWorker *worker);
    void postCisInstructionIntoSubContractorCallback(OAIHttpRequestWorker *worker);
    void postCisLineTypeIntoEmployerCallback(OAIHttpRequestWorker *worker);
    void putCisInstructionIntoSubContractorCallback(OAIHttpRequestWorker *worker);
    void putCisInstructionTagCallback(OAIHttpRequestWorker *worker);
    void putCisLineTagCallback(OAIHttpRequestWorker *worker);
    void putCisLineTypeIntoEmployerCallback(OAIHttpRequestWorker *worker);
    void putCisLineTypeTagCallback(OAIHttpRequestWorker *worker);
    void putSubContractorTagCallback(OAIHttpRequestWorker *worker);

Q_SIGNALS:

    void deleteCisInstructionSignal();
    void deleteCisInstructionTagSignal();
    void deleteCisLineSignal();
    void deleteCisLineTagSignal();
    void deleteCisLineTypeSignal();
    void deleteCisLineTypeTagSignal();
    void deleteCisTransactionSignal();
    void deleteSubContractorTagSignal();
    void getAllCisInstructionTagsSignal(OAILinkCollection summary);
    void getAllCisLineTagsSignal(OAILinkCollection summary);
    void getAllCisLineTypeTagsSignal(OAILinkCollection summary);
    void getAllSubContractorTagsSignal(OAILinkCollection summary);
    void getCisInstructionFromSubContractorSignal(OAICisInstruction summary);
    void getCisInstructionsFromSubContractorSignal(OAILinkCollection summary);
    void getCisInstructionsWithTagSignal(OAILinkCollection summary);
    void getCisLineFromSubContractorSignal(OAICisLine summary);
    void getCisLineTypeFromEmployerSignal(OAICisLineType summary);
    void getCisLineTypesFromEmployerSignal(OAILinkCollection summary);
    void getCisLineTypesWithTagSignal(OAILinkCollection summary);
    void getCisLinesFromSubContractorSignal(OAILinkCollection summary);
    void getCisLinesWithTagSignal(OAILinkCollection summary);
    void getCisTransactionFromEmployerSignal(OAICisTransaction summary);
    void getCisTransactionsFromEmployerSignal(OAILinkCollection summary);
    void getSubContractorsWithTagSignal(OAILinkCollection summary);
    void getTagFromCisInstructionSignal(OAITag summary);
    void getTagFromCisLineTypeSignal(OAITag summary);
    void getTagFromCisLineSignal(OAITag summary);
    void getTagFromSubContractorRevisionSignal(OAITag summary);
    void getTagFromSubContractorSignal(OAITag summary);
    void getTagsFromCisInstructionSignal(OAILinkCollection summary);
    void getTagsFromCisLineTypeSignal(OAILinkCollection summary);
    void getTagsFromCisLineSignal(OAILinkCollection summary);
    void getTagsFromSubContractorRevisionSignal(OAILinkCollection summary);
    void getTagsFromSubContractorSignal(OAILinkCollection summary);
    void patchCisInstructionSignal(OAICisInstruction summary);
    void postCisInstructionIntoSubContractorSignal(OAILink summary);
    void postCisLineTypeIntoEmployerSignal(OAILink summary);
    void putCisInstructionIntoSubContractorSignal(OAICisInstruction summary);
    void putCisInstructionTagSignal(OAITag summary);
    void putCisLineTagSignal(OAITag summary);
    void putCisLineTypeIntoEmployerSignal(OAICisLineType summary);
    void putCisLineTypeTagSignal(OAITag summary);
    void putSubContractorTagSignal(OAITag summary);


    void deleteCisInstructionSignalFull(OAIHttpRequestWorker *worker);
    void deleteCisInstructionTagSignalFull(OAIHttpRequestWorker *worker);
    void deleteCisLineSignalFull(OAIHttpRequestWorker *worker);
    void deleteCisLineTagSignalFull(OAIHttpRequestWorker *worker);
    void deleteCisLineTypeSignalFull(OAIHttpRequestWorker *worker);
    void deleteCisLineTypeTagSignalFull(OAIHttpRequestWorker *worker);
    void deleteCisTransactionSignalFull(OAIHttpRequestWorker *worker);
    void deleteSubContractorTagSignalFull(OAIHttpRequestWorker *worker);
    void getAllCisInstructionTagsSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getAllCisLineTagsSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getAllCisLineTypeTagsSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getAllSubContractorTagsSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getCisInstructionFromSubContractorSignalFull(OAIHttpRequestWorker *worker, OAICisInstruction summary);
    void getCisInstructionsFromSubContractorSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getCisInstructionsWithTagSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getCisLineFromSubContractorSignalFull(OAIHttpRequestWorker *worker, OAICisLine summary);
    void getCisLineTypeFromEmployerSignalFull(OAIHttpRequestWorker *worker, OAICisLineType summary);
    void getCisLineTypesFromEmployerSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getCisLineTypesWithTagSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getCisLinesFromSubContractorSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getCisLinesWithTagSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getCisTransactionFromEmployerSignalFull(OAIHttpRequestWorker *worker, OAICisTransaction summary);
    void getCisTransactionsFromEmployerSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getSubContractorsWithTagSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getTagFromCisInstructionSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void getTagFromCisLineTypeSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void getTagFromCisLineSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void getTagFromSubContractorRevisionSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void getTagFromSubContractorSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void getTagsFromCisInstructionSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getTagsFromCisLineTypeSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getTagsFromCisLineSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getTagsFromSubContractorRevisionSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getTagsFromSubContractorSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void patchCisInstructionSignalFull(OAIHttpRequestWorker *worker, OAICisInstruction summary);
    void postCisInstructionIntoSubContractorSignalFull(OAIHttpRequestWorker *worker, OAILink summary);
    void postCisLineTypeIntoEmployerSignalFull(OAIHttpRequestWorker *worker, OAILink summary);
    void putCisInstructionIntoSubContractorSignalFull(OAIHttpRequestWorker *worker, OAICisInstruction summary);
    void putCisInstructionTagSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void putCisLineTagSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void putCisLineTypeIntoEmployerSignalFull(OAIHttpRequestWorker *worker, OAICisLineType summary);
    void putCisLineTypeTagSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void putSubContractorTagSignalFull(OAIHttpRequestWorker *worker, OAITag summary);

    Q_DECL_DEPRECATED_X("Use deleteCisInstructionSignalError() instead")
    void deleteCisInstructionSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteCisInstructionSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteCisInstructionTagSignalError() instead")
    void deleteCisInstructionTagSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteCisInstructionTagSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteCisLineSignalError() instead")
    void deleteCisLineSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteCisLineSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteCisLineTagSignalError() instead")
    void deleteCisLineTagSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteCisLineTagSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteCisLineTypeSignalError() instead")
    void deleteCisLineTypeSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteCisLineTypeSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteCisLineTypeTagSignalError() instead")
    void deleteCisLineTypeTagSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteCisLineTypeTagSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteCisTransactionSignalError() instead")
    void deleteCisTransactionSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteCisTransactionSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteSubContractorTagSignalError() instead")
    void deleteSubContractorTagSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteSubContractorTagSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllCisInstructionTagsSignalError() instead")
    void getAllCisInstructionTagsSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllCisInstructionTagsSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllCisLineTagsSignalError() instead")
    void getAllCisLineTagsSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllCisLineTagsSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllCisLineTypeTagsSignalError() instead")
    void getAllCisLineTypeTagsSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllCisLineTypeTagsSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllSubContractorTagsSignalError() instead")
    void getAllSubContractorTagsSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllSubContractorTagsSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCisInstructionFromSubContractorSignalError() instead")
    void getCisInstructionFromSubContractorSignalE(OAICisInstruction summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getCisInstructionFromSubContractorSignalError(OAICisInstruction summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCisInstructionsFromSubContractorSignalError() instead")
    void getCisInstructionsFromSubContractorSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getCisInstructionsFromSubContractorSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCisInstructionsWithTagSignalError() instead")
    void getCisInstructionsWithTagSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getCisInstructionsWithTagSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCisLineFromSubContractorSignalError() instead")
    void getCisLineFromSubContractorSignalE(OAICisLine summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getCisLineFromSubContractorSignalError(OAICisLine summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCisLineTypeFromEmployerSignalError() instead")
    void getCisLineTypeFromEmployerSignalE(OAICisLineType summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getCisLineTypeFromEmployerSignalError(OAICisLineType summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCisLineTypesFromEmployerSignalError() instead")
    void getCisLineTypesFromEmployerSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getCisLineTypesFromEmployerSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCisLineTypesWithTagSignalError() instead")
    void getCisLineTypesWithTagSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getCisLineTypesWithTagSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCisLinesFromSubContractorSignalError() instead")
    void getCisLinesFromSubContractorSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getCisLinesFromSubContractorSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCisLinesWithTagSignalError() instead")
    void getCisLinesWithTagSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getCisLinesWithTagSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCisTransactionFromEmployerSignalError() instead")
    void getCisTransactionFromEmployerSignalE(OAICisTransaction summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getCisTransactionFromEmployerSignalError(OAICisTransaction summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCisTransactionsFromEmployerSignalError() instead")
    void getCisTransactionsFromEmployerSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getCisTransactionsFromEmployerSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSubContractorsWithTagSignalError() instead")
    void getSubContractorsWithTagSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getSubContractorsWithTagSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromCisInstructionSignalError() instead")
    void getTagFromCisInstructionSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromCisInstructionSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromCisLineTypeSignalError() instead")
    void getTagFromCisLineTypeSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromCisLineTypeSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromCisLineSignalError() instead")
    void getTagFromCisLineSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromCisLineSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromSubContractorRevisionSignalError() instead")
    void getTagFromSubContractorRevisionSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromSubContractorRevisionSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromSubContractorSignalError() instead")
    void getTagFromSubContractorSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromSubContractorSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromCisInstructionSignalError() instead")
    void getTagsFromCisInstructionSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromCisInstructionSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromCisLineTypeSignalError() instead")
    void getTagsFromCisLineTypeSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromCisLineTypeSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromCisLineSignalError() instead")
    void getTagsFromCisLineSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromCisLineSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromSubContractorRevisionSignalError() instead")
    void getTagsFromSubContractorRevisionSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromSubContractorRevisionSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromSubContractorSignalError() instead")
    void getTagsFromSubContractorSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromSubContractorSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use patchCisInstructionSignalError() instead")
    void patchCisInstructionSignalE(OAICisInstruction summary, QNetworkReply::NetworkError error_type, QString error_str);
    void patchCisInstructionSignalError(OAICisInstruction summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use postCisInstructionIntoSubContractorSignalError() instead")
    void postCisInstructionIntoSubContractorSignalE(OAILink summary, QNetworkReply::NetworkError error_type, QString error_str);
    void postCisInstructionIntoSubContractorSignalError(OAILink summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use postCisLineTypeIntoEmployerSignalError() instead")
    void postCisLineTypeIntoEmployerSignalE(OAILink summary, QNetworkReply::NetworkError error_type, QString error_str);
    void postCisLineTypeIntoEmployerSignalError(OAILink summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putCisInstructionIntoSubContractorSignalError() instead")
    void putCisInstructionIntoSubContractorSignalE(OAICisInstruction summary, QNetworkReply::NetworkError error_type, QString error_str);
    void putCisInstructionIntoSubContractorSignalError(OAICisInstruction summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putCisInstructionTagSignalError() instead")
    void putCisInstructionTagSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void putCisInstructionTagSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putCisLineTagSignalError() instead")
    void putCisLineTagSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void putCisLineTagSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putCisLineTypeIntoEmployerSignalError() instead")
    void putCisLineTypeIntoEmployerSignalE(OAICisLineType summary, QNetworkReply::NetworkError error_type, QString error_str);
    void putCisLineTypeIntoEmployerSignalError(OAICisLineType summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putCisLineTypeTagSignalError() instead")
    void putCisLineTypeTagSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void putCisLineTypeTagSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putSubContractorTagSignalError() instead")
    void putSubContractorTagSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void putSubContractorTagSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);

    Q_DECL_DEPRECATED_X("Use deleteCisInstructionSignalErrorFull() instead")
    void deleteCisInstructionSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteCisInstructionSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteCisInstructionTagSignalErrorFull() instead")
    void deleteCisInstructionTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteCisInstructionTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteCisLineSignalErrorFull() instead")
    void deleteCisLineSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteCisLineSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteCisLineTagSignalErrorFull() instead")
    void deleteCisLineTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteCisLineTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteCisLineTypeSignalErrorFull() instead")
    void deleteCisLineTypeSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteCisLineTypeSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteCisLineTypeTagSignalErrorFull() instead")
    void deleteCisLineTypeTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteCisLineTypeTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteCisTransactionSignalErrorFull() instead")
    void deleteCisTransactionSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteCisTransactionSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteSubContractorTagSignalErrorFull() instead")
    void deleteSubContractorTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteSubContractorTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllCisInstructionTagsSignalErrorFull() instead")
    void getAllCisInstructionTagsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllCisInstructionTagsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllCisLineTagsSignalErrorFull() instead")
    void getAllCisLineTagsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllCisLineTagsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllCisLineTypeTagsSignalErrorFull() instead")
    void getAllCisLineTypeTagsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllCisLineTypeTagsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllSubContractorTagsSignalErrorFull() instead")
    void getAllSubContractorTagsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllSubContractorTagsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCisInstructionFromSubContractorSignalErrorFull() instead")
    void getCisInstructionFromSubContractorSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getCisInstructionFromSubContractorSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCisInstructionsFromSubContractorSignalErrorFull() instead")
    void getCisInstructionsFromSubContractorSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getCisInstructionsFromSubContractorSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCisInstructionsWithTagSignalErrorFull() instead")
    void getCisInstructionsWithTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getCisInstructionsWithTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCisLineFromSubContractorSignalErrorFull() instead")
    void getCisLineFromSubContractorSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getCisLineFromSubContractorSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCisLineTypeFromEmployerSignalErrorFull() instead")
    void getCisLineTypeFromEmployerSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getCisLineTypeFromEmployerSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCisLineTypesFromEmployerSignalErrorFull() instead")
    void getCisLineTypesFromEmployerSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getCisLineTypesFromEmployerSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCisLineTypesWithTagSignalErrorFull() instead")
    void getCisLineTypesWithTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getCisLineTypesWithTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCisLinesFromSubContractorSignalErrorFull() instead")
    void getCisLinesFromSubContractorSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getCisLinesFromSubContractorSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCisLinesWithTagSignalErrorFull() instead")
    void getCisLinesWithTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getCisLinesWithTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCisTransactionFromEmployerSignalErrorFull() instead")
    void getCisTransactionFromEmployerSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getCisTransactionFromEmployerSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCisTransactionsFromEmployerSignalErrorFull() instead")
    void getCisTransactionsFromEmployerSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getCisTransactionsFromEmployerSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSubContractorsWithTagSignalErrorFull() instead")
    void getSubContractorsWithTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getSubContractorsWithTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromCisInstructionSignalErrorFull() instead")
    void getTagFromCisInstructionSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromCisInstructionSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromCisLineTypeSignalErrorFull() instead")
    void getTagFromCisLineTypeSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromCisLineTypeSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromCisLineSignalErrorFull() instead")
    void getTagFromCisLineSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromCisLineSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromSubContractorRevisionSignalErrorFull() instead")
    void getTagFromSubContractorRevisionSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromSubContractorRevisionSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromSubContractorSignalErrorFull() instead")
    void getTagFromSubContractorSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromSubContractorSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromCisInstructionSignalErrorFull() instead")
    void getTagsFromCisInstructionSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromCisInstructionSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromCisLineTypeSignalErrorFull() instead")
    void getTagsFromCisLineTypeSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromCisLineTypeSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromCisLineSignalErrorFull() instead")
    void getTagsFromCisLineSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromCisLineSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromSubContractorRevisionSignalErrorFull() instead")
    void getTagsFromSubContractorRevisionSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromSubContractorRevisionSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromSubContractorSignalErrorFull() instead")
    void getTagsFromSubContractorSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromSubContractorSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use patchCisInstructionSignalErrorFull() instead")
    void patchCisInstructionSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void patchCisInstructionSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use postCisInstructionIntoSubContractorSignalErrorFull() instead")
    void postCisInstructionIntoSubContractorSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void postCisInstructionIntoSubContractorSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use postCisLineTypeIntoEmployerSignalErrorFull() instead")
    void postCisLineTypeIntoEmployerSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void postCisLineTypeIntoEmployerSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putCisInstructionIntoSubContractorSignalErrorFull() instead")
    void putCisInstructionIntoSubContractorSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void putCisInstructionIntoSubContractorSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putCisInstructionTagSignalErrorFull() instead")
    void putCisInstructionTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void putCisInstructionTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putCisLineTagSignalErrorFull() instead")
    void putCisLineTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void putCisLineTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putCisLineTypeIntoEmployerSignalErrorFull() instead")
    void putCisLineTypeIntoEmployerSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void putCisLineTypeIntoEmployerSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putCisLineTypeTagSignalErrorFull() instead")
    void putCisLineTypeTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void putCisLineTypeTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putSubContractorTagSignalErrorFull() instead")
    void putSubContractorTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void putSubContractorTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);

    void abortRequestsSignal();
    void allPendingRequestsCompleted();

public Q_SLOTS:
    void tokenAvailable();
};

} // namespace OpenAPI
#endif
