/**
 * PayRun.IO
 * Open, scableable, transparent payroll API.
 *
 * The version of the OpenAPI document: 23.24.2.136
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplicationSecret.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplicationSecret::OAIApplicationSecret(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplicationSecret::OAIApplicationSecret() {
    this->initializeModel();
}

OAIApplicationSecret::~OAIApplicationSecret() {}

void OAIApplicationSecret::initializeModel() {

    m_application_secret_isSet = false;
    m_application_secret_isValid = false;
}

void OAIApplicationSecret::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApplicationSecret::fromJsonObject(QJsonObject json) {

    m_application_secret_isValid = ::OpenAPI::fromJsonValue(m_application_secret, json[QString("ApplicationSecret")]);
    m_application_secret_isSet = !json[QString("ApplicationSecret")].isNull() && m_application_secret_isValid;
}

QString OAIApplicationSecret::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApplicationSecret::asJsonObject() const {
    QJsonObject obj;
    if (m_application_secret.isSet()) {
        obj.insert(QString("ApplicationSecret"), ::OpenAPI::toJsonValue(m_application_secret));
    }
    return obj;
}

OAIApplicationSecret_1 OAIApplicationSecret::getApplicationSecret() const {
    return m_application_secret;
}
void OAIApplicationSecret::setApplicationSecret(const OAIApplicationSecret_1 &application_secret) {
    m_application_secret = application_secret;
    m_application_secret_isSet = true;
}

bool OAIApplicationSecret::is_application_secret_Set() const{
    return m_application_secret_isSet;
}

bool OAIApplicationSecret::is_application_secret_Valid() const{
    return m_application_secret_isValid;
}

bool OAIApplicationSecret::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_application_secret.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApplicationSecret::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
