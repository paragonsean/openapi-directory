/**
 * PayRun.IO
 * Open, scableable, transparent payroll API.
 *
 * The version of the OpenAPI document: 23.24.2.136
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOutput_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOutput_inner::OAIOutput_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOutput_inner::OAIOutput_inner() {
    this->initializeModel();
}

OAIOutput_inner::~OAIOutput_inner() {}

void OAIOutput_inner::initializeModel() {

    m_max_length_isSet = false;
    m_max_length_isValid = false;

    m_output_isSet = false;
    m_output_isValid = false;
}

void OAIOutput_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOutput_inner::fromJsonObject(QJsonObject json) {

    m_max_length_isValid = ::OpenAPI::fromJsonValue(m_max_length, json[QString("@MaxLength")]);
    m_max_length_isSet = !json[QString("@MaxLength")].isNull() && m_max_length_isValid;

    m_output_isValid = ::OpenAPI::fromJsonValue(m_output, json[QString("@Output")]);
    m_output_isSet = !json[QString("@Output")].isNull() && m_output_isValid;
}

QString OAIOutput_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOutput_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_max_length_isSet) {
        obj.insert(QString("@MaxLength"), ::OpenAPI::toJsonValue(m_max_length));
    }
    if (m_output_isSet) {
        obj.insert(QString("@Output"), ::OpenAPI::toJsonValue(m_output));
    }
    return obj;
}

QString OAIOutput_inner::getMaxLength() const {
    return m_max_length;
}
void OAIOutput_inner::setMaxLength(const QString &max_length) {
    m_max_length = max_length;
    m_max_length_isSet = true;
}

bool OAIOutput_inner::is_max_length_Set() const{
    return m_max_length_isSet;
}

bool OAIOutput_inner::is_max_length_Valid() const{
    return m_max_length_isValid;
}

QString OAIOutput_inner::getOutput() const {
    return m_output;
}
void OAIOutput_inner::setOutput(const QString &output) {
    m_output = output;
    m_output_isSet = true;
}

bool OAIOutput_inner::is_output_Set() const{
    return m_output_isSet;
}

bool OAIOutput_inner::is_output_Valid() const{
    return m_output_isValid;
}

bool OAIOutput_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_max_length_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_output_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOutput_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
