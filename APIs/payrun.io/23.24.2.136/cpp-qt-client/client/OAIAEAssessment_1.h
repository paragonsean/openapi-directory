/**
 * PayRun.IO
 * Open, scableable, transparent payroll API.
 *
 * The version of the OpenAPI document: 23.24.2.136
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAEAssessment_1.h
 *
 * 
 */

#ifndef OAIAEAssessment_1_H
#define OAIAEAssessment_1_H

#include <QJsonObject>

#include <QDate>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAEAssessment_1 : public OAIObject {
public:
    OAIAEAssessment_1();
    OAIAEAssessment_1(QString json);
    ~OAIAEAssessment_1() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAge() const;
    void setAge(const qint32 &age);
    bool is_age_Set() const;
    bool is_age_Valid() const;

    QString getAssessmentCode() const;
    void setAssessmentCode(const QString &assessment_code);
    bool is_assessment_code_Set() const;
    bool is_assessment_code_Valid() const;

    QDate getAssessmentDate() const;
    void setAssessmentDate(const QDate &assessment_date);
    bool is_assessment_date_Set() const;
    bool is_assessment_date_Valid() const;

    QString getAssessmentEvent() const;
    void setAssessmentEvent(const QString &assessment_event);
    bool is_assessment_event_Set() const;
    bool is_assessment_event_Valid() const;

    QString getAssessmentOverride() const;
    void setAssessmentOverride(const QString &assessment_override);
    bool is_assessment_override_Set() const;
    bool is_assessment_override_Valid() const;

    QString getAssessmentResult() const;
    void setAssessmentResult(const QString &assessment_result);
    bool is_assessment_result_Set() const;
    bool is_assessment_result_Valid() const;

    bool isIsMemberOfAlternativePensionScheme() const;
    void setIsMemberOfAlternativePensionScheme(const bool &is_member_of_alternative_pension_scheme);
    bool is_is_member_of_alternative_pension_scheme_Set() const;
    bool is_is_member_of_alternative_pension_scheme_Valid() const;

    QDate getOptOutWindowEndDate() const;
    void setOptOutWindowEndDate(const QDate &opt_out_window_end_date);
    bool is_opt_out_window_end_date_Set() const;
    bool is_opt_out_window_end_date_Valid() const;

    double getQualifyingEarnings() const;
    void setQualifyingEarnings(const double &qualifying_earnings);
    bool is_qualifying_earnings_Set() const;
    bool is_qualifying_earnings_Valid() const;

    QDate getReenrolmentDate() const;
    void setReenrolmentDate(const QDate &reenrolment_date);
    bool is_reenrolment_date_Set() const;
    bool is_reenrolment_date_Valid() const;

    qint32 getStatePensionAge() const;
    void setStatePensionAge(const qint32 &state_pension_age);
    bool is_state_pension_age_Set() const;
    bool is_state_pension_age_Valid() const;

    QDate getStatePensionDate() const;
    void setStatePensionDate(const QDate &state_pension_date);
    bool is_state_pension_date_Set() const;
    bool is_state_pension_date_Valid() const;

    qint32 getTaxPeriod() const;
    void setTaxPeriod(const qint32 &tax_period);
    bool is_tax_period_Set() const;
    bool is_tax_period_Valid() const;

    qint32 getTaxYear() const;
    void setTaxYear(const qint32 &tax_year);
    bool is_tax_year_Set() const;
    bool is_tax_year_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_age;
    bool m_age_isSet;
    bool m_age_isValid;

    QString m_assessment_code;
    bool m_assessment_code_isSet;
    bool m_assessment_code_isValid;

    QDate m_assessment_date;
    bool m_assessment_date_isSet;
    bool m_assessment_date_isValid;

    QString m_assessment_event;
    bool m_assessment_event_isSet;
    bool m_assessment_event_isValid;

    QString m_assessment_override;
    bool m_assessment_override_isSet;
    bool m_assessment_override_isValid;

    QString m_assessment_result;
    bool m_assessment_result_isSet;
    bool m_assessment_result_isValid;

    bool m_is_member_of_alternative_pension_scheme;
    bool m_is_member_of_alternative_pension_scheme_isSet;
    bool m_is_member_of_alternative_pension_scheme_isValid;

    QDate m_opt_out_window_end_date;
    bool m_opt_out_window_end_date_isSet;
    bool m_opt_out_window_end_date_isValid;

    double m_qualifying_earnings;
    bool m_qualifying_earnings_isSet;
    bool m_qualifying_earnings_isValid;

    QDate m_reenrolment_date;
    bool m_reenrolment_date_isSet;
    bool m_reenrolment_date_isValid;

    qint32 m_state_pension_age;
    bool m_state_pension_age_isSet;
    bool m_state_pension_age_isValid;

    QDate m_state_pension_date;
    bool m_state_pension_date_isSet;
    bool m_state_pension_date_isValid;

    qint32 m_tax_period;
    bool m_tax_period_isSet;
    bool m_tax_period_isValid;

    qint32 m_tax_year;
    bool m_tax_year_isSet;
    bool m_tax_year_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAEAssessment_1)

#endif // OAIAEAssessment_1_H
