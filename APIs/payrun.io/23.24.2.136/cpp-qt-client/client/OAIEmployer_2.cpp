/**
 * PayRun.IO
 * Open, scableable, transparent payroll API.
 *
 * The version of the OpenAPI document: 23.24.2.136
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEmployer_2.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEmployer_2::OAIEmployer_2(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEmployer_2::OAIEmployer_2() {
    this->initializeModel();
}

OAIEmployer_2::~OAIEmployer_2() {}

void OAIEmployer_2::initializeModel() {

    m_href_isSet = false;
    m_href_isValid = false;

    m_rel_isSet = false;
    m_rel_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;
}

void OAIEmployer_2::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEmployer_2::fromJsonObject(QJsonObject json) {

    m_href_isValid = ::OpenAPI::fromJsonValue(m_href, json[QString("@href")]);
    m_href_isSet = !json[QString("@href")].isNull() && m_href_isValid;

    m_rel_isValid = ::OpenAPI::fromJsonValue(m_rel, json[QString("@rel")]);
    m_rel_isSet = !json[QString("@rel")].isNull() && m_rel_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("@title")]);
    m_title_isSet = !json[QString("@title")].isNull() && m_title_isValid;
}

QString OAIEmployer_2::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEmployer_2::asJsonObject() const {
    QJsonObject obj;
    if (m_href_isSet) {
        obj.insert(QString("@href"), ::OpenAPI::toJsonValue(m_href));
    }
    if (m_rel_isSet) {
        obj.insert(QString("@rel"), ::OpenAPI::toJsonValue(m_rel));
    }
    if (m_title_isSet) {
        obj.insert(QString("@title"), ::OpenAPI::toJsonValue(m_title));
    }
    return obj;
}

QString OAIEmployer_2::getHref() const {
    return m_href;
}
void OAIEmployer_2::setHref(const QString &href) {
    m_href = href;
    m_href_isSet = true;
}

bool OAIEmployer_2::is_href_Set() const{
    return m_href_isSet;
}

bool OAIEmployer_2::is_href_Valid() const{
    return m_href_isValid;
}

QString OAIEmployer_2::getRel() const {
    return m_rel;
}
void OAIEmployer_2::setRel(const QString &rel) {
    m_rel = rel;
    m_rel_isSet = true;
}

bool OAIEmployer_2::is_rel_Set() const{
    return m_rel_isSet;
}

bool OAIEmployer_2::is_rel_Valid() const{
    return m_rel_isValid;
}

QString OAIEmployer_2::getTitle() const {
    return m_title;
}
void OAIEmployer_2::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIEmployer_2::is_title_Set() const{
    return m_title_isSet;
}

bool OAIEmployer_2::is_title_Valid() const{
    return m_title_isValid;
}

bool OAIEmployer_2::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_href_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rel_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEmployer_2::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
