/**
 * PayRun.IO
 * Open, scableable, transparent payroll API.
 *
 * The version of the OpenAPI document: 23.24.2.136
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDpsJobInstruction_1.h
 *
 * 
 */

#ifndef OAIDpsJobInstruction_1_H
#define OAIDpsJobInstruction_1_H

#include <QJsonObject>

#include "OAIEmployer_2.h"
#include "OAIMessage.h"
#include "OAIType.h"
#include <QDate>
#include <QDateTime>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEmployer_2;
class OAIType;
class OAIMessage;

class OAIDpsJobInstruction_1 : public OAIObject {
public:
    OAIDpsJobInstruction_1();
    OAIDpsJobInstruction_1(QString json);
    ~OAIDpsJobInstruction_1() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isApply() const;
    void setApply(const bool &apply);
    bool is_apply_Set() const;
    bool is_apply_Valid() const;

    OAIEmployer_2 getEmployer() const;
    void setEmployer(const OAIEmployer_2 &employer);
    bool is_employer_Set() const;
    bool is_employer_Valid() const;

    QDate getFromDate() const;
    void setFromDate(const QDate &from_date);
    bool is_from_date_Set() const;
    bool is_from_date_Valid() const;

    QDateTime getHoldingDate() const;
    void setHoldingDate(const QDateTime &holding_date);
    bool is_holding_date_Set() const;
    bool is_holding_date_Valid() const;

    OAIType getMessageTypes() const;
    void setMessageTypes(const OAIType &message_types);
    bool is_message_types_Set() const;
    bool is_message_types_Valid() const;

    OAIMessage getMessagesToProcess() const;
    void setMessagesToProcess(const OAIMessage &messages_to_process);
    bool is_messages_to_process_Set() const;
    bool is_messages_to_process_Valid() const;

    bool isRetrieve() const;
    void setRetrieve(const bool &retrieve);
    bool is_retrieve_Set() const;
    bool is_retrieve_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_apply;
    bool m_apply_isSet;
    bool m_apply_isValid;

    OAIEmployer_2 m_employer;
    bool m_employer_isSet;
    bool m_employer_isValid;

    QDate m_from_date;
    bool m_from_date_isSet;
    bool m_from_date_isValid;

    QDateTime m_holding_date;
    bool m_holding_date_isSet;
    bool m_holding_date_isValid;

    OAIType m_message_types;
    bool m_message_types_isSet;
    bool m_message_types_isValid;

    OAIMessage m_messages_to_process;
    bool m_messages_to_process_isSet;
    bool m_messages_to_process_isValid;

    bool m_retrieve;
    bool m_retrieve_isSet;
    bool m_retrieve_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDpsJobInstruction_1)

#endif // OAIDpsJobInstruction_1_H
