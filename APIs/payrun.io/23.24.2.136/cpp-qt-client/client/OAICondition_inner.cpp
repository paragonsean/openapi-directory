/**
 * PayRun.IO
 * Open, scableable, transparent payroll API.
 *
 * The version of the OpenAPI document: 23.24.2.136
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICondition_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICondition_inner::OAICondition_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICondition_inner::OAICondition_inner() {
    this->initializeModel();
}

OAICondition_inner::~OAICondition_inner() {}

void OAICondition_inner::initializeModel() {

    m_value_a_isSet = false;
    m_value_a_isValid = false;

    m_value_b_isSet = false;
    m_value_b_isValid = false;
}

void OAICondition_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICondition_inner::fromJsonObject(QJsonObject json) {

    m_value_a_isValid = ::OpenAPI::fromJsonValue(m_value_a, json[QString("@ValueA")]);
    m_value_a_isSet = !json[QString("@ValueA")].isNull() && m_value_a_isValid;

    m_value_b_isValid = ::OpenAPI::fromJsonValue(m_value_b, json[QString("@ValueB")]);
    m_value_b_isSet = !json[QString("@ValueB")].isNull() && m_value_b_isValid;
}

QString OAICondition_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICondition_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_value_a_isSet) {
        obj.insert(QString("@ValueA"), ::OpenAPI::toJsonValue(m_value_a));
    }
    if (m_value_b_isSet) {
        obj.insert(QString("@ValueB"), ::OpenAPI::toJsonValue(m_value_b));
    }
    return obj;
}

QString OAICondition_inner::getValueA() const {
    return m_value_a;
}
void OAICondition_inner::setValueA(const QString &value_a) {
    m_value_a = value_a;
    m_value_a_isSet = true;
}

bool OAICondition_inner::is_value_a_Set() const{
    return m_value_a_isSet;
}

bool OAICondition_inner::is_value_a_Valid() const{
    return m_value_a_isValid;
}

QString OAICondition_inner::getValueB() const {
    return m_value_b;
}
void OAICondition_inner::setValueB(const QString &value_b) {
    m_value_b = value_b;
    m_value_b_isSet = true;
}

bool OAICondition_inner::is_value_b_Set() const{
    return m_value_b_isSet;
}

bool OAICondition_inner::is_value_b_Valid() const{
    return m_value_b_isValid;
}

bool OAICondition_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_value_a_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_b_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICondition_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
