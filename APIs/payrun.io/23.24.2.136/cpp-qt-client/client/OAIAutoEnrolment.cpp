/**
 * PayRun.IO
 * Open, scableable, transparent payroll API.
 *
 * The version of the OpenAPI document: 23.24.2.136
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAutoEnrolment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAutoEnrolment::OAIAutoEnrolment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAutoEnrolment::OAIAutoEnrolment() {
    this->initializeModel();
}

OAIAutoEnrolment::~OAIAutoEnrolment() {}

void OAIAutoEnrolment::initializeModel() {

    m_pension_isSet = false;
    m_pension_isValid = false;

    m_postponement_date_isSet = false;
    m_postponement_date_isValid = false;

    m_primary_address_isSet = false;
    m_primary_address_isValid = false;

    m_primary_email_isSet = false;
    m_primary_email_isValid = false;

    m_primary_first_name_isSet = false;
    m_primary_first_name_isValid = false;

    m_primary_job_title_isSet = false;
    m_primary_job_title_isValid = false;

    m_primary_last_name_isSet = false;
    m_primary_last_name_isValid = false;

    m_primary_telephone_isSet = false;
    m_primary_telephone_isValid = false;

    m_re_enrolment_day_offset_isSet = false;
    m_re_enrolment_day_offset_isValid = false;

    m_re_enrolment_month_offset_isSet = false;
    m_re_enrolment_month_offset_isValid = false;

    m_recent_opt_out_re_enrolment_excluded_isSet = false;
    m_recent_opt_out_re_enrolment_excluded_isValid = false;

    m_secondary_address_isSet = false;
    m_secondary_address_isValid = false;

    m_secondary_email_isSet = false;
    m_secondary_email_isValid = false;

    m_secondary_first_name_isSet = false;
    m_secondary_first_name_isValid = false;

    m_secondary_job_title_isSet = false;
    m_secondary_job_title_isValid = false;

    m_secondary_last_name_isSet = false;
    m_secondary_last_name_isValid = false;

    m_secondary_telephone_isSet = false;
    m_secondary_telephone_isValid = false;

    m_staging_date_isSet = false;
    m_staging_date_isValid = false;
}

void OAIAutoEnrolment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAutoEnrolment::fromJsonObject(QJsonObject json) {

    m_pension_isValid = ::OpenAPI::fromJsonValue(m_pension, json[QString("Pension")]);
    m_pension_isSet = !json[QString("Pension")].isNull() && m_pension_isValid;

    m_postponement_date_isValid = ::OpenAPI::fromJsonValue(m_postponement_date, json[QString("PostponementDate")]);
    m_postponement_date_isSet = !json[QString("PostponementDate")].isNull() && m_postponement_date_isValid;

    m_primary_address_isValid = ::OpenAPI::fromJsonValue(m_primary_address, json[QString("PrimaryAddress")]);
    m_primary_address_isSet = !json[QString("PrimaryAddress")].isNull() && m_primary_address_isValid;

    m_primary_email_isValid = ::OpenAPI::fromJsonValue(m_primary_email, json[QString("PrimaryEmail")]);
    m_primary_email_isSet = !json[QString("PrimaryEmail")].isNull() && m_primary_email_isValid;

    m_primary_first_name_isValid = ::OpenAPI::fromJsonValue(m_primary_first_name, json[QString("PrimaryFirstName")]);
    m_primary_first_name_isSet = !json[QString("PrimaryFirstName")].isNull() && m_primary_first_name_isValid;

    m_primary_job_title_isValid = ::OpenAPI::fromJsonValue(m_primary_job_title, json[QString("PrimaryJobTitle")]);
    m_primary_job_title_isSet = !json[QString("PrimaryJobTitle")].isNull() && m_primary_job_title_isValid;

    m_primary_last_name_isValid = ::OpenAPI::fromJsonValue(m_primary_last_name, json[QString("PrimaryLastName")]);
    m_primary_last_name_isSet = !json[QString("PrimaryLastName")].isNull() && m_primary_last_name_isValid;

    m_primary_telephone_isValid = ::OpenAPI::fromJsonValue(m_primary_telephone, json[QString("PrimaryTelephone")]);
    m_primary_telephone_isSet = !json[QString("PrimaryTelephone")].isNull() && m_primary_telephone_isValid;

    m_re_enrolment_day_offset_isValid = ::OpenAPI::fromJsonValue(m_re_enrolment_day_offset, json[QString("ReEnrolmentDayOffset")]);
    m_re_enrolment_day_offset_isSet = !json[QString("ReEnrolmentDayOffset")].isNull() && m_re_enrolment_day_offset_isValid;

    m_re_enrolment_month_offset_isValid = ::OpenAPI::fromJsonValue(m_re_enrolment_month_offset, json[QString("ReEnrolmentMonthOffset")]);
    m_re_enrolment_month_offset_isSet = !json[QString("ReEnrolmentMonthOffset")].isNull() && m_re_enrolment_month_offset_isValid;

    m_recent_opt_out_re_enrolment_excluded_isValid = ::OpenAPI::fromJsonValue(m_recent_opt_out_re_enrolment_excluded, json[QString("RecentOptOutReEnrolmentExcluded")]);
    m_recent_opt_out_re_enrolment_excluded_isSet = !json[QString("RecentOptOutReEnrolmentExcluded")].isNull() && m_recent_opt_out_re_enrolment_excluded_isValid;

    m_secondary_address_isValid = ::OpenAPI::fromJsonValue(m_secondary_address, json[QString("SecondaryAddress")]);
    m_secondary_address_isSet = !json[QString("SecondaryAddress")].isNull() && m_secondary_address_isValid;

    m_secondary_email_isValid = ::OpenAPI::fromJsonValue(m_secondary_email, json[QString("SecondaryEmail")]);
    m_secondary_email_isSet = !json[QString("SecondaryEmail")].isNull() && m_secondary_email_isValid;

    m_secondary_first_name_isValid = ::OpenAPI::fromJsonValue(m_secondary_first_name, json[QString("SecondaryFirstName")]);
    m_secondary_first_name_isSet = !json[QString("SecondaryFirstName")].isNull() && m_secondary_first_name_isValid;

    m_secondary_job_title_isValid = ::OpenAPI::fromJsonValue(m_secondary_job_title, json[QString("SecondaryJobTitle")]);
    m_secondary_job_title_isSet = !json[QString("SecondaryJobTitle")].isNull() && m_secondary_job_title_isValid;

    m_secondary_last_name_isValid = ::OpenAPI::fromJsonValue(m_secondary_last_name, json[QString("SecondaryLastName")]);
    m_secondary_last_name_isSet = !json[QString("SecondaryLastName")].isNull() && m_secondary_last_name_isValid;

    m_secondary_telephone_isValid = ::OpenAPI::fromJsonValue(m_secondary_telephone, json[QString("SecondaryTelephone")]);
    m_secondary_telephone_isSet = !json[QString("SecondaryTelephone")].isNull() && m_secondary_telephone_isValid;

    m_staging_date_isValid = ::OpenAPI::fromJsonValue(m_staging_date, json[QString("StagingDate")]);
    m_staging_date_isSet = !json[QString("StagingDate")].isNull() && m_staging_date_isValid;
}

QString OAIAutoEnrolment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAutoEnrolment::asJsonObject() const {
    QJsonObject obj;
    if (m_pension.isSet()) {
        obj.insert(QString("Pension"), ::OpenAPI::toJsonValue(m_pension));
    }
    if (m_postponement_date_isSet) {
        obj.insert(QString("PostponementDate"), ::OpenAPI::toJsonValue(m_postponement_date));
    }
    if (m_primary_address.isSet()) {
        obj.insert(QString("PrimaryAddress"), ::OpenAPI::toJsonValue(m_primary_address));
    }
    if (m_primary_email_isSet) {
        obj.insert(QString("PrimaryEmail"), ::OpenAPI::toJsonValue(m_primary_email));
    }
    if (m_primary_first_name_isSet) {
        obj.insert(QString("PrimaryFirstName"), ::OpenAPI::toJsonValue(m_primary_first_name));
    }
    if (m_primary_job_title_isSet) {
        obj.insert(QString("PrimaryJobTitle"), ::OpenAPI::toJsonValue(m_primary_job_title));
    }
    if (m_primary_last_name_isSet) {
        obj.insert(QString("PrimaryLastName"), ::OpenAPI::toJsonValue(m_primary_last_name));
    }
    if (m_primary_telephone_isSet) {
        obj.insert(QString("PrimaryTelephone"), ::OpenAPI::toJsonValue(m_primary_telephone));
    }
    if (m_re_enrolment_day_offset_isSet) {
        obj.insert(QString("ReEnrolmentDayOffset"), ::OpenAPI::toJsonValue(m_re_enrolment_day_offset));
    }
    if (m_re_enrolment_month_offset_isSet) {
        obj.insert(QString("ReEnrolmentMonthOffset"), ::OpenAPI::toJsonValue(m_re_enrolment_month_offset));
    }
    if (m_recent_opt_out_re_enrolment_excluded_isSet) {
        obj.insert(QString("RecentOptOutReEnrolmentExcluded"), ::OpenAPI::toJsonValue(m_recent_opt_out_re_enrolment_excluded));
    }
    if (m_secondary_address.isSet()) {
        obj.insert(QString("SecondaryAddress"), ::OpenAPI::toJsonValue(m_secondary_address));
    }
    if (m_secondary_email_isSet) {
        obj.insert(QString("SecondaryEmail"), ::OpenAPI::toJsonValue(m_secondary_email));
    }
    if (m_secondary_first_name_isSet) {
        obj.insert(QString("SecondaryFirstName"), ::OpenAPI::toJsonValue(m_secondary_first_name));
    }
    if (m_secondary_job_title_isSet) {
        obj.insert(QString("SecondaryJobTitle"), ::OpenAPI::toJsonValue(m_secondary_job_title));
    }
    if (m_secondary_last_name_isSet) {
        obj.insert(QString("SecondaryLastName"), ::OpenAPI::toJsonValue(m_secondary_last_name));
    }
    if (m_secondary_telephone_isSet) {
        obj.insert(QString("SecondaryTelephone"), ::OpenAPI::toJsonValue(m_secondary_telephone));
    }
    if (m_staging_date_isSet) {
        obj.insert(QString("StagingDate"), ::OpenAPI::toJsonValue(m_staging_date));
    }
    return obj;
}

OAIPension_1 OAIAutoEnrolment::getPension() const {
    return m_pension;
}
void OAIAutoEnrolment::setPension(const OAIPension_1 &pension) {
    m_pension = pension;
    m_pension_isSet = true;
}

bool OAIAutoEnrolment::is_pension_Set() const{
    return m_pension_isSet;
}

bool OAIAutoEnrolment::is_pension_Valid() const{
    return m_pension_isValid;
}

QDate OAIAutoEnrolment::getPostponementDate() const {
    return m_postponement_date;
}
void OAIAutoEnrolment::setPostponementDate(const QDate &postponement_date) {
    m_postponement_date = postponement_date;
    m_postponement_date_isSet = true;
}

bool OAIAutoEnrolment::is_postponement_date_Set() const{
    return m_postponement_date_isSet;
}

bool OAIAutoEnrolment::is_postponement_date_Valid() const{
    return m_postponement_date_isValid;
}

OAIPrimaryAddress OAIAutoEnrolment::getPrimaryAddress() const {
    return m_primary_address;
}
void OAIAutoEnrolment::setPrimaryAddress(const OAIPrimaryAddress &primary_address) {
    m_primary_address = primary_address;
    m_primary_address_isSet = true;
}

bool OAIAutoEnrolment::is_primary_address_Set() const{
    return m_primary_address_isSet;
}

bool OAIAutoEnrolment::is_primary_address_Valid() const{
    return m_primary_address_isValid;
}

QString OAIAutoEnrolment::getPrimaryEmail() const {
    return m_primary_email;
}
void OAIAutoEnrolment::setPrimaryEmail(const QString &primary_email) {
    m_primary_email = primary_email;
    m_primary_email_isSet = true;
}

bool OAIAutoEnrolment::is_primary_email_Set() const{
    return m_primary_email_isSet;
}

bool OAIAutoEnrolment::is_primary_email_Valid() const{
    return m_primary_email_isValid;
}

QString OAIAutoEnrolment::getPrimaryFirstName() const {
    return m_primary_first_name;
}
void OAIAutoEnrolment::setPrimaryFirstName(const QString &primary_first_name) {
    m_primary_first_name = primary_first_name;
    m_primary_first_name_isSet = true;
}

bool OAIAutoEnrolment::is_primary_first_name_Set() const{
    return m_primary_first_name_isSet;
}

bool OAIAutoEnrolment::is_primary_first_name_Valid() const{
    return m_primary_first_name_isValid;
}

QString OAIAutoEnrolment::getPrimaryJobTitle() const {
    return m_primary_job_title;
}
void OAIAutoEnrolment::setPrimaryJobTitle(const QString &primary_job_title) {
    m_primary_job_title = primary_job_title;
    m_primary_job_title_isSet = true;
}

bool OAIAutoEnrolment::is_primary_job_title_Set() const{
    return m_primary_job_title_isSet;
}

bool OAIAutoEnrolment::is_primary_job_title_Valid() const{
    return m_primary_job_title_isValid;
}

QString OAIAutoEnrolment::getPrimaryLastName() const {
    return m_primary_last_name;
}
void OAIAutoEnrolment::setPrimaryLastName(const QString &primary_last_name) {
    m_primary_last_name = primary_last_name;
    m_primary_last_name_isSet = true;
}

bool OAIAutoEnrolment::is_primary_last_name_Set() const{
    return m_primary_last_name_isSet;
}

bool OAIAutoEnrolment::is_primary_last_name_Valid() const{
    return m_primary_last_name_isValid;
}

QString OAIAutoEnrolment::getPrimaryTelephone() const {
    return m_primary_telephone;
}
void OAIAutoEnrolment::setPrimaryTelephone(const QString &primary_telephone) {
    m_primary_telephone = primary_telephone;
    m_primary_telephone_isSet = true;
}

bool OAIAutoEnrolment::is_primary_telephone_Set() const{
    return m_primary_telephone_isSet;
}

bool OAIAutoEnrolment::is_primary_telephone_Valid() const{
    return m_primary_telephone_isValid;
}

qint32 OAIAutoEnrolment::getReEnrolmentDayOffset() const {
    return m_re_enrolment_day_offset;
}
void OAIAutoEnrolment::setReEnrolmentDayOffset(const qint32 &re_enrolment_day_offset) {
    m_re_enrolment_day_offset = re_enrolment_day_offset;
    m_re_enrolment_day_offset_isSet = true;
}

bool OAIAutoEnrolment::is_re_enrolment_day_offset_Set() const{
    return m_re_enrolment_day_offset_isSet;
}

bool OAIAutoEnrolment::is_re_enrolment_day_offset_Valid() const{
    return m_re_enrolment_day_offset_isValid;
}

qint32 OAIAutoEnrolment::getReEnrolmentMonthOffset() const {
    return m_re_enrolment_month_offset;
}
void OAIAutoEnrolment::setReEnrolmentMonthOffset(const qint32 &re_enrolment_month_offset) {
    m_re_enrolment_month_offset = re_enrolment_month_offset;
    m_re_enrolment_month_offset_isSet = true;
}

bool OAIAutoEnrolment::is_re_enrolment_month_offset_Set() const{
    return m_re_enrolment_month_offset_isSet;
}

bool OAIAutoEnrolment::is_re_enrolment_month_offset_Valid() const{
    return m_re_enrolment_month_offset_isValid;
}

bool OAIAutoEnrolment::isRecentOptOutReEnrolmentExcluded() const {
    return m_recent_opt_out_re_enrolment_excluded;
}
void OAIAutoEnrolment::setRecentOptOutReEnrolmentExcluded(const bool &recent_opt_out_re_enrolment_excluded) {
    m_recent_opt_out_re_enrolment_excluded = recent_opt_out_re_enrolment_excluded;
    m_recent_opt_out_re_enrolment_excluded_isSet = true;
}

bool OAIAutoEnrolment::is_recent_opt_out_re_enrolment_excluded_Set() const{
    return m_recent_opt_out_re_enrolment_excluded_isSet;
}

bool OAIAutoEnrolment::is_recent_opt_out_re_enrolment_excluded_Valid() const{
    return m_recent_opt_out_re_enrolment_excluded_isValid;
}

OAISecondaryAddress OAIAutoEnrolment::getSecondaryAddress() const {
    return m_secondary_address;
}
void OAIAutoEnrolment::setSecondaryAddress(const OAISecondaryAddress &secondary_address) {
    m_secondary_address = secondary_address;
    m_secondary_address_isSet = true;
}

bool OAIAutoEnrolment::is_secondary_address_Set() const{
    return m_secondary_address_isSet;
}

bool OAIAutoEnrolment::is_secondary_address_Valid() const{
    return m_secondary_address_isValid;
}

QString OAIAutoEnrolment::getSecondaryEmail() const {
    return m_secondary_email;
}
void OAIAutoEnrolment::setSecondaryEmail(const QString &secondary_email) {
    m_secondary_email = secondary_email;
    m_secondary_email_isSet = true;
}

bool OAIAutoEnrolment::is_secondary_email_Set() const{
    return m_secondary_email_isSet;
}

bool OAIAutoEnrolment::is_secondary_email_Valid() const{
    return m_secondary_email_isValid;
}

QString OAIAutoEnrolment::getSecondaryFirstName() const {
    return m_secondary_first_name;
}
void OAIAutoEnrolment::setSecondaryFirstName(const QString &secondary_first_name) {
    m_secondary_first_name = secondary_first_name;
    m_secondary_first_name_isSet = true;
}

bool OAIAutoEnrolment::is_secondary_first_name_Set() const{
    return m_secondary_first_name_isSet;
}

bool OAIAutoEnrolment::is_secondary_first_name_Valid() const{
    return m_secondary_first_name_isValid;
}

QString OAIAutoEnrolment::getSecondaryJobTitle() const {
    return m_secondary_job_title;
}
void OAIAutoEnrolment::setSecondaryJobTitle(const QString &secondary_job_title) {
    m_secondary_job_title = secondary_job_title;
    m_secondary_job_title_isSet = true;
}

bool OAIAutoEnrolment::is_secondary_job_title_Set() const{
    return m_secondary_job_title_isSet;
}

bool OAIAutoEnrolment::is_secondary_job_title_Valid() const{
    return m_secondary_job_title_isValid;
}

QString OAIAutoEnrolment::getSecondaryLastName() const {
    return m_secondary_last_name;
}
void OAIAutoEnrolment::setSecondaryLastName(const QString &secondary_last_name) {
    m_secondary_last_name = secondary_last_name;
    m_secondary_last_name_isSet = true;
}

bool OAIAutoEnrolment::is_secondary_last_name_Set() const{
    return m_secondary_last_name_isSet;
}

bool OAIAutoEnrolment::is_secondary_last_name_Valid() const{
    return m_secondary_last_name_isValid;
}

QString OAIAutoEnrolment::getSecondaryTelephone() const {
    return m_secondary_telephone;
}
void OAIAutoEnrolment::setSecondaryTelephone(const QString &secondary_telephone) {
    m_secondary_telephone = secondary_telephone;
    m_secondary_telephone_isSet = true;
}

bool OAIAutoEnrolment::is_secondary_telephone_Set() const{
    return m_secondary_telephone_isSet;
}

bool OAIAutoEnrolment::is_secondary_telephone_Valid() const{
    return m_secondary_telephone_isValid;
}

QDate OAIAutoEnrolment::getStagingDate() const {
    return m_staging_date;
}
void OAIAutoEnrolment::setStagingDate(const QDate &staging_date) {
    m_staging_date = staging_date;
    m_staging_date_isSet = true;
}

bool OAIAutoEnrolment::is_staging_date_Set() const{
    return m_staging_date_isSet;
}

bool OAIAutoEnrolment::is_staging_date_Valid() const{
    return m_staging_date_isValid;
}

bool OAIAutoEnrolment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_pension.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_postponement_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_primary_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_primary_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_primary_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_primary_job_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_primary_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_primary_telephone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_re_enrolment_day_offset_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_re_enrolment_month_offset_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recent_opt_out_re_enrolment_excluded_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_secondary_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_secondary_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_secondary_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_secondary_job_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_secondary_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_secondary_telephone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_staging_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAutoEnrolment::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
