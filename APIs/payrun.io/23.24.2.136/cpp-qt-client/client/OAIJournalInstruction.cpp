/**
 * PayRun.IO
 * Open, scableable, transparent payroll API.
 *
 * The version of the OpenAPI document: 23.24.2.136
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIJournalInstruction.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIJournalInstruction::OAIJournalInstruction(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIJournalInstruction::OAIJournalInstruction() {
    this->initializeModel();
}

OAIJournalInstruction::~OAIJournalInstruction() {}

void OAIJournalInstruction::initializeModel() {

    m_journal_instruction_isSet = false;
    m_journal_instruction_isValid = false;
}

void OAIJournalInstruction::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIJournalInstruction::fromJsonObject(QJsonObject json) {

    m_journal_instruction_isValid = ::OpenAPI::fromJsonValue(m_journal_instruction, json[QString("JournalInstruction")]);
    m_journal_instruction_isSet = !json[QString("JournalInstruction")].isNull() && m_journal_instruction_isValid;
}

QString OAIJournalInstruction::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIJournalInstruction::asJsonObject() const {
    QJsonObject obj;
    if (m_journal_instruction.isSet()) {
        obj.insert(QString("JournalInstruction"), ::OpenAPI::toJsonValue(m_journal_instruction));
    }
    return obj;
}

OAIJournalInstruction_1 OAIJournalInstruction::getJournalInstruction() const {
    return m_journal_instruction;
}
void OAIJournalInstruction::setJournalInstruction(const OAIJournalInstruction_1 &journal_instruction) {
    m_journal_instruction = journal_instruction;
    m_journal_instruction_isSet = true;
}

bool OAIJournalInstruction::is_journal_instruction_Set() const{
    return m_journal_instruction_isSet;
}

bool OAIJournalInstruction::is_journal_instruction_Valid() const{
    return m_journal_instruction_isValid;
}

bool OAIJournalInstruction::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_journal_instruction.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIJournalInstruction::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
