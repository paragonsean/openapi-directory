/**
 * PayRun.IO
 * Open, scableable, transparent payroll API.
 *
 * The version of the OpenAPI document: 23.24.2.136
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPermission_2.h
 *
 * The users&#39; permissions
 */

#ifndef OAIPermission_2_H
#define OAIPermission_2_H

#include <QJsonObject>

#include "OAISubContractor_1_SubContractor_inner.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISubContractor_1_SubContractor_inner;

class OAIPermission_2 : public OAIObject {
public:
    OAIPermission_2();
    OAIPermission_2(QString json);
    ~OAIPermission_2() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAISubContractor_1_SubContractor_inner> getPermission() const;
    void setPermission(const QList<OAISubContractor_1_SubContractor_inner> &permission);
    bool is_permission_Set() const;
    bool is_permission_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAISubContractor_1_SubContractor_inner> m_permission;
    bool m_permission_isSet;
    bool m_permission_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPermission_2)

#endif // OAIPermission_2_H
