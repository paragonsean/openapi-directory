/**
 * PayRun.IO
 * Open, scableable, transparent payroll API.
 *
 * The version of the OpenAPI document: 23.24.2.136
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINominalCode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINominalCode::OAINominalCode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINominalCode::OAINominalCode() {
    this->initializeModel();
}

OAINominalCode::~OAINominalCode() {}

void OAINominalCode::initializeModel() {

    m_nominal_code_isSet = false;
    m_nominal_code_isValid = false;
}

void OAINominalCode::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINominalCode::fromJsonObject(QJsonObject json) {

    m_nominal_code_isValid = ::OpenAPI::fromJsonValue(m_nominal_code, json[QString("NominalCode")]);
    m_nominal_code_isSet = !json[QString("NominalCode")].isNull() && m_nominal_code_isValid;
}

QString OAINominalCode::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINominalCode::asJsonObject() const {
    QJsonObject obj;
    if (m_nominal_code.isSet()) {
        obj.insert(QString("NominalCode"), ::OpenAPI::toJsonValue(m_nominal_code));
    }
    return obj;
}

OAINominalCode_2 OAINominalCode::getNominalCode() const {
    return m_nominal_code;
}
void OAINominalCode::setNominalCode(const OAINominalCode_2 &nominal_code) {
    m_nominal_code = nominal_code;
    m_nominal_code_isSet = true;
}

bool OAINominalCode::is_nominal_code_Set() const{
    return m_nominal_code_isSet;
}

bool OAINominalCode::is_nominal_code_Valid() const{
    return m_nominal_code_isValid;
}

bool OAINominalCode::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_nominal_code.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINominalCode::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
