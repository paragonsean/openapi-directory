/**
 * PayRun.IO
 * Open, scableable, transparent payroll API.
 *
 * The version of the OpenAPI document: 23.24.2.136
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIJournalLine_1.h
 *
 * 
 */

#ifndef OAIJournalLine_1_H
#define OAIJournalLine_1_H

#include <QJsonObject>

#include "OAIEmployee_3.h"
#include "OAIPayRun_2.h"
#include "OAISubContractor_2.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEmployee_3;
class OAIPayRun_2;
class OAISubContractor_2;

class OAIJournalLine_1 : public OAIObject {
public:
    OAIJournalLine_1();
    OAIJournalLine_1(QString json);
    ~OAIJournalLine_1() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getCredit() const;
    void setCredit(const double &credit);
    bool is_credit_Set() const;
    bool is_credit_Valid() const;

    double getDebit() const;
    void setDebit(const double &debit);
    bool is_debit_Set() const;
    bool is_debit_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIEmployee_3 getEmployee() const;
    void setEmployee(const OAIEmployee_3 &employee);
    bool is_employee_Set() const;
    bool is_employee_Valid() const;

    QDateTime getGenerated() const;
    void setGenerated(const QDateTime &generated);
    bool is_generated_Set() const;
    bool is_generated_Valid() const;

    QString getGrouping() const;
    void setGrouping(const QString &grouping);
    bool is_grouping_Set() const;
    bool is_grouping_Valid() const;

    QString getLedgerTarget() const;
    void setLedgerTarget(const QString &ledger_target);
    bool is_ledger_target_Set() const;
    bool is_ledger_target_Valid() const;

    QString getNomCode() const;
    void setNomCode(const QString &nom_code);
    bool is_nom_code_Set() const;
    bool is_nom_code_Valid() const;

    QString getPayFrequency() const;
    void setPayFrequency(const QString &pay_frequency);
    bool is_pay_frequency_Set() const;
    bool is_pay_frequency_Valid() const;

    OAIPayRun_2 getPayRun() const;
    void setPayRun(const OAIPayRun_2 &pay_run);
    bool is_pay_run_Set() const;
    bool is_pay_run_Valid() const;

    OAISubContractor_2 getSubContractor() const;
    void setSubContractor(const OAISubContractor_2 &sub_contractor);
    bool is_sub_contractor_Set() const;
    bool is_sub_contractor_Valid() const;

    QString getSubNomCode() const;
    void setSubNomCode(const QString &sub_nom_code);
    bool is_sub_nom_code_Set() const;
    bool is_sub_nom_code_Valid() const;

    qint32 getTaxPeriod() const;
    void setTaxPeriod(const qint32 &tax_period);
    bool is_tax_period_Set() const;
    bool is_tax_period_Valid() const;

    qint32 getTaxYear() const;
    void setTaxYear(const qint32 &tax_year);
    bool is_tax_year_Set() const;
    bool is_tax_year_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_credit;
    bool m_credit_isSet;
    bool m_credit_isValid;

    double m_debit;
    bool m_debit_isSet;
    bool m_debit_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIEmployee_3 m_employee;
    bool m_employee_isSet;
    bool m_employee_isValid;

    QDateTime m_generated;
    bool m_generated_isSet;
    bool m_generated_isValid;

    QString m_grouping;
    bool m_grouping_isSet;
    bool m_grouping_isValid;

    QString m_ledger_target;
    bool m_ledger_target_isSet;
    bool m_ledger_target_isValid;

    QString m_nom_code;
    bool m_nom_code_isSet;
    bool m_nom_code_isValid;

    QString m_pay_frequency;
    bool m_pay_frequency_isSet;
    bool m_pay_frequency_isValid;

    OAIPayRun_2 m_pay_run;
    bool m_pay_run_isSet;
    bool m_pay_run_isValid;

    OAISubContractor_2 m_sub_contractor;
    bool m_sub_contractor_isSet;
    bool m_sub_contractor_isValid;

    QString m_sub_nom_code;
    bool m_sub_nom_code_isSet;
    bool m_sub_nom_code_isValid;

    qint32 m_tax_period;
    bool m_tax_period_isSet;
    bool m_tax_period_isValid;

    qint32 m_tax_year;
    bool m_tax_year_isSet;
    bool m_tax_year_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIJournalLine_1)

#endif // OAIJournalLine_1_H
