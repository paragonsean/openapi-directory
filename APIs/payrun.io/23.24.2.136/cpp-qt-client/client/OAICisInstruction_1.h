/**
 * PayRun.IO
 * Open, scableable, transparent payroll API.
 *
 * The version of the OpenAPI document: 23.24.2.136
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICisInstruction_1.h
 *
 * 
 */

#ifndef OAICisInstruction_1_H
#define OAICisInstruction_1_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICisInstruction_1 : public OAIObject {
public:
    OAICisInstruction_1();
    OAICisInstruction_1(QString json);
    ~OAICisInstruction_1() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCisLineTag() const;
    void setCisLineTag(const QString &cis_line_tag);
    bool is_cis_line_tag_Set() const;
    bool is_cis_line_tag_Valid() const;

    QString getCisLineType() const;
    void setCisLineType(const QString &cis_line_type);
    bool is_cis_line_type_Set() const;
    bool is_cis_line_type_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getPayFrequency() const;
    void setPayFrequency(const QString &pay_frequency);
    bool is_pay_frequency_Set() const;
    bool is_pay_frequency_Valid() const;

    qint32 getPeriodEnd() const;
    void setPeriodEnd(const qint32 &period_end);
    bool is_period_end_Set() const;
    bool is_period_end_Valid() const;

    qint32 getPeriodStart() const;
    void setPeriodStart(const qint32 &period_start);
    bool is_period_start_Set() const;
    bool is_period_start_Valid() const;

    qint32 getTaxYearEnd() const;
    void setTaxYearEnd(const qint32 &tax_year_end);
    bool is_tax_year_end_Set() const;
    bool is_tax_year_end_Valid() const;

    qint32 getTaxYearStart() const;
    void setTaxYearStart(const qint32 &tax_year_start);
    bool is_tax_year_start_Set() const;
    bool is_tax_year_start_Valid() const;

    QString getUom() const;
    void setUom(const QString &uom);
    bool is_uom_Set() const;
    bool is_uom_Valid() const;

    double getUnits() const;
    void setUnits(const double &units);
    bool is_units_Set() const;
    bool is_units_Valid() const;

    double getVat() const;
    void setVat(const double &vat);
    bool is_vat_Set() const;
    bool is_vat_Valid() const;

    double getValue() const;
    void setValue(const double &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_cis_line_tag;
    bool m_cis_line_tag_isSet;
    bool m_cis_line_tag_isValid;

    QString m_cis_line_type;
    bool m_cis_line_type_isSet;
    bool m_cis_line_type_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_pay_frequency;
    bool m_pay_frequency_isSet;
    bool m_pay_frequency_isValid;

    qint32 m_period_end;
    bool m_period_end_isSet;
    bool m_period_end_isValid;

    qint32 m_period_start;
    bool m_period_start_isSet;
    bool m_period_start_isValid;

    qint32 m_tax_year_end;
    bool m_tax_year_end_isSet;
    bool m_tax_year_end_isValid;

    qint32 m_tax_year_start;
    bool m_tax_year_start_isSet;
    bool m_tax_year_start_isValid;

    QString m_uom;
    bool m_uom_isSet;
    bool m_uom_isValid;

    double m_units;
    bool m_units_isSet;
    bool m_units_isValid;

    double m_vat;
    bool m_vat_isSet;
    bool m_vat_isValid;

    double m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICisInstruction_1)

#endif // OAICisInstruction_1_H
