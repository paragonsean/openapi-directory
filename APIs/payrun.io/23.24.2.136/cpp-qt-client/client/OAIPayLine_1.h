/**
 * PayRun.IO
 * Open, scableable, transparent payroll API.
 *
 * The version of the OpenAPI document: 23.24.2.136
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPayLine_1.h
 *
 * 
 */

#ifndef OAIPayLine_1_H
#define OAIPayLine_1_H

#include <QJsonObject>

#include <QDate>
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPayLine_1 : public OAIObject {
public:
    OAIPayLine_1();
    OAIPayLine_1(QString json);
    ~OAIPayLine_1() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCalculator() const;
    void setCalculator(const QString &calculator);
    bool is_calculator_Set() const;
    bool is_calculator_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QDateTime getGenerated() const;
    void setGenerated(const QDateTime &generated);
    bool is_generated_Set() const;
    bool is_generated_Valid() const;

    QString getPayCode() const;
    void setPayCode(const QString &pay_code);
    bool is_pay_code_Set() const;
    bool is_pay_code_Valid() const;

    QString getPayCodeType() const;
    void setPayCodeType(const QString &pay_code_type);
    bool is_pay_code_type_Set() const;
    bool is_pay_code_type_Valid() const;

    qint32 getPayRunSequence() const;
    void setPayRunSequence(const qint32 &pay_run_sequence);
    bool is_pay_run_sequence_Set() const;
    bool is_pay_run_sequence_Valid() const;

    QDate getPaymentDate() const;
    void setPaymentDate(const QDate &payment_date);
    bool is_payment_date_Set() const;
    bool is_payment_date_Valid() const;

    qint32 getTaxPeriod() const;
    void setTaxPeriod(const qint32 &tax_period);
    bool is_tax_period_Set() const;
    bool is_tax_period_Valid() const;

    qint32 getTaxYear() const;
    void setTaxYear(const qint32 &tax_year);
    bool is_tax_year_Set() const;
    bool is_tax_year_Valid() const;

    double getValue() const;
    void setValue(const double &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_calculator;
    bool m_calculator_isSet;
    bool m_calculator_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QDateTime m_generated;
    bool m_generated_isSet;
    bool m_generated_isValid;

    QString m_pay_code;
    bool m_pay_code_isSet;
    bool m_pay_code_isValid;

    QString m_pay_code_type;
    bool m_pay_code_type_isSet;
    bool m_pay_code_type_isValid;

    qint32 m_pay_run_sequence;
    bool m_pay_run_sequence_isSet;
    bool m_pay_run_sequence_isValid;

    QDate m_payment_date;
    bool m_payment_date_isSet;
    bool m_payment_date_isValid;

    qint32 m_tax_period;
    bool m_tax_period_isSet;
    bool m_tax_period_isValid;

    qint32 m_tax_year;
    bool m_tax_year_isSet;
    bool m_tax_year_isValid;

    double m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPayLine_1)

#endif // OAIPayLine_1_H
