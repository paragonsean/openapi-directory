/**
 * PayRun.IO
 * Open, scableable, transparent payroll API.
 *
 * The version of the OpenAPI document: 23.24.2.136
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICisLineType_1.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICisLineType_1::OAICisLineType_1(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICisLineType_1::OAICisLineType_1() {
    this->initializeModel();
}

OAICisLineType_1::~OAICisLineType_1() {}

void OAICisLineType_1::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_line_type_isSet = false;
    m_line_type_isValid = false;

    m_nominal_code_isSet = false;
    m_nominal_code_isValid = false;

    m_tax_treatment_isSet = false;
    m_tax_treatment_isValid = false;
}

void OAICisLineType_1::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICisLineType_1::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_line_type_isValid = ::OpenAPI::fromJsonValue(m_line_type, json[QString("LineType")]);
    m_line_type_isSet = !json[QString("LineType")].isNull() && m_line_type_isValid;

    m_nominal_code_isValid = ::OpenAPI::fromJsonValue(m_nominal_code, json[QString("NominalCode")]);
    m_nominal_code_isSet = !json[QString("NominalCode")].isNull() && m_nominal_code_isValid;

    m_tax_treatment_isValid = ::OpenAPI::fromJsonValue(m_tax_treatment, json[QString("TaxTreatment")]);
    m_tax_treatment_isSet = !json[QString("TaxTreatment")].isNull() && m_tax_treatment_isValid;
}

QString OAICisLineType_1::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICisLineType_1::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_line_type_isSet) {
        obj.insert(QString("LineType"), ::OpenAPI::toJsonValue(m_line_type));
    }
    if (m_nominal_code.isSet()) {
        obj.insert(QString("NominalCode"), ::OpenAPI::toJsonValue(m_nominal_code));
    }
    if (m_tax_treatment_isSet) {
        obj.insert(QString("TaxTreatment"), ::OpenAPI::toJsonValue(m_tax_treatment));
    }
    return obj;
}

QString OAICisLineType_1::getDescription() const {
    return m_description;
}
void OAICisLineType_1::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAICisLineType_1::is_description_Set() const{
    return m_description_isSet;
}

bool OAICisLineType_1::is_description_Valid() const{
    return m_description_isValid;
}

QString OAICisLineType_1::getLineType() const {
    return m_line_type;
}
void OAICisLineType_1::setLineType(const QString &line_type) {
    m_line_type = line_type;
    m_line_type_isSet = true;
}

bool OAICisLineType_1::is_line_type_Set() const{
    return m_line_type_isSet;
}

bool OAICisLineType_1::is_line_type_Valid() const{
    return m_line_type_isValid;
}

OAINominalCode_1 OAICisLineType_1::getNominalCode() const {
    return m_nominal_code;
}
void OAICisLineType_1::setNominalCode(const OAINominalCode_1 &nominal_code) {
    m_nominal_code = nominal_code;
    m_nominal_code_isSet = true;
}

bool OAICisLineType_1::is_nominal_code_Set() const{
    return m_nominal_code_isSet;
}

bool OAICisLineType_1::is_nominal_code_Valid() const{
    return m_nominal_code_isValid;
}

QString OAICisLineType_1::getTaxTreatment() const {
    return m_tax_treatment;
}
void OAICisLineType_1::setTaxTreatment(const QString &tax_treatment) {
    m_tax_treatment = tax_treatment;
    m_tax_treatment_isSet = true;
}

bool OAICisLineType_1::is_tax_treatment_Set() const{
    return m_tax_treatment_isSet;
}

bool OAICisLineType_1::is_tax_treatment_Valid() const{
    return m_tax_treatment_isValid;
}

bool OAICisLineType_1::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_line_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_nominal_code.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tax_treatment_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICisLineType_1::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
