/**
 * PayRun.IO
 * Open, scableable, transparent payroll API.
 *
 * The version of the OpenAPI document: 23.24.2.136
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEmployer_3.h
 *
 * 
 */

#ifndef OAIEmployer_3_H
#define OAIEmployer_3_H

#include <QJsonObject>

#include "OAIAddress_1.h"
#include "OAIAutoEnrolment.h"
#include "OAIBankAccount_1.h"
#include "OAIHmrcSettings.h"
#include "OAIObject.h"
#include <QDate>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAddress_1;
class OAIAutoEnrolment;
class OAIBankAccount_1;
class OAIHmrcSettings;

class OAIEmployer_3 : public OAIObject {
public:
    OAIEmployer_3();
    OAIEmployer_3(QString json);
    ~OAIEmployer_3() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAddress_1 getAddress() const;
    void setAddress(const OAIAddress_1 &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    double getApprenticeshipLevyAllowance() const;
    void setApprenticeshipLevyAllowance(const double &apprenticeship_levy_allowance);
    bool is_apprenticeship_levy_allowance_Set() const;
    bool is_apprenticeship_levy_allowance_Valid() const;

    OAIAutoEnrolment getAutoEnrolment() const;
    void setAutoEnrolment(const OAIAutoEnrolment &auto_enrolment);
    bool is_auto_enrolment_Set() const;
    bool is_auto_enrolment_Valid() const;

    QString getBacsServiceUserNumber() const;
    void setBacsServiceUserNumber(const QString &bacs_service_user_number);
    bool is_bacs_service_user_number_Set() const;
    bool is_bacs_service_user_number_Valid() const;

    OAIBankAccount_1 getBankAccount() const;
    void setBankAccount(const OAIBankAccount_1 &bank_account);
    bool is_bank_account_Set() const;
    bool is_bank_account_Valid() const;

    bool isCalculateApprenticeshipLevy() const;
    void setCalculateApprenticeshipLevy(const bool &calculate_apprenticeship_levy);
    bool is_calculate_apprenticeship_levy_Set() const;
    bool is_calculate_apprenticeship_levy_Valid() const;

    bool isClaimEmploymentAllowance() const;
    void setClaimEmploymentAllowance(const bool &claim_employment_allowance);
    bool is_claim_employment_allowance_Set() const;
    bool is_claim_employment_allowance_Valid() const;

    bool isClaimSmallEmployerRelief() const;
    void setClaimSmallEmployerRelief(const bool &claim_small_employer_relief);
    bool is_claim_small_employer_relief_Set() const;
    bool is_claim_small_employer_relief_Valid() const;

    QDate getEffectiveDate() const;
    void setEffectiveDate(const QDate &effective_date);
    bool is_effective_date_Set() const;
    bool is_effective_date_Valid() const;

    OAIHmrcSettings getHmrcSettings() const;
    void setHmrcSettings(const OAIHmrcSettings &hmrc_settings);
    bool is_hmrc_settings_Set() const;
    bool is_hmrc_settings_Valid() const;

    OAIObject getMetaData() const;
    void setMetaData(const OAIObject &meta_data);
    bool is_meta_data_Set() const;
    bool is_meta_data_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QDate getNextRevisionDate() const;
    void setNextRevisionDate(const QDate &next_revision_date);
    bool is_next_revision_date_Set() const;
    bool is_next_revision_date_Valid() const;

    QString getRegion() const;
    void setRegion(const QString &region);
    bool is_region_Set() const;
    bool is_region_Valid() const;

    qint32 getRevision() const;
    void setRevision(const qint32 &revision);
    bool is_revision_Set() const;
    bool is_revision_Valid() const;

    QString getRuleExclusions() const;
    void setRuleExclusions(const QString &rule_exclusions);
    bool is_rule_exclusions_Set() const;
    bool is_rule_exclusions_Valid() const;

    QString getTerritory() const;
    void setTerritory(const QString &territory);
    bool is_territory_Set() const;
    bool is_territory_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAddress_1 m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    double m_apprenticeship_levy_allowance;
    bool m_apprenticeship_levy_allowance_isSet;
    bool m_apprenticeship_levy_allowance_isValid;

    OAIAutoEnrolment m_auto_enrolment;
    bool m_auto_enrolment_isSet;
    bool m_auto_enrolment_isValid;

    QString m_bacs_service_user_number;
    bool m_bacs_service_user_number_isSet;
    bool m_bacs_service_user_number_isValid;

    OAIBankAccount_1 m_bank_account;
    bool m_bank_account_isSet;
    bool m_bank_account_isValid;

    bool m_calculate_apprenticeship_levy;
    bool m_calculate_apprenticeship_levy_isSet;
    bool m_calculate_apprenticeship_levy_isValid;

    bool m_claim_employment_allowance;
    bool m_claim_employment_allowance_isSet;
    bool m_claim_employment_allowance_isValid;

    bool m_claim_small_employer_relief;
    bool m_claim_small_employer_relief_isSet;
    bool m_claim_small_employer_relief_isValid;

    QDate m_effective_date;
    bool m_effective_date_isSet;
    bool m_effective_date_isValid;

    OAIHmrcSettings m_hmrc_settings;
    bool m_hmrc_settings_isSet;
    bool m_hmrc_settings_isValid;

    OAIObject m_meta_data;
    bool m_meta_data_isSet;
    bool m_meta_data_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QDate m_next_revision_date;
    bool m_next_revision_date_isSet;
    bool m_next_revision_date_isValid;

    QString m_region;
    bool m_region_isSet;
    bool m_region_isValid;

    qint32 m_revision;
    bool m_revision_isSet;
    bool m_revision_isValid;

    QString m_rule_exclusions;
    bool m_rule_exclusions_isSet;
    bool m_rule_exclusions_isValid;

    QString m_territory;
    bool m_territory_isSet;
    bool m_territory_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEmployer_3)

#endif // OAIEmployer_3_H
