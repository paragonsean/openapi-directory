/**
 * PayRun.IO
 * Open, scableable, transparent payroll API.
 *
 * The version of the OpenAPI document: 23.24.2.136
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICommentary_1.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICommentary_1::OAICommentary_1(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICommentary_1::OAICommentary_1() {
    this->initializeModel();
}

OAICommentary_1::~OAICommentary_1() {}

void OAICommentary_1::initializeModel() {

    m_created_isSet = false;
    m_created_isValid = false;

    m_detail_isSet = false;
    m_detail_isValid = false;

    m_employee_isSet = false;
    m_employee_isValid = false;

    m_pay_run_isSet = false;
    m_pay_run_isValid = false;
}

void OAICommentary_1::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICommentary_1::fromJsonObject(QJsonObject json) {

    m_created_isValid = ::OpenAPI::fromJsonValue(m_created, json[QString("Created")]);
    m_created_isSet = !json[QString("Created")].isNull() && m_created_isValid;

    m_detail_isValid = ::OpenAPI::fromJsonValue(m_detail, json[QString("Detail")]);
    m_detail_isSet = !json[QString("Detail")].isNull() && m_detail_isValid;

    m_employee_isValid = ::OpenAPI::fromJsonValue(m_employee, json[QString("Employee")]);
    m_employee_isSet = !json[QString("Employee")].isNull() && m_employee_isValid;

    m_pay_run_isValid = ::OpenAPI::fromJsonValue(m_pay_run, json[QString("PayRun")]);
    m_pay_run_isSet = !json[QString("PayRun")].isNull() && m_pay_run_isValid;
}

QString OAICommentary_1::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICommentary_1::asJsonObject() const {
    QJsonObject obj;
    if (m_created_isSet) {
        obj.insert(QString("Created"), ::OpenAPI::toJsonValue(m_created));
    }
    if (m_detail_isSet) {
        obj.insert(QString("Detail"), ::OpenAPI::toJsonValue(m_detail));
    }
    if (m_employee.isSet()) {
        obj.insert(QString("Employee"), ::OpenAPI::toJsonValue(m_employee));
    }
    if (m_pay_run.isSet()) {
        obj.insert(QString("PayRun"), ::OpenAPI::toJsonValue(m_pay_run));
    }
    return obj;
}

QDateTime OAICommentary_1::getCreated() const {
    return m_created;
}
void OAICommentary_1::setCreated(const QDateTime &created) {
    m_created = created;
    m_created_isSet = true;
}

bool OAICommentary_1::is_created_Set() const{
    return m_created_isSet;
}

bool OAICommentary_1::is_created_Valid() const{
    return m_created_isValid;
}

QString OAICommentary_1::getDetail() const {
    return m_detail;
}
void OAICommentary_1::setDetail(const QString &detail) {
    m_detail = detail;
    m_detail_isSet = true;
}

bool OAICommentary_1::is_detail_Set() const{
    return m_detail_isSet;
}

bool OAICommentary_1::is_detail_Valid() const{
    return m_detail_isValid;
}

OAIEmployee_1 OAICommentary_1::getEmployee() const {
    return m_employee;
}
void OAICommentary_1::setEmployee(const OAIEmployee_1 &employee) {
    m_employee = employee;
    m_employee_isSet = true;
}

bool OAICommentary_1::is_employee_Set() const{
    return m_employee_isSet;
}

bool OAICommentary_1::is_employee_Valid() const{
    return m_employee_isValid;
}

OAIPayRun_1 OAICommentary_1::getPayRun() const {
    return m_pay_run;
}
void OAICommentary_1::setPayRun(const OAIPayRun_1 &pay_run) {
    m_pay_run = pay_run;
    m_pay_run_isSet = true;
}

bool OAICommentary_1::is_pay_run_Set() const{
    return m_pay_run_isSet;
}

bool OAICommentary_1::is_pay_run_Valid() const{
    return m_pay_run_isValid;
}

bool OAICommentary_1::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_detail_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_employee.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_pay_run.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICommentary_1::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
