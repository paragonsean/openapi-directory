/**
 * PayRun.IO
 * Open, scableable, transparent payroll API.
 *
 * The version of the OpenAPI document: 23.24.2.136
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPayRun_3.h
 *
 * 
 */

#ifndef OAIPayRun_3_H
#define OAIPayRun_3_H

#include <QJsonObject>

#include "OAIPaySchedule_2.h"
#include "OAIProceedingPayRun.h"
#include <QDate>
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPaySchedule_2;
class OAIProceedingPayRun;

class OAIPayRun_3 : public OAIObject {
public:
    OAIPayRun_3();
    OAIPayRun_3(QString json);
    ~OAIPayRun_3() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getExecuted() const;
    void setExecuted(const QDateTime &executed);
    bool is_executed_Set() const;
    bool is_executed_Valid() const;

    bool isIsSupplementary() const;
    void setIsSupplementary(const bool &is_supplementary);
    bool is_is_supplementary_Set() const;
    bool is_is_supplementary_Valid() const;

    QString getPayFrequency() const;
    void setPayFrequency(const QString &pay_frequency);
    bool is_pay_frequency_Set() const;
    bool is_pay_frequency_Valid() const;

    OAIPaySchedule_2 getPaySchedule() const;
    void setPaySchedule(const OAIPaySchedule_2 &pay_schedule);
    bool is_pay_schedule_Set() const;
    bool is_pay_schedule_Valid() const;

    QDate getPaymentDate() const;
    void setPaymentDate(const QDate &payment_date);
    bool is_payment_date_Set() const;
    bool is_payment_date_Valid() const;

    QDate getPeriodEnd() const;
    void setPeriodEnd(const QDate &period_end);
    bool is_period_end_Set() const;
    bool is_period_end_Valid() const;

    QDate getPeriodStart() const;
    void setPeriodStart(const QDate &period_start);
    bool is_period_start_Set() const;
    bool is_period_start_Valid() const;

    OAIProceedingPayRun getProceedingPayRun() const;
    void setProceedingPayRun(const OAIProceedingPayRun &proceeding_pay_run);
    bool is_proceeding_pay_run_Set() const;
    bool is_proceeding_pay_run_Valid() const;

    qint32 getSequence() const;
    void setSequence(const qint32 &sequence);
    bool is_sequence_Set() const;
    bool is_sequence_Valid() const;

    qint32 getTaxPeriod() const;
    void setTaxPeriod(const qint32 &tax_period);
    bool is_tax_period_Set() const;
    bool is_tax_period_Valid() const;

    qint32 getTaxYear() const;
    void setTaxYear(const qint32 &tax_year);
    bool is_tax_year_Set() const;
    bool is_tax_year_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_executed;
    bool m_executed_isSet;
    bool m_executed_isValid;

    bool m_is_supplementary;
    bool m_is_supplementary_isSet;
    bool m_is_supplementary_isValid;

    QString m_pay_frequency;
    bool m_pay_frequency_isSet;
    bool m_pay_frequency_isValid;

    OAIPaySchedule_2 m_pay_schedule;
    bool m_pay_schedule_isSet;
    bool m_pay_schedule_isValid;

    QDate m_payment_date;
    bool m_payment_date_isSet;
    bool m_payment_date_isValid;

    QDate m_period_end;
    bool m_period_end_isSet;
    bool m_period_end_isValid;

    QDate m_period_start;
    bool m_period_start_isSet;
    bool m_period_start_isValid;

    OAIProceedingPayRun m_proceeding_pay_run;
    bool m_proceeding_pay_run_isSet;
    bool m_proceeding_pay_run_isValid;

    qint32 m_sequence;
    bool m_sequence_isSet;
    bool m_sequence_isValid;

    qint32 m_tax_period;
    bool m_tax_period_isSet;
    bool m_tax_period_isValid;

    qint32 m_tax_year;
    bool m_tax_year_isSet;
    bool m_tax_year_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPayRun_3)

#endif // OAIPayRun_3_H
