/**
 * PayRun.IO
 * Open, scableable, transparent payroll API.
 *
 * The version of the OpenAPI document: 23.24.2.136
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef OAI_OAITaggingApi_H
#define OAI_OAITaggingApi_H

#include "OAIHelpers.h"
#include "OAIHttpRequest.h"
#include "OAIServerConfiguration.h"
#include "OAIOauth.h"

#include "OAIErrorModel.h"
#include "OAILinkCollection.h"
#include "OAITag.h"
#include <QString>

#include <QObject>
#include <QByteArray>
#include <QStringList>
#include <QList>
#include <QNetworkAccessManager>

namespace OpenAPI {

class OAITaggingApi : public QObject {
    Q_OBJECT

public:
    OAITaggingApi(const int timeOut = 0);
    ~OAITaggingApi();

    void initializeServerConfigs();
    int setDefaultServerValue(int serverIndex,const QString &operation, const QString &variable,const QString &val);
    void setServerIndex(const QString &operation, int serverIndex);
    void setApiKey(const QString &apiKeyName, const QString &apiKey);
    void setBearerToken(const QString &token);
    void setUsername(const QString &username);
    void setPassword(const QString &password);
    void setTimeOut(const int timeOut);
    void setWorkingDirectory(const QString &path);
    void setNetworkAccessManager(QNetworkAccessManager* manager);
    int addServerConfiguration(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables = QMap<QString, OAIServerVariable>());
    void setNewServerForAllOperations(const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void setNewServer(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void addHeaders(const QString &key, const QString &value);
    void enableRequestCompression();
    void enableResponseCompression();
    void abortRequests();
    QString getParamStylePrefix(const QString &style);
    QString getParamStyleSuffix(const QString &style);
    QString getParamStyleDelimiter(const QString &style, const QString &name, bool isExplode);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  sub_contractor_id QString [required]
    * @param[in]  cis_instruction_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void deleteCisInstructionTag(const QString &employer_id, const QString &sub_contractor_id, const QString &cis_instruction_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  sub_contractor_id QString [required]
    * @param[in]  cis_line_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void deleteCisLineTag(const QString &employer_id, const QString &sub_contractor_id, const QString &cis_line_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  cis_line_type_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void deleteCisLineTypeTag(const QString &employer_id, const QString &cis_line_type_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  employee_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void deleteEmployeeTag(const QString &employer_id, const QString &employee_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void deleteEmployerTag(const QString &employer_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  holiday_scheme_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void deleteHolidaySchemeTag(const QString &employer_id, const QString &holiday_scheme_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  journal_line_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void deleteJournalLineTag(const QString &employer_id, const QString &journal_line_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  pay_code_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void deletePayCodeTag(const QString &employer_id, const QString &pay_code_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  employee_id QString [required]
    * @param[in]  pay_instruction_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void deletePayInstructionTag(const QString &employer_id, const QString &employee_id, const QString &pay_instruction_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  employee_id QString [required]
    * @param[in]  pay_line_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void deletePayLineTag(const QString &employer_id, const QString &employee_id, const QString &pay_line_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  pay_schedule_id QString [required]
    * @param[in]  pay_run_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void deletePayRunTag(const QString &employer_id, const QString &pay_schedule_id, const QString &pay_run_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  pay_schedule_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void deletePayScheduleTag(const QString &employer_id, const QString &pay_schedule_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  permission_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void deletePermissionTag(const QString &permission_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  rti_transaction_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void deleteRtiTransactionTag(const QString &employer_id, const QString &rti_transaction_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  sub_contractor_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void deleteSubContractorTag(const QString &employer_id, const QString &sub_contractor_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  third_party_transaction_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void deleteThirdPartyTransactionTag(const QString &employer_id, const QString &third_party_transaction_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  user_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void deleteUserTag(const QString &user_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  sub_contractor_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getAllCisInstructionTags(const QString &employer_id, const QString &sub_contractor_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  sub_contractor_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getAllCisLineTags(const QString &employer_id, const QString &sub_contractor_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getAllCisLineTypeTags(const QString &employer_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getAllEmployeeTags(const QString &employer_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getAllEmployerTags(const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getAllHolidaySchemeTags(const QString &employer_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getAllJournalLineTags(const QString &employer_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getAllJournalLinesWithTag(const QString &employer_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getAllPayCodeTags(const QString &employer_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  employee_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getAllPayInstructionTags(const QString &employer_id, const QString &employee_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  employee_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getAllPayLineTags(const QString &employer_id, const QString &employee_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  pay_schedule_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getAllPayRunTags(const QString &employer_id, const QString &pay_schedule_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getAllPayScheduleTags(const QString &employer_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getAllPermissionTags(const QString &authorization, const QString &api_version);

    /**
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getAllPermissionsWithTag(const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getAllRtiTransactionTags(const QString &employer_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getAllSubContractorTags(const QString &employer_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getAllThirdPartyTransactionTags(const QString &employer_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getAllThirdPartyTransactionsWithTag(const QString &employer_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getAllUserTags(const QString &authorization, const QString &api_version);

    /**
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getAllUsersWithTag(const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  sub_contractor_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getCisInstructionsWithTag(const QString &employer_id, const QString &sub_contractor_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getCisLineTypesWithTag(const QString &employer_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  sub_contractor_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getCisLinesWithTag(const QString &employer_id, const QString &sub_contractor_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getEmployeesWithTag(const QString &employer_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getEmployersWithTag(const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getHolidaySchemesWithTag(const QString &employer_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getPayCodesWithTag(const QString &employer_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  employee_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getPayInstructionsWithTag(const QString &employer_id, const QString &employee_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  employee_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getPayLinesWithTag(const QString &employer_id, const QString &employee_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  pay_schedule_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getPayRunsWithTag(const QString &employer_id, const QString &pay_schedule_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getPaySchedulesWithTag(const QString &employer_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getRtiTransactionsWithTag(const QString &employer_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getSubContractorsWithTag(const QString &employer_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  sub_contractor_id QString [required]
    * @param[in]  cis_instruction_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagFromCisInstruction(const QString &employer_id, const QString &sub_contractor_id, const QString &cis_instruction_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  sub_contractor_id QString [required]
    * @param[in]  cis_line_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagFromCisLine(const QString &employer_id, const QString &sub_contractor_id, const QString &cis_line_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  cis_line_type_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagFromCisLineType(const QString &employer_id, const QString &cis_line_type_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  employee_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagFromEmployee(const QString &employer_id, const QString &employee_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  employee_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  effective_date QDate [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagFromEmployeeRevision(const QString &employer_id, const QString &employee_id, const QString &tag_id, const QDate &effective_date, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagFromEmployer(const QString &employer_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  effective_date QDate [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagFromEmployerRevision(const QString &employer_id, const QString &tag_id, const QDate &effective_date, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  holiday_scheme_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagFromHolidayScheme(const QString &employer_id, const QString &holiday_scheme_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  holiday_scheme_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  effective_date QDate [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagFromHolidaySchemeRevision(const QString &employer_id, const QString &holiday_scheme_id, const QString &tag_id, const QDate &effective_date, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  journal_line_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagFromJournalLine(const QString &employer_id, const QString &journal_line_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  pay_code_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagFromPayCode(const QString &employer_id, const QString &pay_code_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  employee_id QString [required]
    * @param[in]  pay_instruction_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagFromPayInstruction(const QString &employer_id, const QString &employee_id, const QString &pay_instruction_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  employee_id QString [required]
    * @param[in]  pay_line_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagFromPayLine(const QString &employer_id, const QString &employee_id, const QString &pay_line_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  pay_schedule_id QString [required]
    * @param[in]  pay_run_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagFromPayRun(const QString &employer_id, const QString &pay_schedule_id, const QString &pay_run_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  pay_schedule_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagFromPaySchedule(const QString &employer_id, const QString &pay_schedule_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  permission_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagFromPermission(const QString &permission_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  rti_transaction_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagFromRtiTransaction(const QString &employer_id, const QString &rti_transaction_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  sub_contractor_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagFromSubContractor(const QString &employer_id, const QString &sub_contractor_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  sub_contractor_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  effective_date QDate [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagFromSubContractorRevision(const QString &employer_id, const QString &sub_contractor_id, const QString &tag_id, const QDate &effective_date, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  third_party_transaction_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagFromThirdPartyTransaction(const QString &employer_id, const QString &third_party_transaction_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  user_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagFromUser(const QString &user_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  sub_contractor_id QString [required]
    * @param[in]  cis_instruction_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagsFromCisInstruction(const QString &employer_id, const QString &sub_contractor_id, const QString &cis_instruction_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  sub_contractor_id QString [required]
    * @param[in]  cis_line_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagsFromCisLine(const QString &employer_id, const QString &sub_contractor_id, const QString &cis_line_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  cis_line_type_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagsFromCisLineType(const QString &employer_id, const QString &cis_line_type_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  employee_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagsFromEmployee(const QString &employer_id, const QString &employee_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  employee_id QString [required]
    * @param[in]  effective_date QDate [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagsFromEmployeeRevision(const QString &employer_id, const QString &employee_id, const QDate &effective_date, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagsFromEmployer(const QString &employer_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  effective_date QDate [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagsFromEmployerRevision(const QString &employer_id, const QDate &effective_date, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  holiday_scheme_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagsFromHolidayScheme(const QString &employer_id, const QString &holiday_scheme_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  holiday_scheme_id QString [required]
    * @param[in]  effective_date QDate [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagsFromHolidaySchemeRevision(const QString &employer_id, const QString &holiday_scheme_id, const QDate &effective_date, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  journal_line_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagsFromJournalLine(const QString &employer_id, const QString &journal_line_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  pay_code_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagsFromPayCode(const QString &employer_id, const QString &pay_code_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  employee_id QString [required]
    * @param[in]  pay_instruction_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagsFromPayInstruction(const QString &employer_id, const QString &employee_id, const QString &pay_instruction_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  employee_id QString [required]
    * @param[in]  pay_line_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagsFromPayLine(const QString &employer_id, const QString &employee_id, const QString &pay_line_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  pay_schedule_id QString [required]
    * @param[in]  pay_run_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagsFromPayRun(const QString &employer_id, const QString &pay_schedule_id, const QString &pay_run_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  pay_schedule_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagsFromPaySchedule(const QString &employer_id, const QString &pay_schedule_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  permission_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagsFromPermission(const QString &permission_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  rti_transaction_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagsFromRtiTransaction(const QString &employer_id, const QString &rti_transaction_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  sub_contractor_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagsFromSubContractor(const QString &employer_id, const QString &sub_contractor_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  sub_contractor_id QString [required]
    * @param[in]  effective_date QDate [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagsFromSubContractorRevision(const QString &employer_id, const QString &sub_contractor_id, const QDate &effective_date, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  third_party_transaction_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagsFromThirdPartyTransaction(const QString &employer_id, const QString &third_party_transaction_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  user_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void getTagsFromUser(const QString &user_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  sub_contractor_id QString [required]
    * @param[in]  cis_instruction_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void putCisInstructionTag(const QString &employer_id, const QString &sub_contractor_id, const QString &cis_instruction_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  sub_contractor_id QString [required]
    * @param[in]  cis_line_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void putCisLineTag(const QString &employer_id, const QString &sub_contractor_id, const QString &cis_line_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  cis_line_type_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void putCisLineTypeTag(const QString &employer_id, const QString &cis_line_type_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  employee_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void putEmployeeTag(const QString &employer_id, const QString &employee_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void putEmployerTag(const QString &employer_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  holiday_scheme_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void putHolidaySchemeTag(const QString &employer_id, const QString &holiday_scheme_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  journal_line_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void putJournalLineTag(const QString &employer_id, const QString &journal_line_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  pay_code_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void putPayCodeTag(const QString &employer_id, const QString &pay_code_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  employee_id QString [required]
    * @param[in]  pay_instruction_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void putPayInstructionTag(const QString &employer_id, const QString &employee_id, const QString &pay_instruction_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  employee_id QString [required]
    * @param[in]  pay_line_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void putPayLineTag(const QString &employer_id, const QString &employee_id, const QString &pay_line_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  pay_schedule_id QString [required]
    * @param[in]  pay_run_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void putPayRunTag(const QString &employer_id, const QString &pay_schedule_id, const QString &pay_run_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  pay_schedule_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void putPayScheduleTag(const QString &employer_id, const QString &pay_schedule_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  permission_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void putPermissionTag(const QString &permission_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  rti_transaction_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void putRtiTransactionTag(const QString &employer_id, const QString &rti_transaction_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  sub_contractor_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void putSubContractorTag(const QString &employer_id, const QString &sub_contractor_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  employer_id QString [required]
    * @param[in]  third_party_transaction_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void putThirdPartyTransactionTag(const QString &employer_id, const QString &third_party_transaction_id, const QString &tag_id, const QString &authorization, const QString &api_version);

    /**
    * @param[in]  user_id QString [required]
    * @param[in]  tag_id QString [required]
    * @param[in]  authorization QString [required]
    * @param[in]  api_version QString [required]
    */
    virtual void putUserTag(const QString &user_id, const QString &tag_id, const QString &authorization, const QString &api_version);


private:
    QMap<QString,int> _serverIndices;
    QMap<QString,QList<OAIServerConfiguration>> _serverConfigs;
    QMap<QString, QString> _apiKeys;
    QString _bearerToken;
    QString _username;
    QString _password;
    int _timeOut;
    QString _workingDirectory;
    QNetworkAccessManager* _manager;
    QMap<QString, QString> _defaultHeaders;
    bool _isResponseCompressionEnabled;
    bool _isRequestCompressionEnabled;
    OAIHttpRequestInput _latestInput;
    OAIHttpRequestWorker *_latestWorker;
    QStringList _latestScope;
    OauthCode _authFlow;
    OauthImplicit _implicitFlow;
    OauthCredentials _credentialFlow;
    OauthPassword _passwordFlow;
    int _OauthMethod = 0;

    void deleteCisInstructionTagCallback(OAIHttpRequestWorker *worker);
    void deleteCisLineTagCallback(OAIHttpRequestWorker *worker);
    void deleteCisLineTypeTagCallback(OAIHttpRequestWorker *worker);
    void deleteEmployeeTagCallback(OAIHttpRequestWorker *worker);
    void deleteEmployerTagCallback(OAIHttpRequestWorker *worker);
    void deleteHolidaySchemeTagCallback(OAIHttpRequestWorker *worker);
    void deleteJournalLineTagCallback(OAIHttpRequestWorker *worker);
    void deletePayCodeTagCallback(OAIHttpRequestWorker *worker);
    void deletePayInstructionTagCallback(OAIHttpRequestWorker *worker);
    void deletePayLineTagCallback(OAIHttpRequestWorker *worker);
    void deletePayRunTagCallback(OAIHttpRequestWorker *worker);
    void deletePayScheduleTagCallback(OAIHttpRequestWorker *worker);
    void deletePermissionTagCallback(OAIHttpRequestWorker *worker);
    void deleteRtiTransactionTagCallback(OAIHttpRequestWorker *worker);
    void deleteSubContractorTagCallback(OAIHttpRequestWorker *worker);
    void deleteThirdPartyTransactionTagCallback(OAIHttpRequestWorker *worker);
    void deleteUserTagCallback(OAIHttpRequestWorker *worker);
    void getAllCisInstructionTagsCallback(OAIHttpRequestWorker *worker);
    void getAllCisLineTagsCallback(OAIHttpRequestWorker *worker);
    void getAllCisLineTypeTagsCallback(OAIHttpRequestWorker *worker);
    void getAllEmployeeTagsCallback(OAIHttpRequestWorker *worker);
    void getAllEmployerTagsCallback(OAIHttpRequestWorker *worker);
    void getAllHolidaySchemeTagsCallback(OAIHttpRequestWorker *worker);
    void getAllJournalLineTagsCallback(OAIHttpRequestWorker *worker);
    void getAllJournalLinesWithTagCallback(OAIHttpRequestWorker *worker);
    void getAllPayCodeTagsCallback(OAIHttpRequestWorker *worker);
    void getAllPayInstructionTagsCallback(OAIHttpRequestWorker *worker);
    void getAllPayLineTagsCallback(OAIHttpRequestWorker *worker);
    void getAllPayRunTagsCallback(OAIHttpRequestWorker *worker);
    void getAllPayScheduleTagsCallback(OAIHttpRequestWorker *worker);
    void getAllPermissionTagsCallback(OAIHttpRequestWorker *worker);
    void getAllPermissionsWithTagCallback(OAIHttpRequestWorker *worker);
    void getAllRtiTransactionTagsCallback(OAIHttpRequestWorker *worker);
    void getAllSubContractorTagsCallback(OAIHttpRequestWorker *worker);
    void getAllThirdPartyTransactionTagsCallback(OAIHttpRequestWorker *worker);
    void getAllThirdPartyTransactionsWithTagCallback(OAIHttpRequestWorker *worker);
    void getAllUserTagsCallback(OAIHttpRequestWorker *worker);
    void getAllUsersWithTagCallback(OAIHttpRequestWorker *worker);
    void getCisInstructionsWithTagCallback(OAIHttpRequestWorker *worker);
    void getCisLineTypesWithTagCallback(OAIHttpRequestWorker *worker);
    void getCisLinesWithTagCallback(OAIHttpRequestWorker *worker);
    void getEmployeesWithTagCallback(OAIHttpRequestWorker *worker);
    void getEmployersWithTagCallback(OAIHttpRequestWorker *worker);
    void getHolidaySchemesWithTagCallback(OAIHttpRequestWorker *worker);
    void getPayCodesWithTagCallback(OAIHttpRequestWorker *worker);
    void getPayInstructionsWithTagCallback(OAIHttpRequestWorker *worker);
    void getPayLinesWithTagCallback(OAIHttpRequestWorker *worker);
    void getPayRunsWithTagCallback(OAIHttpRequestWorker *worker);
    void getPaySchedulesWithTagCallback(OAIHttpRequestWorker *worker);
    void getRtiTransactionsWithTagCallback(OAIHttpRequestWorker *worker);
    void getSubContractorsWithTagCallback(OAIHttpRequestWorker *worker);
    void getTagFromCisInstructionCallback(OAIHttpRequestWorker *worker);
    void getTagFromCisLineCallback(OAIHttpRequestWorker *worker);
    void getTagFromCisLineTypeCallback(OAIHttpRequestWorker *worker);
    void getTagFromEmployeeCallback(OAIHttpRequestWorker *worker);
    void getTagFromEmployeeRevisionCallback(OAIHttpRequestWorker *worker);
    void getTagFromEmployerCallback(OAIHttpRequestWorker *worker);
    void getTagFromEmployerRevisionCallback(OAIHttpRequestWorker *worker);
    void getTagFromHolidaySchemeCallback(OAIHttpRequestWorker *worker);
    void getTagFromHolidaySchemeRevisionCallback(OAIHttpRequestWorker *worker);
    void getTagFromJournalLineCallback(OAIHttpRequestWorker *worker);
    void getTagFromPayCodeCallback(OAIHttpRequestWorker *worker);
    void getTagFromPayInstructionCallback(OAIHttpRequestWorker *worker);
    void getTagFromPayLineCallback(OAIHttpRequestWorker *worker);
    void getTagFromPayRunCallback(OAIHttpRequestWorker *worker);
    void getTagFromPayScheduleCallback(OAIHttpRequestWorker *worker);
    void getTagFromPermissionCallback(OAIHttpRequestWorker *worker);
    void getTagFromRtiTransactionCallback(OAIHttpRequestWorker *worker);
    void getTagFromSubContractorCallback(OAIHttpRequestWorker *worker);
    void getTagFromSubContractorRevisionCallback(OAIHttpRequestWorker *worker);
    void getTagFromThirdPartyTransactionCallback(OAIHttpRequestWorker *worker);
    void getTagFromUserCallback(OAIHttpRequestWorker *worker);
    void getTagsFromCisInstructionCallback(OAIHttpRequestWorker *worker);
    void getTagsFromCisLineCallback(OAIHttpRequestWorker *worker);
    void getTagsFromCisLineTypeCallback(OAIHttpRequestWorker *worker);
    void getTagsFromEmployeeCallback(OAIHttpRequestWorker *worker);
    void getTagsFromEmployeeRevisionCallback(OAIHttpRequestWorker *worker);
    void getTagsFromEmployerCallback(OAIHttpRequestWorker *worker);
    void getTagsFromEmployerRevisionCallback(OAIHttpRequestWorker *worker);
    void getTagsFromHolidaySchemeCallback(OAIHttpRequestWorker *worker);
    void getTagsFromHolidaySchemeRevisionCallback(OAIHttpRequestWorker *worker);
    void getTagsFromJournalLineCallback(OAIHttpRequestWorker *worker);
    void getTagsFromPayCodeCallback(OAIHttpRequestWorker *worker);
    void getTagsFromPayInstructionCallback(OAIHttpRequestWorker *worker);
    void getTagsFromPayLineCallback(OAIHttpRequestWorker *worker);
    void getTagsFromPayRunCallback(OAIHttpRequestWorker *worker);
    void getTagsFromPayScheduleCallback(OAIHttpRequestWorker *worker);
    void getTagsFromPermissionCallback(OAIHttpRequestWorker *worker);
    void getTagsFromRtiTransactionCallback(OAIHttpRequestWorker *worker);
    void getTagsFromSubContractorCallback(OAIHttpRequestWorker *worker);
    void getTagsFromSubContractorRevisionCallback(OAIHttpRequestWorker *worker);
    void getTagsFromThirdPartyTransactionCallback(OAIHttpRequestWorker *worker);
    void getTagsFromUserCallback(OAIHttpRequestWorker *worker);
    void putCisInstructionTagCallback(OAIHttpRequestWorker *worker);
    void putCisLineTagCallback(OAIHttpRequestWorker *worker);
    void putCisLineTypeTagCallback(OAIHttpRequestWorker *worker);
    void putEmployeeTagCallback(OAIHttpRequestWorker *worker);
    void putEmployerTagCallback(OAIHttpRequestWorker *worker);
    void putHolidaySchemeTagCallback(OAIHttpRequestWorker *worker);
    void putJournalLineTagCallback(OAIHttpRequestWorker *worker);
    void putPayCodeTagCallback(OAIHttpRequestWorker *worker);
    void putPayInstructionTagCallback(OAIHttpRequestWorker *worker);
    void putPayLineTagCallback(OAIHttpRequestWorker *worker);
    void putPayRunTagCallback(OAIHttpRequestWorker *worker);
    void putPayScheduleTagCallback(OAIHttpRequestWorker *worker);
    void putPermissionTagCallback(OAIHttpRequestWorker *worker);
    void putRtiTransactionTagCallback(OAIHttpRequestWorker *worker);
    void putSubContractorTagCallback(OAIHttpRequestWorker *worker);
    void putThirdPartyTransactionTagCallback(OAIHttpRequestWorker *worker);
    void putUserTagCallback(OAIHttpRequestWorker *worker);

Q_SIGNALS:

    void deleteCisInstructionTagSignal();
    void deleteCisLineTagSignal();
    void deleteCisLineTypeTagSignal();
    void deleteEmployeeTagSignal();
    void deleteEmployerTagSignal();
    void deleteHolidaySchemeTagSignal();
    void deleteJournalLineTagSignal();
    void deletePayCodeTagSignal();
    void deletePayInstructionTagSignal();
    void deletePayLineTagSignal();
    void deletePayRunTagSignal();
    void deletePayScheduleTagSignal();
    void deletePermissionTagSignal();
    void deleteRtiTransactionTagSignal();
    void deleteSubContractorTagSignal();
    void deleteThirdPartyTransactionTagSignal();
    void deleteUserTagSignal();
    void getAllCisInstructionTagsSignal(OAILinkCollection summary);
    void getAllCisLineTagsSignal(OAILinkCollection summary);
    void getAllCisLineTypeTagsSignal(OAILinkCollection summary);
    void getAllEmployeeTagsSignal(OAILinkCollection summary);
    void getAllEmployerTagsSignal(OAILinkCollection summary);
    void getAllHolidaySchemeTagsSignal(OAILinkCollection summary);
    void getAllJournalLineTagsSignal(OAILinkCollection summary);
    void getAllJournalLinesWithTagSignal(OAILinkCollection summary);
    void getAllPayCodeTagsSignal(OAILinkCollection summary);
    void getAllPayInstructionTagsSignal(OAILinkCollection summary);
    void getAllPayLineTagsSignal(OAILinkCollection summary);
    void getAllPayRunTagsSignal(OAILinkCollection summary);
    void getAllPayScheduleTagsSignal(OAILinkCollection summary);
    void getAllPermissionTagsSignal(OAILinkCollection summary);
    void getAllPermissionsWithTagSignal(OAILinkCollection summary);
    void getAllRtiTransactionTagsSignal(OAILinkCollection summary);
    void getAllSubContractorTagsSignal(OAILinkCollection summary);
    void getAllThirdPartyTransactionTagsSignal(OAILinkCollection summary);
    void getAllThirdPartyTransactionsWithTagSignal(OAILinkCollection summary);
    void getAllUserTagsSignal(OAILinkCollection summary);
    void getAllUsersWithTagSignal(OAILinkCollection summary);
    void getCisInstructionsWithTagSignal(OAILinkCollection summary);
    void getCisLineTypesWithTagSignal(OAILinkCollection summary);
    void getCisLinesWithTagSignal(OAILinkCollection summary);
    void getEmployeesWithTagSignal(OAILinkCollection summary);
    void getEmployersWithTagSignal(OAILinkCollection summary);
    void getHolidaySchemesWithTagSignal(OAILinkCollection summary);
    void getPayCodesWithTagSignal(OAILinkCollection summary);
    void getPayInstructionsWithTagSignal(OAILinkCollection summary);
    void getPayLinesWithTagSignal(OAILinkCollection summary);
    void getPayRunsWithTagSignal(OAILinkCollection summary);
    void getPaySchedulesWithTagSignal(OAILinkCollection summary);
    void getRtiTransactionsWithTagSignal(OAILinkCollection summary);
    void getSubContractorsWithTagSignal(OAILinkCollection summary);
    void getTagFromCisInstructionSignal(OAITag summary);
    void getTagFromCisLineSignal(OAITag summary);
    void getTagFromCisLineTypeSignal(OAITag summary);
    void getTagFromEmployeeSignal(OAITag summary);
    void getTagFromEmployeeRevisionSignal(OAITag summary);
    void getTagFromEmployerSignal(OAITag summary);
    void getTagFromEmployerRevisionSignal(OAITag summary);
    void getTagFromHolidaySchemeSignal(OAITag summary);
    void getTagFromHolidaySchemeRevisionSignal(OAITag summary);
    void getTagFromJournalLineSignal(OAITag summary);
    void getTagFromPayCodeSignal(OAITag summary);
    void getTagFromPayInstructionSignal(OAITag summary);
    void getTagFromPayLineSignal(OAITag summary);
    void getTagFromPayRunSignal(OAITag summary);
    void getTagFromPayScheduleSignal(OAITag summary);
    void getTagFromPermissionSignal(OAITag summary);
    void getTagFromRtiTransactionSignal(OAITag summary);
    void getTagFromSubContractorSignal(OAITag summary);
    void getTagFromSubContractorRevisionSignal(OAITag summary);
    void getTagFromThirdPartyTransactionSignal(OAITag summary);
    void getTagFromUserSignal(OAITag summary);
    void getTagsFromCisInstructionSignal(OAILinkCollection summary);
    void getTagsFromCisLineSignal(OAILinkCollection summary);
    void getTagsFromCisLineTypeSignal(OAILinkCollection summary);
    void getTagsFromEmployeeSignal(OAILinkCollection summary);
    void getTagsFromEmployeeRevisionSignal(OAILinkCollection summary);
    void getTagsFromEmployerSignal(OAILinkCollection summary);
    void getTagsFromEmployerRevisionSignal(OAILinkCollection summary);
    void getTagsFromHolidaySchemeSignal(OAILinkCollection summary);
    void getTagsFromHolidaySchemeRevisionSignal(OAILinkCollection summary);
    void getTagsFromJournalLineSignal(OAILinkCollection summary);
    void getTagsFromPayCodeSignal(OAILinkCollection summary);
    void getTagsFromPayInstructionSignal(OAILinkCollection summary);
    void getTagsFromPayLineSignal(OAILinkCollection summary);
    void getTagsFromPayRunSignal(OAILinkCollection summary);
    void getTagsFromPayScheduleSignal(OAILinkCollection summary);
    void getTagsFromPermissionSignal(OAILinkCollection summary);
    void getTagsFromRtiTransactionSignal(OAILinkCollection summary);
    void getTagsFromSubContractorSignal(OAILinkCollection summary);
    void getTagsFromSubContractorRevisionSignal(OAILinkCollection summary);
    void getTagsFromThirdPartyTransactionSignal(OAILinkCollection summary);
    void getTagsFromUserSignal(OAILinkCollection summary);
    void putCisInstructionTagSignal(OAITag summary);
    void putCisLineTagSignal(OAITag summary);
    void putCisLineTypeTagSignal(OAITag summary);
    void putEmployeeTagSignal(OAITag summary);
    void putEmployerTagSignal(OAITag summary);
    void putHolidaySchemeTagSignal(OAITag summary);
    void putJournalLineTagSignal(OAITag summary);
    void putPayCodeTagSignal(OAITag summary);
    void putPayInstructionTagSignal(OAITag summary);
    void putPayLineTagSignal(OAITag summary);
    void putPayRunTagSignal(OAITag summary);
    void putPayScheduleTagSignal(OAITag summary);
    void putPermissionTagSignal(OAITag summary);
    void putRtiTransactionTagSignal(OAITag summary);
    void putSubContractorTagSignal(OAITag summary);
    void putThirdPartyTransactionTagSignal(OAITag summary);
    void putUserTagSignal(OAITag summary);


    void deleteCisInstructionTagSignalFull(OAIHttpRequestWorker *worker);
    void deleteCisLineTagSignalFull(OAIHttpRequestWorker *worker);
    void deleteCisLineTypeTagSignalFull(OAIHttpRequestWorker *worker);
    void deleteEmployeeTagSignalFull(OAIHttpRequestWorker *worker);
    void deleteEmployerTagSignalFull(OAIHttpRequestWorker *worker);
    void deleteHolidaySchemeTagSignalFull(OAIHttpRequestWorker *worker);
    void deleteJournalLineTagSignalFull(OAIHttpRequestWorker *worker);
    void deletePayCodeTagSignalFull(OAIHttpRequestWorker *worker);
    void deletePayInstructionTagSignalFull(OAIHttpRequestWorker *worker);
    void deletePayLineTagSignalFull(OAIHttpRequestWorker *worker);
    void deletePayRunTagSignalFull(OAIHttpRequestWorker *worker);
    void deletePayScheduleTagSignalFull(OAIHttpRequestWorker *worker);
    void deletePermissionTagSignalFull(OAIHttpRequestWorker *worker);
    void deleteRtiTransactionTagSignalFull(OAIHttpRequestWorker *worker);
    void deleteSubContractorTagSignalFull(OAIHttpRequestWorker *worker);
    void deleteThirdPartyTransactionTagSignalFull(OAIHttpRequestWorker *worker);
    void deleteUserTagSignalFull(OAIHttpRequestWorker *worker);
    void getAllCisInstructionTagsSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getAllCisLineTagsSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getAllCisLineTypeTagsSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getAllEmployeeTagsSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getAllEmployerTagsSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getAllHolidaySchemeTagsSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getAllJournalLineTagsSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getAllJournalLinesWithTagSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getAllPayCodeTagsSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getAllPayInstructionTagsSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getAllPayLineTagsSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getAllPayRunTagsSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getAllPayScheduleTagsSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getAllPermissionTagsSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getAllPermissionsWithTagSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getAllRtiTransactionTagsSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getAllSubContractorTagsSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getAllThirdPartyTransactionTagsSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getAllThirdPartyTransactionsWithTagSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getAllUserTagsSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getAllUsersWithTagSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getCisInstructionsWithTagSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getCisLineTypesWithTagSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getCisLinesWithTagSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getEmployeesWithTagSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getEmployersWithTagSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getHolidaySchemesWithTagSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getPayCodesWithTagSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getPayInstructionsWithTagSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getPayLinesWithTagSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getPayRunsWithTagSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getPaySchedulesWithTagSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getRtiTransactionsWithTagSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getSubContractorsWithTagSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getTagFromCisInstructionSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void getTagFromCisLineSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void getTagFromCisLineTypeSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void getTagFromEmployeeSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void getTagFromEmployeeRevisionSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void getTagFromEmployerSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void getTagFromEmployerRevisionSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void getTagFromHolidaySchemeSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void getTagFromHolidaySchemeRevisionSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void getTagFromJournalLineSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void getTagFromPayCodeSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void getTagFromPayInstructionSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void getTagFromPayLineSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void getTagFromPayRunSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void getTagFromPayScheduleSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void getTagFromPermissionSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void getTagFromRtiTransactionSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void getTagFromSubContractorSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void getTagFromSubContractorRevisionSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void getTagFromThirdPartyTransactionSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void getTagFromUserSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void getTagsFromCisInstructionSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getTagsFromCisLineSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getTagsFromCisLineTypeSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getTagsFromEmployeeSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getTagsFromEmployeeRevisionSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getTagsFromEmployerSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getTagsFromEmployerRevisionSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getTagsFromHolidaySchemeSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getTagsFromHolidaySchemeRevisionSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getTagsFromJournalLineSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getTagsFromPayCodeSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getTagsFromPayInstructionSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getTagsFromPayLineSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getTagsFromPayRunSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getTagsFromPayScheduleSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getTagsFromPermissionSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getTagsFromRtiTransactionSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getTagsFromSubContractorSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getTagsFromSubContractorRevisionSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getTagsFromThirdPartyTransactionSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void getTagsFromUserSignalFull(OAIHttpRequestWorker *worker, OAILinkCollection summary);
    void putCisInstructionTagSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void putCisLineTagSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void putCisLineTypeTagSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void putEmployeeTagSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void putEmployerTagSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void putHolidaySchemeTagSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void putJournalLineTagSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void putPayCodeTagSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void putPayInstructionTagSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void putPayLineTagSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void putPayRunTagSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void putPayScheduleTagSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void putPermissionTagSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void putRtiTransactionTagSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void putSubContractorTagSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void putThirdPartyTransactionTagSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void putUserTagSignalFull(OAIHttpRequestWorker *worker, OAITag summary);

    Q_DECL_DEPRECATED_X("Use deleteCisInstructionTagSignalError() instead")
    void deleteCisInstructionTagSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteCisInstructionTagSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteCisLineTagSignalError() instead")
    void deleteCisLineTagSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteCisLineTagSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteCisLineTypeTagSignalError() instead")
    void deleteCisLineTypeTagSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteCisLineTypeTagSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteEmployeeTagSignalError() instead")
    void deleteEmployeeTagSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteEmployeeTagSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteEmployerTagSignalError() instead")
    void deleteEmployerTagSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteEmployerTagSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteHolidaySchemeTagSignalError() instead")
    void deleteHolidaySchemeTagSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteHolidaySchemeTagSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteJournalLineTagSignalError() instead")
    void deleteJournalLineTagSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteJournalLineTagSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deletePayCodeTagSignalError() instead")
    void deletePayCodeTagSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deletePayCodeTagSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deletePayInstructionTagSignalError() instead")
    void deletePayInstructionTagSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deletePayInstructionTagSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deletePayLineTagSignalError() instead")
    void deletePayLineTagSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deletePayLineTagSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deletePayRunTagSignalError() instead")
    void deletePayRunTagSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deletePayRunTagSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deletePayScheduleTagSignalError() instead")
    void deletePayScheduleTagSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deletePayScheduleTagSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deletePermissionTagSignalError() instead")
    void deletePermissionTagSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deletePermissionTagSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteRtiTransactionTagSignalError() instead")
    void deleteRtiTransactionTagSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteRtiTransactionTagSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteSubContractorTagSignalError() instead")
    void deleteSubContractorTagSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteSubContractorTagSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteThirdPartyTransactionTagSignalError() instead")
    void deleteThirdPartyTransactionTagSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteThirdPartyTransactionTagSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteUserTagSignalError() instead")
    void deleteUserTagSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteUserTagSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllCisInstructionTagsSignalError() instead")
    void getAllCisInstructionTagsSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllCisInstructionTagsSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllCisLineTagsSignalError() instead")
    void getAllCisLineTagsSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllCisLineTagsSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllCisLineTypeTagsSignalError() instead")
    void getAllCisLineTypeTagsSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllCisLineTypeTagsSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllEmployeeTagsSignalError() instead")
    void getAllEmployeeTagsSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllEmployeeTagsSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllEmployerTagsSignalError() instead")
    void getAllEmployerTagsSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllEmployerTagsSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllHolidaySchemeTagsSignalError() instead")
    void getAllHolidaySchemeTagsSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllHolidaySchemeTagsSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllJournalLineTagsSignalError() instead")
    void getAllJournalLineTagsSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllJournalLineTagsSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllJournalLinesWithTagSignalError() instead")
    void getAllJournalLinesWithTagSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllJournalLinesWithTagSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllPayCodeTagsSignalError() instead")
    void getAllPayCodeTagsSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllPayCodeTagsSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllPayInstructionTagsSignalError() instead")
    void getAllPayInstructionTagsSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllPayInstructionTagsSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllPayLineTagsSignalError() instead")
    void getAllPayLineTagsSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllPayLineTagsSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllPayRunTagsSignalError() instead")
    void getAllPayRunTagsSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllPayRunTagsSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllPayScheduleTagsSignalError() instead")
    void getAllPayScheduleTagsSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllPayScheduleTagsSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllPermissionTagsSignalError() instead")
    void getAllPermissionTagsSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllPermissionTagsSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllPermissionsWithTagSignalError() instead")
    void getAllPermissionsWithTagSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllPermissionsWithTagSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllRtiTransactionTagsSignalError() instead")
    void getAllRtiTransactionTagsSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllRtiTransactionTagsSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllSubContractorTagsSignalError() instead")
    void getAllSubContractorTagsSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllSubContractorTagsSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllThirdPartyTransactionTagsSignalError() instead")
    void getAllThirdPartyTransactionTagsSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllThirdPartyTransactionTagsSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllThirdPartyTransactionsWithTagSignalError() instead")
    void getAllThirdPartyTransactionsWithTagSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllThirdPartyTransactionsWithTagSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllUserTagsSignalError() instead")
    void getAllUserTagsSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllUserTagsSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllUsersWithTagSignalError() instead")
    void getAllUsersWithTagSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllUsersWithTagSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCisInstructionsWithTagSignalError() instead")
    void getCisInstructionsWithTagSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getCisInstructionsWithTagSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCisLineTypesWithTagSignalError() instead")
    void getCisLineTypesWithTagSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getCisLineTypesWithTagSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCisLinesWithTagSignalError() instead")
    void getCisLinesWithTagSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getCisLinesWithTagSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getEmployeesWithTagSignalError() instead")
    void getEmployeesWithTagSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getEmployeesWithTagSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getEmployersWithTagSignalError() instead")
    void getEmployersWithTagSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getEmployersWithTagSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getHolidaySchemesWithTagSignalError() instead")
    void getHolidaySchemesWithTagSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getHolidaySchemesWithTagSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getPayCodesWithTagSignalError() instead")
    void getPayCodesWithTagSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getPayCodesWithTagSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getPayInstructionsWithTagSignalError() instead")
    void getPayInstructionsWithTagSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getPayInstructionsWithTagSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getPayLinesWithTagSignalError() instead")
    void getPayLinesWithTagSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getPayLinesWithTagSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getPayRunsWithTagSignalError() instead")
    void getPayRunsWithTagSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getPayRunsWithTagSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getPaySchedulesWithTagSignalError() instead")
    void getPaySchedulesWithTagSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getPaySchedulesWithTagSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getRtiTransactionsWithTagSignalError() instead")
    void getRtiTransactionsWithTagSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getRtiTransactionsWithTagSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSubContractorsWithTagSignalError() instead")
    void getSubContractorsWithTagSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getSubContractorsWithTagSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromCisInstructionSignalError() instead")
    void getTagFromCisInstructionSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromCisInstructionSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromCisLineSignalError() instead")
    void getTagFromCisLineSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromCisLineSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromCisLineTypeSignalError() instead")
    void getTagFromCisLineTypeSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromCisLineTypeSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromEmployeeSignalError() instead")
    void getTagFromEmployeeSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromEmployeeSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromEmployeeRevisionSignalError() instead")
    void getTagFromEmployeeRevisionSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromEmployeeRevisionSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromEmployerSignalError() instead")
    void getTagFromEmployerSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromEmployerSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromEmployerRevisionSignalError() instead")
    void getTagFromEmployerRevisionSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromEmployerRevisionSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromHolidaySchemeSignalError() instead")
    void getTagFromHolidaySchemeSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromHolidaySchemeSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromHolidaySchemeRevisionSignalError() instead")
    void getTagFromHolidaySchemeRevisionSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromHolidaySchemeRevisionSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromJournalLineSignalError() instead")
    void getTagFromJournalLineSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromJournalLineSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromPayCodeSignalError() instead")
    void getTagFromPayCodeSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromPayCodeSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromPayInstructionSignalError() instead")
    void getTagFromPayInstructionSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromPayInstructionSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromPayLineSignalError() instead")
    void getTagFromPayLineSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromPayLineSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromPayRunSignalError() instead")
    void getTagFromPayRunSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromPayRunSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromPayScheduleSignalError() instead")
    void getTagFromPayScheduleSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromPayScheduleSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromPermissionSignalError() instead")
    void getTagFromPermissionSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromPermissionSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromRtiTransactionSignalError() instead")
    void getTagFromRtiTransactionSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromRtiTransactionSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromSubContractorSignalError() instead")
    void getTagFromSubContractorSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromSubContractorSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromSubContractorRevisionSignalError() instead")
    void getTagFromSubContractorRevisionSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromSubContractorRevisionSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromThirdPartyTransactionSignalError() instead")
    void getTagFromThirdPartyTransactionSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromThirdPartyTransactionSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromUserSignalError() instead")
    void getTagFromUserSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromUserSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromCisInstructionSignalError() instead")
    void getTagsFromCisInstructionSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromCisInstructionSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromCisLineSignalError() instead")
    void getTagsFromCisLineSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromCisLineSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromCisLineTypeSignalError() instead")
    void getTagsFromCisLineTypeSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromCisLineTypeSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromEmployeeSignalError() instead")
    void getTagsFromEmployeeSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromEmployeeSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromEmployeeRevisionSignalError() instead")
    void getTagsFromEmployeeRevisionSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromEmployeeRevisionSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromEmployerSignalError() instead")
    void getTagsFromEmployerSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromEmployerSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromEmployerRevisionSignalError() instead")
    void getTagsFromEmployerRevisionSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromEmployerRevisionSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromHolidaySchemeSignalError() instead")
    void getTagsFromHolidaySchemeSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromHolidaySchemeSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromHolidaySchemeRevisionSignalError() instead")
    void getTagsFromHolidaySchemeRevisionSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromHolidaySchemeRevisionSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromJournalLineSignalError() instead")
    void getTagsFromJournalLineSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromJournalLineSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromPayCodeSignalError() instead")
    void getTagsFromPayCodeSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromPayCodeSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromPayInstructionSignalError() instead")
    void getTagsFromPayInstructionSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromPayInstructionSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromPayLineSignalError() instead")
    void getTagsFromPayLineSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromPayLineSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromPayRunSignalError() instead")
    void getTagsFromPayRunSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromPayRunSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromPayScheduleSignalError() instead")
    void getTagsFromPayScheduleSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromPayScheduleSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromPermissionSignalError() instead")
    void getTagsFromPermissionSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromPermissionSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromRtiTransactionSignalError() instead")
    void getTagsFromRtiTransactionSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromRtiTransactionSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromSubContractorSignalError() instead")
    void getTagsFromSubContractorSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromSubContractorSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromSubContractorRevisionSignalError() instead")
    void getTagsFromSubContractorRevisionSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromSubContractorRevisionSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromThirdPartyTransactionSignalError() instead")
    void getTagsFromThirdPartyTransactionSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromThirdPartyTransactionSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromUserSignalError() instead")
    void getTagsFromUserSignalE(OAILinkCollection summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromUserSignalError(OAILinkCollection summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putCisInstructionTagSignalError() instead")
    void putCisInstructionTagSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void putCisInstructionTagSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putCisLineTagSignalError() instead")
    void putCisLineTagSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void putCisLineTagSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putCisLineTypeTagSignalError() instead")
    void putCisLineTypeTagSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void putCisLineTypeTagSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putEmployeeTagSignalError() instead")
    void putEmployeeTagSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void putEmployeeTagSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putEmployerTagSignalError() instead")
    void putEmployerTagSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void putEmployerTagSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putHolidaySchemeTagSignalError() instead")
    void putHolidaySchemeTagSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void putHolidaySchemeTagSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putJournalLineTagSignalError() instead")
    void putJournalLineTagSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void putJournalLineTagSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putPayCodeTagSignalError() instead")
    void putPayCodeTagSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void putPayCodeTagSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putPayInstructionTagSignalError() instead")
    void putPayInstructionTagSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void putPayInstructionTagSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putPayLineTagSignalError() instead")
    void putPayLineTagSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void putPayLineTagSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putPayRunTagSignalError() instead")
    void putPayRunTagSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void putPayRunTagSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putPayScheduleTagSignalError() instead")
    void putPayScheduleTagSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void putPayScheduleTagSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putPermissionTagSignalError() instead")
    void putPermissionTagSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void putPermissionTagSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putRtiTransactionTagSignalError() instead")
    void putRtiTransactionTagSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void putRtiTransactionTagSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putSubContractorTagSignalError() instead")
    void putSubContractorTagSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void putSubContractorTagSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putThirdPartyTransactionTagSignalError() instead")
    void putThirdPartyTransactionTagSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void putThirdPartyTransactionTagSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putUserTagSignalError() instead")
    void putUserTagSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void putUserTagSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);

    Q_DECL_DEPRECATED_X("Use deleteCisInstructionTagSignalErrorFull() instead")
    void deleteCisInstructionTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteCisInstructionTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteCisLineTagSignalErrorFull() instead")
    void deleteCisLineTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteCisLineTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteCisLineTypeTagSignalErrorFull() instead")
    void deleteCisLineTypeTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteCisLineTypeTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteEmployeeTagSignalErrorFull() instead")
    void deleteEmployeeTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteEmployeeTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteEmployerTagSignalErrorFull() instead")
    void deleteEmployerTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteEmployerTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteHolidaySchemeTagSignalErrorFull() instead")
    void deleteHolidaySchemeTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteHolidaySchemeTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteJournalLineTagSignalErrorFull() instead")
    void deleteJournalLineTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteJournalLineTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deletePayCodeTagSignalErrorFull() instead")
    void deletePayCodeTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deletePayCodeTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deletePayInstructionTagSignalErrorFull() instead")
    void deletePayInstructionTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deletePayInstructionTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deletePayLineTagSignalErrorFull() instead")
    void deletePayLineTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deletePayLineTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deletePayRunTagSignalErrorFull() instead")
    void deletePayRunTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deletePayRunTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deletePayScheduleTagSignalErrorFull() instead")
    void deletePayScheduleTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deletePayScheduleTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deletePermissionTagSignalErrorFull() instead")
    void deletePermissionTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deletePermissionTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteRtiTransactionTagSignalErrorFull() instead")
    void deleteRtiTransactionTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteRtiTransactionTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteSubContractorTagSignalErrorFull() instead")
    void deleteSubContractorTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteSubContractorTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteThirdPartyTransactionTagSignalErrorFull() instead")
    void deleteThirdPartyTransactionTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteThirdPartyTransactionTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteUserTagSignalErrorFull() instead")
    void deleteUserTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteUserTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllCisInstructionTagsSignalErrorFull() instead")
    void getAllCisInstructionTagsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllCisInstructionTagsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllCisLineTagsSignalErrorFull() instead")
    void getAllCisLineTagsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllCisLineTagsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllCisLineTypeTagsSignalErrorFull() instead")
    void getAllCisLineTypeTagsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllCisLineTypeTagsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllEmployeeTagsSignalErrorFull() instead")
    void getAllEmployeeTagsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllEmployeeTagsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllEmployerTagsSignalErrorFull() instead")
    void getAllEmployerTagsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllEmployerTagsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllHolidaySchemeTagsSignalErrorFull() instead")
    void getAllHolidaySchemeTagsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllHolidaySchemeTagsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllJournalLineTagsSignalErrorFull() instead")
    void getAllJournalLineTagsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllJournalLineTagsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllJournalLinesWithTagSignalErrorFull() instead")
    void getAllJournalLinesWithTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllJournalLinesWithTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllPayCodeTagsSignalErrorFull() instead")
    void getAllPayCodeTagsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllPayCodeTagsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllPayInstructionTagsSignalErrorFull() instead")
    void getAllPayInstructionTagsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllPayInstructionTagsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllPayLineTagsSignalErrorFull() instead")
    void getAllPayLineTagsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllPayLineTagsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllPayRunTagsSignalErrorFull() instead")
    void getAllPayRunTagsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllPayRunTagsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllPayScheduleTagsSignalErrorFull() instead")
    void getAllPayScheduleTagsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllPayScheduleTagsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllPermissionTagsSignalErrorFull() instead")
    void getAllPermissionTagsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllPermissionTagsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllPermissionsWithTagSignalErrorFull() instead")
    void getAllPermissionsWithTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllPermissionsWithTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllRtiTransactionTagsSignalErrorFull() instead")
    void getAllRtiTransactionTagsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllRtiTransactionTagsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllSubContractorTagsSignalErrorFull() instead")
    void getAllSubContractorTagsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllSubContractorTagsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllThirdPartyTransactionTagsSignalErrorFull() instead")
    void getAllThirdPartyTransactionTagsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllThirdPartyTransactionTagsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllThirdPartyTransactionsWithTagSignalErrorFull() instead")
    void getAllThirdPartyTransactionsWithTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllThirdPartyTransactionsWithTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllUserTagsSignalErrorFull() instead")
    void getAllUserTagsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllUserTagsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getAllUsersWithTagSignalErrorFull() instead")
    void getAllUsersWithTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getAllUsersWithTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCisInstructionsWithTagSignalErrorFull() instead")
    void getCisInstructionsWithTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getCisInstructionsWithTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCisLineTypesWithTagSignalErrorFull() instead")
    void getCisLineTypesWithTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getCisLineTypesWithTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCisLinesWithTagSignalErrorFull() instead")
    void getCisLinesWithTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getCisLinesWithTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getEmployeesWithTagSignalErrorFull() instead")
    void getEmployeesWithTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getEmployeesWithTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getEmployersWithTagSignalErrorFull() instead")
    void getEmployersWithTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getEmployersWithTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getHolidaySchemesWithTagSignalErrorFull() instead")
    void getHolidaySchemesWithTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getHolidaySchemesWithTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getPayCodesWithTagSignalErrorFull() instead")
    void getPayCodesWithTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getPayCodesWithTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getPayInstructionsWithTagSignalErrorFull() instead")
    void getPayInstructionsWithTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getPayInstructionsWithTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getPayLinesWithTagSignalErrorFull() instead")
    void getPayLinesWithTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getPayLinesWithTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getPayRunsWithTagSignalErrorFull() instead")
    void getPayRunsWithTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getPayRunsWithTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getPaySchedulesWithTagSignalErrorFull() instead")
    void getPaySchedulesWithTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getPaySchedulesWithTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getRtiTransactionsWithTagSignalErrorFull() instead")
    void getRtiTransactionsWithTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getRtiTransactionsWithTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getSubContractorsWithTagSignalErrorFull() instead")
    void getSubContractorsWithTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getSubContractorsWithTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromCisInstructionSignalErrorFull() instead")
    void getTagFromCisInstructionSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromCisInstructionSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromCisLineSignalErrorFull() instead")
    void getTagFromCisLineSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromCisLineSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromCisLineTypeSignalErrorFull() instead")
    void getTagFromCisLineTypeSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromCisLineTypeSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromEmployeeSignalErrorFull() instead")
    void getTagFromEmployeeSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromEmployeeSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromEmployeeRevisionSignalErrorFull() instead")
    void getTagFromEmployeeRevisionSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromEmployeeRevisionSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromEmployerSignalErrorFull() instead")
    void getTagFromEmployerSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromEmployerSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromEmployerRevisionSignalErrorFull() instead")
    void getTagFromEmployerRevisionSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromEmployerRevisionSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromHolidaySchemeSignalErrorFull() instead")
    void getTagFromHolidaySchemeSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromHolidaySchemeSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromHolidaySchemeRevisionSignalErrorFull() instead")
    void getTagFromHolidaySchemeRevisionSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromHolidaySchemeRevisionSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromJournalLineSignalErrorFull() instead")
    void getTagFromJournalLineSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromJournalLineSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromPayCodeSignalErrorFull() instead")
    void getTagFromPayCodeSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromPayCodeSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromPayInstructionSignalErrorFull() instead")
    void getTagFromPayInstructionSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromPayInstructionSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromPayLineSignalErrorFull() instead")
    void getTagFromPayLineSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromPayLineSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromPayRunSignalErrorFull() instead")
    void getTagFromPayRunSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromPayRunSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromPayScheduleSignalErrorFull() instead")
    void getTagFromPayScheduleSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromPayScheduleSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromPermissionSignalErrorFull() instead")
    void getTagFromPermissionSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromPermissionSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromRtiTransactionSignalErrorFull() instead")
    void getTagFromRtiTransactionSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromRtiTransactionSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromSubContractorSignalErrorFull() instead")
    void getTagFromSubContractorSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromSubContractorSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromSubContractorRevisionSignalErrorFull() instead")
    void getTagFromSubContractorRevisionSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromSubContractorRevisionSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromThirdPartyTransactionSignalErrorFull() instead")
    void getTagFromThirdPartyTransactionSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromThirdPartyTransactionSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagFromUserSignalErrorFull() instead")
    void getTagFromUserSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagFromUserSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromCisInstructionSignalErrorFull() instead")
    void getTagsFromCisInstructionSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromCisInstructionSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromCisLineSignalErrorFull() instead")
    void getTagsFromCisLineSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromCisLineSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromCisLineTypeSignalErrorFull() instead")
    void getTagsFromCisLineTypeSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromCisLineTypeSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromEmployeeSignalErrorFull() instead")
    void getTagsFromEmployeeSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromEmployeeSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromEmployeeRevisionSignalErrorFull() instead")
    void getTagsFromEmployeeRevisionSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromEmployeeRevisionSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromEmployerSignalErrorFull() instead")
    void getTagsFromEmployerSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromEmployerSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromEmployerRevisionSignalErrorFull() instead")
    void getTagsFromEmployerRevisionSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromEmployerRevisionSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromHolidaySchemeSignalErrorFull() instead")
    void getTagsFromHolidaySchemeSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromHolidaySchemeSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromHolidaySchemeRevisionSignalErrorFull() instead")
    void getTagsFromHolidaySchemeRevisionSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromHolidaySchemeRevisionSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromJournalLineSignalErrorFull() instead")
    void getTagsFromJournalLineSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromJournalLineSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromPayCodeSignalErrorFull() instead")
    void getTagsFromPayCodeSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromPayCodeSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromPayInstructionSignalErrorFull() instead")
    void getTagsFromPayInstructionSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromPayInstructionSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromPayLineSignalErrorFull() instead")
    void getTagsFromPayLineSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromPayLineSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromPayRunSignalErrorFull() instead")
    void getTagsFromPayRunSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromPayRunSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromPayScheduleSignalErrorFull() instead")
    void getTagsFromPayScheduleSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromPayScheduleSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromPermissionSignalErrorFull() instead")
    void getTagsFromPermissionSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromPermissionSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromRtiTransactionSignalErrorFull() instead")
    void getTagsFromRtiTransactionSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromRtiTransactionSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromSubContractorSignalErrorFull() instead")
    void getTagsFromSubContractorSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromSubContractorSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromSubContractorRevisionSignalErrorFull() instead")
    void getTagsFromSubContractorRevisionSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromSubContractorRevisionSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromThirdPartyTransactionSignalErrorFull() instead")
    void getTagsFromThirdPartyTransactionSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromThirdPartyTransactionSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTagsFromUserSignalErrorFull() instead")
    void getTagsFromUserSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTagsFromUserSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putCisInstructionTagSignalErrorFull() instead")
    void putCisInstructionTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void putCisInstructionTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putCisLineTagSignalErrorFull() instead")
    void putCisLineTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void putCisLineTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putCisLineTypeTagSignalErrorFull() instead")
    void putCisLineTypeTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void putCisLineTypeTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putEmployeeTagSignalErrorFull() instead")
    void putEmployeeTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void putEmployeeTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putEmployerTagSignalErrorFull() instead")
    void putEmployerTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void putEmployerTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putHolidaySchemeTagSignalErrorFull() instead")
    void putHolidaySchemeTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void putHolidaySchemeTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putJournalLineTagSignalErrorFull() instead")
    void putJournalLineTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void putJournalLineTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putPayCodeTagSignalErrorFull() instead")
    void putPayCodeTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void putPayCodeTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putPayInstructionTagSignalErrorFull() instead")
    void putPayInstructionTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void putPayInstructionTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putPayLineTagSignalErrorFull() instead")
    void putPayLineTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void putPayLineTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putPayRunTagSignalErrorFull() instead")
    void putPayRunTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void putPayRunTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putPayScheduleTagSignalErrorFull() instead")
    void putPayScheduleTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void putPayScheduleTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putPermissionTagSignalErrorFull() instead")
    void putPermissionTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void putPermissionTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putRtiTransactionTagSignalErrorFull() instead")
    void putRtiTransactionTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void putRtiTransactionTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putSubContractorTagSignalErrorFull() instead")
    void putSubContractorTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void putSubContractorTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putThirdPartyTransactionTagSignalErrorFull() instead")
    void putThirdPartyTransactionTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void putThirdPartyTransactionTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use putUserTagSignalErrorFull() instead")
    void putUserTagSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void putUserTagSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);

    void abortRequestsSignal();
    void allPendingRequestsCompleted();

public Q_SLOTS:
    void tokenAvailable();
};

} // namespace OpenAPI
#endif
