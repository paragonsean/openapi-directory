/**
 * PayRun.IO
 * Open, scableable, transparent payroll API.
 *
 * The version of the OpenAPI document: 23.24.2.136
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDpsMessage_1.h
 *
 * 
 */

#ifndef OAIDpsMessage_1_H
#define OAIDpsMessage_1_H

#include <QJsonObject>

#include <QDate>
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDpsMessage_1 : public OAIObject {
public:
    OAIDpsMessage_1();
    OAIDpsMessage_1(QString json);
    ~OAIDpsMessage_1() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFormType() const;
    void setFormType(const QString &form_type);
    bool is_form_type_Set() const;
    bool is_form_type_Valid() const;

    QDate getIssueDate() const;
    void setIssueDate(const QDate &issue_date);
    bool is_issue_date_Set() const;
    bool is_issue_date_Valid() const;

    QDateTime getLastUpdated() const;
    void setLastUpdated(const QDateTime &last_updated);
    bool is_last_updated_Set() const;
    bool is_last_updated_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QString getMessageStatus() const;
    void setMessageStatus(const QString &message_status);
    bool is_message_status_Set() const;
    bool is_message_status_Valid() const;

    QString getMessageType() const;
    void setMessageType(const QString &message_type);
    bool is_message_type_Set() const;
    bool is_message_type_Valid() const;

    QString getProcessingResult() const;
    void setProcessingResult(const QString &processing_result);
    bool is_processing_result_Set() const;
    bool is_processing_result_Valid() const;

    QDateTime getRetrieveDate() const;
    void setRetrieveDate(const QDateTime &retrieve_date);
    bool is_retrieve_date_Set() const;
    bool is_retrieve_date_Valid() const;

    qint32 getSequenceNumber() const;
    void setSequenceNumber(const qint32 &sequence_number);
    bool is_sequence_number_Set() const;
    bool is_sequence_number_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_form_type;
    bool m_form_type_isSet;
    bool m_form_type_isValid;

    QDate m_issue_date;
    bool m_issue_date_isSet;
    bool m_issue_date_isValid;

    QDateTime m_last_updated;
    bool m_last_updated_isSet;
    bool m_last_updated_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QString m_message_status;
    bool m_message_status_isSet;
    bool m_message_status_isValid;

    QString m_message_type;
    bool m_message_type_isSet;
    bool m_message_type_isValid;

    QString m_processing_result;
    bool m_processing_result_isSet;
    bool m_processing_result_isValid;

    QDateTime m_retrieve_date;
    bool m_retrieve_date_isSet;
    bool m_retrieve_date_isValid;

    qint32 m_sequence_number;
    bool m_sequence_number_isSet;
    bool m_sequence_number_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDpsMessage_1)

#endif // OAIDpsMessage_1_H
