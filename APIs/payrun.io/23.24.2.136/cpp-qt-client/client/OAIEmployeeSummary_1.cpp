/**
 * PayRun.IO
 * Open, scableable, transparent payroll API.
 *
 * The version of the OpenAPI document: 23.24.2.136
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEmployeeSummary_1.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEmployeeSummary_1::OAIEmployeeSummary_1(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEmployeeSummary_1::OAIEmployeeSummary_1() {
    this->initializeModel();
}

OAIEmployeeSummary_1::~OAIEmployeeSummary_1() {}

void OAIEmployeeSummary_1::initializeModel() {

    m_code_isSet = false;
    m_code_isValid = false;

    m_effective_date_isSet = false;
    m_effective_date_isValid = false;

    m_employee_link_isSet = false;
    m_employee_link_isValid = false;

    m_employer_link_isSet = false;
    m_employer_link_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_initials_isSet = false;
    m_initials_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_last_pay_day_isSet = false;
    m_last_pay_day_isValid = false;

    m_last_pay_day_schedule_isSet = false;
    m_last_pay_day_schedule_isValid = false;

    m_last_pay_day_tax_year_isSet = false;
    m_last_pay_day_tax_year_isValid = false;

    m_leaving_date_isSet = false;
    m_leaving_date_isValid = false;

    m_meta_data_isSet = false;
    m_meta_data_isValid = false;

    m_next_pay_day_isSet = false;
    m_next_pay_day_isValid = false;

    m_next_revision_date_isSet = false;
    m_next_revision_date_isValid = false;

    m_ni_letter_isSet = false;
    m_ni_letter_isValid = false;

    m_ni_number_isSet = false;
    m_ni_number_isValid = false;

    m_pay_schedule_link_isSet = false;
    m_pay_schedule_link_isValid = false;

    m_pay_schedule_name_isSet = false;
    m_pay_schedule_name_isValid = false;

    m_revision_isSet = false;
    m_revision_isValid = false;

    m_start_date_isSet = false;
    m_start_date_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_tax_basis_isSet = false;
    m_tax_basis_isValid = false;

    m_tax_code_isSet = false;
    m_tax_code_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;

    m_unique_key_isSet = false;
    m_unique_key_isValid = false;
}

void OAIEmployeeSummary_1::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEmployeeSummary_1::fromJsonObject(QJsonObject json) {

    m_code_isValid = ::OpenAPI::fromJsonValue(m_code, json[QString("Code")]);
    m_code_isSet = !json[QString("Code")].isNull() && m_code_isValid;

    m_effective_date_isValid = ::OpenAPI::fromJsonValue(m_effective_date, json[QString("EffectiveDate")]);
    m_effective_date_isSet = !json[QString("EffectiveDate")].isNull() && m_effective_date_isValid;

    m_employee_link_isValid = ::OpenAPI::fromJsonValue(m_employee_link, json[QString("EmployeeLink")]);
    m_employee_link_isSet = !json[QString("EmployeeLink")].isNull() && m_employee_link_isValid;

    m_employer_link_isValid = ::OpenAPI::fromJsonValue(m_employer_link, json[QString("EmployerLink")]);
    m_employer_link_isSet = !json[QString("EmployerLink")].isNull() && m_employer_link_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("FirstName")]);
    m_first_name_isSet = !json[QString("FirstName")].isNull() && m_first_name_isValid;

    m_initials_isValid = ::OpenAPI::fromJsonValue(m_initials, json[QString("Initials")]);
    m_initials_isSet = !json[QString("Initials")].isNull() && m_initials_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("LastName")]);
    m_last_name_isSet = !json[QString("LastName")].isNull() && m_last_name_isValid;

    m_last_pay_day_isValid = ::OpenAPI::fromJsonValue(m_last_pay_day, json[QString("LastPayDay")]);
    m_last_pay_day_isSet = !json[QString("LastPayDay")].isNull() && m_last_pay_day_isValid;

    m_last_pay_day_schedule_isValid = ::OpenAPI::fromJsonValue(m_last_pay_day_schedule, json[QString("LastPayDaySchedule")]);
    m_last_pay_day_schedule_isSet = !json[QString("LastPayDaySchedule")].isNull() && m_last_pay_day_schedule_isValid;

    m_last_pay_day_tax_year_isValid = ::OpenAPI::fromJsonValue(m_last_pay_day_tax_year, json[QString("LastPayDayTaxYear")]);
    m_last_pay_day_tax_year_isSet = !json[QString("LastPayDayTaxYear")].isNull() && m_last_pay_day_tax_year_isValid;

    m_leaving_date_isValid = ::OpenAPI::fromJsonValue(m_leaving_date, json[QString("LeavingDate")]);
    m_leaving_date_isSet = !json[QString("LeavingDate")].isNull() && m_leaving_date_isValid;

    m_meta_data_isValid = ::OpenAPI::fromJsonValue(m_meta_data, json[QString("MetaData")]);
    m_meta_data_isSet = !json[QString("MetaData")].isNull() && m_meta_data_isValid;

    m_next_pay_day_isValid = ::OpenAPI::fromJsonValue(m_next_pay_day, json[QString("NextPayDay")]);
    m_next_pay_day_isSet = !json[QString("NextPayDay")].isNull() && m_next_pay_day_isValid;

    m_next_revision_date_isValid = ::OpenAPI::fromJsonValue(m_next_revision_date, json[QString("NextRevisionDate")]);
    m_next_revision_date_isSet = !json[QString("NextRevisionDate")].isNull() && m_next_revision_date_isValid;

    m_ni_letter_isValid = ::OpenAPI::fromJsonValue(m_ni_letter, json[QString("NiLetter")]);
    m_ni_letter_isSet = !json[QString("NiLetter")].isNull() && m_ni_letter_isValid;

    m_ni_number_isValid = ::OpenAPI::fromJsonValue(m_ni_number, json[QString("NiNumber")]);
    m_ni_number_isSet = !json[QString("NiNumber")].isNull() && m_ni_number_isValid;

    m_pay_schedule_link_isValid = ::OpenAPI::fromJsonValue(m_pay_schedule_link, json[QString("PayScheduleLink")]);
    m_pay_schedule_link_isSet = !json[QString("PayScheduleLink")].isNull() && m_pay_schedule_link_isValid;

    m_pay_schedule_name_isValid = ::OpenAPI::fromJsonValue(m_pay_schedule_name, json[QString("PayScheduleName")]);
    m_pay_schedule_name_isSet = !json[QString("PayScheduleName")].isNull() && m_pay_schedule_name_isValid;

    m_revision_isValid = ::OpenAPI::fromJsonValue(m_revision, json[QString("Revision")]);
    m_revision_isSet = !json[QString("Revision")].isNull() && m_revision_isValid;

    m_start_date_isValid = ::OpenAPI::fromJsonValue(m_start_date, json[QString("StartDate")]);
    m_start_date_isSet = !json[QString("StartDate")].isNull() && m_start_date_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;

    m_tax_basis_isValid = ::OpenAPI::fromJsonValue(m_tax_basis, json[QString("TaxBasis")]);
    m_tax_basis_isSet = !json[QString("TaxBasis")].isNull() && m_tax_basis_isValid;

    m_tax_code_isValid = ::OpenAPI::fromJsonValue(m_tax_code, json[QString("TaxCode")]);
    m_tax_code_isSet = !json[QString("TaxCode")].isNull() && m_tax_code_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("Title")]);
    m_title_isSet = !json[QString("Title")].isNull() && m_title_isValid;

    m_unique_key_isValid = ::OpenAPI::fromJsonValue(m_unique_key, json[QString("UniqueKey")]);
    m_unique_key_isSet = !json[QString("UniqueKey")].isNull() && m_unique_key_isValid;
}

QString OAIEmployeeSummary_1::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEmployeeSummary_1::asJsonObject() const {
    QJsonObject obj;
    if (m_code_isSet) {
        obj.insert(QString("Code"), ::OpenAPI::toJsonValue(m_code));
    }
    if (m_effective_date_isSet) {
        obj.insert(QString("EffectiveDate"), ::OpenAPI::toJsonValue(m_effective_date));
    }
    if (m_employee_link.isSet()) {
        obj.insert(QString("EmployeeLink"), ::OpenAPI::toJsonValue(m_employee_link));
    }
    if (m_employer_link.isSet()) {
        obj.insert(QString("EmployerLink"), ::OpenAPI::toJsonValue(m_employer_link));
    }
    if (m_first_name_isSet) {
        obj.insert(QString("FirstName"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_initials_isSet) {
        obj.insert(QString("Initials"), ::OpenAPI::toJsonValue(m_initials));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("LastName"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_last_pay_day_isSet) {
        obj.insert(QString("LastPayDay"), ::OpenAPI::toJsonValue(m_last_pay_day));
    }
    if (m_last_pay_day_schedule_isSet) {
        obj.insert(QString("LastPayDaySchedule"), ::OpenAPI::toJsonValue(m_last_pay_day_schedule));
    }
    if (m_last_pay_day_tax_year_isSet) {
        obj.insert(QString("LastPayDayTaxYear"), ::OpenAPI::toJsonValue(m_last_pay_day_tax_year));
    }
    if (m_leaving_date_isSet) {
        obj.insert(QString("LeavingDate"), ::OpenAPI::toJsonValue(m_leaving_date));
    }
    if (m_meta_data_isSet) {
        obj.insert(QString("MetaData"), ::OpenAPI::toJsonValue(m_meta_data));
    }
    if (m_next_pay_day_isSet) {
        obj.insert(QString("NextPayDay"), ::OpenAPI::toJsonValue(m_next_pay_day));
    }
    if (m_next_revision_date_isSet) {
        obj.insert(QString("NextRevisionDate"), ::OpenAPI::toJsonValue(m_next_revision_date));
    }
    if (m_ni_letter_isSet) {
        obj.insert(QString("NiLetter"), ::OpenAPI::toJsonValue(m_ni_letter));
    }
    if (m_ni_number_isSet) {
        obj.insert(QString("NiNumber"), ::OpenAPI::toJsonValue(m_ni_number));
    }
    if (m_pay_schedule_link.isSet()) {
        obj.insert(QString("PayScheduleLink"), ::OpenAPI::toJsonValue(m_pay_schedule_link));
    }
    if (m_pay_schedule_name_isSet) {
        obj.insert(QString("PayScheduleName"), ::OpenAPI::toJsonValue(m_pay_schedule_name));
    }
    if (m_revision_isSet) {
        obj.insert(QString("Revision"), ::OpenAPI::toJsonValue(m_revision));
    }
    if (m_start_date_isSet) {
        obj.insert(QString("StartDate"), ::OpenAPI::toJsonValue(m_start_date));
    }
    if (m_status_isSet) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_tax_basis_isSet) {
        obj.insert(QString("TaxBasis"), ::OpenAPI::toJsonValue(m_tax_basis));
    }
    if (m_tax_code_isSet) {
        obj.insert(QString("TaxCode"), ::OpenAPI::toJsonValue(m_tax_code));
    }
    if (m_title_isSet) {
        obj.insert(QString("Title"), ::OpenAPI::toJsonValue(m_title));
    }
    if (m_unique_key_isSet) {
        obj.insert(QString("UniqueKey"), ::OpenAPI::toJsonValue(m_unique_key));
    }
    return obj;
}

QString OAIEmployeeSummary_1::getCode() const {
    return m_code;
}
void OAIEmployeeSummary_1::setCode(const QString &code) {
    m_code = code;
    m_code_isSet = true;
}

bool OAIEmployeeSummary_1::is_code_Set() const{
    return m_code_isSet;
}

bool OAIEmployeeSummary_1::is_code_Valid() const{
    return m_code_isValid;
}

QDate OAIEmployeeSummary_1::getEffectiveDate() const {
    return m_effective_date;
}
void OAIEmployeeSummary_1::setEffectiveDate(const QDate &effective_date) {
    m_effective_date = effective_date;
    m_effective_date_isSet = true;
}

bool OAIEmployeeSummary_1::is_effective_date_Set() const{
    return m_effective_date_isSet;
}

bool OAIEmployeeSummary_1::is_effective_date_Valid() const{
    return m_effective_date_isValid;
}

OAIEmployeeLink OAIEmployeeSummary_1::getEmployeeLink() const {
    return m_employee_link;
}
void OAIEmployeeSummary_1::setEmployeeLink(const OAIEmployeeLink &employee_link) {
    m_employee_link = employee_link;
    m_employee_link_isSet = true;
}

bool OAIEmployeeSummary_1::is_employee_link_Set() const{
    return m_employee_link_isSet;
}

bool OAIEmployeeSummary_1::is_employee_link_Valid() const{
    return m_employee_link_isValid;
}

OAIEmployerLink OAIEmployeeSummary_1::getEmployerLink() const {
    return m_employer_link;
}
void OAIEmployeeSummary_1::setEmployerLink(const OAIEmployerLink &employer_link) {
    m_employer_link = employer_link;
    m_employer_link_isSet = true;
}

bool OAIEmployeeSummary_1::is_employer_link_Set() const{
    return m_employer_link_isSet;
}

bool OAIEmployeeSummary_1::is_employer_link_Valid() const{
    return m_employer_link_isValid;
}

QString OAIEmployeeSummary_1::getFirstName() const {
    return m_first_name;
}
void OAIEmployeeSummary_1::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAIEmployeeSummary_1::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAIEmployeeSummary_1::is_first_name_Valid() const{
    return m_first_name_isValid;
}

QString OAIEmployeeSummary_1::getInitials() const {
    return m_initials;
}
void OAIEmployeeSummary_1::setInitials(const QString &initials) {
    m_initials = initials;
    m_initials_isSet = true;
}

bool OAIEmployeeSummary_1::is_initials_Set() const{
    return m_initials_isSet;
}

bool OAIEmployeeSummary_1::is_initials_Valid() const{
    return m_initials_isValid;
}

QString OAIEmployeeSummary_1::getLastName() const {
    return m_last_name;
}
void OAIEmployeeSummary_1::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAIEmployeeSummary_1::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAIEmployeeSummary_1::is_last_name_Valid() const{
    return m_last_name_isValid;
}

QDate OAIEmployeeSummary_1::getLastPayDay() const {
    return m_last_pay_day;
}
void OAIEmployeeSummary_1::setLastPayDay(const QDate &last_pay_day) {
    m_last_pay_day = last_pay_day;
    m_last_pay_day_isSet = true;
}

bool OAIEmployeeSummary_1::is_last_pay_day_Set() const{
    return m_last_pay_day_isSet;
}

bool OAIEmployeeSummary_1::is_last_pay_day_Valid() const{
    return m_last_pay_day_isValid;
}

QString OAIEmployeeSummary_1::getLastPayDaySchedule() const {
    return m_last_pay_day_schedule;
}
void OAIEmployeeSummary_1::setLastPayDaySchedule(const QString &last_pay_day_schedule) {
    m_last_pay_day_schedule = last_pay_day_schedule;
    m_last_pay_day_schedule_isSet = true;
}

bool OAIEmployeeSummary_1::is_last_pay_day_schedule_Set() const{
    return m_last_pay_day_schedule_isSet;
}

bool OAIEmployeeSummary_1::is_last_pay_day_schedule_Valid() const{
    return m_last_pay_day_schedule_isValid;
}

qint32 OAIEmployeeSummary_1::getLastPayDayTaxYear() const {
    return m_last_pay_day_tax_year;
}
void OAIEmployeeSummary_1::setLastPayDayTaxYear(const qint32 &last_pay_day_tax_year) {
    m_last_pay_day_tax_year = last_pay_day_tax_year;
    m_last_pay_day_tax_year_isSet = true;
}

bool OAIEmployeeSummary_1::is_last_pay_day_tax_year_Set() const{
    return m_last_pay_day_tax_year_isSet;
}

bool OAIEmployeeSummary_1::is_last_pay_day_tax_year_Valid() const{
    return m_last_pay_day_tax_year_isValid;
}

QDate OAIEmployeeSummary_1::getLeavingDate() const {
    return m_leaving_date;
}
void OAIEmployeeSummary_1::setLeavingDate(const QDate &leaving_date) {
    m_leaving_date = leaving_date;
    m_leaving_date_isSet = true;
}

bool OAIEmployeeSummary_1::is_leaving_date_Set() const{
    return m_leaving_date_isSet;
}

bool OAIEmployeeSummary_1::is_leaving_date_Valid() const{
    return m_leaving_date_isValid;
}

OAIObject OAIEmployeeSummary_1::getMetaData() const {
    return m_meta_data;
}
void OAIEmployeeSummary_1::setMetaData(const OAIObject &meta_data) {
    m_meta_data = meta_data;
    m_meta_data_isSet = true;
}

bool OAIEmployeeSummary_1::is_meta_data_Set() const{
    return m_meta_data_isSet;
}

bool OAIEmployeeSummary_1::is_meta_data_Valid() const{
    return m_meta_data_isValid;
}

QDate OAIEmployeeSummary_1::getNextPayDay() const {
    return m_next_pay_day;
}
void OAIEmployeeSummary_1::setNextPayDay(const QDate &next_pay_day) {
    m_next_pay_day = next_pay_day;
    m_next_pay_day_isSet = true;
}

bool OAIEmployeeSummary_1::is_next_pay_day_Set() const{
    return m_next_pay_day_isSet;
}

bool OAIEmployeeSummary_1::is_next_pay_day_Valid() const{
    return m_next_pay_day_isValid;
}

QDate OAIEmployeeSummary_1::getNextRevisionDate() const {
    return m_next_revision_date;
}
void OAIEmployeeSummary_1::setNextRevisionDate(const QDate &next_revision_date) {
    m_next_revision_date = next_revision_date;
    m_next_revision_date_isSet = true;
}

bool OAIEmployeeSummary_1::is_next_revision_date_Set() const{
    return m_next_revision_date_isSet;
}

bool OAIEmployeeSummary_1::is_next_revision_date_Valid() const{
    return m_next_revision_date_isValid;
}

QString OAIEmployeeSummary_1::getNiLetter() const {
    return m_ni_letter;
}
void OAIEmployeeSummary_1::setNiLetter(const QString &ni_letter) {
    m_ni_letter = ni_letter;
    m_ni_letter_isSet = true;
}

bool OAIEmployeeSummary_1::is_ni_letter_Set() const{
    return m_ni_letter_isSet;
}

bool OAIEmployeeSummary_1::is_ni_letter_Valid() const{
    return m_ni_letter_isValid;
}

QString OAIEmployeeSummary_1::getNiNumber() const {
    return m_ni_number;
}
void OAIEmployeeSummary_1::setNiNumber(const QString &ni_number) {
    m_ni_number = ni_number;
    m_ni_number_isSet = true;
}

bool OAIEmployeeSummary_1::is_ni_number_Set() const{
    return m_ni_number_isSet;
}

bool OAIEmployeeSummary_1::is_ni_number_Valid() const{
    return m_ni_number_isValid;
}

OAIPayScheduleLink OAIEmployeeSummary_1::getPayScheduleLink() const {
    return m_pay_schedule_link;
}
void OAIEmployeeSummary_1::setPayScheduleLink(const OAIPayScheduleLink &pay_schedule_link) {
    m_pay_schedule_link = pay_schedule_link;
    m_pay_schedule_link_isSet = true;
}

bool OAIEmployeeSummary_1::is_pay_schedule_link_Set() const{
    return m_pay_schedule_link_isSet;
}

bool OAIEmployeeSummary_1::is_pay_schedule_link_Valid() const{
    return m_pay_schedule_link_isValid;
}

QString OAIEmployeeSummary_1::getPayScheduleName() const {
    return m_pay_schedule_name;
}
void OAIEmployeeSummary_1::setPayScheduleName(const QString &pay_schedule_name) {
    m_pay_schedule_name = pay_schedule_name;
    m_pay_schedule_name_isSet = true;
}

bool OAIEmployeeSummary_1::is_pay_schedule_name_Set() const{
    return m_pay_schedule_name_isSet;
}

bool OAIEmployeeSummary_1::is_pay_schedule_name_Valid() const{
    return m_pay_schedule_name_isValid;
}

qint32 OAIEmployeeSummary_1::getRevision() const {
    return m_revision;
}
void OAIEmployeeSummary_1::setRevision(const qint32 &revision) {
    m_revision = revision;
    m_revision_isSet = true;
}

bool OAIEmployeeSummary_1::is_revision_Set() const{
    return m_revision_isSet;
}

bool OAIEmployeeSummary_1::is_revision_Valid() const{
    return m_revision_isValid;
}

QDate OAIEmployeeSummary_1::getStartDate() const {
    return m_start_date;
}
void OAIEmployeeSummary_1::setStartDate(const QDate &start_date) {
    m_start_date = start_date;
    m_start_date_isSet = true;
}

bool OAIEmployeeSummary_1::is_start_date_Set() const{
    return m_start_date_isSet;
}

bool OAIEmployeeSummary_1::is_start_date_Valid() const{
    return m_start_date_isValid;
}

QString OAIEmployeeSummary_1::getStatus() const {
    return m_status;
}
void OAIEmployeeSummary_1::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIEmployeeSummary_1::is_status_Set() const{
    return m_status_isSet;
}

bool OAIEmployeeSummary_1::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIEmployeeSummary_1::getTaxBasis() const {
    return m_tax_basis;
}
void OAIEmployeeSummary_1::setTaxBasis(const QString &tax_basis) {
    m_tax_basis = tax_basis;
    m_tax_basis_isSet = true;
}

bool OAIEmployeeSummary_1::is_tax_basis_Set() const{
    return m_tax_basis_isSet;
}

bool OAIEmployeeSummary_1::is_tax_basis_Valid() const{
    return m_tax_basis_isValid;
}

QString OAIEmployeeSummary_1::getTaxCode() const {
    return m_tax_code;
}
void OAIEmployeeSummary_1::setTaxCode(const QString &tax_code) {
    m_tax_code = tax_code;
    m_tax_code_isSet = true;
}

bool OAIEmployeeSummary_1::is_tax_code_Set() const{
    return m_tax_code_isSet;
}

bool OAIEmployeeSummary_1::is_tax_code_Valid() const{
    return m_tax_code_isValid;
}

QString OAIEmployeeSummary_1::getTitle() const {
    return m_title;
}
void OAIEmployeeSummary_1::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIEmployeeSummary_1::is_title_Set() const{
    return m_title_isSet;
}

bool OAIEmployeeSummary_1::is_title_Valid() const{
    return m_title_isValid;
}

QString OAIEmployeeSummary_1::getUniqueKey() const {
    return m_unique_key;
}
void OAIEmployeeSummary_1::setUniqueKey(const QString &unique_key) {
    m_unique_key = unique_key;
    m_unique_key_isSet = true;
}

bool OAIEmployeeSummary_1::is_unique_key_Set() const{
    return m_unique_key_isSet;
}

bool OAIEmployeeSummary_1::is_unique_key_Valid() const{
    return m_unique_key_isValid;
}

bool OAIEmployeeSummary_1::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_effective_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_employee_link.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_employer_link.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_initials_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_pay_day_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_pay_day_schedule_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_pay_day_tax_year_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_leaving_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_meta_data_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_pay_day_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_revision_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ni_letter_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ni_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pay_schedule_link.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_pay_schedule_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_revision_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tax_basis_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tax_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unique_key_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEmployeeSummary_1::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
