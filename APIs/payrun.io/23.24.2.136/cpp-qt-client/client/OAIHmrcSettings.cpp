/**
 * PayRun.IO
 * Open, scableable, transparent payroll API.
 *
 * The version of the OpenAPI document: 23.24.2.136
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHmrcSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHmrcSettings::OAIHmrcSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHmrcSettings::OAIHmrcSettings() {
    this->initializeModel();
}

OAIHmrcSettings::~OAIHmrcSettings() {}

void OAIHmrcSettings::initializeModel() {

    m_accounting_office_ref_isSet = false;
    m_accounting_office_ref_isValid = false;

    m_cotax_ref_isSet = false;
    m_cotax_ref_isValid = false;

    m_contact_email_isSet = false;
    m_contact_email_isValid = false;

    m_contact_fax_isSet = false;
    m_contact_fax_isValid = false;

    m_contact_first_name_isSet = false;
    m_contact_first_name_isValid = false;

    m_contact_last_name_isSet = false;
    m_contact_last_name_isValid = false;

    m_contact_telephone_isSet = false;
    m_contact_telephone_isValid = false;

    m_employment_allowance_override_isSet = false;
    m_employment_allowance_override_isValid = false;

    m_password_isSet = false;
    m_password_isValid = false;

    m_sautr_isSet = false;
    m_sautr_isValid = false;

    m_sender_isSet = false;
    m_sender_isValid = false;

    m_sender_id_isSet = false;
    m_sender_id_isValid = false;

    m_state_aid_sector_isSet = false;
    m_state_aid_sector_isValid = false;

    m_tax_office_number_isSet = false;
    m_tax_office_number_isValid = false;

    m_tax_office_reference_isSet = false;
    m_tax_office_reference_isValid = false;
}

void OAIHmrcSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHmrcSettings::fromJsonObject(QJsonObject json) {

    m_accounting_office_ref_isValid = ::OpenAPI::fromJsonValue(m_accounting_office_ref, json[QString("AccountingOfficeRef")]);
    m_accounting_office_ref_isSet = !json[QString("AccountingOfficeRef")].isNull() && m_accounting_office_ref_isValid;

    m_cotax_ref_isValid = ::OpenAPI::fromJsonValue(m_cotax_ref, json[QString("COTAXRef")]);
    m_cotax_ref_isSet = !json[QString("COTAXRef")].isNull() && m_cotax_ref_isValid;

    m_contact_email_isValid = ::OpenAPI::fromJsonValue(m_contact_email, json[QString("ContactEmail")]);
    m_contact_email_isSet = !json[QString("ContactEmail")].isNull() && m_contact_email_isValid;

    m_contact_fax_isValid = ::OpenAPI::fromJsonValue(m_contact_fax, json[QString("ContactFax")]);
    m_contact_fax_isSet = !json[QString("ContactFax")].isNull() && m_contact_fax_isValid;

    m_contact_first_name_isValid = ::OpenAPI::fromJsonValue(m_contact_first_name, json[QString("ContactFirstName")]);
    m_contact_first_name_isSet = !json[QString("ContactFirstName")].isNull() && m_contact_first_name_isValid;

    m_contact_last_name_isValid = ::OpenAPI::fromJsonValue(m_contact_last_name, json[QString("ContactLastName")]);
    m_contact_last_name_isSet = !json[QString("ContactLastName")].isNull() && m_contact_last_name_isValid;

    m_contact_telephone_isValid = ::OpenAPI::fromJsonValue(m_contact_telephone, json[QString("ContactTelephone")]);
    m_contact_telephone_isSet = !json[QString("ContactTelephone")].isNull() && m_contact_telephone_isValid;

    m_employment_allowance_override_isValid = ::OpenAPI::fromJsonValue(m_employment_allowance_override, json[QString("EmploymentAllowanceOverride")]);
    m_employment_allowance_override_isSet = !json[QString("EmploymentAllowanceOverride")].isNull() && m_employment_allowance_override_isValid;

    m_password_isValid = ::OpenAPI::fromJsonValue(m_password, json[QString("Password")]);
    m_password_isSet = !json[QString("Password")].isNull() && m_password_isValid;

    m_sautr_isValid = ::OpenAPI::fromJsonValue(m_sautr, json[QString("SAUTR")]);
    m_sautr_isSet = !json[QString("SAUTR")].isNull() && m_sautr_isValid;

    m_sender_isValid = ::OpenAPI::fromJsonValue(m_sender, json[QString("Sender")]);
    m_sender_isSet = !json[QString("Sender")].isNull() && m_sender_isValid;

    m_sender_id_isValid = ::OpenAPI::fromJsonValue(m_sender_id, json[QString("SenderId")]);
    m_sender_id_isSet = !json[QString("SenderId")].isNull() && m_sender_id_isValid;

    m_state_aid_sector_isValid = ::OpenAPI::fromJsonValue(m_state_aid_sector, json[QString("StateAidSector")]);
    m_state_aid_sector_isSet = !json[QString("StateAidSector")].isNull() && m_state_aid_sector_isValid;

    m_tax_office_number_isValid = ::OpenAPI::fromJsonValue(m_tax_office_number, json[QString("TaxOfficeNumber")]);
    m_tax_office_number_isSet = !json[QString("TaxOfficeNumber")].isNull() && m_tax_office_number_isValid;

    m_tax_office_reference_isValid = ::OpenAPI::fromJsonValue(m_tax_office_reference, json[QString("TaxOfficeReference")]);
    m_tax_office_reference_isSet = !json[QString("TaxOfficeReference")].isNull() && m_tax_office_reference_isValid;
}

QString OAIHmrcSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHmrcSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_accounting_office_ref_isSet) {
        obj.insert(QString("AccountingOfficeRef"), ::OpenAPI::toJsonValue(m_accounting_office_ref));
    }
    if (m_cotax_ref_isSet) {
        obj.insert(QString("COTAXRef"), ::OpenAPI::toJsonValue(m_cotax_ref));
    }
    if (m_contact_email_isSet) {
        obj.insert(QString("ContactEmail"), ::OpenAPI::toJsonValue(m_contact_email));
    }
    if (m_contact_fax_isSet) {
        obj.insert(QString("ContactFax"), ::OpenAPI::toJsonValue(m_contact_fax));
    }
    if (m_contact_first_name_isSet) {
        obj.insert(QString("ContactFirstName"), ::OpenAPI::toJsonValue(m_contact_first_name));
    }
    if (m_contact_last_name_isSet) {
        obj.insert(QString("ContactLastName"), ::OpenAPI::toJsonValue(m_contact_last_name));
    }
    if (m_contact_telephone_isSet) {
        obj.insert(QString("ContactTelephone"), ::OpenAPI::toJsonValue(m_contact_telephone));
    }
    if (m_employment_allowance_override_isSet) {
        obj.insert(QString("EmploymentAllowanceOverride"), ::OpenAPI::toJsonValue(m_employment_allowance_override));
    }
    if (m_password_isSet) {
        obj.insert(QString("Password"), ::OpenAPI::toJsonValue(m_password));
    }
    if (m_sautr_isSet) {
        obj.insert(QString("SAUTR"), ::OpenAPI::toJsonValue(m_sautr));
    }
    if (m_sender_isSet) {
        obj.insert(QString("Sender"), ::OpenAPI::toJsonValue(m_sender));
    }
    if (m_sender_id_isSet) {
        obj.insert(QString("SenderId"), ::OpenAPI::toJsonValue(m_sender_id));
    }
    if (m_state_aid_sector_isSet) {
        obj.insert(QString("StateAidSector"), ::OpenAPI::toJsonValue(m_state_aid_sector));
    }
    if (m_tax_office_number_isSet) {
        obj.insert(QString("TaxOfficeNumber"), ::OpenAPI::toJsonValue(m_tax_office_number));
    }
    if (m_tax_office_reference_isSet) {
        obj.insert(QString("TaxOfficeReference"), ::OpenAPI::toJsonValue(m_tax_office_reference));
    }
    return obj;
}

QString OAIHmrcSettings::getAccountingOfficeRef() const {
    return m_accounting_office_ref;
}
void OAIHmrcSettings::setAccountingOfficeRef(const QString &accounting_office_ref) {
    m_accounting_office_ref = accounting_office_ref;
    m_accounting_office_ref_isSet = true;
}

bool OAIHmrcSettings::is_accounting_office_ref_Set() const{
    return m_accounting_office_ref_isSet;
}

bool OAIHmrcSettings::is_accounting_office_ref_Valid() const{
    return m_accounting_office_ref_isValid;
}

QString OAIHmrcSettings::getCotaxRef() const {
    return m_cotax_ref;
}
void OAIHmrcSettings::setCotaxRef(const QString &cotax_ref) {
    m_cotax_ref = cotax_ref;
    m_cotax_ref_isSet = true;
}

bool OAIHmrcSettings::is_cotax_ref_Set() const{
    return m_cotax_ref_isSet;
}

bool OAIHmrcSettings::is_cotax_ref_Valid() const{
    return m_cotax_ref_isValid;
}

QString OAIHmrcSettings::getContactEmail() const {
    return m_contact_email;
}
void OAIHmrcSettings::setContactEmail(const QString &contact_email) {
    m_contact_email = contact_email;
    m_contact_email_isSet = true;
}

bool OAIHmrcSettings::is_contact_email_Set() const{
    return m_contact_email_isSet;
}

bool OAIHmrcSettings::is_contact_email_Valid() const{
    return m_contact_email_isValid;
}

QString OAIHmrcSettings::getContactFax() const {
    return m_contact_fax;
}
void OAIHmrcSettings::setContactFax(const QString &contact_fax) {
    m_contact_fax = contact_fax;
    m_contact_fax_isSet = true;
}

bool OAIHmrcSettings::is_contact_fax_Set() const{
    return m_contact_fax_isSet;
}

bool OAIHmrcSettings::is_contact_fax_Valid() const{
    return m_contact_fax_isValid;
}

QString OAIHmrcSettings::getContactFirstName() const {
    return m_contact_first_name;
}
void OAIHmrcSettings::setContactFirstName(const QString &contact_first_name) {
    m_contact_first_name = contact_first_name;
    m_contact_first_name_isSet = true;
}

bool OAIHmrcSettings::is_contact_first_name_Set() const{
    return m_contact_first_name_isSet;
}

bool OAIHmrcSettings::is_contact_first_name_Valid() const{
    return m_contact_first_name_isValid;
}

QString OAIHmrcSettings::getContactLastName() const {
    return m_contact_last_name;
}
void OAIHmrcSettings::setContactLastName(const QString &contact_last_name) {
    m_contact_last_name = contact_last_name;
    m_contact_last_name_isSet = true;
}

bool OAIHmrcSettings::is_contact_last_name_Set() const{
    return m_contact_last_name_isSet;
}

bool OAIHmrcSettings::is_contact_last_name_Valid() const{
    return m_contact_last_name_isValid;
}

QString OAIHmrcSettings::getContactTelephone() const {
    return m_contact_telephone;
}
void OAIHmrcSettings::setContactTelephone(const QString &contact_telephone) {
    m_contact_telephone = contact_telephone;
    m_contact_telephone_isSet = true;
}

bool OAIHmrcSettings::is_contact_telephone_Set() const{
    return m_contact_telephone_isSet;
}

bool OAIHmrcSettings::is_contact_telephone_Valid() const{
    return m_contact_telephone_isValid;
}

double OAIHmrcSettings::getEmploymentAllowanceOverride() const {
    return m_employment_allowance_override;
}
void OAIHmrcSettings::setEmploymentAllowanceOverride(const double &employment_allowance_override) {
    m_employment_allowance_override = employment_allowance_override;
    m_employment_allowance_override_isSet = true;
}

bool OAIHmrcSettings::is_employment_allowance_override_Set() const{
    return m_employment_allowance_override_isSet;
}

bool OAIHmrcSettings::is_employment_allowance_override_Valid() const{
    return m_employment_allowance_override_isValid;
}

QString OAIHmrcSettings::getPassword() const {
    return m_password;
}
void OAIHmrcSettings::setPassword(const QString &password) {
    m_password = password;
    m_password_isSet = true;
}

bool OAIHmrcSettings::is_password_Set() const{
    return m_password_isSet;
}

bool OAIHmrcSettings::is_password_Valid() const{
    return m_password_isValid;
}

QString OAIHmrcSettings::getSautr() const {
    return m_sautr;
}
void OAIHmrcSettings::setSautr(const QString &sautr) {
    m_sautr = sautr;
    m_sautr_isSet = true;
}

bool OAIHmrcSettings::is_sautr_Set() const{
    return m_sautr_isSet;
}

bool OAIHmrcSettings::is_sautr_Valid() const{
    return m_sautr_isValid;
}

QString OAIHmrcSettings::getSender() const {
    return m_sender;
}
void OAIHmrcSettings::setSender(const QString &sender) {
    m_sender = sender;
    m_sender_isSet = true;
}

bool OAIHmrcSettings::is_sender_Set() const{
    return m_sender_isSet;
}

bool OAIHmrcSettings::is_sender_Valid() const{
    return m_sender_isValid;
}

QString OAIHmrcSettings::getSenderId() const {
    return m_sender_id;
}
void OAIHmrcSettings::setSenderId(const QString &sender_id) {
    m_sender_id = sender_id;
    m_sender_id_isSet = true;
}

bool OAIHmrcSettings::is_sender_id_Set() const{
    return m_sender_id_isSet;
}

bool OAIHmrcSettings::is_sender_id_Valid() const{
    return m_sender_id_isValid;
}

QString OAIHmrcSettings::getStateAidSector() const {
    return m_state_aid_sector;
}
void OAIHmrcSettings::setStateAidSector(const QString &state_aid_sector) {
    m_state_aid_sector = state_aid_sector;
    m_state_aid_sector_isSet = true;
}

bool OAIHmrcSettings::is_state_aid_sector_Set() const{
    return m_state_aid_sector_isSet;
}

bool OAIHmrcSettings::is_state_aid_sector_Valid() const{
    return m_state_aid_sector_isValid;
}

QString OAIHmrcSettings::getTaxOfficeNumber() const {
    return m_tax_office_number;
}
void OAIHmrcSettings::setTaxOfficeNumber(const QString &tax_office_number) {
    m_tax_office_number = tax_office_number;
    m_tax_office_number_isSet = true;
}

bool OAIHmrcSettings::is_tax_office_number_Set() const{
    return m_tax_office_number_isSet;
}

bool OAIHmrcSettings::is_tax_office_number_Valid() const{
    return m_tax_office_number_isValid;
}

QString OAIHmrcSettings::getTaxOfficeReference() const {
    return m_tax_office_reference;
}
void OAIHmrcSettings::setTaxOfficeReference(const QString &tax_office_reference) {
    m_tax_office_reference = tax_office_reference;
    m_tax_office_reference_isSet = true;
}

bool OAIHmrcSettings::is_tax_office_reference_Set() const{
    return m_tax_office_reference_isSet;
}

bool OAIHmrcSettings::is_tax_office_reference_Valid() const{
    return m_tax_office_reference_isValid;
}

bool OAIHmrcSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_accounting_office_ref_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cotax_ref_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_fax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_telephone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_employment_allowance_override_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_password_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sautr_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sender_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sender_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_aid_sector_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tax_office_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tax_office_reference_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHmrcSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
