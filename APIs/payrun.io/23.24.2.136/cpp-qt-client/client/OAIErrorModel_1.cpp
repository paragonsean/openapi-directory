/**
 * PayRun.IO
 * Open, scableable, transparent payroll API.
 *
 * The version of the OpenAPI document: 23.24.2.136
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIErrorModel_1.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIErrorModel_1::OAIErrorModel_1(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIErrorModel_1::OAIErrorModel_1() {
    this->initializeModel();
}

OAIErrorModel_1::~OAIErrorModel_1() {}

void OAIErrorModel_1::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_error_category_isSet = false;
    m_error_category_isValid = false;

    m_errors_isSet = false;
    m_errors_isValid = false;
}

void OAIErrorModel_1::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIErrorModel_1::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_error_category_isValid = ::OpenAPI::fromJsonValue(m_error_category, json[QString("ErrorCategory")]);
    m_error_category_isSet = !json[QString("ErrorCategory")].isNull() && m_error_category_isValid;

    m_errors_isValid = ::OpenAPI::fromJsonValue(m_errors, json[QString("Errors")]);
    m_errors_isSet = !json[QString("Errors")].isNull() && m_errors_isValid;
}

QString OAIErrorModel_1::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIErrorModel_1::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_error_category_isSet) {
        obj.insert(QString("ErrorCategory"), ::OpenAPI::toJsonValue(m_error_category));
    }
    if (m_errors.isSet()) {
        obj.insert(QString("Errors"), ::OpenAPI::toJsonValue(m_errors));
    }
    return obj;
}

QString OAIErrorModel_1::getDescription() const {
    return m_description;
}
void OAIErrorModel_1::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIErrorModel_1::is_description_Set() const{
    return m_description_isSet;
}

bool OAIErrorModel_1::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIErrorModel_1::getErrorCategory() const {
    return m_error_category;
}
void OAIErrorModel_1::setErrorCategory(const QString &error_category) {
    m_error_category = error_category;
    m_error_category_isSet = true;
}

bool OAIErrorModel_1::is_error_category_Set() const{
    return m_error_category_isSet;
}

bool OAIErrorModel_1::is_error_category_Valid() const{
    return m_error_category_isValid;
}

OAIErrors OAIErrorModel_1::getErrors() const {
    return m_errors;
}
void OAIErrorModel_1::setErrors(const OAIErrors &errors) {
    m_errors = errors;
    m_errors_isSet = true;
}

bool OAIErrorModel_1::is_errors_Set() const{
    return m_errors_isSet;
}

bool OAIErrorModel_1::is_errors_Valid() const{
    return m_errors_isValid;
}

bool OAIErrorModel_1::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_category_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_errors.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIErrorModel_1::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
