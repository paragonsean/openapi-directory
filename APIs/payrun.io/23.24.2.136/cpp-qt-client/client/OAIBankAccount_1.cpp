/**
 * PayRun.IO
 * Open, scableable, transparent payroll API.
 *
 * The version of the OpenAPI document: 23.24.2.136
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBankAccount_1.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBankAccount_1::OAIBankAccount_1(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBankAccount_1::OAIBankAccount_1() {
    this->initializeModel();
}

OAIBankAccount_1::~OAIBankAccount_1() {}

void OAIBankAccount_1::initializeModel() {

    m_account_name_isSet = false;
    m_account_name_isValid = false;

    m_account_number_isSet = false;
    m_account_number_isValid = false;

    m_branch_name_isSet = false;
    m_branch_name_isValid = false;

    m_reference_isSet = false;
    m_reference_isValid = false;

    m_sort_code_isSet = false;
    m_sort_code_isValid = false;
}

void OAIBankAccount_1::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBankAccount_1::fromJsonObject(QJsonObject json) {

    m_account_name_isValid = ::OpenAPI::fromJsonValue(m_account_name, json[QString("AccountName")]);
    m_account_name_isSet = !json[QString("AccountName")].isNull() && m_account_name_isValid;

    m_account_number_isValid = ::OpenAPI::fromJsonValue(m_account_number, json[QString("AccountNumber")]);
    m_account_number_isSet = !json[QString("AccountNumber")].isNull() && m_account_number_isValid;

    m_branch_name_isValid = ::OpenAPI::fromJsonValue(m_branch_name, json[QString("BranchName")]);
    m_branch_name_isSet = !json[QString("BranchName")].isNull() && m_branch_name_isValid;

    m_reference_isValid = ::OpenAPI::fromJsonValue(m_reference, json[QString("Reference")]);
    m_reference_isSet = !json[QString("Reference")].isNull() && m_reference_isValid;

    m_sort_code_isValid = ::OpenAPI::fromJsonValue(m_sort_code, json[QString("SortCode")]);
    m_sort_code_isSet = !json[QString("SortCode")].isNull() && m_sort_code_isValid;
}

QString OAIBankAccount_1::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBankAccount_1::asJsonObject() const {
    QJsonObject obj;
    if (m_account_name_isSet) {
        obj.insert(QString("AccountName"), ::OpenAPI::toJsonValue(m_account_name));
    }
    if (m_account_number_isSet) {
        obj.insert(QString("AccountNumber"), ::OpenAPI::toJsonValue(m_account_number));
    }
    if (m_branch_name_isSet) {
        obj.insert(QString("BranchName"), ::OpenAPI::toJsonValue(m_branch_name));
    }
    if (m_reference_isSet) {
        obj.insert(QString("Reference"), ::OpenAPI::toJsonValue(m_reference));
    }
    if (m_sort_code_isSet) {
        obj.insert(QString("SortCode"), ::OpenAPI::toJsonValue(m_sort_code));
    }
    return obj;
}

QString OAIBankAccount_1::getAccountName() const {
    return m_account_name;
}
void OAIBankAccount_1::setAccountName(const QString &account_name) {
    m_account_name = account_name;
    m_account_name_isSet = true;
}

bool OAIBankAccount_1::is_account_name_Set() const{
    return m_account_name_isSet;
}

bool OAIBankAccount_1::is_account_name_Valid() const{
    return m_account_name_isValid;
}

QString OAIBankAccount_1::getAccountNumber() const {
    return m_account_number;
}
void OAIBankAccount_1::setAccountNumber(const QString &account_number) {
    m_account_number = account_number;
    m_account_number_isSet = true;
}

bool OAIBankAccount_1::is_account_number_Set() const{
    return m_account_number_isSet;
}

bool OAIBankAccount_1::is_account_number_Valid() const{
    return m_account_number_isValid;
}

QString OAIBankAccount_1::getBranchName() const {
    return m_branch_name;
}
void OAIBankAccount_1::setBranchName(const QString &branch_name) {
    m_branch_name = branch_name;
    m_branch_name_isSet = true;
}

bool OAIBankAccount_1::is_branch_name_Set() const{
    return m_branch_name_isSet;
}

bool OAIBankAccount_1::is_branch_name_Valid() const{
    return m_branch_name_isValid;
}

QString OAIBankAccount_1::getReference() const {
    return m_reference;
}
void OAIBankAccount_1::setReference(const QString &reference) {
    m_reference = reference;
    m_reference_isSet = true;
}

bool OAIBankAccount_1::is_reference_Set() const{
    return m_reference_isSet;
}

bool OAIBankAccount_1::is_reference_Valid() const{
    return m_reference_isValid;
}

QString OAIBankAccount_1::getSortCode() const {
    return m_sort_code;
}
void OAIBankAccount_1::setSortCode(const QString &sort_code) {
    m_sort_code = sort_code;
    m_sort_code_isSet = true;
}

bool OAIBankAccount_1::is_sort_code_Set() const{
    return m_sort_code_isSet;
}

bool OAIBankAccount_1::is_sort_code_Valid() const{
    return m_sort_code_isValid;
}

bool OAIBankAccount_1::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_account_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_branch_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reference_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sort_code_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBankAccount_1::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
