/**
 * PayRun.IO
 * Open, scableable, transparent payroll API.
 *
 * The version of the OpenAPI document: 23.24.2.136
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRtiJobInstruction_1.h
 *
 * 
 */

#ifndef OAIRtiJobInstruction_1_H
#define OAIRtiJobInstruction_1_H

#include <QJsonObject>

#include "OAIEmployer_4.h"
#include "OAIPaySchedule_5.h"
#include "OAIRtiTransaction.h"
#include <QDate>
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEmployer_4;
class OAIPaySchedule_5;
class OAIRtiTransaction;

class OAIRtiJobInstruction_1 : public OAIObject {
public:
    OAIRtiJobInstruction_1();
    OAIRtiJobInstruction_1(QString json);
    ~OAIRtiJobInstruction_1() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getEarlierTaxYear() const;
    void setEarlierTaxYear(const qint32 &earlier_tax_year);
    bool is_earlier_tax_year_Set() const;
    bool is_earlier_tax_year_Valid() const;

    OAIEmployer_4 getEmployer() const;
    void setEmployer(const OAIEmployer_4 &employer);
    bool is_employer_Set() const;
    bool is_employer_Valid() const;

    bool isFinalSubmissionForYear() const;
    void setFinalSubmissionForYear(const bool &final_submission_for_year);
    bool is_final_submission_for_year_Set() const;
    bool is_final_submission_for_year_Valid() const;

    bool isGenerate() const;
    void setGenerate(const bool &generate);
    bool is_generate_Set() const;
    bool is_generate_Valid() const;

    QDateTime getHoldingDate() const;
    void setHoldingDate(const QDateTime &holding_date);
    bool is_holding_date_Set() const;
    bool is_holding_date_Valid() const;

    QString getLateReason() const;
    void setLateReason(const QString &late_reason);
    bool is_late_reason_Set() const;
    bool is_late_reason_Valid() const;

    QDate getNoPaymentForPeriodFrom() const;
    void setNoPaymentForPeriodFrom(const QDate &no_payment_for_period_from);
    bool is_no_payment_for_period_from_Set() const;
    bool is_no_payment_for_period_from_Valid() const;

    QDate getNoPaymentForPeriodTo() const;
    void setNoPaymentForPeriodTo(const QDate &no_payment_for_period_to);
    bool is_no_payment_for_period_to_Set() const;
    bool is_no_payment_for_period_to_Valid() const;

    OAIPaySchedule_5 getPaySchedule() const;
    void setPaySchedule(const OAIPaySchedule_5 &pay_schedule);
    bool is_pay_schedule_Set() const;
    bool is_pay_schedule_Valid() const;

    QDate getPaymentDate() const;
    void setPaymentDate(const QDate &payment_date);
    bool is_payment_date_Set() const;
    bool is_payment_date_Valid() const;

    QDate getPeriodOfInactivityFrom() const;
    void setPeriodOfInactivityFrom(const QDate &period_of_inactivity_from);
    bool is_period_of_inactivity_from_Set() const;
    bool is_period_of_inactivity_from_Valid() const;

    QDate getPeriodOfInactivityTo() const;
    void setPeriodOfInactivityTo(const QDate &period_of_inactivity_to);
    bool is_period_of_inactivity_to_Set() const;
    bool is_period_of_inactivity_to_Valid() const;

    OAIRtiTransaction getRtiTransaction() const;
    void setRtiTransaction(const OAIRtiTransaction &rti_transaction);
    bool is_rti_transaction_Set() const;
    bool is_rti_transaction_Valid() const;

    QString getRtiType() const;
    void setRtiType(const QString &rti_type);
    bool is_rti_type_Set() const;
    bool is_rti_type_Valid() const;

    QDate getSchemeCeased() const;
    void setSchemeCeased(const QDate &scheme_ceased);
    bool is_scheme_ceased_Set() const;
    bool is_scheme_ceased_Valid() const;

    qint32 getTaxMonth() const;
    void setTaxMonth(const qint32 &tax_month);
    bool is_tax_month_Set() const;
    bool is_tax_month_Valid() const;

    qint32 getTaxYear() const;
    void setTaxYear(const qint32 &tax_year);
    bool is_tax_year_Set() const;
    bool is_tax_year_Valid() const;

    QDateTime getTimestamp() const;
    void setTimestamp(const QDateTime &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    bool isTransmit() const;
    void setTransmit(const bool &transmit);
    bool is_transmit_Set() const;
    bool is_transmit_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_earlier_tax_year;
    bool m_earlier_tax_year_isSet;
    bool m_earlier_tax_year_isValid;

    OAIEmployer_4 m_employer;
    bool m_employer_isSet;
    bool m_employer_isValid;

    bool m_final_submission_for_year;
    bool m_final_submission_for_year_isSet;
    bool m_final_submission_for_year_isValid;

    bool m_generate;
    bool m_generate_isSet;
    bool m_generate_isValid;

    QDateTime m_holding_date;
    bool m_holding_date_isSet;
    bool m_holding_date_isValid;

    QString m_late_reason;
    bool m_late_reason_isSet;
    bool m_late_reason_isValid;

    QDate m_no_payment_for_period_from;
    bool m_no_payment_for_period_from_isSet;
    bool m_no_payment_for_period_from_isValid;

    QDate m_no_payment_for_period_to;
    bool m_no_payment_for_period_to_isSet;
    bool m_no_payment_for_period_to_isValid;

    OAIPaySchedule_5 m_pay_schedule;
    bool m_pay_schedule_isSet;
    bool m_pay_schedule_isValid;

    QDate m_payment_date;
    bool m_payment_date_isSet;
    bool m_payment_date_isValid;

    QDate m_period_of_inactivity_from;
    bool m_period_of_inactivity_from_isSet;
    bool m_period_of_inactivity_from_isValid;

    QDate m_period_of_inactivity_to;
    bool m_period_of_inactivity_to_isSet;
    bool m_period_of_inactivity_to_isValid;

    OAIRtiTransaction m_rti_transaction;
    bool m_rti_transaction_isSet;
    bool m_rti_transaction_isValid;

    QString m_rti_type;
    bool m_rti_type_isSet;
    bool m_rti_type_isValid;

    QDate m_scheme_ceased;
    bool m_scheme_ceased_isSet;
    bool m_scheme_ceased_isValid;

    qint32 m_tax_month;
    bool m_tax_month_isSet;
    bool m_tax_month_isValid;

    qint32 m_tax_year;
    bool m_tax_year_isSet;
    bool m_tax_year_isValid;

    QDateTime m_timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;

    bool m_transmit;
    bool m_transmit_isSet;
    bool m_transmit_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRtiJobInstruction_1)

#endif // OAIRtiJobInstruction_1_H
