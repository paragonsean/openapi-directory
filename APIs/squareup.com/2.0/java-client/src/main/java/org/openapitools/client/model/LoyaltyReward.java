/*
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents a contract to redeem loyalty points for a [reward tier](https://developer.squareup.com/reference/square_2021-08-18/objects/LoyaltyProgramRewardTier) discount. Loyalty rewards can be in an ISSUED, REDEEMED, or DELETED state. For more information, see [Redeem loyalty rewards](https://developer.squareup.com/docs/loyalty-api/overview#redeem-loyalty-rewards).
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:20:53.300629-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class LoyaltyReward {
  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_LOYALTY_ACCOUNT_ID = "loyalty_account_id";
  @SerializedName(SERIALIZED_NAME_LOYALTY_ACCOUNT_ID)
  private String loyaltyAccountId;

  public static final String SERIALIZED_NAME_ORDER_ID = "order_id";
  @SerializedName(SERIALIZED_NAME_ORDER_ID)
  private String orderId;

  public static final String SERIALIZED_NAME_POINTS = "points";
  @SerializedName(SERIALIZED_NAME_POINTS)
  private Integer points;

  public static final String SERIALIZED_NAME_REDEEMED_AT = "redeemed_at";
  @SerializedName(SERIALIZED_NAME_REDEEMED_AT)
  private String redeemedAt;

  public static final String SERIALIZED_NAME_REWARD_TIER_ID = "reward_tier_id";
  @SerializedName(SERIALIZED_NAME_REWARD_TIER_ID)
  private String rewardTierId;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private String updatedAt;

  public LoyaltyReward() {
  }

  public LoyaltyReward createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * The timestamp when the reward was created, in RFC 3339 format.
   * @return createdAt
   */
  @javax.annotation.Nullable
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }


  public LoyaltyReward id(String id) {
    this.id = id;
    return this;
  }

  /**
   * The Square-assigned ID of the loyalty reward.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public LoyaltyReward loyaltyAccountId(String loyaltyAccountId) {
    this.loyaltyAccountId = loyaltyAccountId;
    return this;
  }

  /**
   * The Square-assigned ID of the [loyalty account](https://developer.squareup.com/reference/square_2021-08-18/objects/LoyaltyAccount) to which the reward belongs.
   * @return loyaltyAccountId
   */
  @javax.annotation.Nonnull
  public String getLoyaltyAccountId() {
    return loyaltyAccountId;
  }

  public void setLoyaltyAccountId(String loyaltyAccountId) {
    this.loyaltyAccountId = loyaltyAccountId;
  }


  public LoyaltyReward orderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

  /**
   * The Square-assigned ID of the [order](https://developer.squareup.com/reference/square_2021-08-18/objects/Order) to which the reward is attached.
   * @return orderId
   */
  @javax.annotation.Nullable
  public String getOrderId() {
    return orderId;
  }

  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }


  public LoyaltyReward points(Integer points) {
    this.points = points;
    return this;
  }

  /**
   * The number of loyalty points used for the reward.
   * minimum: 1
   * @return points
   */
  @javax.annotation.Nullable
  public Integer getPoints() {
    return points;
  }

  public void setPoints(Integer points) {
    this.points = points;
  }


  public LoyaltyReward redeemedAt(String redeemedAt) {
    this.redeemedAt = redeemedAt;
    return this;
  }

  /**
   * The timestamp when the reward was redeemed, in RFC 3339 format.
   * @return redeemedAt
   */
  @javax.annotation.Nullable
  public String getRedeemedAt() {
    return redeemedAt;
  }

  public void setRedeemedAt(String redeemedAt) {
    this.redeemedAt = redeemedAt;
  }


  public LoyaltyReward rewardTierId(String rewardTierId) {
    this.rewardTierId = rewardTierId;
    return this;
  }

  /**
   * The Square-assigned ID of the [reward tier](https://developer.squareup.com/reference/square_2021-08-18/objects/LoyaltyProgramRewardTier) used to create the reward.
   * @return rewardTierId
   */
  @javax.annotation.Nonnull
  public String getRewardTierId() {
    return rewardTierId;
  }

  public void setRewardTierId(String rewardTierId) {
    this.rewardTierId = rewardTierId;
  }


  public LoyaltyReward status(String status) {
    this.status = status;
    return this;
  }

  /**
   * The status of a loyalty reward.
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public LoyaltyReward updatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * The timestamp when the reward was last updated, in RFC 3339 format.
   * @return updatedAt
   */
  @javax.annotation.Nullable
  public String getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoyaltyReward loyaltyReward = (LoyaltyReward) o;
    return Objects.equals(this.createdAt, loyaltyReward.createdAt) &&
        Objects.equals(this.id, loyaltyReward.id) &&
        Objects.equals(this.loyaltyAccountId, loyaltyReward.loyaltyAccountId) &&
        Objects.equals(this.orderId, loyaltyReward.orderId) &&
        Objects.equals(this.points, loyaltyReward.points) &&
        Objects.equals(this.redeemedAt, loyaltyReward.redeemedAt) &&
        Objects.equals(this.rewardTierId, loyaltyReward.rewardTierId) &&
        Objects.equals(this.status, loyaltyReward.status) &&
        Objects.equals(this.updatedAt, loyaltyReward.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdAt, id, loyaltyAccountId, orderId, points, redeemedAt, rewardTierId, status, updatedAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoyaltyReward {\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    loyaltyAccountId: ").append(toIndentedString(loyaltyAccountId)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    points: ").append(toIndentedString(points)).append("\n");
    sb.append("    redeemedAt: ").append(toIndentedString(redeemedAt)).append("\n");
    sb.append("    rewardTierId: ").append(toIndentedString(rewardTierId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("created_at");
    openapiFields.add("id");
    openapiFields.add("loyalty_account_id");
    openapiFields.add("order_id");
    openapiFields.add("points");
    openapiFields.add("redeemed_at");
    openapiFields.add("reward_tier_id");
    openapiFields.add("status");
    openapiFields.add("updated_at");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("loyalty_account_id");
    openapiRequiredFields.add("reward_tier_id");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to LoyaltyReward
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!LoyaltyReward.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in LoyaltyReward is not found in the empty JSON string", LoyaltyReward.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!LoyaltyReward.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `LoyaltyReward` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : LoyaltyReward.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("created_at") != null && !jsonObj.get("created_at").isJsonNull()) && !jsonObj.get("created_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_at").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if (!jsonObj.get("loyalty_account_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `loyalty_account_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("loyalty_account_id").toString()));
      }
      if ((jsonObj.get("order_id") != null && !jsonObj.get("order_id").isJsonNull()) && !jsonObj.get("order_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `order_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("order_id").toString()));
      }
      if ((jsonObj.get("redeemed_at") != null && !jsonObj.get("redeemed_at").isJsonNull()) && !jsonObj.get("redeemed_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `redeemed_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("redeemed_at").toString()));
      }
      if (!jsonObj.get("reward_tier_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reward_tier_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reward_tier_id").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("updated_at") != null && !jsonObj.get("updated_at").isJsonNull()) && !jsonObj.get("updated_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updated_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updated_at").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!LoyaltyReward.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'LoyaltyReward' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<LoyaltyReward> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(LoyaltyReward.class));

       return (TypeAdapter<T>) new TypeAdapter<LoyaltyReward>() {
           @Override
           public void write(JsonWriter out, LoyaltyReward value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public LoyaltyReward read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of LoyaltyReward given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of LoyaltyReward
   * @throws IOException if the JSON string is invalid with respect to LoyaltyReward
   */
  public static LoyaltyReward fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, LoyaltyReward.class);
  }

  /**
   * Convert an instance of LoyaltyReward to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

