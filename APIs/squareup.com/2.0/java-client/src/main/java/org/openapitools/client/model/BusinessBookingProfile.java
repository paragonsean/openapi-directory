/*
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.BusinessAppointmentSettings;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * 
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:20:53.300629-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BusinessBookingProfile {
  public static final String SERIALIZED_NAME_ALLOW_USER_CANCEL = "allow_user_cancel";
  @SerializedName(SERIALIZED_NAME_ALLOW_USER_CANCEL)
  private Boolean allowUserCancel;

  public static final String SERIALIZED_NAME_BOOKING_ENABLED = "booking_enabled";
  @SerializedName(SERIALIZED_NAME_BOOKING_ENABLED)
  private Boolean bookingEnabled;

  public static final String SERIALIZED_NAME_BOOKING_POLICY = "booking_policy";
  @SerializedName(SERIALIZED_NAME_BOOKING_POLICY)
  private String bookingPolicy;

  public static final String SERIALIZED_NAME_BUSINESS_APPOINTMENT_SETTINGS = "business_appointment_settings";
  @SerializedName(SERIALIZED_NAME_BUSINESS_APPOINTMENT_SETTINGS)
  private BusinessAppointmentSettings businessAppointmentSettings;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_CUSTOMER_TIMEZONE_CHOICE = "customer_timezone_choice";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_TIMEZONE_CHOICE)
  private String customerTimezoneChoice;

  public static final String SERIALIZED_NAME_SELLER_ID = "seller_id";
  @SerializedName(SERIALIZED_NAME_SELLER_ID)
  private String sellerId;

  public BusinessBookingProfile() {
  }

  public BusinessBookingProfile allowUserCancel(Boolean allowUserCancel) {
    this.allowUserCancel = allowUserCancel;
    return this;
  }

  /**
   * Indicates whether customers can cancel or reschedule their own bookings (&#x60;true&#x60;) or not (&#x60;false&#x60;).
   * @return allowUserCancel
   */
  @javax.annotation.Nullable
  public Boolean getAllowUserCancel() {
    return allowUserCancel;
  }

  public void setAllowUserCancel(Boolean allowUserCancel) {
    this.allowUserCancel = allowUserCancel;
  }


  public BusinessBookingProfile bookingEnabled(Boolean bookingEnabled) {
    this.bookingEnabled = bookingEnabled;
    return this;
  }

  /**
   * Indicates whether the seller is open for booking.
   * @return bookingEnabled
   */
  @javax.annotation.Nullable
  public Boolean getBookingEnabled() {
    return bookingEnabled;
  }

  public void setBookingEnabled(Boolean bookingEnabled) {
    this.bookingEnabled = bookingEnabled;
  }


  public BusinessBookingProfile bookingPolicy(String bookingPolicy) {
    this.bookingPolicy = bookingPolicy;
    return this;
  }

  /**
   * The policy for the seller to automatically accept booking requests (&#x60;ACCEPT_ALL&#x60;) or not (&#x60;REQUIRES_ACCEPTANCE&#x60;).
   * @return bookingPolicy
   */
  @javax.annotation.Nullable
  public String getBookingPolicy() {
    return bookingPolicy;
  }

  public void setBookingPolicy(String bookingPolicy) {
    this.bookingPolicy = bookingPolicy;
  }


  public BusinessBookingProfile businessAppointmentSettings(BusinessAppointmentSettings businessAppointmentSettings) {
    this.businessAppointmentSettings = businessAppointmentSettings;
    return this;
  }

  /**
   * Get businessAppointmentSettings
   * @return businessAppointmentSettings
   */
  @javax.annotation.Nullable
  public BusinessAppointmentSettings getBusinessAppointmentSettings() {
    return businessAppointmentSettings;
  }

  public void setBusinessAppointmentSettings(BusinessAppointmentSettings businessAppointmentSettings) {
    this.businessAppointmentSettings = businessAppointmentSettings;
  }


  public BusinessBookingProfile createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * The RFC 3339 timestamp specifying the booking&#39;s creation time.
   * @return createdAt
   */
  @javax.annotation.Nullable
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }


  public BusinessBookingProfile customerTimezoneChoice(String customerTimezoneChoice) {
    this.customerTimezoneChoice = customerTimezoneChoice;
    return this;
  }

  /**
   * The choice of customer&#39;s time zone information of a booking. The Square online booking site and all notifications to customers uses either the seller locationâ€™s time zone or the time zone the customer chooses at booking.
   * @return customerTimezoneChoice
   */
  @javax.annotation.Nullable
  public String getCustomerTimezoneChoice() {
    return customerTimezoneChoice;
  }

  public void setCustomerTimezoneChoice(String customerTimezoneChoice) {
    this.customerTimezoneChoice = customerTimezoneChoice;
  }


  public BusinessBookingProfile sellerId(String sellerId) {
    this.sellerId = sellerId;
    return this;
  }

  /**
   * The ID of the seller, obtainable using the Merchants API.
   * @return sellerId
   */
  @javax.annotation.Nullable
  public String getSellerId() {
    return sellerId;
  }

  public void setSellerId(String sellerId) {
    this.sellerId = sellerId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BusinessBookingProfile businessBookingProfile = (BusinessBookingProfile) o;
    return Objects.equals(this.allowUserCancel, businessBookingProfile.allowUserCancel) &&
        Objects.equals(this.bookingEnabled, businessBookingProfile.bookingEnabled) &&
        Objects.equals(this.bookingPolicy, businessBookingProfile.bookingPolicy) &&
        Objects.equals(this.businessAppointmentSettings, businessBookingProfile.businessAppointmentSettings) &&
        Objects.equals(this.createdAt, businessBookingProfile.createdAt) &&
        Objects.equals(this.customerTimezoneChoice, businessBookingProfile.customerTimezoneChoice) &&
        Objects.equals(this.sellerId, businessBookingProfile.sellerId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowUserCancel, bookingEnabled, bookingPolicy, businessAppointmentSettings, createdAt, customerTimezoneChoice, sellerId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BusinessBookingProfile {\n");
    sb.append("    allowUserCancel: ").append(toIndentedString(allowUserCancel)).append("\n");
    sb.append("    bookingEnabled: ").append(toIndentedString(bookingEnabled)).append("\n");
    sb.append("    bookingPolicy: ").append(toIndentedString(bookingPolicy)).append("\n");
    sb.append("    businessAppointmentSettings: ").append(toIndentedString(businessAppointmentSettings)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    customerTimezoneChoice: ").append(toIndentedString(customerTimezoneChoice)).append("\n");
    sb.append("    sellerId: ").append(toIndentedString(sellerId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("allow_user_cancel");
    openapiFields.add("booking_enabled");
    openapiFields.add("booking_policy");
    openapiFields.add("business_appointment_settings");
    openapiFields.add("created_at");
    openapiFields.add("customer_timezone_choice");
    openapiFields.add("seller_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BusinessBookingProfile
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BusinessBookingProfile.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BusinessBookingProfile is not found in the empty JSON string", BusinessBookingProfile.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BusinessBookingProfile.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BusinessBookingProfile` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("booking_policy") != null && !jsonObj.get("booking_policy").isJsonNull()) && !jsonObj.get("booking_policy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `booking_policy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("booking_policy").toString()));
      }
      // validate the optional field `business_appointment_settings`
      if (jsonObj.get("business_appointment_settings") != null && !jsonObj.get("business_appointment_settings").isJsonNull()) {
        BusinessAppointmentSettings.validateJsonElement(jsonObj.get("business_appointment_settings"));
      }
      if ((jsonObj.get("created_at") != null && !jsonObj.get("created_at").isJsonNull()) && !jsonObj.get("created_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_at").toString()));
      }
      if ((jsonObj.get("customer_timezone_choice") != null && !jsonObj.get("customer_timezone_choice").isJsonNull()) && !jsonObj.get("customer_timezone_choice").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customer_timezone_choice` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customer_timezone_choice").toString()));
      }
      if ((jsonObj.get("seller_id") != null && !jsonObj.get("seller_id").isJsonNull()) && !jsonObj.get("seller_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `seller_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("seller_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BusinessBookingProfile.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BusinessBookingProfile' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BusinessBookingProfile> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BusinessBookingProfile.class));

       return (TypeAdapter<T>) new TypeAdapter<BusinessBookingProfile>() {
           @Override
           public void write(JsonWriter out, BusinessBookingProfile value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BusinessBookingProfile read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BusinessBookingProfile given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BusinessBookingProfile
   * @throws IOException if the JSON string is invalid with respect to BusinessBookingProfile
   */
  public static BusinessBookingProfile fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BusinessBookingProfile.class);
  }

  /**
   * Convert an instance of BusinessBookingProfile to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

