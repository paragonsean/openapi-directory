/*
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Indicates the method used to create the customer profile.
 */
@JsonAdapter(CustomerCreationSource.Adapter.class)
public enum CustomerCreationSource {
  
  OTHER("OTHER"),
  
  APPOINTMENTS("APPOINTMENTS"),
  
  COUPON("COUPON"),
  
  DELETION_RECOVERY("DELETION_RECOVERY"),
  
  DIRECTORY("DIRECTORY"),
  
  EGIFTING("EGIFTING"),
  
  EMAIL_COLLECTION("EMAIL_COLLECTION"),
  
  FEEDBACK("FEEDBACK"),
  
  IMPORT("IMPORT"),
  
  INVOICES("INVOICES"),
  
  LOYALTY("LOYALTY"),
  
  MARKETING("MARKETING"),
  
  MERGE("MERGE"),
  
  ONLINE_STORE("ONLINE_STORE"),
  
  INSTANT_PROFILE("INSTANT_PROFILE"),
  
  TERMINAL("TERMINAL"),
  
  THIRD_PARTY("THIRD_PARTY"),
  
  THIRD_PARTY_IMPORT("THIRD_PARTY_IMPORT"),
  
  UNMERGE_RECOVERY("UNMERGE_RECOVERY");

  private String value;

  CustomerCreationSource(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static CustomerCreationSource fromValue(String value) {
    for (CustomerCreationSource b : CustomerCreationSource.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<CustomerCreationSource> {
    @Override
    public void write(final JsonWriter jsonWriter, final CustomerCreationSource enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public CustomerCreationSource read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return CustomerCreationSource.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    CustomerCreationSource.fromValue(value);
  }
}

