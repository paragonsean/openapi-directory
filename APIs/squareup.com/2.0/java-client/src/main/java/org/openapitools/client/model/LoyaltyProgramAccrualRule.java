/*
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Money;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Defines an accrual rule, which is how buyers can earn points.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:20:53.300629-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class LoyaltyProgramAccrualRule {
  public static final String SERIALIZED_NAME_ACCRUAL_TYPE = "accrual_type";
  @SerializedName(SERIALIZED_NAME_ACCRUAL_TYPE)
  private String accrualType;

  public static final String SERIALIZED_NAME_CATALOG_OBJECT_ID = "catalog_object_id";
  @SerializedName(SERIALIZED_NAME_CATALOG_OBJECT_ID)
  private String catalogObjectId;

  public static final String SERIALIZED_NAME_EXCLUDED_CATEGORY_IDS = "excluded_category_ids";
  @SerializedName(SERIALIZED_NAME_EXCLUDED_CATEGORY_IDS)
  private List<String> excludedCategoryIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_EXCLUDED_ITEM_VARIATION_IDS = "excluded_item_variation_ids";
  @SerializedName(SERIALIZED_NAME_EXCLUDED_ITEM_VARIATION_IDS)
  private List<String> excludedItemVariationIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_POINTS = "points";
  @SerializedName(SERIALIZED_NAME_POINTS)
  private Integer points;

  public static final String SERIALIZED_NAME_SPEND_AMOUNT_MONEY = "spend_amount_money";
  @SerializedName(SERIALIZED_NAME_SPEND_AMOUNT_MONEY)
  private Money spendAmountMoney;

  public static final String SERIALIZED_NAME_VISIT_MINIMUM_AMOUNT_MONEY = "visit_minimum_amount_money";
  @SerializedName(SERIALIZED_NAME_VISIT_MINIMUM_AMOUNT_MONEY)
  private Money visitMinimumAmountMoney;

  public LoyaltyProgramAccrualRule() {
  }

  public LoyaltyProgramAccrualRule accrualType(String accrualType) {
    this.accrualType = accrualType;
    return this;
  }

  /**
   * The type of the accrual rule that defines how buyers can earn points.
   * @return accrualType
   */
  @javax.annotation.Nonnull
  public String getAccrualType() {
    return accrualType;
  }

  public void setAccrualType(String accrualType) {
    this.accrualType = accrualType;
  }


  public LoyaltyProgramAccrualRule catalogObjectId(String catalogObjectId) {
    this.catalogObjectId = catalogObjectId;
    return this;
  }

  /**
   * When the accrual rule is item-based or category-based, this field specifies the ID  of the [catalog object](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject) that buyers can purchase to earn points.  If &#x60;accrual_type&#x60; is &#x60;ITEM_VARIATION&#x60;, the object is an item variation.  If &#x60;accrual_type&#x60; is &#x60;CATEGORY&#x60;, the object is a category.
   * @return catalogObjectId
   */
  @javax.annotation.Nullable
  public String getCatalogObjectId() {
    return catalogObjectId;
  }

  public void setCatalogObjectId(String catalogObjectId) {
    this.catalogObjectId = catalogObjectId;
  }


  public LoyaltyProgramAccrualRule excludedCategoryIds(List<String> excludedCategoryIds) {
    this.excludedCategoryIds = excludedCategoryIds;
    return this;
  }

  public LoyaltyProgramAccrualRule addExcludedCategoryIdsItem(String excludedCategoryIdsItem) {
    if (this.excludedCategoryIds == null) {
      this.excludedCategoryIds = new ArrayList<>();
    }
    this.excludedCategoryIds.add(excludedCategoryIdsItem);
    return this;
  }

  /**
   * When the accrual rule is spend-based (&#x60;accrual_type&#x60; is &#x60;SPEND&#x60;), this field  lists the IDs of any &#x60;CATEGORY&#x60; catalog objects that are excluded from points accrual.   You can use the [BatchRetrieveCatalogObjects](https://developer.squareup.com/reference/square_2021-08-18/catalog-api/batch-retrieve-catalog-objects)  endpoint to retrieve information about the excluded categories.
   * @return excludedCategoryIds
   */
  @javax.annotation.Nullable
  public List<String> getExcludedCategoryIds() {
    return excludedCategoryIds;
  }

  public void setExcludedCategoryIds(List<String> excludedCategoryIds) {
    this.excludedCategoryIds = excludedCategoryIds;
  }


  public LoyaltyProgramAccrualRule excludedItemVariationIds(List<String> excludedItemVariationIds) {
    this.excludedItemVariationIds = excludedItemVariationIds;
    return this;
  }

  public LoyaltyProgramAccrualRule addExcludedItemVariationIdsItem(String excludedItemVariationIdsItem) {
    if (this.excludedItemVariationIds == null) {
      this.excludedItemVariationIds = new ArrayList<>();
    }
    this.excludedItemVariationIds.add(excludedItemVariationIdsItem);
    return this;
  }

  /**
   * When the accrual rule is spend-based (&#x60;accrual_type&#x60; is &#x60;SPEND&#x60;), this field  lists the IDs of any &#x60;ITEM_VARIATION&#x60; catalog objects that are excluded from points accrual.   You can use the [BatchRetrieveCatalogObjects](https://developer.squareup.com/reference/square_2021-08-18/catalog-api/batch-retrieve-catalog-objects)  endpoint to retrieve information about the excluded item variations.
   * @return excludedItemVariationIds
   */
  @javax.annotation.Nullable
  public List<String> getExcludedItemVariationIds() {
    return excludedItemVariationIds;
  }

  public void setExcludedItemVariationIds(List<String> excludedItemVariationIds) {
    this.excludedItemVariationIds = excludedItemVariationIds;
  }


  public LoyaltyProgramAccrualRule points(Integer points) {
    this.points = points;
    return this;
  }

  /**
   * The number of points that  buyers earn based on the &#x60;accrual_type&#x60;.
   * minimum: 1
   * @return points
   */
  @javax.annotation.Nullable
  public Integer getPoints() {
    return points;
  }

  public void setPoints(Integer points) {
    this.points = points;
  }


  public LoyaltyProgramAccrualRule spendAmountMoney(Money spendAmountMoney) {
    this.spendAmountMoney = spendAmountMoney;
    return this;
  }

  /**
   * Get spendAmountMoney
   * @return spendAmountMoney
   */
  @javax.annotation.Nullable
  public Money getSpendAmountMoney() {
    return spendAmountMoney;
  }

  public void setSpendAmountMoney(Money spendAmountMoney) {
    this.spendAmountMoney = spendAmountMoney;
  }


  public LoyaltyProgramAccrualRule visitMinimumAmountMoney(Money visitMinimumAmountMoney) {
    this.visitMinimumAmountMoney = visitMinimumAmountMoney;
    return this;
  }

  /**
   * Get visitMinimumAmountMoney
   * @return visitMinimumAmountMoney
   */
  @javax.annotation.Nullable
  public Money getVisitMinimumAmountMoney() {
    return visitMinimumAmountMoney;
  }

  public void setVisitMinimumAmountMoney(Money visitMinimumAmountMoney) {
    this.visitMinimumAmountMoney = visitMinimumAmountMoney;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoyaltyProgramAccrualRule loyaltyProgramAccrualRule = (LoyaltyProgramAccrualRule) o;
    return Objects.equals(this.accrualType, loyaltyProgramAccrualRule.accrualType) &&
        Objects.equals(this.catalogObjectId, loyaltyProgramAccrualRule.catalogObjectId) &&
        Objects.equals(this.excludedCategoryIds, loyaltyProgramAccrualRule.excludedCategoryIds) &&
        Objects.equals(this.excludedItemVariationIds, loyaltyProgramAccrualRule.excludedItemVariationIds) &&
        Objects.equals(this.points, loyaltyProgramAccrualRule.points) &&
        Objects.equals(this.spendAmountMoney, loyaltyProgramAccrualRule.spendAmountMoney) &&
        Objects.equals(this.visitMinimumAmountMoney, loyaltyProgramAccrualRule.visitMinimumAmountMoney);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accrualType, catalogObjectId, excludedCategoryIds, excludedItemVariationIds, points, spendAmountMoney, visitMinimumAmountMoney);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoyaltyProgramAccrualRule {\n");
    sb.append("    accrualType: ").append(toIndentedString(accrualType)).append("\n");
    sb.append("    catalogObjectId: ").append(toIndentedString(catalogObjectId)).append("\n");
    sb.append("    excludedCategoryIds: ").append(toIndentedString(excludedCategoryIds)).append("\n");
    sb.append("    excludedItemVariationIds: ").append(toIndentedString(excludedItemVariationIds)).append("\n");
    sb.append("    points: ").append(toIndentedString(points)).append("\n");
    sb.append("    spendAmountMoney: ").append(toIndentedString(spendAmountMoney)).append("\n");
    sb.append("    visitMinimumAmountMoney: ").append(toIndentedString(visitMinimumAmountMoney)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("accrual_type");
    openapiFields.add("catalog_object_id");
    openapiFields.add("excluded_category_ids");
    openapiFields.add("excluded_item_variation_ids");
    openapiFields.add("points");
    openapiFields.add("spend_amount_money");
    openapiFields.add("visit_minimum_amount_money");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("accrual_type");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to LoyaltyProgramAccrualRule
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!LoyaltyProgramAccrualRule.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in LoyaltyProgramAccrualRule is not found in the empty JSON string", LoyaltyProgramAccrualRule.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!LoyaltyProgramAccrualRule.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `LoyaltyProgramAccrualRule` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : LoyaltyProgramAccrualRule.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("accrual_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accrual_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accrual_type").toString()));
      }
      if ((jsonObj.get("catalog_object_id") != null && !jsonObj.get("catalog_object_id").isJsonNull()) && !jsonObj.get("catalog_object_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `catalog_object_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("catalog_object_id").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("excluded_category_ids") != null && !jsonObj.get("excluded_category_ids").isJsonNull() && !jsonObj.get("excluded_category_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `excluded_category_ids` to be an array in the JSON string but got `%s`", jsonObj.get("excluded_category_ids").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("excluded_item_variation_ids") != null && !jsonObj.get("excluded_item_variation_ids").isJsonNull() && !jsonObj.get("excluded_item_variation_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `excluded_item_variation_ids` to be an array in the JSON string but got `%s`", jsonObj.get("excluded_item_variation_ids").toString()));
      }
      // validate the optional field `spend_amount_money`
      if (jsonObj.get("spend_amount_money") != null && !jsonObj.get("spend_amount_money").isJsonNull()) {
        Money.validateJsonElement(jsonObj.get("spend_amount_money"));
      }
      // validate the optional field `visit_minimum_amount_money`
      if (jsonObj.get("visit_minimum_amount_money") != null && !jsonObj.get("visit_minimum_amount_money").isJsonNull()) {
        Money.validateJsonElement(jsonObj.get("visit_minimum_amount_money"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!LoyaltyProgramAccrualRule.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'LoyaltyProgramAccrualRule' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<LoyaltyProgramAccrualRule> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(LoyaltyProgramAccrualRule.class));

       return (TypeAdapter<T>) new TypeAdapter<LoyaltyProgramAccrualRule>() {
           @Override
           public void write(JsonWriter out, LoyaltyProgramAccrualRule value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public LoyaltyProgramAccrualRule read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of LoyaltyProgramAccrualRule given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of LoyaltyProgramAccrualRule
   * @throws IOException if the JSON string is invalid with respect to LoyaltyProgramAccrualRule
   */
  public static LoyaltyProgramAccrualRule fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, LoyaltyProgramAccrualRule.class);
  }

  /**
   * Convert an instance of LoyaltyProgramAccrualRule to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

