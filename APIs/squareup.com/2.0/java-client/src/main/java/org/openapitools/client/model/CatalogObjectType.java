/*
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Possible types of CatalogObjects returned from the Catalog, each containing type-specific properties in the &#x60;*_data&#x60; field corresponding to the object type.
 */
@JsonAdapter(CatalogObjectType.Adapter.class)
public enum CatalogObjectType {
  
  ITEM("ITEM"),
  
  IMAGE("IMAGE"),
  
  CATEGORY("CATEGORY"),
  
  ITEM_VARIATION("ITEM_VARIATION"),
  
  TAX("TAX"),
  
  DISCOUNT("DISCOUNT"),
  
  MODIFIER_LIST("MODIFIER_LIST"),
  
  MODIFIER("MODIFIER"),
  
  PRICING_RULE("PRICING_RULE"),
  
  PRODUCT_SET("PRODUCT_SET"),
  
  TIME_PERIOD("TIME_PERIOD"),
  
  MEASUREMENT_UNIT("MEASUREMENT_UNIT"),
  
  SUBSCRIPTION_PLAN("SUBSCRIPTION_PLAN"),
  
  ITEM_OPTION("ITEM_OPTION"),
  
  ITEM_OPTION_VAL("ITEM_OPTION_VAL"),
  
  CUSTOM_ATTRIBUTE_DEFINITION("CUSTOM_ATTRIBUTE_DEFINITION"),
  
  QUICK_AMOUNTS_SETTINGS("QUICK_AMOUNTS_SETTINGS");

  private String value;

  CatalogObjectType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static CatalogObjectType fromValue(String value) {
    for (CatalogObjectType b : CatalogObjectType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<CatalogObjectType> {
    @Override
    public void write(final JsonWriter jsonWriter, final CatalogObjectType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public CatalogObjectType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return CatalogObjectType.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    CatalogObjectType.fromValue(value);
  }
}

