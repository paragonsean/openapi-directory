/*
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * 
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:20:53.300629-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BatchDeleteCatalogObjectsRequest {
  public static final String SERIALIZED_NAME_OBJECT_IDS = "object_ids";
  @SerializedName(SERIALIZED_NAME_OBJECT_IDS)
  private List<String> objectIds = new ArrayList<>();

  public BatchDeleteCatalogObjectsRequest() {
  }

  public BatchDeleteCatalogObjectsRequest objectIds(List<String> objectIds) {
    this.objectIds = objectIds;
    return this;
  }

  public BatchDeleteCatalogObjectsRequest addObjectIdsItem(String objectIdsItem) {
    if (this.objectIds == null) {
      this.objectIds = new ArrayList<>();
    }
    this.objectIds.add(objectIdsItem);
    return this;
  }

  /**
   * The IDs of the CatalogObjects to be deleted. When an object is deleted, other objects in the graph that depend on that object will be deleted as well (for example, deleting a CatalogItem will delete its CatalogItemVariation.
   * @return objectIds
   */
  @javax.annotation.Nullable
  public List<String> getObjectIds() {
    return objectIds;
  }

  public void setObjectIds(List<String> objectIds) {
    this.objectIds = objectIds;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BatchDeleteCatalogObjectsRequest batchDeleteCatalogObjectsRequest = (BatchDeleteCatalogObjectsRequest) o;
    return Objects.equals(this.objectIds, batchDeleteCatalogObjectsRequest.objectIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(objectIds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BatchDeleteCatalogObjectsRequest {\n");
    sb.append("    objectIds: ").append(toIndentedString(objectIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("object_ids");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BatchDeleteCatalogObjectsRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BatchDeleteCatalogObjectsRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BatchDeleteCatalogObjectsRequest is not found in the empty JSON string", BatchDeleteCatalogObjectsRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BatchDeleteCatalogObjectsRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BatchDeleteCatalogObjectsRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("object_ids") != null && !jsonObj.get("object_ids").isJsonNull() && !jsonObj.get("object_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `object_ids` to be an array in the JSON string but got `%s`", jsonObj.get("object_ids").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BatchDeleteCatalogObjectsRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BatchDeleteCatalogObjectsRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BatchDeleteCatalogObjectsRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BatchDeleteCatalogObjectsRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<BatchDeleteCatalogObjectsRequest>() {
           @Override
           public void write(JsonWriter out, BatchDeleteCatalogObjectsRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BatchDeleteCatalogObjectsRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BatchDeleteCatalogObjectsRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BatchDeleteCatalogObjectsRequest
   * @throws IOException if the JSON string is invalid with respect to BatchDeleteCatalogObjectsRequest
   */
  public static BatchDeleteCatalogObjectsRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BatchDeleteCatalogObjectsRequest.class);
  }

  /**
   * Convert an instance of BatchDeleteCatalogObjectsRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

