/*
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.OrderFulfillmentRecipient;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Contains the details necessary to fulfill a shipment order.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:20:53.300629-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class OrderFulfillmentShipmentDetails {
  public static final String SERIALIZED_NAME_CANCEL_REASON = "cancel_reason";
  @SerializedName(SERIALIZED_NAME_CANCEL_REASON)
  private String cancelReason;

  public static final String SERIALIZED_NAME_CANCELED_AT = "canceled_at";
  @SerializedName(SERIALIZED_NAME_CANCELED_AT)
  private String canceledAt;

  public static final String SERIALIZED_NAME_CARRIER = "carrier";
  @SerializedName(SERIALIZED_NAME_CARRIER)
  private String carrier;

  public static final String SERIALIZED_NAME_EXPECTED_SHIPPED_AT = "expected_shipped_at";
  @SerializedName(SERIALIZED_NAME_EXPECTED_SHIPPED_AT)
  private String expectedShippedAt;

  public static final String SERIALIZED_NAME_FAILED_AT = "failed_at";
  @SerializedName(SERIALIZED_NAME_FAILED_AT)
  private String failedAt;

  public static final String SERIALIZED_NAME_FAILURE_REASON = "failure_reason";
  @SerializedName(SERIALIZED_NAME_FAILURE_REASON)
  private String failureReason;

  public static final String SERIALIZED_NAME_IN_PROGRESS_AT = "in_progress_at";
  @SerializedName(SERIALIZED_NAME_IN_PROGRESS_AT)
  private String inProgressAt;

  public static final String SERIALIZED_NAME_PACKAGED_AT = "packaged_at";
  @SerializedName(SERIALIZED_NAME_PACKAGED_AT)
  private String packagedAt;

  public static final String SERIALIZED_NAME_PLACED_AT = "placed_at";
  @SerializedName(SERIALIZED_NAME_PLACED_AT)
  private String placedAt;

  public static final String SERIALIZED_NAME_RECIPIENT = "recipient";
  @SerializedName(SERIALIZED_NAME_RECIPIENT)
  private OrderFulfillmentRecipient recipient;

  public static final String SERIALIZED_NAME_SHIPPED_AT = "shipped_at";
  @SerializedName(SERIALIZED_NAME_SHIPPED_AT)
  private String shippedAt;

  public static final String SERIALIZED_NAME_SHIPPING_NOTE = "shipping_note";
  @SerializedName(SERIALIZED_NAME_SHIPPING_NOTE)
  private String shippingNote;

  public static final String SERIALIZED_NAME_SHIPPING_TYPE = "shipping_type";
  @SerializedName(SERIALIZED_NAME_SHIPPING_TYPE)
  private String shippingType;

  public static final String SERIALIZED_NAME_TRACKING_NUMBER = "tracking_number";
  @SerializedName(SERIALIZED_NAME_TRACKING_NUMBER)
  private String trackingNumber;

  public static final String SERIALIZED_NAME_TRACKING_URL = "tracking_url";
  @SerializedName(SERIALIZED_NAME_TRACKING_URL)
  private String trackingUrl;

  public OrderFulfillmentShipmentDetails() {
  }

  public OrderFulfillmentShipmentDetails cancelReason(String cancelReason) {
    this.cancelReason = cancelReason;
    return this;
  }

  /**
   * A description of why the shipment was canceled.
   * @return cancelReason
   */
  @javax.annotation.Nullable
  public String getCancelReason() {
    return cancelReason;
  }

  public void setCancelReason(String cancelReason) {
    this.cancelReason = cancelReason;
  }


  public OrderFulfillmentShipmentDetails canceledAt(String canceledAt) {
    this.canceledAt = canceledAt;
    return this;
  }

  /**
   * The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates) indicating the shipment was canceled. The timestamp must be in RFC 3339 format (for example, \&quot;2016-09-04T23:59:33.123Z\&quot;).
   * @return canceledAt
   */
  @javax.annotation.Nullable
  public String getCanceledAt() {
    return canceledAt;
  }

  public void setCanceledAt(String canceledAt) {
    this.canceledAt = canceledAt;
  }


  public OrderFulfillmentShipmentDetails carrier(String carrier) {
    this.carrier = carrier;
    return this;
  }

  /**
   * The shipping carrier being used to ship this fulfillment (such as UPS, FedEx, or USPS).
   * @return carrier
   */
  @javax.annotation.Nullable
  public String getCarrier() {
    return carrier;
  }

  public void setCarrier(String carrier) {
    this.carrier = carrier;
  }


  public OrderFulfillmentShipmentDetails expectedShippedAt(String expectedShippedAt) {
    this.expectedShippedAt = expectedShippedAt;
    return this;
  }

  /**
   * The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates) indicating when the shipment is expected to be delivered to the shipping carrier. The timestamp must be in RFC 3339 format (for example, \&quot;2016-09-04T23:59:33.123Z\&quot;).
   * @return expectedShippedAt
   */
  @javax.annotation.Nullable
  public String getExpectedShippedAt() {
    return expectedShippedAt;
  }

  public void setExpectedShippedAt(String expectedShippedAt) {
    this.expectedShippedAt = expectedShippedAt;
  }


  public OrderFulfillmentShipmentDetails failedAt(String failedAt) {
    this.failedAt = failedAt;
    return this;
  }

  /**
   * The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates) indicating when the shipment failed to be completed. The timestamp must be in RFC 3339 format (for example, \&quot;2016-09-04T23:59:33.123Z\&quot;).
   * @return failedAt
   */
  @javax.annotation.Nullable
  public String getFailedAt() {
    return failedAt;
  }

  public void setFailedAt(String failedAt) {
    this.failedAt = failedAt;
  }


  public OrderFulfillmentShipmentDetails failureReason(String failureReason) {
    this.failureReason = failureReason;
    return this;
  }

  /**
   * A description of why the shipment failed to be completed.
   * @return failureReason
   */
  @javax.annotation.Nullable
  public String getFailureReason() {
    return failureReason;
  }

  public void setFailureReason(String failureReason) {
    this.failureReason = failureReason;
  }


  public OrderFulfillmentShipmentDetails inProgressAt(String inProgressAt) {
    this.inProgressAt = inProgressAt;
    return this;
  }

  /**
   * The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates) indicating when this fulfillment was moved to the &#x60;RESERVED&#x60; state, which  indicates that preparation of this shipment has begun. The timestamp must be in RFC 3339 format (for example, \&quot;2016-09-04T23:59:33.123Z\&quot;).
   * @return inProgressAt
   */
  @javax.annotation.Nullable
  public String getInProgressAt() {
    return inProgressAt;
  }

  public void setInProgressAt(String inProgressAt) {
    this.inProgressAt = inProgressAt;
  }


  public OrderFulfillmentShipmentDetails packagedAt(String packagedAt) {
    this.packagedAt = packagedAt;
    return this;
  }

  /**
   * The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates) indicating when this fulfillment was moved to the &#x60;PREPARED&#x60; state, which indicates that the fulfillment is packaged. The timestamp must be in RFC 3339 format (for example, \&quot;2016-09-04T23:59:33.123Z\&quot;).
   * @return packagedAt
   */
  @javax.annotation.Nullable
  public String getPackagedAt() {
    return packagedAt;
  }

  public void setPackagedAt(String packagedAt) {
    this.packagedAt = packagedAt;
  }


  public OrderFulfillmentShipmentDetails placedAt(String placedAt) {
    this.placedAt = placedAt;
    return this;
  }

  /**
   * The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates) indicating when the shipment was requested. The timestamp must be in RFC 3339 format (for example, \&quot;2016-09-04T23:59:33.123Z\&quot;).
   * @return placedAt
   */
  @javax.annotation.Nullable
  public String getPlacedAt() {
    return placedAt;
  }

  public void setPlacedAt(String placedAt) {
    this.placedAt = placedAt;
  }


  public OrderFulfillmentShipmentDetails recipient(OrderFulfillmentRecipient recipient) {
    this.recipient = recipient;
    return this;
  }

  /**
   * Get recipient
   * @return recipient
   */
  @javax.annotation.Nullable
  public OrderFulfillmentRecipient getRecipient() {
    return recipient;
  }

  public void setRecipient(OrderFulfillmentRecipient recipient) {
    this.recipient = recipient;
  }


  public OrderFulfillmentShipmentDetails shippedAt(String shippedAt) {
    this.shippedAt = shippedAt;
    return this;
  }

  /**
   * The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates) indicating when this fulfillment was moved to the &#x60;COMPLETED&#x60; state, which indicates that the fulfillment has been given to the shipping carrier. The timestamp must be in RFC 3339 format (for example, \&quot;2016-09-04T23:59:33.123Z\&quot;).
   * @return shippedAt
   */
  @javax.annotation.Nullable
  public String getShippedAt() {
    return shippedAt;
  }

  public void setShippedAt(String shippedAt) {
    this.shippedAt = shippedAt;
  }


  public OrderFulfillmentShipmentDetails shippingNote(String shippingNote) {
    this.shippingNote = shippingNote;
    return this;
  }

  /**
   * A note with additional information for the shipping carrier.
   * @return shippingNote
   */
  @javax.annotation.Nullable
  public String getShippingNote() {
    return shippingNote;
  }

  public void setShippingNote(String shippingNote) {
    this.shippingNote = shippingNote;
  }


  public OrderFulfillmentShipmentDetails shippingType(String shippingType) {
    this.shippingType = shippingType;
    return this;
  }

  /**
   * A description of the type of shipping product purchased from the carrier (such as First Class, Priority, or Express).
   * @return shippingType
   */
  @javax.annotation.Nullable
  public String getShippingType() {
    return shippingType;
  }

  public void setShippingType(String shippingType) {
    this.shippingType = shippingType;
  }


  public OrderFulfillmentShipmentDetails trackingNumber(String trackingNumber) {
    this.trackingNumber = trackingNumber;
    return this;
  }

  /**
   * The reference number provided by the carrier to track the shipment&#39;s progress.
   * @return trackingNumber
   */
  @javax.annotation.Nullable
  public String getTrackingNumber() {
    return trackingNumber;
  }

  public void setTrackingNumber(String trackingNumber) {
    this.trackingNumber = trackingNumber;
  }


  public OrderFulfillmentShipmentDetails trackingUrl(String trackingUrl) {
    this.trackingUrl = trackingUrl;
    return this;
  }

  /**
   * A link to the tracking webpage on the carrier&#39;s website.
   * @return trackingUrl
   */
  @javax.annotation.Nullable
  public String getTrackingUrl() {
    return trackingUrl;
  }

  public void setTrackingUrl(String trackingUrl) {
    this.trackingUrl = trackingUrl;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderFulfillmentShipmentDetails orderFulfillmentShipmentDetails = (OrderFulfillmentShipmentDetails) o;
    return Objects.equals(this.cancelReason, orderFulfillmentShipmentDetails.cancelReason) &&
        Objects.equals(this.canceledAt, orderFulfillmentShipmentDetails.canceledAt) &&
        Objects.equals(this.carrier, orderFulfillmentShipmentDetails.carrier) &&
        Objects.equals(this.expectedShippedAt, orderFulfillmentShipmentDetails.expectedShippedAt) &&
        Objects.equals(this.failedAt, orderFulfillmentShipmentDetails.failedAt) &&
        Objects.equals(this.failureReason, orderFulfillmentShipmentDetails.failureReason) &&
        Objects.equals(this.inProgressAt, orderFulfillmentShipmentDetails.inProgressAt) &&
        Objects.equals(this.packagedAt, orderFulfillmentShipmentDetails.packagedAt) &&
        Objects.equals(this.placedAt, orderFulfillmentShipmentDetails.placedAt) &&
        Objects.equals(this.recipient, orderFulfillmentShipmentDetails.recipient) &&
        Objects.equals(this.shippedAt, orderFulfillmentShipmentDetails.shippedAt) &&
        Objects.equals(this.shippingNote, orderFulfillmentShipmentDetails.shippingNote) &&
        Objects.equals(this.shippingType, orderFulfillmentShipmentDetails.shippingType) &&
        Objects.equals(this.trackingNumber, orderFulfillmentShipmentDetails.trackingNumber) &&
        Objects.equals(this.trackingUrl, orderFulfillmentShipmentDetails.trackingUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cancelReason, canceledAt, carrier, expectedShippedAt, failedAt, failureReason, inProgressAt, packagedAt, placedAt, recipient, shippedAt, shippingNote, shippingType, trackingNumber, trackingUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderFulfillmentShipmentDetails {\n");
    sb.append("    cancelReason: ").append(toIndentedString(cancelReason)).append("\n");
    sb.append("    canceledAt: ").append(toIndentedString(canceledAt)).append("\n");
    sb.append("    carrier: ").append(toIndentedString(carrier)).append("\n");
    sb.append("    expectedShippedAt: ").append(toIndentedString(expectedShippedAt)).append("\n");
    sb.append("    failedAt: ").append(toIndentedString(failedAt)).append("\n");
    sb.append("    failureReason: ").append(toIndentedString(failureReason)).append("\n");
    sb.append("    inProgressAt: ").append(toIndentedString(inProgressAt)).append("\n");
    sb.append("    packagedAt: ").append(toIndentedString(packagedAt)).append("\n");
    sb.append("    placedAt: ").append(toIndentedString(placedAt)).append("\n");
    sb.append("    recipient: ").append(toIndentedString(recipient)).append("\n");
    sb.append("    shippedAt: ").append(toIndentedString(shippedAt)).append("\n");
    sb.append("    shippingNote: ").append(toIndentedString(shippingNote)).append("\n");
    sb.append("    shippingType: ").append(toIndentedString(shippingType)).append("\n");
    sb.append("    trackingNumber: ").append(toIndentedString(trackingNumber)).append("\n");
    sb.append("    trackingUrl: ").append(toIndentedString(trackingUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("cancel_reason");
    openapiFields.add("canceled_at");
    openapiFields.add("carrier");
    openapiFields.add("expected_shipped_at");
    openapiFields.add("failed_at");
    openapiFields.add("failure_reason");
    openapiFields.add("in_progress_at");
    openapiFields.add("packaged_at");
    openapiFields.add("placed_at");
    openapiFields.add("recipient");
    openapiFields.add("shipped_at");
    openapiFields.add("shipping_note");
    openapiFields.add("shipping_type");
    openapiFields.add("tracking_number");
    openapiFields.add("tracking_url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to OrderFulfillmentShipmentDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OrderFulfillmentShipmentDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrderFulfillmentShipmentDetails is not found in the empty JSON string", OrderFulfillmentShipmentDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OrderFulfillmentShipmentDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OrderFulfillmentShipmentDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("cancel_reason") != null && !jsonObj.get("cancel_reason").isJsonNull()) && !jsonObj.get("cancel_reason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cancel_reason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cancel_reason").toString()));
      }
      if ((jsonObj.get("canceled_at") != null && !jsonObj.get("canceled_at").isJsonNull()) && !jsonObj.get("canceled_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `canceled_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("canceled_at").toString()));
      }
      if ((jsonObj.get("carrier") != null && !jsonObj.get("carrier").isJsonNull()) && !jsonObj.get("carrier").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `carrier` to be a primitive type in the JSON string but got `%s`", jsonObj.get("carrier").toString()));
      }
      if ((jsonObj.get("expected_shipped_at") != null && !jsonObj.get("expected_shipped_at").isJsonNull()) && !jsonObj.get("expected_shipped_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `expected_shipped_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("expected_shipped_at").toString()));
      }
      if ((jsonObj.get("failed_at") != null && !jsonObj.get("failed_at").isJsonNull()) && !jsonObj.get("failed_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `failed_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("failed_at").toString()));
      }
      if ((jsonObj.get("failure_reason") != null && !jsonObj.get("failure_reason").isJsonNull()) && !jsonObj.get("failure_reason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `failure_reason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("failure_reason").toString()));
      }
      if ((jsonObj.get("in_progress_at") != null && !jsonObj.get("in_progress_at").isJsonNull()) && !jsonObj.get("in_progress_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `in_progress_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("in_progress_at").toString()));
      }
      if ((jsonObj.get("packaged_at") != null && !jsonObj.get("packaged_at").isJsonNull()) && !jsonObj.get("packaged_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `packaged_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("packaged_at").toString()));
      }
      if ((jsonObj.get("placed_at") != null && !jsonObj.get("placed_at").isJsonNull()) && !jsonObj.get("placed_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `placed_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("placed_at").toString()));
      }
      // validate the optional field `recipient`
      if (jsonObj.get("recipient") != null && !jsonObj.get("recipient").isJsonNull()) {
        OrderFulfillmentRecipient.validateJsonElement(jsonObj.get("recipient"));
      }
      if ((jsonObj.get("shipped_at") != null && !jsonObj.get("shipped_at").isJsonNull()) && !jsonObj.get("shipped_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipped_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipped_at").toString()));
      }
      if ((jsonObj.get("shipping_note") != null && !jsonObj.get("shipping_note").isJsonNull()) && !jsonObj.get("shipping_note").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipping_note` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipping_note").toString()));
      }
      if ((jsonObj.get("shipping_type") != null && !jsonObj.get("shipping_type").isJsonNull()) && !jsonObj.get("shipping_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipping_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipping_type").toString()));
      }
      if ((jsonObj.get("tracking_number") != null && !jsonObj.get("tracking_number").isJsonNull()) && !jsonObj.get("tracking_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tracking_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tracking_number").toString()));
      }
      if ((jsonObj.get("tracking_url") != null && !jsonObj.get("tracking_url").isJsonNull()) && !jsonObj.get("tracking_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tracking_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tracking_url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrderFulfillmentShipmentDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrderFulfillmentShipmentDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrderFulfillmentShipmentDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrderFulfillmentShipmentDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<OrderFulfillmentShipmentDetails>() {
           @Override
           public void write(JsonWriter out, OrderFulfillmentShipmentDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OrderFulfillmentShipmentDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of OrderFulfillmentShipmentDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of OrderFulfillmentShipmentDetails
   * @throws IOException if the JSON string is invalid with respect to OrderFulfillmentShipmentDetails
   */
  public static OrderFulfillmentShipmentDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrderFulfillmentShipmentDetails.class);
  }

  /**
   * Convert an instance of OrderFulfillmentShipmentDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

