/*
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GiftCardActivityActivate;
import org.openapitools.client.model.GiftCardActivityAdjustDecrement;
import org.openapitools.client.model.GiftCardActivityAdjustIncrement;
import org.openapitools.client.model.GiftCardActivityBlock;
import org.openapitools.client.model.GiftCardActivityClearBalance;
import org.openapitools.client.model.GiftCardActivityDeactivate;
import org.openapitools.client.model.GiftCardActivityImport;
import org.openapitools.client.model.GiftCardActivityImportReversal;
import org.openapitools.client.model.GiftCardActivityLoad;
import org.openapitools.client.model.GiftCardActivityRedeem;
import org.openapitools.client.model.GiftCardActivityRefund;
import org.openapitools.client.model.GiftCardActivityUnblock;
import org.openapitools.client.model.GiftCardActivityUnlinkedActivityRefund;
import org.openapitools.client.model.Money;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents an action performed on a gift card that affects its state or balance.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:20:53.300629-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GiftCardActivity {
  public static final String SERIALIZED_NAME_ACTIVATE_ACTIVITY_DETAILS = "activate_activity_details";
  @SerializedName(SERIALIZED_NAME_ACTIVATE_ACTIVITY_DETAILS)
  private GiftCardActivityActivate activateActivityDetails;

  public static final String SERIALIZED_NAME_ADJUST_DECREMENT_ACTIVITY_DETAILS = "adjust_decrement_activity_details";
  @SerializedName(SERIALIZED_NAME_ADJUST_DECREMENT_ACTIVITY_DETAILS)
  private GiftCardActivityAdjustDecrement adjustDecrementActivityDetails;

  public static final String SERIALIZED_NAME_ADJUST_INCREMENT_ACTIVITY_DETAILS = "adjust_increment_activity_details";
  @SerializedName(SERIALIZED_NAME_ADJUST_INCREMENT_ACTIVITY_DETAILS)
  private GiftCardActivityAdjustIncrement adjustIncrementActivityDetails;

  public static final String SERIALIZED_NAME_BLOCK_ACTIVITY_DETAILS = "block_activity_details";
  @SerializedName(SERIALIZED_NAME_BLOCK_ACTIVITY_DETAILS)
  private GiftCardActivityBlock blockActivityDetails;

  public static final String SERIALIZED_NAME_CLEAR_BALANCE_ACTIVITY_DETAILS = "clear_balance_activity_details";
  @SerializedName(SERIALIZED_NAME_CLEAR_BALANCE_ACTIVITY_DETAILS)
  private GiftCardActivityClearBalance clearBalanceActivityDetails;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_DEACTIVATE_ACTIVITY_DETAILS = "deactivate_activity_details";
  @SerializedName(SERIALIZED_NAME_DEACTIVATE_ACTIVITY_DETAILS)
  private GiftCardActivityDeactivate deactivateActivityDetails;

  public static final String SERIALIZED_NAME_GIFT_CARD_BALANCE_MONEY = "gift_card_balance_money";
  @SerializedName(SERIALIZED_NAME_GIFT_CARD_BALANCE_MONEY)
  private Money giftCardBalanceMoney;

  public static final String SERIALIZED_NAME_GIFT_CARD_GAN = "gift_card_gan";
  @SerializedName(SERIALIZED_NAME_GIFT_CARD_GAN)
  private String giftCardGan;

  public static final String SERIALIZED_NAME_GIFT_CARD_ID = "gift_card_id";
  @SerializedName(SERIALIZED_NAME_GIFT_CARD_ID)
  private String giftCardId;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_IMPORT_ACTIVITY_DETAILS = "import_activity_details";
  @SerializedName(SERIALIZED_NAME_IMPORT_ACTIVITY_DETAILS)
  private GiftCardActivityImport importActivityDetails;

  public static final String SERIALIZED_NAME_IMPORT_REVERSAL_ACTIVITY_DETAILS = "import_reversal_activity_details";
  @SerializedName(SERIALIZED_NAME_IMPORT_REVERSAL_ACTIVITY_DETAILS)
  private GiftCardActivityImportReversal importReversalActivityDetails;

  public static final String SERIALIZED_NAME_LOAD_ACTIVITY_DETAILS = "load_activity_details";
  @SerializedName(SERIALIZED_NAME_LOAD_ACTIVITY_DETAILS)
  private GiftCardActivityLoad loadActivityDetails;

  public static final String SERIALIZED_NAME_LOCATION_ID = "location_id";
  @SerializedName(SERIALIZED_NAME_LOCATION_ID)
  private String locationId;

  public static final String SERIALIZED_NAME_REDEEM_ACTIVITY_DETAILS = "redeem_activity_details";
  @SerializedName(SERIALIZED_NAME_REDEEM_ACTIVITY_DETAILS)
  private GiftCardActivityRedeem redeemActivityDetails;

  public static final String SERIALIZED_NAME_REFUND_ACTIVITY_DETAILS = "refund_activity_details";
  @SerializedName(SERIALIZED_NAME_REFUND_ACTIVITY_DETAILS)
  private GiftCardActivityRefund refundActivityDetails;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private Object type = null;

  public static final String SERIALIZED_NAME_UNBLOCK_ACTIVITY_DETAILS = "unblock_activity_details";
  @SerializedName(SERIALIZED_NAME_UNBLOCK_ACTIVITY_DETAILS)
  private GiftCardActivityUnblock unblockActivityDetails;

  public static final String SERIALIZED_NAME_UNLINKED_ACTIVITY_REFUND_ACTIVITY_DETAILS = "unlinked_activity_refund_activity_details";
  @SerializedName(SERIALIZED_NAME_UNLINKED_ACTIVITY_REFUND_ACTIVITY_DETAILS)
  private GiftCardActivityUnlinkedActivityRefund unlinkedActivityRefundActivityDetails;

  public GiftCardActivity() {
  }

  public GiftCardActivity activateActivityDetails(GiftCardActivityActivate activateActivityDetails) {
    this.activateActivityDetails = activateActivityDetails;
    return this;
  }

  /**
   * Get activateActivityDetails
   * @return activateActivityDetails
   */
  @javax.annotation.Nullable
  public GiftCardActivityActivate getActivateActivityDetails() {
    return activateActivityDetails;
  }

  public void setActivateActivityDetails(GiftCardActivityActivate activateActivityDetails) {
    this.activateActivityDetails = activateActivityDetails;
  }


  public GiftCardActivity adjustDecrementActivityDetails(GiftCardActivityAdjustDecrement adjustDecrementActivityDetails) {
    this.adjustDecrementActivityDetails = adjustDecrementActivityDetails;
    return this;
  }

  /**
   * Get adjustDecrementActivityDetails
   * @return adjustDecrementActivityDetails
   */
  @javax.annotation.Nullable
  public GiftCardActivityAdjustDecrement getAdjustDecrementActivityDetails() {
    return adjustDecrementActivityDetails;
  }

  public void setAdjustDecrementActivityDetails(GiftCardActivityAdjustDecrement adjustDecrementActivityDetails) {
    this.adjustDecrementActivityDetails = adjustDecrementActivityDetails;
  }


  public GiftCardActivity adjustIncrementActivityDetails(GiftCardActivityAdjustIncrement adjustIncrementActivityDetails) {
    this.adjustIncrementActivityDetails = adjustIncrementActivityDetails;
    return this;
  }

  /**
   * Get adjustIncrementActivityDetails
   * @return adjustIncrementActivityDetails
   */
  @javax.annotation.Nullable
  public GiftCardActivityAdjustIncrement getAdjustIncrementActivityDetails() {
    return adjustIncrementActivityDetails;
  }

  public void setAdjustIncrementActivityDetails(GiftCardActivityAdjustIncrement adjustIncrementActivityDetails) {
    this.adjustIncrementActivityDetails = adjustIncrementActivityDetails;
  }


  public GiftCardActivity blockActivityDetails(GiftCardActivityBlock blockActivityDetails) {
    this.blockActivityDetails = blockActivityDetails;
    return this;
  }

  /**
   * Get blockActivityDetails
   * @return blockActivityDetails
   */
  @javax.annotation.Nullable
  public GiftCardActivityBlock getBlockActivityDetails() {
    return blockActivityDetails;
  }

  public void setBlockActivityDetails(GiftCardActivityBlock blockActivityDetails) {
    this.blockActivityDetails = blockActivityDetails;
  }


  public GiftCardActivity clearBalanceActivityDetails(GiftCardActivityClearBalance clearBalanceActivityDetails) {
    this.clearBalanceActivityDetails = clearBalanceActivityDetails;
    return this;
  }

  /**
   * Get clearBalanceActivityDetails
   * @return clearBalanceActivityDetails
   */
  @javax.annotation.Nullable
  public GiftCardActivityClearBalance getClearBalanceActivityDetails() {
    return clearBalanceActivityDetails;
  }

  public void setClearBalanceActivityDetails(GiftCardActivityClearBalance clearBalanceActivityDetails) {
    this.clearBalanceActivityDetails = clearBalanceActivityDetails;
  }


  public GiftCardActivity createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * The timestamp when the gift card activity was created, in RFC 3339 format.
   * @return createdAt
   */
  @javax.annotation.Nullable
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }


  public GiftCardActivity deactivateActivityDetails(GiftCardActivityDeactivate deactivateActivityDetails) {
    this.deactivateActivityDetails = deactivateActivityDetails;
    return this;
  }

  /**
   * Get deactivateActivityDetails
   * @return deactivateActivityDetails
   */
  @javax.annotation.Nullable
  public GiftCardActivityDeactivate getDeactivateActivityDetails() {
    return deactivateActivityDetails;
  }

  public void setDeactivateActivityDetails(GiftCardActivityDeactivate deactivateActivityDetails) {
    this.deactivateActivityDetails = deactivateActivityDetails;
  }


  public GiftCardActivity giftCardBalanceMoney(Money giftCardBalanceMoney) {
    this.giftCardBalanceMoney = giftCardBalanceMoney;
    return this;
  }

  /**
   * Get giftCardBalanceMoney
   * @return giftCardBalanceMoney
   */
  @javax.annotation.Nullable
  public Money getGiftCardBalanceMoney() {
    return giftCardBalanceMoney;
  }

  public void setGiftCardBalanceMoney(Money giftCardBalanceMoney) {
    this.giftCardBalanceMoney = giftCardBalanceMoney;
  }


  public GiftCardActivity giftCardGan(String giftCardGan) {
    this.giftCardGan = giftCardGan;
    return this;
  }

  /**
   * The gift card GAN. The GAN is not required if &#x60;gift_card_id&#x60; is present.
   * @return giftCardGan
   */
  @javax.annotation.Nullable
  public String getGiftCardGan() {
    return giftCardGan;
  }

  public void setGiftCardGan(String giftCardGan) {
    this.giftCardGan = giftCardGan;
  }


  public GiftCardActivity giftCardId(String giftCardId) {
    this.giftCardId = giftCardId;
    return this;
  }

  /**
   * The gift card ID. The ID is not required if a GAN is present.
   * @return giftCardId
   */
  @javax.annotation.Nullable
  public String getGiftCardId() {
    return giftCardId;
  }

  public void setGiftCardId(String giftCardId) {
    this.giftCardId = giftCardId;
  }


  public GiftCardActivity id(String id) {
    this.id = id;
    return this;
  }

  /**
   * The unique ID of the gift card activity.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public GiftCardActivity importActivityDetails(GiftCardActivityImport importActivityDetails) {
    this.importActivityDetails = importActivityDetails;
    return this;
  }

  /**
   * Get importActivityDetails
   * @return importActivityDetails
   */
  @javax.annotation.Nullable
  public GiftCardActivityImport getImportActivityDetails() {
    return importActivityDetails;
  }

  public void setImportActivityDetails(GiftCardActivityImport importActivityDetails) {
    this.importActivityDetails = importActivityDetails;
  }


  public GiftCardActivity importReversalActivityDetails(GiftCardActivityImportReversal importReversalActivityDetails) {
    this.importReversalActivityDetails = importReversalActivityDetails;
    return this;
  }

  /**
   * Get importReversalActivityDetails
   * @return importReversalActivityDetails
   */
  @javax.annotation.Nullable
  public GiftCardActivityImportReversal getImportReversalActivityDetails() {
    return importReversalActivityDetails;
  }

  public void setImportReversalActivityDetails(GiftCardActivityImportReversal importReversalActivityDetails) {
    this.importReversalActivityDetails = importReversalActivityDetails;
  }


  public GiftCardActivity loadActivityDetails(GiftCardActivityLoad loadActivityDetails) {
    this.loadActivityDetails = loadActivityDetails;
    return this;
  }

  /**
   * Get loadActivityDetails
   * @return loadActivityDetails
   */
  @javax.annotation.Nullable
  public GiftCardActivityLoad getLoadActivityDetails() {
    return loadActivityDetails;
  }

  public void setLoadActivityDetails(GiftCardActivityLoad loadActivityDetails) {
    this.loadActivityDetails = loadActivityDetails;
  }


  public GiftCardActivity locationId(String locationId) {
    this.locationId = locationId;
    return this;
  }

  /**
   * The ID of the location at which the activity occurred.
   * @return locationId
   */
  @javax.annotation.Nonnull
  public String getLocationId() {
    return locationId;
  }

  public void setLocationId(String locationId) {
    this.locationId = locationId;
  }


  public GiftCardActivity redeemActivityDetails(GiftCardActivityRedeem redeemActivityDetails) {
    this.redeemActivityDetails = redeemActivityDetails;
    return this;
  }

  /**
   * Get redeemActivityDetails
   * @return redeemActivityDetails
   */
  @javax.annotation.Nullable
  public GiftCardActivityRedeem getRedeemActivityDetails() {
    return redeemActivityDetails;
  }

  public void setRedeemActivityDetails(GiftCardActivityRedeem redeemActivityDetails) {
    this.redeemActivityDetails = redeemActivityDetails;
  }


  public GiftCardActivity refundActivityDetails(GiftCardActivityRefund refundActivityDetails) {
    this.refundActivityDetails = refundActivityDetails;
    return this;
  }

  /**
   * Get refundActivityDetails
   * @return refundActivityDetails
   */
  @javax.annotation.Nullable
  public GiftCardActivityRefund getRefundActivityDetails() {
    return refundActivityDetails;
  }

  public void setRefundActivityDetails(GiftCardActivityRefund refundActivityDetails) {
    this.refundActivityDetails = refundActivityDetails;
  }


  public GiftCardActivity type(Object type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nullable
  public Object getType() {
    return type;
  }

  public void setType(Object type) {
    this.type = type;
  }


  public GiftCardActivity unblockActivityDetails(GiftCardActivityUnblock unblockActivityDetails) {
    this.unblockActivityDetails = unblockActivityDetails;
    return this;
  }

  /**
   * Get unblockActivityDetails
   * @return unblockActivityDetails
   */
  @javax.annotation.Nullable
  public GiftCardActivityUnblock getUnblockActivityDetails() {
    return unblockActivityDetails;
  }

  public void setUnblockActivityDetails(GiftCardActivityUnblock unblockActivityDetails) {
    this.unblockActivityDetails = unblockActivityDetails;
  }


  public GiftCardActivity unlinkedActivityRefundActivityDetails(GiftCardActivityUnlinkedActivityRefund unlinkedActivityRefundActivityDetails) {
    this.unlinkedActivityRefundActivityDetails = unlinkedActivityRefundActivityDetails;
    return this;
  }

  /**
   * Get unlinkedActivityRefundActivityDetails
   * @return unlinkedActivityRefundActivityDetails
   */
  @javax.annotation.Nullable
  public GiftCardActivityUnlinkedActivityRefund getUnlinkedActivityRefundActivityDetails() {
    return unlinkedActivityRefundActivityDetails;
  }

  public void setUnlinkedActivityRefundActivityDetails(GiftCardActivityUnlinkedActivityRefund unlinkedActivityRefundActivityDetails) {
    this.unlinkedActivityRefundActivityDetails = unlinkedActivityRefundActivityDetails;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GiftCardActivity giftCardActivity = (GiftCardActivity) o;
    return Objects.equals(this.activateActivityDetails, giftCardActivity.activateActivityDetails) &&
        Objects.equals(this.adjustDecrementActivityDetails, giftCardActivity.adjustDecrementActivityDetails) &&
        Objects.equals(this.adjustIncrementActivityDetails, giftCardActivity.adjustIncrementActivityDetails) &&
        Objects.equals(this.blockActivityDetails, giftCardActivity.blockActivityDetails) &&
        Objects.equals(this.clearBalanceActivityDetails, giftCardActivity.clearBalanceActivityDetails) &&
        Objects.equals(this.createdAt, giftCardActivity.createdAt) &&
        Objects.equals(this.deactivateActivityDetails, giftCardActivity.deactivateActivityDetails) &&
        Objects.equals(this.giftCardBalanceMoney, giftCardActivity.giftCardBalanceMoney) &&
        Objects.equals(this.giftCardGan, giftCardActivity.giftCardGan) &&
        Objects.equals(this.giftCardId, giftCardActivity.giftCardId) &&
        Objects.equals(this.id, giftCardActivity.id) &&
        Objects.equals(this.importActivityDetails, giftCardActivity.importActivityDetails) &&
        Objects.equals(this.importReversalActivityDetails, giftCardActivity.importReversalActivityDetails) &&
        Objects.equals(this.loadActivityDetails, giftCardActivity.loadActivityDetails) &&
        Objects.equals(this.locationId, giftCardActivity.locationId) &&
        Objects.equals(this.redeemActivityDetails, giftCardActivity.redeemActivityDetails) &&
        Objects.equals(this.refundActivityDetails, giftCardActivity.refundActivityDetails) &&
        Objects.equals(this.type, giftCardActivity.type) &&
        Objects.equals(this.unblockActivityDetails, giftCardActivity.unblockActivityDetails) &&
        Objects.equals(this.unlinkedActivityRefundActivityDetails, giftCardActivity.unlinkedActivityRefundActivityDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activateActivityDetails, adjustDecrementActivityDetails, adjustIncrementActivityDetails, blockActivityDetails, clearBalanceActivityDetails, createdAt, deactivateActivityDetails, giftCardBalanceMoney, giftCardGan, giftCardId, id, importActivityDetails, importReversalActivityDetails, loadActivityDetails, locationId, redeemActivityDetails, refundActivityDetails, type, unblockActivityDetails, unlinkedActivityRefundActivityDetails);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GiftCardActivity {\n");
    sb.append("    activateActivityDetails: ").append(toIndentedString(activateActivityDetails)).append("\n");
    sb.append("    adjustDecrementActivityDetails: ").append(toIndentedString(adjustDecrementActivityDetails)).append("\n");
    sb.append("    adjustIncrementActivityDetails: ").append(toIndentedString(adjustIncrementActivityDetails)).append("\n");
    sb.append("    blockActivityDetails: ").append(toIndentedString(blockActivityDetails)).append("\n");
    sb.append("    clearBalanceActivityDetails: ").append(toIndentedString(clearBalanceActivityDetails)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    deactivateActivityDetails: ").append(toIndentedString(deactivateActivityDetails)).append("\n");
    sb.append("    giftCardBalanceMoney: ").append(toIndentedString(giftCardBalanceMoney)).append("\n");
    sb.append("    giftCardGan: ").append(toIndentedString(giftCardGan)).append("\n");
    sb.append("    giftCardId: ").append(toIndentedString(giftCardId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    importActivityDetails: ").append(toIndentedString(importActivityDetails)).append("\n");
    sb.append("    importReversalActivityDetails: ").append(toIndentedString(importReversalActivityDetails)).append("\n");
    sb.append("    loadActivityDetails: ").append(toIndentedString(loadActivityDetails)).append("\n");
    sb.append("    locationId: ").append(toIndentedString(locationId)).append("\n");
    sb.append("    redeemActivityDetails: ").append(toIndentedString(redeemActivityDetails)).append("\n");
    sb.append("    refundActivityDetails: ").append(toIndentedString(refundActivityDetails)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    unblockActivityDetails: ").append(toIndentedString(unblockActivityDetails)).append("\n");
    sb.append("    unlinkedActivityRefundActivityDetails: ").append(toIndentedString(unlinkedActivityRefundActivityDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("activate_activity_details");
    openapiFields.add("adjust_decrement_activity_details");
    openapiFields.add("adjust_increment_activity_details");
    openapiFields.add("block_activity_details");
    openapiFields.add("clear_balance_activity_details");
    openapiFields.add("created_at");
    openapiFields.add("deactivate_activity_details");
    openapiFields.add("gift_card_balance_money");
    openapiFields.add("gift_card_gan");
    openapiFields.add("gift_card_id");
    openapiFields.add("id");
    openapiFields.add("import_activity_details");
    openapiFields.add("import_reversal_activity_details");
    openapiFields.add("load_activity_details");
    openapiFields.add("location_id");
    openapiFields.add("redeem_activity_details");
    openapiFields.add("refund_activity_details");
    openapiFields.add("type");
    openapiFields.add("unblock_activity_details");
    openapiFields.add("unlinked_activity_refund_activity_details");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("location_id");
    openapiRequiredFields.add("type");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GiftCardActivity
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GiftCardActivity.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GiftCardActivity is not found in the empty JSON string", GiftCardActivity.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GiftCardActivity.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GiftCardActivity` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GiftCardActivity.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `activate_activity_details`
      if (jsonObj.get("activate_activity_details") != null && !jsonObj.get("activate_activity_details").isJsonNull()) {
        GiftCardActivityActivate.validateJsonElement(jsonObj.get("activate_activity_details"));
      }
      // validate the optional field `adjust_decrement_activity_details`
      if (jsonObj.get("adjust_decrement_activity_details") != null && !jsonObj.get("adjust_decrement_activity_details").isJsonNull()) {
        GiftCardActivityAdjustDecrement.validateJsonElement(jsonObj.get("adjust_decrement_activity_details"));
      }
      // validate the optional field `adjust_increment_activity_details`
      if (jsonObj.get("adjust_increment_activity_details") != null && !jsonObj.get("adjust_increment_activity_details").isJsonNull()) {
        GiftCardActivityAdjustIncrement.validateJsonElement(jsonObj.get("adjust_increment_activity_details"));
      }
      // validate the optional field `block_activity_details`
      if (jsonObj.get("block_activity_details") != null && !jsonObj.get("block_activity_details").isJsonNull()) {
        GiftCardActivityBlock.validateJsonElement(jsonObj.get("block_activity_details"));
      }
      // validate the optional field `clear_balance_activity_details`
      if (jsonObj.get("clear_balance_activity_details") != null && !jsonObj.get("clear_balance_activity_details").isJsonNull()) {
        GiftCardActivityClearBalance.validateJsonElement(jsonObj.get("clear_balance_activity_details"));
      }
      if ((jsonObj.get("created_at") != null && !jsonObj.get("created_at").isJsonNull()) && !jsonObj.get("created_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_at").toString()));
      }
      // validate the optional field `deactivate_activity_details`
      if (jsonObj.get("deactivate_activity_details") != null && !jsonObj.get("deactivate_activity_details").isJsonNull()) {
        GiftCardActivityDeactivate.validateJsonElement(jsonObj.get("deactivate_activity_details"));
      }
      // validate the optional field `gift_card_balance_money`
      if (jsonObj.get("gift_card_balance_money") != null && !jsonObj.get("gift_card_balance_money").isJsonNull()) {
        Money.validateJsonElement(jsonObj.get("gift_card_balance_money"));
      }
      if ((jsonObj.get("gift_card_gan") != null && !jsonObj.get("gift_card_gan").isJsonNull()) && !jsonObj.get("gift_card_gan").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gift_card_gan` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gift_card_gan").toString()));
      }
      if ((jsonObj.get("gift_card_id") != null && !jsonObj.get("gift_card_id").isJsonNull()) && !jsonObj.get("gift_card_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gift_card_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gift_card_id").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      // validate the optional field `import_activity_details`
      if (jsonObj.get("import_activity_details") != null && !jsonObj.get("import_activity_details").isJsonNull()) {
        GiftCardActivityImport.validateJsonElement(jsonObj.get("import_activity_details"));
      }
      // validate the optional field `import_reversal_activity_details`
      if (jsonObj.get("import_reversal_activity_details") != null && !jsonObj.get("import_reversal_activity_details").isJsonNull()) {
        GiftCardActivityImportReversal.validateJsonElement(jsonObj.get("import_reversal_activity_details"));
      }
      // validate the optional field `load_activity_details`
      if (jsonObj.get("load_activity_details") != null && !jsonObj.get("load_activity_details").isJsonNull()) {
        GiftCardActivityLoad.validateJsonElement(jsonObj.get("load_activity_details"));
      }
      if (!jsonObj.get("location_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `location_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("location_id").toString()));
      }
      // validate the optional field `redeem_activity_details`
      if (jsonObj.get("redeem_activity_details") != null && !jsonObj.get("redeem_activity_details").isJsonNull()) {
        GiftCardActivityRedeem.validateJsonElement(jsonObj.get("redeem_activity_details"));
      }
      // validate the optional field `refund_activity_details`
      if (jsonObj.get("refund_activity_details") != null && !jsonObj.get("refund_activity_details").isJsonNull()) {
        GiftCardActivityRefund.validateJsonElement(jsonObj.get("refund_activity_details"));
      }
      // validate the optional field `unblock_activity_details`
      if (jsonObj.get("unblock_activity_details") != null && !jsonObj.get("unblock_activity_details").isJsonNull()) {
        GiftCardActivityUnblock.validateJsonElement(jsonObj.get("unblock_activity_details"));
      }
      // validate the optional field `unlinked_activity_refund_activity_details`
      if (jsonObj.get("unlinked_activity_refund_activity_details") != null && !jsonObj.get("unlinked_activity_refund_activity_details").isJsonNull()) {
        GiftCardActivityUnlinkedActivityRefund.validateJsonElement(jsonObj.get("unlinked_activity_refund_activity_details"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GiftCardActivity.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GiftCardActivity' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GiftCardActivity> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GiftCardActivity.class));

       return (TypeAdapter<T>) new TypeAdapter<GiftCardActivity>() {
           @Override
           public void write(JsonWriter out, GiftCardActivity value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GiftCardActivity read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GiftCardActivity given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GiftCardActivity
   * @throws IOException if the JSON string is invalid with respect to GiftCardActivity
   */
  public static GiftCardActivity fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GiftCardActivity.class);
  }

  /**
   * Convert an instance of GiftCardActivity to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

