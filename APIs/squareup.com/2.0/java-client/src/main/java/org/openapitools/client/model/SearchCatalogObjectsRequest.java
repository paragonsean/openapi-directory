/*
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CatalogQuery;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * 
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:20:53.300629-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SearchCatalogObjectsRequest {
  public static final String SERIALIZED_NAME_BEGIN_TIME = "begin_time";
  @SerializedName(SERIALIZED_NAME_BEGIN_TIME)
  private String beginTime;

  public static final String SERIALIZED_NAME_CURSOR = "cursor";
  @SerializedName(SERIALIZED_NAME_CURSOR)
  private String cursor;

  public static final String SERIALIZED_NAME_INCLUDE_DELETED_OBJECTS = "include_deleted_objects";
  @SerializedName(SERIALIZED_NAME_INCLUDE_DELETED_OBJECTS)
  private Boolean includeDeletedObjects;

  public static final String SERIALIZED_NAME_INCLUDE_RELATED_OBJECTS = "include_related_objects";
  @SerializedName(SERIALIZED_NAME_INCLUDE_RELATED_OBJECTS)
  private Boolean includeRelatedObjects;

  public static final String SERIALIZED_NAME_LIMIT = "limit";
  @SerializedName(SERIALIZED_NAME_LIMIT)
  private Integer limit;

  public static final String SERIALIZED_NAME_OBJECT_TYPES = "object_types";
  @SerializedName(SERIALIZED_NAME_OBJECT_TYPES)
  private List<String> objectTypes = new ArrayList<>();

  public static final String SERIALIZED_NAME_QUERY = "query";
  @SerializedName(SERIALIZED_NAME_QUERY)
  private CatalogQuery query;

  public SearchCatalogObjectsRequest() {
  }

  public SearchCatalogObjectsRequest beginTime(String beginTime) {
    this.beginTime = beginTime;
    return this;
  }

  /**
   * Return objects modified after this [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates), in RFC 3339 format, e.g., &#x60;2016-09-04T23:59:33.123Z&#x60;. The timestamp is exclusive - objects with a timestamp equal to &#x60;begin_time&#x60; will not be included in the response.
   * @return beginTime
   */
  @javax.annotation.Nullable
  public String getBeginTime() {
    return beginTime;
  }

  public void setBeginTime(String beginTime) {
    this.beginTime = beginTime;
  }


  public SearchCatalogObjectsRequest cursor(String cursor) {
    this.cursor = cursor;
    return this;
  }

  /**
   * The pagination cursor returned in the previous response. Leave unset for an initial request. See [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information.
   * @return cursor
   */
  @javax.annotation.Nullable
  public String getCursor() {
    return cursor;
  }

  public void setCursor(String cursor) {
    this.cursor = cursor;
  }


  public SearchCatalogObjectsRequest includeDeletedObjects(Boolean includeDeletedObjects) {
    this.includeDeletedObjects = includeDeletedObjects;
    return this;
  }

  /**
   * If &#x60;true&#x60;, deleted objects will be included in the results. Deleted objects will have their &#x60;is_deleted&#x60; field set to &#x60;true&#x60;.
   * @return includeDeletedObjects
   */
  @javax.annotation.Nullable
  public Boolean getIncludeDeletedObjects() {
    return includeDeletedObjects;
  }

  public void setIncludeDeletedObjects(Boolean includeDeletedObjects) {
    this.includeDeletedObjects = includeDeletedObjects;
  }


  public SearchCatalogObjectsRequest includeRelatedObjects(Boolean includeRelatedObjects) {
    this.includeRelatedObjects = includeRelatedObjects;
    return this;
  }

  /**
   * If &#x60;true&#x60;, the response will include additional objects that are related to the requested object, as follows:  If a CatalogItem is returned in the object field of the response, its associated CatalogCategory, CatalogTax objects, CatalogImage objects and CatalogModifierList objects will be included in the &#x60;related_objects&#x60; field of the response.  If a CatalogItemVariation is returned in the object field of the response, its parent CatalogItem will be included in the &#x60;related_objects&#x60; field of the response.
   * @return includeRelatedObjects
   */
  @javax.annotation.Nullable
  public Boolean getIncludeRelatedObjects() {
    return includeRelatedObjects;
  }

  public void setIncludeRelatedObjects(Boolean includeRelatedObjects) {
    this.includeRelatedObjects = includeRelatedObjects;
  }


  public SearchCatalogObjectsRequest limit(Integer limit) {
    this.limit = limit;
    return this;
  }

  /**
   * A limit on the number of results to be returned in a single page. The limit is advisory - the implementation may return more or fewer results. If the supplied limit is negative, zero, or is higher than the maximum limit of 1,000, it will be ignored.
   * @return limit
   */
  @javax.annotation.Nullable
  public Integer getLimit() {
    return limit;
  }

  public void setLimit(Integer limit) {
    this.limit = limit;
  }


  public SearchCatalogObjectsRequest objectTypes(List<String> objectTypes) {
    this.objectTypes = objectTypes;
    return this;
  }

  public SearchCatalogObjectsRequest addObjectTypesItem(String objectTypesItem) {
    if (this.objectTypes == null) {
      this.objectTypes = new ArrayList<>();
    }
    this.objectTypes.add(objectTypesItem);
    return this;
  }

  /**
   * The desired set of object types to appear in the search results.
   * @return objectTypes
   */
  @javax.annotation.Nullable
  public List<String> getObjectTypes() {
    return objectTypes;
  }

  public void setObjectTypes(List<String> objectTypes) {
    this.objectTypes = objectTypes;
  }


  public SearchCatalogObjectsRequest query(CatalogQuery query) {
    this.query = query;
    return this;
  }

  /**
   * Get query
   * @return query
   */
  @javax.annotation.Nullable
  public CatalogQuery getQuery() {
    return query;
  }

  public void setQuery(CatalogQuery query) {
    this.query = query;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchCatalogObjectsRequest searchCatalogObjectsRequest = (SearchCatalogObjectsRequest) o;
    return Objects.equals(this.beginTime, searchCatalogObjectsRequest.beginTime) &&
        Objects.equals(this.cursor, searchCatalogObjectsRequest.cursor) &&
        Objects.equals(this.includeDeletedObjects, searchCatalogObjectsRequest.includeDeletedObjects) &&
        Objects.equals(this.includeRelatedObjects, searchCatalogObjectsRequest.includeRelatedObjects) &&
        Objects.equals(this.limit, searchCatalogObjectsRequest.limit) &&
        Objects.equals(this.objectTypes, searchCatalogObjectsRequest.objectTypes) &&
        Objects.equals(this.query, searchCatalogObjectsRequest.query);
  }

  @Override
  public int hashCode() {
    return Objects.hash(beginTime, cursor, includeDeletedObjects, includeRelatedObjects, limit, objectTypes, query);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchCatalogObjectsRequest {\n");
    sb.append("    beginTime: ").append(toIndentedString(beginTime)).append("\n");
    sb.append("    cursor: ").append(toIndentedString(cursor)).append("\n");
    sb.append("    includeDeletedObjects: ").append(toIndentedString(includeDeletedObjects)).append("\n");
    sb.append("    includeRelatedObjects: ").append(toIndentedString(includeRelatedObjects)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    objectTypes: ").append(toIndentedString(objectTypes)).append("\n");
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("begin_time");
    openapiFields.add("cursor");
    openapiFields.add("include_deleted_objects");
    openapiFields.add("include_related_objects");
    openapiFields.add("limit");
    openapiFields.add("object_types");
    openapiFields.add("query");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SearchCatalogObjectsRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SearchCatalogObjectsRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SearchCatalogObjectsRequest is not found in the empty JSON string", SearchCatalogObjectsRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SearchCatalogObjectsRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SearchCatalogObjectsRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("begin_time") != null && !jsonObj.get("begin_time").isJsonNull()) && !jsonObj.get("begin_time").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `begin_time` to be a primitive type in the JSON string but got `%s`", jsonObj.get("begin_time").toString()));
      }
      if ((jsonObj.get("cursor") != null && !jsonObj.get("cursor").isJsonNull()) && !jsonObj.get("cursor").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cursor` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cursor").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("object_types") != null && !jsonObj.get("object_types").isJsonNull() && !jsonObj.get("object_types").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `object_types` to be an array in the JSON string but got `%s`", jsonObj.get("object_types").toString()));
      }
      // validate the optional field `query`
      if (jsonObj.get("query") != null && !jsonObj.get("query").isJsonNull()) {
        CatalogQuery.validateJsonElement(jsonObj.get("query"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SearchCatalogObjectsRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SearchCatalogObjectsRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SearchCatalogObjectsRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SearchCatalogObjectsRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<SearchCatalogObjectsRequest>() {
           @Override
           public void write(JsonWriter out, SearchCatalogObjectsRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SearchCatalogObjectsRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SearchCatalogObjectsRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SearchCatalogObjectsRequest
   * @throws IOException if the JSON string is invalid with respect to SearchCatalogObjectsRequest
   */
  public static SearchCatalogObjectsRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SearchCatalogObjectsRequest.class);
  }

  /**
   * Convert an instance of SearchCatalogObjectsRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

