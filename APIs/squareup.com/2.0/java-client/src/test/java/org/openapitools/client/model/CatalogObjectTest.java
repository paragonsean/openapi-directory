/*
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.CatalogCategory;
import org.openapitools.client.model.CatalogCustomAttributeDefinition;
import org.openapitools.client.model.CatalogCustomAttributeValue;
import org.openapitools.client.model.CatalogDiscount;
import org.openapitools.client.model.CatalogImage;
import org.openapitools.client.model.CatalogItem;
import org.openapitools.client.model.CatalogItemOption;
import org.openapitools.client.model.CatalogItemOptionValue;
import org.openapitools.client.model.CatalogItemVariation;
import org.openapitools.client.model.CatalogMeasurementUnit;
import org.openapitools.client.model.CatalogModifier;
import org.openapitools.client.model.CatalogModifierList;
import org.openapitools.client.model.CatalogPricingRule;
import org.openapitools.client.model.CatalogProductSet;
import org.openapitools.client.model.CatalogQuickAmountsSettings;
import org.openapitools.client.model.CatalogSubscriptionPlan;
import org.openapitools.client.model.CatalogTax;
import org.openapitools.client.model.CatalogTimePeriod;
import org.openapitools.client.model.CatalogV1Id;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CatalogObject
 */
public class CatalogObjectTest {
    private final CatalogObject model = new CatalogObject();

    /**
     * Model tests for CatalogObject
     */
    @Test
    public void testCatalogObject() {
        // TODO: test CatalogObject
    }

    /**
     * Test the property 'absentAtLocationIds'
     */
    @Test
    public void absentAtLocationIdsTest() {
        // TODO: test absentAtLocationIds
    }

    /**
     * Test the property 'catalogV1Ids'
     */
    @Test
    public void catalogV1IdsTest() {
        // TODO: test catalogV1Ids
    }

    /**
     * Test the property 'categoryData'
     */
    @Test
    public void categoryDataTest() {
        // TODO: test categoryData
    }

    /**
     * Test the property 'customAttributeDefinitionData'
     */
    @Test
    public void customAttributeDefinitionDataTest() {
        // TODO: test customAttributeDefinitionData
    }

    /**
     * Test the property 'customAttributeValues'
     */
    @Test
    public void customAttributeValuesTest() {
        // TODO: test customAttributeValues
    }

    /**
     * Test the property 'discountData'
     */
    @Test
    public void discountDataTest() {
        // TODO: test discountData
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'imageData'
     */
    @Test
    public void imageDataTest() {
        // TODO: test imageData
    }

    /**
     * Test the property 'imageId'
     */
    @Test
    public void imageIdTest() {
        // TODO: test imageId
    }

    /**
     * Test the property 'isDeleted'
     */
    @Test
    public void isDeletedTest() {
        // TODO: test isDeleted
    }

    /**
     * Test the property 'itemData'
     */
    @Test
    public void itemDataTest() {
        // TODO: test itemData
    }

    /**
     * Test the property 'itemOptionData'
     */
    @Test
    public void itemOptionDataTest() {
        // TODO: test itemOptionData
    }

    /**
     * Test the property 'itemOptionValueData'
     */
    @Test
    public void itemOptionValueDataTest() {
        // TODO: test itemOptionValueData
    }

    /**
     * Test the property 'itemVariationData'
     */
    @Test
    public void itemVariationDataTest() {
        // TODO: test itemVariationData
    }

    /**
     * Test the property 'measurementUnitData'
     */
    @Test
    public void measurementUnitDataTest() {
        // TODO: test measurementUnitData
    }

    /**
     * Test the property 'modifierData'
     */
    @Test
    public void modifierDataTest() {
        // TODO: test modifierData
    }

    /**
     * Test the property 'modifierListData'
     */
    @Test
    public void modifierListDataTest() {
        // TODO: test modifierListData
    }

    /**
     * Test the property 'presentAtAllLocations'
     */
    @Test
    public void presentAtAllLocationsTest() {
        // TODO: test presentAtAllLocations
    }

    /**
     * Test the property 'presentAtLocationIds'
     */
    @Test
    public void presentAtLocationIdsTest() {
        // TODO: test presentAtLocationIds
    }

    /**
     * Test the property 'pricingRuleData'
     */
    @Test
    public void pricingRuleDataTest() {
        // TODO: test pricingRuleData
    }

    /**
     * Test the property 'productSetData'
     */
    @Test
    public void productSetDataTest() {
        // TODO: test productSetData
    }

    /**
     * Test the property 'quickAmountsSettingsData'
     */
    @Test
    public void quickAmountsSettingsDataTest() {
        // TODO: test quickAmountsSettingsData
    }

    /**
     * Test the property 'subscriptionPlanData'
     */
    @Test
    public void subscriptionPlanDataTest() {
        // TODO: test subscriptionPlanData
    }

    /**
     * Test the property 'taxData'
     */
    @Test
    public void taxDataTest() {
        // TODO: test taxData
    }

    /**
     * Test the property 'timePeriodData'
     */
    @Test
    public void timePeriodDataTest() {
        // TODO: test timePeriodData
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'updatedAt'
     */
    @Test
    public void updatedAtTest() {
        // TODO: test updatedAt
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

}
