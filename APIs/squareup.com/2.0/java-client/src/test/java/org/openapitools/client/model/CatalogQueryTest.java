/*
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CatalogQueryExact;
import org.openapitools.client.model.CatalogQueryItemVariationsForItemOptionValues;
import org.openapitools.client.model.CatalogQueryItemsForItemOptions;
import org.openapitools.client.model.CatalogQueryItemsForModifierList;
import org.openapitools.client.model.CatalogQueryItemsForTax;
import org.openapitools.client.model.CatalogQueryPrefix;
import org.openapitools.client.model.CatalogQueryRange;
import org.openapitools.client.model.CatalogQuerySet;
import org.openapitools.client.model.CatalogQuerySortedAttribute;
import org.openapitools.client.model.CatalogQueryText;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CatalogQuery
 */
public class CatalogQueryTest {
    private final CatalogQuery model = new CatalogQuery();

    /**
     * Model tests for CatalogQuery
     */
    @Test
    public void testCatalogQuery() {
        // TODO: test CatalogQuery
    }

    /**
     * Test the property 'exactQuery'
     */
    @Test
    public void exactQueryTest() {
        // TODO: test exactQuery
    }

    /**
     * Test the property 'itemVariationsForItemOptionValuesQuery'
     */
    @Test
    public void itemVariationsForItemOptionValuesQueryTest() {
        // TODO: test itemVariationsForItemOptionValuesQuery
    }

    /**
     * Test the property 'itemsForItemOptionsQuery'
     */
    @Test
    public void itemsForItemOptionsQueryTest() {
        // TODO: test itemsForItemOptionsQuery
    }

    /**
     * Test the property 'itemsForModifierListQuery'
     */
    @Test
    public void itemsForModifierListQueryTest() {
        // TODO: test itemsForModifierListQuery
    }

    /**
     * Test the property 'itemsForTaxQuery'
     */
    @Test
    public void itemsForTaxQueryTest() {
        // TODO: test itemsForTaxQuery
    }

    /**
     * Test the property 'prefixQuery'
     */
    @Test
    public void prefixQueryTest() {
        // TODO: test prefixQuery
    }

    /**
     * Test the property 'rangeQuery'
     */
    @Test
    public void rangeQueryTest() {
        // TODO: test rangeQuery
    }

    /**
     * Test the property 'setQuery'
     */
    @Test
    public void setQueryTest() {
        // TODO: test setQuery
    }

    /**
     * Test the property 'sortedAttributeQuery'
     */
    @Test
    public void sortedAttributeQueryTest() {
        // TODO: test sortedAttributeQuery
    }

    /**
     * Test the property 'textQuery'
     */
    @Test
    public void textQueryTest() {
        // TODO: test textQuery
    }

}
