/*
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateLocationRequest;
import org.openapitools.client.model.CreateLocationResponse;
import org.openapitools.client.model.ListLocationsResponse;
import org.openapitools.client.model.RetrieveLocationResponse;
import org.openapitools.client.model.UpdateLocationRequest;
import org.openapitools.client.model.UpdateLocationResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LocationsApi
 */
@Disabled
public class LocationsApiTest {

    private final LocationsApi api = new LocationsApi();

    /**
     * CreateLocation
     *
     * Creates a location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createLocationTest() throws ApiException {
        CreateLocationRequest createLocationRequest = null;
        CreateLocationResponse response = api.createLocation(createLocationRequest);
        // TODO: test validations
    }

    /**
     * ListLocations
     *
     * Provides information of all locations of a business.  Many Square API endpoints require a &#x60;location_id&#x60; parameter. The &#x60;id&#x60; field of the [&#x60;Location&#x60;](https://developer.squareup.com/reference/square_2021-08-18/objects/Location) objects returned by this endpoint correspond to that &#x60;location_id&#x60; parameter.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listLocationsTest() throws ApiException {
        ListLocationsResponse response = api.listLocations();
        // TODO: test validations
    }

    /**
     * RetrieveLocation
     *
     * Retrieves details of a location. You can specify \&quot;main\&quot;  as the location ID to retrieve details of the  main location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void retrieveLocationTest() throws ApiException {
        String locationId = null;
        RetrieveLocationResponse response = api.retrieveLocation(locationId);
        // TODO: test validations
    }

    /**
     * UpdateLocation
     *
     * Updates a location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateLocationTest() throws ApiException {
        String locationId = null;
        UpdateLocationRequest updateLocationRequest = null;
        UpdateLocationResponse response = api.updateLocation(locationId, updateLocationRequest);
        // TODO: test validations
    }

}
