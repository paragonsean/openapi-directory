/*
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CatalogItemOptionValueForItemVariation;
import org.openapitools.client.model.CatalogStockConversion;
import org.openapitools.client.model.ItemVariationLocationOverrides;
import org.openapitools.client.model.Money;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CatalogItemVariation
 */
public class CatalogItemVariationTest {
    private final CatalogItemVariation model = new CatalogItemVariation();

    /**
     * Model tests for CatalogItemVariation
     */
    @Test
    public void testCatalogItemVariation() {
        // TODO: test CatalogItemVariation
    }

    /**
     * Test the property 'availableForBooking'
     */
    @Test
    public void availableForBookingTest() {
        // TODO: test availableForBooking
    }

    /**
     * Test the property 'inventoryAlertThreshold'
     */
    @Test
    public void inventoryAlertThresholdTest() {
        // TODO: test inventoryAlertThreshold
    }

    /**
     * Test the property 'inventoryAlertType'
     */
    @Test
    public void inventoryAlertTypeTest() {
        // TODO: test inventoryAlertType
    }

    /**
     * Test the property 'itemId'
     */
    @Test
    public void itemIdTest() {
        // TODO: test itemId
    }

    /**
     * Test the property 'itemOptionValues'
     */
    @Test
    public void itemOptionValuesTest() {
        // TODO: test itemOptionValues
    }

    /**
     * Test the property 'locationOverrides'
     */
    @Test
    public void locationOverridesTest() {
        // TODO: test locationOverrides
    }

    /**
     * Test the property 'measurementUnitId'
     */
    @Test
    public void measurementUnitIdTest() {
        // TODO: test measurementUnitId
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'ordinal'
     */
    @Test
    public void ordinalTest() {
        // TODO: test ordinal
    }

    /**
     * Test the property 'priceMoney'
     */
    @Test
    public void priceMoneyTest() {
        // TODO: test priceMoney
    }

    /**
     * Test the property 'pricingType'
     */
    @Test
    public void pricingTypeTest() {
        // TODO: test pricingType
    }

    /**
     * Test the property 'serviceDuration'
     */
    @Test
    public void serviceDurationTest() {
        // TODO: test serviceDuration
    }

    /**
     * Test the property 'sku'
     */
    @Test
    public void skuTest() {
        // TODO: test sku
    }

    /**
     * Test the property 'stockable'
     */
    @Test
    public void stockableTest() {
        // TODO: test stockable
    }

    /**
     * Test the property 'stockableConversion'
     */
    @Test
    public void stockableConversionTest() {
        // TODO: test stockableConversion
    }

    /**
     * Test the property 'teamMemberIds'
     */
    @Test
    public void teamMemberIdsTest() {
        // TODO: test teamMemberIds
    }

    /**
     * Test the property 'trackInventory'
     */
    @Test
    public void trackInventoryTest() {
        // TODO: test trackInventory
    }

    /**
     * Test the property 'upc'
     */
    @Test
    public void upcTest() {
        // TODO: test upc
    }

    /**
     * Test the property 'userData'
     */
    @Test
    public void userDataTest() {
        // TODO: test userData
    }

}
