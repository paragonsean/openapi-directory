/*
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CancelTerminalCheckoutResponse;
import org.openapitools.client.model.CancelTerminalRefundResponse;
import org.openapitools.client.model.CreateTerminalCheckoutRequest;
import org.openapitools.client.model.CreateTerminalCheckoutResponse;
import org.openapitools.client.model.CreateTerminalRefundRequest;
import org.openapitools.client.model.CreateTerminalRefundResponse;
import org.openapitools.client.model.GetTerminalCheckoutResponse;
import org.openapitools.client.model.GetTerminalRefundResponse;
import org.openapitools.client.model.SearchTerminalCheckoutsRequest;
import org.openapitools.client.model.SearchTerminalCheckoutsResponse;
import org.openapitools.client.model.SearchTerminalRefundsRequest;
import org.openapitools.client.model.SearchTerminalRefundsResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TerminalApi
 */
@Disabled
public class TerminalApiTest {

    private final TerminalApi api = new TerminalApi();

    /**
     * CancelTerminalCheckout
     *
     * Cancels a Terminal checkout request if the status of the request permits it.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cancelTerminalCheckoutTest() throws ApiException {
        String checkoutId = null;
        CancelTerminalCheckoutResponse response = api.cancelTerminalCheckout(checkoutId);
        // TODO: test validations
    }

    /**
     * CancelTerminalRefund
     *
     * Cancels an Interac Terminal refund request by refund request ID if the status of the request permits it.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cancelTerminalRefundTest() throws ApiException {
        String terminalRefundId = null;
        CancelTerminalRefundResponse response = api.cancelTerminalRefund(terminalRefundId);
        // TODO: test validations
    }

    /**
     * CreateTerminalCheckout
     *
     * Creates a Terminal checkout request and sends it to the specified device to take a payment for the requested amount.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTerminalCheckoutTest() throws ApiException {
        CreateTerminalCheckoutRequest createTerminalCheckoutRequest = null;
        CreateTerminalCheckoutResponse response = api.createTerminalCheckout(createTerminalCheckoutRequest);
        // TODO: test validations
    }

    /**
     * CreateTerminalRefund
     *
     * Creates a request to refund an Interac payment completed on a Square Terminal.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTerminalRefundTest() throws ApiException {
        CreateTerminalRefundRequest createTerminalRefundRequest = null;
        CreateTerminalRefundResponse response = api.createTerminalRefund(createTerminalRefundRequest);
        // TODO: test validations
    }

    /**
     * GetTerminalCheckout
     *
     * Retrieves a Terminal checkout request by &#x60;checkout_id&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTerminalCheckoutTest() throws ApiException {
        String checkoutId = null;
        GetTerminalCheckoutResponse response = api.getTerminalCheckout(checkoutId);
        // TODO: test validations
    }

    /**
     * GetTerminalRefund
     *
     * Retrieves an Interac Terminal refund object by ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTerminalRefundTest() throws ApiException {
        String terminalRefundId = null;
        GetTerminalRefundResponse response = api.getTerminalRefund(terminalRefundId);
        // TODO: test validations
    }

    /**
     * SearchTerminalCheckouts
     *
     * Retrieves a filtered list of Terminal checkout requests created by the account making the request.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchTerminalCheckoutsTest() throws ApiException {
        SearchTerminalCheckoutsRequest searchTerminalCheckoutsRequest = null;
        SearchTerminalCheckoutsResponse response = api.searchTerminalCheckouts(searchTerminalCheckoutsRequest);
        // TODO: test validations
    }

    /**
     * SearchTerminalRefunds
     *
     * Retrieves a filtered list of Interac Terminal refund requests created by the seller making the request.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchTerminalRefundsTest() throws ApiException {
        SearchTerminalRefundsRequest searchTerminalRefundsRequest = null;
        SearchTerminalRefundsResponse response = api.searchTerminalRefunds(searchTerminalRefundsRequest);
        // TODO: test validations
    }

}
