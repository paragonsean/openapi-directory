/*
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateBreakTypeRequest;
import org.openapitools.client.model.CreateBreakTypeResponse;
import org.openapitools.client.model.CreateShiftRequest;
import org.openapitools.client.model.CreateShiftResponse;
import org.openapitools.client.model.DeleteBreakTypeResponse;
import org.openapitools.client.model.DeleteShiftResponse;
import org.openapitools.client.model.GetBreakTypeResponse;
import org.openapitools.client.model.GetEmployeeWageResponse;
import org.openapitools.client.model.GetShiftResponse;
import org.openapitools.client.model.GetTeamMemberWageResponse;
import org.openapitools.client.model.ListBreakTypesResponse;
import org.openapitools.client.model.ListEmployeeWagesResponse;
import org.openapitools.client.model.ListTeamMemberWagesResponse;
import org.openapitools.client.model.ListWorkweekConfigsResponse;
import org.openapitools.client.model.SearchShiftsRequest;
import org.openapitools.client.model.SearchShiftsResponse;
import org.openapitools.client.model.UpdateBreakTypeRequest;
import org.openapitools.client.model.UpdateBreakTypeResponse;
import org.openapitools.client.model.UpdateShiftRequest;
import org.openapitools.client.model.UpdateShiftResponse;
import org.openapitools.client.model.UpdateWorkweekConfigRequest;
import org.openapitools.client.model.UpdateWorkweekConfigResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LaborApi
 */
@Disabled
public class LaborApiTest {

    private final LaborApi api = new LaborApi();

    /**
     * CreateBreakType
     *
     * Creates a new &#x60;BreakType&#x60;.  A &#x60;BreakType&#x60; is a template for creating &#x60;Break&#x60; objects. You must provide the following values in your request to this endpoint:  - &#x60;location_id&#x60; - &#x60;break_name&#x60; - &#x60;expected_duration&#x60; - &#x60;is_paid&#x60;  You can only have three &#x60;BreakType&#x60; instances per location. If you attempt to add a fourth &#x60;BreakType&#x60; for a location, an &#x60;INVALID_REQUEST_ERROR&#x60; \&quot;Exceeded limit of 3 breaks per location.\&quot; is returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createBreakTypeTest() throws ApiException {
        CreateBreakTypeRequest createBreakTypeRequest = null;
        CreateBreakTypeResponse response = api.createBreakType(createBreakTypeRequest);
        // TODO: test validations
    }

    /**
     * CreateShift
     *
     * Creates a new &#x60;Shift&#x60;.  A &#x60;Shift&#x60; represents a complete workday for a single employee. You must provide the following values in your request to this endpoint:  - &#x60;location_id&#x60; - &#x60;employee_id&#x60; - &#x60;start_at&#x60;  An attempt to create a new &#x60;Shift&#x60; can result in a &#x60;BAD_REQUEST&#x60; error when: - The &#x60;status&#x60; of the new &#x60;Shift&#x60; is &#x60;OPEN&#x60; and the employee has another shift with an &#x60;OPEN&#x60; status. - The &#x60;start_at&#x60; date is in the future. - The &#x60;start_at&#x60; or &#x60;end_at&#x60; date overlaps another shift for the same employee. - The &#x60;Break&#x60; instances are set in the request and a break &#x60;start_at&#x60; is before the &#x60;Shift.start_at&#x60;, a break &#x60;end_at&#x60; is after the &#x60;Shift.end_at&#x60;, or both.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createShiftTest() throws ApiException {
        CreateShiftRequest createShiftRequest = null;
        CreateShiftResponse response = api.createShift(createShiftRequest);
        // TODO: test validations
    }

    /**
     * DeleteBreakType
     *
     * Deletes an existing &#x60;BreakType&#x60;.  A &#x60;BreakType&#x60; can be deleted even if it is referenced from a &#x60;Shift&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteBreakTypeTest() throws ApiException {
        String id = null;
        DeleteBreakTypeResponse response = api.deleteBreakType(id);
        // TODO: test validations
    }

    /**
     * DeleteShift
     *
     * Deletes a &#x60;Shift&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteShiftTest() throws ApiException {
        String id = null;
        DeleteShiftResponse response = api.deleteShift(id);
        // TODO: test validations
    }

    /**
     * GetBreakType
     *
     * Returns a single &#x60;BreakType&#x60; specified by &#x60;id&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBreakTypeTest() throws ApiException {
        String id = null;
        GetBreakTypeResponse response = api.getBreakType(id);
        // TODO: test validations
    }

    /**
     * GetEmployeeWage
     *
     * Returns a single &#x60;EmployeeWage&#x60; specified by &#x60;id&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEmployeeWageTest() throws ApiException {
        String id = null;
        GetEmployeeWageResponse response = api.getEmployeeWage(id);
        // TODO: test validations
    }

    /**
     * GetShift
     *
     * Returns a single &#x60;Shift&#x60; specified by &#x60;id&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getShiftTest() throws ApiException {
        String id = null;
        GetShiftResponse response = api.getShift(id);
        // TODO: test validations
    }

    /**
     * GetTeamMemberWage
     *
     * Returns a single &#x60;TeamMemberWage&#x60; specified by &#x60;id &#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTeamMemberWageTest() throws ApiException {
        String id = null;
        GetTeamMemberWageResponse response = api.getTeamMemberWage(id);
        // TODO: test validations
    }

    /**
     * ListBreakTypes
     *
     * Returns a paginated list of &#x60;BreakType&#x60; instances for a business.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listBreakTypesTest() throws ApiException {
        String locationId = null;
        Integer limit = null;
        String cursor = null;
        ListBreakTypesResponse response = api.listBreakTypes(locationId, limit, cursor);
        // TODO: test validations
    }

    /**
     * ListEmployeeWages
     *
     * Returns a paginated list of &#x60;EmployeeWage&#x60; instances for a business.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listEmployeeWagesTest() throws ApiException {
        String employeeId = null;
        Integer limit = null;
        String cursor = null;
        ListEmployeeWagesResponse response = api.listEmployeeWages(employeeId, limit, cursor);
        // TODO: test validations
    }

    /**
     * ListTeamMemberWages
     *
     * Returns a paginated list of &#x60;TeamMemberWage&#x60; instances for a business.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTeamMemberWagesTest() throws ApiException {
        String teamMemberId = null;
        Integer limit = null;
        String cursor = null;
        ListTeamMemberWagesResponse response = api.listTeamMemberWages(teamMemberId, limit, cursor);
        // TODO: test validations
    }

    /**
     * ListWorkweekConfigs
     *
     * Returns a list of &#x60;WorkweekConfig&#x60; instances for a business.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listWorkweekConfigsTest() throws ApiException {
        Integer limit = null;
        String cursor = null;
        ListWorkweekConfigsResponse response = api.listWorkweekConfigs(limit, cursor);
        // TODO: test validations
    }

    /**
     * SearchShifts
     *
     * Returns a paginated list of &#x60;Shift&#x60; records for a business. The list to be returned can be filtered by: - Location IDs. - Employee IDs. - Shift status (&#x60;OPEN&#x60; and &#x60;CLOSED&#x60;). - Shift start. - Shift end. - Workday details.  The list can be sorted by: - &#x60;start_at&#x60;. - &#x60;end_at&#x60;. - &#x60;created_at&#x60;. - &#x60;updated_at&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchShiftsTest() throws ApiException {
        SearchShiftsRequest searchShiftsRequest = null;
        SearchShiftsResponse response = api.searchShifts(searchShiftsRequest);
        // TODO: test validations
    }

    /**
     * UpdateBreakType
     *
     * Updates an existing &#x60;BreakType&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateBreakTypeTest() throws ApiException {
        String id = null;
        UpdateBreakTypeRequest updateBreakTypeRequest = null;
        UpdateBreakTypeResponse response = api.updateBreakType(id, updateBreakTypeRequest);
        // TODO: test validations
    }

    /**
     * UpdateShift
     *
     * Updates an existing &#x60;Shift&#x60;.  When adding a &#x60;Break&#x60; to a &#x60;Shift&#x60;, any earlier &#x60;Break&#x60; instances in the &#x60;Shift&#x60; have the &#x60;end_at&#x60; property set to a valid RFC-3339 datetime string.  When closing a &#x60;Shift&#x60;, all &#x60;Break&#x60; instances in the &#x60;Shift&#x60; must be complete with &#x60;end_at&#x60; set on each &#x60;Break&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateShiftTest() throws ApiException {
        String id = null;
        UpdateShiftRequest updateShiftRequest = null;
        UpdateShiftResponse response = api.updateShift(id, updateShiftRequest);
        // TODO: test validations
    }

    /**
     * UpdateWorkweekConfig
     *
     * Updates a &#x60;WorkweekConfig&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateWorkweekConfigTest() throws ApiException {
        String id = null;
        UpdateWorkweekConfigRequest updateWorkweekConfigRequest = null;
        UpdateWorkweekConfigResponse response = api.updateWorkweekConfig(id, updateWorkweekConfigRequest);
        // TODO: test validations
    }

}
