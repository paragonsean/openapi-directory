/*
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.BatchChangeInventoryRequest;
import org.openapitools.client.model.BatchChangeInventoryResponse;
import org.openapitools.client.model.BatchRetrieveInventoryChangesRequest;
import org.openapitools.client.model.BatchRetrieveInventoryChangesResponse;
import org.openapitools.client.model.BatchRetrieveInventoryCountsRequest;
import org.openapitools.client.model.BatchRetrieveInventoryCountsResponse;
import org.openapitools.client.model.RetrieveInventoryAdjustmentResponse;
import org.openapitools.client.model.RetrieveInventoryChangesResponse;
import org.openapitools.client.model.RetrieveInventoryCountResponse;
import org.openapitools.client.model.RetrieveInventoryPhysicalCountResponse;
import org.openapitools.client.model.RetrieveInventoryTransferResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for InventoryApi
 */
@Disabled
public class InventoryApiTest {

    private final InventoryApi api = new InventoryApi();

    /**
     * BatchChangeInventory
     *
     * Applies adjustments and counts to the provided item quantities.  On success: returns the current calculated counts for all objects referenced in the request. On failure: returns a list of related errors.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void batchChangeInventoryTest() throws ApiException {
        BatchChangeInventoryRequest batchChangeInventoryRequest = null;
        BatchChangeInventoryResponse response = api.batchChangeInventory(batchChangeInventoryRequest);
        // TODO: test validations
    }

    /**
     * BatchRetrieveInventoryChanges
     *
     * Returns historical physical counts and adjustments based on the provided filter criteria.  Results are paginated and sorted in ascending order according their &#x60;occurred_at&#x60; timestamp (oldest first).  BatchRetrieveInventoryChanges is a catch-all query endpoint for queries that cannot be handled by other, simpler endpoints.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void batchRetrieveInventoryChangesTest() throws ApiException {
        BatchRetrieveInventoryChangesRequest batchRetrieveInventoryChangesRequest = null;
        BatchRetrieveInventoryChangesResponse response = api.batchRetrieveInventoryChanges(batchRetrieveInventoryChangesRequest);
        // TODO: test validations
    }

    /**
     * BatchRetrieveInventoryCounts
     *
     * Returns current counts for the provided [CatalogObject](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject)s at the requested [Location](https://developer.squareup.com/reference/square_2021-08-18/objects/Location)s.  Results are paginated and sorted in descending order according to their &#x60;calculated_at&#x60; timestamp (newest first).  When &#x60;updated_after&#x60; is specified, only counts that have changed since that time (based on the server timestamp for the most recent change) are returned. This allows clients to perform a \&quot;sync\&quot; operation, for example in response to receiving a Webhook notification.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void batchRetrieveInventoryCountsTest() throws ApiException {
        BatchRetrieveInventoryCountsRequest batchRetrieveInventoryCountsRequest = null;
        BatchRetrieveInventoryCountsResponse response = api.batchRetrieveInventoryCounts(batchRetrieveInventoryCountsRequest);
        // TODO: test validations
    }

    /**
     * DeprecatedBatchChangeInventory
     *
     * Deprecated version of [BatchChangeInventory](https://developer.squareup.com/reference/square_2021-08-18/inventory-api/batch-change-inventory) after the endpoint URL  is updated to conform to the standard convention.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deprecatedBatchChangeInventoryTest() throws ApiException {
        BatchChangeInventoryRequest batchChangeInventoryRequest = null;
        BatchChangeInventoryResponse response = api.deprecatedBatchChangeInventory(batchChangeInventoryRequest);
        // TODO: test validations
    }

    /**
     * DeprecatedBatchRetrieveInventoryChanges
     *
     * Deprecated version of [BatchRetrieveInventoryChanges](https://developer.squareup.com/reference/square_2021-08-18/inventory-api/batch-retrieve-inventory-changes) after the endpoint URL  is updated to conform to the standard convention.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deprecatedBatchRetrieveInventoryChangesTest() throws ApiException {
        BatchRetrieveInventoryChangesRequest batchRetrieveInventoryChangesRequest = null;
        BatchRetrieveInventoryChangesResponse response = api.deprecatedBatchRetrieveInventoryChanges(batchRetrieveInventoryChangesRequest);
        // TODO: test validations
    }

    /**
     * DeprecatedBatchRetrieveInventoryCounts
     *
     * Deprecated version of [BatchRetrieveInventoryCounts](https://developer.squareup.com/reference/square_2021-08-18/inventory-api/batch-retrieve-inventory-counts) after the endpoint URL  is updated to conform to the standard convention.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deprecatedBatchRetrieveInventoryCountsTest() throws ApiException {
        BatchRetrieveInventoryCountsRequest batchRetrieveInventoryCountsRequest = null;
        BatchRetrieveInventoryCountsResponse response = api.deprecatedBatchRetrieveInventoryCounts(batchRetrieveInventoryCountsRequest);
        // TODO: test validations
    }

    /**
     * DeprecatedRetrieveInventoryAdjustment
     *
     * Deprecated version of [RetrieveInventoryAdjustment](https://developer.squareup.com/reference/square_2021-08-18/inventory-api/retrieve-inventory-adjustment) after the endpoint URL  is updated to conform to the standard convention.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deprecatedRetrieveInventoryAdjustmentTest() throws ApiException {
        String adjustmentId = null;
        RetrieveInventoryAdjustmentResponse response = api.deprecatedRetrieveInventoryAdjustment(adjustmentId);
        // TODO: test validations
    }

    /**
     * DeprecatedRetrieveInventoryPhysicalCount
     *
     * Deprecated version of [RetrieveInventoryPhysicalCount](https://developer.squareup.com/reference/square_2021-08-18/inventory-api/retrieve-inventory-physical-count) after the endpoint URL  is updated to conform to the standard convention.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deprecatedRetrieveInventoryPhysicalCountTest() throws ApiException {
        String physicalCountId = null;
        RetrieveInventoryPhysicalCountResponse response = api.deprecatedRetrieveInventoryPhysicalCount(physicalCountId);
        // TODO: test validations
    }

    /**
     * RetrieveInventoryAdjustment
     *
     * Returns the [InventoryAdjustment](https://developer.squareup.com/reference/square_2021-08-18/objects/InventoryAdjustment) object with the provided &#x60;adjustment_id&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void retrieveInventoryAdjustmentTest() throws ApiException {
        String adjustmentId = null;
        RetrieveInventoryAdjustmentResponse response = api.retrieveInventoryAdjustment(adjustmentId);
        // TODO: test validations
    }

    /**
     * RetrieveInventoryChanges
     *
     * Returns a set of physical counts and inventory adjustments for the provided [CatalogObject](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject) at the requested [Location](https://developer.squareup.com/reference/square_2021-08-18/objects/Location)s.   You can achieve the same result by calling [BatchRetrieveInventoryChanges](https://developer.squareup.com/reference/square_2021-08-18/inventory-api/batch-retrieve-inventory-changes)  and having the &#x60;catalog_object_ids&#x60; list contain a single element of the &#x60;CatalogObject&#x60; ID.  Results are paginated and sorted in descending order according to their &#x60;occurred_at&#x60; timestamp (newest first).  There are no limits on how far back the caller can page. This endpoint can be  used to display recent changes for a specific item. For more sophisticated queries, use a batch endpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void retrieveInventoryChangesTest() throws ApiException {
        String catalogObjectId = null;
        String locationIds = null;
        String cursor = null;
        RetrieveInventoryChangesResponse response = api.retrieveInventoryChanges(catalogObjectId, locationIds, cursor);
        // TODO: test validations
    }

    /**
     * RetrieveInventoryCount
     *
     * Retrieves the current calculated stock count for a given [CatalogObject](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject) at a given set of [Location](https://developer.squareup.com/reference/square_2021-08-18/objects/Location)s. Responses are paginated and unsorted. For more sophisticated queries, use a batch endpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void retrieveInventoryCountTest() throws ApiException {
        String catalogObjectId = null;
        String locationIds = null;
        String cursor = null;
        RetrieveInventoryCountResponse response = api.retrieveInventoryCount(catalogObjectId, locationIds, cursor);
        // TODO: test validations
    }

    /**
     * RetrieveInventoryPhysicalCount
     *
     * Returns the [InventoryPhysicalCount](https://developer.squareup.com/reference/square_2021-08-18/objects/InventoryPhysicalCount) object with the provided &#x60;physical_count_id&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void retrieveInventoryPhysicalCountTest() throws ApiException {
        String physicalCountId = null;
        RetrieveInventoryPhysicalCountResponse response = api.retrieveInventoryPhysicalCount(physicalCountId);
        // TODO: test validations
    }

    /**
     * RetrieveInventoryTransfer
     *
     * Returns the [InventoryTransfer](https://developer.squareup.com/reference/square_2021-08-18/objects/InventoryTransfer) object with the provided &#x60;transfer_id&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void retrieveInventoryTransferTest() throws ApiException {
        String transferId = null;
        RetrieveInventoryTransferResponse response = api.retrieveInventoryTransfer(transferId);
        // TODO: test validations
    }

}
