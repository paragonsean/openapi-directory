/*
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AcceptDisputeResponse;
import org.openapitools.client.model.CreateDisputeEvidenceTextRequest;
import org.openapitools.client.model.CreateDisputeEvidenceTextResponse;
import org.openapitools.client.model.DeleteDisputeEvidenceResponse;
import org.openapitools.client.model.ListDisputeEvidenceResponse;
import org.openapitools.client.model.ListDisputesResponse;
import org.openapitools.client.model.RetrieveDisputeEvidenceResponse;
import org.openapitools.client.model.RetrieveDisputeResponse;
import org.openapitools.client.model.SubmitEvidenceResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DisputesApi
 */
@Disabled
public class DisputesApiTest {

    private final DisputesApi api = new DisputesApi();

    /**
     * AcceptDispute
     *
     * Accepts the loss on a dispute. Square returns the disputed amount to the cardholder and updates the dispute state to ACCEPTED.  Square debits the disputed amount from the sellerâ€™s Square account. If the Square account does not have sufficient funds, Square debits the associated bank account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void acceptDisputeTest() throws ApiException {
        String disputeId = null;
        AcceptDisputeResponse response = api.acceptDispute(disputeId);
        // TODO: test validations
    }

    /**
     * CreateDisputeEvidenceText
     *
     * Uploads text to use as evidence for a dispute challenge.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createDisputeEvidenceTextTest() throws ApiException {
        String disputeId = null;
        CreateDisputeEvidenceTextRequest createDisputeEvidenceTextRequest = null;
        CreateDisputeEvidenceTextResponse response = api.createDisputeEvidenceText(disputeId, createDisputeEvidenceTextRequest);
        // TODO: test validations
    }

    /**
     * DeleteDisputeEvidence
     *
     * Removes specified evidence from a dispute.  Square does not send the bank any evidence that is removed. Also, you cannot remove evidence after submitting it to the bank using [SubmitEvidence](https://developer.squareup.com/reference/square_2021-08-18/disputes-api/submit-evidence).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteDisputeEvidenceTest() throws ApiException {
        String disputeId = null;
        String evidenceId = null;
        DeleteDisputeEvidenceResponse response = api.deleteDisputeEvidence(disputeId, evidenceId);
        // TODO: test validations
    }

    /**
     * ListDisputeEvidence
     *
     * Returns a list of evidence associated with a dispute.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listDisputeEvidenceTest() throws ApiException {
        String disputeId = null;
        String cursor = null;
        ListDisputeEvidenceResponse response = api.listDisputeEvidence(disputeId, cursor);
        // TODO: test validations
    }

    /**
     * ListDisputes
     *
     * Returns a list of disputes associated with a particular account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listDisputesTest() throws ApiException {
        String cursor = null;
        String states = null;
        String locationId = null;
        ListDisputesResponse response = api.listDisputes(cursor, states, locationId);
        // TODO: test validations
    }

    /**
     * RetrieveDispute
     *
     * Returns details about a specific dispute.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void retrieveDisputeTest() throws ApiException {
        String disputeId = null;
        RetrieveDisputeResponse response = api.retrieveDispute(disputeId);
        // TODO: test validations
    }

    /**
     * RetrieveDisputeEvidence
     *
     * Returns the evidence metadata specified by the evidence ID in the request URL path  You must maintain a copy of the evidence you upload if you want to reference it later. You cannot download the evidence after you upload it.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void retrieveDisputeEvidenceTest() throws ApiException {
        String disputeId = null;
        String evidenceId = null;
        RetrieveDisputeEvidenceResponse response = api.retrieveDisputeEvidence(disputeId, evidenceId);
        // TODO: test validations
    }

    /**
     * SubmitEvidence
     *
     * Submits evidence to the cardholder&#39;s bank.  Before submitting evidence, Square compiles all available evidence. This includes evidence uploaded using the [CreateDisputeEvidenceFile](https://developer.squareup.com/reference/square_2021-08-18/disputes-api/create-dispute-evidence-file) and [CreateDisputeEvidenceText](https://developer.squareup.com/reference/square_2021-08-18/disputes-api/create-dispute-evidence-text) endpoints and evidence automatically provided by Square, when available.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void submitEvidenceTest() throws ApiException {
        String disputeId = null;
        SubmitEvidenceResponse response = api.submitEvidence(disputeId);
        // TODO: test validations
    }

}
