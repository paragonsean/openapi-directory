/*
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AddGroupToCustomerResponse;
import org.openapitools.client.model.CreateCustomerCardRequest;
import org.openapitools.client.model.CreateCustomerCardResponse;
import org.openapitools.client.model.CreateCustomerRequest;
import org.openapitools.client.model.CreateCustomerResponse;
import org.openapitools.client.model.DeleteCustomerCardResponse;
import org.openapitools.client.model.DeleteCustomerResponse;
import org.openapitools.client.model.ListCustomersResponse;
import org.openapitools.client.model.RemoveGroupFromCustomerResponse;
import org.openapitools.client.model.RetrieveCustomerResponse;
import org.openapitools.client.model.SearchCustomersRequest;
import org.openapitools.client.model.SearchCustomersResponse;
import org.openapitools.client.model.UpdateCustomerRequest;
import org.openapitools.client.model.UpdateCustomerResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CustomersApi
 */
@Disabled
public class CustomersApiTest {

    private final CustomersApi api = new CustomersApi();

    /**
     * AddGroupToCustomer
     *
     * Adds a group membership to a customer.  The customer is identified by the &#x60;customer_id&#x60; value and the customer group is identified by the &#x60;group_id&#x60; value.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addGroupToCustomerTest() throws ApiException {
        String customerId = null;
        String groupId = null;
        AddGroupToCustomerResponse response = api.addGroupToCustomer(customerId, groupId);
        // TODO: test validations
    }

    /**
     * CreateCustomer
     *
     * Creates a new customer for a business.  You must provide at least one of the following values in your request to this endpoint:  - &#x60;given_name&#x60; - &#x60;family_name&#x60; - &#x60;company_name&#x60; - &#x60;email_address&#x60; - &#x60;phone_number&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createCustomerTest() throws ApiException {
        CreateCustomerRequest createCustomerRequest = null;
        CreateCustomerResponse response = api.createCustomer(createCustomerRequest);
        // TODO: test validations
    }

    /**
     * CreateCustomerCard
     *
     * Adds a card on file to an existing customer.  As with charges, calls to &#x60;CreateCustomerCard&#x60; are idempotent. Multiple calls with the same card nonce return the same card record that was created with the provided nonce during the _first_ call.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createCustomerCardTest() throws ApiException {
        String customerId = null;
        CreateCustomerCardRequest createCustomerCardRequest = null;
        CreateCustomerCardResponse response = api.createCustomerCard(customerId, createCustomerCardRequest);
        // TODO: test validations
    }

    /**
     * DeleteCustomer
     *
     * Deletes a customer profile from a business. This operation also unlinks any associated cards on file.   As a best practice, you should include the &#x60;version&#x60; field in the request to enable [optimistic concurrency](https://developer.squareup.com/docs/working-with-apis/optimistic-concurrency) control. The value must be set to the current version of the customer profile.   To delete a customer profile that was created by merging existing profiles, you must use the ID of the newly created profile.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteCustomerTest() throws ApiException {
        String customerId = null;
        Long version = null;
        DeleteCustomerResponse response = api.deleteCustomer(customerId, version);
        // TODO: test validations
    }

    /**
     * DeleteCustomerCard
     *
     * Removes a card on file from a customer.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteCustomerCardTest() throws ApiException {
        String customerId = null;
        String cardId = null;
        DeleteCustomerCardResponse response = api.deleteCustomerCard(customerId, cardId);
        // TODO: test validations
    }

    /**
     * ListCustomers
     *
     * Lists customer profiles associated with a Square account.  Under normal operating conditions, newly created or updated customer profiles become available for the listing operation in well under 30 seconds. Occasionally, propagation of the new or updated profiles can take closer to one minute or longer, especially during network incidents and outages.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listCustomersTest() throws ApiException {
        String cursor = null;
        Integer limit = null;
        String sortField = null;
        String sortOrder = null;
        ListCustomersResponse response = api.listCustomers(cursor, limit, sortField, sortOrder);
        // TODO: test validations
    }

    /**
     * RemoveGroupFromCustomer
     *
     * Removes a group membership from a customer.  The customer is identified by the &#x60;customer_id&#x60; value and the customer group is identified by the &#x60;group_id&#x60; value.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeGroupFromCustomerTest() throws ApiException {
        String customerId = null;
        String groupId = null;
        RemoveGroupFromCustomerResponse response = api.removeGroupFromCustomer(customerId, groupId);
        // TODO: test validations
    }

    /**
     * RetrieveCustomer
     *
     * Returns details for a single customer.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void retrieveCustomerTest() throws ApiException {
        String customerId = null;
        RetrieveCustomerResponse response = api.retrieveCustomer(customerId);
        // TODO: test validations
    }

    /**
     * SearchCustomers
     *
     * Searches the customer profiles associated with a Square account using a supported query filter.  Calling &#x60;SearchCustomers&#x60; without any explicit query filter returns all customer profiles ordered alphabetically based on &#x60;given_name&#x60; and &#x60;family_name&#x60;.  Under normal operating conditions, newly created or updated customer profiles become available for the search operation in well under 30 seconds. Occasionally, propagation of the new or updated profiles can take closer to one minute or longer, especially during network incidents and outages.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchCustomersTest() throws ApiException {
        SearchCustomersRequest searchCustomersRequest = null;
        SearchCustomersResponse response = api.searchCustomers(searchCustomersRequest);
        // TODO: test validations
    }

    /**
     * UpdateCustomer
     *
     * Updates a customer profile. To change an attribute, specify the new value. To remove an attribute, specify the value as an empty string or empty object.  As a best practice, you should include the &#x60;version&#x60; field in the request to enable [optimistic concurrency](https://developer.squareup.com/docs/working-with-apis/optimistic-concurrency) control. The value must be set to the current version of the customer profile.  To update a customer profile that was created by merging existing profiles, you must use the ID of the newly created profile.  You cannot use this endpoint to change cards on file. To make changes, use the [Cards API](https://developer.squareup.com/reference/square_2021-08-18/cards-api) or [Gift Cards API](https://developer.squareup.com/reference/square_2021-08-18/gift-cards-api).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateCustomerTest() throws ApiException {
        String customerId = null;
        UpdateCustomerRequest updateCustomerRequest = null;
        UpdateCustomerResponse response = api.updateCustomer(customerId, updateCustomerRequest);
        // TODO: test validations
    }

}
