/*
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateCardRequest;
import org.openapitools.client.model.CreateCardResponse;
import org.openapitools.client.model.DisableCardResponse;
import org.openapitools.client.model.ListCardsResponse;
import org.openapitools.client.model.RetrieveCardResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CardsApi
 */
@Disabled
public class CardsApiTest {

    private final CardsApi api = new CardsApi();

    /**
     * CreateCard
     *
     * Adds a card on file to an existing merchant.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createCardTest() throws ApiException {
        CreateCardRequest createCardRequest = null;
        CreateCardResponse response = api.createCard(createCardRequest);
        // TODO: test validations
    }

    /**
     * DisableCard
     *
     * Disables the card, preventing any further updates or charges. Disabling an already disabled card is allowed but has no effect.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void disableCardTest() throws ApiException {
        String cardId = null;
        DisableCardResponse response = api.disableCard(cardId);
        // TODO: test validations
    }

    /**
     * ListCards
     *
     * Retrieves a list of cards owned by the account making the request. A max of 25 cards will be returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listCardsTest() throws ApiException {
        String cursor = null;
        String customerId = null;
        Boolean includeDisabled = null;
        String referenceId = null;
        String sortOrder = null;
        ListCardsResponse response = api.listCards(cursor, customerId, includeDisabled, referenceId, sortOrder);
        // TODO: test validations
    }

    /**
     * RetrieveCard
     *
     * Retrieves details for a specific Card.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void retrieveCardTest() throws ApiException {
        String cardId = null;
        RetrieveCardResponse response = api.retrieveCard(cardId);
        // TODO: test validations
    }

}
