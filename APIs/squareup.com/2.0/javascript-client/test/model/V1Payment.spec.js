/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SquareConnectApi);
  }
}(this, function(expect, SquareConnectApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SquareConnectApi.V1Payment();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('V1Payment', function() {
    it('should create an instance of V1Payment', function() {
      // uncomment below and update the code to test V1Payment
      //var instance = new SquareConnectApi.V1Payment();
      //expect(instance).to.be.a(SquareConnectApi.V1Payment);
    });

    it('should have the property additiveTax (base name: "additive_tax")', function() {
      // uncomment below and update the code to test the property additiveTax
      //var instance = new SquareConnectApi.V1Payment();
      //expect(instance).to.be();
    });

    it('should have the property additiveTaxMoney (base name: "additive_tax_money")', function() {
      // uncomment below and update the code to test the property additiveTaxMoney
      //var instance = new SquareConnectApi.V1Payment();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "created_at")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new SquareConnectApi.V1Payment();
      //expect(instance).to.be();
    });

    it('should have the property creatorId (base name: "creator_id")', function() {
      // uncomment below and update the code to test the property creatorId
      //var instance = new SquareConnectApi.V1Payment();
      //expect(instance).to.be();
    });

    it('should have the property device (base name: "device")', function() {
      // uncomment below and update the code to test the property device
      //var instance = new SquareConnectApi.V1Payment();
      //expect(instance).to.be();
    });

    it('should have the property discountMoney (base name: "discount_money")', function() {
      // uncomment below and update the code to test the property discountMoney
      //var instance = new SquareConnectApi.V1Payment();
      //expect(instance).to.be();
    });

    it('should have the property grossSalesMoney (base name: "gross_sales_money")', function() {
      // uncomment below and update the code to test the property grossSalesMoney
      //var instance = new SquareConnectApi.V1Payment();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new SquareConnectApi.V1Payment();
      //expect(instance).to.be();
    });

    it('should have the property inclusiveTax (base name: "inclusive_tax")', function() {
      // uncomment below and update the code to test the property inclusiveTax
      //var instance = new SquareConnectApi.V1Payment();
      //expect(instance).to.be();
    });

    it('should have the property inclusiveTaxMoney (base name: "inclusive_tax_money")', function() {
      // uncomment below and update the code to test the property inclusiveTaxMoney
      //var instance = new SquareConnectApi.V1Payment();
      //expect(instance).to.be();
    });

    it('should have the property isPartial (base name: "is_partial")', function() {
      // uncomment below and update the code to test the property isPartial
      //var instance = new SquareConnectApi.V1Payment();
      //expect(instance).to.be();
    });

    it('should have the property itemizations (base name: "itemizations")', function() {
      // uncomment below and update the code to test the property itemizations
      //var instance = new SquareConnectApi.V1Payment();
      //expect(instance).to.be();
    });

    it('should have the property merchantId (base name: "merchant_id")', function() {
      // uncomment below and update the code to test the property merchantId
      //var instance = new SquareConnectApi.V1Payment();
      //expect(instance).to.be();
    });

    it('should have the property netSalesMoney (base name: "net_sales_money")', function() {
      // uncomment below and update the code to test the property netSalesMoney
      //var instance = new SquareConnectApi.V1Payment();
      //expect(instance).to.be();
    });

    it('should have the property netTotalMoney (base name: "net_total_money")', function() {
      // uncomment below and update the code to test the property netTotalMoney
      //var instance = new SquareConnectApi.V1Payment();
      //expect(instance).to.be();
    });

    it('should have the property paymentUrl (base name: "payment_url")', function() {
      // uncomment below and update the code to test the property paymentUrl
      //var instance = new SquareConnectApi.V1Payment();
      //expect(instance).to.be();
    });

    it('should have the property processingFeeMoney (base name: "processing_fee_money")', function() {
      // uncomment below and update the code to test the property processingFeeMoney
      //var instance = new SquareConnectApi.V1Payment();
      //expect(instance).to.be();
    });

    it('should have the property receiptUrl (base name: "receipt_url")', function() {
      // uncomment below and update the code to test the property receiptUrl
      //var instance = new SquareConnectApi.V1Payment();
      //expect(instance).to.be();
    });

    it('should have the property refundedMoney (base name: "refunded_money")', function() {
      // uncomment below and update the code to test the property refundedMoney
      //var instance = new SquareConnectApi.V1Payment();
      //expect(instance).to.be();
    });

    it('should have the property refunds (base name: "refunds")', function() {
      // uncomment below and update the code to test the property refunds
      //var instance = new SquareConnectApi.V1Payment();
      //expect(instance).to.be();
    });

    it('should have the property surchargeMoney (base name: "surcharge_money")', function() {
      // uncomment below and update the code to test the property surchargeMoney
      //var instance = new SquareConnectApi.V1Payment();
      //expect(instance).to.be();
    });

    it('should have the property surcharges (base name: "surcharges")', function() {
      // uncomment below and update the code to test the property surcharges
      //var instance = new SquareConnectApi.V1Payment();
      //expect(instance).to.be();
    });

    it('should have the property swedishRoundingMoney (base name: "swedish_rounding_money")', function() {
      // uncomment below and update the code to test the property swedishRoundingMoney
      //var instance = new SquareConnectApi.V1Payment();
      //expect(instance).to.be();
    });

    it('should have the property taxMoney (base name: "tax_money")', function() {
      // uncomment below and update the code to test the property taxMoney
      //var instance = new SquareConnectApi.V1Payment();
      //expect(instance).to.be();
    });

    it('should have the property tender (base name: "tender")', function() {
      // uncomment below and update the code to test the property tender
      //var instance = new SquareConnectApi.V1Payment();
      //expect(instance).to.be();
    });

    it('should have the property tipMoney (base name: "tip_money")', function() {
      // uncomment below and update the code to test the property tipMoney
      //var instance = new SquareConnectApi.V1Payment();
      //expect(instance).to.be();
    });

    it('should have the property totalCollectedMoney (base name: "total_collected_money")', function() {
      // uncomment below and update the code to test the property totalCollectedMoney
      //var instance = new SquareConnectApi.V1Payment();
      //expect(instance).to.be();
    });

  });

}));
