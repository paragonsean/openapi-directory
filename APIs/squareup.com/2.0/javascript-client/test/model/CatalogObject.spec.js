/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SquareConnectApi);
  }
}(this, function(expect, SquareConnectApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SquareConnectApi.CatalogObject();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CatalogObject', function() {
    it('should create an instance of CatalogObject', function() {
      // uncomment below and update the code to test CatalogObject
      //var instance = new SquareConnectApi.CatalogObject();
      //expect(instance).to.be.a(SquareConnectApi.CatalogObject);
    });

    it('should have the property absentAtLocationIds (base name: "absent_at_location_ids")', function() {
      // uncomment below and update the code to test the property absentAtLocationIds
      //var instance = new SquareConnectApi.CatalogObject();
      //expect(instance).to.be();
    });

    it('should have the property catalogV1Ids (base name: "catalog_v1_ids")', function() {
      // uncomment below and update the code to test the property catalogV1Ids
      //var instance = new SquareConnectApi.CatalogObject();
      //expect(instance).to.be();
    });

    it('should have the property categoryData (base name: "category_data")', function() {
      // uncomment below and update the code to test the property categoryData
      //var instance = new SquareConnectApi.CatalogObject();
      //expect(instance).to.be();
    });

    it('should have the property customAttributeDefinitionData (base name: "custom_attribute_definition_data")', function() {
      // uncomment below and update the code to test the property customAttributeDefinitionData
      //var instance = new SquareConnectApi.CatalogObject();
      //expect(instance).to.be();
    });

    it('should have the property customAttributeValues (base name: "custom_attribute_values")', function() {
      // uncomment below and update the code to test the property customAttributeValues
      //var instance = new SquareConnectApi.CatalogObject();
      //expect(instance).to.be();
    });

    it('should have the property discountData (base name: "discount_data")', function() {
      // uncomment below and update the code to test the property discountData
      //var instance = new SquareConnectApi.CatalogObject();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new SquareConnectApi.CatalogObject();
      //expect(instance).to.be();
    });

    it('should have the property imageData (base name: "image_data")', function() {
      // uncomment below and update the code to test the property imageData
      //var instance = new SquareConnectApi.CatalogObject();
      //expect(instance).to.be();
    });

    it('should have the property imageId (base name: "image_id")', function() {
      // uncomment below and update the code to test the property imageId
      //var instance = new SquareConnectApi.CatalogObject();
      //expect(instance).to.be();
    });

    it('should have the property isDeleted (base name: "is_deleted")', function() {
      // uncomment below and update the code to test the property isDeleted
      //var instance = new SquareConnectApi.CatalogObject();
      //expect(instance).to.be();
    });

    it('should have the property itemData (base name: "item_data")', function() {
      // uncomment below and update the code to test the property itemData
      //var instance = new SquareConnectApi.CatalogObject();
      //expect(instance).to.be();
    });

    it('should have the property itemOptionData (base name: "item_option_data")', function() {
      // uncomment below and update the code to test the property itemOptionData
      //var instance = new SquareConnectApi.CatalogObject();
      //expect(instance).to.be();
    });

    it('should have the property itemOptionValueData (base name: "item_option_value_data")', function() {
      // uncomment below and update the code to test the property itemOptionValueData
      //var instance = new SquareConnectApi.CatalogObject();
      //expect(instance).to.be();
    });

    it('should have the property itemVariationData (base name: "item_variation_data")', function() {
      // uncomment below and update the code to test the property itemVariationData
      //var instance = new SquareConnectApi.CatalogObject();
      //expect(instance).to.be();
    });

    it('should have the property measurementUnitData (base name: "measurement_unit_data")', function() {
      // uncomment below and update the code to test the property measurementUnitData
      //var instance = new SquareConnectApi.CatalogObject();
      //expect(instance).to.be();
    });

    it('should have the property modifierData (base name: "modifier_data")', function() {
      // uncomment below and update the code to test the property modifierData
      //var instance = new SquareConnectApi.CatalogObject();
      //expect(instance).to.be();
    });

    it('should have the property modifierListData (base name: "modifier_list_data")', function() {
      // uncomment below and update the code to test the property modifierListData
      //var instance = new SquareConnectApi.CatalogObject();
      //expect(instance).to.be();
    });

    it('should have the property presentAtAllLocations (base name: "present_at_all_locations")', function() {
      // uncomment below and update the code to test the property presentAtAllLocations
      //var instance = new SquareConnectApi.CatalogObject();
      //expect(instance).to.be();
    });

    it('should have the property presentAtLocationIds (base name: "present_at_location_ids")', function() {
      // uncomment below and update the code to test the property presentAtLocationIds
      //var instance = new SquareConnectApi.CatalogObject();
      //expect(instance).to.be();
    });

    it('should have the property pricingRuleData (base name: "pricing_rule_data")', function() {
      // uncomment below and update the code to test the property pricingRuleData
      //var instance = new SquareConnectApi.CatalogObject();
      //expect(instance).to.be();
    });

    it('should have the property productSetData (base name: "product_set_data")', function() {
      // uncomment below and update the code to test the property productSetData
      //var instance = new SquareConnectApi.CatalogObject();
      //expect(instance).to.be();
    });

    it('should have the property quickAmountsSettingsData (base name: "quick_amounts_settings_data")', function() {
      // uncomment below and update the code to test the property quickAmountsSettingsData
      //var instance = new SquareConnectApi.CatalogObject();
      //expect(instance).to.be();
    });

    it('should have the property subscriptionPlanData (base name: "subscription_plan_data")', function() {
      // uncomment below and update the code to test the property subscriptionPlanData
      //var instance = new SquareConnectApi.CatalogObject();
      //expect(instance).to.be();
    });

    it('should have the property taxData (base name: "tax_data")', function() {
      // uncomment below and update the code to test the property taxData
      //var instance = new SquareConnectApi.CatalogObject();
      //expect(instance).to.be();
    });

    it('should have the property timePeriodData (base name: "time_period_data")', function() {
      // uncomment below and update the code to test the property timePeriodData
      //var instance = new SquareConnectApi.CatalogObject();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new SquareConnectApi.CatalogObject();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updated_at")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new SquareConnectApi.CatalogObject();
      //expect(instance).to.be();
    });

    it('should have the property version (base name: "version")', function() {
      // uncomment below and update the code to test the property version
      //var instance = new SquareConnectApi.CatalogObject();
      //expect(instance).to.be();
    });

  });

}));
