/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SquareConnectApi);
  }
}(this, function(expect, SquareConnectApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SquareConnectApi.CatalogQuery();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CatalogQuery', function() {
    it('should create an instance of CatalogQuery', function() {
      // uncomment below and update the code to test CatalogQuery
      //var instance = new SquareConnectApi.CatalogQuery();
      //expect(instance).to.be.a(SquareConnectApi.CatalogQuery);
    });

    it('should have the property exactQuery (base name: "exact_query")', function() {
      // uncomment below and update the code to test the property exactQuery
      //var instance = new SquareConnectApi.CatalogQuery();
      //expect(instance).to.be();
    });

    it('should have the property itemVariationsForItemOptionValuesQuery (base name: "item_variations_for_item_option_values_query")', function() {
      // uncomment below and update the code to test the property itemVariationsForItemOptionValuesQuery
      //var instance = new SquareConnectApi.CatalogQuery();
      //expect(instance).to.be();
    });

    it('should have the property itemsForItemOptionsQuery (base name: "items_for_item_options_query")', function() {
      // uncomment below and update the code to test the property itemsForItemOptionsQuery
      //var instance = new SquareConnectApi.CatalogQuery();
      //expect(instance).to.be();
    });

    it('should have the property itemsForModifierListQuery (base name: "items_for_modifier_list_query")', function() {
      // uncomment below and update the code to test the property itemsForModifierListQuery
      //var instance = new SquareConnectApi.CatalogQuery();
      //expect(instance).to.be();
    });

    it('should have the property itemsForTaxQuery (base name: "items_for_tax_query")', function() {
      // uncomment below and update the code to test the property itemsForTaxQuery
      //var instance = new SquareConnectApi.CatalogQuery();
      //expect(instance).to.be();
    });

    it('should have the property prefixQuery (base name: "prefix_query")', function() {
      // uncomment below and update the code to test the property prefixQuery
      //var instance = new SquareConnectApi.CatalogQuery();
      //expect(instance).to.be();
    });

    it('should have the property rangeQuery (base name: "range_query")', function() {
      // uncomment below and update the code to test the property rangeQuery
      //var instance = new SquareConnectApi.CatalogQuery();
      //expect(instance).to.be();
    });

    it('should have the property setQuery (base name: "set_query")', function() {
      // uncomment below and update the code to test the property setQuery
      //var instance = new SquareConnectApi.CatalogQuery();
      //expect(instance).to.be();
    });

    it('should have the property sortedAttributeQuery (base name: "sorted_attribute_query")', function() {
      // uncomment below and update the code to test the property sortedAttributeQuery
      //var instance = new SquareConnectApi.CatalogQuery();
      //expect(instance).to.be();
    });

    it('should have the property textQuery (base name: "text_query")', function() {
      // uncomment below and update the code to test the property textQuery
      //var instance = new SquareConnectApi.CatalogQuery();
      //expect(instance).to.be();
    });

  });

}));
