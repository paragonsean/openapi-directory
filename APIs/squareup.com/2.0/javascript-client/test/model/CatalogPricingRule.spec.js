/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SquareConnectApi);
  }
}(this, function(expect, SquareConnectApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SquareConnectApi.CatalogPricingRule();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CatalogPricingRule', function() {
    it('should create an instance of CatalogPricingRule', function() {
      // uncomment below and update the code to test CatalogPricingRule
      //var instance = new SquareConnectApi.CatalogPricingRule();
      //expect(instance).to.be.a(SquareConnectApi.CatalogPricingRule);
    });

    it('should have the property applyProductsId (base name: "apply_products_id")', function() {
      // uncomment below and update the code to test the property applyProductsId
      //var instance = new SquareConnectApi.CatalogPricingRule();
      //expect(instance).to.be();
    });

    it('should have the property customerGroupIdsAny (base name: "customer_group_ids_any")', function() {
      // uncomment below and update the code to test the property customerGroupIdsAny
      //var instance = new SquareConnectApi.CatalogPricingRule();
      //expect(instance).to.be();
    });

    it('should have the property discountId (base name: "discount_id")', function() {
      // uncomment below and update the code to test the property discountId
      //var instance = new SquareConnectApi.CatalogPricingRule();
      //expect(instance).to.be();
    });

    it('should have the property excludeProductsId (base name: "exclude_products_id")', function() {
      // uncomment below and update the code to test the property excludeProductsId
      //var instance = new SquareConnectApi.CatalogPricingRule();
      //expect(instance).to.be();
    });

    it('should have the property excludeStrategy (base name: "exclude_strategy")', function() {
      // uncomment below and update the code to test the property excludeStrategy
      //var instance = new SquareConnectApi.CatalogPricingRule();
      //expect(instance).to.be();
    });

    it('should have the property matchProductsId (base name: "match_products_id")', function() {
      // uncomment below and update the code to test the property matchProductsId
      //var instance = new SquareConnectApi.CatalogPricingRule();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new SquareConnectApi.CatalogPricingRule();
      //expect(instance).to.be();
    });

    it('should have the property timePeriodIds (base name: "time_period_ids")', function() {
      // uncomment below and update the code to test the property timePeriodIds
      //var instance = new SquareConnectApi.CatalogPricingRule();
      //expect(instance).to.be();
    });

    it('should have the property validFromDate (base name: "valid_from_date")', function() {
      // uncomment below and update the code to test the property validFromDate
      //var instance = new SquareConnectApi.CatalogPricingRule();
      //expect(instance).to.be();
    });

    it('should have the property validFromLocalTime (base name: "valid_from_local_time")', function() {
      // uncomment below and update the code to test the property validFromLocalTime
      //var instance = new SquareConnectApi.CatalogPricingRule();
      //expect(instance).to.be();
    });

    it('should have the property validUntilDate (base name: "valid_until_date")', function() {
      // uncomment below and update the code to test the property validUntilDate
      //var instance = new SquareConnectApi.CatalogPricingRule();
      //expect(instance).to.be();
    });

    it('should have the property validUntilLocalTime (base name: "valid_until_local_time")', function() {
      // uncomment below and update the code to test the property validUntilLocalTime
      //var instance = new SquareConnectApi.CatalogPricingRule();
      //expect(instance).to.be();
    });

  });

}));
