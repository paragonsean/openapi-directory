/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SquareConnectApi);
  }
}(this, function(expect, SquareConnectApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SquareConnectApi.Address();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Address', function() {
    it('should create an instance of Address', function() {
      // uncomment below and update the code to test Address
      //var instance = new SquareConnectApi.Address();
      //expect(instance).to.be.a(SquareConnectApi.Address);
    });

    it('should have the property addressLine1 (base name: "address_line_1")', function() {
      // uncomment below and update the code to test the property addressLine1
      //var instance = new SquareConnectApi.Address();
      //expect(instance).to.be();
    });

    it('should have the property addressLine2 (base name: "address_line_2")', function() {
      // uncomment below and update the code to test the property addressLine2
      //var instance = new SquareConnectApi.Address();
      //expect(instance).to.be();
    });

    it('should have the property addressLine3 (base name: "address_line_3")', function() {
      // uncomment below and update the code to test the property addressLine3
      //var instance = new SquareConnectApi.Address();
      //expect(instance).to.be();
    });

    it('should have the property administrativeDistrictLevel1 (base name: "administrative_district_level_1")', function() {
      // uncomment below and update the code to test the property administrativeDistrictLevel1
      //var instance = new SquareConnectApi.Address();
      //expect(instance).to.be();
    });

    it('should have the property administrativeDistrictLevel2 (base name: "administrative_district_level_2")', function() {
      // uncomment below and update the code to test the property administrativeDistrictLevel2
      //var instance = new SquareConnectApi.Address();
      //expect(instance).to.be();
    });

    it('should have the property administrativeDistrictLevel3 (base name: "administrative_district_level_3")', function() {
      // uncomment below and update the code to test the property administrativeDistrictLevel3
      //var instance = new SquareConnectApi.Address();
      //expect(instance).to.be();
    });

    it('should have the property country (base name: "country")', function() {
      // uncomment below and update the code to test the property country
      //var instance = new SquareConnectApi.Address();
      //expect(instance).to.be();
    });

    it('should have the property firstName (base name: "first_name")', function() {
      // uncomment below and update the code to test the property firstName
      //var instance = new SquareConnectApi.Address();
      //expect(instance).to.be();
    });

    it('should have the property lastName (base name: "last_name")', function() {
      // uncomment below and update the code to test the property lastName
      //var instance = new SquareConnectApi.Address();
      //expect(instance).to.be();
    });

    it('should have the property locality (base name: "locality")', function() {
      // uncomment below and update the code to test the property locality
      //var instance = new SquareConnectApi.Address();
      //expect(instance).to.be();
    });

    it('should have the property organization (base name: "organization")', function() {
      // uncomment below and update the code to test the property organization
      //var instance = new SquareConnectApi.Address();
      //expect(instance).to.be();
    });

    it('should have the property postalCode (base name: "postal_code")', function() {
      // uncomment below and update the code to test the property postalCode
      //var instance = new SquareConnectApi.Address();
      //expect(instance).to.be();
    });

    it('should have the property sublocality (base name: "sublocality")', function() {
      // uncomment below and update the code to test the property sublocality
      //var instance = new SquareConnectApi.Address();
      //expect(instance).to.be();
    });

    it('should have the property sublocality2 (base name: "sublocality_2")', function() {
      // uncomment below and update the code to test the property sublocality2
      //var instance = new SquareConnectApi.Address();
      //expect(instance).to.be();
    });

    it('should have the property sublocality3 (base name: "sublocality_3")', function() {
      // uncomment below and update the code to test the property sublocality3
      //var instance = new SquareConnectApi.Address();
      //expect(instance).to.be();
    });

  });

}));
