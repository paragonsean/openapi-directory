/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SquareConnectApi);
  }
}(this, function(expect, SquareConnectApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SquareConnectApi.InventoryAdjustment();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('InventoryAdjustment', function() {
    it('should create an instance of InventoryAdjustment', function() {
      // uncomment below and update the code to test InventoryAdjustment
      //var instance = new SquareConnectApi.InventoryAdjustment();
      //expect(instance).to.be.a(SquareConnectApi.InventoryAdjustment);
    });

    it('should have the property adjustmentGroup (base name: "adjustment_group")', function() {
      // uncomment below and update the code to test the property adjustmentGroup
      //var instance = new SquareConnectApi.InventoryAdjustment();
      //expect(instance).to.be();
    });

    it('should have the property catalogObjectId (base name: "catalog_object_id")', function() {
      // uncomment below and update the code to test the property catalogObjectId
      //var instance = new SquareConnectApi.InventoryAdjustment();
      //expect(instance).to.be();
    });

    it('should have the property catalogObjectType (base name: "catalog_object_type")', function() {
      // uncomment below and update the code to test the property catalogObjectType
      //var instance = new SquareConnectApi.InventoryAdjustment();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "created_at")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new SquareConnectApi.InventoryAdjustment();
      //expect(instance).to.be();
    });

    it('should have the property employeeId (base name: "employee_id")', function() {
      // uncomment below and update the code to test the property employeeId
      //var instance = new SquareConnectApi.InventoryAdjustment();
      //expect(instance).to.be();
    });

    it('should have the property fromState (base name: "from_state")', function() {
      // uncomment below and update the code to test the property fromState
      //var instance = new SquareConnectApi.InventoryAdjustment();
      //expect(instance).to.be();
    });

    it('should have the property goodsReceiptId (base name: "goods_receipt_id")', function() {
      // uncomment below and update the code to test the property goodsReceiptId
      //var instance = new SquareConnectApi.InventoryAdjustment();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new SquareConnectApi.InventoryAdjustment();
      //expect(instance).to.be();
    });

    it('should have the property locationId (base name: "location_id")', function() {
      // uncomment below and update the code to test the property locationId
      //var instance = new SquareConnectApi.InventoryAdjustment();
      //expect(instance).to.be();
    });

    it('should have the property occurredAt (base name: "occurred_at")', function() {
      // uncomment below and update the code to test the property occurredAt
      //var instance = new SquareConnectApi.InventoryAdjustment();
      //expect(instance).to.be();
    });

    it('should have the property purchaseOrderId (base name: "purchase_order_id")', function() {
      // uncomment below and update the code to test the property purchaseOrderId
      //var instance = new SquareConnectApi.InventoryAdjustment();
      //expect(instance).to.be();
    });

    it('should have the property quantity (base name: "quantity")', function() {
      // uncomment below and update the code to test the property quantity
      //var instance = new SquareConnectApi.InventoryAdjustment();
      //expect(instance).to.be();
    });

    it('should have the property referenceId (base name: "reference_id")', function() {
      // uncomment below and update the code to test the property referenceId
      //var instance = new SquareConnectApi.InventoryAdjustment();
      //expect(instance).to.be();
    });

    it('should have the property refundId (base name: "refund_id")', function() {
      // uncomment below and update the code to test the property refundId
      //var instance = new SquareConnectApi.InventoryAdjustment();
      //expect(instance).to.be();
    });

    it('should have the property source (base name: "source")', function() {
      // uncomment below and update the code to test the property source
      //var instance = new SquareConnectApi.InventoryAdjustment();
      //expect(instance).to.be();
    });

    it('should have the property toState (base name: "to_state")', function() {
      // uncomment below and update the code to test the property toState
      //var instance = new SquareConnectApi.InventoryAdjustment();
      //expect(instance).to.be();
    });

    it('should have the property totalPriceMoney (base name: "total_price_money")', function() {
      // uncomment below and update the code to test the property totalPriceMoney
      //var instance = new SquareConnectApi.InventoryAdjustment();
      //expect(instance).to.be();
    });

    it('should have the property transactionId (base name: "transaction_id")', function() {
      // uncomment below and update the code to test the property transactionId
      //var instance = new SquareConnectApi.InventoryAdjustment();
      //expect(instance).to.be();
    });

  });

}));
