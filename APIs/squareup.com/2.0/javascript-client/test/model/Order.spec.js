/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SquareConnectApi);
  }
}(this, function(expect, SquareConnectApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SquareConnectApi.Order();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Order', function() {
    it('should create an instance of Order', function() {
      // uncomment below and update the code to test Order
      //var instance = new SquareConnectApi.Order();
      //expect(instance).to.be.a(SquareConnectApi.Order);
    });

    it('should have the property closedAt (base name: "closed_at")', function() {
      // uncomment below and update the code to test the property closedAt
      //var instance = new SquareConnectApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "created_at")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new SquareConnectApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property customerId (base name: "customer_id")', function() {
      // uncomment below and update the code to test the property customerId
      //var instance = new SquareConnectApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property discounts (base name: "discounts")', function() {
      // uncomment below and update the code to test the property discounts
      //var instance = new SquareConnectApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property fulfillments (base name: "fulfillments")', function() {
      // uncomment below and update the code to test the property fulfillments
      //var instance = new SquareConnectApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new SquareConnectApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property lineItems (base name: "line_items")', function() {
      // uncomment below and update the code to test the property lineItems
      //var instance = new SquareConnectApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property locationId (base name: "location_id")', function() {
      // uncomment below and update the code to test the property locationId
      //var instance = new SquareConnectApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property metadata (base name: "metadata")', function() {
      // uncomment below and update the code to test the property metadata
      //var instance = new SquareConnectApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property netAmounts (base name: "net_amounts")', function() {
      // uncomment below and update the code to test the property netAmounts
      //var instance = new SquareConnectApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property pricingOptions (base name: "pricing_options")', function() {
      // uncomment below and update the code to test the property pricingOptions
      //var instance = new SquareConnectApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property referenceId (base name: "reference_id")', function() {
      // uncomment below and update the code to test the property referenceId
      //var instance = new SquareConnectApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property refunds (base name: "refunds")', function() {
      // uncomment below and update the code to test the property refunds
      //var instance = new SquareConnectApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property returnAmounts (base name: "return_amounts")', function() {
      // uncomment below and update the code to test the property returnAmounts
      //var instance = new SquareConnectApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property returns (base name: "returns")', function() {
      // uncomment below and update the code to test the property returns
      //var instance = new SquareConnectApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property rewards (base name: "rewards")', function() {
      // uncomment below and update the code to test the property rewards
      //var instance = new SquareConnectApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property roundingAdjustment (base name: "rounding_adjustment")', function() {
      // uncomment below and update the code to test the property roundingAdjustment
      //var instance = new SquareConnectApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property serviceCharges (base name: "service_charges")', function() {
      // uncomment below and update the code to test the property serviceCharges
      //var instance = new SquareConnectApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property source (base name: "source")', function() {
      // uncomment below and update the code to test the property source
      //var instance = new SquareConnectApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new SquareConnectApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property taxes (base name: "taxes")', function() {
      // uncomment below and update the code to test the property taxes
      //var instance = new SquareConnectApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property tenders (base name: "tenders")', function() {
      // uncomment below and update the code to test the property tenders
      //var instance = new SquareConnectApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property totalDiscountMoney (base name: "total_discount_money")', function() {
      // uncomment below and update the code to test the property totalDiscountMoney
      //var instance = new SquareConnectApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property totalMoney (base name: "total_money")', function() {
      // uncomment below and update the code to test the property totalMoney
      //var instance = new SquareConnectApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property totalServiceChargeMoney (base name: "total_service_charge_money")', function() {
      // uncomment below and update the code to test the property totalServiceChargeMoney
      //var instance = new SquareConnectApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property totalTaxMoney (base name: "total_tax_money")', function() {
      // uncomment below and update the code to test the property totalTaxMoney
      //var instance = new SquareConnectApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property totalTipMoney (base name: "total_tip_money")', function() {
      // uncomment below and update the code to test the property totalTipMoney
      //var instance = new SquareConnectApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updated_at")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new SquareConnectApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property version (base name: "version")', function() {
      // uncomment below and update the code to test the property version
      //var instance = new SquareConnectApi.Order();
      //expect(instance).to.be();
    });

  });

}));
