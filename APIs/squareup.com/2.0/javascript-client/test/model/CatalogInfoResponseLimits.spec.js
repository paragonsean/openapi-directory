/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SquareConnectApi);
  }
}(this, function(expect, SquareConnectApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SquareConnectApi.CatalogInfoResponseLimits();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CatalogInfoResponseLimits', function() {
    it('should create an instance of CatalogInfoResponseLimits', function() {
      // uncomment below and update the code to test CatalogInfoResponseLimits
      //var instance = new SquareConnectApi.CatalogInfoResponseLimits();
      //expect(instance).to.be.a(SquareConnectApi.CatalogInfoResponseLimits);
    });

    it('should have the property batchDeleteMaxObjectIds (base name: "batch_delete_max_object_ids")', function() {
      // uncomment below and update the code to test the property batchDeleteMaxObjectIds
      //var instance = new SquareConnectApi.CatalogInfoResponseLimits();
      //expect(instance).to.be();
    });

    it('should have the property batchRetrieveMaxObjectIds (base name: "batch_retrieve_max_object_ids")', function() {
      // uncomment below and update the code to test the property batchRetrieveMaxObjectIds
      //var instance = new SquareConnectApi.CatalogInfoResponseLimits();
      //expect(instance).to.be();
    });

    it('should have the property batchUpsertMaxObjectsPerBatch (base name: "batch_upsert_max_objects_per_batch")', function() {
      // uncomment below and update the code to test the property batchUpsertMaxObjectsPerBatch
      //var instance = new SquareConnectApi.CatalogInfoResponseLimits();
      //expect(instance).to.be();
    });

    it('should have the property batchUpsertMaxTotalObjects (base name: "batch_upsert_max_total_objects")', function() {
      // uncomment below and update the code to test the property batchUpsertMaxTotalObjects
      //var instance = new SquareConnectApi.CatalogInfoResponseLimits();
      //expect(instance).to.be();
    });

    it('should have the property searchMaxPageLimit (base name: "search_max_page_limit")', function() {
      // uncomment below and update the code to test the property searchMaxPageLimit
      //var instance = new SquareConnectApi.CatalogInfoResponseLimits();
      //expect(instance).to.be();
    });

    it('should have the property updateItemModifierListsMaxItemIds (base name: "update_item_modifier_lists_max_item_ids")', function() {
      // uncomment below and update the code to test the property updateItemModifierListsMaxItemIds
      //var instance = new SquareConnectApi.CatalogInfoResponseLimits();
      //expect(instance).to.be();
    });

    it('should have the property updateItemModifierListsMaxModifierListsToDisable (base name: "update_item_modifier_lists_max_modifier_lists_to_disable")', function() {
      // uncomment below and update the code to test the property updateItemModifierListsMaxModifierListsToDisable
      //var instance = new SquareConnectApi.CatalogInfoResponseLimits();
      //expect(instance).to.be();
    });

    it('should have the property updateItemModifierListsMaxModifierListsToEnable (base name: "update_item_modifier_lists_max_modifier_lists_to_enable")', function() {
      // uncomment below and update the code to test the property updateItemModifierListsMaxModifierListsToEnable
      //var instance = new SquareConnectApi.CatalogInfoResponseLimits();
      //expect(instance).to.be();
    });

    it('should have the property updateItemTaxesMaxItemIds (base name: "update_item_taxes_max_item_ids")', function() {
      // uncomment below and update the code to test the property updateItemTaxesMaxItemIds
      //var instance = new SquareConnectApi.CatalogInfoResponseLimits();
      //expect(instance).to.be();
    });

    it('should have the property updateItemTaxesMaxTaxesToDisable (base name: "update_item_taxes_max_taxes_to_disable")', function() {
      // uncomment below and update the code to test the property updateItemTaxesMaxTaxesToDisable
      //var instance = new SquareConnectApi.CatalogInfoResponseLimits();
      //expect(instance).to.be();
    });

    it('should have the property updateItemTaxesMaxTaxesToEnable (base name: "update_item_taxes_max_taxes_to_enable")', function() {
      // uncomment below and update the code to test the property updateItemTaxesMaxTaxesToEnable
      //var instance = new SquareConnectApi.CatalogInfoResponseLimits();
      //expect(instance).to.be();
    });

  });

}));
