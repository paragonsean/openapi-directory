/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SquareConnectApi);
  }
}(this, function(expect, SquareConnectApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SquareConnectApi.Location();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Location', function() {
    it('should create an instance of Location', function() {
      // uncomment below and update the code to test Location
      //var instance = new SquareConnectApi.Location();
      //expect(instance).to.be.a(SquareConnectApi.Location);
    });

    it('should have the property address (base name: "address")', function() {
      // uncomment below and update the code to test the property address
      //var instance = new SquareConnectApi.Location();
      //expect(instance).to.be();
    });

    it('should have the property businessEmail (base name: "business_email")', function() {
      // uncomment below and update the code to test the property businessEmail
      //var instance = new SquareConnectApi.Location();
      //expect(instance).to.be();
    });

    it('should have the property businessHours (base name: "business_hours")', function() {
      // uncomment below and update the code to test the property businessHours
      //var instance = new SquareConnectApi.Location();
      //expect(instance).to.be();
    });

    it('should have the property businessName (base name: "business_name")', function() {
      // uncomment below and update the code to test the property businessName
      //var instance = new SquareConnectApi.Location();
      //expect(instance).to.be();
    });

    it('should have the property capabilities (base name: "capabilities")', function() {
      // uncomment below and update the code to test the property capabilities
      //var instance = new SquareConnectApi.Location();
      //expect(instance).to.be();
    });

    it('should have the property coordinates (base name: "coordinates")', function() {
      // uncomment below and update the code to test the property coordinates
      //var instance = new SquareConnectApi.Location();
      //expect(instance).to.be();
    });

    it('should have the property country (base name: "country")', function() {
      // uncomment below and update the code to test the property country
      //var instance = new SquareConnectApi.Location();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "created_at")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new SquareConnectApi.Location();
      //expect(instance).to.be();
    });

    it('should have the property currency (base name: "currency")', function() {
      // uncomment below and update the code to test the property currency
      //var instance = new SquareConnectApi.Location();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new SquareConnectApi.Location();
      //expect(instance).to.be();
    });

    it('should have the property facebookUrl (base name: "facebook_url")', function() {
      // uncomment below and update the code to test the property facebookUrl
      //var instance = new SquareConnectApi.Location();
      //expect(instance).to.be();
    });

    it('should have the property fullFormatLogoUrl (base name: "full_format_logo_url")', function() {
      // uncomment below and update the code to test the property fullFormatLogoUrl
      //var instance = new SquareConnectApi.Location();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new SquareConnectApi.Location();
      //expect(instance).to.be();
    });

    it('should have the property instagramUsername (base name: "instagram_username")', function() {
      // uncomment below and update the code to test the property instagramUsername
      //var instance = new SquareConnectApi.Location();
      //expect(instance).to.be();
    });

    it('should have the property languageCode (base name: "language_code")', function() {
      // uncomment below and update the code to test the property languageCode
      //var instance = new SquareConnectApi.Location();
      //expect(instance).to.be();
    });

    it('should have the property logoUrl (base name: "logo_url")', function() {
      // uncomment below and update the code to test the property logoUrl
      //var instance = new SquareConnectApi.Location();
      //expect(instance).to.be();
    });

    it('should have the property mcc (base name: "mcc")', function() {
      // uncomment below and update the code to test the property mcc
      //var instance = new SquareConnectApi.Location();
      //expect(instance).to.be();
    });

    it('should have the property merchantId (base name: "merchant_id")', function() {
      // uncomment below and update the code to test the property merchantId
      //var instance = new SquareConnectApi.Location();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new SquareConnectApi.Location();
      //expect(instance).to.be();
    });

    it('should have the property phoneNumber (base name: "phone_number")', function() {
      // uncomment below and update the code to test the property phoneNumber
      //var instance = new SquareConnectApi.Location();
      //expect(instance).to.be();
    });

    it('should have the property posBackgroundUrl (base name: "pos_background_url")', function() {
      // uncomment below and update the code to test the property posBackgroundUrl
      //var instance = new SquareConnectApi.Location();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new SquareConnectApi.Location();
      //expect(instance).to.be();
    });

    it('should have the property taxIds (base name: "tax_ids")', function() {
      // uncomment below and update the code to test the property taxIds
      //var instance = new SquareConnectApi.Location();
      //expect(instance).to.be();
    });

    it('should have the property timezone (base name: "timezone")', function() {
      // uncomment below and update the code to test the property timezone
      //var instance = new SquareConnectApi.Location();
      //expect(instance).to.be();
    });

    it('should have the property twitterUsername (base name: "twitter_username")', function() {
      // uncomment below and update the code to test the property twitterUsername
      //var instance = new SquareConnectApi.Location();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new SquareConnectApi.Location();
      //expect(instance).to.be();
    });

    it('should have the property websiteUrl (base name: "website_url")', function() {
      // uncomment below and update the code to test the property websiteUrl
      //var instance = new SquareConnectApi.Location();
      //expect(instance).to.be();
    });

  });

}));
