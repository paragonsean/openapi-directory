/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SquareConnectApi);
  }
}(this, function(expect, SquareConnectApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SquareConnectApi.BusinessAppointmentSettings();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BusinessAppointmentSettings', function() {
    it('should create an instance of BusinessAppointmentSettings', function() {
      // uncomment below and update the code to test BusinessAppointmentSettings
      //var instance = new SquareConnectApi.BusinessAppointmentSettings();
      //expect(instance).to.be.a(SquareConnectApi.BusinessAppointmentSettings);
    });

    it('should have the property alignmentTime (base name: "alignment_time")', function() {
      // uncomment below and update the code to test the property alignmentTime
      //var instance = new SquareConnectApi.BusinessAppointmentSettings();
      //expect(instance).to.be();
    });

    it('should have the property anyTeamMemberBookingEnabled (base name: "any_team_member_booking_enabled")', function() {
      // uncomment below and update the code to test the property anyTeamMemberBookingEnabled
      //var instance = new SquareConnectApi.BusinessAppointmentSettings();
      //expect(instance).to.be();
    });

    it('should have the property cancellationFeeMoney (base name: "cancellation_fee_money")', function() {
      // uncomment below and update the code to test the property cancellationFeeMoney
      //var instance = new SquareConnectApi.BusinessAppointmentSettings();
      //expect(instance).to.be();
    });

    it('should have the property cancellationPolicy (base name: "cancellation_policy")', function() {
      // uncomment below and update the code to test the property cancellationPolicy
      //var instance = new SquareConnectApi.BusinessAppointmentSettings();
      //expect(instance).to.be();
    });

    it('should have the property cancellationPolicyText (base name: "cancellation_policy_text")', function() {
      // uncomment below and update the code to test the property cancellationPolicyText
      //var instance = new SquareConnectApi.BusinessAppointmentSettings();
      //expect(instance).to.be();
    });

    it('should have the property cancellationWindowSeconds (base name: "cancellation_window_seconds")', function() {
      // uncomment below and update the code to test the property cancellationWindowSeconds
      //var instance = new SquareConnectApi.BusinessAppointmentSettings();
      //expect(instance).to.be();
    });

    it('should have the property locationTypes (base name: "location_types")', function() {
      // uncomment below and update the code to test the property locationTypes
      //var instance = new SquareConnectApi.BusinessAppointmentSettings();
      //expect(instance).to.be();
    });

    it('should have the property maxAppointmentsPerDayLimit (base name: "max_appointments_per_day_limit")', function() {
      // uncomment below and update the code to test the property maxAppointmentsPerDayLimit
      //var instance = new SquareConnectApi.BusinessAppointmentSettings();
      //expect(instance).to.be();
    });

    it('should have the property maxAppointmentsPerDayLimitType (base name: "max_appointments_per_day_limit_type")', function() {
      // uncomment below and update the code to test the property maxAppointmentsPerDayLimitType
      //var instance = new SquareConnectApi.BusinessAppointmentSettings();
      //expect(instance).to.be();
    });

    it('should have the property maxBookingLeadTimeSeconds (base name: "max_booking_lead_time_seconds")', function() {
      // uncomment below and update the code to test the property maxBookingLeadTimeSeconds
      //var instance = new SquareConnectApi.BusinessAppointmentSettings();
      //expect(instance).to.be();
    });

    it('should have the property minBookingLeadTimeSeconds (base name: "min_booking_lead_time_seconds")', function() {
      // uncomment below and update the code to test the property minBookingLeadTimeSeconds
      //var instance = new SquareConnectApi.BusinessAppointmentSettings();
      //expect(instance).to.be();
    });

    it('should have the property multipleServiceBookingEnabled (base name: "multiple_service_booking_enabled")', function() {
      // uncomment below and update the code to test the property multipleServiceBookingEnabled
      //var instance = new SquareConnectApi.BusinessAppointmentSettings();
      //expect(instance).to.be();
    });

    it('should have the property skipBookingFlowStaffSelection (base name: "skip_booking_flow_staff_selection")', function() {
      // uncomment below and update the code to test the property skipBookingFlowStaffSelection
      //var instance = new SquareConnectApi.BusinessAppointmentSettings();
      //expect(instance).to.be();
    });

  });

}));
