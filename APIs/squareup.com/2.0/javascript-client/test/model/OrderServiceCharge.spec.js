/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SquareConnectApi);
  }
}(this, function(expect, SquareConnectApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SquareConnectApi.OrderServiceCharge();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OrderServiceCharge', function() {
    it('should create an instance of OrderServiceCharge', function() {
      // uncomment below and update the code to test OrderServiceCharge
      //var instance = new SquareConnectApi.OrderServiceCharge();
      //expect(instance).to.be.a(SquareConnectApi.OrderServiceCharge);
    });

    it('should have the property amountMoney (base name: "amount_money")', function() {
      // uncomment below and update the code to test the property amountMoney
      //var instance = new SquareConnectApi.OrderServiceCharge();
      //expect(instance).to.be();
    });

    it('should have the property appliedMoney (base name: "applied_money")', function() {
      // uncomment below and update the code to test the property appliedMoney
      //var instance = new SquareConnectApi.OrderServiceCharge();
      //expect(instance).to.be();
    });

    it('should have the property appliedTaxes (base name: "applied_taxes")', function() {
      // uncomment below and update the code to test the property appliedTaxes
      //var instance = new SquareConnectApi.OrderServiceCharge();
      //expect(instance).to.be();
    });

    it('should have the property calculationPhase (base name: "calculation_phase")', function() {
      // uncomment below and update the code to test the property calculationPhase
      //var instance = new SquareConnectApi.OrderServiceCharge();
      //expect(instance).to.be();
    });

    it('should have the property catalogObjectId (base name: "catalog_object_id")', function() {
      // uncomment below and update the code to test the property catalogObjectId
      //var instance = new SquareConnectApi.OrderServiceCharge();
      //expect(instance).to.be();
    });

    it('should have the property catalogVersion (base name: "catalog_version")', function() {
      // uncomment below and update the code to test the property catalogVersion
      //var instance = new SquareConnectApi.OrderServiceCharge();
      //expect(instance).to.be();
    });

    it('should have the property metadata (base name: "metadata")', function() {
      // uncomment below and update the code to test the property metadata
      //var instance = new SquareConnectApi.OrderServiceCharge();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new SquareConnectApi.OrderServiceCharge();
      //expect(instance).to.be();
    });

    it('should have the property percentage (base name: "percentage")', function() {
      // uncomment below and update the code to test the property percentage
      //var instance = new SquareConnectApi.OrderServiceCharge();
      //expect(instance).to.be();
    });

    it('should have the property taxable (base name: "taxable")', function() {
      // uncomment below and update the code to test the property taxable
      //var instance = new SquareConnectApi.OrderServiceCharge();
      //expect(instance).to.be();
    });

    it('should have the property totalMoney (base name: "total_money")', function() {
      // uncomment below and update the code to test the property totalMoney
      //var instance = new SquareConnectApi.OrderServiceCharge();
      //expect(instance).to.be();
    });

    it('should have the property totalTaxMoney (base name: "total_tax_money")', function() {
      // uncomment below and update the code to test the property totalTaxMoney
      //var instance = new SquareConnectApi.OrderServiceCharge();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new SquareConnectApi.OrderServiceCharge();
      //expect(instance).to.be();
    });

    it('should have the property uid (base name: "uid")', function() {
      // uncomment below and update the code to test the property uid
      //var instance = new SquareConnectApi.OrderServiceCharge();
      //expect(instance).to.be();
    });

  });

}));
