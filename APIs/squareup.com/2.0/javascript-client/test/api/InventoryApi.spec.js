/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SquareConnectApi);
  }
}(this, function(expect, SquareConnectApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SquareConnectApi.InventoryApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('InventoryApi', function() {
    describe('batchChangeInventory', function() {
      it('should call batchChangeInventory successfully', function(done) {
        //uncomment below and update the code to test batchChangeInventory
        //instance.batchChangeInventory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('batchRetrieveInventoryChanges', function() {
      it('should call batchRetrieveInventoryChanges successfully', function(done) {
        //uncomment below and update the code to test batchRetrieveInventoryChanges
        //instance.batchRetrieveInventoryChanges(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('batchRetrieveInventoryCounts', function() {
      it('should call batchRetrieveInventoryCounts successfully', function(done) {
        //uncomment below and update the code to test batchRetrieveInventoryCounts
        //instance.batchRetrieveInventoryCounts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deprecatedBatchChangeInventory', function() {
      it('should call deprecatedBatchChangeInventory successfully', function(done) {
        //uncomment below and update the code to test deprecatedBatchChangeInventory
        //instance.deprecatedBatchChangeInventory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deprecatedBatchRetrieveInventoryChanges', function() {
      it('should call deprecatedBatchRetrieveInventoryChanges successfully', function(done) {
        //uncomment below and update the code to test deprecatedBatchRetrieveInventoryChanges
        //instance.deprecatedBatchRetrieveInventoryChanges(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deprecatedBatchRetrieveInventoryCounts', function() {
      it('should call deprecatedBatchRetrieveInventoryCounts successfully', function(done) {
        //uncomment below and update the code to test deprecatedBatchRetrieveInventoryCounts
        //instance.deprecatedBatchRetrieveInventoryCounts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deprecatedRetrieveInventoryAdjustment', function() {
      it('should call deprecatedRetrieveInventoryAdjustment successfully', function(done) {
        //uncomment below and update the code to test deprecatedRetrieveInventoryAdjustment
        //instance.deprecatedRetrieveInventoryAdjustment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deprecatedRetrieveInventoryPhysicalCount', function() {
      it('should call deprecatedRetrieveInventoryPhysicalCount successfully', function(done) {
        //uncomment below and update the code to test deprecatedRetrieveInventoryPhysicalCount
        //instance.deprecatedRetrieveInventoryPhysicalCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retrieveInventoryAdjustment', function() {
      it('should call retrieveInventoryAdjustment successfully', function(done) {
        //uncomment below and update the code to test retrieveInventoryAdjustment
        //instance.retrieveInventoryAdjustment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retrieveInventoryChanges', function() {
      it('should call retrieveInventoryChanges successfully', function(done) {
        //uncomment below and update the code to test retrieveInventoryChanges
        //instance.retrieveInventoryChanges(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retrieveInventoryCount', function() {
      it('should call retrieveInventoryCount successfully', function(done) {
        //uncomment below and update the code to test retrieveInventoryCount
        //instance.retrieveInventoryCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retrieveInventoryPhysicalCount', function() {
      it('should call retrieveInventoryPhysicalCount successfully', function(done) {
        //uncomment below and update the code to test retrieveInventoryPhysicalCount
        //instance.retrieveInventoryPhysicalCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retrieveInventoryTransfer', function() {
      it('should call retrieveInventoryTransfer successfully', function(done) {
        //uncomment below and update the code to test retrieveInventoryTransfer
        //instance.retrieveInventoryTransfer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
