/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SquareConnectApi);
  }
}(this, function(expect, SquareConnectApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SquareConnectApi.LoyaltyApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('LoyaltyApi', function() {
    describe('accumulateLoyaltyPoints', function() {
      it('should call accumulateLoyaltyPoints successfully', function(done) {
        //uncomment below and update the code to test accumulateLoyaltyPoints
        //instance.accumulateLoyaltyPoints(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adjustLoyaltyPoints', function() {
      it('should call adjustLoyaltyPoints successfully', function(done) {
        //uncomment below and update the code to test adjustLoyaltyPoints
        //instance.adjustLoyaltyPoints(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('calculateLoyaltyPoints', function() {
      it('should call calculateLoyaltyPoints successfully', function(done) {
        //uncomment below and update the code to test calculateLoyaltyPoints
        //instance.calculateLoyaltyPoints(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createLoyaltyAccount', function() {
      it('should call createLoyaltyAccount successfully', function(done) {
        //uncomment below and update the code to test createLoyaltyAccount
        //instance.createLoyaltyAccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createLoyaltyReward', function() {
      it('should call createLoyaltyReward successfully', function(done) {
        //uncomment below and update the code to test createLoyaltyReward
        //instance.createLoyaltyReward(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteLoyaltyReward', function() {
      it('should call deleteLoyaltyReward successfully', function(done) {
        //uncomment below and update the code to test deleteLoyaltyReward
        //instance.deleteLoyaltyReward(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listLoyaltyPrograms', function() {
      it('should call listLoyaltyPrograms successfully', function(done) {
        //uncomment below and update the code to test listLoyaltyPrograms
        //instance.listLoyaltyPrograms(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('redeemLoyaltyReward', function() {
      it('should call redeemLoyaltyReward successfully', function(done) {
        //uncomment below and update the code to test redeemLoyaltyReward
        //instance.redeemLoyaltyReward(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retrieveLoyaltyAccount', function() {
      it('should call retrieveLoyaltyAccount successfully', function(done) {
        //uncomment below and update the code to test retrieveLoyaltyAccount
        //instance.retrieveLoyaltyAccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retrieveLoyaltyProgram', function() {
      it('should call retrieveLoyaltyProgram successfully', function(done) {
        //uncomment below and update the code to test retrieveLoyaltyProgram
        //instance.retrieveLoyaltyProgram(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retrieveLoyaltyReward', function() {
      it('should call retrieveLoyaltyReward successfully', function(done) {
        //uncomment below and update the code to test retrieveLoyaltyReward
        //instance.retrieveLoyaltyReward(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchLoyaltyAccounts', function() {
      it('should call searchLoyaltyAccounts successfully', function(done) {
        //uncomment below and update the code to test searchLoyaltyAccounts
        //instance.searchLoyaltyAccounts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchLoyaltyEvents', function() {
      it('should call searchLoyaltyEvents successfully', function(done) {
        //uncomment below and update the code to test searchLoyaltyEvents
        //instance.searchLoyaltyEvents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchLoyaltyRewards', function() {
      it('should call searchLoyaltyRewards successfully', function(done) {
        //uncomment below and update the code to test searchLoyaltyRewards
        //instance.searchLoyaltyRewards(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
