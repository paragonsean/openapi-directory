/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SquareConnectApi);
  }
}(this, function(expect, SquareConnectApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SquareConnectApi.CatalogApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CatalogApi', function() {
    describe('batchDeleteCatalogObjects', function() {
      it('should call batchDeleteCatalogObjects successfully', function(done) {
        //uncomment below and update the code to test batchDeleteCatalogObjects
        //instance.batchDeleteCatalogObjects(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('batchRetrieveCatalogObjects', function() {
      it('should call batchRetrieveCatalogObjects successfully', function(done) {
        //uncomment below and update the code to test batchRetrieveCatalogObjects
        //instance.batchRetrieveCatalogObjects(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('batchUpsertCatalogObjects', function() {
      it('should call batchUpsertCatalogObjects successfully', function(done) {
        //uncomment below and update the code to test batchUpsertCatalogObjects
        //instance.batchUpsertCatalogObjects(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('catalogInfo', function() {
      it('should call catalogInfo successfully', function(done) {
        //uncomment below and update the code to test catalogInfo
        //instance.catalogInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCatalogObject', function() {
      it('should call deleteCatalogObject successfully', function(done) {
        //uncomment below and update the code to test deleteCatalogObject
        //instance.deleteCatalogObject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listCatalog', function() {
      it('should call listCatalog successfully', function(done) {
        //uncomment below and update the code to test listCatalog
        //instance.listCatalog(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retrieveCatalogObject', function() {
      it('should call retrieveCatalogObject successfully', function(done) {
        //uncomment below and update the code to test retrieveCatalogObject
        //instance.retrieveCatalogObject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchCatalogItems', function() {
      it('should call searchCatalogItems successfully', function(done) {
        //uncomment below and update the code to test searchCatalogItems
        //instance.searchCatalogItems(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchCatalogObjects', function() {
      it('should call searchCatalogObjects successfully', function(done) {
        //uncomment below and update the code to test searchCatalogObjects
        //instance.searchCatalogObjects(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateItemModifierLists', function() {
      it('should call updateItemModifierLists successfully', function(done) {
        //uncomment below and update the code to test updateItemModifierLists
        //instance.updateItemModifierLists(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateItemTaxes', function() {
      it('should call updateItemTaxes successfully', function(done) {
        //uncomment below and update the code to test updateItemTaxes
        //instance.updateItemTaxes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('upsertCatalogObject', function() {
      it('should call upsertCatalogObject successfully', function(done) {
        //uncomment below and update the code to test upsertCatalogObject
        //instance.upsertCatalogObject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
