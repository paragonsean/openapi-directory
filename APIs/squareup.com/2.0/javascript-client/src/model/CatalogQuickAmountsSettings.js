/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CatalogQuickAmount from './CatalogQuickAmount';

/**
 * The CatalogQuickAmountsSettings model module.
 * @module model/CatalogQuickAmountsSettings
 * @version 2.0
 */
class CatalogQuickAmountsSettings {
    /**
     * Constructs a new <code>CatalogQuickAmountsSettings</code>.
     * A parent Catalog Object model represents a set of Quick Amounts and the settings control the amounts.
     * @alias module:model/CatalogQuickAmountsSettings
     * @param option {String} Represents the option seller currently uses on Quick Amounts.
     */
    constructor(option) { 
        
        CatalogQuickAmountsSettings.initialize(this, option);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, option) { 
        obj['option'] = option;
    }

    /**
     * Constructs a <code>CatalogQuickAmountsSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CatalogQuickAmountsSettings} obj Optional instance to populate.
     * @return {module:model/CatalogQuickAmountsSettings} The populated <code>CatalogQuickAmountsSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CatalogQuickAmountsSettings();

            if (data.hasOwnProperty('amounts')) {
                obj['amounts'] = ApiClient.convertToType(data['amounts'], [CatalogQuickAmount]);
            }
            if (data.hasOwnProperty('eligible_for_auto_amounts')) {
                obj['eligible_for_auto_amounts'] = ApiClient.convertToType(data['eligible_for_auto_amounts'], 'Boolean');
            }
            if (data.hasOwnProperty('option')) {
                obj['option'] = ApiClient.convertToType(data['option'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CatalogQuickAmountsSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CatalogQuickAmountsSettings</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CatalogQuickAmountsSettings.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['amounts']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['amounts'])) {
                throw new Error("Expected the field `amounts` to be an array in the JSON data but got " + data['amounts']);
            }
            // validate the optional field `amounts` (array)
            for (const item of data['amounts']) {
                CatalogQuickAmount.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['option'] && !(typeof data['option'] === 'string' || data['option'] instanceof String)) {
            throw new Error("Expected the field `option` to be a primitive type in the JSON string but got " + data['option']);
        }

        return true;
    }


}

CatalogQuickAmountsSettings.RequiredProperties = ["option"];

/**
 * Represents a set of Quick Amounts at this location.
 * @member {Array.<module:model/CatalogQuickAmount>} amounts
 */
CatalogQuickAmountsSettings.prototype['amounts'] = undefined;

/**
 * Represents location's eligibility for auto amounts The boolean should be consistent with whether there are AUTO amounts in the `amounts`.
 * @member {Boolean} eligible_for_auto_amounts
 */
CatalogQuickAmountsSettings.prototype['eligible_for_auto_amounts'] = undefined;

/**
 * Represents the option seller currently uses on Quick Amounts.
 * @member {String} option
 */
CatalogQuickAmountsSettings.prototype['option'] = undefined;






export default CatalogQuickAmountsSettings;

