/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SourceApplication from './SourceApplication';

/**
 * The InventoryTransfer model module.
 * @module model/InventoryTransfer
 * @version 2.0
 */
class InventoryTransfer {
    /**
     * Constructs a new <code>InventoryTransfer</code>.
     * Represents the transfer of a quantity of product inventory at a particular time from one location to another.
     * @alias module:model/InventoryTransfer
     */
    constructor() { 
        
        InventoryTransfer.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InventoryTransfer</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InventoryTransfer} obj Optional instance to populate.
     * @return {module:model/InventoryTransfer} The populated <code>InventoryTransfer</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InventoryTransfer();

            if (data.hasOwnProperty('catalog_object_id')) {
                obj['catalog_object_id'] = ApiClient.convertToType(data['catalog_object_id'], 'String');
            }
            if (data.hasOwnProperty('catalog_object_type')) {
                obj['catalog_object_type'] = ApiClient.convertToType(data['catalog_object_type'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('employee_id')) {
                obj['employee_id'] = ApiClient.convertToType(data['employee_id'], 'String');
            }
            if (data.hasOwnProperty('from_location_id')) {
                obj['from_location_id'] = ApiClient.convertToType(data['from_location_id'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('occurred_at')) {
                obj['occurred_at'] = ApiClient.convertToType(data['occurred_at'], 'String');
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'String');
            }
            if (data.hasOwnProperty('reference_id')) {
                obj['reference_id'] = ApiClient.convertToType(data['reference_id'], 'String');
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = SourceApplication.constructFromObject(data['source']);
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('to_location_id')) {
                obj['to_location_id'] = ApiClient.convertToType(data['to_location_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InventoryTransfer</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InventoryTransfer</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['catalog_object_id'] && !(typeof data['catalog_object_id'] === 'string' || data['catalog_object_id'] instanceof String)) {
            throw new Error("Expected the field `catalog_object_id` to be a primitive type in the JSON string but got " + data['catalog_object_id']);
        }
        // ensure the json data is a string
        if (data['catalog_object_type'] && !(typeof data['catalog_object_type'] === 'string' || data['catalog_object_type'] instanceof String)) {
            throw new Error("Expected the field `catalog_object_type` to be a primitive type in the JSON string but got " + data['catalog_object_type']);
        }
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        // ensure the json data is a string
        if (data['employee_id'] && !(typeof data['employee_id'] === 'string' || data['employee_id'] instanceof String)) {
            throw new Error("Expected the field `employee_id` to be a primitive type in the JSON string but got " + data['employee_id']);
        }
        // ensure the json data is a string
        if (data['from_location_id'] && !(typeof data['from_location_id'] === 'string' || data['from_location_id'] instanceof String)) {
            throw new Error("Expected the field `from_location_id` to be a primitive type in the JSON string but got " + data['from_location_id']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['occurred_at'] && !(typeof data['occurred_at'] === 'string' || data['occurred_at'] instanceof String)) {
            throw new Error("Expected the field `occurred_at` to be a primitive type in the JSON string but got " + data['occurred_at']);
        }
        // ensure the json data is a string
        if (data['quantity'] && !(typeof data['quantity'] === 'string' || data['quantity'] instanceof String)) {
            throw new Error("Expected the field `quantity` to be a primitive type in the JSON string but got " + data['quantity']);
        }
        // ensure the json data is a string
        if (data['reference_id'] && !(typeof data['reference_id'] === 'string' || data['reference_id'] instanceof String)) {
            throw new Error("Expected the field `reference_id` to be a primitive type in the JSON string but got " + data['reference_id']);
        }
        // validate the optional field `source`
        if (data['source']) { // data not null
          SourceApplication.validateJSON(data['source']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['to_location_id'] && !(typeof data['to_location_id'] === 'string' || data['to_location_id'] instanceof String)) {
            throw new Error("Expected the field `to_location_id` to be a primitive type in the JSON string but got " + data['to_location_id']);
        }

        return true;
    }


}



/**
 * The Square-generated ID of the [CatalogObject](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject) being tracked.
 * @member {String} catalog_object_id
 */
InventoryTransfer.prototype['catalog_object_id'] = undefined;

/**
 * The [type](https://developer.squareup.com/reference/square_2021-08-18/enums/CatalogObjectType) of the [CatalogObject](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject) being tracked.Tracking is only supported for the `ITEM_VARIATION` type.
 * @member {String} catalog_object_type
 */
InventoryTransfer.prototype['catalog_object_type'] = undefined;

/**
 * An RFC 3339-formatted timestamp that indicates when Square received the transfer request.
 * @member {String} created_at
 */
InventoryTransfer.prototype['created_at'] = undefined;

/**
 * The Square-generated ID of the [Employee](https://developer.squareup.com/reference/square_2021-08-18/objects/Employee) responsible for the inventory transfer.
 * @member {String} employee_id
 */
InventoryTransfer.prototype['employee_id'] = undefined;

/**
 * The Square-generated ID of the [Location](https://developer.squareup.com/reference/square_2021-08-18/objects/Location) where the related quantity of items was tracked before the transfer.
 * @member {String} from_location_id
 */
InventoryTransfer.prototype['from_location_id'] = undefined;

/**
 * A unique ID generated by Square for the `InventoryTransfer`.
 * @member {String} id
 */
InventoryTransfer.prototype['id'] = undefined;

/**
 * A client-generated RFC 3339-formatted timestamp that indicates when the transfer took place. For write actions, the `occurred_at` timestamp cannot be older than 24 hours or in the future relative to the time of the request.
 * @member {String} occurred_at
 */
InventoryTransfer.prototype['occurred_at'] = undefined;

/**
 * The number of items affected by the transfer as a decimal string. Can support up to 5 digits after the decimal point.
 * @member {String} quantity
 */
InventoryTransfer.prototype['quantity'] = undefined;

/**
 * An optional ID provided by the application to tie the `InventoryTransfer` to an external system.
 * @member {String} reference_id
 */
InventoryTransfer.prototype['reference_id'] = undefined;

/**
 * @member {module:model/SourceApplication} source
 */
InventoryTransfer.prototype['source'] = undefined;

/**
 * The [inventory state](https://developer.squareup.com/reference/square_2021-08-18/enums/InventoryState) for the quantity of items being transferred.
 * @member {String} state
 */
InventoryTransfer.prototype['state'] = undefined;

/**
 * The Square-generated ID of the [Location](https://developer.squareup.com/reference/square_2021-08-18/objects/Location) where the related quantity of items was tracked after the transfer.
 * @member {String} to_location_id
 */
InventoryTransfer.prototype['to_location_id'] = undefined;






export default InventoryTransfer;

