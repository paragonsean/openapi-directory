/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ListPaymentRefundsRequest model module.
 * @module model/ListPaymentRefundsRequest
 * @version 2.0
 */
class ListPaymentRefundsRequest {
    /**
     * Constructs a new <code>ListPaymentRefundsRequest</code>.
     * Describes a request to list refunds using  [ListPaymentRefunds](https://developer.squareup.com/reference/square_2021-08-18/refunds-api/list-payment-refunds).  The maximum results per page is 100.
     * @alias module:model/ListPaymentRefundsRequest
     */
    constructor() { 
        
        ListPaymentRefundsRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ListPaymentRefundsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListPaymentRefundsRequest} obj Optional instance to populate.
     * @return {module:model/ListPaymentRefundsRequest} The populated <code>ListPaymentRefundsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListPaymentRefundsRequest();

            if (data.hasOwnProperty('begin_time')) {
                obj['begin_time'] = ApiClient.convertToType(data['begin_time'], 'String');
            }
            if (data.hasOwnProperty('cursor')) {
                obj['cursor'] = ApiClient.convertToType(data['cursor'], 'String');
            }
            if (data.hasOwnProperty('end_time')) {
                obj['end_time'] = ApiClient.convertToType(data['end_time'], 'String');
            }
            if (data.hasOwnProperty('limit')) {
                obj['limit'] = ApiClient.convertToType(data['limit'], 'Number');
            }
            if (data.hasOwnProperty('location_id')) {
                obj['location_id'] = ApiClient.convertToType(data['location_id'], 'String');
            }
            if (data.hasOwnProperty('sort_order')) {
                obj['sort_order'] = ApiClient.convertToType(data['sort_order'], 'String');
            }
            if (data.hasOwnProperty('source_type')) {
                obj['source_type'] = ApiClient.convertToType(data['source_type'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListPaymentRefundsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListPaymentRefundsRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['begin_time'] && !(typeof data['begin_time'] === 'string' || data['begin_time'] instanceof String)) {
            throw new Error("Expected the field `begin_time` to be a primitive type in the JSON string but got " + data['begin_time']);
        }
        // ensure the json data is a string
        if (data['cursor'] && !(typeof data['cursor'] === 'string' || data['cursor'] instanceof String)) {
            throw new Error("Expected the field `cursor` to be a primitive type in the JSON string but got " + data['cursor']);
        }
        // ensure the json data is a string
        if (data['end_time'] && !(typeof data['end_time'] === 'string' || data['end_time'] instanceof String)) {
            throw new Error("Expected the field `end_time` to be a primitive type in the JSON string but got " + data['end_time']);
        }
        // ensure the json data is a string
        if (data['location_id'] && !(typeof data['location_id'] === 'string' || data['location_id'] instanceof String)) {
            throw new Error("Expected the field `location_id` to be a primitive type in the JSON string but got " + data['location_id']);
        }
        // ensure the json data is a string
        if (data['sort_order'] && !(typeof data['sort_order'] === 'string' || data['sort_order'] instanceof String)) {
            throw new Error("Expected the field `sort_order` to be a primitive type in the JSON string but got " + data['sort_order']);
        }
        // ensure the json data is a string
        if (data['source_type'] && !(typeof data['source_type'] === 'string' || data['source_type'] instanceof String)) {
            throw new Error("Expected the field `source_type` to be a primitive type in the JSON string but got " + data['source_type']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * The timestamp for the beginning of the requested reporting period, in RFC 3339 format.  Default: The current time minus one year.
 * @member {String} begin_time
 */
ListPaymentRefundsRequest.prototype['begin_time'] = undefined;

/**
 * A pagination cursor returned by a previous call to this endpoint. Provide this cursor to retrieve the next set of results for the original query.  For more information, see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination).
 * @member {String} cursor
 */
ListPaymentRefundsRequest.prototype['cursor'] = undefined;

/**
 * The timestamp for the end of the requested reporting period, in RFC 3339 format.  Default: The current time.
 * @member {String} end_time
 */
ListPaymentRefundsRequest.prototype['end_time'] = undefined;

/**
 * The maximum number of results to be returned in a single page.  It is possible to receive fewer results than the specified limit on a given page.  If the supplied value is greater than 100, no more than 100 results are returned.  Default: 100
 * @member {Number} limit
 */
ListPaymentRefundsRequest.prototype['limit'] = undefined;

/**
 * Limit results to the location supplied. By default, results are returned for all locations associated with the seller.
 * @member {String} location_id
 */
ListPaymentRefundsRequest.prototype['location_id'] = undefined;

/**
 * The order in which results are listed: - `ASC` - Oldest to newest. - `DESC` - Newest to oldest (default).
 * @member {String} sort_order
 */
ListPaymentRefundsRequest.prototype['sort_order'] = undefined;

/**
 * If provided, only refunds with the given source type are returned. - `CARD` - List refunds only for payments where `CARD` was specified as the payment source.  Default: If omitted, refunds are returned regardless of the source type.
 * @member {String} source_type
 */
ListPaymentRefundsRequest.prototype['source_type'] = undefined;

/**
 * If provided, only refunds with the given status are returned. For a list of refund status values, see [PaymentRefund](https://developer.squareup.com/reference/square_2021-08-18/objects/PaymentRefund).  Default: If omitted, refunds are returned regardless of their status.
 * @member {String} status
 */
ListPaymentRefundsRequest.prototype['status'] = undefined;






export default ListPaymentRefundsRequest;

