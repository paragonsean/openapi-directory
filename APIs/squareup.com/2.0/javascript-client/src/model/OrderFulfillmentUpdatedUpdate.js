/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OrderFulfillmentUpdatedUpdate model module.
 * @module model/OrderFulfillmentUpdatedUpdate
 * @version 2.0
 */
class OrderFulfillmentUpdatedUpdate {
    /**
     * Constructs a new <code>OrderFulfillmentUpdatedUpdate</code>.
     * Information about fulfillment updates.
     * @alias module:model/OrderFulfillmentUpdatedUpdate
     */
    constructor() { 
        
        OrderFulfillmentUpdatedUpdate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrderFulfillmentUpdatedUpdate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrderFulfillmentUpdatedUpdate} obj Optional instance to populate.
     * @return {module:model/OrderFulfillmentUpdatedUpdate} The populated <code>OrderFulfillmentUpdatedUpdate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrderFulfillmentUpdatedUpdate();

            if (data.hasOwnProperty('fulfillment_uid')) {
                obj['fulfillment_uid'] = ApiClient.convertToType(data['fulfillment_uid'], 'String');
            }
            if (data.hasOwnProperty('new_state')) {
                obj['new_state'] = ApiClient.convertToType(data['new_state'], 'String');
            }
            if (data.hasOwnProperty('old_state')) {
                obj['old_state'] = ApiClient.convertToType(data['old_state'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrderFulfillmentUpdatedUpdate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrderFulfillmentUpdatedUpdate</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['fulfillment_uid'] && !(typeof data['fulfillment_uid'] === 'string' || data['fulfillment_uid'] instanceof String)) {
            throw new Error("Expected the field `fulfillment_uid` to be a primitive type in the JSON string but got " + data['fulfillment_uid']);
        }
        // ensure the json data is a string
        if (data['new_state'] && !(typeof data['new_state'] === 'string' || data['new_state'] instanceof String)) {
            throw new Error("Expected the field `new_state` to be a primitive type in the JSON string but got " + data['new_state']);
        }
        // ensure the json data is a string
        if (data['old_state'] && !(typeof data['old_state'] === 'string' || data['old_state'] instanceof String)) {
            throw new Error("Expected the field `old_state` to be a primitive type in the JSON string but got " + data['old_state']);
        }

        return true;
    }


}



/**
 * A unique ID that identifies the fulfillment only within this order.
 * @member {String} fulfillment_uid
 */
OrderFulfillmentUpdatedUpdate.prototype['fulfillment_uid'] = undefined;

/**
 * The state of the fulfillment after the change. The state might be equal to `old_state` if a non-state field was changed on the fulfillment (such as the tracking number).
 * @member {String} new_state
 */
OrderFulfillmentUpdatedUpdate.prototype['new_state'] = undefined;

/**
 * The state of the fulfillment before the change. The state is not populated if the fulfillment is created with this new `Order` version.
 * @member {String} old_state
 */
OrderFulfillmentUpdatedUpdate.prototype['old_state'] = undefined;






export default OrderFulfillmentUpdatedUpdate;

