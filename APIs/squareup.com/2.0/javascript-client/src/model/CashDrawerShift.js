/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CashDrawerDevice from './CashDrawerDevice';
import Money from './Money';

/**
 * The CashDrawerShift model module.
 * @module model/CashDrawerShift
 * @version 2.0
 */
class CashDrawerShift {
    /**
     * Constructs a new <code>CashDrawerShift</code>.
     * This model gives the details of a cash drawer shift. The cash_payment_money, cash_refund_money, cash_paid_in_money, and cash_paid_out_money fields are all computed by summing their respective event types.
     * @alias module:model/CashDrawerShift
     */
    constructor() { 
        
        CashDrawerShift.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CashDrawerShift</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CashDrawerShift} obj Optional instance to populate.
     * @return {module:model/CashDrawerShift} The populated <code>CashDrawerShift</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CashDrawerShift();

            if (data.hasOwnProperty('cash_paid_in_money')) {
                obj['cash_paid_in_money'] = Money.constructFromObject(data['cash_paid_in_money']);
            }
            if (data.hasOwnProperty('cash_paid_out_money')) {
                obj['cash_paid_out_money'] = Money.constructFromObject(data['cash_paid_out_money']);
            }
            if (data.hasOwnProperty('cash_payment_money')) {
                obj['cash_payment_money'] = Money.constructFromObject(data['cash_payment_money']);
            }
            if (data.hasOwnProperty('cash_refunds_money')) {
                obj['cash_refunds_money'] = Money.constructFromObject(data['cash_refunds_money']);
            }
            if (data.hasOwnProperty('closed_at')) {
                obj['closed_at'] = ApiClient.convertToType(data['closed_at'], 'String');
            }
            if (data.hasOwnProperty('closed_cash_money')) {
                obj['closed_cash_money'] = Money.constructFromObject(data['closed_cash_money']);
            }
            if (data.hasOwnProperty('closing_employee_id')) {
                obj['closing_employee_id'] = ApiClient.convertToType(data['closing_employee_id'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('device')) {
                obj['device'] = CashDrawerDevice.constructFromObject(data['device']);
            }
            if (data.hasOwnProperty('employee_ids')) {
                obj['employee_ids'] = ApiClient.convertToType(data['employee_ids'], ['String']);
            }
            if (data.hasOwnProperty('ended_at')) {
                obj['ended_at'] = ApiClient.convertToType(data['ended_at'], 'String');
            }
            if (data.hasOwnProperty('ending_employee_id')) {
                obj['ending_employee_id'] = ApiClient.convertToType(data['ending_employee_id'], 'String');
            }
            if (data.hasOwnProperty('expected_cash_money')) {
                obj['expected_cash_money'] = Money.constructFromObject(data['expected_cash_money']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('opened_at')) {
                obj['opened_at'] = ApiClient.convertToType(data['opened_at'], 'String');
            }
            if (data.hasOwnProperty('opened_cash_money')) {
                obj['opened_cash_money'] = Money.constructFromObject(data['opened_cash_money']);
            }
            if (data.hasOwnProperty('opening_employee_id')) {
                obj['opening_employee_id'] = ApiClient.convertToType(data['opening_employee_id'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CashDrawerShift</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CashDrawerShift</code>.
     */
    static validateJSON(data) {
        // validate the optional field `cash_paid_in_money`
        if (data['cash_paid_in_money']) { // data not null
          Money.validateJSON(data['cash_paid_in_money']);
        }
        // validate the optional field `cash_paid_out_money`
        if (data['cash_paid_out_money']) { // data not null
          Money.validateJSON(data['cash_paid_out_money']);
        }
        // validate the optional field `cash_payment_money`
        if (data['cash_payment_money']) { // data not null
          Money.validateJSON(data['cash_payment_money']);
        }
        // validate the optional field `cash_refunds_money`
        if (data['cash_refunds_money']) { // data not null
          Money.validateJSON(data['cash_refunds_money']);
        }
        // ensure the json data is a string
        if (data['closed_at'] && !(typeof data['closed_at'] === 'string' || data['closed_at'] instanceof String)) {
            throw new Error("Expected the field `closed_at` to be a primitive type in the JSON string but got " + data['closed_at']);
        }
        // validate the optional field `closed_cash_money`
        if (data['closed_cash_money']) { // data not null
          Money.validateJSON(data['closed_cash_money']);
        }
        // ensure the json data is a string
        if (data['closing_employee_id'] && !(typeof data['closing_employee_id'] === 'string' || data['closing_employee_id'] instanceof String)) {
            throw new Error("Expected the field `closing_employee_id` to be a primitive type in the JSON string but got " + data['closing_employee_id']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // validate the optional field `device`
        if (data['device']) { // data not null
          CashDrawerDevice.validateJSON(data['device']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['employee_ids'])) {
            throw new Error("Expected the field `employee_ids` to be an array in the JSON data but got " + data['employee_ids']);
        }
        // ensure the json data is a string
        if (data['ended_at'] && !(typeof data['ended_at'] === 'string' || data['ended_at'] instanceof String)) {
            throw new Error("Expected the field `ended_at` to be a primitive type in the JSON string but got " + data['ended_at']);
        }
        // ensure the json data is a string
        if (data['ending_employee_id'] && !(typeof data['ending_employee_id'] === 'string' || data['ending_employee_id'] instanceof String)) {
            throw new Error("Expected the field `ending_employee_id` to be a primitive type in the JSON string but got " + data['ending_employee_id']);
        }
        // validate the optional field `expected_cash_money`
        if (data['expected_cash_money']) { // data not null
          Money.validateJSON(data['expected_cash_money']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['opened_at'] && !(typeof data['opened_at'] === 'string' || data['opened_at'] instanceof String)) {
            throw new Error("Expected the field `opened_at` to be a primitive type in the JSON string but got " + data['opened_at']);
        }
        // validate the optional field `opened_cash_money`
        if (data['opened_cash_money']) { // data not null
          Money.validateJSON(data['opened_cash_money']);
        }
        // ensure the json data is a string
        if (data['opening_employee_id'] && !(typeof data['opening_employee_id'] === 'string' || data['opening_employee_id'] instanceof String)) {
            throw new Error("Expected the field `opening_employee_id` to be a primitive type in the JSON string but got " + data['opening_employee_id']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }

        return true;
    }


}



/**
 * @member {module:model/Money} cash_paid_in_money
 */
CashDrawerShift.prototype['cash_paid_in_money'] = undefined;

/**
 * @member {module:model/Money} cash_paid_out_money
 */
CashDrawerShift.prototype['cash_paid_out_money'] = undefined;

/**
 * @member {module:model/Money} cash_payment_money
 */
CashDrawerShift.prototype['cash_payment_money'] = undefined;

/**
 * @member {module:model/Money} cash_refunds_money
 */
CashDrawerShift.prototype['cash_refunds_money'] = undefined;

/**
 * The time when the shift was closed, in ISO 8601 format.
 * @member {String} closed_at
 */
CashDrawerShift.prototype['closed_at'] = undefined;

/**
 * @member {module:model/Money} closed_cash_money
 */
CashDrawerShift.prototype['closed_cash_money'] = undefined;

/**
 * The ID of the employee that closed the cash drawer shift by auditing the cash drawer contents.
 * @member {String} closing_employee_id
 */
CashDrawerShift.prototype['closing_employee_id'] = undefined;

/**
 * The free-form text description of a cash drawer by an employee.
 * @member {String} description
 */
CashDrawerShift.prototype['description'] = undefined;

/**
 * @member {module:model/CashDrawerDevice} device
 */
CashDrawerShift.prototype['device'] = undefined;

/**
 * The IDs of all employees that were logged into Square Point of Sale at any point while the cash drawer shift was open.
 * @member {Array.<String>} employee_ids
 */
CashDrawerShift.prototype['employee_ids'] = undefined;

/**
 * The time when the shift ended, in ISO 8601 format.
 * @member {String} ended_at
 */
CashDrawerShift.prototype['ended_at'] = undefined;

/**
 * The ID of the employee that ended the cash drawer shift.
 * @member {String} ending_employee_id
 */
CashDrawerShift.prototype['ending_employee_id'] = undefined;

/**
 * @member {module:model/Money} expected_cash_money
 */
CashDrawerShift.prototype['expected_cash_money'] = undefined;

/**
 * The shift unique ID.
 * @member {String} id
 */
CashDrawerShift.prototype['id'] = undefined;

/**
 * The time when the shift began, in ISO 8601 format.
 * @member {String} opened_at
 */
CashDrawerShift.prototype['opened_at'] = undefined;

/**
 * @member {module:model/Money} opened_cash_money
 */
CashDrawerShift.prototype['opened_cash_money'] = undefined;

/**
 * The ID of the employee that started the cash drawer shift.
 * @member {String} opening_employee_id
 */
CashDrawerShift.prototype['opening_employee_id'] = undefined;

/**
 * The shift current state.
 * @member {String} state
 */
CashDrawerShift.prototype['state'] = undefined;






export default CashDrawerShift;

