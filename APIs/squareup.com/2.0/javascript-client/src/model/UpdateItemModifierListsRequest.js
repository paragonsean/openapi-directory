/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpdateItemModifierListsRequest model module.
 * @module model/UpdateItemModifierListsRequest
 * @version 2.0
 */
class UpdateItemModifierListsRequest {
    /**
     * Constructs a new <code>UpdateItemModifierListsRequest</code>.
     * 
     * @alias module:model/UpdateItemModifierListsRequest
     * @param itemIds {Array.<String>} The IDs of the catalog items associated with the CatalogModifierList objects being updated.
     */
    constructor(itemIds) { 
        
        UpdateItemModifierListsRequest.initialize(this, itemIds);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, itemIds) { 
        obj['item_ids'] = itemIds;
    }

    /**
     * Constructs a <code>UpdateItemModifierListsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateItemModifierListsRequest} obj Optional instance to populate.
     * @return {module:model/UpdateItemModifierListsRequest} The populated <code>UpdateItemModifierListsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateItemModifierListsRequest();

            if (data.hasOwnProperty('item_ids')) {
                obj['item_ids'] = ApiClient.convertToType(data['item_ids'], ['String']);
            }
            if (data.hasOwnProperty('modifier_lists_to_disable')) {
                obj['modifier_lists_to_disable'] = ApiClient.convertToType(data['modifier_lists_to_disable'], ['String']);
            }
            if (data.hasOwnProperty('modifier_lists_to_enable')) {
                obj['modifier_lists_to_enable'] = ApiClient.convertToType(data['modifier_lists_to_enable'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateItemModifierListsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateItemModifierListsRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateItemModifierListsRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['item_ids'])) {
            throw new Error("Expected the field `item_ids` to be an array in the JSON data but got " + data['item_ids']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['modifier_lists_to_disable'])) {
            throw new Error("Expected the field `modifier_lists_to_disable` to be an array in the JSON data but got " + data['modifier_lists_to_disable']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['modifier_lists_to_enable'])) {
            throw new Error("Expected the field `modifier_lists_to_enable` to be an array in the JSON data but got " + data['modifier_lists_to_enable']);
        }

        return true;
    }


}

UpdateItemModifierListsRequest.RequiredProperties = ["item_ids"];

/**
 * The IDs of the catalog items associated with the CatalogModifierList objects being updated.
 * @member {Array.<String>} item_ids
 */
UpdateItemModifierListsRequest.prototype['item_ids'] = undefined;

/**
 * The IDs of the CatalogModifierList objects to disable for the CatalogItem.
 * @member {Array.<String>} modifier_lists_to_disable
 */
UpdateItemModifierListsRequest.prototype['modifier_lists_to_disable'] = undefined;

/**
 * The IDs of the CatalogModifierList objects to enable for the CatalogItem.
 * @member {Array.<String>} modifier_lists_to_enable
 */
UpdateItemModifierListsRequest.prototype['modifier_lists_to_enable'] = undefined;






export default UpdateItemModifierListsRequest;

