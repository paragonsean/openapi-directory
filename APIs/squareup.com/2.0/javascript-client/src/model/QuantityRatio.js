/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The QuantityRatio model module.
 * @module model/QuantityRatio
 * @version 2.0
 */
class QuantityRatio {
    /**
     * Constructs a new <code>QuantityRatio</code>.
     * A whole number or unreduced fractional ratio.
     * @alias module:model/QuantityRatio
     */
    constructor() { 
        
        QuantityRatio.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>QuantityRatio</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QuantityRatio} obj Optional instance to populate.
     * @return {module:model/QuantityRatio} The populated <code>QuantityRatio</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QuantityRatio();

            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
            }
            if (data.hasOwnProperty('quantity_denominator')) {
                obj['quantity_denominator'] = ApiClient.convertToType(data['quantity_denominator'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QuantityRatio</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QuantityRatio</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * The whole or fractional quantity as the numerator.
 * @member {Number} quantity
 */
QuantityRatio.prototype['quantity'] = undefined;

/**
 * The whole or fractional quantity as the denominator.  In the case of fractional quantity this field is the denominator and quantity is the numerator. When unspecified, the value is `1`. For example, when `quantity=3` and `quantity_donominator` is unspecified, the quantity ratio is `3` or `3/1`.
 * @member {Number} quantity_denominator
 */
QuantityRatio.prototype['quantity_denominator'] = undefined;






export default QuantityRatio;

