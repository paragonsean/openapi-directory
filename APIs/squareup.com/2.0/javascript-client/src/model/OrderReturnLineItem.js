/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Money from './Money';
import OrderLineItemAppliedDiscount from './OrderLineItemAppliedDiscount';
import OrderLineItemAppliedTax from './OrderLineItemAppliedTax';
import OrderQuantityUnit from './OrderQuantityUnit';
import OrderReturnLineItemModifier from './OrderReturnLineItemModifier';

/**
 * The OrderReturnLineItem model module.
 * @module model/OrderReturnLineItem
 * @version 2.0
 */
class OrderReturnLineItem {
    /**
     * Constructs a new <code>OrderReturnLineItem</code>.
     * The line item being returned in an order.
     * @alias module:model/OrderReturnLineItem
     * @param quantity {String} The quantity returned, formatted as a decimal number. For example, `\"3\"`.  Line items with a `quantity_unit` can have non-integer quantities. For example, `\"1.70000\"`.
     */
    constructor(quantity) { 
        
        OrderReturnLineItem.initialize(this, quantity);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, quantity) { 
        obj['quantity'] = quantity;
    }

    /**
     * Constructs a <code>OrderReturnLineItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrderReturnLineItem} obj Optional instance to populate.
     * @return {module:model/OrderReturnLineItem} The populated <code>OrderReturnLineItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrderReturnLineItem();

            if (data.hasOwnProperty('applied_discounts')) {
                obj['applied_discounts'] = ApiClient.convertToType(data['applied_discounts'], [OrderLineItemAppliedDiscount]);
            }
            if (data.hasOwnProperty('applied_taxes')) {
                obj['applied_taxes'] = ApiClient.convertToType(data['applied_taxes'], [OrderLineItemAppliedTax]);
            }
            if (data.hasOwnProperty('base_price_money')) {
                obj['base_price_money'] = Money.constructFromObject(data['base_price_money']);
            }
            if (data.hasOwnProperty('catalog_object_id')) {
                obj['catalog_object_id'] = ApiClient.convertToType(data['catalog_object_id'], 'String');
            }
            if (data.hasOwnProperty('catalog_version')) {
                obj['catalog_version'] = ApiClient.convertToType(data['catalog_version'], 'Number');
            }
            if (data.hasOwnProperty('gross_return_money')) {
                obj['gross_return_money'] = Money.constructFromObject(data['gross_return_money']);
            }
            if (data.hasOwnProperty('item_type')) {
                obj['item_type'] = ApiClient.convertToType(data['item_type'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('note')) {
                obj['note'] = ApiClient.convertToType(data['note'], 'String');
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'String');
            }
            if (data.hasOwnProperty('quantity_unit')) {
                obj['quantity_unit'] = OrderQuantityUnit.constructFromObject(data['quantity_unit']);
            }
            if (data.hasOwnProperty('return_modifiers')) {
                obj['return_modifiers'] = ApiClient.convertToType(data['return_modifiers'], [OrderReturnLineItemModifier]);
            }
            if (data.hasOwnProperty('source_line_item_uid')) {
                obj['source_line_item_uid'] = ApiClient.convertToType(data['source_line_item_uid'], 'String');
            }
            if (data.hasOwnProperty('total_discount_money')) {
                obj['total_discount_money'] = Money.constructFromObject(data['total_discount_money']);
            }
            if (data.hasOwnProperty('total_money')) {
                obj['total_money'] = Money.constructFromObject(data['total_money']);
            }
            if (data.hasOwnProperty('total_tax_money')) {
                obj['total_tax_money'] = Money.constructFromObject(data['total_tax_money']);
            }
            if (data.hasOwnProperty('uid')) {
                obj['uid'] = ApiClient.convertToType(data['uid'], 'String');
            }
            if (data.hasOwnProperty('variation_name')) {
                obj['variation_name'] = ApiClient.convertToType(data['variation_name'], 'String');
            }
            if (data.hasOwnProperty('variation_total_price_money')) {
                obj['variation_total_price_money'] = Money.constructFromObject(data['variation_total_price_money']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrderReturnLineItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrderReturnLineItem</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of OrderReturnLineItem.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['applied_discounts']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['applied_discounts'])) {
                throw new Error("Expected the field `applied_discounts` to be an array in the JSON data but got " + data['applied_discounts']);
            }
            // validate the optional field `applied_discounts` (array)
            for (const item of data['applied_discounts']) {
                OrderLineItemAppliedDiscount.validateJSON(item);
            };
        }
        if (data['applied_taxes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['applied_taxes'])) {
                throw new Error("Expected the field `applied_taxes` to be an array in the JSON data but got " + data['applied_taxes']);
            }
            // validate the optional field `applied_taxes` (array)
            for (const item of data['applied_taxes']) {
                OrderLineItemAppliedTax.validateJSON(item);
            };
        }
        // validate the optional field `base_price_money`
        if (data['base_price_money']) { // data not null
          Money.validateJSON(data['base_price_money']);
        }
        // ensure the json data is a string
        if (data['catalog_object_id'] && !(typeof data['catalog_object_id'] === 'string' || data['catalog_object_id'] instanceof String)) {
            throw new Error("Expected the field `catalog_object_id` to be a primitive type in the JSON string but got " + data['catalog_object_id']);
        }
        // validate the optional field `gross_return_money`
        if (data['gross_return_money']) { // data not null
          Money.validateJSON(data['gross_return_money']);
        }
        // ensure the json data is a string
        if (data['item_type'] && !(typeof data['item_type'] === 'string' || data['item_type'] instanceof String)) {
            throw new Error("Expected the field `item_type` to be a primitive type in the JSON string but got " + data['item_type']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['note'] && !(typeof data['note'] === 'string' || data['note'] instanceof String)) {
            throw new Error("Expected the field `note` to be a primitive type in the JSON string but got " + data['note']);
        }
        // ensure the json data is a string
        if (data['quantity'] && !(typeof data['quantity'] === 'string' || data['quantity'] instanceof String)) {
            throw new Error("Expected the field `quantity` to be a primitive type in the JSON string but got " + data['quantity']);
        }
        // validate the optional field `quantity_unit`
        if (data['quantity_unit']) { // data not null
          OrderQuantityUnit.validateJSON(data['quantity_unit']);
        }
        if (data['return_modifiers']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['return_modifiers'])) {
                throw new Error("Expected the field `return_modifiers` to be an array in the JSON data but got " + data['return_modifiers']);
            }
            // validate the optional field `return_modifiers` (array)
            for (const item of data['return_modifiers']) {
                OrderReturnLineItemModifier.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['source_line_item_uid'] && !(typeof data['source_line_item_uid'] === 'string' || data['source_line_item_uid'] instanceof String)) {
            throw new Error("Expected the field `source_line_item_uid` to be a primitive type in the JSON string but got " + data['source_line_item_uid']);
        }
        // validate the optional field `total_discount_money`
        if (data['total_discount_money']) { // data not null
          Money.validateJSON(data['total_discount_money']);
        }
        // validate the optional field `total_money`
        if (data['total_money']) { // data not null
          Money.validateJSON(data['total_money']);
        }
        // validate the optional field `total_tax_money`
        if (data['total_tax_money']) { // data not null
          Money.validateJSON(data['total_tax_money']);
        }
        // ensure the json data is a string
        if (data['uid'] && !(typeof data['uid'] === 'string' || data['uid'] instanceof String)) {
            throw new Error("Expected the field `uid` to be a primitive type in the JSON string but got " + data['uid']);
        }
        // ensure the json data is a string
        if (data['variation_name'] && !(typeof data['variation_name'] === 'string' || data['variation_name'] instanceof String)) {
            throw new Error("Expected the field `variation_name` to be a primitive type in the JSON string but got " + data['variation_name']);
        }
        // validate the optional field `variation_total_price_money`
        if (data['variation_total_price_money']) { // data not null
          Money.validateJSON(data['variation_total_price_money']);
        }

        return true;
    }


}

OrderReturnLineItem.RequiredProperties = ["quantity"];

/**
 * The list of references to `OrderReturnDiscount` entities applied to the return line item. Each `OrderLineItemAppliedDiscount` has a `discount_uid` that references the `uid` of a top-level `OrderReturnDiscount` applied to the return line item. On reads, the applied amount is populated.
 * @member {Array.<module:model/OrderLineItemAppliedDiscount>} applied_discounts
 */
OrderReturnLineItem.prototype['applied_discounts'] = undefined;

/**
 * The list of references to `OrderReturnTax` entities applied to the return line item. Each `OrderLineItemAppliedTax` has a `tax_uid` that references the `uid` of a top-level `OrderReturnTax` applied to the return line item. On reads, the applied amount is populated.
 * @member {Array.<module:model/OrderLineItemAppliedTax>} applied_taxes
 */
OrderReturnLineItem.prototype['applied_taxes'] = undefined;

/**
 * @member {module:model/Money} base_price_money
 */
OrderReturnLineItem.prototype['base_price_money'] = undefined;

/**
 * The [CatalogItemVariation](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogItemVariation) ID applied to this return line item.
 * @member {String} catalog_object_id
 */
OrderReturnLineItem.prototype['catalog_object_id'] = undefined;

/**
 * The version of the catalog object that this line item references.
 * @member {Number} catalog_version
 */
OrderReturnLineItem.prototype['catalog_version'] = undefined;

/**
 * @member {module:model/Money} gross_return_money
 */
OrderReturnLineItem.prototype['gross_return_money'] = undefined;

/**
 * The type of line item: an itemized return, a non-itemized return (custom amount), or the return of an unactivated gift card sale.
 * @member {String} item_type
 */
OrderReturnLineItem.prototype['item_type'] = undefined;

/**
 * The name of the line item.
 * @member {String} name
 */
OrderReturnLineItem.prototype['name'] = undefined;

/**
 * The note of the return line item.
 * @member {String} note
 */
OrderReturnLineItem.prototype['note'] = undefined;

/**
 * The quantity returned, formatted as a decimal number. For example, `\"3\"`.  Line items with a `quantity_unit` can have non-integer quantities. For example, `\"1.70000\"`.
 * @member {String} quantity
 */
OrderReturnLineItem.prototype['quantity'] = undefined;

/**
 * @member {module:model/OrderQuantityUnit} quantity_unit
 */
OrderReturnLineItem.prototype['quantity_unit'] = undefined;

/**
 * The [CatalogModifier](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogModifier)s applied to this line item.
 * @member {Array.<module:model/OrderReturnLineItemModifier>} return_modifiers
 */
OrderReturnLineItem.prototype['return_modifiers'] = undefined;

/**
 * The `uid` of the line item in the original sale order.
 * @member {String} source_line_item_uid
 */
OrderReturnLineItem.prototype['source_line_item_uid'] = undefined;

/**
 * @member {module:model/Money} total_discount_money
 */
OrderReturnLineItem.prototype['total_discount_money'] = undefined;

/**
 * @member {module:model/Money} total_money
 */
OrderReturnLineItem.prototype['total_money'] = undefined;

/**
 * @member {module:model/Money} total_tax_money
 */
OrderReturnLineItem.prototype['total_tax_money'] = undefined;

/**
 * A unique ID for this return line-item entry.
 * @member {String} uid
 */
OrderReturnLineItem.prototype['uid'] = undefined;

/**
 * The name of the variation applied to this return line item.
 * @member {String} variation_name
 */
OrderReturnLineItem.prototype['variation_name'] = undefined;

/**
 * @member {module:model/Money} variation_total_price_money
 */
OrderReturnLineItem.prototype['variation_total_price_money'] = undefined;






export default OrderReturnLineItem;

