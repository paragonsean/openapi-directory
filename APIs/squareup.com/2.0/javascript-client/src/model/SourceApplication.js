/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SourceApplication model module.
 * @module model/SourceApplication
 * @version 2.0
 */
class SourceApplication {
    /**
     * Constructs a new <code>SourceApplication</code>.
     * Provides information about the application used to generate a change.
     * @alias module:model/SourceApplication
     */
    constructor() { 
        
        SourceApplication.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SourceApplication</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SourceApplication} obj Optional instance to populate.
     * @return {module:model/SourceApplication} The populated <code>SourceApplication</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SourceApplication();

            if (data.hasOwnProperty('application_id')) {
                obj['application_id'] = ApiClient.convertToType(data['application_id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('product')) {
                obj['product'] = ApiClient.convertToType(data['product'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SourceApplication</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SourceApplication</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['application_id'] && !(typeof data['application_id'] === 'string' || data['application_id'] instanceof String)) {
            throw new Error("Expected the field `application_id` to be a primitive type in the JSON string but got " + data['application_id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['product'] && !(typeof data['product'] === 'string' || data['product'] instanceof String)) {
            throw new Error("Expected the field `product` to be a primitive type in the JSON string but got " + data['product']);
        }

        return true;
    }


}



/**
 * Read-only Square ID assigned to the application. Only used for [Product](https://developer.squareup.com/reference/square_2021-08-18/enums/Product) type `EXTERNAL_API`.
 * @member {String} application_id
 */
SourceApplication.prototype['application_id'] = undefined;

/**
 * Read-only display name assigned to the application (e.g. `\"Custom Application\"`, `\"Square POS 4.74 for Android\"`).
 * @member {String} name
 */
SourceApplication.prototype['name'] = undefined;

/**
 * Read-only [Product](https://developer.squareup.com/reference/square_2021-08-18/enums/Product) type for the application.
 * @member {String} product
 */
SourceApplication.prototype['product'] = undefined;






export default SourceApplication;

