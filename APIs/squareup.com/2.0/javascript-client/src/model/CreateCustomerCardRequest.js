/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Address from './Address';

/**
 * The CreateCustomerCardRequest model module.
 * @module model/CreateCustomerCardRequest
 * @version 2.0
 */
class CreateCustomerCardRequest {
    /**
     * Constructs a new <code>CreateCustomerCardRequest</code>.
     * Defines the fields that are included in the request body of a request to the &#x60;CreateCustomerCard&#x60; endpoint.
     * @alias module:model/CreateCustomerCardRequest
     * @param cardNonce {String} A card nonce representing the credit card to link to the customer.  Card nonces are generated by the Square payment form when customers enter their card information. For more information, see [Walkthrough: Integrate Square Payments in a Website](https://developer.squareup.com/docs/web-payments/take-card-payment).  __NOTE:__ Card nonces generated by digital wallets (such as Apple Pay) cannot be used to create a customer card.
     */
    constructor(cardNonce) { 
        
        CreateCustomerCardRequest.initialize(this, cardNonce);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, cardNonce) { 
        obj['card_nonce'] = cardNonce;
    }

    /**
     * Constructs a <code>CreateCustomerCardRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateCustomerCardRequest} obj Optional instance to populate.
     * @return {module:model/CreateCustomerCardRequest} The populated <code>CreateCustomerCardRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateCustomerCardRequest();

            if (data.hasOwnProperty('billing_address')) {
                obj['billing_address'] = Address.constructFromObject(data['billing_address']);
            }
            if (data.hasOwnProperty('card_nonce')) {
                obj['card_nonce'] = ApiClient.convertToType(data['card_nonce'], 'String');
            }
            if (data.hasOwnProperty('cardholder_name')) {
                obj['cardholder_name'] = ApiClient.convertToType(data['cardholder_name'], 'String');
            }
            if (data.hasOwnProperty('verification_token')) {
                obj['verification_token'] = ApiClient.convertToType(data['verification_token'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateCustomerCardRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateCustomerCardRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateCustomerCardRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `billing_address`
        if (data['billing_address']) { // data not null
          Address.validateJSON(data['billing_address']);
        }
        // ensure the json data is a string
        if (data['card_nonce'] && !(typeof data['card_nonce'] === 'string' || data['card_nonce'] instanceof String)) {
            throw new Error("Expected the field `card_nonce` to be a primitive type in the JSON string but got " + data['card_nonce']);
        }
        // ensure the json data is a string
        if (data['cardholder_name'] && !(typeof data['cardholder_name'] === 'string' || data['cardholder_name'] instanceof String)) {
            throw new Error("Expected the field `cardholder_name` to be a primitive type in the JSON string but got " + data['cardholder_name']);
        }
        // ensure the json data is a string
        if (data['verification_token'] && !(typeof data['verification_token'] === 'string' || data['verification_token'] instanceof String)) {
            throw new Error("Expected the field `verification_token` to be a primitive type in the JSON string but got " + data['verification_token']);
        }

        return true;
    }


}

CreateCustomerCardRequest.RequiredProperties = ["card_nonce"];

/**
 * @member {module:model/Address} billing_address
 */
CreateCustomerCardRequest.prototype['billing_address'] = undefined;

/**
 * A card nonce representing the credit card to link to the customer.  Card nonces are generated by the Square payment form when customers enter their card information. For more information, see [Walkthrough: Integrate Square Payments in a Website](https://developer.squareup.com/docs/web-payments/take-card-payment).  __NOTE:__ Card nonces generated by digital wallets (such as Apple Pay) cannot be used to create a customer card.
 * @member {String} card_nonce
 */
CreateCustomerCardRequest.prototype['card_nonce'] = undefined;

/**
 * The full name printed on the credit card.
 * @member {String} cardholder_name
 */
CreateCustomerCardRequest.prototype['cardholder_name'] = undefined;

/**
 * An identifying token generated by [Payments.verifyBuyer()](https://developer.squareup.com/reference/sdks/web/payments/objects/Payments#Payments.verifyBuyer). Verification tokens encapsulate customer device information and 3-D Secure challenge results to indicate that Square has verified the buyer identity.
 * @member {String} verification_token
 */
CreateCustomerCardRequest.prototype['verification_token'] = undefined;






export default CreateCustomerCardRequest;

