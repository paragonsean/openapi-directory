/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TerminalCheckout from './TerminalCheckout';

/**
 * The CreateTerminalCheckoutRequest model module.
 * @module model/CreateTerminalCheckoutRequest
 * @version 2.0
 */
class CreateTerminalCheckoutRequest {
    /**
     * Constructs a new <code>CreateTerminalCheckoutRequest</code>.
     * 
     * @alias module:model/CreateTerminalCheckoutRequest
     * @param checkout {module:model/TerminalCheckout} 
     * @param idempotencyKey {String} A unique string that identifies this `CreateCheckout` request. Keys can be any valid string but must be unique for every `CreateCheckout` request.  See [Idempotency keys](https://developer.squareup.com/docs/basics/api101/idempotency) for more information.
     */
    constructor(checkout, idempotencyKey) { 
        
        CreateTerminalCheckoutRequest.initialize(this, checkout, idempotencyKey);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, checkout, idempotencyKey) { 
        obj['checkout'] = checkout;
        obj['idempotency_key'] = idempotencyKey;
    }

    /**
     * Constructs a <code>CreateTerminalCheckoutRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateTerminalCheckoutRequest} obj Optional instance to populate.
     * @return {module:model/CreateTerminalCheckoutRequest} The populated <code>CreateTerminalCheckoutRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateTerminalCheckoutRequest();

            if (data.hasOwnProperty('checkout')) {
                obj['checkout'] = TerminalCheckout.constructFromObject(data['checkout']);
            }
            if (data.hasOwnProperty('idempotency_key')) {
                obj['idempotency_key'] = ApiClient.convertToType(data['idempotency_key'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateTerminalCheckoutRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateTerminalCheckoutRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateTerminalCheckoutRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `checkout`
        if (data['checkout']) { // data not null
          TerminalCheckout.validateJSON(data['checkout']);
        }
        // ensure the json data is a string
        if (data['idempotency_key'] && !(typeof data['idempotency_key'] === 'string' || data['idempotency_key'] instanceof String)) {
            throw new Error("Expected the field `idempotency_key` to be a primitive type in the JSON string but got " + data['idempotency_key']);
        }

        return true;
    }


}

CreateTerminalCheckoutRequest.RequiredProperties = ["checkout", "idempotency_key"];

/**
 * @member {module:model/TerminalCheckout} checkout
 */
CreateTerminalCheckoutRequest.prototype['checkout'] = undefined;

/**
 * A unique string that identifies this `CreateCheckout` request. Keys can be any valid string but must be unique for every `CreateCheckout` request.  See [Idempotency keys](https://developer.squareup.com/docs/basics/api101/idempotency) for more information.
 * @member {String} idempotency_key
 */
CreateTerminalCheckoutRequest.prototype['idempotency_key'] = undefined;






export default CreateTerminalCheckoutRequest;

