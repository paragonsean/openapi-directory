/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The V1PaymentItemDetail model module.
 * @module model/V1PaymentItemDetail
 * @version 2.0
 */
class V1PaymentItemDetail {
    /**
     * Constructs a new <code>V1PaymentItemDetail</code>.
     * V1PaymentItemDetail
     * @alias module:model/V1PaymentItemDetail
     */
    constructor() { 
        
        V1PaymentItemDetail.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>V1PaymentItemDetail</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/V1PaymentItemDetail} obj Optional instance to populate.
     * @return {module:model/V1PaymentItemDetail} The populated <code>V1PaymentItemDetail</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new V1PaymentItemDetail();

            if (data.hasOwnProperty('category_name')) {
                obj['category_name'] = ApiClient.convertToType(data['category_name'], 'String');
            }
            if (data.hasOwnProperty('item_id')) {
                obj['item_id'] = ApiClient.convertToType(data['item_id'], 'String');
            }
            if (data.hasOwnProperty('item_variation_id')) {
                obj['item_variation_id'] = ApiClient.convertToType(data['item_variation_id'], 'String');
            }
            if (data.hasOwnProperty('sku')) {
                obj['sku'] = ApiClient.convertToType(data['sku'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>V1PaymentItemDetail</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>V1PaymentItemDetail</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['category_name'] && !(typeof data['category_name'] === 'string' || data['category_name'] instanceof String)) {
            throw new Error("Expected the field `category_name` to be a primitive type in the JSON string but got " + data['category_name']);
        }
        // ensure the json data is a string
        if (data['item_id'] && !(typeof data['item_id'] === 'string' || data['item_id'] instanceof String)) {
            throw new Error("Expected the field `item_id` to be a primitive type in the JSON string but got " + data['item_id']);
        }
        // ensure the json data is a string
        if (data['item_variation_id'] && !(typeof data['item_variation_id'] === 'string' || data['item_variation_id'] instanceof String)) {
            throw new Error("Expected the field `item_variation_id` to be a primitive type in the JSON string but got " + data['item_variation_id']);
        }
        // ensure the json data is a string
        if (data['sku'] && !(typeof data['sku'] === 'string' || data['sku'] instanceof String)) {
            throw new Error("Expected the field `sku` to be a primitive type in the JSON string but got " + data['sku']);
        }

        return true;
    }


}



/**
 * The name of the item's merchant-defined category, if any.
 * @member {String} category_name
 */
V1PaymentItemDetail.prototype['category_name'] = undefined;

/**
 * The unique ID of the item purchased, if any.
 * @member {String} item_id
 */
V1PaymentItemDetail.prototype['item_id'] = undefined;

/**
 * The unique ID of the item variation purchased, if any.
 * @member {String} item_variation_id
 */
V1PaymentItemDetail.prototype['item_variation_id'] = undefined;

/**
 *  The item's merchant-defined SKU, if any.
 * @member {String} sku
 */
V1PaymentItemDetail.prototype['sku'] = undefined;






export default V1PaymentItemDetail;

