/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OrderFulfillmentUpdatedUpdate from './OrderFulfillmentUpdatedUpdate';

/**
 * The OrderFulfillmentUpdated model module.
 * @module model/OrderFulfillmentUpdated
 * @version 2.0
 */
class OrderFulfillmentUpdated {
    /**
     * Constructs a new <code>OrderFulfillmentUpdated</code>.
     * 
     * @alias module:model/OrderFulfillmentUpdated
     */
    constructor() { 
        
        OrderFulfillmentUpdated.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrderFulfillmentUpdated</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrderFulfillmentUpdated} obj Optional instance to populate.
     * @return {module:model/OrderFulfillmentUpdated} The populated <code>OrderFulfillmentUpdated</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrderFulfillmentUpdated();

            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('fulfillment_update')) {
                obj['fulfillment_update'] = ApiClient.convertToType(data['fulfillment_update'], [OrderFulfillmentUpdatedUpdate]);
            }
            if (data.hasOwnProperty('location_id')) {
                obj['location_id'] = ApiClient.convertToType(data['location_id'], 'String');
            }
            if (data.hasOwnProperty('order_id')) {
                obj['order_id'] = ApiClient.convertToType(data['order_id'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrderFulfillmentUpdated</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrderFulfillmentUpdated</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        if (data['fulfillment_update']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['fulfillment_update'])) {
                throw new Error("Expected the field `fulfillment_update` to be an array in the JSON data but got " + data['fulfillment_update']);
            }
            // validate the optional field `fulfillment_update` (array)
            for (const item of data['fulfillment_update']) {
                OrderFulfillmentUpdatedUpdate.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['location_id'] && !(typeof data['location_id'] === 'string' || data['location_id'] instanceof String)) {
            throw new Error("Expected the field `location_id` to be a primitive type in the JSON string but got " + data['location_id']);
        }
        // ensure the json data is a string
        if (data['order_id'] && !(typeof data['order_id'] === 'string' || data['order_id'] instanceof String)) {
            throw new Error("Expected the field `order_id` to be a primitive type in the JSON string but got " + data['order_id']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['updated_at'] && !(typeof data['updated_at'] === 'string' || data['updated_at'] instanceof String)) {
            throw new Error("Expected the field `updated_at` to be a primitive type in the JSON string but got " + data['updated_at']);
        }

        return true;
    }


}



/**
 * The timestamp for when the order was created, in RFC 3339 format.
 * @member {String} created_at
 */
OrderFulfillmentUpdated.prototype['created_at'] = undefined;

/**
 * The fulfillments that were updated with this version change.
 * @member {Array.<module:model/OrderFulfillmentUpdatedUpdate>} fulfillment_update
 */
OrderFulfillmentUpdated.prototype['fulfillment_update'] = undefined;

/**
 * The ID of the seller location that this order is associated with.
 * @member {String} location_id
 */
OrderFulfillmentUpdated.prototype['location_id'] = undefined;

/**
 * The order's unique ID.
 * @member {String} order_id
 */
OrderFulfillmentUpdated.prototype['order_id'] = undefined;

/**
 * The state of the order.
 * @member {String} state
 */
OrderFulfillmentUpdated.prototype['state'] = undefined;

/**
 * The timestamp for when the order was last updated, in RFC 3339 format.
 * @member {String} updated_at
 */
OrderFulfillmentUpdated.prototype['updated_at'] = undefined;

/**
 * The version number, which is incremented each time an update is committed to the order. Orders that were not created through the API do not include a version number and therefore cannot be updated.  [Read more about working with versions.](https://developer.squareup.com/docs/orders-api/manage-orders#update-orders)
 * @member {Number} version
 */
OrderFulfillmentUpdated.prototype['version'] = undefined;






export default OrderFulfillmentUpdated;

