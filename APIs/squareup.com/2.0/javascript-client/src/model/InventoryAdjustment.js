/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InventoryAdjustmentGroup from './InventoryAdjustmentGroup';
import Money from './Money';
import SourceApplication from './SourceApplication';

/**
 * The InventoryAdjustment model module.
 * @module model/InventoryAdjustment
 * @version 2.0
 */
class InventoryAdjustment {
    /**
     * Constructs a new <code>InventoryAdjustment</code>.
     * Represents a change in state or quantity of product inventory at a particular time and location.
     * @alias module:model/InventoryAdjustment
     */
    constructor() { 
        
        InventoryAdjustment.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InventoryAdjustment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InventoryAdjustment} obj Optional instance to populate.
     * @return {module:model/InventoryAdjustment} The populated <code>InventoryAdjustment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InventoryAdjustment();

            if (data.hasOwnProperty('adjustment_group')) {
                obj['adjustment_group'] = InventoryAdjustmentGroup.constructFromObject(data['adjustment_group']);
            }
            if (data.hasOwnProperty('catalog_object_id')) {
                obj['catalog_object_id'] = ApiClient.convertToType(data['catalog_object_id'], 'String');
            }
            if (data.hasOwnProperty('catalog_object_type')) {
                obj['catalog_object_type'] = ApiClient.convertToType(data['catalog_object_type'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('employee_id')) {
                obj['employee_id'] = ApiClient.convertToType(data['employee_id'], 'String');
            }
            if (data.hasOwnProperty('from_state')) {
                obj['from_state'] = ApiClient.convertToType(data['from_state'], 'String');
            }
            if (data.hasOwnProperty('goods_receipt_id')) {
                obj['goods_receipt_id'] = ApiClient.convertToType(data['goods_receipt_id'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('location_id')) {
                obj['location_id'] = ApiClient.convertToType(data['location_id'], 'String');
            }
            if (data.hasOwnProperty('occurred_at')) {
                obj['occurred_at'] = ApiClient.convertToType(data['occurred_at'], 'String');
            }
            if (data.hasOwnProperty('purchase_order_id')) {
                obj['purchase_order_id'] = ApiClient.convertToType(data['purchase_order_id'], 'String');
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'String');
            }
            if (data.hasOwnProperty('reference_id')) {
                obj['reference_id'] = ApiClient.convertToType(data['reference_id'], 'String');
            }
            if (data.hasOwnProperty('refund_id')) {
                obj['refund_id'] = ApiClient.convertToType(data['refund_id'], 'String');
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = SourceApplication.constructFromObject(data['source']);
            }
            if (data.hasOwnProperty('to_state')) {
                obj['to_state'] = ApiClient.convertToType(data['to_state'], 'String');
            }
            if (data.hasOwnProperty('total_price_money')) {
                obj['total_price_money'] = Money.constructFromObject(data['total_price_money']);
            }
            if (data.hasOwnProperty('transaction_id')) {
                obj['transaction_id'] = ApiClient.convertToType(data['transaction_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InventoryAdjustment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InventoryAdjustment</code>.
     */
    static validateJSON(data) {
        // validate the optional field `adjustment_group`
        if (data['adjustment_group']) { // data not null
          InventoryAdjustmentGroup.validateJSON(data['adjustment_group']);
        }
        // ensure the json data is a string
        if (data['catalog_object_id'] && !(typeof data['catalog_object_id'] === 'string' || data['catalog_object_id'] instanceof String)) {
            throw new Error("Expected the field `catalog_object_id` to be a primitive type in the JSON string but got " + data['catalog_object_id']);
        }
        // ensure the json data is a string
        if (data['catalog_object_type'] && !(typeof data['catalog_object_type'] === 'string' || data['catalog_object_type'] instanceof String)) {
            throw new Error("Expected the field `catalog_object_type` to be a primitive type in the JSON string but got " + data['catalog_object_type']);
        }
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        // ensure the json data is a string
        if (data['employee_id'] && !(typeof data['employee_id'] === 'string' || data['employee_id'] instanceof String)) {
            throw new Error("Expected the field `employee_id` to be a primitive type in the JSON string but got " + data['employee_id']);
        }
        // ensure the json data is a string
        if (data['from_state'] && !(typeof data['from_state'] === 'string' || data['from_state'] instanceof String)) {
            throw new Error("Expected the field `from_state` to be a primitive type in the JSON string but got " + data['from_state']);
        }
        // ensure the json data is a string
        if (data['goods_receipt_id'] && !(typeof data['goods_receipt_id'] === 'string' || data['goods_receipt_id'] instanceof String)) {
            throw new Error("Expected the field `goods_receipt_id` to be a primitive type in the JSON string but got " + data['goods_receipt_id']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['location_id'] && !(typeof data['location_id'] === 'string' || data['location_id'] instanceof String)) {
            throw new Error("Expected the field `location_id` to be a primitive type in the JSON string but got " + data['location_id']);
        }
        // ensure the json data is a string
        if (data['occurred_at'] && !(typeof data['occurred_at'] === 'string' || data['occurred_at'] instanceof String)) {
            throw new Error("Expected the field `occurred_at` to be a primitive type in the JSON string but got " + data['occurred_at']);
        }
        // ensure the json data is a string
        if (data['purchase_order_id'] && !(typeof data['purchase_order_id'] === 'string' || data['purchase_order_id'] instanceof String)) {
            throw new Error("Expected the field `purchase_order_id` to be a primitive type in the JSON string but got " + data['purchase_order_id']);
        }
        // ensure the json data is a string
        if (data['quantity'] && !(typeof data['quantity'] === 'string' || data['quantity'] instanceof String)) {
            throw new Error("Expected the field `quantity` to be a primitive type in the JSON string but got " + data['quantity']);
        }
        // ensure the json data is a string
        if (data['reference_id'] && !(typeof data['reference_id'] === 'string' || data['reference_id'] instanceof String)) {
            throw new Error("Expected the field `reference_id` to be a primitive type in the JSON string but got " + data['reference_id']);
        }
        // ensure the json data is a string
        if (data['refund_id'] && !(typeof data['refund_id'] === 'string' || data['refund_id'] instanceof String)) {
            throw new Error("Expected the field `refund_id` to be a primitive type in the JSON string but got " + data['refund_id']);
        }
        // validate the optional field `source`
        if (data['source']) { // data not null
          SourceApplication.validateJSON(data['source']);
        }
        // ensure the json data is a string
        if (data['to_state'] && !(typeof data['to_state'] === 'string' || data['to_state'] instanceof String)) {
            throw new Error("Expected the field `to_state` to be a primitive type in the JSON string but got " + data['to_state']);
        }
        // validate the optional field `total_price_money`
        if (data['total_price_money']) { // data not null
          Money.validateJSON(data['total_price_money']);
        }
        // ensure the json data is a string
        if (data['transaction_id'] && !(typeof data['transaction_id'] === 'string' || data['transaction_id'] instanceof String)) {
            throw new Error("Expected the field `transaction_id` to be a primitive type in the JSON string but got " + data['transaction_id']);
        }

        return true;
    }


}



/**
 * @member {module:model/InventoryAdjustmentGroup} adjustment_group
 */
InventoryAdjustment.prototype['adjustment_group'] = undefined;

/**
 * The Square-generated ID of the [CatalogObject](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject) being tracked.
 * @member {String} catalog_object_id
 */
InventoryAdjustment.prototype['catalog_object_id'] = undefined;

/**
 * The [type](https://developer.squareup.com/reference/square_2021-08-18/enums/CatalogObjectType) of the [CatalogObject](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject) being tracked. Tracking is only supported for the `ITEM_VARIATION` type.
 * @member {String} catalog_object_type
 */
InventoryAdjustment.prototype['catalog_object_type'] = undefined;

/**
 * An RFC 3339-formatted timestamp that indicates when the inventory adjustment is received.
 * @member {String} created_at
 */
InventoryAdjustment.prototype['created_at'] = undefined;

/**
 * The Square-generated ID of the [Employee](https://developer.squareup.com/reference/square_2021-08-18/objects/Employee) responsible for the inventory adjustment.
 * @member {String} employee_id
 */
InventoryAdjustment.prototype['employee_id'] = undefined;

/**
 * The [inventory state](https://developer.squareup.com/reference/square_2021-08-18/enums/InventoryState) of the related quantity of items before the adjustment.
 * @member {String} from_state
 */
InventoryAdjustment.prototype['from_state'] = undefined;

/**
 * The Square-generated ID of the goods receipt that caused the adjustment. Only relevant for state transitions from the Square for Retail app.
 * @member {String} goods_receipt_id
 */
InventoryAdjustment.prototype['goods_receipt_id'] = undefined;

/**
 * A unique ID generated by Square for the `InventoryAdjustment`.
 * @member {String} id
 */
InventoryAdjustment.prototype['id'] = undefined;

/**
 * The Square-generated ID of the [Location](https://developer.squareup.com/reference/square_2021-08-18/objects/Location) where the related quantity of items is being tracked.
 * @member {String} location_id
 */
InventoryAdjustment.prototype['location_id'] = undefined;

/**
 * A client-generated RFC 3339-formatted timestamp that indicates when the inventory adjustment took place. For inventory adjustment updates, the `occurred_at` timestamp cannot be older than 24 hours or in the future relative to the time of the request.
 * @member {String} occurred_at
 */
InventoryAdjustment.prototype['occurred_at'] = undefined;

/**
 * The Square-generated ID of the purchase order that caused the adjustment. Only relevant for state transitions from the Square for Retail app.
 * @member {String} purchase_order_id
 */
InventoryAdjustment.prototype['purchase_order_id'] = undefined;

/**
 * The number of items affected by the adjustment as a decimal string. Can support up to 5 digits after the decimal point.
 * @member {String} quantity
 */
InventoryAdjustment.prototype['quantity'] = undefined;

/**
 * An optional ID provided by the application to tie the `InventoryAdjustment` to an external system.
 * @member {String} reference_id
 */
InventoryAdjustment.prototype['reference_id'] = undefined;

/**
 * The Square-generated ID of the [Refund][#type-refund] that caused the adjustment. Only relevant for refund-related state transitions.
 * @member {String} refund_id
 */
InventoryAdjustment.prototype['refund_id'] = undefined;

/**
 * @member {module:model/SourceApplication} source
 */
InventoryAdjustment.prototype['source'] = undefined;

/**
 * The [inventory state](https://developer.squareup.com/reference/square_2021-08-18/enums/InventoryState) of the related quantity of items after the adjustment.
 * @member {String} to_state
 */
InventoryAdjustment.prototype['to_state'] = undefined;

/**
 * @member {module:model/Money} total_price_money
 */
InventoryAdjustment.prototype['total_price_money'] = undefined;

/**
 * The Square-generated ID of the [Transaction][#type-transaction] that caused the adjustment. Only relevant for payment-related state transitions.
 * @member {String} transaction_id
 */
InventoryAdjustment.prototype['transaction_id'] = undefined;






export default InventoryAdjustment;

