/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ListTeamMemberWagesRequest model module.
 * @module model/ListTeamMemberWagesRequest
 * @version 2.0
 */
class ListTeamMemberWagesRequest {
    /**
     * Constructs a new <code>ListTeamMemberWagesRequest</code>.
     * A request for a set of &#x60;TeamMemberWage&#x60; objects.
     * @alias module:model/ListTeamMemberWagesRequest
     */
    constructor() { 
        
        ListTeamMemberWagesRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ListTeamMemberWagesRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListTeamMemberWagesRequest} obj Optional instance to populate.
     * @return {module:model/ListTeamMemberWagesRequest} The populated <code>ListTeamMemberWagesRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListTeamMemberWagesRequest();

            if (data.hasOwnProperty('cursor')) {
                obj['cursor'] = ApiClient.convertToType(data['cursor'], 'String');
            }
            if (data.hasOwnProperty('limit')) {
                obj['limit'] = ApiClient.convertToType(data['limit'], 'Number');
            }
            if (data.hasOwnProperty('team_member_id')) {
                obj['team_member_id'] = ApiClient.convertToType(data['team_member_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListTeamMemberWagesRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListTeamMemberWagesRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['cursor'] && !(typeof data['cursor'] === 'string' || data['cursor'] instanceof String)) {
            throw new Error("Expected the field `cursor` to be a primitive type in the JSON string but got " + data['cursor']);
        }
        // ensure the json data is a string
        if (data['team_member_id'] && !(typeof data['team_member_id'] === 'string' || data['team_member_id'] instanceof String)) {
            throw new Error("Expected the field `team_member_id` to be a primitive type in the JSON string but got " + data['team_member_id']);
        }

        return true;
    }


}



/**
 * A pointer to the next page of `EmployeeWage` results to fetch.
 * @member {String} cursor
 */
ListTeamMemberWagesRequest.prototype['cursor'] = undefined;

/**
 * The maximum number of `TeamMemberWage` results to return per page. The number can range between 1 and 200. The default is 200.
 * @member {Number} limit
 */
ListTeamMemberWagesRequest.prototype['limit'] = undefined;

/**
 * Filter the returned wages to only those that are associated with the specified team member.
 * @member {String} team_member_id
 */
ListTeamMemberWagesRequest.prototype['team_member_id'] = undefined;






export default ListTeamMemberWagesRequest;

