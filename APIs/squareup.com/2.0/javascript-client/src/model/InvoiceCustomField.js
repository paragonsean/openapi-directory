/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InvoiceCustomField model module.
 * @module model/InvoiceCustomField
 * @version 2.0
 */
class InvoiceCustomField {
    /**
     * Constructs a new <code>InvoiceCustomField</code>.
     * An additional seller-defined and customer-facing field to include on the invoice. For more information,  see [Custom fields](https://developer.squareup.com/docs/invoices-api/overview#custom-fields).  Adding custom fields to an invoice requires an  [Invoices Plus subscription](https://developer.squareup.com/docs/invoices-api/overview#invoices-plus-subscription).
     * @alias module:model/InvoiceCustomField
     */
    constructor() { 
        
        InvoiceCustomField.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InvoiceCustomField</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InvoiceCustomField} obj Optional instance to populate.
     * @return {module:model/InvoiceCustomField} The populated <code>InvoiceCustomField</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InvoiceCustomField();

            if (data.hasOwnProperty('label')) {
                obj['label'] = ApiClient.convertToType(data['label'], 'String');
            }
            if (data.hasOwnProperty('placement')) {
                obj['placement'] = ApiClient.convertToType(data['placement'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InvoiceCustomField</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InvoiceCustomField</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['label'] && !(typeof data['label'] === 'string' || data['label'] instanceof String)) {
            throw new Error("Expected the field `label` to be a primitive type in the JSON string but got " + data['label']);
        }
        // ensure the json data is a string
        if (data['placement'] && !(typeof data['placement'] === 'string' || data['placement'] instanceof String)) {
            throw new Error("Expected the field `placement` to be a primitive type in the JSON string but got " + data['placement']);
        }
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }

        return true;
    }


}



/**
 * The label or title of the custom field. This field is required for a custom field.
 * @member {String} label
 */
InvoiceCustomField.prototype['label'] = undefined;

/**
 * The location of the custom field on the invoice. This field is required for a custom field.
 * @member {String} placement
 */
InvoiceCustomField.prototype['placement'] = undefined;

/**
 * The text of the custom field. If omitted, only the label is rendered.
 * @member {String} value
 */
InvoiceCustomField.prototype['value'] = undefined;






export default InvoiceCustomField;

