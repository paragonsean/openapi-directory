/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RevokeTokenRequest model module.
 * @module model/RevokeTokenRequest
 * @version 2.0
 */
class RevokeTokenRequest {
    /**
     * Constructs a new <code>RevokeTokenRequest</code>.
     * 
     * @alias module:model/RevokeTokenRequest
     */
    constructor() { 
        
        RevokeTokenRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RevokeTokenRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RevokeTokenRequest} obj Optional instance to populate.
     * @return {module:model/RevokeTokenRequest} The populated <code>RevokeTokenRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RevokeTokenRequest();

            if (data.hasOwnProperty('access_token')) {
                obj['access_token'] = ApiClient.convertToType(data['access_token'], 'String');
            }
            if (data.hasOwnProperty('client_id')) {
                obj['client_id'] = ApiClient.convertToType(data['client_id'], 'String');
            }
            if (data.hasOwnProperty('merchant_id')) {
                obj['merchant_id'] = ApiClient.convertToType(data['merchant_id'], 'String');
            }
            if (data.hasOwnProperty('revoke_only_access_token')) {
                obj['revoke_only_access_token'] = ApiClient.convertToType(data['revoke_only_access_token'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RevokeTokenRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RevokeTokenRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['access_token'] && !(typeof data['access_token'] === 'string' || data['access_token'] instanceof String)) {
            throw new Error("Expected the field `access_token` to be a primitive type in the JSON string but got " + data['access_token']);
        }
        // ensure the json data is a string
        if (data['client_id'] && !(typeof data['client_id'] === 'string' || data['client_id'] instanceof String)) {
            throw new Error("Expected the field `client_id` to be a primitive type in the JSON string but got " + data['client_id']);
        }
        // ensure the json data is a string
        if (data['merchant_id'] && !(typeof data['merchant_id'] === 'string' || data['merchant_id'] instanceof String)) {
            throw new Error("Expected the field `merchant_id` to be a primitive type in the JSON string but got " + data['merchant_id']);
        }

        return true;
    }


}



/**
 * The access token of the merchant whose token you want to revoke. Do not provide a value for merchant_id if you provide this parameter.
 * @member {String} access_token
 */
RevokeTokenRequest.prototype['access_token'] = undefined;

/**
 * The Square issued ID for your application, available from the [developer dashboard](https://developer.squareup.com/apps).
 * @member {String} client_id
 */
RevokeTokenRequest.prototype['client_id'] = undefined;

/**
 * The ID of the merchant whose token you want to revoke. Do not provide a value for access_token if you provide this parameter.
 * @member {String} merchant_id
 */
RevokeTokenRequest.prototype['merchant_id'] = undefined;

/**
 * If `true`, terminate the given single access token, but do not terminate the entire authorization. Default: `false`
 * @member {Boolean} revoke_only_access_token
 */
RevokeTokenRequest.prototype['revoke_only_access_token'] = undefined;






export default RevokeTokenRequest;

