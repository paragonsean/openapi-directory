/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GiftCardActivityActivate from './GiftCardActivityActivate';
import GiftCardActivityAdjustDecrement from './GiftCardActivityAdjustDecrement';
import GiftCardActivityAdjustIncrement from './GiftCardActivityAdjustIncrement';
import GiftCardActivityBlock from './GiftCardActivityBlock';
import GiftCardActivityClearBalance from './GiftCardActivityClearBalance';
import GiftCardActivityDeactivate from './GiftCardActivityDeactivate';
import GiftCardActivityImport from './GiftCardActivityImport';
import GiftCardActivityImportReversal from './GiftCardActivityImportReversal';
import GiftCardActivityLoad from './GiftCardActivityLoad';
import GiftCardActivityRedeem from './GiftCardActivityRedeem';
import GiftCardActivityRefund from './GiftCardActivityRefund';
import GiftCardActivityUnblock from './GiftCardActivityUnblock';
import GiftCardActivityUnlinkedActivityRefund from './GiftCardActivityUnlinkedActivityRefund';
import Money from './Money';

/**
 * The GiftCardActivity model module.
 * @module model/GiftCardActivity
 * @version 2.0
 */
class GiftCardActivity {
    /**
     * Constructs a new <code>GiftCardActivity</code>.
     * Represents an action performed on a gift card that affects its state or balance.
     * @alias module:model/GiftCardActivity
     * @param locationId {String} The ID of the location at which the activity occurred.
     * @param type {Object} 
     */
    constructor(locationId, type) { 
        
        GiftCardActivity.initialize(this, locationId, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, locationId, type) { 
        obj['location_id'] = locationId;
        obj['type'] = type;
    }

    /**
     * Constructs a <code>GiftCardActivity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GiftCardActivity} obj Optional instance to populate.
     * @return {module:model/GiftCardActivity} The populated <code>GiftCardActivity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GiftCardActivity();

            if (data.hasOwnProperty('activate_activity_details')) {
                obj['activate_activity_details'] = GiftCardActivityActivate.constructFromObject(data['activate_activity_details']);
            }
            if (data.hasOwnProperty('adjust_decrement_activity_details')) {
                obj['adjust_decrement_activity_details'] = GiftCardActivityAdjustDecrement.constructFromObject(data['adjust_decrement_activity_details']);
            }
            if (data.hasOwnProperty('adjust_increment_activity_details')) {
                obj['adjust_increment_activity_details'] = GiftCardActivityAdjustIncrement.constructFromObject(data['adjust_increment_activity_details']);
            }
            if (data.hasOwnProperty('block_activity_details')) {
                obj['block_activity_details'] = GiftCardActivityBlock.constructFromObject(data['block_activity_details']);
            }
            if (data.hasOwnProperty('clear_balance_activity_details')) {
                obj['clear_balance_activity_details'] = GiftCardActivityClearBalance.constructFromObject(data['clear_balance_activity_details']);
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('deactivate_activity_details')) {
                obj['deactivate_activity_details'] = GiftCardActivityDeactivate.constructFromObject(data['deactivate_activity_details']);
            }
            if (data.hasOwnProperty('gift_card_balance_money')) {
                obj['gift_card_balance_money'] = Money.constructFromObject(data['gift_card_balance_money']);
            }
            if (data.hasOwnProperty('gift_card_gan')) {
                obj['gift_card_gan'] = ApiClient.convertToType(data['gift_card_gan'], 'String');
            }
            if (data.hasOwnProperty('gift_card_id')) {
                obj['gift_card_id'] = ApiClient.convertToType(data['gift_card_id'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('import_activity_details')) {
                obj['import_activity_details'] = GiftCardActivityImport.constructFromObject(data['import_activity_details']);
            }
            if (data.hasOwnProperty('import_reversal_activity_details')) {
                obj['import_reversal_activity_details'] = GiftCardActivityImportReversal.constructFromObject(data['import_reversal_activity_details']);
            }
            if (data.hasOwnProperty('load_activity_details')) {
                obj['load_activity_details'] = GiftCardActivityLoad.constructFromObject(data['load_activity_details']);
            }
            if (data.hasOwnProperty('location_id')) {
                obj['location_id'] = ApiClient.convertToType(data['location_id'], 'String');
            }
            if (data.hasOwnProperty('redeem_activity_details')) {
                obj['redeem_activity_details'] = GiftCardActivityRedeem.constructFromObject(data['redeem_activity_details']);
            }
            if (data.hasOwnProperty('refund_activity_details')) {
                obj['refund_activity_details'] = GiftCardActivityRefund.constructFromObject(data['refund_activity_details']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], Object);
            }
            if (data.hasOwnProperty('unblock_activity_details')) {
                obj['unblock_activity_details'] = GiftCardActivityUnblock.constructFromObject(data['unblock_activity_details']);
            }
            if (data.hasOwnProperty('unlinked_activity_refund_activity_details')) {
                obj['unlinked_activity_refund_activity_details'] = GiftCardActivityUnlinkedActivityRefund.constructFromObject(data['unlinked_activity_refund_activity_details']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GiftCardActivity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GiftCardActivity</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GiftCardActivity.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `activate_activity_details`
        if (data['activate_activity_details']) { // data not null
          GiftCardActivityActivate.validateJSON(data['activate_activity_details']);
        }
        // validate the optional field `adjust_decrement_activity_details`
        if (data['adjust_decrement_activity_details']) { // data not null
          GiftCardActivityAdjustDecrement.validateJSON(data['adjust_decrement_activity_details']);
        }
        // validate the optional field `adjust_increment_activity_details`
        if (data['adjust_increment_activity_details']) { // data not null
          GiftCardActivityAdjustIncrement.validateJSON(data['adjust_increment_activity_details']);
        }
        // validate the optional field `block_activity_details`
        if (data['block_activity_details']) { // data not null
          GiftCardActivityBlock.validateJSON(data['block_activity_details']);
        }
        // validate the optional field `clear_balance_activity_details`
        if (data['clear_balance_activity_details']) { // data not null
          GiftCardActivityClearBalance.validateJSON(data['clear_balance_activity_details']);
        }
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        // validate the optional field `deactivate_activity_details`
        if (data['deactivate_activity_details']) { // data not null
          GiftCardActivityDeactivate.validateJSON(data['deactivate_activity_details']);
        }
        // validate the optional field `gift_card_balance_money`
        if (data['gift_card_balance_money']) { // data not null
          Money.validateJSON(data['gift_card_balance_money']);
        }
        // ensure the json data is a string
        if (data['gift_card_gan'] && !(typeof data['gift_card_gan'] === 'string' || data['gift_card_gan'] instanceof String)) {
            throw new Error("Expected the field `gift_card_gan` to be a primitive type in the JSON string but got " + data['gift_card_gan']);
        }
        // ensure the json data is a string
        if (data['gift_card_id'] && !(typeof data['gift_card_id'] === 'string' || data['gift_card_id'] instanceof String)) {
            throw new Error("Expected the field `gift_card_id` to be a primitive type in the JSON string but got " + data['gift_card_id']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `import_activity_details`
        if (data['import_activity_details']) { // data not null
          GiftCardActivityImport.validateJSON(data['import_activity_details']);
        }
        // validate the optional field `import_reversal_activity_details`
        if (data['import_reversal_activity_details']) { // data not null
          GiftCardActivityImportReversal.validateJSON(data['import_reversal_activity_details']);
        }
        // validate the optional field `load_activity_details`
        if (data['load_activity_details']) { // data not null
          GiftCardActivityLoad.validateJSON(data['load_activity_details']);
        }
        // ensure the json data is a string
        if (data['location_id'] && !(typeof data['location_id'] === 'string' || data['location_id'] instanceof String)) {
            throw new Error("Expected the field `location_id` to be a primitive type in the JSON string but got " + data['location_id']);
        }
        // validate the optional field `redeem_activity_details`
        if (data['redeem_activity_details']) { // data not null
          GiftCardActivityRedeem.validateJSON(data['redeem_activity_details']);
        }
        // validate the optional field `refund_activity_details`
        if (data['refund_activity_details']) { // data not null
          GiftCardActivityRefund.validateJSON(data['refund_activity_details']);
        }
        // validate the optional field `unblock_activity_details`
        if (data['unblock_activity_details']) { // data not null
          GiftCardActivityUnblock.validateJSON(data['unblock_activity_details']);
        }
        // validate the optional field `unlinked_activity_refund_activity_details`
        if (data['unlinked_activity_refund_activity_details']) { // data not null
          GiftCardActivityUnlinkedActivityRefund.validateJSON(data['unlinked_activity_refund_activity_details']);
        }

        return true;
    }


}

GiftCardActivity.RequiredProperties = ["location_id", "type"];

/**
 * @member {module:model/GiftCardActivityActivate} activate_activity_details
 */
GiftCardActivity.prototype['activate_activity_details'] = undefined;

/**
 * @member {module:model/GiftCardActivityAdjustDecrement} adjust_decrement_activity_details
 */
GiftCardActivity.prototype['adjust_decrement_activity_details'] = undefined;

/**
 * @member {module:model/GiftCardActivityAdjustIncrement} adjust_increment_activity_details
 */
GiftCardActivity.prototype['adjust_increment_activity_details'] = undefined;

/**
 * @member {module:model/GiftCardActivityBlock} block_activity_details
 */
GiftCardActivity.prototype['block_activity_details'] = undefined;

/**
 * @member {module:model/GiftCardActivityClearBalance} clear_balance_activity_details
 */
GiftCardActivity.prototype['clear_balance_activity_details'] = undefined;

/**
 * The timestamp when the gift card activity was created, in RFC 3339 format.
 * @member {String} created_at
 */
GiftCardActivity.prototype['created_at'] = undefined;

/**
 * @member {module:model/GiftCardActivityDeactivate} deactivate_activity_details
 */
GiftCardActivity.prototype['deactivate_activity_details'] = undefined;

/**
 * @member {module:model/Money} gift_card_balance_money
 */
GiftCardActivity.prototype['gift_card_balance_money'] = undefined;

/**
 * The gift card GAN. The GAN is not required if `gift_card_id` is present.
 * @member {String} gift_card_gan
 */
GiftCardActivity.prototype['gift_card_gan'] = undefined;

/**
 * The gift card ID. The ID is not required if a GAN is present.
 * @member {String} gift_card_id
 */
GiftCardActivity.prototype['gift_card_id'] = undefined;

/**
 * The unique ID of the gift card activity.
 * @member {String} id
 */
GiftCardActivity.prototype['id'] = undefined;

/**
 * @member {module:model/GiftCardActivityImport} import_activity_details
 */
GiftCardActivity.prototype['import_activity_details'] = undefined;

/**
 * @member {module:model/GiftCardActivityImportReversal} import_reversal_activity_details
 */
GiftCardActivity.prototype['import_reversal_activity_details'] = undefined;

/**
 * @member {module:model/GiftCardActivityLoad} load_activity_details
 */
GiftCardActivity.prototype['load_activity_details'] = undefined;

/**
 * The ID of the location at which the activity occurred.
 * @member {String} location_id
 */
GiftCardActivity.prototype['location_id'] = undefined;

/**
 * @member {module:model/GiftCardActivityRedeem} redeem_activity_details
 */
GiftCardActivity.prototype['redeem_activity_details'] = undefined;

/**
 * @member {module:model/GiftCardActivityRefund} refund_activity_details
 */
GiftCardActivity.prototype['refund_activity_details'] = undefined;

/**
 * @member {Object} type
 */
GiftCardActivity.prototype['type'] = undefined;

/**
 * @member {module:model/GiftCardActivityUnblock} unblock_activity_details
 */
GiftCardActivity.prototype['unblock_activity_details'] = undefined;

/**
 * @member {module:model/GiftCardActivityUnlinkedActivityRefund} unlinked_activity_refund_activity_details
 */
GiftCardActivity.prototype['unlinked_activity_refund_activity_details'] = undefined;






export default GiftCardActivity;

