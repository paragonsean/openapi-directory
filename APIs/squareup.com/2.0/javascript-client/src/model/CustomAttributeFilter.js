/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Range from './Range';

/**
 * The CustomAttributeFilter model module.
 * @module model/CustomAttributeFilter
 * @version 2.0
 */
class CustomAttributeFilter {
    /**
     * Constructs a new <code>CustomAttributeFilter</code>.
     * Supported custom attribute query expressions for calling the [SearchCatalogItems](https://developer.squareup.com/reference/square_2021-08-18/catalog-api/search-catalog-items) endpoint to search for items or item variations.
     * @alias module:model/CustomAttributeFilter
     */
    constructor() { 
        
        CustomAttributeFilter.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CustomAttributeFilter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomAttributeFilter} obj Optional instance to populate.
     * @return {module:model/CustomAttributeFilter} The populated <code>CustomAttributeFilter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomAttributeFilter();

            if (data.hasOwnProperty('bool_filter')) {
                obj['bool_filter'] = ApiClient.convertToType(data['bool_filter'], 'Boolean');
            }
            if (data.hasOwnProperty('custom_attribute_definition_id')) {
                obj['custom_attribute_definition_id'] = ApiClient.convertToType(data['custom_attribute_definition_id'], 'String');
            }
            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('number_filter')) {
                obj['number_filter'] = Range.constructFromObject(data['number_filter']);
            }
            if (data.hasOwnProperty('selection_uids_filter')) {
                obj['selection_uids_filter'] = ApiClient.convertToType(data['selection_uids_filter'], ['String']);
            }
            if (data.hasOwnProperty('string_filter')) {
                obj['string_filter'] = ApiClient.convertToType(data['string_filter'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CustomAttributeFilter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CustomAttributeFilter</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['custom_attribute_definition_id'] && !(typeof data['custom_attribute_definition_id'] === 'string' || data['custom_attribute_definition_id'] instanceof String)) {
            throw new Error("Expected the field `custom_attribute_definition_id` to be a primitive type in the JSON string but got " + data['custom_attribute_definition_id']);
        }
        // ensure the json data is a string
        if (data['key'] && !(typeof data['key'] === 'string' || data['key'] instanceof String)) {
            throw new Error("Expected the field `key` to be a primitive type in the JSON string but got " + data['key']);
        }
        // validate the optional field `number_filter`
        if (data['number_filter']) { // data not null
          Range.validateJSON(data['number_filter']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['selection_uids_filter'])) {
            throw new Error("Expected the field `selection_uids_filter` to be an array in the JSON data but got " + data['selection_uids_filter']);
        }
        // ensure the json data is a string
        if (data['string_filter'] && !(typeof data['string_filter'] === 'string' || data['string_filter'] instanceof String)) {
            throw new Error("Expected the field `string_filter` to be a primitive type in the JSON string but got " + data['string_filter']);
        }

        return true;
    }


}



/**
 * A query expression to filter items or item variations by matching their custom attributes' `boolean_value` property values against the specified Boolean expression.
 * @member {Boolean} bool_filter
 */
CustomAttributeFilter.prototype['bool_filter'] = undefined;

/**
 * A query expression to filter items or item variations by matching their custom attributes' `custom_attribute_definition_id` property value against the the specified id.
 * @member {String} custom_attribute_definition_id
 */
CustomAttributeFilter.prototype['custom_attribute_definition_id'] = undefined;

/**
 * A query expression to filter items or item variations by matching their custom attributes' `key` property value against the specified key.
 * @member {String} key
 */
CustomAttributeFilter.prototype['key'] = undefined;

/**
 * @member {module:model/Range} number_filter
 */
CustomAttributeFilter.prototype['number_filter'] = undefined;

/**
 * A query expression to filter items or item variations by matching  their custom attributes' `selection_uid_values` values against the specified selection uids.
 * @member {Array.<String>} selection_uids_filter
 */
CustomAttributeFilter.prototype['selection_uids_filter'] = undefined;

/**
 * A query expression to filter items or item variations by matching their custom attributes' `string_value`  property value against the specified text.
 * @member {String} string_filter
 */
CustomAttributeFilter.prototype['string_filter'] = undefined;






export default CustomAttributeFilter;

