/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ListCardsRequest model module.
 * @module model/ListCardsRequest
 * @version 2.0
 */
class ListCardsRequest {
    /**
     * Constructs a new <code>ListCardsRequest</code>.
     * Retrieves details for a specific Card. Accessible via HTTP requests at GET https://connect.squareup.com/v2/cards
     * @alias module:model/ListCardsRequest
     */
    constructor() { 
        
        ListCardsRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ListCardsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListCardsRequest} obj Optional instance to populate.
     * @return {module:model/ListCardsRequest} The populated <code>ListCardsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListCardsRequest();

            if (data.hasOwnProperty('cursor')) {
                obj['cursor'] = ApiClient.convertToType(data['cursor'], 'String');
            }
            if (data.hasOwnProperty('customer_id')) {
                obj['customer_id'] = ApiClient.convertToType(data['customer_id'], 'String');
            }
            if (data.hasOwnProperty('include_disabled')) {
                obj['include_disabled'] = ApiClient.convertToType(data['include_disabled'], 'Boolean');
            }
            if (data.hasOwnProperty('reference_id')) {
                obj['reference_id'] = ApiClient.convertToType(data['reference_id'], 'String');
            }
            if (data.hasOwnProperty('sort_order')) {
                obj['sort_order'] = ApiClient.convertToType(data['sort_order'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListCardsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListCardsRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['cursor'] && !(typeof data['cursor'] === 'string' || data['cursor'] instanceof String)) {
            throw new Error("Expected the field `cursor` to be a primitive type in the JSON string but got " + data['cursor']);
        }
        // ensure the json data is a string
        if (data['customer_id'] && !(typeof data['customer_id'] === 'string' || data['customer_id'] instanceof String)) {
            throw new Error("Expected the field `customer_id` to be a primitive type in the JSON string but got " + data['customer_id']);
        }
        // ensure the json data is a string
        if (data['reference_id'] && !(typeof data['reference_id'] === 'string' || data['reference_id'] instanceof String)) {
            throw new Error("Expected the field `reference_id` to be a primitive type in the JSON string but got " + data['reference_id']);
        }
        // ensure the json data is a string
        if (data['sort_order'] && !(typeof data['sort_order'] === 'string' || data['sort_order'] instanceof String)) {
            throw new Error("Expected the field `sort_order` to be a primitive type in the JSON string but got " + data['sort_order']);
        }

        return true;
    }


}



/**
 * A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for your original query.  See [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information.
 * @member {String} cursor
 */
ListCardsRequest.prototype['cursor'] = undefined;

/**
 * Limit results to cards associated with the customer supplied. By default, all cards owned by the merchant are returned.
 * @member {String} customer_id
 */
ListCardsRequest.prototype['customer_id'] = undefined;

/**
 * Includes disabled cards. By default, all enabled cards owned by the merchant are returned.
 * @member {Boolean} include_disabled
 */
ListCardsRequest.prototype['include_disabled'] = undefined;

/**
 * Limit results to cards associated with the reference_id supplied.
 * @member {String} reference_id
 */
ListCardsRequest.prototype['reference_id'] = undefined;

/**
 * Sorts the returned list by when the card was created with the specified order. This field defaults to ASC.
 * @member {String} sort_order
 */
ListCardsRequest.prototype['sort_order'] = undefined;






export default ListCardsRequest;

