/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TeamMemberBookingProfile model module.
 * @module model/TeamMemberBookingProfile
 * @version 2.0
 */
class TeamMemberBookingProfile {
    /**
     * Constructs a new <code>TeamMemberBookingProfile</code>.
     * The booking profile of a seller&#39;s team member, including the team member&#39;s ID, display name, description and whether the team member can be booked as a service provider.
     * @alias module:model/TeamMemberBookingProfile
     */
    constructor() { 
        
        TeamMemberBookingProfile.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TeamMemberBookingProfile</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TeamMemberBookingProfile} obj Optional instance to populate.
     * @return {module:model/TeamMemberBookingProfile} The populated <code>TeamMemberBookingProfile</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TeamMemberBookingProfile();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('display_name')) {
                obj['display_name'] = ApiClient.convertToType(data['display_name'], 'String');
            }
            if (data.hasOwnProperty('is_bookable')) {
                obj['is_bookable'] = ApiClient.convertToType(data['is_bookable'], 'Boolean');
            }
            if (data.hasOwnProperty('profile_image_url')) {
                obj['profile_image_url'] = ApiClient.convertToType(data['profile_image_url'], 'String');
            }
            if (data.hasOwnProperty('team_member_id')) {
                obj['team_member_id'] = ApiClient.convertToType(data['team_member_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TeamMemberBookingProfile</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TeamMemberBookingProfile</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['display_name'] && !(typeof data['display_name'] === 'string' || data['display_name'] instanceof String)) {
            throw new Error("Expected the field `display_name` to be a primitive type in the JSON string but got " + data['display_name']);
        }
        // ensure the json data is a string
        if (data['profile_image_url'] && !(typeof data['profile_image_url'] === 'string' || data['profile_image_url'] instanceof String)) {
            throw new Error("Expected the field `profile_image_url` to be a primitive type in the JSON string but got " + data['profile_image_url']);
        }
        // ensure the json data is a string
        if (data['team_member_id'] && !(typeof data['team_member_id'] === 'string' || data['team_member_id'] instanceof String)) {
            throw new Error("Expected the field `team_member_id` to be a primitive type in the JSON string but got " + data['team_member_id']);
        }

        return true;
    }


}



/**
 * The description of the team member.
 * @member {String} description
 */
TeamMemberBookingProfile.prototype['description'] = undefined;

/**
 * The display name of the team member.
 * @member {String} display_name
 */
TeamMemberBookingProfile.prototype['display_name'] = undefined;

/**
 * Indicates whether the team member can be booked through the Bookings API or the seller's online booking channel or site (`true) or not (`false`).
 * @member {Boolean} is_bookable
 */
TeamMemberBookingProfile.prototype['is_bookable'] = undefined;

/**
 * The URL of the team member's image for the bookings profile.
 * @member {String} profile_image_url
 */
TeamMemberBookingProfile.prototype['profile_image_url'] = undefined;

/**
 * The ID of the [TeamMember](https://developer.squareup.com/reference/square_2021-08-18/objects/TeamMember) object for the team member associated with the booking profile.
 * @member {String} team_member_id
 */
TeamMemberBookingProfile.prototype['team_member_id'] = undefined;






export default TeamMemberBookingProfile;

