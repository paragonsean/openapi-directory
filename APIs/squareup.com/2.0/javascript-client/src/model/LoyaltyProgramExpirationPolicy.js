/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LoyaltyProgramExpirationPolicy model module.
 * @module model/LoyaltyProgramExpirationPolicy
 * @version 2.0
 */
class LoyaltyProgramExpirationPolicy {
    /**
     * Constructs a new <code>LoyaltyProgramExpirationPolicy</code>.
     * Describes when the loyalty program expires.
     * @alias module:model/LoyaltyProgramExpirationPolicy
     * @param expirationDuration {String} The number of months before points expire, in `P[n]M` RFC 3339 duration format. For example, a value of `P12M` represents a duration of 12 months.  Points are valid through the last day of the month in which they are scheduled to expire. For example, with a  `P12M` duration, points earned on July 6, 2020 expire on August 1, 2021.
     */
    constructor(expirationDuration) { 
        
        LoyaltyProgramExpirationPolicy.initialize(this, expirationDuration);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, expirationDuration) { 
        obj['expiration_duration'] = expirationDuration;
    }

    /**
     * Constructs a <code>LoyaltyProgramExpirationPolicy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LoyaltyProgramExpirationPolicy} obj Optional instance to populate.
     * @return {module:model/LoyaltyProgramExpirationPolicy} The populated <code>LoyaltyProgramExpirationPolicy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LoyaltyProgramExpirationPolicy();

            if (data.hasOwnProperty('expiration_duration')) {
                obj['expiration_duration'] = ApiClient.convertToType(data['expiration_duration'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LoyaltyProgramExpirationPolicy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LoyaltyProgramExpirationPolicy</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of LoyaltyProgramExpirationPolicy.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['expiration_duration'] && !(typeof data['expiration_duration'] === 'string' || data['expiration_duration'] instanceof String)) {
            throw new Error("Expected the field `expiration_duration` to be a primitive type in the JSON string but got " + data['expiration_duration']);
        }

        return true;
    }


}

LoyaltyProgramExpirationPolicy.RequiredProperties = ["expiration_duration"];

/**
 * The number of months before points expire, in `P[n]M` RFC 3339 duration format. For example, a value of `P12M` represents a duration of 12 months.  Points are valid through the last day of the month in which they are scheduled to expire. For example, with a  `P12M` duration, points earned on July 6, 2020 expire on August 1, 2021.
 * @member {String} expiration_duration
 */
LoyaltyProgramExpirationPolicy.prototype['expiration_duration'] = undefined;






export default LoyaltyProgramExpirationPolicy;

