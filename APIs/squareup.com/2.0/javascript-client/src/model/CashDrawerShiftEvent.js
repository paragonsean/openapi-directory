/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Money from './Money';

/**
 * The CashDrawerShiftEvent model module.
 * @module model/CashDrawerShiftEvent
 * @version 2.0
 */
class CashDrawerShiftEvent {
    /**
     * Constructs a new <code>CashDrawerShiftEvent</code>.
     * 
     * @alias module:model/CashDrawerShiftEvent
     */
    constructor() { 
        
        CashDrawerShiftEvent.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CashDrawerShiftEvent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CashDrawerShiftEvent} obj Optional instance to populate.
     * @return {module:model/CashDrawerShiftEvent} The populated <code>CashDrawerShiftEvent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CashDrawerShiftEvent();

            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('employee_id')) {
                obj['employee_id'] = ApiClient.convertToType(data['employee_id'], 'String');
            }
            if (data.hasOwnProperty('event_money')) {
                obj['event_money'] = Money.constructFromObject(data['event_money']);
            }
            if (data.hasOwnProperty('event_type')) {
                obj['event_type'] = ApiClient.convertToType(data['event_type'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CashDrawerShiftEvent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CashDrawerShiftEvent</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['employee_id'] && !(typeof data['employee_id'] === 'string' || data['employee_id'] instanceof String)) {
            throw new Error("Expected the field `employee_id` to be a primitive type in the JSON string but got " + data['employee_id']);
        }
        // validate the optional field `event_money`
        if (data['event_money']) { // data not null
          Money.validateJSON(data['event_money']);
        }
        // ensure the json data is a string
        if (data['event_type'] && !(typeof data['event_type'] === 'string' || data['event_type'] instanceof String)) {
            throw new Error("Expected the field `event_type` to be a primitive type in the JSON string but got " + data['event_type']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }

        return true;
    }


}



/**
 * The event time in ISO 8601 format.
 * @member {String} created_at
 */
CashDrawerShiftEvent.prototype['created_at'] = undefined;

/**
 * An optional description of the event, entered by the employee that created the event.
 * @member {String} description
 */
CashDrawerShiftEvent.prototype['description'] = undefined;

/**
 * The ID of the employee that created the event.
 * @member {String} employee_id
 */
CashDrawerShiftEvent.prototype['employee_id'] = undefined;

/**
 * @member {module:model/Money} event_money
 */
CashDrawerShiftEvent.prototype['event_money'] = undefined;

/**
 * The type of cash drawer shift event.
 * @member {String} event_type
 */
CashDrawerShiftEvent.prototype['event_type'] = undefined;

/**
 * The unique ID of the event.
 * @member {String} id
 */
CashDrawerShiftEvent.prototype['id'] = undefined;






export default CashDrawerShiftEvent;

