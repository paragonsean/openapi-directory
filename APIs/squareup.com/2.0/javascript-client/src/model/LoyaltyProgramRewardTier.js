/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CatalogObjectReference from './CatalogObjectReference';
import LoyaltyProgramRewardDefinition from './LoyaltyProgramRewardDefinition';

/**
 * The LoyaltyProgramRewardTier model module.
 * @module model/LoyaltyProgramRewardTier
 * @version 2.0
 */
class LoyaltyProgramRewardTier {
    /**
     * Constructs a new <code>LoyaltyProgramRewardTier</code>.
     * Represents a reward tier in a loyalty program. A reward tier defines how buyers can redeem points for a reward, such as the number of points required and the value and scope of the discount. A loyalty program can offer multiple reward tiers.
     * @alias module:model/LoyaltyProgramRewardTier
     * @param createdAt {String} The timestamp when the reward tier was created, in RFC 3339 format.
     * @param definition {module:model/LoyaltyProgramRewardDefinition} 
     * @param id {String} The Square-assigned ID of the reward tier.
     * @param name {String} The name of the reward tier.
     * @param points {Number} The points exchanged for the reward tier.
     */
    constructor(createdAt, definition, id, name, points) { 
        
        LoyaltyProgramRewardTier.initialize(this, createdAt, definition, id, name, points);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, createdAt, definition, id, name, points) { 
        obj['created_at'] = createdAt;
        obj['definition'] = definition;
        obj['id'] = id;
        obj['name'] = name;
        obj['points'] = points;
    }

    /**
     * Constructs a <code>LoyaltyProgramRewardTier</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LoyaltyProgramRewardTier} obj Optional instance to populate.
     * @return {module:model/LoyaltyProgramRewardTier} The populated <code>LoyaltyProgramRewardTier</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LoyaltyProgramRewardTier();

            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('definition')) {
                obj['definition'] = LoyaltyProgramRewardDefinition.constructFromObject(data['definition']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('points')) {
                obj['points'] = ApiClient.convertToType(data['points'], 'Number');
            }
            if (data.hasOwnProperty('pricing_rule_reference')) {
                obj['pricing_rule_reference'] = CatalogObjectReference.constructFromObject(data['pricing_rule_reference']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LoyaltyProgramRewardTier</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LoyaltyProgramRewardTier</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of LoyaltyProgramRewardTier.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        // validate the optional field `definition`
        if (data['definition']) { // data not null
          LoyaltyProgramRewardDefinition.validateJSON(data['definition']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `pricing_rule_reference`
        if (data['pricing_rule_reference']) { // data not null
          CatalogObjectReference.validateJSON(data['pricing_rule_reference']);
        }

        return true;
    }


}

LoyaltyProgramRewardTier.RequiredProperties = ["created_at", "definition", "id", "name", "points"];

/**
 * The timestamp when the reward tier was created, in RFC 3339 format.
 * @member {String} created_at
 */
LoyaltyProgramRewardTier.prototype['created_at'] = undefined;

/**
 * @member {module:model/LoyaltyProgramRewardDefinition} definition
 */
LoyaltyProgramRewardTier.prototype['definition'] = undefined;

/**
 * The Square-assigned ID of the reward tier.
 * @member {String} id
 */
LoyaltyProgramRewardTier.prototype['id'] = undefined;

/**
 * The name of the reward tier.
 * @member {String} name
 */
LoyaltyProgramRewardTier.prototype['name'] = undefined;

/**
 * The points exchanged for the reward tier.
 * @member {Number} points
 */
LoyaltyProgramRewardTier.prototype['points'] = undefined;

/**
 * @member {module:model/CatalogObjectReference} pricing_rule_reference
 */
LoyaltyProgramRewardTier.prototype['pricing_rule_reference'] = undefined;






export default LoyaltyProgramRewardTier;

