/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RetrieveCatalogObjectRequest model module.
 * @module model/RetrieveCatalogObjectRequest
 * @version 2.0
 */
class RetrieveCatalogObjectRequest {
    /**
     * Constructs a new <code>RetrieveCatalogObjectRequest</code>.
     * 
     * @alias module:model/RetrieveCatalogObjectRequest
     */
    constructor() { 
        
        RetrieveCatalogObjectRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RetrieveCatalogObjectRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RetrieveCatalogObjectRequest} obj Optional instance to populate.
     * @return {module:model/RetrieveCatalogObjectRequest} The populated <code>RetrieveCatalogObjectRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RetrieveCatalogObjectRequest();

            if (data.hasOwnProperty('catalog_version')) {
                obj['catalog_version'] = ApiClient.convertToType(data['catalog_version'], 'Number');
            }
            if (data.hasOwnProperty('include_related_objects')) {
                obj['include_related_objects'] = ApiClient.convertToType(data['include_related_objects'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RetrieveCatalogObjectRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RetrieveCatalogObjectRequest</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Requests objects as of a specific version of the catalog. This allows you to retrieve historical versions of objects. The value to retrieve a specific version of an object can be found in the version field of [CatalogObject](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject)s.
 * @member {Number} catalog_version
 */
RetrieveCatalogObjectRequest.prototype['catalog_version'] = undefined;

/**
 * If `true`, the response will include additional objects that are related to the requested object, as follows:  If the `object` field of the response contains a `CatalogItem`, its associated `CatalogCategory`, `CatalogTax`, `CatalogImage` and `CatalogModifierList` objects will be returned in the `related_objects` field of the response. If the `object` field of the response contains a `CatalogItemVariation`, its parent `CatalogItem` will be returned in the `related_objects` field of the response.  Default value: `false`
 * @member {Boolean} include_related_objects
 */
RetrieveCatalogObjectRequest.prototype['include_related_objects'] = undefined;






export default RetrieveCatalogObjectRequest;

