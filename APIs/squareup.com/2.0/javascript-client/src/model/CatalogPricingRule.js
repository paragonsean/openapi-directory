/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CatalogPricingRule model module.
 * @module model/CatalogPricingRule
 * @version 2.0
 */
class CatalogPricingRule {
    /**
     * Constructs a new <code>CatalogPricingRule</code>.
     * Defines how discounts are automatically applied to a set of items that match the pricing rule during the active time period.
     * @alias module:model/CatalogPricingRule
     */
    constructor() { 
        
        CatalogPricingRule.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CatalogPricingRule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CatalogPricingRule} obj Optional instance to populate.
     * @return {module:model/CatalogPricingRule} The populated <code>CatalogPricingRule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CatalogPricingRule();

            if (data.hasOwnProperty('apply_products_id')) {
                obj['apply_products_id'] = ApiClient.convertToType(data['apply_products_id'], 'String');
            }
            if (data.hasOwnProperty('customer_group_ids_any')) {
                obj['customer_group_ids_any'] = ApiClient.convertToType(data['customer_group_ids_any'], ['String']);
            }
            if (data.hasOwnProperty('discount_id')) {
                obj['discount_id'] = ApiClient.convertToType(data['discount_id'], 'String');
            }
            if (data.hasOwnProperty('exclude_products_id')) {
                obj['exclude_products_id'] = ApiClient.convertToType(data['exclude_products_id'], 'String');
            }
            if (data.hasOwnProperty('exclude_strategy')) {
                obj['exclude_strategy'] = ApiClient.convertToType(data['exclude_strategy'], 'String');
            }
            if (data.hasOwnProperty('match_products_id')) {
                obj['match_products_id'] = ApiClient.convertToType(data['match_products_id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('time_period_ids')) {
                obj['time_period_ids'] = ApiClient.convertToType(data['time_period_ids'], ['String']);
            }
            if (data.hasOwnProperty('valid_from_date')) {
                obj['valid_from_date'] = ApiClient.convertToType(data['valid_from_date'], 'String');
            }
            if (data.hasOwnProperty('valid_from_local_time')) {
                obj['valid_from_local_time'] = ApiClient.convertToType(data['valid_from_local_time'], 'String');
            }
            if (data.hasOwnProperty('valid_until_date')) {
                obj['valid_until_date'] = ApiClient.convertToType(data['valid_until_date'], 'String');
            }
            if (data.hasOwnProperty('valid_until_local_time')) {
                obj['valid_until_local_time'] = ApiClient.convertToType(data['valid_until_local_time'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CatalogPricingRule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CatalogPricingRule</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['apply_products_id'] && !(typeof data['apply_products_id'] === 'string' || data['apply_products_id'] instanceof String)) {
            throw new Error("Expected the field `apply_products_id` to be a primitive type in the JSON string but got " + data['apply_products_id']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['customer_group_ids_any'])) {
            throw new Error("Expected the field `customer_group_ids_any` to be an array in the JSON data but got " + data['customer_group_ids_any']);
        }
        // ensure the json data is a string
        if (data['discount_id'] && !(typeof data['discount_id'] === 'string' || data['discount_id'] instanceof String)) {
            throw new Error("Expected the field `discount_id` to be a primitive type in the JSON string but got " + data['discount_id']);
        }
        // ensure the json data is a string
        if (data['exclude_products_id'] && !(typeof data['exclude_products_id'] === 'string' || data['exclude_products_id'] instanceof String)) {
            throw new Error("Expected the field `exclude_products_id` to be a primitive type in the JSON string but got " + data['exclude_products_id']);
        }
        // ensure the json data is a string
        if (data['exclude_strategy'] && !(typeof data['exclude_strategy'] === 'string' || data['exclude_strategy'] instanceof String)) {
            throw new Error("Expected the field `exclude_strategy` to be a primitive type in the JSON string but got " + data['exclude_strategy']);
        }
        // ensure the json data is a string
        if (data['match_products_id'] && !(typeof data['match_products_id'] === 'string' || data['match_products_id'] instanceof String)) {
            throw new Error("Expected the field `match_products_id` to be a primitive type in the JSON string but got " + data['match_products_id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['time_period_ids'])) {
            throw new Error("Expected the field `time_period_ids` to be an array in the JSON data but got " + data['time_period_ids']);
        }
        // ensure the json data is a string
        if (data['valid_from_date'] && !(typeof data['valid_from_date'] === 'string' || data['valid_from_date'] instanceof String)) {
            throw new Error("Expected the field `valid_from_date` to be a primitive type in the JSON string but got " + data['valid_from_date']);
        }
        // ensure the json data is a string
        if (data['valid_from_local_time'] && !(typeof data['valid_from_local_time'] === 'string' || data['valid_from_local_time'] instanceof String)) {
            throw new Error("Expected the field `valid_from_local_time` to be a primitive type in the JSON string but got " + data['valid_from_local_time']);
        }
        // ensure the json data is a string
        if (data['valid_until_date'] && !(typeof data['valid_until_date'] === 'string' || data['valid_until_date'] instanceof String)) {
            throw new Error("Expected the field `valid_until_date` to be a primitive type in the JSON string but got " + data['valid_until_date']);
        }
        // ensure the json data is a string
        if (data['valid_until_local_time'] && !(typeof data['valid_until_local_time'] === 'string' || data['valid_until_local_time'] instanceof String)) {
            throw new Error("Expected the field `valid_until_local_time` to be a primitive type in the JSON string but got " + data['valid_until_local_time']);
        }

        return true;
    }


}



/**
 * __Deprecated__: Please use the `exclude_products_id` field to apply an exclude set instead. Exclude sets allow better control over quantity ranges and offer more flexibility for which matched items receive a discount.  `CatalogProductSet` to apply the pricing to. An apply rule matches within the subset of the cart that fits the match rules (the match set). An apply rule can only match once in the match set. If not supplied, the pricing will be applied to all products in the match set. Other products retain their base price, or a price generated by other rules.
 * @member {String} apply_products_id
 */
CatalogPricingRule.prototype['apply_products_id'] = undefined;

/**
 * A list of IDs of customer groups, the members of which are eligible for discounts specified in this pricing rule. Notice that a group ID is generated by the Customers API. If this field is not set, the specified discount applies to matched products sold to anyone whether the buyer has a customer profile created or not. If this `customer_group_ids_any` field is set, the specified discount applies only to matched products sold to customers belonging to the specified customer groups.
 * @member {Array.<String>} customer_group_ids_any
 */
CatalogPricingRule.prototype['customer_group_ids_any'] = undefined;

/**
 * Unique ID for the `CatalogDiscount` to take off the price of all matched items.
 * @member {String} discount_id
 */
CatalogPricingRule.prototype['discount_id'] = undefined;

/**
 * `CatalogProductSet` to exclude from the pricing rule. An exclude rule matches within the subset of the cart that fits the match rules (the match set). An exclude rule can only match once in the match set. If not supplied, the pricing will be applied to all products in the match set. Other products retain their base price, or a price generated by other rules.
 * @member {String} exclude_products_id
 */
CatalogPricingRule.prototype['exclude_products_id'] = undefined;

/**
 * If an `exclude_products_id` was given, controls which subset of matched products is excluded from any discounts.  Default value: `LEAST_EXPENSIVE`
 * @member {String} exclude_strategy
 */
CatalogPricingRule.prototype['exclude_strategy'] = undefined;

/**
 * Unique ID for the `CatalogProductSet` that will be matched by this rule. A match rule matches within the entire cart, and can match multiple times. This field will always be set.
 * @member {String} match_products_id
 */
CatalogPricingRule.prototype['match_products_id'] = undefined;

/**
 * User-defined name for the pricing rule. For example, \"Buy one get one free\" or \"10% off\".
 * @member {String} name
 */
CatalogPricingRule.prototype['name'] = undefined;

/**
 * A list of unique IDs for the catalog time periods when this pricing rule is in effect. If left unset, the pricing rule is always in effect.
 * @member {Array.<String>} time_period_ids
 */
CatalogPricingRule.prototype['time_period_ids'] = undefined;

/**
 * Represents the date the Pricing Rule is valid from. Represented in RFC 3339 full-date format (YYYY-MM-DD).
 * @member {String} valid_from_date
 */
CatalogPricingRule.prototype['valid_from_date'] = undefined;

/**
 * Represents the local time the pricing rule should be valid from. Represented in RFC 3339 partial-time format (HH:MM:SS). Partial seconds will be truncated.
 * @member {String} valid_from_local_time
 */
CatalogPricingRule.prototype['valid_from_local_time'] = undefined;

/**
 * Represents the date the Pricing Rule is valid until. Represented in RFC 3339 full-date format (YYYY-MM-DD).
 * @member {String} valid_until_date
 */
CatalogPricingRule.prototype['valid_until_date'] = undefined;

/**
 * Represents the local time the pricing rule should be valid until. Represented in RFC 3339 partial-time format (HH:MM:SS). Partial seconds will be truncated.
 * @member {String} valid_until_local_time
 */
CatalogPricingRule.prototype['valid_until_local_time'] = undefined;






export default CatalogPricingRule;

