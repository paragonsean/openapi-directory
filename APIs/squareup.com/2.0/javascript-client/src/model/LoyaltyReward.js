/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LoyaltyReward model module.
 * @module model/LoyaltyReward
 * @version 2.0
 */
class LoyaltyReward {
    /**
     * Constructs a new <code>LoyaltyReward</code>.
     * Represents a contract to redeem loyalty points for a [reward tier](https://developer.squareup.com/reference/square_2021-08-18/objects/LoyaltyProgramRewardTier) discount. Loyalty rewards can be in an ISSUED, REDEEMED, or DELETED state. For more information, see [Redeem loyalty rewards](https://developer.squareup.com/docs/loyalty-api/overview#redeem-loyalty-rewards).
     * @alias module:model/LoyaltyReward
     * @param loyaltyAccountId {String} The Square-assigned ID of the [loyalty account](https://developer.squareup.com/reference/square_2021-08-18/objects/LoyaltyAccount) to which the reward belongs.
     * @param rewardTierId {String} The Square-assigned ID of the [reward tier](https://developer.squareup.com/reference/square_2021-08-18/objects/LoyaltyProgramRewardTier) used to create the reward.
     */
    constructor(loyaltyAccountId, rewardTierId) { 
        
        LoyaltyReward.initialize(this, loyaltyAccountId, rewardTierId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, loyaltyAccountId, rewardTierId) { 
        obj['loyalty_account_id'] = loyaltyAccountId;
        obj['reward_tier_id'] = rewardTierId;
    }

    /**
     * Constructs a <code>LoyaltyReward</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LoyaltyReward} obj Optional instance to populate.
     * @return {module:model/LoyaltyReward} The populated <code>LoyaltyReward</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LoyaltyReward();

            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('loyalty_account_id')) {
                obj['loyalty_account_id'] = ApiClient.convertToType(data['loyalty_account_id'], 'String');
            }
            if (data.hasOwnProperty('order_id')) {
                obj['order_id'] = ApiClient.convertToType(data['order_id'], 'String');
            }
            if (data.hasOwnProperty('points')) {
                obj['points'] = ApiClient.convertToType(data['points'], 'Number');
            }
            if (data.hasOwnProperty('redeemed_at')) {
                obj['redeemed_at'] = ApiClient.convertToType(data['redeemed_at'], 'String');
            }
            if (data.hasOwnProperty('reward_tier_id')) {
                obj['reward_tier_id'] = ApiClient.convertToType(data['reward_tier_id'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LoyaltyReward</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LoyaltyReward</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of LoyaltyReward.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['loyalty_account_id'] && !(typeof data['loyalty_account_id'] === 'string' || data['loyalty_account_id'] instanceof String)) {
            throw new Error("Expected the field `loyalty_account_id` to be a primitive type in the JSON string but got " + data['loyalty_account_id']);
        }
        // ensure the json data is a string
        if (data['order_id'] && !(typeof data['order_id'] === 'string' || data['order_id'] instanceof String)) {
            throw new Error("Expected the field `order_id` to be a primitive type in the JSON string but got " + data['order_id']);
        }
        // ensure the json data is a string
        if (data['redeemed_at'] && !(typeof data['redeemed_at'] === 'string' || data['redeemed_at'] instanceof String)) {
            throw new Error("Expected the field `redeemed_at` to be a primitive type in the JSON string but got " + data['redeemed_at']);
        }
        // ensure the json data is a string
        if (data['reward_tier_id'] && !(typeof data['reward_tier_id'] === 'string' || data['reward_tier_id'] instanceof String)) {
            throw new Error("Expected the field `reward_tier_id` to be a primitive type in the JSON string but got " + data['reward_tier_id']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['updated_at'] && !(typeof data['updated_at'] === 'string' || data['updated_at'] instanceof String)) {
            throw new Error("Expected the field `updated_at` to be a primitive type in the JSON string but got " + data['updated_at']);
        }

        return true;
    }


}

LoyaltyReward.RequiredProperties = ["loyalty_account_id", "reward_tier_id"];

/**
 * The timestamp when the reward was created, in RFC 3339 format.
 * @member {String} created_at
 */
LoyaltyReward.prototype['created_at'] = undefined;

/**
 * The Square-assigned ID of the loyalty reward.
 * @member {String} id
 */
LoyaltyReward.prototype['id'] = undefined;

/**
 * The Square-assigned ID of the [loyalty account](https://developer.squareup.com/reference/square_2021-08-18/objects/LoyaltyAccount) to which the reward belongs.
 * @member {String} loyalty_account_id
 */
LoyaltyReward.prototype['loyalty_account_id'] = undefined;

/**
 * The Square-assigned ID of the [order](https://developer.squareup.com/reference/square_2021-08-18/objects/Order) to which the reward is attached.
 * @member {String} order_id
 */
LoyaltyReward.prototype['order_id'] = undefined;

/**
 * The number of loyalty points used for the reward.
 * @member {Number} points
 */
LoyaltyReward.prototype['points'] = undefined;

/**
 * The timestamp when the reward was redeemed, in RFC 3339 format.
 * @member {String} redeemed_at
 */
LoyaltyReward.prototype['redeemed_at'] = undefined;

/**
 * The Square-assigned ID of the [reward tier](https://developer.squareup.com/reference/square_2021-08-18/objects/LoyaltyProgramRewardTier) used to create the reward.
 * @member {String} reward_tier_id
 */
LoyaltyReward.prototype['reward_tier_id'] = undefined;

/**
 * The status of a loyalty reward.
 * @member {String} status
 */
LoyaltyReward.prototype['status'] = undefined;

/**
 * The timestamp when the reward was last updated, in RFC 3339 format.
 * @member {String} updated_at
 */
LoyaltyReward.prototype['updated_at'] = undefined;






export default LoyaltyReward;

