/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BusinessHoursPeriod model module.
 * @module model/BusinessHoursPeriod
 * @version 2.0
 */
class BusinessHoursPeriod {
    /**
     * Constructs a new <code>BusinessHoursPeriod</code>.
     * Represents a period of time during which a business location is open.
     * @alias module:model/BusinessHoursPeriod
     */
    constructor() { 
        
        BusinessHoursPeriod.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BusinessHoursPeriod</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BusinessHoursPeriod} obj Optional instance to populate.
     * @return {module:model/BusinessHoursPeriod} The populated <code>BusinessHoursPeriod</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BusinessHoursPeriod();

            if (data.hasOwnProperty('day_of_week')) {
                obj['day_of_week'] = ApiClient.convertToType(data['day_of_week'], 'String');
            }
            if (data.hasOwnProperty('end_local_time')) {
                obj['end_local_time'] = ApiClient.convertToType(data['end_local_time'], 'String');
            }
            if (data.hasOwnProperty('start_local_time')) {
                obj['start_local_time'] = ApiClient.convertToType(data['start_local_time'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BusinessHoursPeriod</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BusinessHoursPeriod</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['day_of_week'] && !(typeof data['day_of_week'] === 'string' || data['day_of_week'] instanceof String)) {
            throw new Error("Expected the field `day_of_week` to be a primitive type in the JSON string but got " + data['day_of_week']);
        }
        // ensure the json data is a string
        if (data['end_local_time'] && !(typeof data['end_local_time'] === 'string' || data['end_local_time'] instanceof String)) {
            throw new Error("Expected the field `end_local_time` to be a primitive type in the JSON string but got " + data['end_local_time']);
        }
        // ensure the json data is a string
        if (data['start_local_time'] && !(typeof data['start_local_time'] === 'string' || data['start_local_time'] instanceof String)) {
            throw new Error("Expected the field `start_local_time` to be a primitive type in the JSON string but got " + data['start_local_time']);
        }

        return true;
    }


}



/**
 * The day of week for this time period.
 * @member {String} day_of_week
 */
BusinessHoursPeriod.prototype['day_of_week'] = undefined;

/**
 * The end time of a business hours period, specified in local time using partial-time RFC 3339 format.
 * @member {String} end_local_time
 */
BusinessHoursPeriod.prototype['end_local_time'] = undefined;

/**
 * The start time of a business hours period, specified in local time using partial-time RFC 3339 format.
 * @member {String} start_local_time
 */
BusinessHoursPeriod.prototype['start_local_time'] = undefined;






export default BusinessHoursPeriod;

