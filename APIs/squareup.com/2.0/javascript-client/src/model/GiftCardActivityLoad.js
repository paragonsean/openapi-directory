/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Money from './Money';

/**
 * The GiftCardActivityLoad model module.
 * @module model/GiftCardActivityLoad
 * @version 2.0
 */
class GiftCardActivityLoad {
    /**
     * Constructs a new <code>GiftCardActivityLoad</code>.
     * Present only when &#x60;GiftCardActivityType&#x60; is LOAD.
     * @alias module:model/GiftCardActivityLoad
     */
    constructor() { 
        
        GiftCardActivityLoad.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GiftCardActivityLoad</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GiftCardActivityLoad} obj Optional instance to populate.
     * @return {module:model/GiftCardActivityLoad} The populated <code>GiftCardActivityLoad</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GiftCardActivityLoad();

            if (data.hasOwnProperty('amount_money')) {
                obj['amount_money'] = Money.constructFromObject(data['amount_money']);
            }
            if (data.hasOwnProperty('buyer_payment_instrument_ids')) {
                obj['buyer_payment_instrument_ids'] = ApiClient.convertToType(data['buyer_payment_instrument_ids'], ['String']);
            }
            if (data.hasOwnProperty('line_item_uid')) {
                obj['line_item_uid'] = ApiClient.convertToType(data['line_item_uid'], 'String');
            }
            if (data.hasOwnProperty('order_id')) {
                obj['order_id'] = ApiClient.convertToType(data['order_id'], 'String');
            }
            if (data.hasOwnProperty('reference_id')) {
                obj['reference_id'] = ApiClient.convertToType(data['reference_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GiftCardActivityLoad</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GiftCardActivityLoad</code>.
     */
    static validateJSON(data) {
        // validate the optional field `amount_money`
        if (data['amount_money']) { // data not null
          Money.validateJSON(data['amount_money']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['buyer_payment_instrument_ids'])) {
            throw new Error("Expected the field `buyer_payment_instrument_ids` to be an array in the JSON data but got " + data['buyer_payment_instrument_ids']);
        }
        // ensure the json data is a string
        if (data['line_item_uid'] && !(typeof data['line_item_uid'] === 'string' || data['line_item_uid'] instanceof String)) {
            throw new Error("Expected the field `line_item_uid` to be a primitive type in the JSON string but got " + data['line_item_uid']);
        }
        // ensure the json data is a string
        if (data['order_id'] && !(typeof data['order_id'] === 'string' || data['order_id'] instanceof String)) {
            throw new Error("Expected the field `order_id` to be a primitive type in the JSON string but got " + data['order_id']);
        }
        // ensure the json data is a string
        if (data['reference_id'] && !(typeof data['reference_id'] === 'string' || data['reference_id'] instanceof String)) {
            throw new Error("Expected the field `reference_id` to be a primitive type in the JSON string but got " + data['reference_id']);
        }

        return true;
    }


}



/**
 * @member {module:model/Money} amount_money
 */
GiftCardActivityLoad.prototype['amount_money'] = undefined;

/**
 * If you are not using the Orders API, this field is required because it is used to identify a buyer  to perform compliance checks.
 * @member {Array.<String>} buyer_payment_instrument_ids
 */
GiftCardActivityLoad.prototype['buyer_payment_instrument_ids'] = undefined;

/**
 * The `line_item_uid` of the gift cardâ€™s line item in the order associated with the activity. It is populated along with `order_id` and is required if using the Square Orders API.
 * @member {String} line_item_uid
 */
GiftCardActivityLoad.prototype['line_item_uid'] = undefined;

/**
 * The `order_id` of the order associated with the activity. It is populated along with `line_item_uid` and is required if using the Square Orders API.
 * @member {String} order_id
 */
GiftCardActivityLoad.prototype['order_id'] = undefined;

/**
 * A client-specified ID to associate an entity, in another system, with this gift card activity. This can be used to track the order or payment related information when the Square Orders API is not being used.
 * @member {String} reference_id
 */
GiftCardActivityLoad.prototype['reference_id'] = undefined;






export default GiftCardActivityLoad;

