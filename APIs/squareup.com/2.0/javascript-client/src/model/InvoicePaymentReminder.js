/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InvoicePaymentReminder model module.
 * @module model/InvoicePaymentReminder
 * @version 2.0
 */
class InvoicePaymentReminder {
    /**
     * Constructs a new <code>InvoicePaymentReminder</code>.
     * Describes a payment request reminder (automatic notification) that Square sends to the customer. You configure a reminder relative to the payment request &#x60;due_date&#x60;.
     * @alias module:model/InvoicePaymentReminder
     */
    constructor() { 
        
        InvoicePaymentReminder.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InvoicePaymentReminder</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InvoicePaymentReminder} obj Optional instance to populate.
     * @return {module:model/InvoicePaymentReminder} The populated <code>InvoicePaymentReminder</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InvoicePaymentReminder();

            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('relative_scheduled_days')) {
                obj['relative_scheduled_days'] = ApiClient.convertToType(data['relative_scheduled_days'], 'Number');
            }
            if (data.hasOwnProperty('sent_at')) {
                obj['sent_at'] = ApiClient.convertToType(data['sent_at'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('uid')) {
                obj['uid'] = ApiClient.convertToType(data['uid'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InvoicePaymentReminder</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InvoicePaymentReminder</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }
        // ensure the json data is a string
        if (data['sent_at'] && !(typeof data['sent_at'] === 'string' || data['sent_at'] instanceof String)) {
            throw new Error("Expected the field `sent_at` to be a primitive type in the JSON string but got " + data['sent_at']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['uid'] && !(typeof data['uid'] === 'string' || data['uid'] instanceof String)) {
            throw new Error("Expected the field `uid` to be a primitive type in the JSON string but got " + data['uid']);
        }

        return true;
    }


}



/**
 * The reminder message.
 * @member {String} message
 */
InvoicePaymentReminder.prototype['message'] = undefined;

/**
 * The number of days before (a negative number) or after (a positive number) the payment request `due_date` when the reminder is sent. For example, -3 indicates that the reminder should be sent 3 days before the payment request `due_date`.
 * @member {Number} relative_scheduled_days
 */
InvoicePaymentReminder.prototype['relative_scheduled_days'] = undefined;

/**
 * If sent, the timestamp when the reminder was sent, in RFC 3339 format.
 * @member {String} sent_at
 */
InvoicePaymentReminder.prototype['sent_at'] = undefined;

/**
 * The status of the reminder.
 * @member {String} status
 */
InvoicePaymentReminder.prototype['status'] = undefined;

/**
 * A Square-assigned ID that uniquely identifies the reminder within the `InvoicePaymentRequest`.
 * @member {String} uid
 */
InvoicePaymentReminder.prototype['uid'] = undefined;






export default InvoicePaymentReminder;

