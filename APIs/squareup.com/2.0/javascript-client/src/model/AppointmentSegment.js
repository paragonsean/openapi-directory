/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AppointmentSegment model module.
 * @module model/AppointmentSegment
 * @version 2.0
 */
class AppointmentSegment {
    /**
     * Constructs a new <code>AppointmentSegment</code>.
     * Defines an appointment segment of a booking.
     * @alias module:model/AppointmentSegment
     * @param durationMinutes {Number} The time span in minutes of an appointment segment.
     * @param serviceVariationId {String} The ID of the [CatalogItemVariation](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogItemVariation) object representing the service booked in this segment.
     * @param serviceVariationVersion {Number} The current version of the item variation representing the service booked in this segment.
     * @param teamMemberId {String} The ID of the [TeamMember](https://developer.squareup.com/reference/square_2021-08-18/objects/TeamMember) object representing the team member booked in this segment.
     */
    constructor(durationMinutes, serviceVariationId, serviceVariationVersion, teamMemberId) { 
        
        AppointmentSegment.initialize(this, durationMinutes, serviceVariationId, serviceVariationVersion, teamMemberId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, durationMinutes, serviceVariationId, serviceVariationVersion, teamMemberId) { 
        obj['duration_minutes'] = durationMinutes;
        obj['service_variation_id'] = serviceVariationId;
        obj['service_variation_version'] = serviceVariationVersion;
        obj['team_member_id'] = teamMemberId;
    }

    /**
     * Constructs a <code>AppointmentSegment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AppointmentSegment} obj Optional instance to populate.
     * @return {module:model/AppointmentSegment} The populated <code>AppointmentSegment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AppointmentSegment();

            if (data.hasOwnProperty('duration_minutes')) {
                obj['duration_minutes'] = ApiClient.convertToType(data['duration_minutes'], 'Number');
            }
            if (data.hasOwnProperty('service_variation_id')) {
                obj['service_variation_id'] = ApiClient.convertToType(data['service_variation_id'], 'String');
            }
            if (data.hasOwnProperty('service_variation_version')) {
                obj['service_variation_version'] = ApiClient.convertToType(data['service_variation_version'], 'Number');
            }
            if (data.hasOwnProperty('team_member_id')) {
                obj['team_member_id'] = ApiClient.convertToType(data['team_member_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AppointmentSegment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AppointmentSegment</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AppointmentSegment.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['service_variation_id'] && !(typeof data['service_variation_id'] === 'string' || data['service_variation_id'] instanceof String)) {
            throw new Error("Expected the field `service_variation_id` to be a primitive type in the JSON string but got " + data['service_variation_id']);
        }
        // ensure the json data is a string
        if (data['team_member_id'] && !(typeof data['team_member_id'] === 'string' || data['team_member_id'] instanceof String)) {
            throw new Error("Expected the field `team_member_id` to be a primitive type in the JSON string but got " + data['team_member_id']);
        }

        return true;
    }


}

AppointmentSegment.RequiredProperties = ["duration_minutes", "service_variation_id", "service_variation_version", "team_member_id"];

/**
 * The time span in minutes of an appointment segment.
 * @member {Number} duration_minutes
 */
AppointmentSegment.prototype['duration_minutes'] = undefined;

/**
 * The ID of the [CatalogItemVariation](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogItemVariation) object representing the service booked in this segment.
 * @member {String} service_variation_id
 */
AppointmentSegment.prototype['service_variation_id'] = undefined;

/**
 * The current version of the item variation representing the service booked in this segment.
 * @member {Number} service_variation_version
 */
AppointmentSegment.prototype['service_variation_version'] = undefined;

/**
 * The ID of the [TeamMember](https://developer.squareup.com/reference/square_2021-08-18/objects/TeamMember) object representing the team member booked in this segment.
 * @member {String} team_member_id
 */
AppointmentSegment.prototype['team_member_id'] = undefined;






export default AppointmentSegment;

