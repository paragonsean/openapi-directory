/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DisputeEvidenceCreatedWebhookData from './DisputeEvidenceCreatedWebhookData';

/**
 * The DisputeEvidenceCreatedWebhook model module.
 * @module model/DisputeEvidenceCreatedWebhook
 * @version 2.0
 */
class DisputeEvidenceCreatedWebhook {
    /**
     * Constructs a new <code>DisputeEvidenceCreatedWebhook</code>.
     * Published when evidence is added to a [Dispute](https://developer.squareup.com/reference/square_2021-08-18/objects/Dispute) from the Disputes Dashboard in the Seller Dashboard, the Square Point of Sale app, or by calling either [CreateDisputeEvidenceFile](https://developer.squareup.com/reference/square_2021-08-18/disputes-api/create-dispute-evidence-file) or [CreateDisputeEvidenceText](https://developer.squareup.com/reference/square_2021-08-18/disputes-api/create-dispute-evidence-text).
     * @alias module:model/DisputeEvidenceCreatedWebhook
     */
    constructor() { 
        
        DisputeEvidenceCreatedWebhook.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DisputeEvidenceCreatedWebhook</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DisputeEvidenceCreatedWebhook} obj Optional instance to populate.
     * @return {module:model/DisputeEvidenceCreatedWebhook} The populated <code>DisputeEvidenceCreatedWebhook</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DisputeEvidenceCreatedWebhook();

            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('data')) {
                obj['data'] = DisputeEvidenceCreatedWebhookData.constructFromObject(data['data']);
            }
            if (data.hasOwnProperty('event_id')) {
                obj['event_id'] = ApiClient.convertToType(data['event_id'], 'String');
            }
            if (data.hasOwnProperty('location_id')) {
                obj['location_id'] = ApiClient.convertToType(data['location_id'], 'String');
            }
            if (data.hasOwnProperty('merchant_id')) {
                obj['merchant_id'] = ApiClient.convertToType(data['merchant_id'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DisputeEvidenceCreatedWebhook</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DisputeEvidenceCreatedWebhook</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        // validate the optional field `data`
        if (data['data']) { // data not null
          DisputeEvidenceCreatedWebhookData.validateJSON(data['data']);
        }
        // ensure the json data is a string
        if (data['event_id'] && !(typeof data['event_id'] === 'string' || data['event_id'] instanceof String)) {
            throw new Error("Expected the field `event_id` to be a primitive type in the JSON string but got " + data['event_id']);
        }
        // ensure the json data is a string
        if (data['location_id'] && !(typeof data['location_id'] === 'string' || data['location_id'] instanceof String)) {
            throw new Error("Expected the field `location_id` to be a primitive type in the JSON string but got " + data['location_id']);
        }
        // ensure the json data is a string
        if (data['merchant_id'] && !(typeof data['merchant_id'] === 'string' || data['merchant_id'] instanceof String)) {
            throw new Error("Expected the field `merchant_id` to be a primitive type in the JSON string but got " + data['merchant_id']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * Timestamp of when the webhook event was created, in RFC 3339 format.
 * @member {String} created_at
 */
DisputeEvidenceCreatedWebhook.prototype['created_at'] = undefined;

/**
 * @member {module:model/DisputeEvidenceCreatedWebhookData} data
 */
DisputeEvidenceCreatedWebhook.prototype['data'] = undefined;

/**
 * A unique ID for the webhook event.
 * @member {String} event_id
 */
DisputeEvidenceCreatedWebhook.prototype['event_id'] = undefined;

/**
 * The ID of the target location associated with the event.
 * @member {String} location_id
 */
DisputeEvidenceCreatedWebhook.prototype['location_id'] = undefined;

/**
 * The ID of the target merchant associated with the event.
 * @member {String} merchant_id
 */
DisputeEvidenceCreatedWebhook.prototype['merchant_id'] = undefined;

/**
 * The type of event this represents.
 * @member {String} type
 */
DisputeEvidenceCreatedWebhook.prototype['type'] = undefined;






export default DisputeEvidenceCreatedWebhook;

