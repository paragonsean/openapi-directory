/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CustomerCreationSourceFilter from './CustomerCreationSourceFilter';
import CustomerTextFilter from './CustomerTextFilter';
import FilterValue from './FilterValue';
import TimeRange from './TimeRange';

/**
 * The CustomerFilter model module.
 * @module model/CustomerFilter
 * @version 2.0
 */
class CustomerFilter {
    /**
     * Constructs a new <code>CustomerFilter</code>.
     * Represents a set of &#x60;CustomerQuery&#x60; filters used to limit the set of customers returned by the [SearchCustomers](https://developer.squareup.com/reference/square_2021-08-18/customers-api/search-customers) endpoint.
     * @alias module:model/CustomerFilter
     */
    constructor() { 
        
        CustomerFilter.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CustomerFilter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomerFilter} obj Optional instance to populate.
     * @return {module:model/CustomerFilter} The populated <code>CustomerFilter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomerFilter();

            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = TimeRange.constructFromObject(data['created_at']);
            }
            if (data.hasOwnProperty('creation_source')) {
                obj['creation_source'] = CustomerCreationSourceFilter.constructFromObject(data['creation_source']);
            }
            if (data.hasOwnProperty('email_address')) {
                obj['email_address'] = CustomerTextFilter.constructFromObject(data['email_address']);
            }
            if (data.hasOwnProperty('group_ids')) {
                obj['group_ids'] = FilterValue.constructFromObject(data['group_ids']);
            }
            if (data.hasOwnProperty('phone_number')) {
                obj['phone_number'] = CustomerTextFilter.constructFromObject(data['phone_number']);
            }
            if (data.hasOwnProperty('reference_id')) {
                obj['reference_id'] = CustomerTextFilter.constructFromObject(data['reference_id']);
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = TimeRange.constructFromObject(data['updated_at']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CustomerFilter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CustomerFilter</code>.
     */
    static validateJSON(data) {
        // validate the optional field `created_at`
        if (data['created_at']) { // data not null
          TimeRange.validateJSON(data['created_at']);
        }
        // validate the optional field `creation_source`
        if (data['creation_source']) { // data not null
          CustomerCreationSourceFilter.validateJSON(data['creation_source']);
        }
        // validate the optional field `email_address`
        if (data['email_address']) { // data not null
          CustomerTextFilter.validateJSON(data['email_address']);
        }
        // validate the optional field `group_ids`
        if (data['group_ids']) { // data not null
          FilterValue.validateJSON(data['group_ids']);
        }
        // validate the optional field `phone_number`
        if (data['phone_number']) { // data not null
          CustomerTextFilter.validateJSON(data['phone_number']);
        }
        // validate the optional field `reference_id`
        if (data['reference_id']) { // data not null
          CustomerTextFilter.validateJSON(data['reference_id']);
        }
        // validate the optional field `updated_at`
        if (data['updated_at']) { // data not null
          TimeRange.validateJSON(data['updated_at']);
        }

        return true;
    }


}



/**
 * @member {module:model/TimeRange} created_at
 */
CustomerFilter.prototype['created_at'] = undefined;

/**
 * @member {module:model/CustomerCreationSourceFilter} creation_source
 */
CustomerFilter.prototype['creation_source'] = undefined;

/**
 * @member {module:model/CustomerTextFilter} email_address
 */
CustomerFilter.prototype['email_address'] = undefined;

/**
 * @member {module:model/FilterValue} group_ids
 */
CustomerFilter.prototype['group_ids'] = undefined;

/**
 * @member {module:model/CustomerTextFilter} phone_number
 */
CustomerFilter.prototype['phone_number'] = undefined;

/**
 * @member {module:model/CustomerTextFilter} reference_id
 */
CustomerFilter.prototype['reference_id'] = undefined;

/**
 * @member {module:model/TimeRange} updated_at
 */
CustomerFilter.prototype['updated_at'] = undefined;






export default CustomerFilter;

