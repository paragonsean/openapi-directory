/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LoyaltyEventExpirePoints model module.
 * @module model/LoyaltyEventExpirePoints
 * @version 2.0
 */
class LoyaltyEventExpirePoints {
    /**
     * Constructs a new <code>LoyaltyEventExpirePoints</code>.
     * Provides metadata when the event &#x60;type&#x60; is &#x60;EXPIRE_POINTS&#x60;.
     * @alias module:model/LoyaltyEventExpirePoints
     * @param loyaltyProgramId {String} The Square-assigned ID of the [loyalty program](https://developer.squareup.com/reference/square_2021-08-18/objects/LoyaltyProgram).
     * @param points {Number} The number of points expired.
     */
    constructor(loyaltyProgramId, points) { 
        
        LoyaltyEventExpirePoints.initialize(this, loyaltyProgramId, points);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, loyaltyProgramId, points) { 
        obj['loyalty_program_id'] = loyaltyProgramId;
        obj['points'] = points;
    }

    /**
     * Constructs a <code>LoyaltyEventExpirePoints</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LoyaltyEventExpirePoints} obj Optional instance to populate.
     * @return {module:model/LoyaltyEventExpirePoints} The populated <code>LoyaltyEventExpirePoints</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LoyaltyEventExpirePoints();

            if (data.hasOwnProperty('loyalty_program_id')) {
                obj['loyalty_program_id'] = ApiClient.convertToType(data['loyalty_program_id'], 'String');
            }
            if (data.hasOwnProperty('points')) {
                obj['points'] = ApiClient.convertToType(data['points'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LoyaltyEventExpirePoints</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LoyaltyEventExpirePoints</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of LoyaltyEventExpirePoints.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['loyalty_program_id'] && !(typeof data['loyalty_program_id'] === 'string' || data['loyalty_program_id'] instanceof String)) {
            throw new Error("Expected the field `loyalty_program_id` to be a primitive type in the JSON string but got " + data['loyalty_program_id']);
        }

        return true;
    }


}

LoyaltyEventExpirePoints.RequiredProperties = ["loyalty_program_id", "points"];

/**
 * The Square-assigned ID of the [loyalty program](https://developer.squareup.com/reference/square_2021-08-18/objects/LoyaltyProgram).
 * @member {String} loyalty_program_id
 */
LoyaltyEventExpirePoints.prototype['loyalty_program_id'] = undefined;

/**
 * The number of points expired.
 * @member {Number} points
 */
LoyaltyEventExpirePoints.prototype['points'] = undefined;






export default LoyaltyEventExpirePoints;

