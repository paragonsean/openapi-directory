/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CatalogCustomAttributeDefinitionNumberConfig model module.
 * @module model/CatalogCustomAttributeDefinitionNumberConfig
 * @version 2.0
 */
class CatalogCustomAttributeDefinitionNumberConfig {
    /**
     * Constructs a new <code>CatalogCustomAttributeDefinitionNumberConfig</code>.
     * 
     * @alias module:model/CatalogCustomAttributeDefinitionNumberConfig
     */
    constructor() { 
        
        CatalogCustomAttributeDefinitionNumberConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CatalogCustomAttributeDefinitionNumberConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CatalogCustomAttributeDefinitionNumberConfig} obj Optional instance to populate.
     * @return {module:model/CatalogCustomAttributeDefinitionNumberConfig} The populated <code>CatalogCustomAttributeDefinitionNumberConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CatalogCustomAttributeDefinitionNumberConfig();

            if (data.hasOwnProperty('precision')) {
                obj['precision'] = ApiClient.convertToType(data['precision'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CatalogCustomAttributeDefinitionNumberConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CatalogCustomAttributeDefinitionNumberConfig</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * An integer between 0 and 5 that represents the maximum number of positions allowed after the decimal in number custom attribute values For example:  - if the precision is 0, the quantity can be 1, 2, 3, etc. - if the precision is 1, the quantity can be 0.1, 0.2, etc. - if the precision is 2, the quantity can be 0.01, 0.12, etc.  Default: 5
 * @member {Number} precision
 */
CatalogCustomAttributeDefinitionNumberConfig.prototype['precision'] = undefined;






export default CatalogCustomAttributeDefinitionNumberConfig;

