/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Money from './Money';

/**
 * The TeamMemberWage model module.
 * @module model/TeamMemberWage
 * @version 2.0
 */
class TeamMemberWage {
    /**
     * Constructs a new <code>TeamMemberWage</code>.
     * The hourly wage rate that a team member earns on a &#x60;Shift&#x60; for doing the job specified by the &#x60;title&#x60; property of this object.
     * @alias module:model/TeamMemberWage
     */
    constructor() { 
        
        TeamMemberWage.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TeamMemberWage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TeamMemberWage} obj Optional instance to populate.
     * @return {module:model/TeamMemberWage} The populated <code>TeamMemberWage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TeamMemberWage();

            if (data.hasOwnProperty('hourly_rate')) {
                obj['hourly_rate'] = Money.constructFromObject(data['hourly_rate']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('team_member_id')) {
                obj['team_member_id'] = ApiClient.convertToType(data['team_member_id'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TeamMemberWage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TeamMemberWage</code>.
     */
    static validateJSON(data) {
        // validate the optional field `hourly_rate`
        if (data['hourly_rate']) { // data not null
          Money.validateJSON(data['hourly_rate']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['team_member_id'] && !(typeof data['team_member_id'] === 'string' || data['team_member_id'] instanceof String)) {
            throw new Error("Expected the field `team_member_id` to be a primitive type in the JSON string but got " + data['team_member_id']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}



/**
 * @member {module:model/Money} hourly_rate
 */
TeamMemberWage.prototype['hourly_rate'] = undefined;

/**
 * The UUID for this object.
 * @member {String} id
 */
TeamMemberWage.prototype['id'] = undefined;

/**
 * The `TeamMember` that this wage is assigned to.
 * @member {String} team_member_id
 */
TeamMemberWage.prototype['team_member_id'] = undefined;

/**
 * The job title that this wage relates to.
 * @member {String} title
 */
TeamMemberWage.prototype['title'] = undefined;






export default TeamMemberWage;

