/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Money from './Money';

/**
 * The GiftCardActivityUnlinkedActivityRefund model module.
 * @module model/GiftCardActivityUnlinkedActivityRefund
 * @version 2.0
 */
class GiftCardActivityUnlinkedActivityRefund {
    /**
     * Constructs a new <code>GiftCardActivityUnlinkedActivityRefund</code>.
     * Present only when &#x60;GiftCardActivityType&#x60; is UNLINKED_ACTIVITY_REFUND.
     * @alias module:model/GiftCardActivityUnlinkedActivityRefund
     * @param amountMoney {module:model/Money} 
     */
    constructor(amountMoney) { 
        
        GiftCardActivityUnlinkedActivityRefund.initialize(this, amountMoney);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, amountMoney) { 
        obj['amount_money'] = amountMoney;
    }

    /**
     * Constructs a <code>GiftCardActivityUnlinkedActivityRefund</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GiftCardActivityUnlinkedActivityRefund} obj Optional instance to populate.
     * @return {module:model/GiftCardActivityUnlinkedActivityRefund} The populated <code>GiftCardActivityUnlinkedActivityRefund</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GiftCardActivityUnlinkedActivityRefund();

            if (data.hasOwnProperty('amount_money')) {
                obj['amount_money'] = Money.constructFromObject(data['amount_money']);
            }
            if (data.hasOwnProperty('payment_id')) {
                obj['payment_id'] = ApiClient.convertToType(data['payment_id'], 'String');
            }
            if (data.hasOwnProperty('reference_id')) {
                obj['reference_id'] = ApiClient.convertToType(data['reference_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GiftCardActivityUnlinkedActivityRefund</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GiftCardActivityUnlinkedActivityRefund</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GiftCardActivityUnlinkedActivityRefund.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `amount_money`
        if (data['amount_money']) { // data not null
          Money.validateJSON(data['amount_money']);
        }
        // ensure the json data is a string
        if (data['payment_id'] && !(typeof data['payment_id'] === 'string' || data['payment_id'] instanceof String)) {
            throw new Error("Expected the field `payment_id` to be a primitive type in the JSON string but got " + data['payment_id']);
        }
        // ensure the json data is a string
        if (data['reference_id'] && !(typeof data['reference_id'] === 'string' || data['reference_id'] instanceof String)) {
            throw new Error("Expected the field `reference_id` to be a primitive type in the JSON string but got " + data['reference_id']);
        }

        return true;
    }


}

GiftCardActivityUnlinkedActivityRefund.RequiredProperties = ["amount_money"];

/**
 * @member {module:model/Money} amount_money
 */
GiftCardActivityUnlinkedActivityRefund.prototype['amount_money'] = undefined;

/**
 * When using the Square Payments API, the ID of the payment that was refunded to this gift card.
 * @member {String} payment_id
 */
GiftCardActivityUnlinkedActivityRefund.prototype['payment_id'] = undefined;

/**
 * A client-specified ID to associate an entity, in another system, with this gift card activity. This can be used to track the order or payment related information when the Square Payments API is not being used.
 * @member {String} reference_id
 */
GiftCardActivityUnlinkedActivityRefund.prototype['reference_id'] = undefined;






export default GiftCardActivityUnlinkedActivityRefund;

