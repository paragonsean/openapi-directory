/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CatalogV1Id model module.
 * @module model/CatalogV1Id
 * @version 2.0
 */
class CatalogV1Id {
    /**
     * Constructs a new <code>CatalogV1Id</code>.
     * A Square API V1 identifier of an item, including the object ID and its associated location ID.
     * @alias module:model/CatalogV1Id
     */
    constructor() { 
        
        CatalogV1Id.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CatalogV1Id</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CatalogV1Id} obj Optional instance to populate.
     * @return {module:model/CatalogV1Id} The populated <code>CatalogV1Id</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CatalogV1Id();

            if (data.hasOwnProperty('catalog_v1_id')) {
                obj['catalog_v1_id'] = ApiClient.convertToType(data['catalog_v1_id'], 'String');
            }
            if (data.hasOwnProperty('location_id')) {
                obj['location_id'] = ApiClient.convertToType(data['location_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CatalogV1Id</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CatalogV1Id</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['catalog_v1_id'] && !(typeof data['catalog_v1_id'] === 'string' || data['catalog_v1_id'] instanceof String)) {
            throw new Error("Expected the field `catalog_v1_id` to be a primitive type in the JSON string but got " + data['catalog_v1_id']);
        }
        // ensure the json data is a string
        if (data['location_id'] && !(typeof data['location_id'] === 'string' || data['location_id'] instanceof String)) {
            throw new Error("Expected the field `location_id` to be a primitive type in the JSON string but got " + data['location_id']);
        }

        return true;
    }


}



/**
 * The ID for an object used in the Square API V1, if the object ID differs from the Square API V2 object ID.
 * @member {String} catalog_v1_id
 */
CatalogV1Id.prototype['catalog_v1_id'] = undefined;

/**
 * The ID of the `Location` this Connect V1 ID is associated with.
 * @member {String} location_id
 */
CatalogV1Id.prototype['location_id'] = undefined;






export default CatalogV1Id;

