/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Money from './Money';

/**
 * The LoyaltyProgramAccrualRule model module.
 * @module model/LoyaltyProgramAccrualRule
 * @version 2.0
 */
class LoyaltyProgramAccrualRule {
    /**
     * Constructs a new <code>LoyaltyProgramAccrualRule</code>.
     * Defines an accrual rule, which is how buyers can earn points.
     * @alias module:model/LoyaltyProgramAccrualRule
     * @param accrualType {String} The type of the accrual rule that defines how buyers can earn points.
     */
    constructor(accrualType) { 
        
        LoyaltyProgramAccrualRule.initialize(this, accrualType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, accrualType) { 
        obj['accrual_type'] = accrualType;
    }

    /**
     * Constructs a <code>LoyaltyProgramAccrualRule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LoyaltyProgramAccrualRule} obj Optional instance to populate.
     * @return {module:model/LoyaltyProgramAccrualRule} The populated <code>LoyaltyProgramAccrualRule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LoyaltyProgramAccrualRule();

            if (data.hasOwnProperty('accrual_type')) {
                obj['accrual_type'] = ApiClient.convertToType(data['accrual_type'], 'String');
            }
            if (data.hasOwnProperty('catalog_object_id')) {
                obj['catalog_object_id'] = ApiClient.convertToType(data['catalog_object_id'], 'String');
            }
            if (data.hasOwnProperty('excluded_category_ids')) {
                obj['excluded_category_ids'] = ApiClient.convertToType(data['excluded_category_ids'], ['String']);
            }
            if (data.hasOwnProperty('excluded_item_variation_ids')) {
                obj['excluded_item_variation_ids'] = ApiClient.convertToType(data['excluded_item_variation_ids'], ['String']);
            }
            if (data.hasOwnProperty('points')) {
                obj['points'] = ApiClient.convertToType(data['points'], 'Number');
            }
            if (data.hasOwnProperty('spend_amount_money')) {
                obj['spend_amount_money'] = Money.constructFromObject(data['spend_amount_money']);
            }
            if (data.hasOwnProperty('visit_minimum_amount_money')) {
                obj['visit_minimum_amount_money'] = Money.constructFromObject(data['visit_minimum_amount_money']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LoyaltyProgramAccrualRule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LoyaltyProgramAccrualRule</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of LoyaltyProgramAccrualRule.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['accrual_type'] && !(typeof data['accrual_type'] === 'string' || data['accrual_type'] instanceof String)) {
            throw new Error("Expected the field `accrual_type` to be a primitive type in the JSON string but got " + data['accrual_type']);
        }
        // ensure the json data is a string
        if (data['catalog_object_id'] && !(typeof data['catalog_object_id'] === 'string' || data['catalog_object_id'] instanceof String)) {
            throw new Error("Expected the field `catalog_object_id` to be a primitive type in the JSON string but got " + data['catalog_object_id']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['excluded_category_ids'])) {
            throw new Error("Expected the field `excluded_category_ids` to be an array in the JSON data but got " + data['excluded_category_ids']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['excluded_item_variation_ids'])) {
            throw new Error("Expected the field `excluded_item_variation_ids` to be an array in the JSON data but got " + data['excluded_item_variation_ids']);
        }
        // validate the optional field `spend_amount_money`
        if (data['spend_amount_money']) { // data not null
          Money.validateJSON(data['spend_amount_money']);
        }
        // validate the optional field `visit_minimum_amount_money`
        if (data['visit_minimum_amount_money']) { // data not null
          Money.validateJSON(data['visit_minimum_amount_money']);
        }

        return true;
    }


}

LoyaltyProgramAccrualRule.RequiredProperties = ["accrual_type"];

/**
 * The type of the accrual rule that defines how buyers can earn points.
 * @member {String} accrual_type
 */
LoyaltyProgramAccrualRule.prototype['accrual_type'] = undefined;

/**
 * When the accrual rule is item-based or category-based, this field specifies the ID  of the [catalog object](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject) that buyers can purchase to earn points.  If `accrual_type` is `ITEM_VARIATION`, the object is an item variation.  If `accrual_type` is `CATEGORY`, the object is a category.
 * @member {String} catalog_object_id
 */
LoyaltyProgramAccrualRule.prototype['catalog_object_id'] = undefined;

/**
 * When the accrual rule is spend-based (`accrual_type` is `SPEND`), this field  lists the IDs of any `CATEGORY` catalog objects that are excluded from points accrual.   You can use the [BatchRetrieveCatalogObjects](https://developer.squareup.com/reference/square_2021-08-18/catalog-api/batch-retrieve-catalog-objects)  endpoint to retrieve information about the excluded categories.
 * @member {Array.<String>} excluded_category_ids
 */
LoyaltyProgramAccrualRule.prototype['excluded_category_ids'] = undefined;

/**
 * When the accrual rule is spend-based (`accrual_type` is `SPEND`), this field  lists the IDs of any `ITEM_VARIATION` catalog objects that are excluded from points accrual.   You can use the [BatchRetrieveCatalogObjects](https://developer.squareup.com/reference/square_2021-08-18/catalog-api/batch-retrieve-catalog-objects)  endpoint to retrieve information about the excluded item variations.
 * @member {Array.<String>} excluded_item_variation_ids
 */
LoyaltyProgramAccrualRule.prototype['excluded_item_variation_ids'] = undefined;

/**
 * The number of points that  buyers earn based on the `accrual_type`.
 * @member {Number} points
 */
LoyaltyProgramAccrualRule.prototype['points'] = undefined;

/**
 * @member {module:model/Money} spend_amount_money
 */
LoyaltyProgramAccrualRule.prototype['spend_amount_money'] = undefined;

/**
 * @member {module:model/Money} visit_minimum_amount_money
 */
LoyaltyProgramAccrualRule.prototype['visit_minimum_amount_money'] = undefined;






export default LoyaltyProgramAccrualRule;

