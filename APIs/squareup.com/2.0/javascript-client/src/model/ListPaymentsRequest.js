/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ListPaymentsRequest model module.
 * @module model/ListPaymentsRequest
 * @version 2.0
 */
class ListPaymentsRequest {
    /**
     * Constructs a new <code>ListPaymentsRequest</code>.
     * Describes a request to list payments using  [ListPayments](https://developer.squareup.com/reference/square_2021-08-18/payments-api/list-payments).  The maximum results per page is 100.
     * @alias module:model/ListPaymentsRequest
     */
    constructor() { 
        
        ListPaymentsRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ListPaymentsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListPaymentsRequest} obj Optional instance to populate.
     * @return {module:model/ListPaymentsRequest} The populated <code>ListPaymentsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListPaymentsRequest();

            if (data.hasOwnProperty('begin_time')) {
                obj['begin_time'] = ApiClient.convertToType(data['begin_time'], 'String');
            }
            if (data.hasOwnProperty('card_brand')) {
                obj['card_brand'] = ApiClient.convertToType(data['card_brand'], 'String');
            }
            if (data.hasOwnProperty('cursor')) {
                obj['cursor'] = ApiClient.convertToType(data['cursor'], 'String');
            }
            if (data.hasOwnProperty('end_time')) {
                obj['end_time'] = ApiClient.convertToType(data['end_time'], 'String');
            }
            if (data.hasOwnProperty('last_4')) {
                obj['last_4'] = ApiClient.convertToType(data['last_4'], 'String');
            }
            if (data.hasOwnProperty('limit')) {
                obj['limit'] = ApiClient.convertToType(data['limit'], 'Number');
            }
            if (data.hasOwnProperty('location_id')) {
                obj['location_id'] = ApiClient.convertToType(data['location_id'], 'String');
            }
            if (data.hasOwnProperty('sort_order')) {
                obj['sort_order'] = ApiClient.convertToType(data['sort_order'], 'String');
            }
            if (data.hasOwnProperty('total')) {
                obj['total'] = ApiClient.convertToType(data['total'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListPaymentsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListPaymentsRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['begin_time'] && !(typeof data['begin_time'] === 'string' || data['begin_time'] instanceof String)) {
            throw new Error("Expected the field `begin_time` to be a primitive type in the JSON string but got " + data['begin_time']);
        }
        // ensure the json data is a string
        if (data['card_brand'] && !(typeof data['card_brand'] === 'string' || data['card_brand'] instanceof String)) {
            throw new Error("Expected the field `card_brand` to be a primitive type in the JSON string but got " + data['card_brand']);
        }
        // ensure the json data is a string
        if (data['cursor'] && !(typeof data['cursor'] === 'string' || data['cursor'] instanceof String)) {
            throw new Error("Expected the field `cursor` to be a primitive type in the JSON string but got " + data['cursor']);
        }
        // ensure the json data is a string
        if (data['end_time'] && !(typeof data['end_time'] === 'string' || data['end_time'] instanceof String)) {
            throw new Error("Expected the field `end_time` to be a primitive type in the JSON string but got " + data['end_time']);
        }
        // ensure the json data is a string
        if (data['last_4'] && !(typeof data['last_4'] === 'string' || data['last_4'] instanceof String)) {
            throw new Error("Expected the field `last_4` to be a primitive type in the JSON string but got " + data['last_4']);
        }
        // ensure the json data is a string
        if (data['location_id'] && !(typeof data['location_id'] === 'string' || data['location_id'] instanceof String)) {
            throw new Error("Expected the field `location_id` to be a primitive type in the JSON string but got " + data['location_id']);
        }
        // ensure the json data is a string
        if (data['sort_order'] && !(typeof data['sort_order'] === 'string' || data['sort_order'] instanceof String)) {
            throw new Error("Expected the field `sort_order` to be a primitive type in the JSON string but got " + data['sort_order']);
        }

        return true;
    }


}



/**
 * The timestamp for the beginning of the reporting period, in RFC 3339 format. Inclusive. Default: The current time minus one year.
 * @member {String} begin_time
 */
ListPaymentsRequest.prototype['begin_time'] = undefined;

/**
 * The brand of the payment card (for example, VISA).
 * @member {String} card_brand
 */
ListPaymentsRequest.prototype['card_brand'] = undefined;

/**
 * A pagination cursor returned by a previous call to this endpoint. Provide this cursor to retrieve the next set of results for the original query.  For more information, see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination).
 * @member {String} cursor
 */
ListPaymentsRequest.prototype['cursor'] = undefined;

/**
 * The timestamp for the end of the reporting period, in RFC 3339 format.  Default: The current time.
 * @member {String} end_time
 */
ListPaymentsRequest.prototype['end_time'] = undefined;

/**
 * The last four digits of a payment card.
 * @member {String} last_4
 */
ListPaymentsRequest.prototype['last_4'] = undefined;

/**
 * The maximum number of results to be returned in a single page. It is possible to receive fewer results than the specified limit on a given page.  The default value of 100 is also the maximum allowed value. If the provided value is  greater than 100, it is ignored and the default value is used instead.  Default: `100`
 * @member {Number} limit
 */
ListPaymentsRequest.prototype['limit'] = undefined;

/**
 * Limit results to the location supplied. By default, results are returned for the default (main) location associated with the seller.
 * @member {String} location_id
 */
ListPaymentsRequest.prototype['location_id'] = undefined;

/**
 * The order in which results are listed: - `ASC` - Oldest to newest. - `DESC` - Newest to oldest (default).
 * @member {String} sort_order
 */
ListPaymentsRequest.prototype['sort_order'] = undefined;

/**
 * The exact amount in the `total_money` for a payment.
 * @member {Number} total
 */
ListPaymentsRequest.prototype['total'] = undefined;






export default ListPaymentsRequest;

