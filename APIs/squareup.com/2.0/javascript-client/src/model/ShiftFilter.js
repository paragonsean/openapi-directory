/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ShiftWorkday from './ShiftWorkday';
import TimeRange from './TimeRange';

/**
 * The ShiftFilter model module.
 * @module model/ShiftFilter
 * @version 2.0
 */
class ShiftFilter {
    /**
     * Constructs a new <code>ShiftFilter</code>.
     * Defines a filter used in a search for &#x60;Shift&#x60; records. &#x60;AND&#x60; logic is used by Square&#39;s servers to apply each filter property specified.
     * @alias module:model/ShiftFilter
     * @param locationIds {Array.<String>} Fetch shifts for the specified location.
     * @param teamMemberIds {Array.<String>} Fetch shifts for the specified team members. Replaced `employee_ids` at version \"2020-08-26\".
     */
    constructor(locationIds, teamMemberIds) { 
        
        ShiftFilter.initialize(this, locationIds, teamMemberIds);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, locationIds, teamMemberIds) { 
        obj['location_ids'] = locationIds;
        obj['team_member_ids'] = teamMemberIds;
    }

    /**
     * Constructs a <code>ShiftFilter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ShiftFilter} obj Optional instance to populate.
     * @return {module:model/ShiftFilter} The populated <code>ShiftFilter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ShiftFilter();

            if (data.hasOwnProperty('employee_ids')) {
                obj['employee_ids'] = ApiClient.convertToType(data['employee_ids'], ['String']);
            }
            if (data.hasOwnProperty('end')) {
                obj['end'] = TimeRange.constructFromObject(data['end']);
            }
            if (data.hasOwnProperty('location_ids')) {
                obj['location_ids'] = ApiClient.convertToType(data['location_ids'], ['String']);
            }
            if (data.hasOwnProperty('start')) {
                obj['start'] = TimeRange.constructFromObject(data['start']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('team_member_ids')) {
                obj['team_member_ids'] = ApiClient.convertToType(data['team_member_ids'], ['String']);
            }
            if (data.hasOwnProperty('workday')) {
                obj['workday'] = ShiftWorkday.constructFromObject(data['workday']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ShiftFilter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ShiftFilter</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ShiftFilter.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['employee_ids'])) {
            throw new Error("Expected the field `employee_ids` to be an array in the JSON data but got " + data['employee_ids']);
        }
        // validate the optional field `end`
        if (data['end']) { // data not null
          TimeRange.validateJSON(data['end']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['location_ids'])) {
            throw new Error("Expected the field `location_ids` to be an array in the JSON data but got " + data['location_ids']);
        }
        // validate the optional field `start`
        if (data['start']) { // data not null
          TimeRange.validateJSON(data['start']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['team_member_ids'])) {
            throw new Error("Expected the field `team_member_ids` to be an array in the JSON data but got " + data['team_member_ids']);
        }
        // validate the optional field `workday`
        if (data['workday']) { // data not null
          ShiftWorkday.validateJSON(data['workday']);
        }

        return true;
    }


}

ShiftFilter.RequiredProperties = ["location_ids", "team_member_ids"];

/**
 * Fetch shifts for the specified employees. DEPRECATED at version 2020-08-26. Use `team_member_ids` instead.
 * @member {Array.<String>} employee_ids
 */
ShiftFilter.prototype['employee_ids'] = undefined;

/**
 * @member {module:model/TimeRange} end
 */
ShiftFilter.prototype['end'] = undefined;

/**
 * Fetch shifts for the specified location.
 * @member {Array.<String>} location_ids
 */
ShiftFilter.prototype['location_ids'] = undefined;

/**
 * @member {module:model/TimeRange} start
 */
ShiftFilter.prototype['start'] = undefined;

/**
 * Fetch a `Shift` instance by `Shift.status`.
 * @member {String} status
 */
ShiftFilter.prototype['status'] = undefined;

/**
 * Fetch shifts for the specified team members. Replaced `employee_ids` at version \"2020-08-26\".
 * @member {Array.<String>} team_member_ids
 */
ShiftFilter.prototype['team_member_ids'] = undefined;

/**
 * @member {module:model/ShiftWorkday} workday
 */
ShiftFilter.prototype['workday'] = undefined;






export default ShiftFilter;

