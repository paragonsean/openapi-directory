/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ListGiftCardActivitiesRequest model module.
 * @module model/ListGiftCardActivitiesRequest
 * @version 2.0
 */
class ListGiftCardActivitiesRequest {
    /**
     * Constructs a new <code>ListGiftCardActivitiesRequest</code>.
     * Returns a list of gift card activities. You can optionally specify a filter to retrieve a subset of activites.
     * @alias module:model/ListGiftCardActivitiesRequest
     */
    constructor() { 
        
        ListGiftCardActivitiesRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ListGiftCardActivitiesRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListGiftCardActivitiesRequest} obj Optional instance to populate.
     * @return {module:model/ListGiftCardActivitiesRequest} The populated <code>ListGiftCardActivitiesRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListGiftCardActivitiesRequest();

            if (data.hasOwnProperty('begin_time')) {
                obj['begin_time'] = ApiClient.convertToType(data['begin_time'], 'String');
            }
            if (data.hasOwnProperty('cursor')) {
                obj['cursor'] = ApiClient.convertToType(data['cursor'], 'String');
            }
            if (data.hasOwnProperty('end_time')) {
                obj['end_time'] = ApiClient.convertToType(data['end_time'], 'String');
            }
            if (data.hasOwnProperty('gift_card_id')) {
                obj['gift_card_id'] = ApiClient.convertToType(data['gift_card_id'], 'String');
            }
            if (data.hasOwnProperty('limit')) {
                obj['limit'] = ApiClient.convertToType(data['limit'], 'Number');
            }
            if (data.hasOwnProperty('location_id')) {
                obj['location_id'] = ApiClient.convertToType(data['location_id'], 'String');
            }
            if (data.hasOwnProperty('sort_order')) {
                obj['sort_order'] = ApiClient.convertToType(data['sort_order'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListGiftCardActivitiesRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListGiftCardActivitiesRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['begin_time'] && !(typeof data['begin_time'] === 'string' || data['begin_time'] instanceof String)) {
            throw new Error("Expected the field `begin_time` to be a primitive type in the JSON string but got " + data['begin_time']);
        }
        // ensure the json data is a string
        if (data['cursor'] && !(typeof data['cursor'] === 'string' || data['cursor'] instanceof String)) {
            throw new Error("Expected the field `cursor` to be a primitive type in the JSON string but got " + data['cursor']);
        }
        // ensure the json data is a string
        if (data['end_time'] && !(typeof data['end_time'] === 'string' || data['end_time'] instanceof String)) {
            throw new Error("Expected the field `end_time` to be a primitive type in the JSON string but got " + data['end_time']);
        }
        // ensure the json data is a string
        if (data['gift_card_id'] && !(typeof data['gift_card_id'] === 'string' || data['gift_card_id'] instanceof String)) {
            throw new Error("Expected the field `gift_card_id` to be a primitive type in the JSON string but got " + data['gift_card_id']);
        }
        // ensure the json data is a string
        if (data['location_id'] && !(typeof data['location_id'] === 'string' || data['location_id'] instanceof String)) {
            throw new Error("Expected the field `location_id` to be a primitive type in the JSON string but got " + data['location_id']);
        }
        // ensure the json data is a string
        if (data['sort_order'] && !(typeof data['sort_order'] === 'string' || data['sort_order'] instanceof String)) {
            throw new Error("Expected the field `sort_order` to be a primitive type in the JSON string but got " + data['sort_order']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * The timestamp for the beginning of the reporting period, in RFC 3339 format. Inclusive. Default: The current time minus one year.
 * @member {String} begin_time
 */
ListGiftCardActivitiesRequest.prototype['begin_time'] = undefined;

/**
 * A pagination cursor returned by a previous call to this endpoint. Provide this cursor to retrieve the next set of results for the original query. If you do not provide the cursor, the call returns the first page of the results.
 * @member {String} cursor
 */
ListGiftCardActivitiesRequest.prototype['cursor'] = undefined;

/**
 * The timestamp for the end of the reporting period, in RFC 3339 format. Inclusive. Default: The current time.
 * @member {String} end_time
 */
ListGiftCardActivitiesRequest.prototype['end_time'] = undefined;

/**
 * If you provide a gift card ID, the endpoint returns activities that belong  to the specified gift card. Otherwise, the endpoint returns all gift card activities for  the seller.
 * @member {String} gift_card_id
 */
ListGiftCardActivitiesRequest.prototype['gift_card_id'] = undefined;

/**
 * If you provide a limit value, the endpoint returns the specified number  of results (or less) per page. A maximum value is 100. The default value is 50.
 * @member {Number} limit
 */
ListGiftCardActivitiesRequest.prototype['limit'] = undefined;

/**
 * If you provide a location ID, the endpoint returns gift card activities for that location.  Otherwise, the endpoint returns gift card activities for all locations.
 * @member {String} location_id
 */
ListGiftCardActivitiesRequest.prototype['location_id'] = undefined;

/**
 * The order in which the endpoint returns the activities, based on `created_at`. - `ASC` - Oldest to newest. - `DESC` - Newest to oldest (default).
 * @member {String} sort_order
 */
ListGiftCardActivitiesRequest.prototype['sort_order'] = undefined;

/**
 * If you provide a type, the endpoint returns gift card activities of this type.  Otherwise, the endpoint returns all types of gift card activities.
 * @member {String} type
 */
ListGiftCardActivitiesRequest.prototype['type'] = undefined;






export default ListGiftCardActivitiesRequest;

