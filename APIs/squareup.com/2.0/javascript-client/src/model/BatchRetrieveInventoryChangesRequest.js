/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BatchRetrieveInventoryChangesRequest model module.
 * @module model/BatchRetrieveInventoryChangesRequest
 * @version 2.0
 */
class BatchRetrieveInventoryChangesRequest {
    /**
     * Constructs a new <code>BatchRetrieveInventoryChangesRequest</code>.
     * 
     * @alias module:model/BatchRetrieveInventoryChangesRequest
     */
    constructor() { 
        
        BatchRetrieveInventoryChangesRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BatchRetrieveInventoryChangesRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BatchRetrieveInventoryChangesRequest} obj Optional instance to populate.
     * @return {module:model/BatchRetrieveInventoryChangesRequest} The populated <code>BatchRetrieveInventoryChangesRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BatchRetrieveInventoryChangesRequest();

            if (data.hasOwnProperty('catalog_object_ids')) {
                obj['catalog_object_ids'] = ApiClient.convertToType(data['catalog_object_ids'], ['String']);
            }
            if (data.hasOwnProperty('cursor')) {
                obj['cursor'] = ApiClient.convertToType(data['cursor'], 'String');
            }
            if (data.hasOwnProperty('location_ids')) {
                obj['location_ids'] = ApiClient.convertToType(data['location_ids'], ['String']);
            }
            if (data.hasOwnProperty('states')) {
                obj['states'] = ApiClient.convertToType(data['states'], ['String']);
            }
            if (data.hasOwnProperty('types')) {
                obj['types'] = ApiClient.convertToType(data['types'], ['String']);
            }
            if (data.hasOwnProperty('updated_after')) {
                obj['updated_after'] = ApiClient.convertToType(data['updated_after'], 'String');
            }
            if (data.hasOwnProperty('updated_before')) {
                obj['updated_before'] = ApiClient.convertToType(data['updated_before'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BatchRetrieveInventoryChangesRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BatchRetrieveInventoryChangesRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['catalog_object_ids'])) {
            throw new Error("Expected the field `catalog_object_ids` to be an array in the JSON data but got " + data['catalog_object_ids']);
        }
        // ensure the json data is a string
        if (data['cursor'] && !(typeof data['cursor'] === 'string' || data['cursor'] instanceof String)) {
            throw new Error("Expected the field `cursor` to be a primitive type in the JSON string but got " + data['cursor']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['location_ids'])) {
            throw new Error("Expected the field `location_ids` to be an array in the JSON data but got " + data['location_ids']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['states'])) {
            throw new Error("Expected the field `states` to be an array in the JSON data but got " + data['states']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['types'])) {
            throw new Error("Expected the field `types` to be an array in the JSON data but got " + data['types']);
        }
        // ensure the json data is a string
        if (data['updated_after'] && !(typeof data['updated_after'] === 'string' || data['updated_after'] instanceof String)) {
            throw new Error("Expected the field `updated_after` to be a primitive type in the JSON string but got " + data['updated_after']);
        }
        // ensure the json data is a string
        if (data['updated_before'] && !(typeof data['updated_before'] === 'string' || data['updated_before'] instanceof String)) {
            throw new Error("Expected the field `updated_before` to be a primitive type in the JSON string but got " + data['updated_before']);
        }

        return true;
    }


}



/**
 * The filter to return results by `CatalogObject` ID. The filter is only applicable when set. The default value is null.
 * @member {Array.<String>} catalog_object_ids
 */
BatchRetrieveInventoryChangesRequest.prototype['catalog_object_ids'] = undefined;

/**
 * A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for the original query.  See the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information.
 * @member {String} cursor
 */
BatchRetrieveInventoryChangesRequest.prototype['cursor'] = undefined;

/**
 * The filter to return results by `Location` ID.  The filter is only applicable when set. The default value is null.
 * @member {Array.<String>} location_ids
 */
BatchRetrieveInventoryChangesRequest.prototype['location_ids'] = undefined;

/**
 * The filter to return `ADJUSTMENT` query results by `InventoryState`. This filter is only applied when set. The default value is null.
 * @member {Array.<String>} states
 */
BatchRetrieveInventoryChangesRequest.prototype['states'] = undefined;

/**
 * The filter to return results by `InventoryChangeType` values other than `TRANSFER`. The default value is `[PHYSICAL_COUNT, ADJUSTMENT]`.
 * @member {Array.<String>} types
 */
BatchRetrieveInventoryChangesRequest.prototype['types'] = undefined;

/**
 * The filter to return results with their `calculated_at` value   after the given time as specified in an RFC 3339 timestamp.  The default value is the UNIX epoch of (`1970-01-01T00:00:00Z`).
 * @member {String} updated_after
 */
BatchRetrieveInventoryChangesRequest.prototype['updated_after'] = undefined;

/**
 * The filter to return results with their `created_at` or `calculated_at` value   strictly before the given time as specified in an RFC 3339 timestamp.  The default value is the UNIX epoch of (`1970-01-01T00:00:00Z`).
 * @member {String} updated_before
 */
BatchRetrieveInventoryChangesRequest.prototype['updated_before'] = undefined;






export default BatchRetrieveInventoryChangesRequest;

