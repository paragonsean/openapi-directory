/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Money from './Money';

/**
 * The OrderMoneyAmounts model module.
 * @module model/OrderMoneyAmounts
 * @version 2.0
 */
class OrderMoneyAmounts {
    /**
     * Constructs a new <code>OrderMoneyAmounts</code>.
     * A collection of various money amounts.
     * @alias module:model/OrderMoneyAmounts
     */
    constructor() { 
        
        OrderMoneyAmounts.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrderMoneyAmounts</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrderMoneyAmounts} obj Optional instance to populate.
     * @return {module:model/OrderMoneyAmounts} The populated <code>OrderMoneyAmounts</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrderMoneyAmounts();

            if (data.hasOwnProperty('discount_money')) {
                obj['discount_money'] = Money.constructFromObject(data['discount_money']);
            }
            if (data.hasOwnProperty('service_charge_money')) {
                obj['service_charge_money'] = Money.constructFromObject(data['service_charge_money']);
            }
            if (data.hasOwnProperty('tax_money')) {
                obj['tax_money'] = Money.constructFromObject(data['tax_money']);
            }
            if (data.hasOwnProperty('tip_money')) {
                obj['tip_money'] = Money.constructFromObject(data['tip_money']);
            }
            if (data.hasOwnProperty('total_money')) {
                obj['total_money'] = Money.constructFromObject(data['total_money']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrderMoneyAmounts</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrderMoneyAmounts</code>.
     */
    static validateJSON(data) {
        // validate the optional field `discount_money`
        if (data['discount_money']) { // data not null
          Money.validateJSON(data['discount_money']);
        }
        // validate the optional field `service_charge_money`
        if (data['service_charge_money']) { // data not null
          Money.validateJSON(data['service_charge_money']);
        }
        // validate the optional field `tax_money`
        if (data['tax_money']) { // data not null
          Money.validateJSON(data['tax_money']);
        }
        // validate the optional field `tip_money`
        if (data['tip_money']) { // data not null
          Money.validateJSON(data['tip_money']);
        }
        // validate the optional field `total_money`
        if (data['total_money']) { // data not null
          Money.validateJSON(data['total_money']);
        }

        return true;
    }


}



/**
 * @member {module:model/Money} discount_money
 */
OrderMoneyAmounts.prototype['discount_money'] = undefined;

/**
 * @member {module:model/Money} service_charge_money
 */
OrderMoneyAmounts.prototype['service_charge_money'] = undefined;

/**
 * @member {module:model/Money} tax_money
 */
OrderMoneyAmounts.prototype['tax_money'] = undefined;

/**
 * @member {module:model/Money} tip_money
 */
OrderMoneyAmounts.prototype['tip_money'] = undefined;

/**
 * @member {module:model/Money} total_money
 */
OrderMoneyAmounts.prototype['total_money'] = undefined;






export default OrderMoneyAmounts;

