/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DeprecatedCreateDisputeEvidenceFileRequest model module.
 * @module model/DeprecatedCreateDisputeEvidenceFileRequest
 * @version 2.0
 */
class DeprecatedCreateDisputeEvidenceFileRequest {
    /**
     * Constructs a new <code>DeprecatedCreateDisputeEvidenceFileRequest</code>.
     * Defines the parameters for a &#x60;DeprecatedCreateDisputeEvidenceFile&#x60; request.
     * @alias module:model/DeprecatedCreateDisputeEvidenceFileRequest
     * @param idempotencyKey {String} The Unique ID. For more information, see [Idempotency](https://developer.squareup.com/docs/working-with-apis/idempotency).
     */
    constructor(idempotencyKey) { 
        
        DeprecatedCreateDisputeEvidenceFileRequest.initialize(this, idempotencyKey);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, idempotencyKey) { 
        obj['idempotency_key'] = idempotencyKey;
    }

    /**
     * Constructs a <code>DeprecatedCreateDisputeEvidenceFileRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeprecatedCreateDisputeEvidenceFileRequest} obj Optional instance to populate.
     * @return {module:model/DeprecatedCreateDisputeEvidenceFileRequest} The populated <code>DeprecatedCreateDisputeEvidenceFileRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeprecatedCreateDisputeEvidenceFileRequest();

            if (data.hasOwnProperty('content_type')) {
                obj['content_type'] = ApiClient.convertToType(data['content_type'], 'String');
            }
            if (data.hasOwnProperty('evidence_type')) {
                obj['evidence_type'] = ApiClient.convertToType(data['evidence_type'], 'String');
            }
            if (data.hasOwnProperty('idempotency_key')) {
                obj['idempotency_key'] = ApiClient.convertToType(data['idempotency_key'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeprecatedCreateDisputeEvidenceFileRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeprecatedCreateDisputeEvidenceFileRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DeprecatedCreateDisputeEvidenceFileRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['content_type'] && !(typeof data['content_type'] === 'string' || data['content_type'] instanceof String)) {
            throw new Error("Expected the field `content_type` to be a primitive type in the JSON string but got " + data['content_type']);
        }
        // ensure the json data is a string
        if (data['evidence_type'] && !(typeof data['evidence_type'] === 'string' || data['evidence_type'] instanceof String)) {
            throw new Error("Expected the field `evidence_type` to be a primitive type in the JSON string but got " + data['evidence_type']);
        }
        // ensure the json data is a string
        if (data['idempotency_key'] && !(typeof data['idempotency_key'] === 'string' || data['idempotency_key'] instanceof String)) {
            throw new Error("Expected the field `idempotency_key` to be a primitive type in the JSON string but got " + data['idempotency_key']);
        }

        return true;
    }


}

DeprecatedCreateDisputeEvidenceFileRequest.RequiredProperties = ["idempotency_key"];

/**
 * The MIME type of the uploaded file. The type can be image/heic, image/heif, image/jpeg, application/pdf, image/png, or image/tiff.
 * @member {String} content_type
 */
DeprecatedCreateDisputeEvidenceFileRequest.prototype['content_type'] = undefined;

/**
 * The type of evidence you are uploading.
 * @member {String} evidence_type
 */
DeprecatedCreateDisputeEvidenceFileRequest.prototype['evidence_type'] = undefined;

/**
 * The Unique ID. For more information, see [Idempotency](https://developer.squareup.com/docs/working-with-apis/idempotency).
 * @member {String} idempotency_key
 */
DeprecatedCreateDisputeEvidenceFileRequest.prototype['idempotency_key'] = undefined;






export default DeprecatedCreateDisputeEvidenceFileRequest;

