/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InvoiceAcceptedPaymentMethods model module.
 * @module model/InvoiceAcceptedPaymentMethods
 * @version 2.0
 */
class InvoiceAcceptedPaymentMethods {
    /**
     * Constructs a new <code>InvoiceAcceptedPaymentMethods</code>.
     * The payment methods that customers can use to pay an invoice on the Square-hosted invoice page.
     * @alias module:model/InvoiceAcceptedPaymentMethods
     */
    constructor() { 
        
        InvoiceAcceptedPaymentMethods.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InvoiceAcceptedPaymentMethods</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InvoiceAcceptedPaymentMethods} obj Optional instance to populate.
     * @return {module:model/InvoiceAcceptedPaymentMethods} The populated <code>InvoiceAcceptedPaymentMethods</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InvoiceAcceptedPaymentMethods();

            if (data.hasOwnProperty('bank_account')) {
                obj['bank_account'] = ApiClient.convertToType(data['bank_account'], 'Boolean');
            }
            if (data.hasOwnProperty('card')) {
                obj['card'] = ApiClient.convertToType(data['card'], 'Boolean');
            }
            if (data.hasOwnProperty('square_gift_card')) {
                obj['square_gift_card'] = ApiClient.convertToType(data['square_gift_card'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InvoiceAcceptedPaymentMethods</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InvoiceAcceptedPaymentMethods</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Indicates whether bank transfer payments are accepted. The default value is `false`.  This option is allowed only for invoices that have a single payment request of type `BALANCE`.
 * @member {Boolean} bank_account
 */
InvoiceAcceptedPaymentMethods.prototype['bank_account'] = undefined;

/**
 * Indicates whether credit card or debit card payments are accepted. The default value is `false`.
 * @member {Boolean} card
 */
InvoiceAcceptedPaymentMethods.prototype['card'] = undefined;

/**
 * Indicates whether Square gift card payments are accepted. The default value is `false`.
 * @member {Boolean} square_gift_card
 */
InvoiceAcceptedPaymentMethods.prototype['square_gift_card'] = undefined;






export default InvoiceAcceptedPaymentMethods;

