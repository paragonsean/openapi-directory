/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Money from './Money';

/**
 * The TerminalRefund model module.
 * @module model/TerminalRefund
 * @version 2.0
 */
class TerminalRefund {
    /**
     * Constructs a new <code>TerminalRefund</code>.
     * 
     * @alias module:model/TerminalRefund
     * @param amountMoney {module:model/Money} 
     * @param paymentId {String} The unique ID of the payment being refunded.
     */
    constructor(amountMoney, paymentId) { 
        
        TerminalRefund.initialize(this, amountMoney, paymentId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, amountMoney, paymentId) { 
        obj['amount_money'] = amountMoney;
        obj['payment_id'] = paymentId;
    }

    /**
     * Constructs a <code>TerminalRefund</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TerminalRefund} obj Optional instance to populate.
     * @return {module:model/TerminalRefund} The populated <code>TerminalRefund</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TerminalRefund();

            if (data.hasOwnProperty('amount_money')) {
                obj['amount_money'] = Money.constructFromObject(data['amount_money']);
            }
            if (data.hasOwnProperty('app_id')) {
                obj['app_id'] = ApiClient.convertToType(data['app_id'], 'String');
            }
            if (data.hasOwnProperty('cancel_reason')) {
                obj['cancel_reason'] = ApiClient.convertToType(data['cancel_reason'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('deadline_duration')) {
                obj['deadline_duration'] = ApiClient.convertToType(data['deadline_duration'], 'String');
            }
            if (data.hasOwnProperty('device_id')) {
                obj['device_id'] = ApiClient.convertToType(data['device_id'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('location_id')) {
                obj['location_id'] = ApiClient.convertToType(data['location_id'], 'String');
            }
            if (data.hasOwnProperty('order_id')) {
                obj['order_id'] = ApiClient.convertToType(data['order_id'], 'String');
            }
            if (data.hasOwnProperty('payment_id')) {
                obj['payment_id'] = ApiClient.convertToType(data['payment_id'], 'String');
            }
            if (data.hasOwnProperty('reason')) {
                obj['reason'] = ApiClient.convertToType(data['reason'], 'String');
            }
            if (data.hasOwnProperty('refund_id')) {
                obj['refund_id'] = ApiClient.convertToType(data['refund_id'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TerminalRefund</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TerminalRefund</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TerminalRefund.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `amount_money`
        if (data['amount_money']) { // data not null
          Money.validateJSON(data['amount_money']);
        }
        // ensure the json data is a string
        if (data['app_id'] && !(typeof data['app_id'] === 'string' || data['app_id'] instanceof String)) {
            throw new Error("Expected the field `app_id` to be a primitive type in the JSON string but got " + data['app_id']);
        }
        // ensure the json data is a string
        if (data['cancel_reason'] && !(typeof data['cancel_reason'] === 'string' || data['cancel_reason'] instanceof String)) {
            throw new Error("Expected the field `cancel_reason` to be a primitive type in the JSON string but got " + data['cancel_reason']);
        }
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        // ensure the json data is a string
        if (data['deadline_duration'] && !(typeof data['deadline_duration'] === 'string' || data['deadline_duration'] instanceof String)) {
            throw new Error("Expected the field `deadline_duration` to be a primitive type in the JSON string but got " + data['deadline_duration']);
        }
        // ensure the json data is a string
        if (data['device_id'] && !(typeof data['device_id'] === 'string' || data['device_id'] instanceof String)) {
            throw new Error("Expected the field `device_id` to be a primitive type in the JSON string but got " + data['device_id']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['location_id'] && !(typeof data['location_id'] === 'string' || data['location_id'] instanceof String)) {
            throw new Error("Expected the field `location_id` to be a primitive type in the JSON string but got " + data['location_id']);
        }
        // ensure the json data is a string
        if (data['order_id'] && !(typeof data['order_id'] === 'string' || data['order_id'] instanceof String)) {
            throw new Error("Expected the field `order_id` to be a primitive type in the JSON string but got " + data['order_id']);
        }
        // ensure the json data is a string
        if (data['payment_id'] && !(typeof data['payment_id'] === 'string' || data['payment_id'] instanceof String)) {
            throw new Error("Expected the field `payment_id` to be a primitive type in the JSON string but got " + data['payment_id']);
        }
        // ensure the json data is a string
        if (data['reason'] && !(typeof data['reason'] === 'string' || data['reason'] instanceof String)) {
            throw new Error("Expected the field `reason` to be a primitive type in the JSON string but got " + data['reason']);
        }
        // ensure the json data is a string
        if (data['refund_id'] && !(typeof data['refund_id'] === 'string' || data['refund_id'] instanceof String)) {
            throw new Error("Expected the field `refund_id` to be a primitive type in the JSON string but got " + data['refund_id']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['updated_at'] && !(typeof data['updated_at'] === 'string' || data['updated_at'] instanceof String)) {
            throw new Error("Expected the field `updated_at` to be a primitive type in the JSON string but got " + data['updated_at']);
        }

        return true;
    }


}

TerminalRefund.RequiredProperties = ["amount_money", "payment_id"];

/**
 * @member {module:model/Money} amount_money
 */
TerminalRefund.prototype['amount_money'] = undefined;

/**
 * The ID of the application that created the refund.
 * @member {String} app_id
 */
TerminalRefund.prototype['app_id'] = undefined;

/**
 * Present if the status is `CANCELED`.
 * @member {String} cancel_reason
 */
TerminalRefund.prototype['cancel_reason'] = undefined;

/**
 * The time when the `TerminalRefund` was created, as an RFC 3339 timestamp.
 * @member {String} created_at
 */
TerminalRefund.prototype['created_at'] = undefined;

/**
 * The RFC 3339 duration, after which the refund is automatically canceled. A `TerminalRefund` that is `PENDING` is automatically `CANCELED` and has a cancellation reason of `TIMED_OUT`.  Default: 5 minutes from creation.  Maximum: 5 minutes
 * @member {String} deadline_duration
 */
TerminalRefund.prototype['deadline_duration'] = undefined;

/**
 * The unique ID of the device intended for this `TerminalRefund`. The Id can be retrieved from /v2/devices api.
 * @member {String} device_id
 */
TerminalRefund.prototype['device_id'] = undefined;

/**
 * A unique ID for this `TerminalRefund`.
 * @member {String} id
 */
TerminalRefund.prototype['id'] = undefined;

/**
 * The location of the device where the `TerminalRefund` was directed.
 * @member {String} location_id
 */
TerminalRefund.prototype['location_id'] = undefined;

/**
 * The reference to the Square order ID for the payment identified by the `payment_id`.
 * @member {String} order_id
 */
TerminalRefund.prototype['order_id'] = undefined;

/**
 * The unique ID of the payment being refunded.
 * @member {String} payment_id
 */
TerminalRefund.prototype['payment_id'] = undefined;

/**
 * A description of the reason for the refund. Note: maximum 192 characters
 * @member {String} reason
 */
TerminalRefund.prototype['reason'] = undefined;

/**
 * The reference to the payment refund created by completing this `TerminalRefund`.
 * @member {String} refund_id
 */
TerminalRefund.prototype['refund_id'] = undefined;

/**
 * The status of the `TerminalRefund`. Options: `PENDING`, `IN_PROGRESS`, `CANCELED`, or `COMPLETED`.
 * @member {String} status
 */
TerminalRefund.prototype['status'] = undefined;

/**
 * The time when the `TerminalRefund` was last updated, as an RFC 3339 timestamp.
 * @member {String} updated_at
 */
TerminalRefund.prototype['updated_at'] = undefined;






export default TerminalRefund;

