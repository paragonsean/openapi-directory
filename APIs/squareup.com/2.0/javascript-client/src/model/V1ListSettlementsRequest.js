/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The V1ListSettlementsRequest model module.
 * @module model/V1ListSettlementsRequest
 * @version 2.0
 */
class V1ListSettlementsRequest {
    /**
     * Constructs a new <code>V1ListSettlementsRequest</code>.
     * 
     * @alias module:model/V1ListSettlementsRequest
     */
    constructor() { 
        
        V1ListSettlementsRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>V1ListSettlementsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/V1ListSettlementsRequest} obj Optional instance to populate.
     * @return {module:model/V1ListSettlementsRequest} The populated <code>V1ListSettlementsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new V1ListSettlementsRequest();

            if (data.hasOwnProperty('batch_token')) {
                obj['batch_token'] = ApiClient.convertToType(data['batch_token'], 'String');
            }
            if (data.hasOwnProperty('begin_time')) {
                obj['begin_time'] = ApiClient.convertToType(data['begin_time'], 'String');
            }
            if (data.hasOwnProperty('end_time')) {
                obj['end_time'] = ApiClient.convertToType(data['end_time'], 'String');
            }
            if (data.hasOwnProperty('limit')) {
                obj['limit'] = ApiClient.convertToType(data['limit'], 'Number');
            }
            if (data.hasOwnProperty('order')) {
                obj['order'] = ApiClient.convertToType(data['order'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>V1ListSettlementsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>V1ListSettlementsRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['batch_token'] && !(typeof data['batch_token'] === 'string' || data['batch_token'] instanceof String)) {
            throw new Error("Expected the field `batch_token` to be a primitive type in the JSON string but got " + data['batch_token']);
        }
        // ensure the json data is a string
        if (data['begin_time'] && !(typeof data['begin_time'] === 'string' || data['begin_time'] instanceof String)) {
            throw new Error("Expected the field `begin_time` to be a primitive type in the JSON string but got " + data['begin_time']);
        }
        // ensure the json data is a string
        if (data['end_time'] && !(typeof data['end_time'] === 'string' || data['end_time'] instanceof String)) {
            throw new Error("Expected the field `end_time` to be a primitive type in the JSON string but got " + data['end_time']);
        }
        // ensure the json data is a string
        if (data['order'] && !(typeof data['order'] === 'string' || data['order'] instanceof String)) {
            throw new Error("Expected the field `order` to be a primitive type in the JSON string but got " + data['order']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * A pagination cursor to retrieve the next set of results for your original query to the endpoint.
 * @member {String} batch_token
 */
V1ListSettlementsRequest.prototype['batch_token'] = undefined;

/**
 * The beginning of the requested reporting period, in ISO 8601 format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z), this endpoint returns an error. Default value: The current time minus one year.
 * @member {String} begin_time
 */
V1ListSettlementsRequest.prototype['begin_time'] = undefined;

/**
 * The end of the requested reporting period, in ISO 8601 format. If this value is more than one year greater than begin_time, this endpoint returns an error. Default value: The current time.
 * @member {String} end_time
 */
V1ListSettlementsRequest.prototype['end_time'] = undefined;

/**
 * The maximum number of settlements to return in a single response. This value cannot exceed 200.
 * @member {Number} limit
 */
V1ListSettlementsRequest.prototype['limit'] = undefined;

/**
 * The order in which settlements are listed in the response.
 * @member {String} order
 */
V1ListSettlementsRequest.prototype['order'] = undefined;

/**
 * Provide this parameter to retrieve only settlements with a particular status (SENT or FAILED).
 * @member {String} status
 */
V1ListSettlementsRequest.prototype['status'] = undefined;






export default V1ListSettlementsRequest;

