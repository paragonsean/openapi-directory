/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Money from './Money';

/**
 * The GiftCardActivityImportReversal model module.
 * @module model/GiftCardActivityImportReversal
 * @version 2.0
 */
class GiftCardActivityImportReversal {
    /**
     * Constructs a new <code>GiftCardActivityImportReversal</code>.
     * Present only when GiftCardActivityType is IMPORT_REVERSAL and GiftCardGANSource is OTHER
     * @alias module:model/GiftCardActivityImportReversal
     * @param amountMoney {module:model/Money} 
     */
    constructor(amountMoney) { 
        
        GiftCardActivityImportReversal.initialize(this, amountMoney);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, amountMoney) { 
        obj['amount_money'] = amountMoney;
    }

    /**
     * Constructs a <code>GiftCardActivityImportReversal</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GiftCardActivityImportReversal} obj Optional instance to populate.
     * @return {module:model/GiftCardActivityImportReversal} The populated <code>GiftCardActivityImportReversal</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GiftCardActivityImportReversal();

            if (data.hasOwnProperty('amount_money')) {
                obj['amount_money'] = Money.constructFromObject(data['amount_money']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GiftCardActivityImportReversal</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GiftCardActivityImportReversal</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GiftCardActivityImportReversal.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `amount_money`
        if (data['amount_money']) { // data not null
          Money.validateJSON(data['amount_money']);
        }

        return true;
    }


}

GiftCardActivityImportReversal.RequiredProperties = ["amount_money"];

/**
 * @member {module:model/Money} amount_money
 */
GiftCardActivityImportReversal.prototype['amount_money'] = undefined;






export default GiftCardActivityImportReversal;

