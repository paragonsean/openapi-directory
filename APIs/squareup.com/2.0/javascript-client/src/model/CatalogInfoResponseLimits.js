/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CatalogInfoResponseLimits model module.
 * @module model/CatalogInfoResponseLimits
 * @version 2.0
 */
class CatalogInfoResponseLimits {
    /**
     * Constructs a new <code>CatalogInfoResponseLimits</code>.
     * 
     * @alias module:model/CatalogInfoResponseLimits
     */
    constructor() { 
        
        CatalogInfoResponseLimits.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CatalogInfoResponseLimits</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CatalogInfoResponseLimits} obj Optional instance to populate.
     * @return {module:model/CatalogInfoResponseLimits} The populated <code>CatalogInfoResponseLimits</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CatalogInfoResponseLimits();

            if (data.hasOwnProperty('batch_delete_max_object_ids')) {
                obj['batch_delete_max_object_ids'] = ApiClient.convertToType(data['batch_delete_max_object_ids'], 'Number');
            }
            if (data.hasOwnProperty('batch_retrieve_max_object_ids')) {
                obj['batch_retrieve_max_object_ids'] = ApiClient.convertToType(data['batch_retrieve_max_object_ids'], 'Number');
            }
            if (data.hasOwnProperty('batch_upsert_max_objects_per_batch')) {
                obj['batch_upsert_max_objects_per_batch'] = ApiClient.convertToType(data['batch_upsert_max_objects_per_batch'], 'Number');
            }
            if (data.hasOwnProperty('batch_upsert_max_total_objects')) {
                obj['batch_upsert_max_total_objects'] = ApiClient.convertToType(data['batch_upsert_max_total_objects'], 'Number');
            }
            if (data.hasOwnProperty('search_max_page_limit')) {
                obj['search_max_page_limit'] = ApiClient.convertToType(data['search_max_page_limit'], 'Number');
            }
            if (data.hasOwnProperty('update_item_modifier_lists_max_item_ids')) {
                obj['update_item_modifier_lists_max_item_ids'] = ApiClient.convertToType(data['update_item_modifier_lists_max_item_ids'], 'Number');
            }
            if (data.hasOwnProperty('update_item_modifier_lists_max_modifier_lists_to_disable')) {
                obj['update_item_modifier_lists_max_modifier_lists_to_disable'] = ApiClient.convertToType(data['update_item_modifier_lists_max_modifier_lists_to_disable'], 'Number');
            }
            if (data.hasOwnProperty('update_item_modifier_lists_max_modifier_lists_to_enable')) {
                obj['update_item_modifier_lists_max_modifier_lists_to_enable'] = ApiClient.convertToType(data['update_item_modifier_lists_max_modifier_lists_to_enable'], 'Number');
            }
            if (data.hasOwnProperty('update_item_taxes_max_item_ids')) {
                obj['update_item_taxes_max_item_ids'] = ApiClient.convertToType(data['update_item_taxes_max_item_ids'], 'Number');
            }
            if (data.hasOwnProperty('update_item_taxes_max_taxes_to_disable')) {
                obj['update_item_taxes_max_taxes_to_disable'] = ApiClient.convertToType(data['update_item_taxes_max_taxes_to_disable'], 'Number');
            }
            if (data.hasOwnProperty('update_item_taxes_max_taxes_to_enable')) {
                obj['update_item_taxes_max_taxes_to_enable'] = ApiClient.convertToType(data['update_item_taxes_max_taxes_to_enable'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CatalogInfoResponseLimits</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CatalogInfoResponseLimits</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * The maximum number of object IDs that may be included in a single `/v2/catalog/batch-delete` request.
 * @member {Number} batch_delete_max_object_ids
 */
CatalogInfoResponseLimits.prototype['batch_delete_max_object_ids'] = undefined;

/**
 * The maximum number of object IDs that may appear in a `/v2/catalog/batch-retrieve` request.
 * @member {Number} batch_retrieve_max_object_ids
 */
CatalogInfoResponseLimits.prototype['batch_retrieve_max_object_ids'] = undefined;

/**
 * The maximum number of objects that may appear within a single batch in a `/v2/catalog/batch-upsert` request.
 * @member {Number} batch_upsert_max_objects_per_batch
 */
CatalogInfoResponseLimits.prototype['batch_upsert_max_objects_per_batch'] = undefined;

/**
 * The maximum number of objects that may appear across all batches in a `/v2/catalog/batch-upsert` request.
 * @member {Number} batch_upsert_max_total_objects
 */
CatalogInfoResponseLimits.prototype['batch_upsert_max_total_objects'] = undefined;

/**
 * The maximum number of results that may be returned in a page of a `/v2/catalog/search` response.
 * @member {Number} search_max_page_limit
 */
CatalogInfoResponseLimits.prototype['search_max_page_limit'] = undefined;

/**
 * The maximum number of item IDs that may be included in a single `/v2/catalog/update-item-modifier-lists` request.
 * @member {Number} update_item_modifier_lists_max_item_ids
 */
CatalogInfoResponseLimits.prototype['update_item_modifier_lists_max_item_ids'] = undefined;

/**
 * The maximum number of modifier list IDs to be disabled that may be included in a single `/v2/catalog/update-item-modifier-lists` request.
 * @member {Number} update_item_modifier_lists_max_modifier_lists_to_disable
 */
CatalogInfoResponseLimits.prototype['update_item_modifier_lists_max_modifier_lists_to_disable'] = undefined;

/**
 * The maximum number of modifier list IDs to be enabled that may be included in a single `/v2/catalog/update-item-modifier-lists` request.
 * @member {Number} update_item_modifier_lists_max_modifier_lists_to_enable
 */
CatalogInfoResponseLimits.prototype['update_item_modifier_lists_max_modifier_lists_to_enable'] = undefined;

/**
 * The maximum number of item IDs that may be included in a single `/v2/catalog/update-item-taxes` request.
 * @member {Number} update_item_taxes_max_item_ids
 */
CatalogInfoResponseLimits.prototype['update_item_taxes_max_item_ids'] = undefined;

/**
 * The maximum number of tax IDs to be disabled that may be included in a single `/v2/catalog/update-item-taxes` request.
 * @member {Number} update_item_taxes_max_taxes_to_disable
 */
CatalogInfoResponseLimits.prototype['update_item_taxes_max_taxes_to_disable'] = undefined;

/**
 * The maximum number of tax IDs to be enabled that may be included in a single `/v2/catalog/update-item-taxes` request.
 * @member {Number} update_item_taxes_max_taxes_to_enable
 */
CatalogInfoResponseLimits.prototype['update_item_taxes_max_taxes_to_enable'] = undefined;






export default CatalogInfoResponseLimits;

