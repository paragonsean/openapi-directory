/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Money from './Money';

/**
 * The CalculateLoyaltyPointsRequest model module.
 * @module model/CalculateLoyaltyPointsRequest
 * @version 2.0
 */
class CalculateLoyaltyPointsRequest {
    /**
     * Constructs a new <code>CalculateLoyaltyPointsRequest</code>.
     * A request to calculate the points that a buyer can earn from  a specified purchase.
     * @alias module:model/CalculateLoyaltyPointsRequest
     */
    constructor() { 
        
        CalculateLoyaltyPointsRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CalculateLoyaltyPointsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CalculateLoyaltyPointsRequest} obj Optional instance to populate.
     * @return {module:model/CalculateLoyaltyPointsRequest} The populated <code>CalculateLoyaltyPointsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CalculateLoyaltyPointsRequest();

            if (data.hasOwnProperty('order_id')) {
                obj['order_id'] = ApiClient.convertToType(data['order_id'], 'String');
            }
            if (data.hasOwnProperty('transaction_amount_money')) {
                obj['transaction_amount_money'] = Money.constructFromObject(data['transaction_amount_money']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CalculateLoyaltyPointsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CalculateLoyaltyPointsRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['order_id'] && !(typeof data['order_id'] === 'string' || data['order_id'] instanceof String)) {
            throw new Error("Expected the field `order_id` to be a primitive type in the JSON string but got " + data['order_id']);
        }
        // validate the optional field `transaction_amount_money`
        if (data['transaction_amount_money']) { // data not null
          Money.validateJSON(data['transaction_amount_money']);
        }

        return true;
    }


}



/**
 * The [order](https://developer.squareup.com/reference/square_2021-08-18/objects/Order) ID for which to calculate the points. Specify this field if your application uses the Orders API to process orders. Otherwise, specify the `transaction_amount_money`.
 * @member {String} order_id
 */
CalculateLoyaltyPointsRequest.prototype['order_id'] = undefined;

/**
 * @member {module:model/Money} transaction_amount_money
 */
CalculateLoyaltyPointsRequest.prototype['transaction_amount_money'] = undefined;






export default CalculateLoyaltyPointsRequest;

