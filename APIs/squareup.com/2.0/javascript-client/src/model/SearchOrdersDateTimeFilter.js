/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TimeRange from './TimeRange';

/**
 * The SearchOrdersDateTimeFilter model module.
 * @module model/SearchOrdersDateTimeFilter
 * @version 2.0
 */
class SearchOrdersDateTimeFilter {
    /**
     * Constructs a new <code>SearchOrdersDateTimeFilter</code>.
     * Filter for &#x60;Order&#x60; objects based on whether their &#x60;CREATED_AT&#x60;, &#x60;CLOSED_AT&#x60;, or &#x60;UPDATED_AT&#x60; timestamps fall within a specified time range. You can specify the time range and which timestamp to filter for. You can filter for only one time range at a time.  For each time range, the start time and end time are inclusive. If the end time is absent, it defaults to the time of the first request for the cursor.  __Important:__ If you use the &#x60;DateTimeFilter&#x60; in a &#x60;SearchOrders&#x60; query, you must set the &#x60;sort_field&#x60; in [OrdersSort](https://developer.squareup.com/reference/square_2021-08-18/objects/SearchOrdersSort) to the same field you filter for. For example, if you set the &#x60;CLOSED_AT&#x60; field in &#x60;DateTimeFilter&#x60;, you must set the &#x60;sort_field&#x60; in &#x60;SearchOrdersSort&#x60; to &#x60;CLOSED_AT&#x60;. Otherwise, &#x60;SearchOrders&#x60; throws an error. [Learn more about filtering orders by time range.](https://developer.squareup.com/docs/orders-api/manage-orders#important-note-on-filtering-orders-by-time-range)
     * @alias module:model/SearchOrdersDateTimeFilter
     */
    constructor() { 
        
        SearchOrdersDateTimeFilter.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SearchOrdersDateTimeFilter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SearchOrdersDateTimeFilter} obj Optional instance to populate.
     * @return {module:model/SearchOrdersDateTimeFilter} The populated <code>SearchOrdersDateTimeFilter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SearchOrdersDateTimeFilter();

            if (data.hasOwnProperty('closed_at')) {
                obj['closed_at'] = TimeRange.constructFromObject(data['closed_at']);
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = TimeRange.constructFromObject(data['created_at']);
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = TimeRange.constructFromObject(data['updated_at']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SearchOrdersDateTimeFilter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SearchOrdersDateTimeFilter</code>.
     */
    static validateJSON(data) {
        // validate the optional field `closed_at`
        if (data['closed_at']) { // data not null
          TimeRange.validateJSON(data['closed_at']);
        }
        // validate the optional field `created_at`
        if (data['created_at']) { // data not null
          TimeRange.validateJSON(data['created_at']);
        }
        // validate the optional field `updated_at`
        if (data['updated_at']) { // data not null
          TimeRange.validateJSON(data['updated_at']);
        }

        return true;
    }


}



/**
 * @member {module:model/TimeRange} closed_at
 */
SearchOrdersDateTimeFilter.prototype['closed_at'] = undefined;

/**
 * @member {module:model/TimeRange} created_at
 */
SearchOrdersDateTimeFilter.prototype['created_at'] = undefined;

/**
 * @member {module:model/TimeRange} updated_at
 */
SearchOrdersDateTimeFilter.prototype['updated_at'] = undefined;






export default SearchOrdersDateTimeFilter;

