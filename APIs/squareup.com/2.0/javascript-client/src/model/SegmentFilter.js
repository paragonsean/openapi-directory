/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FilterValue from './FilterValue';

/**
 * The SegmentFilter model module.
 * @module model/SegmentFilter
 * @version 2.0
 */
class SegmentFilter {
    /**
     * Constructs a new <code>SegmentFilter</code>.
     * A query filter to search for appointment segments by.
     * @alias module:model/SegmentFilter
     * @param serviceVariationId {String} The ID of the [CatalogItemVariation](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogItemVariation) representing the service booked in this segment.
     */
    constructor(serviceVariationId) { 
        
        SegmentFilter.initialize(this, serviceVariationId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, serviceVariationId) { 
        obj['service_variation_id'] = serviceVariationId;
    }

    /**
     * Constructs a <code>SegmentFilter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SegmentFilter} obj Optional instance to populate.
     * @return {module:model/SegmentFilter} The populated <code>SegmentFilter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SegmentFilter();

            if (data.hasOwnProperty('service_variation_id')) {
                obj['service_variation_id'] = ApiClient.convertToType(data['service_variation_id'], 'String');
            }
            if (data.hasOwnProperty('team_member_id_filter')) {
                obj['team_member_id_filter'] = FilterValue.constructFromObject(data['team_member_id_filter']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SegmentFilter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SegmentFilter</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SegmentFilter.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['service_variation_id'] && !(typeof data['service_variation_id'] === 'string' || data['service_variation_id'] instanceof String)) {
            throw new Error("Expected the field `service_variation_id` to be a primitive type in the JSON string but got " + data['service_variation_id']);
        }
        // validate the optional field `team_member_id_filter`
        if (data['team_member_id_filter']) { // data not null
          FilterValue.validateJSON(data['team_member_id_filter']);
        }

        return true;
    }


}

SegmentFilter.RequiredProperties = ["service_variation_id"];

/**
 * The ID of the [CatalogItemVariation](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogItemVariation) representing the service booked in this segment.
 * @member {String} service_variation_id
 */
SegmentFilter.prototype['service_variation_id'] = undefined;

/**
 * @member {module:model/FilterValue} team_member_id_filter
 */
SegmentFilter.prototype['team_member_id_filter'] = undefined;






export default SegmentFilter;

