/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GetBankAccountByV1IdResponse from '../model/GetBankAccountByV1IdResponse';
import GetBankAccountResponse from '../model/GetBankAccountResponse';
import ListBankAccountsResponse from '../model/ListBankAccountsResponse';

/**
* BankAccounts service.
* @module api/BankAccountsApi
* @version 2.0
*/
export default class BankAccountsApi {

    /**
    * Constructs a new BankAccountsApi. 
    * @alias module:api/BankAccountsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getBankAccount operation.
     * @callback module:api/BankAccountsApi~getBankAccountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetBankAccountResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GetBankAccount
     * Returns details of a [BankAccount](https://developer.squareup.com/reference/square_2021-08-18/objects/BankAccount) linked to a Square account.
     * @param {String} bankAccountId Square-issued ID of the desired `BankAccount`.
     * @param {module:api/BankAccountsApi~getBankAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetBankAccountResponse}
     */
    getBankAccount(bankAccountId, callback) {
      let postBody = null;
      // verify the required parameter 'bankAccountId' is set
      if (bankAccountId === undefined || bankAccountId === null) {
        throw new Error("Missing the required parameter 'bankAccountId' when calling getBankAccount");
      }

      let pathParams = {
        'bank_account_id': bankAccountId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetBankAccountResponse;
      return this.apiClient.callApi(
        '/v2/bank-accounts/{bank_account_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getBankAccountByV1Id operation.
     * @callback module:api/BankAccountsApi~getBankAccountByV1IdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetBankAccountByV1IdResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GetBankAccountByV1Id
     * Returns details of a [BankAccount](https://developer.squareup.com/reference/square_2021-08-18/objects/BankAccount) identified by V1 bank account ID.
     * @param {String} v1BankAccountId Connect V1 ID of the desired `BankAccount`. For more information, see  [Retrieve a bank account by using an ID issued by V1 Bank Accounts API](https://developer.squareup.com/docs/bank-accounts-api#retrieve-a-bank-account-by-using-an-id-issued-by-v1-bank-accounts-api).
     * @param {module:api/BankAccountsApi~getBankAccountByV1IdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetBankAccountByV1IdResponse}
     */
    getBankAccountByV1Id(v1BankAccountId, callback) {
      let postBody = null;
      // verify the required parameter 'v1BankAccountId' is set
      if (v1BankAccountId === undefined || v1BankAccountId === null) {
        throw new Error("Missing the required parameter 'v1BankAccountId' when calling getBankAccountByV1Id");
      }

      let pathParams = {
        'v1_bank_account_id': v1BankAccountId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetBankAccountByV1IdResponse;
      return this.apiClient.callApi(
        '/v2/bank-accounts/by-v1-id/{v1_bank_account_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listBankAccounts operation.
     * @callback module:api/BankAccountsApi~listBankAccountsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListBankAccountsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * ListBankAccounts
     * Returns a list of [BankAccount](https://developer.squareup.com/reference/square_2021-08-18/objects/BankAccount) objects linked to a Square account.
     * @param {Object} opts Optional parameters
     * @param {String} [cursor] The pagination cursor returned by a previous call to this endpoint. Use it in the next `ListBankAccounts` request to retrieve the next set  of results.  See the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information.
     * @param {Number} [limit] Upper limit on the number of bank accounts to return in the response.  Currently, 1000 is the largest supported limit. You can specify a limit  of up to 1000 bank accounts. This is also the default limit.
     * @param {String} [locationId] Location ID. You can specify this optional filter  to retrieve only the linked bank accounts belonging to a specific location.
     * @param {module:api/BankAccountsApi~listBankAccountsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListBankAccountsResponse}
     */
    listBankAccounts(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'cursor': opts['cursor'],
        'limit': opts['limit'],
        'location_id': opts['locationId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListBankAccountsResponse;
      return this.apiClient.callApi(
        '/v2/bank-accounts', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
