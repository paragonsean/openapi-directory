/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BatchChangeInventoryRequest from '../model/BatchChangeInventoryRequest';
import BatchChangeInventoryResponse from '../model/BatchChangeInventoryResponse';
import BatchRetrieveInventoryChangesRequest from '../model/BatchRetrieveInventoryChangesRequest';
import BatchRetrieveInventoryChangesResponse from '../model/BatchRetrieveInventoryChangesResponse';
import BatchRetrieveInventoryCountsRequest from '../model/BatchRetrieveInventoryCountsRequest';
import BatchRetrieveInventoryCountsResponse from '../model/BatchRetrieveInventoryCountsResponse';
import RetrieveInventoryAdjustmentResponse from '../model/RetrieveInventoryAdjustmentResponse';
import RetrieveInventoryChangesResponse from '../model/RetrieveInventoryChangesResponse';
import RetrieveInventoryCountResponse from '../model/RetrieveInventoryCountResponse';
import RetrieveInventoryPhysicalCountResponse from '../model/RetrieveInventoryPhysicalCountResponse';
import RetrieveInventoryTransferResponse from '../model/RetrieveInventoryTransferResponse';

/**
* Inventory service.
* @module api/InventoryApi
* @version 2.0
*/
export default class InventoryApi {

    /**
    * Constructs a new InventoryApi. 
    * @alias module:api/InventoryApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the batchChangeInventory operation.
     * @callback module:api/InventoryApi~batchChangeInventoryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BatchChangeInventoryResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * BatchChangeInventory
     * Applies adjustments and counts to the provided item quantities.  On success: returns the current calculated counts for all objects referenced in the request. On failure: returns a list of related errors.
     * @param {module:model/BatchChangeInventoryRequest} batchChangeInventoryRequest An object containing the fields to POST for the request.  See the corresponding object definition for field details.
     * @param {module:api/InventoryApi~batchChangeInventoryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BatchChangeInventoryResponse}
     */
    batchChangeInventory(batchChangeInventoryRequest, callback) {
      let postBody = batchChangeInventoryRequest;
      // verify the required parameter 'batchChangeInventoryRequest' is set
      if (batchChangeInventoryRequest === undefined || batchChangeInventoryRequest === null) {
        throw new Error("Missing the required parameter 'batchChangeInventoryRequest' when calling batchChangeInventory");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BatchChangeInventoryResponse;
      return this.apiClient.callApi(
        '/v2/inventory/changes/batch-create', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the batchRetrieveInventoryChanges operation.
     * @callback module:api/InventoryApi~batchRetrieveInventoryChangesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BatchRetrieveInventoryChangesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * BatchRetrieveInventoryChanges
     * Returns historical physical counts and adjustments based on the provided filter criteria.  Results are paginated and sorted in ascending order according their `occurred_at` timestamp (oldest first).  BatchRetrieveInventoryChanges is a catch-all query endpoint for queries that cannot be handled by other, simpler endpoints.
     * @param {module:model/BatchRetrieveInventoryChangesRequest} batchRetrieveInventoryChangesRequest An object containing the fields to POST for the request.  See the corresponding object definition for field details.
     * @param {module:api/InventoryApi~batchRetrieveInventoryChangesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BatchRetrieveInventoryChangesResponse}
     */
    batchRetrieveInventoryChanges(batchRetrieveInventoryChangesRequest, callback) {
      let postBody = batchRetrieveInventoryChangesRequest;
      // verify the required parameter 'batchRetrieveInventoryChangesRequest' is set
      if (batchRetrieveInventoryChangesRequest === undefined || batchRetrieveInventoryChangesRequest === null) {
        throw new Error("Missing the required parameter 'batchRetrieveInventoryChangesRequest' when calling batchRetrieveInventoryChanges");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BatchRetrieveInventoryChangesResponse;
      return this.apiClient.callApi(
        '/v2/inventory/changes/batch-retrieve', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the batchRetrieveInventoryCounts operation.
     * @callback module:api/InventoryApi~batchRetrieveInventoryCountsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BatchRetrieveInventoryCountsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * BatchRetrieveInventoryCounts
     * Returns current counts for the provided [CatalogObject](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject)s at the requested [Location](https://developer.squareup.com/reference/square_2021-08-18/objects/Location)s.  Results are paginated and sorted in descending order according to their `calculated_at` timestamp (newest first).  When `updated_after` is specified, only counts that have changed since that time (based on the server timestamp for the most recent change) are returned. This allows clients to perform a \"sync\" operation, for example in response to receiving a Webhook notification.
     * @param {module:model/BatchRetrieveInventoryCountsRequest} batchRetrieveInventoryCountsRequest An object containing the fields to POST for the request.  See the corresponding object definition for field details.
     * @param {module:api/InventoryApi~batchRetrieveInventoryCountsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BatchRetrieveInventoryCountsResponse}
     */
    batchRetrieveInventoryCounts(batchRetrieveInventoryCountsRequest, callback) {
      let postBody = batchRetrieveInventoryCountsRequest;
      // verify the required parameter 'batchRetrieveInventoryCountsRequest' is set
      if (batchRetrieveInventoryCountsRequest === undefined || batchRetrieveInventoryCountsRequest === null) {
        throw new Error("Missing the required parameter 'batchRetrieveInventoryCountsRequest' when calling batchRetrieveInventoryCounts");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BatchRetrieveInventoryCountsResponse;
      return this.apiClient.callApi(
        '/v2/inventory/counts/batch-retrieve', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deprecatedBatchChangeInventory operation.
     * @callback module:api/InventoryApi~deprecatedBatchChangeInventoryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BatchChangeInventoryResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * DeprecatedBatchChangeInventory
     * Deprecated version of [BatchChangeInventory](https://developer.squareup.com/reference/square_2021-08-18/inventory-api/batch-change-inventory) after the endpoint URL  is updated to conform to the standard convention.
     * @param {module:model/BatchChangeInventoryRequest} batchChangeInventoryRequest An object containing the fields to POST for the request.  See the corresponding object definition for field details.
     * @param {module:api/InventoryApi~deprecatedBatchChangeInventoryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BatchChangeInventoryResponse}
     */
    deprecatedBatchChangeInventory(batchChangeInventoryRequest, callback) {
      let postBody = batchChangeInventoryRequest;
      // verify the required parameter 'batchChangeInventoryRequest' is set
      if (batchChangeInventoryRequest === undefined || batchChangeInventoryRequest === null) {
        throw new Error("Missing the required parameter 'batchChangeInventoryRequest' when calling deprecatedBatchChangeInventory");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BatchChangeInventoryResponse;
      return this.apiClient.callApi(
        '/v2/inventory/batch-change', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deprecatedBatchRetrieveInventoryChanges operation.
     * @callback module:api/InventoryApi~deprecatedBatchRetrieveInventoryChangesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BatchRetrieveInventoryChangesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * DeprecatedBatchRetrieveInventoryChanges
     * Deprecated version of [BatchRetrieveInventoryChanges](https://developer.squareup.com/reference/square_2021-08-18/inventory-api/batch-retrieve-inventory-changes) after the endpoint URL  is updated to conform to the standard convention.
     * @param {module:model/BatchRetrieveInventoryChangesRequest} batchRetrieveInventoryChangesRequest An object containing the fields to POST for the request.  See the corresponding object definition for field details.
     * @param {module:api/InventoryApi~deprecatedBatchRetrieveInventoryChangesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BatchRetrieveInventoryChangesResponse}
     */
    deprecatedBatchRetrieveInventoryChanges(batchRetrieveInventoryChangesRequest, callback) {
      let postBody = batchRetrieveInventoryChangesRequest;
      // verify the required parameter 'batchRetrieveInventoryChangesRequest' is set
      if (batchRetrieveInventoryChangesRequest === undefined || batchRetrieveInventoryChangesRequest === null) {
        throw new Error("Missing the required parameter 'batchRetrieveInventoryChangesRequest' when calling deprecatedBatchRetrieveInventoryChanges");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BatchRetrieveInventoryChangesResponse;
      return this.apiClient.callApi(
        '/v2/inventory/batch-retrieve-changes', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deprecatedBatchRetrieveInventoryCounts operation.
     * @callback module:api/InventoryApi~deprecatedBatchRetrieveInventoryCountsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BatchRetrieveInventoryCountsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * DeprecatedBatchRetrieveInventoryCounts
     * Deprecated version of [BatchRetrieveInventoryCounts](https://developer.squareup.com/reference/square_2021-08-18/inventory-api/batch-retrieve-inventory-counts) after the endpoint URL  is updated to conform to the standard convention.
     * @param {module:model/BatchRetrieveInventoryCountsRequest} batchRetrieveInventoryCountsRequest An object containing the fields to POST for the request.  See the corresponding object definition for field details.
     * @param {module:api/InventoryApi~deprecatedBatchRetrieveInventoryCountsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BatchRetrieveInventoryCountsResponse}
     */
    deprecatedBatchRetrieveInventoryCounts(batchRetrieveInventoryCountsRequest, callback) {
      let postBody = batchRetrieveInventoryCountsRequest;
      // verify the required parameter 'batchRetrieveInventoryCountsRequest' is set
      if (batchRetrieveInventoryCountsRequest === undefined || batchRetrieveInventoryCountsRequest === null) {
        throw new Error("Missing the required parameter 'batchRetrieveInventoryCountsRequest' when calling deprecatedBatchRetrieveInventoryCounts");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BatchRetrieveInventoryCountsResponse;
      return this.apiClient.callApi(
        '/v2/inventory/batch-retrieve-counts', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deprecatedRetrieveInventoryAdjustment operation.
     * @callback module:api/InventoryApi~deprecatedRetrieveInventoryAdjustmentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RetrieveInventoryAdjustmentResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * DeprecatedRetrieveInventoryAdjustment
     * Deprecated version of [RetrieveInventoryAdjustment](https://developer.squareup.com/reference/square_2021-08-18/inventory-api/retrieve-inventory-adjustment) after the endpoint URL  is updated to conform to the standard convention.
     * @param {String} adjustmentId ID of the [InventoryAdjustment](https://developer.squareup.com/reference/square_2021-08-18/objects/InventoryAdjustment) to retrieve.
     * @param {module:api/InventoryApi~deprecatedRetrieveInventoryAdjustmentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RetrieveInventoryAdjustmentResponse}
     */
    deprecatedRetrieveInventoryAdjustment(adjustmentId, callback) {
      let postBody = null;
      // verify the required parameter 'adjustmentId' is set
      if (adjustmentId === undefined || adjustmentId === null) {
        throw new Error("Missing the required parameter 'adjustmentId' when calling deprecatedRetrieveInventoryAdjustment");
      }

      let pathParams = {
        'adjustment_id': adjustmentId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = RetrieveInventoryAdjustmentResponse;
      return this.apiClient.callApi(
        '/v2/inventory/adjustment/{adjustment_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deprecatedRetrieveInventoryPhysicalCount operation.
     * @callback module:api/InventoryApi~deprecatedRetrieveInventoryPhysicalCountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RetrieveInventoryPhysicalCountResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * DeprecatedRetrieveInventoryPhysicalCount
     * Deprecated version of [RetrieveInventoryPhysicalCount](https://developer.squareup.com/reference/square_2021-08-18/inventory-api/retrieve-inventory-physical-count) after the endpoint URL  is updated to conform to the standard convention.
     * @param {String} physicalCountId ID of the [InventoryPhysicalCount](https://developer.squareup.com/reference/square_2021-08-18/objects/InventoryPhysicalCount) to retrieve.
     * @param {module:api/InventoryApi~deprecatedRetrieveInventoryPhysicalCountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RetrieveInventoryPhysicalCountResponse}
     */
    deprecatedRetrieveInventoryPhysicalCount(physicalCountId, callback) {
      let postBody = null;
      // verify the required parameter 'physicalCountId' is set
      if (physicalCountId === undefined || physicalCountId === null) {
        throw new Error("Missing the required parameter 'physicalCountId' when calling deprecatedRetrieveInventoryPhysicalCount");
      }

      let pathParams = {
        'physical_count_id': physicalCountId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = RetrieveInventoryPhysicalCountResponse;
      return this.apiClient.callApi(
        '/v2/inventory/physical-count/{physical_count_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the retrieveInventoryAdjustment operation.
     * @callback module:api/InventoryApi~retrieveInventoryAdjustmentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RetrieveInventoryAdjustmentResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * RetrieveInventoryAdjustment
     * Returns the [InventoryAdjustment](https://developer.squareup.com/reference/square_2021-08-18/objects/InventoryAdjustment) object with the provided `adjustment_id`.
     * @param {String} adjustmentId ID of the [InventoryAdjustment](https://developer.squareup.com/reference/square_2021-08-18/objects/InventoryAdjustment) to retrieve.
     * @param {module:api/InventoryApi~retrieveInventoryAdjustmentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RetrieveInventoryAdjustmentResponse}
     */
    retrieveInventoryAdjustment(adjustmentId, callback) {
      let postBody = null;
      // verify the required parameter 'adjustmentId' is set
      if (adjustmentId === undefined || adjustmentId === null) {
        throw new Error("Missing the required parameter 'adjustmentId' when calling retrieveInventoryAdjustment");
      }

      let pathParams = {
        'adjustment_id': adjustmentId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = RetrieveInventoryAdjustmentResponse;
      return this.apiClient.callApi(
        '/v2/inventory/adjustments/{adjustment_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the retrieveInventoryChanges operation.
     * @callback module:api/InventoryApi~retrieveInventoryChangesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RetrieveInventoryChangesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * RetrieveInventoryChanges
     * Returns a set of physical counts and inventory adjustments for the provided [CatalogObject](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject) at the requested [Location](https://developer.squareup.com/reference/square_2021-08-18/objects/Location)s.   You can achieve the same result by calling [BatchRetrieveInventoryChanges](https://developer.squareup.com/reference/square_2021-08-18/inventory-api/batch-retrieve-inventory-changes)  and having the `catalog_object_ids` list contain a single element of the `CatalogObject` ID.  Results are paginated and sorted in descending order according to their `occurred_at` timestamp (newest first).  There are no limits on how far back the caller can page. This endpoint can be  used to display recent changes for a specific item. For more sophisticated queries, use a batch endpoint.
     * @param {String} catalogObjectId ID of the [CatalogObject](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject) to retrieve.
     * @param {Object} opts Optional parameters
     * @param {String} [locationIds] The [Location](https://developer.squareup.com/reference/square_2021-08-18/objects/Location) IDs to look up as a comma-separated list. An empty list queries all locations.
     * @param {String} [cursor] A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for the original query.  See the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information.
     * @param {module:api/InventoryApi~retrieveInventoryChangesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RetrieveInventoryChangesResponse}
     */
    retrieveInventoryChanges(catalogObjectId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'catalogObjectId' is set
      if (catalogObjectId === undefined || catalogObjectId === null) {
        throw new Error("Missing the required parameter 'catalogObjectId' when calling retrieveInventoryChanges");
      }

      let pathParams = {
        'catalog_object_id': catalogObjectId
      };
      let queryParams = {
        'location_ids': opts['locationIds'],
        'cursor': opts['cursor']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = RetrieveInventoryChangesResponse;
      return this.apiClient.callApi(
        '/v2/inventory/{catalog_object_id}/changes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the retrieveInventoryCount operation.
     * @callback module:api/InventoryApi~retrieveInventoryCountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RetrieveInventoryCountResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * RetrieveInventoryCount
     * Retrieves the current calculated stock count for a given [CatalogObject](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject) at a given set of [Location](https://developer.squareup.com/reference/square_2021-08-18/objects/Location)s. Responses are paginated and unsorted. For more sophisticated queries, use a batch endpoint.
     * @param {String} catalogObjectId ID of the [CatalogObject](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject) to retrieve.
     * @param {Object} opts Optional parameters
     * @param {String} [locationIds] The [Location](https://developer.squareup.com/reference/square_2021-08-18/objects/Location) IDs to look up as a comma-separated list. An empty list queries all locations.
     * @param {String} [cursor] A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for the original query.  See the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information.
     * @param {module:api/InventoryApi~retrieveInventoryCountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RetrieveInventoryCountResponse}
     */
    retrieveInventoryCount(catalogObjectId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'catalogObjectId' is set
      if (catalogObjectId === undefined || catalogObjectId === null) {
        throw new Error("Missing the required parameter 'catalogObjectId' when calling retrieveInventoryCount");
      }

      let pathParams = {
        'catalog_object_id': catalogObjectId
      };
      let queryParams = {
        'location_ids': opts['locationIds'],
        'cursor': opts['cursor']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = RetrieveInventoryCountResponse;
      return this.apiClient.callApi(
        '/v2/inventory/{catalog_object_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the retrieveInventoryPhysicalCount operation.
     * @callback module:api/InventoryApi~retrieveInventoryPhysicalCountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RetrieveInventoryPhysicalCountResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * RetrieveInventoryPhysicalCount
     * Returns the [InventoryPhysicalCount](https://developer.squareup.com/reference/square_2021-08-18/objects/InventoryPhysicalCount) object with the provided `physical_count_id`.
     * @param {String} physicalCountId ID of the [InventoryPhysicalCount](https://developer.squareup.com/reference/square_2021-08-18/objects/InventoryPhysicalCount) to retrieve.
     * @param {module:api/InventoryApi~retrieveInventoryPhysicalCountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RetrieveInventoryPhysicalCountResponse}
     */
    retrieveInventoryPhysicalCount(physicalCountId, callback) {
      let postBody = null;
      // verify the required parameter 'physicalCountId' is set
      if (physicalCountId === undefined || physicalCountId === null) {
        throw new Error("Missing the required parameter 'physicalCountId' when calling retrieveInventoryPhysicalCount");
      }

      let pathParams = {
        'physical_count_id': physicalCountId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = RetrieveInventoryPhysicalCountResponse;
      return this.apiClient.callApi(
        '/v2/inventory/physical-counts/{physical_count_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the retrieveInventoryTransfer operation.
     * @callback module:api/InventoryApi~retrieveInventoryTransferCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RetrieveInventoryTransferResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * RetrieveInventoryTransfer
     * Returns the [InventoryTransfer](https://developer.squareup.com/reference/square_2021-08-18/objects/InventoryTransfer) object with the provided `transfer_id`.
     * @param {String} transferId ID of the [InventoryTransfer](https://developer.squareup.com/reference/square_2021-08-18/objects/InventoryTransfer) to retrieve.
     * @param {module:api/InventoryApi~retrieveInventoryTransferCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RetrieveInventoryTransferResponse}
     */
    retrieveInventoryTransfer(transferId, callback) {
      let postBody = null;
      // verify the required parameter 'transferId' is set
      if (transferId === undefined || transferId === null) {
        throw new Error("Missing the required parameter 'transferId' when calling retrieveInventoryTransfer");
      }

      let pathParams = {
        'transfer_id': transferId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = RetrieveInventoryTransferResponse;
      return this.apiClient.callApi(
        '/v2/inventory/transfers/{transfer_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
