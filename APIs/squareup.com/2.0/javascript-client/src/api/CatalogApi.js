/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BatchDeleteCatalogObjectsRequest from '../model/BatchDeleteCatalogObjectsRequest';
import BatchDeleteCatalogObjectsResponse from '../model/BatchDeleteCatalogObjectsResponse';
import BatchRetrieveCatalogObjectsRequest from '../model/BatchRetrieveCatalogObjectsRequest';
import BatchRetrieveCatalogObjectsResponse from '../model/BatchRetrieveCatalogObjectsResponse';
import BatchUpsertCatalogObjectsRequest from '../model/BatchUpsertCatalogObjectsRequest';
import BatchUpsertCatalogObjectsResponse from '../model/BatchUpsertCatalogObjectsResponse';
import CatalogInfoResponse from '../model/CatalogInfoResponse';
import DeleteCatalogObjectResponse from '../model/DeleteCatalogObjectResponse';
import ListCatalogResponse from '../model/ListCatalogResponse';
import RetrieveCatalogObjectResponse from '../model/RetrieveCatalogObjectResponse';
import SearchCatalogItemsRequest from '../model/SearchCatalogItemsRequest';
import SearchCatalogItemsResponse from '../model/SearchCatalogItemsResponse';
import SearchCatalogObjectsRequest from '../model/SearchCatalogObjectsRequest';
import SearchCatalogObjectsResponse from '../model/SearchCatalogObjectsResponse';
import UpdateItemModifierListsRequest from '../model/UpdateItemModifierListsRequest';
import UpdateItemModifierListsResponse from '../model/UpdateItemModifierListsResponse';
import UpdateItemTaxesRequest from '../model/UpdateItemTaxesRequest';
import UpdateItemTaxesResponse from '../model/UpdateItemTaxesResponse';
import UpsertCatalogObjectRequest from '../model/UpsertCatalogObjectRequest';
import UpsertCatalogObjectResponse from '../model/UpsertCatalogObjectResponse';

/**
* Catalog service.
* @module api/CatalogApi
* @version 2.0
*/
export default class CatalogApi {

    /**
    * Constructs a new CatalogApi. 
    * @alias module:api/CatalogApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the batchDeleteCatalogObjects operation.
     * @callback module:api/CatalogApi~batchDeleteCatalogObjectsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BatchDeleteCatalogObjectsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * BatchDeleteCatalogObjects
     * Deletes a set of [CatalogItem](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogItem)s based on the provided list of target IDs and returns a set of successfully deleted IDs in the response. Deletion is a cascading event such that all children of the targeted object are also deleted. For example, deleting a CatalogItem will also delete all of its [CatalogItemVariation](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogItemVariation) children.  `BatchDeleteCatalogObjects` succeeds even if only a portion of the targeted IDs can be deleted. The response will only include IDs that were actually deleted.
     * @param {module:model/BatchDeleteCatalogObjectsRequest} batchDeleteCatalogObjectsRequest An object containing the fields to POST for the request.  See the corresponding object definition for field details.
     * @param {module:api/CatalogApi~batchDeleteCatalogObjectsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BatchDeleteCatalogObjectsResponse}
     */
    batchDeleteCatalogObjects(batchDeleteCatalogObjectsRequest, callback) {
      let postBody = batchDeleteCatalogObjectsRequest;
      // verify the required parameter 'batchDeleteCatalogObjectsRequest' is set
      if (batchDeleteCatalogObjectsRequest === undefined || batchDeleteCatalogObjectsRequest === null) {
        throw new Error("Missing the required parameter 'batchDeleteCatalogObjectsRequest' when calling batchDeleteCatalogObjects");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BatchDeleteCatalogObjectsResponse;
      return this.apiClient.callApi(
        '/v2/catalog/batch-delete', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the batchRetrieveCatalogObjects operation.
     * @callback module:api/CatalogApi~batchRetrieveCatalogObjectsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BatchRetrieveCatalogObjectsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * BatchRetrieveCatalogObjects
     * Returns a set of objects based on the provided ID. Each [CatalogItem](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogItem) returned in the set includes all of its child information including: all of its [CatalogItemVariation](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogItemVariation) objects, references to its [CatalogModifierList](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogModifierList) objects, and the ids of any [CatalogTax](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogTax) objects that apply to it.
     * @param {module:model/BatchRetrieveCatalogObjectsRequest} batchRetrieveCatalogObjectsRequest An object containing the fields to POST for the request.  See the corresponding object definition for field details.
     * @param {module:api/CatalogApi~batchRetrieveCatalogObjectsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BatchRetrieveCatalogObjectsResponse}
     */
    batchRetrieveCatalogObjects(batchRetrieveCatalogObjectsRequest, callback) {
      let postBody = batchRetrieveCatalogObjectsRequest;
      // verify the required parameter 'batchRetrieveCatalogObjectsRequest' is set
      if (batchRetrieveCatalogObjectsRequest === undefined || batchRetrieveCatalogObjectsRequest === null) {
        throw new Error("Missing the required parameter 'batchRetrieveCatalogObjectsRequest' when calling batchRetrieveCatalogObjects");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BatchRetrieveCatalogObjectsResponse;
      return this.apiClient.callApi(
        '/v2/catalog/batch-retrieve', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the batchUpsertCatalogObjects operation.
     * @callback module:api/CatalogApi~batchUpsertCatalogObjectsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BatchUpsertCatalogObjectsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * BatchUpsertCatalogObjects
     * Creates or updates up to 10,000 target objects based on the provided list of objects. The target objects are grouped into batches and each batch is inserted/updated in an all-or-nothing manner. If an object within a batch is malformed in some way, or violates a database constraint, the entire batch containing that item will be disregarded. However, other batches in the same request may still succeed. Each batch may contain up to 1,000 objects, and batches will be processed in order as long as the total object count for the request (items, variations, modifier lists, discounts, and taxes) is no more than 10,000.
     * @param {module:model/BatchUpsertCatalogObjectsRequest} batchUpsertCatalogObjectsRequest An object containing the fields to POST for the request.  See the corresponding object definition for field details.
     * @param {module:api/CatalogApi~batchUpsertCatalogObjectsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BatchUpsertCatalogObjectsResponse}
     */
    batchUpsertCatalogObjects(batchUpsertCatalogObjectsRequest, callback) {
      let postBody = batchUpsertCatalogObjectsRequest;
      // verify the required parameter 'batchUpsertCatalogObjectsRequest' is set
      if (batchUpsertCatalogObjectsRequest === undefined || batchUpsertCatalogObjectsRequest === null) {
        throw new Error("Missing the required parameter 'batchUpsertCatalogObjectsRequest' when calling batchUpsertCatalogObjects");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BatchUpsertCatalogObjectsResponse;
      return this.apiClient.callApi(
        '/v2/catalog/batch-upsert', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the catalogInfo operation.
     * @callback module:api/CatalogApi~catalogInfoCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CatalogInfoResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * CatalogInfo
     * Retrieves information about the Square Catalog API, such as batch size limits that can be used by the `BatchUpsertCatalogObjects` endpoint.
     * @param {module:api/CatalogApi~catalogInfoCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CatalogInfoResponse}
     */
    catalogInfo(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CatalogInfoResponse;
      return this.apiClient.callApi(
        '/v2/catalog/info', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteCatalogObject operation.
     * @callback module:api/CatalogApi~deleteCatalogObjectCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeleteCatalogObjectResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * DeleteCatalogObject
     * Deletes a single [CatalogObject](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject) based on the provided ID and returns the set of successfully deleted IDs in the response. Deletion is a cascading event such that all children of the targeted object are also deleted. For example, deleting a [CatalogItem](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogItem) will also delete all of its [CatalogItemVariation](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogItemVariation) children.
     * @param {String} objectId The ID of the catalog object to be deleted. When an object is deleted, other objects in the graph that depend on that object will be deleted as well (for example, deleting a catalog item will delete its catalog item variations).
     * @param {module:api/CatalogApi~deleteCatalogObjectCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeleteCatalogObjectResponse}
     */
    deleteCatalogObject(objectId, callback) {
      let postBody = null;
      // verify the required parameter 'objectId' is set
      if (objectId === undefined || objectId === null) {
        throw new Error("Missing the required parameter 'objectId' when calling deleteCatalogObject");
      }

      let pathParams = {
        'object_id': objectId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DeleteCatalogObjectResponse;
      return this.apiClient.callApi(
        '/v2/catalog/object/{object_id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listCatalog operation.
     * @callback module:api/CatalogApi~listCatalogCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListCatalogResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * ListCatalog
     * Returns a list of [CatalogObject](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject)s that includes all objects of a set of desired types (for example, all [CatalogItem](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogItem) and [CatalogTax](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogTax) objects) in the catalog. The `types` parameter is specified as a comma-separated list of valid [CatalogObject](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject) types: `ITEM`, `ITEM_VARIATION`, `MODIFIER`, `MODIFIER_LIST`, `CATEGORY`, `DISCOUNT`, `TAX`, `IMAGE`.  __Important:__ ListCatalog does not return deleted catalog items. To retrieve deleted catalog items, use [SearchCatalogObjects](https://developer.squareup.com/reference/square_2021-08-18/catalog-api/search-catalog-objects) and set the `include_deleted_objects` attribute value to `true`.
     * @param {Object} opts Optional parameters
     * @param {String} [cursor] The pagination cursor returned in the previous response. Leave unset for an initial request. The page size is currently set to be 100. See [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information.
     * @param {String} [types] An optional case-insensitive, comma-separated list of object types to retrieve.  The valid values are defined in the [CatalogObjectType](https://developer.squareup.com/reference/square_2021-08-18/enums/CatalogObjectType) enum, including `ITEM`, `ITEM_VARIATION`, `CATEGORY`, `DISCOUNT`, `TAX`, `MODIFIER`, `MODIFIER_LIST`, or `IMAGE`.  If this is unspecified, the operation returns objects of all the types at the version of the Square API used to make the request.
     * @param {Number} [catalogVersion] The specific version of the catalog objects to be included in the response.  This allows you to retrieve historical versions of objects. The specified version value is matched against the [CatalogObject](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject)s' `version` attribute.
     * @param {module:api/CatalogApi~listCatalogCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListCatalogResponse}
     */
    listCatalog(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'cursor': opts['cursor'],
        'types': opts['types'],
        'catalog_version': opts['catalogVersion']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListCatalogResponse;
      return this.apiClient.callApi(
        '/v2/catalog/list', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the retrieveCatalogObject operation.
     * @callback module:api/CatalogApi~retrieveCatalogObjectCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RetrieveCatalogObjectResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * RetrieveCatalogObject
     * Returns a single [CatalogItem](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogItem) as a [CatalogObject](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject) based on the provided ID. The returned object includes all of the relevant [CatalogItem](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogItem) information including: [CatalogItemVariation](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogItemVariation) children, references to its [CatalogModifierList](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogModifierList) objects, and the ids of any [CatalogTax](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogTax) objects that apply to it.
     * @param {String} objectId The object ID of any type of catalog objects to be retrieved.
     * @param {Object} opts Optional parameters
     * @param {Boolean} [includeRelatedObjects] If `true`, the response will include additional objects that are related to the requested object, as follows:  If the `object` field of the response contains a `CatalogItem`, its associated `CatalogCategory`, `CatalogTax`, `CatalogImage` and `CatalogModifierList` objects will be returned in the `related_objects` field of the response. If the `object` field of the response contains a `CatalogItemVariation`, its parent `CatalogItem` will be returned in the `related_objects` field of the response.  Default value: `false`
     * @param {Number} [catalogVersion] Requests objects as of a specific version of the catalog. This allows you to retrieve historical versions of objects. The value to retrieve a specific version of an object can be found in the version field of [CatalogObject](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject)s.
     * @param {module:api/CatalogApi~retrieveCatalogObjectCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RetrieveCatalogObjectResponse}
     */
    retrieveCatalogObject(objectId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'objectId' is set
      if (objectId === undefined || objectId === null) {
        throw new Error("Missing the required parameter 'objectId' when calling retrieveCatalogObject");
      }

      let pathParams = {
        'object_id': objectId
      };
      let queryParams = {
        'include_related_objects': opts['includeRelatedObjects'],
        'catalog_version': opts['catalogVersion']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = RetrieveCatalogObjectResponse;
      return this.apiClient.callApi(
        '/v2/catalog/object/{object_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the searchCatalogItems operation.
     * @callback module:api/CatalogApi~searchCatalogItemsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SearchCatalogItemsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * SearchCatalogItems
     * Searches for catalog items or item variations by matching supported search attribute values, including custom attribute values, against one or more of the specified query expressions.  This (`SearchCatalogItems`) endpoint differs from the [SearchCatalogObjects](https://developer.squareup.com/reference/square_2021-08-18/catalog-api/search-catalog-objects) endpoint in the following aspects:  - `SearchCatalogItems` can only search for items or item variations, whereas `SearchCatalogObjects` can search for any type of catalog objects. - `SearchCatalogItems` supports the custom attribute query filters to return items or item variations that contain custom attribute values, where `SearchCatalogObjects` does not. - `SearchCatalogItems` does not support the `include_deleted_objects` filter to search for deleted items or item variations, whereas `SearchCatalogObjects` does. - The both endpoints use different call conventions, including the query filter formats.
     * @param {module:model/SearchCatalogItemsRequest} searchCatalogItemsRequest An object containing the fields to POST for the request.  See the corresponding object definition for field details.
     * @param {module:api/CatalogApi~searchCatalogItemsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SearchCatalogItemsResponse}
     */
    searchCatalogItems(searchCatalogItemsRequest, callback) {
      let postBody = searchCatalogItemsRequest;
      // verify the required parameter 'searchCatalogItemsRequest' is set
      if (searchCatalogItemsRequest === undefined || searchCatalogItemsRequest === null) {
        throw new Error("Missing the required parameter 'searchCatalogItemsRequest' when calling searchCatalogItems");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SearchCatalogItemsResponse;
      return this.apiClient.callApi(
        '/v2/catalog/search-catalog-items', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the searchCatalogObjects operation.
     * @callback module:api/CatalogApi~searchCatalogObjectsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SearchCatalogObjectsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * SearchCatalogObjects
     * Searches for [CatalogObject](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject) of any type by matching supported search attribute values, excluding custom attribute values on items or item variations, against one or more of the specified query expressions.  This (`SearchCatalogObjects`) endpoint differs from the [SearchCatalogItems](https://developer.squareup.com/reference/square_2021-08-18/catalog-api/search-catalog-items) endpoint in the following aspects:  - `SearchCatalogItems` can only search for items or item variations, whereas `SearchCatalogObjects` can search for any type of catalog objects. - `SearchCatalogItems` supports the custom attribute query filters to return items or item variations that contain custom attribute values, where `SearchCatalogObjects` does not. - `SearchCatalogItems` does not support the `include_deleted_objects` filter to search for deleted items or item variations, whereas `SearchCatalogObjects` does. - The both endpoints have different call conventions, including the query filter formats.
     * @param {module:model/SearchCatalogObjectsRequest} searchCatalogObjectsRequest An object containing the fields to POST for the request.  See the corresponding object definition for field details.
     * @param {module:api/CatalogApi~searchCatalogObjectsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SearchCatalogObjectsResponse}
     */
    searchCatalogObjects(searchCatalogObjectsRequest, callback) {
      let postBody = searchCatalogObjectsRequest;
      // verify the required parameter 'searchCatalogObjectsRequest' is set
      if (searchCatalogObjectsRequest === undefined || searchCatalogObjectsRequest === null) {
        throw new Error("Missing the required parameter 'searchCatalogObjectsRequest' when calling searchCatalogObjects");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SearchCatalogObjectsResponse;
      return this.apiClient.callApi(
        '/v2/catalog/search', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateItemModifierLists operation.
     * @callback module:api/CatalogApi~updateItemModifierListsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateItemModifierListsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * UpdateItemModifierLists
     * Updates the [CatalogModifierList](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogModifierList) objects that apply to the targeted [CatalogItem](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogItem) without having to perform an upsert on the entire item.
     * @param {module:model/UpdateItemModifierListsRequest} updateItemModifierListsRequest An object containing the fields to POST for the request.  See the corresponding object definition for field details.
     * @param {module:api/CatalogApi~updateItemModifierListsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateItemModifierListsResponse}
     */
    updateItemModifierLists(updateItemModifierListsRequest, callback) {
      let postBody = updateItemModifierListsRequest;
      // verify the required parameter 'updateItemModifierListsRequest' is set
      if (updateItemModifierListsRequest === undefined || updateItemModifierListsRequest === null) {
        throw new Error("Missing the required parameter 'updateItemModifierListsRequest' when calling updateItemModifierLists");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateItemModifierListsResponse;
      return this.apiClient.callApi(
        '/v2/catalog/update-item-modifier-lists', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateItemTaxes operation.
     * @callback module:api/CatalogApi~updateItemTaxesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateItemTaxesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * UpdateItemTaxes
     * Updates the [CatalogTax](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogTax) objects that apply to the targeted [CatalogItem](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogItem) without having to perform an upsert on the entire item.
     * @param {module:model/UpdateItemTaxesRequest} updateItemTaxesRequest An object containing the fields to POST for the request.  See the corresponding object definition for field details.
     * @param {module:api/CatalogApi~updateItemTaxesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateItemTaxesResponse}
     */
    updateItemTaxes(updateItemTaxesRequest, callback) {
      let postBody = updateItemTaxesRequest;
      // verify the required parameter 'updateItemTaxesRequest' is set
      if (updateItemTaxesRequest === undefined || updateItemTaxesRequest === null) {
        throw new Error("Missing the required parameter 'updateItemTaxesRequest' when calling updateItemTaxes");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateItemTaxesResponse;
      return this.apiClient.callApi(
        '/v2/catalog/update-item-taxes', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the upsertCatalogObject operation.
     * @callback module:api/CatalogApi~upsertCatalogObjectCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpsertCatalogObjectResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * UpsertCatalogObject
     * Creates or updates the target [CatalogObject](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject).
     * @param {module:model/UpsertCatalogObjectRequest} upsertCatalogObjectRequest An object containing the fields to POST for the request.  See the corresponding object definition for field details.
     * @param {module:api/CatalogApi~upsertCatalogObjectCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpsertCatalogObjectResponse}
     */
    upsertCatalogObject(upsertCatalogObjectRequest, callback) {
      let postBody = upsertCatalogObjectRequest;
      // verify the required parameter 'upsertCatalogObjectRequest' is set
      if (upsertCatalogObjectRequest === undefined || upsertCatalogObjectRequest === null) {
        throw new Error("Missing the required parameter 'upsertCatalogObjectRequest' when calling upsertCatalogObject");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpsertCatalogObjectResponse;
      return this.apiClient.callApi(
        '/v2/catalog/object', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
