/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import RegisterDomainRequest from '../model/RegisterDomainRequest';
import RegisterDomainResponse from '../model/RegisterDomainResponse';

/**
* ApplePay service.
* @module api/ApplePayApi
* @version 2.0
*/
export default class ApplePayApi {

    /**
    * Constructs a new ApplePayApi. 
    * @alias module:api/ApplePayApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the registerDomain operation.
     * @callback module:api/ApplePayApi~registerDomainCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RegisterDomainResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * RegisterDomain
     * Activates a domain for use with Apple Pay on the Web and Square. A validation is performed on this domain by Apple to ensure that it is properly set up as an Apple Pay enabled domain.  This endpoint provides an easy way for platform developers to bulk activate Apple Pay on the Web with Square for merchants using their platform.  To learn more about Web Apple Pay, see [Add the Apple Pay on the Web Button](https://developer.squareup.com/docs/payment-form/add-digital-wallets/apple-pay).
     * @param {module:model/RegisterDomainRequest} registerDomainRequest An object containing the fields to POST for the request.  See the corresponding object definition for field details.
     * @param {module:api/ApplePayApi~registerDomainCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RegisterDomainResponse}
     */
    registerDomain(registerDomainRequest, callback) {
      let postBody = registerDomainRequest;
      // verify the required parameter 'registerDomainRequest' is set
      if (registerDomainRequest === undefined || registerDomainRequest === null) {
        throw new Error("Missing the required parameter 'registerDomainRequest' when calling registerDomain");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = RegisterDomainResponse;
      return this.apiClient.callApi(
        '/v2/apple-pay/domains', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
