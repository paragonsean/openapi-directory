/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BulkCreateTeamMembersRequest from '../model/BulkCreateTeamMembersRequest';
import BulkCreateTeamMembersResponse from '../model/BulkCreateTeamMembersResponse';
import BulkUpdateTeamMembersRequest from '../model/BulkUpdateTeamMembersRequest';
import BulkUpdateTeamMembersResponse from '../model/BulkUpdateTeamMembersResponse';
import CreateTeamMemberRequest from '../model/CreateTeamMemberRequest';
import CreateTeamMemberResponse from '../model/CreateTeamMemberResponse';
import RetrieveTeamMemberResponse from '../model/RetrieveTeamMemberResponse';
import RetrieveWageSettingResponse from '../model/RetrieveWageSettingResponse';
import SearchTeamMembersRequest from '../model/SearchTeamMembersRequest';
import SearchTeamMembersResponse from '../model/SearchTeamMembersResponse';
import UpdateTeamMemberRequest from '../model/UpdateTeamMemberRequest';
import UpdateTeamMemberResponse from '../model/UpdateTeamMemberResponse';
import UpdateWageSettingRequest from '../model/UpdateWageSettingRequest';
import UpdateWageSettingResponse from '../model/UpdateWageSettingResponse';

/**
* Team service.
* @module api/TeamApi
* @version 2.0
*/
export default class TeamApi {

    /**
    * Constructs a new TeamApi. 
    * @alias module:api/TeamApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the bulkCreateTeamMembers operation.
     * @callback module:api/TeamApi~bulkCreateTeamMembersCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BulkCreateTeamMembersResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * BulkCreateTeamMembers
     * Creates multiple `TeamMember` objects. The created `TeamMember` objects are returned on successful creates. This process is non-transactional and processes as much of the request as possible. If one of the creates in the request cannot be successfully processed, the request is not marked as failed, but the body of the response contains explicit error information for the failed create.  Learn about [Troubleshooting the Team API](https://developer.squareup.com/docs/team/troubleshooting#bulk-create-team-members).
     * @param {module:model/BulkCreateTeamMembersRequest} bulkCreateTeamMembersRequest An object containing the fields to POST for the request.  See the corresponding object definition for field details.
     * @param {module:api/TeamApi~bulkCreateTeamMembersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BulkCreateTeamMembersResponse}
     */
    bulkCreateTeamMembers(bulkCreateTeamMembersRequest, callback) {
      let postBody = bulkCreateTeamMembersRequest;
      // verify the required parameter 'bulkCreateTeamMembersRequest' is set
      if (bulkCreateTeamMembersRequest === undefined || bulkCreateTeamMembersRequest === null) {
        throw new Error("Missing the required parameter 'bulkCreateTeamMembersRequest' when calling bulkCreateTeamMembers");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BulkCreateTeamMembersResponse;
      return this.apiClient.callApi(
        '/v2/team-members/bulk-create', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the bulkUpdateTeamMembers operation.
     * @callback module:api/TeamApi~bulkUpdateTeamMembersCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BulkUpdateTeamMembersResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * BulkUpdateTeamMembers
     * Updates multiple `TeamMember` objects. The updated `TeamMember` objects are returned on successful updates. This process is non-transactional and processes as much of the request as possible. If one of the updates in the request cannot be successfully processed, the request is not marked as failed, but the body of the response contains explicit error information for the failed update. Learn about [Troubleshooting the Team API](https://developer.squareup.com/docs/team/troubleshooting#bulk-update-team-members).
     * @param {module:model/BulkUpdateTeamMembersRequest} bulkUpdateTeamMembersRequest An object containing the fields to POST for the request.  See the corresponding object definition for field details.
     * @param {module:api/TeamApi~bulkUpdateTeamMembersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BulkUpdateTeamMembersResponse}
     */
    bulkUpdateTeamMembers(bulkUpdateTeamMembersRequest, callback) {
      let postBody = bulkUpdateTeamMembersRequest;
      // verify the required parameter 'bulkUpdateTeamMembersRequest' is set
      if (bulkUpdateTeamMembersRequest === undefined || bulkUpdateTeamMembersRequest === null) {
        throw new Error("Missing the required parameter 'bulkUpdateTeamMembersRequest' when calling bulkUpdateTeamMembers");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BulkUpdateTeamMembersResponse;
      return this.apiClient.callApi(
        '/v2/team-members/bulk-update', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createTeamMember operation.
     * @callback module:api/TeamApi~createTeamMemberCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateTeamMemberResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * CreateTeamMember
     * Creates a single `TeamMember` object. The `TeamMember` object is returned on successful creates. You must provide the following values in your request to this endpoint: - `given_name` - `family_name`  Learn about [Troubleshooting the Team API](https://developer.squareup.com/docs/team/troubleshooting#createteammember).
     * @param {module:model/CreateTeamMemberRequest} createTeamMemberRequest An object containing the fields to POST for the request.  See the corresponding object definition for field details.
     * @param {module:api/TeamApi~createTeamMemberCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateTeamMemberResponse}
     */
    createTeamMember(createTeamMemberRequest, callback) {
      let postBody = createTeamMemberRequest;
      // verify the required parameter 'createTeamMemberRequest' is set
      if (createTeamMemberRequest === undefined || createTeamMemberRequest === null) {
        throw new Error("Missing the required parameter 'createTeamMemberRequest' when calling createTeamMember");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateTeamMemberResponse;
      return this.apiClient.callApi(
        '/v2/team-members', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the retrieveTeamMember operation.
     * @callback module:api/TeamApi~retrieveTeamMemberCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RetrieveTeamMemberResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * RetrieveTeamMember
     * Retrieves a `TeamMember` object for the given `TeamMember.id`. Learn about [Troubleshooting the Team API](https://developer.squareup.com/docs/team/troubleshooting#retrieve-a-team-member).
     * @param {String} teamMemberId The ID of the team member to retrieve.
     * @param {module:api/TeamApi~retrieveTeamMemberCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RetrieveTeamMemberResponse}
     */
    retrieveTeamMember(teamMemberId, callback) {
      let postBody = null;
      // verify the required parameter 'teamMemberId' is set
      if (teamMemberId === undefined || teamMemberId === null) {
        throw new Error("Missing the required parameter 'teamMemberId' when calling retrieveTeamMember");
      }

      let pathParams = {
        'team_member_id': teamMemberId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = RetrieveTeamMemberResponse;
      return this.apiClient.callApi(
        '/v2/team-members/{team_member_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the retrieveWageSetting operation.
     * @callback module:api/TeamApi~retrieveWageSettingCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RetrieveWageSettingResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * RetrieveWageSetting
     * Retrieves a `WageSetting` object for a team member specified by `TeamMember.id`. Learn about [Troubleshooting the Team API](https://developer.squareup.com/docs/team/troubleshooting#retrievewagesetting).
     * @param {String} teamMemberId The ID of the team member for which to retrieve the wage setting.
     * @param {module:api/TeamApi~retrieveWageSettingCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RetrieveWageSettingResponse}
     */
    retrieveWageSetting(teamMemberId, callback) {
      let postBody = null;
      // verify the required parameter 'teamMemberId' is set
      if (teamMemberId === undefined || teamMemberId === null) {
        throw new Error("Missing the required parameter 'teamMemberId' when calling retrieveWageSetting");
      }

      let pathParams = {
        'team_member_id': teamMemberId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = RetrieveWageSettingResponse;
      return this.apiClient.callApi(
        '/v2/team-members/{team_member_id}/wage-setting', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the searchTeamMembers operation.
     * @callback module:api/TeamApi~searchTeamMembersCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SearchTeamMembersResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * SearchTeamMembers
     * Returns a paginated list of `TeamMember` objects for a business. The list can be filtered by the following: - location IDs - `status`
     * @param {module:model/SearchTeamMembersRequest} searchTeamMembersRequest An object containing the fields to POST for the request.  See the corresponding object definition for field details.
     * @param {module:api/TeamApi~searchTeamMembersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SearchTeamMembersResponse}
     */
    searchTeamMembers(searchTeamMembersRequest, callback) {
      let postBody = searchTeamMembersRequest;
      // verify the required parameter 'searchTeamMembersRequest' is set
      if (searchTeamMembersRequest === undefined || searchTeamMembersRequest === null) {
        throw new Error("Missing the required parameter 'searchTeamMembersRequest' when calling searchTeamMembers");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SearchTeamMembersResponse;
      return this.apiClient.callApi(
        '/v2/team-members/search', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateTeamMember operation.
     * @callback module:api/TeamApi~updateTeamMemberCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateTeamMemberResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * UpdateTeamMember
     * Updates a single `TeamMember` object. The `TeamMember` object is returned on successful updates. Learn about [Troubleshooting the Team API](https://developer.squareup.com/docs/team/troubleshooting#update-a-team-member).
     * @param {String} teamMemberId The ID of the team member to update.
     * @param {module:model/UpdateTeamMemberRequest} updateTeamMemberRequest An object containing the fields to POST for the request.  See the corresponding object definition for field details.
     * @param {module:api/TeamApi~updateTeamMemberCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateTeamMemberResponse}
     */
    updateTeamMember(teamMemberId, updateTeamMemberRequest, callback) {
      let postBody = updateTeamMemberRequest;
      // verify the required parameter 'teamMemberId' is set
      if (teamMemberId === undefined || teamMemberId === null) {
        throw new Error("Missing the required parameter 'teamMemberId' when calling updateTeamMember");
      }
      // verify the required parameter 'updateTeamMemberRequest' is set
      if (updateTeamMemberRequest === undefined || updateTeamMemberRequest === null) {
        throw new Error("Missing the required parameter 'updateTeamMemberRequest' when calling updateTeamMember");
      }

      let pathParams = {
        'team_member_id': teamMemberId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateTeamMemberResponse;
      return this.apiClient.callApi(
        '/v2/team-members/{team_member_id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateWageSetting operation.
     * @callback module:api/TeamApi~updateWageSettingCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateWageSettingResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * UpdateWageSetting
     * Creates or updates a `WageSetting` object. The object is created if a `WageSetting` with the specified `team_member_id` does not exist. Otherwise, it fully replaces the `WageSetting` object for the team member. The `WageSetting` is returned on a successful update. Learn about [Troubleshooting the Team API](https://developer.squareup.com/docs/team/troubleshooting#create-or-update-a-wage-setting).
     * @param {String} teamMemberId The ID of the team member for which to update the `WageSetting` object.
     * @param {module:model/UpdateWageSettingRequest} updateWageSettingRequest An object containing the fields to POST for the request.  See the corresponding object definition for field details.
     * @param {module:api/TeamApi~updateWageSettingCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateWageSettingResponse}
     */
    updateWageSetting(teamMemberId, updateWageSettingRequest, callback) {
      let postBody = updateWageSettingRequest;
      // verify the required parameter 'teamMemberId' is set
      if (teamMemberId === undefined || teamMemberId === null) {
        throw new Error("Missing the required parameter 'teamMemberId' when calling updateWageSetting");
      }
      // verify the required parameter 'updateWageSettingRequest' is set
      if (updateWageSettingRequest === undefined || updateWageSettingRequest === null) {
        throw new Error("Missing the required parameter 'updateWageSettingRequest' when calling updateWageSetting");
      }

      let pathParams = {
        'team_member_id': teamMemberId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateWageSettingResponse;
      return this.apiClient.callApi(
        '/v2/team-members/{team_member_id}/wage-setting', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
