/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIV1PaymentSurcharge.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIV1PaymentSurcharge::OAIV1PaymentSurcharge(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIV1PaymentSurcharge::OAIV1PaymentSurcharge() {
    this->initializeModel();
}

OAIV1PaymentSurcharge::~OAIV1PaymentSurcharge() {}

void OAIV1PaymentSurcharge::initializeModel() {

    m_amount_money_isSet = false;
    m_amount_money_isValid = false;

    m_applied_money_isSet = false;
    m_applied_money_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_rate_isSet = false;
    m_rate_isValid = false;

    m_surcharge_id_isSet = false;
    m_surcharge_id_isValid = false;

    m_taxable_isSet = false;
    m_taxable_isValid = false;

    m_taxes_isSet = false;
    m_taxes_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIV1PaymentSurcharge::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIV1PaymentSurcharge::fromJsonObject(QJsonObject json) {

    m_amount_money_isValid = ::OpenAPI::fromJsonValue(m_amount_money, json[QString("amount_money")]);
    m_amount_money_isSet = !json[QString("amount_money")].isNull() && m_amount_money_isValid;

    m_applied_money_isValid = ::OpenAPI::fromJsonValue(m_applied_money, json[QString("applied_money")]);
    m_applied_money_isSet = !json[QString("applied_money")].isNull() && m_applied_money_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_rate_isValid = ::OpenAPI::fromJsonValue(m_rate, json[QString("rate")]);
    m_rate_isSet = !json[QString("rate")].isNull() && m_rate_isValid;

    m_surcharge_id_isValid = ::OpenAPI::fromJsonValue(m_surcharge_id, json[QString("surcharge_id")]);
    m_surcharge_id_isSet = !json[QString("surcharge_id")].isNull() && m_surcharge_id_isValid;

    m_taxable_isValid = ::OpenAPI::fromJsonValue(m_taxable, json[QString("taxable")]);
    m_taxable_isSet = !json[QString("taxable")].isNull() && m_taxable_isValid;

    m_taxes_isValid = ::OpenAPI::fromJsonValue(m_taxes, json[QString("taxes")]);
    m_taxes_isSet = !json[QString("taxes")].isNull() && m_taxes_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIV1PaymentSurcharge::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIV1PaymentSurcharge::asJsonObject() const {
    QJsonObject obj;
    if (m_amount_money.isSet()) {
        obj.insert(QString("amount_money"), ::OpenAPI::toJsonValue(m_amount_money));
    }
    if (m_applied_money.isSet()) {
        obj.insert(QString("applied_money"), ::OpenAPI::toJsonValue(m_applied_money));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_rate_isSet) {
        obj.insert(QString("rate"), ::OpenAPI::toJsonValue(m_rate));
    }
    if (m_surcharge_id_isSet) {
        obj.insert(QString("surcharge_id"), ::OpenAPI::toJsonValue(m_surcharge_id));
    }
    if (m_taxable_isSet) {
        obj.insert(QString("taxable"), ::OpenAPI::toJsonValue(m_taxable));
    }
    if (m_taxes.size() > 0) {
        obj.insert(QString("taxes"), ::OpenAPI::toJsonValue(m_taxes));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

OAIV1Money OAIV1PaymentSurcharge::getAmountMoney() const {
    return m_amount_money;
}
void OAIV1PaymentSurcharge::setAmountMoney(const OAIV1Money &amount_money) {
    m_amount_money = amount_money;
    m_amount_money_isSet = true;
}

bool OAIV1PaymentSurcharge::is_amount_money_Set() const{
    return m_amount_money_isSet;
}

bool OAIV1PaymentSurcharge::is_amount_money_Valid() const{
    return m_amount_money_isValid;
}

OAIV1Money OAIV1PaymentSurcharge::getAppliedMoney() const {
    return m_applied_money;
}
void OAIV1PaymentSurcharge::setAppliedMoney(const OAIV1Money &applied_money) {
    m_applied_money = applied_money;
    m_applied_money_isSet = true;
}

bool OAIV1PaymentSurcharge::is_applied_money_Set() const{
    return m_applied_money_isSet;
}

bool OAIV1PaymentSurcharge::is_applied_money_Valid() const{
    return m_applied_money_isValid;
}

QString OAIV1PaymentSurcharge::getName() const {
    return m_name;
}
void OAIV1PaymentSurcharge::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIV1PaymentSurcharge::is_name_Set() const{
    return m_name_isSet;
}

bool OAIV1PaymentSurcharge::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIV1PaymentSurcharge::getRate() const {
    return m_rate;
}
void OAIV1PaymentSurcharge::setRate(const QString &rate) {
    m_rate = rate;
    m_rate_isSet = true;
}

bool OAIV1PaymentSurcharge::is_rate_Set() const{
    return m_rate_isSet;
}

bool OAIV1PaymentSurcharge::is_rate_Valid() const{
    return m_rate_isValid;
}

QString OAIV1PaymentSurcharge::getSurchargeId() const {
    return m_surcharge_id;
}
void OAIV1PaymentSurcharge::setSurchargeId(const QString &surcharge_id) {
    m_surcharge_id = surcharge_id;
    m_surcharge_id_isSet = true;
}

bool OAIV1PaymentSurcharge::is_surcharge_id_Set() const{
    return m_surcharge_id_isSet;
}

bool OAIV1PaymentSurcharge::is_surcharge_id_Valid() const{
    return m_surcharge_id_isValid;
}

bool OAIV1PaymentSurcharge::isTaxable() const {
    return m_taxable;
}
void OAIV1PaymentSurcharge::setTaxable(const bool &taxable) {
    m_taxable = taxable;
    m_taxable_isSet = true;
}

bool OAIV1PaymentSurcharge::is_taxable_Set() const{
    return m_taxable_isSet;
}

bool OAIV1PaymentSurcharge::is_taxable_Valid() const{
    return m_taxable_isValid;
}

QList<OAIV1PaymentTax> OAIV1PaymentSurcharge::getTaxes() const {
    return m_taxes;
}
void OAIV1PaymentSurcharge::setTaxes(const QList<OAIV1PaymentTax> &taxes) {
    m_taxes = taxes;
    m_taxes_isSet = true;
}

bool OAIV1PaymentSurcharge::is_taxes_Set() const{
    return m_taxes_isSet;
}

bool OAIV1PaymentSurcharge::is_taxes_Valid() const{
    return m_taxes_isValid;
}

QString OAIV1PaymentSurcharge::getType() const {
    return m_type;
}
void OAIV1PaymentSurcharge::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIV1PaymentSurcharge::is_type_Set() const{
    return m_type_isSet;
}

bool OAIV1PaymentSurcharge::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIV1PaymentSurcharge::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amount_money.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_applied_money.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_surcharge_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_taxable_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_taxes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIV1PaymentSurcharge::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
