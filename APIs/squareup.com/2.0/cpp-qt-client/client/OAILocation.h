/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILocation.h
 *
 * 
 */

#ifndef OAILocation_H
#define OAILocation_H

#include <QJsonObject>

#include "OAIAddress.h"
#include "OAIBusinessHours.h"
#include "OAICoordinates.h"
#include "OAITaxIds.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAddress;
class OAIBusinessHours;
class OAICoordinates;
class OAITaxIds;

class OAILocation : public OAIObject {
public:
    OAILocation();
    OAILocation(QString json);
    ~OAILocation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAddress getAddress() const;
    void setAddress(const OAIAddress &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    QString getBusinessEmail() const;
    void setBusinessEmail(const QString &business_email);
    bool is_business_email_Set() const;
    bool is_business_email_Valid() const;

    OAIBusinessHours getBusinessHours() const;
    void setBusinessHours(const OAIBusinessHours &business_hours);
    bool is_business_hours_Set() const;
    bool is_business_hours_Valid() const;

    QString getBusinessName() const;
    void setBusinessName(const QString &business_name);
    bool is_business_name_Set() const;
    bool is_business_name_Valid() const;

    QList<QString> getCapabilities() const;
    void setCapabilities(const QList<QString> &capabilities);
    bool is_capabilities_Set() const;
    bool is_capabilities_Valid() const;

    OAICoordinates getCoordinates() const;
    void setCoordinates(const OAICoordinates &coordinates);
    bool is_coordinates_Set() const;
    bool is_coordinates_Valid() const;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    QString getCreatedAt() const;
    void setCreatedAt(const QString &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getCurrency() const;
    void setCurrency(const QString &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getFacebookUrl() const;
    void setFacebookUrl(const QString &facebook_url);
    bool is_facebook_url_Set() const;
    bool is_facebook_url_Valid() const;

    QString getFullFormatLogoUrl() const;
    void setFullFormatLogoUrl(const QString &full_format_logo_url);
    bool is_full_format_logo_url_Set() const;
    bool is_full_format_logo_url_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getInstagramUsername() const;
    void setInstagramUsername(const QString &instagram_username);
    bool is_instagram_username_Set() const;
    bool is_instagram_username_Valid() const;

    QString getLanguageCode() const;
    void setLanguageCode(const QString &language_code);
    bool is_language_code_Set() const;
    bool is_language_code_Valid() const;

    QString getLogoUrl() const;
    void setLogoUrl(const QString &logo_url);
    bool is_logo_url_Set() const;
    bool is_logo_url_Valid() const;

    QString getMcc() const;
    void setMcc(const QString &mcc);
    bool is_mcc_Set() const;
    bool is_mcc_Valid() const;

    QString getMerchantId() const;
    void setMerchantId(const QString &merchant_id);
    bool is_merchant_id_Set() const;
    bool is_merchant_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPhoneNumber() const;
    void setPhoneNumber(const QString &phone_number);
    bool is_phone_number_Set() const;
    bool is_phone_number_Valid() const;

    QString getPosBackgroundUrl() const;
    void setPosBackgroundUrl(const QString &pos_background_url);
    bool is_pos_background_url_Set() const;
    bool is_pos_background_url_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    OAITaxIds getTaxIds() const;
    void setTaxIds(const OAITaxIds &tax_ids);
    bool is_tax_ids_Set() const;
    bool is_tax_ids_Valid() const;

    QString getTimezone() const;
    void setTimezone(const QString &timezone);
    bool is_timezone_Set() const;
    bool is_timezone_Valid() const;

    QString getTwitterUsername() const;
    void setTwitterUsername(const QString &twitter_username);
    bool is_twitter_username_Set() const;
    bool is_twitter_username_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getWebsiteUrl() const;
    void setWebsiteUrl(const QString &website_url);
    bool is_website_url_Set() const;
    bool is_website_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAddress m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    QString m_business_email;
    bool m_business_email_isSet;
    bool m_business_email_isValid;

    OAIBusinessHours m_business_hours;
    bool m_business_hours_isSet;
    bool m_business_hours_isValid;

    QString m_business_name;
    bool m_business_name_isSet;
    bool m_business_name_isValid;

    QList<QString> m_capabilities;
    bool m_capabilities_isSet;
    bool m_capabilities_isValid;

    OAICoordinates m_coordinates;
    bool m_coordinates_isSet;
    bool m_coordinates_isValid;

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    QString m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_facebook_url;
    bool m_facebook_url_isSet;
    bool m_facebook_url_isValid;

    QString m_full_format_logo_url;
    bool m_full_format_logo_url_isSet;
    bool m_full_format_logo_url_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_instagram_username;
    bool m_instagram_username_isSet;
    bool m_instagram_username_isValid;

    QString m_language_code;
    bool m_language_code_isSet;
    bool m_language_code_isValid;

    QString m_logo_url;
    bool m_logo_url_isSet;
    bool m_logo_url_isValid;

    QString m_mcc;
    bool m_mcc_isSet;
    bool m_mcc_isValid;

    QString m_merchant_id;
    bool m_merchant_id_isSet;
    bool m_merchant_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_phone_number;
    bool m_phone_number_isSet;
    bool m_phone_number_isValid;

    QString m_pos_background_url;
    bool m_pos_background_url_isSet;
    bool m_pos_background_url_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    OAITaxIds m_tax_ids;
    bool m_tax_ids_isSet;
    bool m_tax_ids_isValid;

    QString m_timezone;
    bool m_timezone_isSet;
    bool m_timezone_isValid;

    QString m_twitter_username;
    bool m_twitter_username_isSet;
    bool m_twitter_username_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_website_url;
    bool m_website_url_isSet;
    bool m_website_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILocation)

#endif // OAILocation_H
