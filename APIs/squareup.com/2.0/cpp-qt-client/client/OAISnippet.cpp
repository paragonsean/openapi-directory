/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISnippet.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISnippet::OAISnippet(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISnippet::OAISnippet() {
    this->initializeModel();
}

OAISnippet::~OAISnippet() {}

void OAISnippet::initializeModel() {

    m_content_isSet = false;
    m_content_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_site_id_isSet = false;
    m_site_id_isValid = false;

    m_updated_at_isSet = false;
    m_updated_at_isValid = false;
}

void OAISnippet::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISnippet::fromJsonObject(QJsonObject json) {

    m_content_isValid = ::OpenAPI::fromJsonValue(m_content, json[QString("content")]);
    m_content_isSet = !json[QString("content")].isNull() && m_content_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_site_id_isValid = ::OpenAPI::fromJsonValue(m_site_id, json[QString("site_id")]);
    m_site_id_isSet = !json[QString("site_id")].isNull() && m_site_id_isValid;

    m_updated_at_isValid = ::OpenAPI::fromJsonValue(m_updated_at, json[QString("updated_at")]);
    m_updated_at_isSet = !json[QString("updated_at")].isNull() && m_updated_at_isValid;
}

QString OAISnippet::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISnippet::asJsonObject() const {
    QJsonObject obj;
    if (m_content_isSet) {
        obj.insert(QString("content"), ::OpenAPI::toJsonValue(m_content));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_site_id_isSet) {
        obj.insert(QString("site_id"), ::OpenAPI::toJsonValue(m_site_id));
    }
    if (m_updated_at_isSet) {
        obj.insert(QString("updated_at"), ::OpenAPI::toJsonValue(m_updated_at));
    }
    return obj;
}

QString OAISnippet::getContent() const {
    return m_content;
}
void OAISnippet::setContent(const QString &content) {
    m_content = content;
    m_content_isSet = true;
}

bool OAISnippet::is_content_Set() const{
    return m_content_isSet;
}

bool OAISnippet::is_content_Valid() const{
    return m_content_isValid;
}

QString OAISnippet::getCreatedAt() const {
    return m_created_at;
}
void OAISnippet::setCreatedAt(const QString &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAISnippet::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAISnippet::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAISnippet::getId() const {
    return m_id;
}
void OAISnippet::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAISnippet::is_id_Set() const{
    return m_id_isSet;
}

bool OAISnippet::is_id_Valid() const{
    return m_id_isValid;
}

QString OAISnippet::getSiteId() const {
    return m_site_id;
}
void OAISnippet::setSiteId(const QString &site_id) {
    m_site_id = site_id;
    m_site_id_isSet = true;
}

bool OAISnippet::is_site_id_Set() const{
    return m_site_id_isSet;
}

bool OAISnippet::is_site_id_Valid() const{
    return m_site_id_isValid;
}

QString OAISnippet::getUpdatedAt() const {
    return m_updated_at;
}
void OAISnippet::setUpdatedAt(const QString &updated_at) {
    m_updated_at = updated_at;
    m_updated_at_isSet = true;
}

bool OAISnippet::is_updated_at_Set() const{
    return m_updated_at_isSet;
}

bool OAISnippet::is_updated_at_Valid() const{
    return m_updated_at_isValid;
}

bool OAISnippet::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_content_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_site_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_at_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISnippet::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_content_isValid && true;
}

} // namespace OpenAPI
