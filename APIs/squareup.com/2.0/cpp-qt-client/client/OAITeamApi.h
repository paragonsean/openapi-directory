/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef OAI_OAITeamApi_H
#define OAI_OAITeamApi_H

#include "OAIHelpers.h"
#include "OAIHttpRequest.h"
#include "OAIServerConfiguration.h"
#include "OAIOauth.h"

#include "OAIBulkCreateTeamMembersRequest.h"
#include "OAIBulkCreateTeamMembersResponse.h"
#include "OAIBulkUpdateTeamMembersRequest.h"
#include "OAIBulkUpdateTeamMembersResponse.h"
#include "OAICreateTeamMemberRequest.h"
#include "OAICreateTeamMemberResponse.h"
#include "OAIRetrieveTeamMemberResponse.h"
#include "OAIRetrieveWageSettingResponse.h"
#include "OAISearchTeamMembersRequest.h"
#include "OAISearchTeamMembersResponse.h"
#include "OAIUpdateTeamMemberRequest.h"
#include "OAIUpdateTeamMemberResponse.h"
#include "OAIUpdateWageSettingRequest.h"
#include "OAIUpdateWageSettingResponse.h"
#include <QString>

#include <QObject>
#include <QByteArray>
#include <QStringList>
#include <QList>
#include <QNetworkAccessManager>

namespace OpenAPI {

class OAITeamApi : public QObject {
    Q_OBJECT

public:
    OAITeamApi(const int timeOut = 0);
    ~OAITeamApi();

    void initializeServerConfigs();
    int setDefaultServerValue(int serverIndex,const QString &operation, const QString &variable,const QString &val);
    void setServerIndex(const QString &operation, int serverIndex);
    void setApiKey(const QString &apiKeyName, const QString &apiKey);
    void setBearerToken(const QString &token);
    void setUsername(const QString &username);
    void setPassword(const QString &password);
    void setTimeOut(const int timeOut);
    void setWorkingDirectory(const QString &path);
    void setNetworkAccessManager(QNetworkAccessManager* manager);
    int addServerConfiguration(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables = QMap<QString, OAIServerVariable>());
    void setNewServerForAllOperations(const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void setNewServer(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void addHeaders(const QString &key, const QString &value);
    void enableRequestCompression();
    void enableResponseCompression();
    void abortRequests();
    QString getParamStylePrefix(const QString &style);
    QString getParamStyleSuffix(const QString &style);
    QString getParamStyleDelimiter(const QString &style, const QString &name, bool isExplode);

    /**
    * @param[in]  oai_bulk_create_team_members_request OAIBulkCreateTeamMembersRequest [required]
    */
    virtual void bulkCreateTeamMembers(const OAIBulkCreateTeamMembersRequest &oai_bulk_create_team_members_request);

    /**
    * @param[in]  oai_bulk_update_team_members_request OAIBulkUpdateTeamMembersRequest [required]
    */
    virtual void bulkUpdateTeamMembers(const OAIBulkUpdateTeamMembersRequest &oai_bulk_update_team_members_request);

    /**
    * @param[in]  oai_create_team_member_request OAICreateTeamMemberRequest [required]
    */
    virtual void createTeamMember(const OAICreateTeamMemberRequest &oai_create_team_member_request);

    /**
    * @param[in]  team_member_id QString [required]
    */
    virtual void retrieveTeamMember(const QString &team_member_id);

    /**
    * @param[in]  team_member_id QString [required]
    */
    virtual void retrieveWageSetting(const QString &team_member_id);

    /**
    * @param[in]  oai_search_team_members_request OAISearchTeamMembersRequest [required]
    */
    virtual void searchTeamMembers(const OAISearchTeamMembersRequest &oai_search_team_members_request);

    /**
    * @param[in]  team_member_id QString [required]
    * @param[in]  oai_update_team_member_request OAIUpdateTeamMemberRequest [required]
    */
    virtual void updateTeamMember(const QString &team_member_id, const OAIUpdateTeamMemberRequest &oai_update_team_member_request);

    /**
    * @param[in]  team_member_id QString [required]
    * @param[in]  oai_update_wage_setting_request OAIUpdateWageSettingRequest [required]
    */
    virtual void updateWageSetting(const QString &team_member_id, const OAIUpdateWageSettingRequest &oai_update_wage_setting_request);


private:
    QMap<QString,int> _serverIndices;
    QMap<QString,QList<OAIServerConfiguration>> _serverConfigs;
    QMap<QString, QString> _apiKeys;
    QString _bearerToken;
    QString _username;
    QString _password;
    int _timeOut;
    QString _workingDirectory;
    QNetworkAccessManager* _manager;
    QMap<QString, QString> _defaultHeaders;
    bool _isResponseCompressionEnabled;
    bool _isRequestCompressionEnabled;
    OAIHttpRequestInput _latestInput;
    OAIHttpRequestWorker *_latestWorker;
    QStringList _latestScope;
    OauthCode _authFlow;
    OauthImplicit _implicitFlow;
    OauthCredentials _credentialFlow;
    OauthPassword _passwordFlow;
    int _OauthMethod = 0;

    void bulkCreateTeamMembersCallback(OAIHttpRequestWorker *worker);
    void bulkUpdateTeamMembersCallback(OAIHttpRequestWorker *worker);
    void createTeamMemberCallback(OAIHttpRequestWorker *worker);
    void retrieveTeamMemberCallback(OAIHttpRequestWorker *worker);
    void retrieveWageSettingCallback(OAIHttpRequestWorker *worker);
    void searchTeamMembersCallback(OAIHttpRequestWorker *worker);
    void updateTeamMemberCallback(OAIHttpRequestWorker *worker);
    void updateWageSettingCallback(OAIHttpRequestWorker *worker);

Q_SIGNALS:

    void bulkCreateTeamMembersSignal(OAIBulkCreateTeamMembersResponse summary);
    void bulkUpdateTeamMembersSignal(OAIBulkUpdateTeamMembersResponse summary);
    void createTeamMemberSignal(OAICreateTeamMemberResponse summary);
    void retrieveTeamMemberSignal(OAIRetrieveTeamMemberResponse summary);
    void retrieveWageSettingSignal(OAIRetrieveWageSettingResponse summary);
    void searchTeamMembersSignal(OAISearchTeamMembersResponse summary);
    void updateTeamMemberSignal(OAIUpdateTeamMemberResponse summary);
    void updateWageSettingSignal(OAIUpdateWageSettingResponse summary);


    void bulkCreateTeamMembersSignalFull(OAIHttpRequestWorker *worker, OAIBulkCreateTeamMembersResponse summary);
    void bulkUpdateTeamMembersSignalFull(OAIHttpRequestWorker *worker, OAIBulkUpdateTeamMembersResponse summary);
    void createTeamMemberSignalFull(OAIHttpRequestWorker *worker, OAICreateTeamMemberResponse summary);
    void retrieveTeamMemberSignalFull(OAIHttpRequestWorker *worker, OAIRetrieveTeamMemberResponse summary);
    void retrieveWageSettingSignalFull(OAIHttpRequestWorker *worker, OAIRetrieveWageSettingResponse summary);
    void searchTeamMembersSignalFull(OAIHttpRequestWorker *worker, OAISearchTeamMembersResponse summary);
    void updateTeamMemberSignalFull(OAIHttpRequestWorker *worker, OAIUpdateTeamMemberResponse summary);
    void updateWageSettingSignalFull(OAIHttpRequestWorker *worker, OAIUpdateWageSettingResponse summary);

    Q_DECL_DEPRECATED_X("Use bulkCreateTeamMembersSignalError() instead")
    void bulkCreateTeamMembersSignalE(OAIBulkCreateTeamMembersResponse summary, QNetworkReply::NetworkError error_type, QString error_str);
    void bulkCreateTeamMembersSignalError(OAIBulkCreateTeamMembersResponse summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use bulkUpdateTeamMembersSignalError() instead")
    void bulkUpdateTeamMembersSignalE(OAIBulkUpdateTeamMembersResponse summary, QNetworkReply::NetworkError error_type, QString error_str);
    void bulkUpdateTeamMembersSignalError(OAIBulkUpdateTeamMembersResponse summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use createTeamMemberSignalError() instead")
    void createTeamMemberSignalE(OAICreateTeamMemberResponse summary, QNetworkReply::NetworkError error_type, QString error_str);
    void createTeamMemberSignalError(OAICreateTeamMemberResponse summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use retrieveTeamMemberSignalError() instead")
    void retrieveTeamMemberSignalE(OAIRetrieveTeamMemberResponse summary, QNetworkReply::NetworkError error_type, QString error_str);
    void retrieveTeamMemberSignalError(OAIRetrieveTeamMemberResponse summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use retrieveWageSettingSignalError() instead")
    void retrieveWageSettingSignalE(OAIRetrieveWageSettingResponse summary, QNetworkReply::NetworkError error_type, QString error_str);
    void retrieveWageSettingSignalError(OAIRetrieveWageSettingResponse summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use searchTeamMembersSignalError() instead")
    void searchTeamMembersSignalE(OAISearchTeamMembersResponse summary, QNetworkReply::NetworkError error_type, QString error_str);
    void searchTeamMembersSignalError(OAISearchTeamMembersResponse summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateTeamMemberSignalError() instead")
    void updateTeamMemberSignalE(OAIUpdateTeamMemberResponse summary, QNetworkReply::NetworkError error_type, QString error_str);
    void updateTeamMemberSignalError(OAIUpdateTeamMemberResponse summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateWageSettingSignalError() instead")
    void updateWageSettingSignalE(OAIUpdateWageSettingResponse summary, QNetworkReply::NetworkError error_type, QString error_str);
    void updateWageSettingSignalError(OAIUpdateWageSettingResponse summary, QNetworkReply::NetworkError error_type, const QString &error_str);

    Q_DECL_DEPRECATED_X("Use bulkCreateTeamMembersSignalErrorFull() instead")
    void bulkCreateTeamMembersSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void bulkCreateTeamMembersSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use bulkUpdateTeamMembersSignalErrorFull() instead")
    void bulkUpdateTeamMembersSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void bulkUpdateTeamMembersSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use createTeamMemberSignalErrorFull() instead")
    void createTeamMemberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void createTeamMemberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use retrieveTeamMemberSignalErrorFull() instead")
    void retrieveTeamMemberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void retrieveTeamMemberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use retrieveWageSettingSignalErrorFull() instead")
    void retrieveWageSettingSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void retrieveWageSettingSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use searchTeamMembersSignalErrorFull() instead")
    void searchTeamMembersSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void searchTeamMembersSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateTeamMemberSignalErrorFull() instead")
    void updateTeamMemberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateTeamMemberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateWageSettingSignalErrorFull() instead")
    void updateWageSettingSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateWageSettingSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);

    void abortRequestsSignal();
    void allPendingRequestsCompleted();

public Q_SLOTS:
    void tokenAvailable();
};

} // namespace OpenAPI
#endif
