/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISubscriptionEventInfoCode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISubscriptionEventInfoCode::OAISubscriptionEventInfoCode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISubscriptionEventInfoCode::OAISubscriptionEventInfoCode() {
    this->initializeModel();
}

OAISubscriptionEventInfoCode::~OAISubscriptionEventInfoCode() {}

void OAISubscriptionEventInfoCode::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAISubscriptionEventInfoCode::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAISubscriptionEventInfoCode::fromJson(QString jsonString) {
    
    if ( jsonString.compare("LOCATION_NOT_ACTIVE", Qt::CaseInsensitive) == 0) {
        m_value = eOAISubscriptionEventInfoCode::LOCATION_NOT_ACTIVE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LOCATION_CANNOT_ACCEPT_PAYMENT", Qt::CaseInsensitive) == 0) {
        m_value = eOAISubscriptionEventInfoCode::LOCATION_CANNOT_ACCEPT_PAYMENT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CUSTOMER_DELETED", Qt::CaseInsensitive) == 0) {
        m_value = eOAISubscriptionEventInfoCode::CUSTOMER_DELETED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CUSTOMER_NO_EMAIL", Qt::CaseInsensitive) == 0) {
        m_value = eOAISubscriptionEventInfoCode::CUSTOMER_NO_EMAIL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CUSTOMER_NO_NAME", Qt::CaseInsensitive) == 0) {
        m_value = eOAISubscriptionEventInfoCode::CUSTOMER_NO_NAME;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAISubscriptionEventInfoCode::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAISubscriptionEventInfoCode::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAISubscriptionEventInfoCode::LOCATION_NOT_ACTIVE:
            val = "LOCATION_NOT_ACTIVE";
            break;
        case eOAISubscriptionEventInfoCode::LOCATION_CANNOT_ACCEPT_PAYMENT:
            val = "LOCATION_CANNOT_ACCEPT_PAYMENT";
            break;
        case eOAISubscriptionEventInfoCode::CUSTOMER_DELETED:
            val = "CUSTOMER_DELETED";
            break;
        case eOAISubscriptionEventInfoCode::CUSTOMER_NO_EMAIL:
            val = "CUSTOMER_NO_EMAIL";
            break;
        case eOAISubscriptionEventInfoCode::CUSTOMER_NO_NAME:
            val = "CUSTOMER_NO_NAME";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAISubscriptionEventInfoCode::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAISubscriptionEventInfoCode::eOAISubscriptionEventInfoCode OAISubscriptionEventInfoCode::getValue() const {
    return m_value;
}

void OAISubscriptionEventInfoCode::setValue(const OAISubscriptionEventInfoCode::eOAISubscriptionEventInfoCode& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAISubscriptionEventInfoCode::isSet() const {
    
    return m_value_isSet;
}

bool OAISubscriptionEventInfoCode::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
