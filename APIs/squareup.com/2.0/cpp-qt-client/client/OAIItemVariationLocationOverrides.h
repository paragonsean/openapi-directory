/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIItemVariationLocationOverrides.h
 *
 * Price and inventory alerting overrides for a &#x60;CatalogItemVariation&#x60; at a specific &#x60;Location&#x60;.
 */

#ifndef OAIItemVariationLocationOverrides_H
#define OAIItemVariationLocationOverrides_H

#include <QJsonObject>

#include "OAIMoney.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMoney;

class OAIItemVariationLocationOverrides : public OAIObject {
public:
    OAIItemVariationLocationOverrides();
    OAIItemVariationLocationOverrides(QString json);
    ~OAIItemVariationLocationOverrides() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getInventoryAlertThreshold() const;
    void setInventoryAlertThreshold(const qint64 &inventory_alert_threshold);
    bool is_inventory_alert_threshold_Set() const;
    bool is_inventory_alert_threshold_Valid() const;

    QString getInventoryAlertType() const;
    void setInventoryAlertType(const QString &inventory_alert_type);
    bool is_inventory_alert_type_Set() const;
    bool is_inventory_alert_type_Valid() const;

    QString getLocationId() const;
    void setLocationId(const QString &location_id);
    bool is_location_id_Set() const;
    bool is_location_id_Valid() const;

    OAIMoney getPriceMoney() const;
    void setPriceMoney(const OAIMoney &price_money);
    bool is_price_money_Set() const;
    bool is_price_money_Valid() const;

    QString getPricingType() const;
    void setPricingType(const QString &pricing_type);
    bool is_pricing_type_Set() const;
    bool is_pricing_type_Valid() const;

    bool isTrackInventory() const;
    void setTrackInventory(const bool &track_inventory);
    bool is_track_inventory_Set() const;
    bool is_track_inventory_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_inventory_alert_threshold;
    bool m_inventory_alert_threshold_isSet;
    bool m_inventory_alert_threshold_isValid;

    QString m_inventory_alert_type;
    bool m_inventory_alert_type_isSet;
    bool m_inventory_alert_type_isValid;

    QString m_location_id;
    bool m_location_id_isSet;
    bool m_location_id_isValid;

    OAIMoney m_price_money;
    bool m_price_money_isSet;
    bool m_price_money_isValid;

    QString m_pricing_type;
    bool m_pricing_type_isSet;
    bool m_pricing_type_isValid;

    bool m_track_inventory;
    bool m_track_inventory_isSet;
    bool m_track_inventory_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIItemVariationLocationOverrides)

#endif // OAIItemVariationLocationOverrides_H
