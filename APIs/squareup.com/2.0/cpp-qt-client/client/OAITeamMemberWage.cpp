/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITeamMemberWage.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITeamMemberWage::OAITeamMemberWage(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITeamMemberWage::OAITeamMemberWage() {
    this->initializeModel();
}

OAITeamMemberWage::~OAITeamMemberWage() {}

void OAITeamMemberWage::initializeModel() {

    m_hourly_rate_isSet = false;
    m_hourly_rate_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_team_member_id_isSet = false;
    m_team_member_id_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;
}

void OAITeamMemberWage::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITeamMemberWage::fromJsonObject(QJsonObject json) {

    m_hourly_rate_isValid = ::OpenAPI::fromJsonValue(m_hourly_rate, json[QString("hourly_rate")]);
    m_hourly_rate_isSet = !json[QString("hourly_rate")].isNull() && m_hourly_rate_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_team_member_id_isValid = ::OpenAPI::fromJsonValue(m_team_member_id, json[QString("team_member_id")]);
    m_team_member_id_isSet = !json[QString("team_member_id")].isNull() && m_team_member_id_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;
}

QString OAITeamMemberWage::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITeamMemberWage::asJsonObject() const {
    QJsonObject obj;
    if (m_hourly_rate.isSet()) {
        obj.insert(QString("hourly_rate"), ::OpenAPI::toJsonValue(m_hourly_rate));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_team_member_id_isSet) {
        obj.insert(QString("team_member_id"), ::OpenAPI::toJsonValue(m_team_member_id));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    return obj;
}

OAIMoney OAITeamMemberWage::getHourlyRate() const {
    return m_hourly_rate;
}
void OAITeamMemberWage::setHourlyRate(const OAIMoney &hourly_rate) {
    m_hourly_rate = hourly_rate;
    m_hourly_rate_isSet = true;
}

bool OAITeamMemberWage::is_hourly_rate_Set() const{
    return m_hourly_rate_isSet;
}

bool OAITeamMemberWage::is_hourly_rate_Valid() const{
    return m_hourly_rate_isValid;
}

QString OAITeamMemberWage::getId() const {
    return m_id;
}
void OAITeamMemberWage::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAITeamMemberWage::is_id_Set() const{
    return m_id_isSet;
}

bool OAITeamMemberWage::is_id_Valid() const{
    return m_id_isValid;
}

QString OAITeamMemberWage::getTeamMemberId() const {
    return m_team_member_id;
}
void OAITeamMemberWage::setTeamMemberId(const QString &team_member_id) {
    m_team_member_id = team_member_id;
    m_team_member_id_isSet = true;
}

bool OAITeamMemberWage::is_team_member_id_Set() const{
    return m_team_member_id_isSet;
}

bool OAITeamMemberWage::is_team_member_id_Valid() const{
    return m_team_member_id_isValid;
}

QString OAITeamMemberWage::getTitle() const {
    return m_title;
}
void OAITeamMemberWage::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAITeamMemberWage::is_title_Set() const{
    return m_title_isSet;
}

bool OAITeamMemberWage::is_title_Valid() const{
    return m_title_isValid;
}

bool OAITeamMemberWage::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_hourly_rate.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_team_member_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITeamMemberWage::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
