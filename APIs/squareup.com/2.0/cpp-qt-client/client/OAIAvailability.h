/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAvailability.h
 *
 * Describes a slot available for booking, encapsulating appointment segments, the location and starting time.
 */

#ifndef OAIAvailability_H
#define OAIAvailability_H

#include <QJsonObject>

#include "OAIAppointmentSegment.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAppointmentSegment;

class OAIAvailability : public OAIObject {
public:
    OAIAvailability();
    OAIAvailability(QString json);
    ~OAIAvailability() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIAppointmentSegment> getAppointmentSegments() const;
    void setAppointmentSegments(const QList<OAIAppointmentSegment> &appointment_segments);
    bool is_appointment_segments_Set() const;
    bool is_appointment_segments_Valid() const;

    QString getLocationId() const;
    void setLocationId(const QString &location_id);
    bool is_location_id_Set() const;
    bool is_location_id_Valid() const;

    QString getStartAt() const;
    void setStartAt(const QString &start_at);
    bool is_start_at_Set() const;
    bool is_start_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIAppointmentSegment> m_appointment_segments;
    bool m_appointment_segments_isSet;
    bool m_appointment_segments_isValid;

    QString m_location_id;
    bool m_location_id_isSet;
    bool m_location_id_isValid;

    QString m_start_at;
    bool m_start_at_isSet;
    bool m_start_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAvailability)

#endif // OAIAvailability_H
