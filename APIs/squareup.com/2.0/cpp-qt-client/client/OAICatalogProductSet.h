/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICatalogProductSet.h
 *
 * Represents a collection of catalog objects for the purpose of applying a &#x60;PricingRule&#x60;. Including a catalog object will include all of its subtypes. For example, including a category in a product set will include all of its items and associated item variations in the product set. Including an item in a product set will also include its item variations.
 */

#ifndef OAICatalogProductSet_H
#define OAICatalogProductSet_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICatalogProductSet : public OAIObject {
public:
    OAICatalogProductSet();
    OAICatalogProductSet(QString json);
    ~OAICatalogProductSet() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAllProducts() const;
    void setAllProducts(const bool &all_products);
    bool is_all_products_Set() const;
    bool is_all_products_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<QString> getProductIdsAll() const;
    void setProductIdsAll(const QList<QString> &product_ids_all);
    bool is_product_ids_all_Set() const;
    bool is_product_ids_all_Valid() const;

    QList<QString> getProductIdsAny() const;
    void setProductIdsAny(const QList<QString> &product_ids_any);
    bool is_product_ids_any_Set() const;
    bool is_product_ids_any_Valid() const;

    qint64 getQuantityExact() const;
    void setQuantityExact(const qint64 &quantity_exact);
    bool is_quantity_exact_Set() const;
    bool is_quantity_exact_Valid() const;

    qint64 getQuantityMax() const;
    void setQuantityMax(const qint64 &quantity_max);
    bool is_quantity_max_Set() const;
    bool is_quantity_max_Valid() const;

    qint64 getQuantityMin() const;
    void setQuantityMin(const qint64 &quantity_min);
    bool is_quantity_min_Set() const;
    bool is_quantity_min_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_all_products;
    bool m_all_products_isSet;
    bool m_all_products_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<QString> m_product_ids_all;
    bool m_product_ids_all_isSet;
    bool m_product_ids_all_isValid;

    QList<QString> m_product_ids_any;
    bool m_product_ids_any_isSet;
    bool m_product_ids_any_isValid;

    qint64 m_quantity_exact;
    bool m_quantity_exact_isSet;
    bool m_quantity_exact_isValid;

    qint64 m_quantity_max;
    bool m_quantity_max_isSet;
    bool m_quantity_max_isValid;

    qint64 m_quantity_min;
    bool m_quantity_min_isSet;
    bool m_quantity_min_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICatalogProductSet)

#endif // OAICatalogProductSet_H
