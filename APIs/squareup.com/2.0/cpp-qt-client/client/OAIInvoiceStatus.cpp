/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInvoiceStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInvoiceStatus::OAIInvoiceStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInvoiceStatus::OAIInvoiceStatus() {
    this->initializeModel();
}

OAIInvoiceStatus::~OAIInvoiceStatus() {}

void OAIInvoiceStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIInvoiceStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIInvoiceStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("DRAFT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIInvoiceStatus::DRAFT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UNPAID", Qt::CaseInsensitive) == 0) {
        m_value = eOAIInvoiceStatus::UNPAID;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SCHEDULED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIInvoiceStatus::SCHEDULED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PARTIALLY_PAID", Qt::CaseInsensitive) == 0) {
        m_value = eOAIInvoiceStatus::PARTIALLY_PAID;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PAID", Qt::CaseInsensitive) == 0) {
        m_value = eOAIInvoiceStatus::PAID;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PARTIALLY_REFUNDED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIInvoiceStatus::PARTIALLY_REFUNDED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("REFUNDED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIInvoiceStatus::REFUNDED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CANCELED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIInvoiceStatus::CANCELED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FAILED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIInvoiceStatus::FAILED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PAYMENT_PENDING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIInvoiceStatus::PAYMENT_PENDING;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIInvoiceStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIInvoiceStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIInvoiceStatus::DRAFT:
            val = "DRAFT";
            break;
        case eOAIInvoiceStatus::UNPAID:
            val = "UNPAID";
            break;
        case eOAIInvoiceStatus::SCHEDULED:
            val = "SCHEDULED";
            break;
        case eOAIInvoiceStatus::PARTIALLY_PAID:
            val = "PARTIALLY_PAID";
            break;
        case eOAIInvoiceStatus::PAID:
            val = "PAID";
            break;
        case eOAIInvoiceStatus::PARTIALLY_REFUNDED:
            val = "PARTIALLY_REFUNDED";
            break;
        case eOAIInvoiceStatus::REFUNDED:
            val = "REFUNDED";
            break;
        case eOAIInvoiceStatus::CANCELED:
            val = "CANCELED";
            break;
        case eOAIInvoiceStatus::FAILED:
            val = "FAILED";
            break;
        case eOAIInvoiceStatus::PAYMENT_PENDING:
            val = "PAYMENT_PENDING";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIInvoiceStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIInvoiceStatus::eOAIInvoiceStatus OAIInvoiceStatus::getValue() const {
    return m_value;
}

void OAIInvoiceStatus::setValue(const OAIInvoiceStatus::eOAIInvoiceStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIInvoiceStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIInvoiceStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
