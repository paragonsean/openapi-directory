/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateMobileAuthorizationCodeResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateMobileAuthorizationCodeResponse::OAICreateMobileAuthorizationCodeResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateMobileAuthorizationCodeResponse::OAICreateMobileAuthorizationCodeResponse() {
    this->initializeModel();
}

OAICreateMobileAuthorizationCodeResponse::~OAICreateMobileAuthorizationCodeResponse() {}

void OAICreateMobileAuthorizationCodeResponse::initializeModel() {

    m_authorization_code_isSet = false;
    m_authorization_code_isValid = false;

    m_error_isSet = false;
    m_error_isValid = false;

    m_expires_at_isSet = false;
    m_expires_at_isValid = false;
}

void OAICreateMobileAuthorizationCodeResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateMobileAuthorizationCodeResponse::fromJsonObject(QJsonObject json) {

    m_authorization_code_isValid = ::OpenAPI::fromJsonValue(m_authorization_code, json[QString("authorization_code")]);
    m_authorization_code_isSet = !json[QString("authorization_code")].isNull() && m_authorization_code_isValid;

    m_error_isValid = ::OpenAPI::fromJsonValue(m_error, json[QString("error")]);
    m_error_isSet = !json[QString("error")].isNull() && m_error_isValid;

    m_expires_at_isValid = ::OpenAPI::fromJsonValue(m_expires_at, json[QString("expires_at")]);
    m_expires_at_isSet = !json[QString("expires_at")].isNull() && m_expires_at_isValid;
}

QString OAICreateMobileAuthorizationCodeResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateMobileAuthorizationCodeResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_authorization_code_isSet) {
        obj.insert(QString("authorization_code"), ::OpenAPI::toJsonValue(m_authorization_code));
    }
    if (m_error.isSet()) {
        obj.insert(QString("error"), ::OpenAPI::toJsonValue(m_error));
    }
    if (m_expires_at_isSet) {
        obj.insert(QString("expires_at"), ::OpenAPI::toJsonValue(m_expires_at));
    }
    return obj;
}

QString OAICreateMobileAuthorizationCodeResponse::getAuthorizationCode() const {
    return m_authorization_code;
}
void OAICreateMobileAuthorizationCodeResponse::setAuthorizationCode(const QString &authorization_code) {
    m_authorization_code = authorization_code;
    m_authorization_code_isSet = true;
}

bool OAICreateMobileAuthorizationCodeResponse::is_authorization_code_Set() const{
    return m_authorization_code_isSet;
}

bool OAICreateMobileAuthorizationCodeResponse::is_authorization_code_Valid() const{
    return m_authorization_code_isValid;
}

OAIError OAICreateMobileAuthorizationCodeResponse::getError() const {
    return m_error;
}
void OAICreateMobileAuthorizationCodeResponse::setError(const OAIError &error) {
    m_error = error;
    m_error_isSet = true;
}

bool OAICreateMobileAuthorizationCodeResponse::is_error_Set() const{
    return m_error_isSet;
}

bool OAICreateMobileAuthorizationCodeResponse::is_error_Valid() const{
    return m_error_isValid;
}

QString OAICreateMobileAuthorizationCodeResponse::getExpiresAt() const {
    return m_expires_at;
}
void OAICreateMobileAuthorizationCodeResponse::setExpiresAt(const QString &expires_at) {
    m_expires_at = expires_at;
    m_expires_at_isSet = true;
}

bool OAICreateMobileAuthorizationCodeResponse::is_expires_at_Set() const{
    return m_expires_at_isSet;
}

bool OAICreateMobileAuthorizationCodeResponse::is_expires_at_Valid() const{
    return m_expires_at_isValid;
}

bool OAICreateMobileAuthorizationCodeResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_authorization_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_expires_at_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateMobileAuthorizationCodeResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
