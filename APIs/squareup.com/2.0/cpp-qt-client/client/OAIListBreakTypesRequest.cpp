/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListBreakTypesRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListBreakTypesRequest::OAIListBreakTypesRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListBreakTypesRequest::OAIListBreakTypesRequest() {
    this->initializeModel();
}

OAIListBreakTypesRequest::~OAIListBreakTypesRequest() {}

void OAIListBreakTypesRequest::initializeModel() {

    m_cursor_isSet = false;
    m_cursor_isValid = false;

    m_limit_isSet = false;
    m_limit_isValid = false;

    m_location_id_isSet = false;
    m_location_id_isValid = false;
}

void OAIListBreakTypesRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListBreakTypesRequest::fromJsonObject(QJsonObject json) {

    m_cursor_isValid = ::OpenAPI::fromJsonValue(m_cursor, json[QString("cursor")]);
    m_cursor_isSet = !json[QString("cursor")].isNull() && m_cursor_isValid;

    m_limit_isValid = ::OpenAPI::fromJsonValue(m_limit, json[QString("limit")]);
    m_limit_isSet = !json[QString("limit")].isNull() && m_limit_isValid;

    m_location_id_isValid = ::OpenAPI::fromJsonValue(m_location_id, json[QString("location_id")]);
    m_location_id_isSet = !json[QString("location_id")].isNull() && m_location_id_isValid;
}

QString OAIListBreakTypesRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListBreakTypesRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_cursor_isSet) {
        obj.insert(QString("cursor"), ::OpenAPI::toJsonValue(m_cursor));
    }
    if (m_limit_isSet) {
        obj.insert(QString("limit"), ::OpenAPI::toJsonValue(m_limit));
    }
    if (m_location_id_isSet) {
        obj.insert(QString("location_id"), ::OpenAPI::toJsonValue(m_location_id));
    }
    return obj;
}

QString OAIListBreakTypesRequest::getCursor() const {
    return m_cursor;
}
void OAIListBreakTypesRequest::setCursor(const QString &cursor) {
    m_cursor = cursor;
    m_cursor_isSet = true;
}

bool OAIListBreakTypesRequest::is_cursor_Set() const{
    return m_cursor_isSet;
}

bool OAIListBreakTypesRequest::is_cursor_Valid() const{
    return m_cursor_isValid;
}

qint32 OAIListBreakTypesRequest::getLimit() const {
    return m_limit;
}
void OAIListBreakTypesRequest::setLimit(const qint32 &limit) {
    m_limit = limit;
    m_limit_isSet = true;
}

bool OAIListBreakTypesRequest::is_limit_Set() const{
    return m_limit_isSet;
}

bool OAIListBreakTypesRequest::is_limit_Valid() const{
    return m_limit_isValid;
}

QString OAIListBreakTypesRequest::getLocationId() const {
    return m_location_id;
}
void OAIListBreakTypesRequest::setLocationId(const QString &location_id) {
    m_location_id = location_id;
    m_location_id_isSet = true;
}

bool OAIListBreakTypesRequest::is_location_id_Set() const{
    return m_location_id_isSet;
}

bool OAIListBreakTypesRequest::is_location_id_Valid() const{
    return m_location_id_isValid;
}

bool OAIListBreakTypesRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cursor_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_limit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_location_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListBreakTypesRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
