/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIV1Settlement.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIV1Settlement::OAIV1Settlement(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIV1Settlement::OAIV1Settlement() {
    this->initializeModel();
}

OAIV1Settlement::~OAIV1Settlement() {}

void OAIV1Settlement::initializeModel() {

    m_bank_account_id_isSet = false;
    m_bank_account_id_isValid = false;

    m_entries_isSet = false;
    m_entries_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_initiated_at_isSet = false;
    m_initiated_at_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_total_money_isSet = false;
    m_total_money_isValid = false;
}

void OAIV1Settlement::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIV1Settlement::fromJsonObject(QJsonObject json) {

    m_bank_account_id_isValid = ::OpenAPI::fromJsonValue(m_bank_account_id, json[QString("bank_account_id")]);
    m_bank_account_id_isSet = !json[QString("bank_account_id")].isNull() && m_bank_account_id_isValid;

    m_entries_isValid = ::OpenAPI::fromJsonValue(m_entries, json[QString("entries")]);
    m_entries_isSet = !json[QString("entries")].isNull() && m_entries_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_initiated_at_isValid = ::OpenAPI::fromJsonValue(m_initiated_at, json[QString("initiated_at")]);
    m_initiated_at_isSet = !json[QString("initiated_at")].isNull() && m_initiated_at_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_total_money_isValid = ::OpenAPI::fromJsonValue(m_total_money, json[QString("total_money")]);
    m_total_money_isSet = !json[QString("total_money")].isNull() && m_total_money_isValid;
}

QString OAIV1Settlement::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIV1Settlement::asJsonObject() const {
    QJsonObject obj;
    if (m_bank_account_id_isSet) {
        obj.insert(QString("bank_account_id"), ::OpenAPI::toJsonValue(m_bank_account_id));
    }
    if (m_entries.size() > 0) {
        obj.insert(QString("entries"), ::OpenAPI::toJsonValue(m_entries));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_initiated_at_isSet) {
        obj.insert(QString("initiated_at"), ::OpenAPI::toJsonValue(m_initiated_at));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_total_money.isSet()) {
        obj.insert(QString("total_money"), ::OpenAPI::toJsonValue(m_total_money));
    }
    return obj;
}

QString OAIV1Settlement::getBankAccountId() const {
    return m_bank_account_id;
}
void OAIV1Settlement::setBankAccountId(const QString &bank_account_id) {
    m_bank_account_id = bank_account_id;
    m_bank_account_id_isSet = true;
}

bool OAIV1Settlement::is_bank_account_id_Set() const{
    return m_bank_account_id_isSet;
}

bool OAIV1Settlement::is_bank_account_id_Valid() const{
    return m_bank_account_id_isValid;
}

QList<OAIV1SettlementEntry> OAIV1Settlement::getEntries() const {
    return m_entries;
}
void OAIV1Settlement::setEntries(const QList<OAIV1SettlementEntry> &entries) {
    m_entries = entries;
    m_entries_isSet = true;
}

bool OAIV1Settlement::is_entries_Set() const{
    return m_entries_isSet;
}

bool OAIV1Settlement::is_entries_Valid() const{
    return m_entries_isValid;
}

QString OAIV1Settlement::getId() const {
    return m_id;
}
void OAIV1Settlement::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIV1Settlement::is_id_Set() const{
    return m_id_isSet;
}

bool OAIV1Settlement::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIV1Settlement::getInitiatedAt() const {
    return m_initiated_at;
}
void OAIV1Settlement::setInitiatedAt(const QString &initiated_at) {
    m_initiated_at = initiated_at;
    m_initiated_at_isSet = true;
}

bool OAIV1Settlement::is_initiated_at_Set() const{
    return m_initiated_at_isSet;
}

bool OAIV1Settlement::is_initiated_at_Valid() const{
    return m_initiated_at_isValid;
}

QString OAIV1Settlement::getStatus() const {
    return m_status;
}
void OAIV1Settlement::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIV1Settlement::is_status_Set() const{
    return m_status_isSet;
}

bool OAIV1Settlement::is_status_Valid() const{
    return m_status_isValid;
}

OAIV1Money OAIV1Settlement::getTotalMoney() const {
    return m_total_money;
}
void OAIV1Settlement::setTotalMoney(const OAIV1Money &total_money) {
    m_total_money = total_money;
    m_total_money_isSet = true;
}

bool OAIV1Settlement::is_total_money_Set() const{
    return m_total_money_isSet;
}

bool OAIV1Settlement::is_total_money_Valid() const{
    return m_total_money_isValid;
}

bool OAIV1Settlement::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bank_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_entries.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_initiated_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_money.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIV1Settlement::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
