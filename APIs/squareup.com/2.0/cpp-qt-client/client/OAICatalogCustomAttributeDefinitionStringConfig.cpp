/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICatalogCustomAttributeDefinitionStringConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICatalogCustomAttributeDefinitionStringConfig::OAICatalogCustomAttributeDefinitionStringConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICatalogCustomAttributeDefinitionStringConfig::OAICatalogCustomAttributeDefinitionStringConfig() {
    this->initializeModel();
}

OAICatalogCustomAttributeDefinitionStringConfig::~OAICatalogCustomAttributeDefinitionStringConfig() {}

void OAICatalogCustomAttributeDefinitionStringConfig::initializeModel() {

    m_enforce_uniqueness_isSet = false;
    m_enforce_uniqueness_isValid = false;
}

void OAICatalogCustomAttributeDefinitionStringConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICatalogCustomAttributeDefinitionStringConfig::fromJsonObject(QJsonObject json) {

    m_enforce_uniqueness_isValid = ::OpenAPI::fromJsonValue(m_enforce_uniqueness, json[QString("enforce_uniqueness")]);
    m_enforce_uniqueness_isSet = !json[QString("enforce_uniqueness")].isNull() && m_enforce_uniqueness_isValid;
}

QString OAICatalogCustomAttributeDefinitionStringConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICatalogCustomAttributeDefinitionStringConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_enforce_uniqueness_isSet) {
        obj.insert(QString("enforce_uniqueness"), ::OpenAPI::toJsonValue(m_enforce_uniqueness));
    }
    return obj;
}

bool OAICatalogCustomAttributeDefinitionStringConfig::isEnforceUniqueness() const {
    return m_enforce_uniqueness;
}
void OAICatalogCustomAttributeDefinitionStringConfig::setEnforceUniqueness(const bool &enforce_uniqueness) {
    m_enforce_uniqueness = enforce_uniqueness;
    m_enforce_uniqueness_isSet = true;
}

bool OAICatalogCustomAttributeDefinitionStringConfig::is_enforce_uniqueness_Set() const{
    return m_enforce_uniqueness_isSet;
}

bool OAICatalogCustomAttributeDefinitionStringConfig::is_enforce_uniqueness_Valid() const{
    return m_enforce_uniqueness_isValid;
}

bool OAICatalogCustomAttributeDefinitionStringConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enforce_uniqueness_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICatalogCustomAttributeDefinitionStringConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
