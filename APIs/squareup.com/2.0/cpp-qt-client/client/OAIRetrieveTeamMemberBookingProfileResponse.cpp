/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRetrieveTeamMemberBookingProfileResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRetrieveTeamMemberBookingProfileResponse::OAIRetrieveTeamMemberBookingProfileResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRetrieveTeamMemberBookingProfileResponse::OAIRetrieveTeamMemberBookingProfileResponse() {
    this->initializeModel();
}

OAIRetrieveTeamMemberBookingProfileResponse::~OAIRetrieveTeamMemberBookingProfileResponse() {}

void OAIRetrieveTeamMemberBookingProfileResponse::initializeModel() {

    m_errors_isSet = false;
    m_errors_isValid = false;

    m_team_member_booking_profile_isSet = false;
    m_team_member_booking_profile_isValid = false;
}

void OAIRetrieveTeamMemberBookingProfileResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRetrieveTeamMemberBookingProfileResponse::fromJsonObject(QJsonObject json) {

    m_errors_isValid = ::OpenAPI::fromJsonValue(m_errors, json[QString("errors")]);
    m_errors_isSet = !json[QString("errors")].isNull() && m_errors_isValid;

    m_team_member_booking_profile_isValid = ::OpenAPI::fromJsonValue(m_team_member_booking_profile, json[QString("team_member_booking_profile")]);
    m_team_member_booking_profile_isSet = !json[QString("team_member_booking_profile")].isNull() && m_team_member_booking_profile_isValid;
}

QString OAIRetrieveTeamMemberBookingProfileResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRetrieveTeamMemberBookingProfileResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_errors.size() > 0) {
        obj.insert(QString("errors"), ::OpenAPI::toJsonValue(m_errors));
    }
    if (m_team_member_booking_profile.isSet()) {
        obj.insert(QString("team_member_booking_profile"), ::OpenAPI::toJsonValue(m_team_member_booking_profile));
    }
    return obj;
}

QList<OAIError> OAIRetrieveTeamMemberBookingProfileResponse::getErrors() const {
    return m_errors;
}
void OAIRetrieveTeamMemberBookingProfileResponse::setErrors(const QList<OAIError> &errors) {
    m_errors = errors;
    m_errors_isSet = true;
}

bool OAIRetrieveTeamMemberBookingProfileResponse::is_errors_Set() const{
    return m_errors_isSet;
}

bool OAIRetrieveTeamMemberBookingProfileResponse::is_errors_Valid() const{
    return m_errors_isValid;
}

OAITeamMemberBookingProfile OAIRetrieveTeamMemberBookingProfileResponse::getTeamMemberBookingProfile() const {
    return m_team_member_booking_profile;
}
void OAIRetrieveTeamMemberBookingProfileResponse::setTeamMemberBookingProfile(const OAITeamMemberBookingProfile &team_member_booking_profile) {
    m_team_member_booking_profile = team_member_booking_profile;
    m_team_member_booking_profile_isSet = true;
}

bool OAIRetrieveTeamMemberBookingProfileResponse::is_team_member_booking_profile_Set() const{
    return m_team_member_booking_profile_isSet;
}

bool OAIRetrieveTeamMemberBookingProfileResponse::is_team_member_booking_profile_Valid() const{
    return m_team_member_booking_profile_isValid;
}

bool OAIRetrieveTeamMemberBookingProfileResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_errors.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_team_member_booking_profile.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRetrieveTeamMemberBookingProfileResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
