/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIV1Refund.h
 *
 * V1Refund
 */

#ifndef OAIV1Refund_H
#define OAIV1Refund_H

#include <QJsonObject>

#include "OAIV1Money.h"
#include "OAIV1PaymentSurcharge.h"
#include "OAIV1PaymentTax.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIV1PaymentTax;
class OAIV1Money;
class OAIV1PaymentSurcharge;

class OAIV1Refund : public OAIObject {
public:
    OAIV1Refund();
    OAIV1Refund(QString json);
    ~OAIV1Refund() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCreatedAt() const;
    void setCreatedAt(const QString &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    bool isIsExchange() const;
    void setIsExchange(const bool &is_exchange);
    bool is_is_exchange_Set() const;
    bool is_is_exchange_Valid() const;

    QString getMerchantId() const;
    void setMerchantId(const QString &merchant_id);
    bool is_merchant_id_Set() const;
    bool is_merchant_id_Valid() const;

    QString getPaymentId() const;
    void setPaymentId(const QString &payment_id);
    bool is_payment_id_Set() const;
    bool is_payment_id_Valid() const;

    QString getProcessedAt() const;
    void setProcessedAt(const QString &processed_at);
    bool is_processed_at_Set() const;
    bool is_processed_at_Valid() const;

    QString getReason() const;
    void setReason(const QString &reason);
    bool is_reason_Set() const;
    bool is_reason_Valid() const;

    QList<OAIV1PaymentTax> getRefundedAdditiveTax() const;
    void setRefundedAdditiveTax(const QList<OAIV1PaymentTax> &refunded_additive_tax);
    bool is_refunded_additive_tax_Set() const;
    bool is_refunded_additive_tax_Valid() const;

    OAIV1Money getRefundedAdditiveTaxMoney() const;
    void setRefundedAdditiveTaxMoney(const OAIV1Money &refunded_additive_tax_money);
    bool is_refunded_additive_tax_money_Set() const;
    bool is_refunded_additive_tax_money_Valid() const;

    OAIV1Money getRefundedDiscountMoney() const;
    void setRefundedDiscountMoney(const OAIV1Money &refunded_discount_money);
    bool is_refunded_discount_money_Set() const;
    bool is_refunded_discount_money_Valid() const;

    QList<OAIV1PaymentTax> getRefundedInclusiveTax() const;
    void setRefundedInclusiveTax(const QList<OAIV1PaymentTax> &refunded_inclusive_tax);
    bool is_refunded_inclusive_tax_Set() const;
    bool is_refunded_inclusive_tax_Valid() const;

    OAIV1Money getRefundedInclusiveTaxMoney() const;
    void setRefundedInclusiveTaxMoney(const OAIV1Money &refunded_inclusive_tax_money);
    bool is_refunded_inclusive_tax_money_Set() const;
    bool is_refunded_inclusive_tax_money_Valid() const;

    OAIV1Money getRefundedMoney() const;
    void setRefundedMoney(const OAIV1Money &refunded_money);
    bool is_refunded_money_Set() const;
    bool is_refunded_money_Valid() const;

    OAIV1Money getRefundedProcessingFeeMoney() const;
    void setRefundedProcessingFeeMoney(const OAIV1Money &refunded_processing_fee_money);
    bool is_refunded_processing_fee_money_Set() const;
    bool is_refunded_processing_fee_money_Valid() const;

    OAIV1Money getRefundedSurchargeMoney() const;
    void setRefundedSurchargeMoney(const OAIV1Money &refunded_surcharge_money);
    bool is_refunded_surcharge_money_Set() const;
    bool is_refunded_surcharge_money_Valid() const;

    QList<OAIV1PaymentSurcharge> getRefundedSurcharges() const;
    void setRefundedSurcharges(const QList<OAIV1PaymentSurcharge> &refunded_surcharges);
    bool is_refunded_surcharges_Set() const;
    bool is_refunded_surcharges_Valid() const;

    OAIV1Money getRefundedTaxMoney() const;
    void setRefundedTaxMoney(const OAIV1Money &refunded_tax_money);
    bool is_refunded_tax_money_Set() const;
    bool is_refunded_tax_money_Valid() const;

    OAIV1Money getRefundedTipMoney() const;
    void setRefundedTipMoney(const OAIV1Money &refunded_tip_money);
    bool is_refunded_tip_money_Set() const;
    bool is_refunded_tip_money_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    bool m_is_exchange;
    bool m_is_exchange_isSet;
    bool m_is_exchange_isValid;

    QString m_merchant_id;
    bool m_merchant_id_isSet;
    bool m_merchant_id_isValid;

    QString m_payment_id;
    bool m_payment_id_isSet;
    bool m_payment_id_isValid;

    QString m_processed_at;
    bool m_processed_at_isSet;
    bool m_processed_at_isValid;

    QString m_reason;
    bool m_reason_isSet;
    bool m_reason_isValid;

    QList<OAIV1PaymentTax> m_refunded_additive_tax;
    bool m_refunded_additive_tax_isSet;
    bool m_refunded_additive_tax_isValid;

    OAIV1Money m_refunded_additive_tax_money;
    bool m_refunded_additive_tax_money_isSet;
    bool m_refunded_additive_tax_money_isValid;

    OAIV1Money m_refunded_discount_money;
    bool m_refunded_discount_money_isSet;
    bool m_refunded_discount_money_isValid;

    QList<OAIV1PaymentTax> m_refunded_inclusive_tax;
    bool m_refunded_inclusive_tax_isSet;
    bool m_refunded_inclusive_tax_isValid;

    OAIV1Money m_refunded_inclusive_tax_money;
    bool m_refunded_inclusive_tax_money_isSet;
    bool m_refunded_inclusive_tax_money_isValid;

    OAIV1Money m_refunded_money;
    bool m_refunded_money_isSet;
    bool m_refunded_money_isValid;

    OAIV1Money m_refunded_processing_fee_money;
    bool m_refunded_processing_fee_money_isSet;
    bool m_refunded_processing_fee_money_isValid;

    OAIV1Money m_refunded_surcharge_money;
    bool m_refunded_surcharge_money_isSet;
    bool m_refunded_surcharge_money_isValid;

    QList<OAIV1PaymentSurcharge> m_refunded_surcharges;
    bool m_refunded_surcharges_isSet;
    bool m_refunded_surcharges_isValid;

    OAIV1Money m_refunded_tax_money;
    bool m_refunded_tax_money_isSet;
    bool m_refunded_tax_money_isValid;

    OAIV1Money m_refunded_tip_money;
    bool m_refunded_tip_money_isSet;
    bool m_refunded_tip_money_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIV1Refund)

#endif // OAIV1Refund_H
