/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDisputeState.h
 *
 * The list of possible dispute states.
 */

#ifndef OAIDisputeState_H
#define OAIDisputeState_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDisputeState : public OAIEnum {
public:
    OAIDisputeState();
    OAIDisputeState(QString json);
    ~OAIDisputeState() override;

    QString asJson() const override;
    QJsonValue asJsonValue() const override;
    void fromJsonValue(QJsonValue json) override;
    void fromJson(QString jsonString) override;

    enum class eOAIDisputeState {
        INVALID_VALUE_OPENAPI_GENERATED = 0,
        UNKNOWN_STATE, 
        INQUIRY_EVIDENCE_REQUIRED, 
        INQUIRY_PROCESSING, 
        INQUIRY_CLOSED, 
        EVIDENCE_REQUIRED, 
        PROCESSING, 
        WON, 
        LOST, 
        ACCEPTED, 
        WAITING_THIRD_PARTY
    };
    OAIDisputeState::eOAIDisputeState getValue() const;
    void setValue(const OAIDisputeState::eOAIDisputeState& value);
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    eOAIDisputeState m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDisputeState)

#endif // OAIDisputeState_H
