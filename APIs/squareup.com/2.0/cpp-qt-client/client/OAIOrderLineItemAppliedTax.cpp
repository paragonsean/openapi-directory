/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderLineItemAppliedTax.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderLineItemAppliedTax::OAIOrderLineItemAppliedTax(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderLineItemAppliedTax::OAIOrderLineItemAppliedTax() {
    this->initializeModel();
}

OAIOrderLineItemAppliedTax::~OAIOrderLineItemAppliedTax() {}

void OAIOrderLineItemAppliedTax::initializeModel() {

    m_applied_money_isSet = false;
    m_applied_money_isValid = false;

    m_tax_uid_isSet = false;
    m_tax_uid_isValid = false;

    m_uid_isSet = false;
    m_uid_isValid = false;
}

void OAIOrderLineItemAppliedTax::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrderLineItemAppliedTax::fromJsonObject(QJsonObject json) {

    m_applied_money_isValid = ::OpenAPI::fromJsonValue(m_applied_money, json[QString("applied_money")]);
    m_applied_money_isSet = !json[QString("applied_money")].isNull() && m_applied_money_isValid;

    m_tax_uid_isValid = ::OpenAPI::fromJsonValue(m_tax_uid, json[QString("tax_uid")]);
    m_tax_uid_isSet = !json[QString("tax_uid")].isNull() && m_tax_uid_isValid;

    m_uid_isValid = ::OpenAPI::fromJsonValue(m_uid, json[QString("uid")]);
    m_uid_isSet = !json[QString("uid")].isNull() && m_uid_isValid;
}

QString OAIOrderLineItemAppliedTax::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrderLineItemAppliedTax::asJsonObject() const {
    QJsonObject obj;
    if (m_applied_money.isSet()) {
        obj.insert(QString("applied_money"), ::OpenAPI::toJsonValue(m_applied_money));
    }
    if (m_tax_uid_isSet) {
        obj.insert(QString("tax_uid"), ::OpenAPI::toJsonValue(m_tax_uid));
    }
    if (m_uid_isSet) {
        obj.insert(QString("uid"), ::OpenAPI::toJsonValue(m_uid));
    }
    return obj;
}

OAIMoney OAIOrderLineItemAppliedTax::getAppliedMoney() const {
    return m_applied_money;
}
void OAIOrderLineItemAppliedTax::setAppliedMoney(const OAIMoney &applied_money) {
    m_applied_money = applied_money;
    m_applied_money_isSet = true;
}

bool OAIOrderLineItemAppliedTax::is_applied_money_Set() const{
    return m_applied_money_isSet;
}

bool OAIOrderLineItemAppliedTax::is_applied_money_Valid() const{
    return m_applied_money_isValid;
}

QString OAIOrderLineItemAppliedTax::getTaxUid() const {
    return m_tax_uid;
}
void OAIOrderLineItemAppliedTax::setTaxUid(const QString &tax_uid) {
    m_tax_uid = tax_uid;
    m_tax_uid_isSet = true;
}

bool OAIOrderLineItemAppliedTax::is_tax_uid_Set() const{
    return m_tax_uid_isSet;
}

bool OAIOrderLineItemAppliedTax::is_tax_uid_Valid() const{
    return m_tax_uid_isValid;
}

QString OAIOrderLineItemAppliedTax::getUid() const {
    return m_uid;
}
void OAIOrderLineItemAppliedTax::setUid(const QString &uid) {
    m_uid = uid;
    m_uid_isSet = true;
}

bool OAIOrderLineItemAppliedTax::is_uid_Set() const{
    return m_uid_isSet;
}

bool OAIOrderLineItemAppliedTax::is_uid_Valid() const{
    return m_uid_isValid;
}

bool OAIOrderLineItemAppliedTax::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_applied_money.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tax_uid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uid_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrderLineItemAppliedTax::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_tax_uid_isValid && true;
}

} // namespace OpenAPI
