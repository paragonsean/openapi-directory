/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITeamMember.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITeamMember::OAITeamMember(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITeamMember::OAITeamMember() {
    this->initializeModel();
}

OAITeamMember::~OAITeamMember() {}

void OAITeamMember::initializeModel() {

    m_assigned_locations_isSet = false;
    m_assigned_locations_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_email_address_isSet = false;
    m_email_address_isValid = false;

    m_family_name_isSet = false;
    m_family_name_isValid = false;

    m_given_name_isSet = false;
    m_given_name_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_is_owner_isSet = false;
    m_is_owner_isValid = false;

    m_phone_number_isSet = false;
    m_phone_number_isValid = false;

    m_reference_id_isSet = false;
    m_reference_id_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_updated_at_isSet = false;
    m_updated_at_isValid = false;
}

void OAITeamMember::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITeamMember::fromJsonObject(QJsonObject json) {

    m_assigned_locations_isValid = ::OpenAPI::fromJsonValue(m_assigned_locations, json[QString("assigned_locations")]);
    m_assigned_locations_isSet = !json[QString("assigned_locations")].isNull() && m_assigned_locations_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_email_address_isValid = ::OpenAPI::fromJsonValue(m_email_address, json[QString("email_address")]);
    m_email_address_isSet = !json[QString("email_address")].isNull() && m_email_address_isValid;

    m_family_name_isValid = ::OpenAPI::fromJsonValue(m_family_name, json[QString("family_name")]);
    m_family_name_isSet = !json[QString("family_name")].isNull() && m_family_name_isValid;

    m_given_name_isValid = ::OpenAPI::fromJsonValue(m_given_name, json[QString("given_name")]);
    m_given_name_isSet = !json[QString("given_name")].isNull() && m_given_name_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_is_owner_isValid = ::OpenAPI::fromJsonValue(m_is_owner, json[QString("is_owner")]);
    m_is_owner_isSet = !json[QString("is_owner")].isNull() && m_is_owner_isValid;

    m_phone_number_isValid = ::OpenAPI::fromJsonValue(m_phone_number, json[QString("phone_number")]);
    m_phone_number_isSet = !json[QString("phone_number")].isNull() && m_phone_number_isValid;

    m_reference_id_isValid = ::OpenAPI::fromJsonValue(m_reference_id, json[QString("reference_id")]);
    m_reference_id_isSet = !json[QString("reference_id")].isNull() && m_reference_id_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_updated_at_isValid = ::OpenAPI::fromJsonValue(m_updated_at, json[QString("updated_at")]);
    m_updated_at_isSet = !json[QString("updated_at")].isNull() && m_updated_at_isValid;
}

QString OAITeamMember::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITeamMember::asJsonObject() const {
    QJsonObject obj;
    if (m_assigned_locations.isSet()) {
        obj.insert(QString("assigned_locations"), ::OpenAPI::toJsonValue(m_assigned_locations));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_email_address_isSet) {
        obj.insert(QString("email_address"), ::OpenAPI::toJsonValue(m_email_address));
    }
    if (m_family_name_isSet) {
        obj.insert(QString("family_name"), ::OpenAPI::toJsonValue(m_family_name));
    }
    if (m_given_name_isSet) {
        obj.insert(QString("given_name"), ::OpenAPI::toJsonValue(m_given_name));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_is_owner_isSet) {
        obj.insert(QString("is_owner"), ::OpenAPI::toJsonValue(m_is_owner));
    }
    if (m_phone_number_isSet) {
        obj.insert(QString("phone_number"), ::OpenAPI::toJsonValue(m_phone_number));
    }
    if (m_reference_id_isSet) {
        obj.insert(QString("reference_id"), ::OpenAPI::toJsonValue(m_reference_id));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_updated_at_isSet) {
        obj.insert(QString("updated_at"), ::OpenAPI::toJsonValue(m_updated_at));
    }
    return obj;
}

OAITeamMemberAssignedLocations OAITeamMember::getAssignedLocations() const {
    return m_assigned_locations;
}
void OAITeamMember::setAssignedLocations(const OAITeamMemberAssignedLocations &assigned_locations) {
    m_assigned_locations = assigned_locations;
    m_assigned_locations_isSet = true;
}

bool OAITeamMember::is_assigned_locations_Set() const{
    return m_assigned_locations_isSet;
}

bool OAITeamMember::is_assigned_locations_Valid() const{
    return m_assigned_locations_isValid;
}

QString OAITeamMember::getCreatedAt() const {
    return m_created_at;
}
void OAITeamMember::setCreatedAt(const QString &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAITeamMember::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAITeamMember::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAITeamMember::getEmailAddress() const {
    return m_email_address;
}
void OAITeamMember::setEmailAddress(const QString &email_address) {
    m_email_address = email_address;
    m_email_address_isSet = true;
}

bool OAITeamMember::is_email_address_Set() const{
    return m_email_address_isSet;
}

bool OAITeamMember::is_email_address_Valid() const{
    return m_email_address_isValid;
}

QString OAITeamMember::getFamilyName() const {
    return m_family_name;
}
void OAITeamMember::setFamilyName(const QString &family_name) {
    m_family_name = family_name;
    m_family_name_isSet = true;
}

bool OAITeamMember::is_family_name_Set() const{
    return m_family_name_isSet;
}

bool OAITeamMember::is_family_name_Valid() const{
    return m_family_name_isValid;
}

QString OAITeamMember::getGivenName() const {
    return m_given_name;
}
void OAITeamMember::setGivenName(const QString &given_name) {
    m_given_name = given_name;
    m_given_name_isSet = true;
}

bool OAITeamMember::is_given_name_Set() const{
    return m_given_name_isSet;
}

bool OAITeamMember::is_given_name_Valid() const{
    return m_given_name_isValid;
}

QString OAITeamMember::getId() const {
    return m_id;
}
void OAITeamMember::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAITeamMember::is_id_Set() const{
    return m_id_isSet;
}

bool OAITeamMember::is_id_Valid() const{
    return m_id_isValid;
}

bool OAITeamMember::isIsOwner() const {
    return m_is_owner;
}
void OAITeamMember::setIsOwner(const bool &is_owner) {
    m_is_owner = is_owner;
    m_is_owner_isSet = true;
}

bool OAITeamMember::is_is_owner_Set() const{
    return m_is_owner_isSet;
}

bool OAITeamMember::is_is_owner_Valid() const{
    return m_is_owner_isValid;
}

QString OAITeamMember::getPhoneNumber() const {
    return m_phone_number;
}
void OAITeamMember::setPhoneNumber(const QString &phone_number) {
    m_phone_number = phone_number;
    m_phone_number_isSet = true;
}

bool OAITeamMember::is_phone_number_Set() const{
    return m_phone_number_isSet;
}

bool OAITeamMember::is_phone_number_Valid() const{
    return m_phone_number_isValid;
}

QString OAITeamMember::getReferenceId() const {
    return m_reference_id;
}
void OAITeamMember::setReferenceId(const QString &reference_id) {
    m_reference_id = reference_id;
    m_reference_id_isSet = true;
}

bool OAITeamMember::is_reference_id_Set() const{
    return m_reference_id_isSet;
}

bool OAITeamMember::is_reference_id_Valid() const{
    return m_reference_id_isValid;
}

QString OAITeamMember::getStatus() const {
    return m_status;
}
void OAITeamMember::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAITeamMember::is_status_Set() const{
    return m_status_isSet;
}

bool OAITeamMember::is_status_Valid() const{
    return m_status_isValid;
}

QString OAITeamMember::getUpdatedAt() const {
    return m_updated_at;
}
void OAITeamMember::setUpdatedAt(const QString &updated_at) {
    m_updated_at = updated_at;
    m_updated_at_isSet = true;
}

bool OAITeamMember::is_updated_at_Set() const{
    return m_updated_at_isSet;
}

bool OAITeamMember::is_updated_at_Valid() const{
    return m_updated_at_isValid;
}

bool OAITeamMember::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_assigned_locations.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_family_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_given_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_owner_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reference_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_at_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITeamMember::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
