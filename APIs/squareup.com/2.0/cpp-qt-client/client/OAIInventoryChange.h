/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInventoryChange.h
 *
 * Represents a single physical count, inventory, adjustment, or transfer that is part of the history of inventory changes for a particular [CatalogObject](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject) instance.
 */

#ifndef OAIInventoryChange_H
#define OAIInventoryChange_H

#include <QJsonObject>

#include "OAICatalogMeasurementUnit.h"
#include "OAIInventoryAdjustment.h"
#include "OAIInventoryPhysicalCount.h"
#include "OAIInventoryTransfer.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIInventoryAdjustment;
class OAICatalogMeasurementUnit;
class OAIInventoryPhysicalCount;
class OAIInventoryTransfer;

class OAIInventoryChange : public OAIObject {
public:
    OAIInventoryChange();
    OAIInventoryChange(QString json);
    ~OAIInventoryChange() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIInventoryAdjustment getAdjustment() const;
    void setAdjustment(const OAIInventoryAdjustment &adjustment);
    bool is_adjustment_Set() const;
    bool is_adjustment_Valid() const;

    OAICatalogMeasurementUnit getMeasurementUnit() const;
    void setMeasurementUnit(const OAICatalogMeasurementUnit &measurement_unit);
    bool is_measurement_unit_Set() const;
    bool is_measurement_unit_Valid() const;

    QString getMeasurementUnitId() const;
    void setMeasurementUnitId(const QString &measurement_unit_id);
    bool is_measurement_unit_id_Set() const;
    bool is_measurement_unit_id_Valid() const;

    OAIInventoryPhysicalCount getPhysicalCount() const;
    void setPhysicalCount(const OAIInventoryPhysicalCount &physical_count);
    bool is_physical_count_Set() const;
    bool is_physical_count_Valid() const;

    OAIInventoryTransfer getTransfer() const;
    void setTransfer(const OAIInventoryTransfer &transfer);
    bool is_transfer_Set() const;
    bool is_transfer_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIInventoryAdjustment m_adjustment;
    bool m_adjustment_isSet;
    bool m_adjustment_isValid;

    OAICatalogMeasurementUnit m_measurement_unit;
    bool m_measurement_unit_isSet;
    bool m_measurement_unit_isValid;

    QString m_measurement_unit_id;
    bool m_measurement_unit_id_isSet;
    bool m_measurement_unit_id_isValid;

    OAIInventoryPhysicalCount m_physical_count;
    bool m_physical_count_isSet;
    bool m_physical_count_isValid;

    OAIInventoryTransfer m_transfer;
    bool m_transfer_isSet;
    bool m_transfer_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInventoryChange)

#endif // OAIInventoryChange_H
