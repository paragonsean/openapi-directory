/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStandardUnitDescriptionGroup.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStandardUnitDescriptionGroup::OAIStandardUnitDescriptionGroup(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStandardUnitDescriptionGroup::OAIStandardUnitDescriptionGroup() {
    this->initializeModel();
}

OAIStandardUnitDescriptionGroup::~OAIStandardUnitDescriptionGroup() {}

void OAIStandardUnitDescriptionGroup::initializeModel() {

    m_language_code_isSet = false;
    m_language_code_isValid = false;

    m_standard_unit_descriptions_isSet = false;
    m_standard_unit_descriptions_isValid = false;
}

void OAIStandardUnitDescriptionGroup::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStandardUnitDescriptionGroup::fromJsonObject(QJsonObject json) {

    m_language_code_isValid = ::OpenAPI::fromJsonValue(m_language_code, json[QString("language_code")]);
    m_language_code_isSet = !json[QString("language_code")].isNull() && m_language_code_isValid;

    m_standard_unit_descriptions_isValid = ::OpenAPI::fromJsonValue(m_standard_unit_descriptions, json[QString("standard_unit_descriptions")]);
    m_standard_unit_descriptions_isSet = !json[QString("standard_unit_descriptions")].isNull() && m_standard_unit_descriptions_isValid;
}

QString OAIStandardUnitDescriptionGroup::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStandardUnitDescriptionGroup::asJsonObject() const {
    QJsonObject obj;
    if (m_language_code_isSet) {
        obj.insert(QString("language_code"), ::OpenAPI::toJsonValue(m_language_code));
    }
    if (m_standard_unit_descriptions.size() > 0) {
        obj.insert(QString("standard_unit_descriptions"), ::OpenAPI::toJsonValue(m_standard_unit_descriptions));
    }
    return obj;
}

QString OAIStandardUnitDescriptionGroup::getLanguageCode() const {
    return m_language_code;
}
void OAIStandardUnitDescriptionGroup::setLanguageCode(const QString &language_code) {
    m_language_code = language_code;
    m_language_code_isSet = true;
}

bool OAIStandardUnitDescriptionGroup::is_language_code_Set() const{
    return m_language_code_isSet;
}

bool OAIStandardUnitDescriptionGroup::is_language_code_Valid() const{
    return m_language_code_isValid;
}

QList<OAIStandardUnitDescription> OAIStandardUnitDescriptionGroup::getStandardUnitDescriptions() const {
    return m_standard_unit_descriptions;
}
void OAIStandardUnitDescriptionGroup::setStandardUnitDescriptions(const QList<OAIStandardUnitDescription> &standard_unit_descriptions) {
    m_standard_unit_descriptions = standard_unit_descriptions;
    m_standard_unit_descriptions_isSet = true;
}

bool OAIStandardUnitDescriptionGroup::is_standard_unit_descriptions_Set() const{
    return m_standard_unit_descriptions_isSet;
}

bool OAIStandardUnitDescriptionGroup::is_standard_unit_descriptions_Valid() const{
    return m_standard_unit_descriptions_isValid;
}

bool OAIStandardUnitDescriptionGroup::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_language_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_standard_unit_descriptions.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStandardUnitDescriptionGroup::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
