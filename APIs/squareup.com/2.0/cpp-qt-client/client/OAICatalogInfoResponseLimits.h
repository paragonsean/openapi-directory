/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICatalogInfoResponseLimits.h
 *
 * 
 */

#ifndef OAICatalogInfoResponseLimits_H
#define OAICatalogInfoResponseLimits_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICatalogInfoResponseLimits : public OAIObject {
public:
    OAICatalogInfoResponseLimits();
    OAICatalogInfoResponseLimits(QString json);
    ~OAICatalogInfoResponseLimits() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getBatchDeleteMaxObjectIds() const;
    void setBatchDeleteMaxObjectIds(const qint32 &batch_delete_max_object_ids);
    bool is_batch_delete_max_object_ids_Set() const;
    bool is_batch_delete_max_object_ids_Valid() const;

    qint32 getBatchRetrieveMaxObjectIds() const;
    void setBatchRetrieveMaxObjectIds(const qint32 &batch_retrieve_max_object_ids);
    bool is_batch_retrieve_max_object_ids_Set() const;
    bool is_batch_retrieve_max_object_ids_Valid() const;

    qint32 getBatchUpsertMaxObjectsPerBatch() const;
    void setBatchUpsertMaxObjectsPerBatch(const qint32 &batch_upsert_max_objects_per_batch);
    bool is_batch_upsert_max_objects_per_batch_Set() const;
    bool is_batch_upsert_max_objects_per_batch_Valid() const;

    qint32 getBatchUpsertMaxTotalObjects() const;
    void setBatchUpsertMaxTotalObjects(const qint32 &batch_upsert_max_total_objects);
    bool is_batch_upsert_max_total_objects_Set() const;
    bool is_batch_upsert_max_total_objects_Valid() const;

    qint32 getSearchMaxPageLimit() const;
    void setSearchMaxPageLimit(const qint32 &search_max_page_limit);
    bool is_search_max_page_limit_Set() const;
    bool is_search_max_page_limit_Valid() const;

    qint32 getUpdateItemModifierListsMaxItemIds() const;
    void setUpdateItemModifierListsMaxItemIds(const qint32 &update_item_modifier_lists_max_item_ids);
    bool is_update_item_modifier_lists_max_item_ids_Set() const;
    bool is_update_item_modifier_lists_max_item_ids_Valid() const;

    qint32 getUpdateItemModifierListsMaxModifierListsToDisable() const;
    void setUpdateItemModifierListsMaxModifierListsToDisable(const qint32 &update_item_modifier_lists_max_modifier_lists_to_disable);
    bool is_update_item_modifier_lists_max_modifier_lists_to_disable_Set() const;
    bool is_update_item_modifier_lists_max_modifier_lists_to_disable_Valid() const;

    qint32 getUpdateItemModifierListsMaxModifierListsToEnable() const;
    void setUpdateItemModifierListsMaxModifierListsToEnable(const qint32 &update_item_modifier_lists_max_modifier_lists_to_enable);
    bool is_update_item_modifier_lists_max_modifier_lists_to_enable_Set() const;
    bool is_update_item_modifier_lists_max_modifier_lists_to_enable_Valid() const;

    qint32 getUpdateItemTaxesMaxItemIds() const;
    void setUpdateItemTaxesMaxItemIds(const qint32 &update_item_taxes_max_item_ids);
    bool is_update_item_taxes_max_item_ids_Set() const;
    bool is_update_item_taxes_max_item_ids_Valid() const;

    qint32 getUpdateItemTaxesMaxTaxesToDisable() const;
    void setUpdateItemTaxesMaxTaxesToDisable(const qint32 &update_item_taxes_max_taxes_to_disable);
    bool is_update_item_taxes_max_taxes_to_disable_Set() const;
    bool is_update_item_taxes_max_taxes_to_disable_Valid() const;

    qint32 getUpdateItemTaxesMaxTaxesToEnable() const;
    void setUpdateItemTaxesMaxTaxesToEnable(const qint32 &update_item_taxes_max_taxes_to_enable);
    bool is_update_item_taxes_max_taxes_to_enable_Set() const;
    bool is_update_item_taxes_max_taxes_to_enable_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_batch_delete_max_object_ids;
    bool m_batch_delete_max_object_ids_isSet;
    bool m_batch_delete_max_object_ids_isValid;

    qint32 m_batch_retrieve_max_object_ids;
    bool m_batch_retrieve_max_object_ids_isSet;
    bool m_batch_retrieve_max_object_ids_isValid;

    qint32 m_batch_upsert_max_objects_per_batch;
    bool m_batch_upsert_max_objects_per_batch_isSet;
    bool m_batch_upsert_max_objects_per_batch_isValid;

    qint32 m_batch_upsert_max_total_objects;
    bool m_batch_upsert_max_total_objects_isSet;
    bool m_batch_upsert_max_total_objects_isValid;

    qint32 m_search_max_page_limit;
    bool m_search_max_page_limit_isSet;
    bool m_search_max_page_limit_isValid;

    qint32 m_update_item_modifier_lists_max_item_ids;
    bool m_update_item_modifier_lists_max_item_ids_isSet;
    bool m_update_item_modifier_lists_max_item_ids_isValid;

    qint32 m_update_item_modifier_lists_max_modifier_lists_to_disable;
    bool m_update_item_modifier_lists_max_modifier_lists_to_disable_isSet;
    bool m_update_item_modifier_lists_max_modifier_lists_to_disable_isValid;

    qint32 m_update_item_modifier_lists_max_modifier_lists_to_enable;
    bool m_update_item_modifier_lists_max_modifier_lists_to_enable_isSet;
    bool m_update_item_modifier_lists_max_modifier_lists_to_enable_isValid;

    qint32 m_update_item_taxes_max_item_ids;
    bool m_update_item_taxes_max_item_ids_isSet;
    bool m_update_item_taxes_max_item_ids_isValid;

    qint32 m_update_item_taxes_max_taxes_to_disable;
    bool m_update_item_taxes_max_taxes_to_disable_isSet;
    bool m_update_item_taxes_max_taxes_to_disable_isValid;

    qint32 m_update_item_taxes_max_taxes_to_enable;
    bool m_update_item_taxes_max_taxes_to_enable_isSet;
    bool m_update_item_taxes_max_taxes_to_enable_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICatalogInfoResponseLimits)

#endif // OAICatalogInfoResponseLimits_H
