/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderFulfillmentUpdatedUpdate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderFulfillmentUpdatedUpdate::OAIOrderFulfillmentUpdatedUpdate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderFulfillmentUpdatedUpdate::OAIOrderFulfillmentUpdatedUpdate() {
    this->initializeModel();
}

OAIOrderFulfillmentUpdatedUpdate::~OAIOrderFulfillmentUpdatedUpdate() {}

void OAIOrderFulfillmentUpdatedUpdate::initializeModel() {

    m_fulfillment_uid_isSet = false;
    m_fulfillment_uid_isValid = false;

    m_new_state_isSet = false;
    m_new_state_isValid = false;

    m_old_state_isSet = false;
    m_old_state_isValid = false;
}

void OAIOrderFulfillmentUpdatedUpdate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrderFulfillmentUpdatedUpdate::fromJsonObject(QJsonObject json) {

    m_fulfillment_uid_isValid = ::OpenAPI::fromJsonValue(m_fulfillment_uid, json[QString("fulfillment_uid")]);
    m_fulfillment_uid_isSet = !json[QString("fulfillment_uid")].isNull() && m_fulfillment_uid_isValid;

    m_new_state_isValid = ::OpenAPI::fromJsonValue(m_new_state, json[QString("new_state")]);
    m_new_state_isSet = !json[QString("new_state")].isNull() && m_new_state_isValid;

    m_old_state_isValid = ::OpenAPI::fromJsonValue(m_old_state, json[QString("old_state")]);
    m_old_state_isSet = !json[QString("old_state")].isNull() && m_old_state_isValid;
}

QString OAIOrderFulfillmentUpdatedUpdate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrderFulfillmentUpdatedUpdate::asJsonObject() const {
    QJsonObject obj;
    if (m_fulfillment_uid_isSet) {
        obj.insert(QString("fulfillment_uid"), ::OpenAPI::toJsonValue(m_fulfillment_uid));
    }
    if (m_new_state_isSet) {
        obj.insert(QString("new_state"), ::OpenAPI::toJsonValue(m_new_state));
    }
    if (m_old_state_isSet) {
        obj.insert(QString("old_state"), ::OpenAPI::toJsonValue(m_old_state));
    }
    return obj;
}

QString OAIOrderFulfillmentUpdatedUpdate::getFulfillmentUid() const {
    return m_fulfillment_uid;
}
void OAIOrderFulfillmentUpdatedUpdate::setFulfillmentUid(const QString &fulfillment_uid) {
    m_fulfillment_uid = fulfillment_uid;
    m_fulfillment_uid_isSet = true;
}

bool OAIOrderFulfillmentUpdatedUpdate::is_fulfillment_uid_Set() const{
    return m_fulfillment_uid_isSet;
}

bool OAIOrderFulfillmentUpdatedUpdate::is_fulfillment_uid_Valid() const{
    return m_fulfillment_uid_isValid;
}

QString OAIOrderFulfillmentUpdatedUpdate::getNewState() const {
    return m_new_state;
}
void OAIOrderFulfillmentUpdatedUpdate::setNewState(const QString &new_state) {
    m_new_state = new_state;
    m_new_state_isSet = true;
}

bool OAIOrderFulfillmentUpdatedUpdate::is_new_state_Set() const{
    return m_new_state_isSet;
}

bool OAIOrderFulfillmentUpdatedUpdate::is_new_state_Valid() const{
    return m_new_state_isValid;
}

QString OAIOrderFulfillmentUpdatedUpdate::getOldState() const {
    return m_old_state;
}
void OAIOrderFulfillmentUpdatedUpdate::setOldState(const QString &old_state) {
    m_old_state = old_state;
    m_old_state_isSet = true;
}

bool OAIOrderFulfillmentUpdatedUpdate::is_old_state_Set() const{
    return m_old_state_isSet;
}

bool OAIOrderFulfillmentUpdatedUpdate::is_old_state_Valid() const{
    return m_old_state_isValid;
}

bool OAIOrderFulfillmentUpdatedUpdate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_fulfillment_uid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_new_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_old_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrderFulfillmentUpdatedUpdate::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
