/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRevokeTokenRequest.h
 *
 * 
 */

#ifndef OAIRevokeTokenRequest_H
#define OAIRevokeTokenRequest_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRevokeTokenRequest : public OAIObject {
public:
    OAIRevokeTokenRequest();
    OAIRevokeTokenRequest(QString json);
    ~OAIRevokeTokenRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccessToken() const;
    void setAccessToken(const QString &access_token);
    bool is_access_token_Set() const;
    bool is_access_token_Valid() const;

    QString getClientId() const;
    void setClientId(const QString &client_id);
    bool is_client_id_Set() const;
    bool is_client_id_Valid() const;

    QString getMerchantId() const;
    void setMerchantId(const QString &merchant_id);
    bool is_merchant_id_Set() const;
    bool is_merchant_id_Valid() const;

    bool isRevokeOnlyAccessToken() const;
    void setRevokeOnlyAccessToken(const bool &revoke_only_access_token);
    bool is_revoke_only_access_token_Set() const;
    bool is_revoke_only_access_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_access_token;
    bool m_access_token_isSet;
    bool m_access_token_isValid;

    QString m_client_id;
    bool m_client_id_isSet;
    bool m_client_id_isValid;

    QString m_merchant_id;
    bool m_merchant_id_isSet;
    bool m_merchant_id_isValid;

    bool m_revoke_only_access_token;
    bool m_revoke_only_access_token_isSet;
    bool m_revoke_only_access_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRevokeTokenRequest)

#endif // OAIRevokeTokenRequest_H
