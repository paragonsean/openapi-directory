/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICatalogDiscount.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICatalogDiscount::OAICatalogDiscount(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICatalogDiscount::OAICatalogDiscount() {
    this->initializeModel();
}

OAICatalogDiscount::~OAICatalogDiscount() {}

void OAICatalogDiscount::initializeModel() {

    m_amount_money_isSet = false;
    m_amount_money_isValid = false;

    m_discount_type_isSet = false;
    m_discount_type_isValid = false;

    m_label_color_isSet = false;
    m_label_color_isValid = false;

    m_modify_tax_basis_isSet = false;
    m_modify_tax_basis_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_percentage_isSet = false;
    m_percentage_isValid = false;

    m_pin_required_isSet = false;
    m_pin_required_isValid = false;
}

void OAICatalogDiscount::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICatalogDiscount::fromJsonObject(QJsonObject json) {

    m_amount_money_isValid = ::OpenAPI::fromJsonValue(m_amount_money, json[QString("amount_money")]);
    m_amount_money_isSet = !json[QString("amount_money")].isNull() && m_amount_money_isValid;

    m_discount_type_isValid = ::OpenAPI::fromJsonValue(m_discount_type, json[QString("discount_type")]);
    m_discount_type_isSet = !json[QString("discount_type")].isNull() && m_discount_type_isValid;

    m_label_color_isValid = ::OpenAPI::fromJsonValue(m_label_color, json[QString("label_color")]);
    m_label_color_isSet = !json[QString("label_color")].isNull() && m_label_color_isValid;

    m_modify_tax_basis_isValid = ::OpenAPI::fromJsonValue(m_modify_tax_basis, json[QString("modify_tax_basis")]);
    m_modify_tax_basis_isSet = !json[QString("modify_tax_basis")].isNull() && m_modify_tax_basis_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_percentage_isValid = ::OpenAPI::fromJsonValue(m_percentage, json[QString("percentage")]);
    m_percentage_isSet = !json[QString("percentage")].isNull() && m_percentage_isValid;

    m_pin_required_isValid = ::OpenAPI::fromJsonValue(m_pin_required, json[QString("pin_required")]);
    m_pin_required_isSet = !json[QString("pin_required")].isNull() && m_pin_required_isValid;
}

QString OAICatalogDiscount::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICatalogDiscount::asJsonObject() const {
    QJsonObject obj;
    if (m_amount_money.isSet()) {
        obj.insert(QString("amount_money"), ::OpenAPI::toJsonValue(m_amount_money));
    }
    if (m_discount_type_isSet) {
        obj.insert(QString("discount_type"), ::OpenAPI::toJsonValue(m_discount_type));
    }
    if (m_label_color_isSet) {
        obj.insert(QString("label_color"), ::OpenAPI::toJsonValue(m_label_color));
    }
    if (m_modify_tax_basis_isSet) {
        obj.insert(QString("modify_tax_basis"), ::OpenAPI::toJsonValue(m_modify_tax_basis));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_percentage_isSet) {
        obj.insert(QString("percentage"), ::OpenAPI::toJsonValue(m_percentage));
    }
    if (m_pin_required_isSet) {
        obj.insert(QString("pin_required"), ::OpenAPI::toJsonValue(m_pin_required));
    }
    return obj;
}

OAIMoney OAICatalogDiscount::getAmountMoney() const {
    return m_amount_money;
}
void OAICatalogDiscount::setAmountMoney(const OAIMoney &amount_money) {
    m_amount_money = amount_money;
    m_amount_money_isSet = true;
}

bool OAICatalogDiscount::is_amount_money_Set() const{
    return m_amount_money_isSet;
}

bool OAICatalogDiscount::is_amount_money_Valid() const{
    return m_amount_money_isValid;
}

QString OAICatalogDiscount::getDiscountType() const {
    return m_discount_type;
}
void OAICatalogDiscount::setDiscountType(const QString &discount_type) {
    m_discount_type = discount_type;
    m_discount_type_isSet = true;
}

bool OAICatalogDiscount::is_discount_type_Set() const{
    return m_discount_type_isSet;
}

bool OAICatalogDiscount::is_discount_type_Valid() const{
    return m_discount_type_isValid;
}

QString OAICatalogDiscount::getLabelColor() const {
    return m_label_color;
}
void OAICatalogDiscount::setLabelColor(const QString &label_color) {
    m_label_color = label_color;
    m_label_color_isSet = true;
}

bool OAICatalogDiscount::is_label_color_Set() const{
    return m_label_color_isSet;
}

bool OAICatalogDiscount::is_label_color_Valid() const{
    return m_label_color_isValid;
}

QString OAICatalogDiscount::getModifyTaxBasis() const {
    return m_modify_tax_basis;
}
void OAICatalogDiscount::setModifyTaxBasis(const QString &modify_tax_basis) {
    m_modify_tax_basis = modify_tax_basis;
    m_modify_tax_basis_isSet = true;
}

bool OAICatalogDiscount::is_modify_tax_basis_Set() const{
    return m_modify_tax_basis_isSet;
}

bool OAICatalogDiscount::is_modify_tax_basis_Valid() const{
    return m_modify_tax_basis_isValid;
}

QString OAICatalogDiscount::getName() const {
    return m_name;
}
void OAICatalogDiscount::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICatalogDiscount::is_name_Set() const{
    return m_name_isSet;
}

bool OAICatalogDiscount::is_name_Valid() const{
    return m_name_isValid;
}

QString OAICatalogDiscount::getPercentage() const {
    return m_percentage;
}
void OAICatalogDiscount::setPercentage(const QString &percentage) {
    m_percentage = percentage;
    m_percentage_isSet = true;
}

bool OAICatalogDiscount::is_percentage_Set() const{
    return m_percentage_isSet;
}

bool OAICatalogDiscount::is_percentage_Valid() const{
    return m_percentage_isValid;
}

bool OAICatalogDiscount::isPinRequired() const {
    return m_pin_required;
}
void OAICatalogDiscount::setPinRequired(const bool &pin_required) {
    m_pin_required = pin_required;
    m_pin_required_isSet = true;
}

bool OAICatalogDiscount::is_pin_required_Set() const{
    return m_pin_required_isSet;
}

bool OAICatalogDiscount::is_pin_required_Valid() const{
    return m_pin_required_isValid;
}

bool OAICatalogDiscount::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amount_money.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_discount_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_label_color_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_modify_tax_basis_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_percentage_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pin_required_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICatalogDiscount::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
