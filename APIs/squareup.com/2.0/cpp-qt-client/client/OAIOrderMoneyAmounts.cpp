/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderMoneyAmounts.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderMoneyAmounts::OAIOrderMoneyAmounts(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderMoneyAmounts::OAIOrderMoneyAmounts() {
    this->initializeModel();
}

OAIOrderMoneyAmounts::~OAIOrderMoneyAmounts() {}

void OAIOrderMoneyAmounts::initializeModel() {

    m_discount_money_isSet = false;
    m_discount_money_isValid = false;

    m_service_charge_money_isSet = false;
    m_service_charge_money_isValid = false;

    m_tax_money_isSet = false;
    m_tax_money_isValid = false;

    m_tip_money_isSet = false;
    m_tip_money_isValid = false;

    m_total_money_isSet = false;
    m_total_money_isValid = false;
}

void OAIOrderMoneyAmounts::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrderMoneyAmounts::fromJsonObject(QJsonObject json) {

    m_discount_money_isValid = ::OpenAPI::fromJsonValue(m_discount_money, json[QString("discount_money")]);
    m_discount_money_isSet = !json[QString("discount_money")].isNull() && m_discount_money_isValid;

    m_service_charge_money_isValid = ::OpenAPI::fromJsonValue(m_service_charge_money, json[QString("service_charge_money")]);
    m_service_charge_money_isSet = !json[QString("service_charge_money")].isNull() && m_service_charge_money_isValid;

    m_tax_money_isValid = ::OpenAPI::fromJsonValue(m_tax_money, json[QString("tax_money")]);
    m_tax_money_isSet = !json[QString("tax_money")].isNull() && m_tax_money_isValid;

    m_tip_money_isValid = ::OpenAPI::fromJsonValue(m_tip_money, json[QString("tip_money")]);
    m_tip_money_isSet = !json[QString("tip_money")].isNull() && m_tip_money_isValid;

    m_total_money_isValid = ::OpenAPI::fromJsonValue(m_total_money, json[QString("total_money")]);
    m_total_money_isSet = !json[QString("total_money")].isNull() && m_total_money_isValid;
}

QString OAIOrderMoneyAmounts::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrderMoneyAmounts::asJsonObject() const {
    QJsonObject obj;
    if (m_discount_money.isSet()) {
        obj.insert(QString("discount_money"), ::OpenAPI::toJsonValue(m_discount_money));
    }
    if (m_service_charge_money.isSet()) {
        obj.insert(QString("service_charge_money"), ::OpenAPI::toJsonValue(m_service_charge_money));
    }
    if (m_tax_money.isSet()) {
        obj.insert(QString("tax_money"), ::OpenAPI::toJsonValue(m_tax_money));
    }
    if (m_tip_money.isSet()) {
        obj.insert(QString("tip_money"), ::OpenAPI::toJsonValue(m_tip_money));
    }
    if (m_total_money.isSet()) {
        obj.insert(QString("total_money"), ::OpenAPI::toJsonValue(m_total_money));
    }
    return obj;
}

OAIMoney OAIOrderMoneyAmounts::getDiscountMoney() const {
    return m_discount_money;
}
void OAIOrderMoneyAmounts::setDiscountMoney(const OAIMoney &discount_money) {
    m_discount_money = discount_money;
    m_discount_money_isSet = true;
}

bool OAIOrderMoneyAmounts::is_discount_money_Set() const{
    return m_discount_money_isSet;
}

bool OAIOrderMoneyAmounts::is_discount_money_Valid() const{
    return m_discount_money_isValid;
}

OAIMoney OAIOrderMoneyAmounts::getServiceChargeMoney() const {
    return m_service_charge_money;
}
void OAIOrderMoneyAmounts::setServiceChargeMoney(const OAIMoney &service_charge_money) {
    m_service_charge_money = service_charge_money;
    m_service_charge_money_isSet = true;
}

bool OAIOrderMoneyAmounts::is_service_charge_money_Set() const{
    return m_service_charge_money_isSet;
}

bool OAIOrderMoneyAmounts::is_service_charge_money_Valid() const{
    return m_service_charge_money_isValid;
}

OAIMoney OAIOrderMoneyAmounts::getTaxMoney() const {
    return m_tax_money;
}
void OAIOrderMoneyAmounts::setTaxMoney(const OAIMoney &tax_money) {
    m_tax_money = tax_money;
    m_tax_money_isSet = true;
}

bool OAIOrderMoneyAmounts::is_tax_money_Set() const{
    return m_tax_money_isSet;
}

bool OAIOrderMoneyAmounts::is_tax_money_Valid() const{
    return m_tax_money_isValid;
}

OAIMoney OAIOrderMoneyAmounts::getTipMoney() const {
    return m_tip_money;
}
void OAIOrderMoneyAmounts::setTipMoney(const OAIMoney &tip_money) {
    m_tip_money = tip_money;
    m_tip_money_isSet = true;
}

bool OAIOrderMoneyAmounts::is_tip_money_Set() const{
    return m_tip_money_isSet;
}

bool OAIOrderMoneyAmounts::is_tip_money_Valid() const{
    return m_tip_money_isValid;
}

OAIMoney OAIOrderMoneyAmounts::getTotalMoney() const {
    return m_total_money;
}
void OAIOrderMoneyAmounts::setTotalMoney(const OAIMoney &total_money) {
    m_total_money = total_money;
    m_total_money_isSet = true;
}

bool OAIOrderMoneyAmounts::is_total_money_Set() const{
    return m_total_money_isSet;
}

bool OAIOrderMoneyAmounts::is_total_money_Valid() const{
    return m_total_money_isValid;
}

bool OAIOrderMoneyAmounts::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_discount_money.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_charge_money.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tax_money.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tip_money.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_money.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrderMoneyAmounts::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
