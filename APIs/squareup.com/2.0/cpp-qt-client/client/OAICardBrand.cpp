/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICardBrand.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICardBrand::OAICardBrand(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICardBrand::OAICardBrand() {
    this->initializeModel();
}

OAICardBrand::~OAICardBrand() {}

void OAICardBrand::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAICardBrand::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAICardBrand::fromJson(QString jsonString) {
    
    if ( jsonString.compare("OTHER_BRAND", Qt::CaseInsensitive) == 0) {
        m_value = eOAICardBrand::OTHER_BRAND;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("VISA", Qt::CaseInsensitive) == 0) {
        m_value = eOAICardBrand::VISA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MASTERCARD", Qt::CaseInsensitive) == 0) {
        m_value = eOAICardBrand::MASTERCARD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AMERICAN_EXPRESS", Qt::CaseInsensitive) == 0) {
        m_value = eOAICardBrand::AMERICAN_EXPRESS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DISCOVER", Qt::CaseInsensitive) == 0) {
        m_value = eOAICardBrand::DISCOVER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DISCOVER_DINERS", Qt::CaseInsensitive) == 0) {
        m_value = eOAICardBrand::DISCOVER_DINERS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("JCB", Qt::CaseInsensitive) == 0) {
        m_value = eOAICardBrand::JCB;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CHINA_UNIONPAY", Qt::CaseInsensitive) == 0) {
        m_value = eOAICardBrand::CHINA_UNIONPAY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SQUARE_GIFT_CARD", Qt::CaseInsensitive) == 0) {
        m_value = eOAICardBrand::SQUARE_GIFT_CARD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SQUARE_CAPITAL_CARD", Qt::CaseInsensitive) == 0) {
        m_value = eOAICardBrand::SQUARE_CAPITAL_CARD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("INTERAC", Qt::CaseInsensitive) == 0) {
        m_value = eOAICardBrand::INTERAC;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EFTPOS", Qt::CaseInsensitive) == 0) {
        m_value = eOAICardBrand::EFTPOS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FELICA", Qt::CaseInsensitive) == 0) {
        m_value = eOAICardBrand::FELICA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EBT", Qt::CaseInsensitive) == 0) {
        m_value = eOAICardBrand::EBT;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAICardBrand::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAICardBrand::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAICardBrand::OTHER_BRAND:
            val = "OTHER_BRAND";
            break;
        case eOAICardBrand::VISA:
            val = "VISA";
            break;
        case eOAICardBrand::MASTERCARD:
            val = "MASTERCARD";
            break;
        case eOAICardBrand::AMERICAN_EXPRESS:
            val = "AMERICAN_EXPRESS";
            break;
        case eOAICardBrand::DISCOVER:
            val = "DISCOVER";
            break;
        case eOAICardBrand::DISCOVER_DINERS:
            val = "DISCOVER_DINERS";
            break;
        case eOAICardBrand::JCB:
            val = "JCB";
            break;
        case eOAICardBrand::CHINA_UNIONPAY:
            val = "CHINA_UNIONPAY";
            break;
        case eOAICardBrand::SQUARE_GIFT_CARD:
            val = "SQUARE_GIFT_CARD";
            break;
        case eOAICardBrand::SQUARE_CAPITAL_CARD:
            val = "SQUARE_CAPITAL_CARD";
            break;
        case eOAICardBrand::INTERAC:
            val = "INTERAC";
            break;
        case eOAICardBrand::EFTPOS:
            val = "EFTPOS";
            break;
        case eOAICardBrand::FELICA:
            val = "FELICA";
            break;
        case eOAICardBrand::EBT:
            val = "EBT";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAICardBrand::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAICardBrand::eOAICardBrand OAICardBrand::getValue() const {
    return m_value;
}

void OAICardBrand::setValue(const OAICardBrand::eOAICardBrand& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAICardBrand::isSet() const {
    
    return m_value_isSet;
}

bool OAICardBrand::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
