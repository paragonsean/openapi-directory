/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGiftCard.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGiftCard::OAIGiftCard(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGiftCard::OAIGiftCard() {
    this->initializeModel();
}

OAIGiftCard::~OAIGiftCard() {}

void OAIGiftCard::initializeModel() {

    m_balance_money_isSet = false;
    m_balance_money_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_customer_ids_isSet = false;
    m_customer_ids_isValid = false;

    m_gan_isSet = false;
    m_gan_isValid = false;

    m_gan_source_isSet = false;
    m_gan_source_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIGiftCard::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGiftCard::fromJsonObject(QJsonObject json) {

    m_balance_money_isValid = ::OpenAPI::fromJsonValue(m_balance_money, json[QString("balance_money")]);
    m_balance_money_isSet = !json[QString("balance_money")].isNull() && m_balance_money_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_customer_ids_isValid = ::OpenAPI::fromJsonValue(m_customer_ids, json[QString("customer_ids")]);
    m_customer_ids_isSet = !json[QString("customer_ids")].isNull() && m_customer_ids_isValid;

    m_gan_isValid = ::OpenAPI::fromJsonValue(m_gan, json[QString("gan")]);
    m_gan_isSet = !json[QString("gan")].isNull() && m_gan_isValid;

    m_gan_source_isValid = ::OpenAPI::fromJsonValue(m_gan_source, json[QString("gan_source")]);
    m_gan_source_isSet = !json[QString("gan_source")].isNull() && m_gan_source_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIGiftCard::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGiftCard::asJsonObject() const {
    QJsonObject obj;
    if (m_balance_money.isSet()) {
        obj.insert(QString("balance_money"), ::OpenAPI::toJsonValue(m_balance_money));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_customer_ids.size() > 0) {
        obj.insert(QString("customer_ids"), ::OpenAPI::toJsonValue(m_customer_ids));
    }
    if (m_gan_isSet) {
        obj.insert(QString("gan"), ::OpenAPI::toJsonValue(m_gan));
    }
    if (m_gan_source_isSet) {
        obj.insert(QString("gan_source"), ::OpenAPI::toJsonValue(m_gan_source));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

OAIMoney OAIGiftCard::getBalanceMoney() const {
    return m_balance_money;
}
void OAIGiftCard::setBalanceMoney(const OAIMoney &balance_money) {
    m_balance_money = balance_money;
    m_balance_money_isSet = true;
}

bool OAIGiftCard::is_balance_money_Set() const{
    return m_balance_money_isSet;
}

bool OAIGiftCard::is_balance_money_Valid() const{
    return m_balance_money_isValid;
}

QString OAIGiftCard::getCreatedAt() const {
    return m_created_at;
}
void OAIGiftCard::setCreatedAt(const QString &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIGiftCard::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIGiftCard::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QList<QString> OAIGiftCard::getCustomerIds() const {
    return m_customer_ids;
}
void OAIGiftCard::setCustomerIds(const QList<QString> &customer_ids) {
    m_customer_ids = customer_ids;
    m_customer_ids_isSet = true;
}

bool OAIGiftCard::is_customer_ids_Set() const{
    return m_customer_ids_isSet;
}

bool OAIGiftCard::is_customer_ids_Valid() const{
    return m_customer_ids_isValid;
}

QString OAIGiftCard::getGan() const {
    return m_gan;
}
void OAIGiftCard::setGan(const QString &gan) {
    m_gan = gan;
    m_gan_isSet = true;
}

bool OAIGiftCard::is_gan_Set() const{
    return m_gan_isSet;
}

bool OAIGiftCard::is_gan_Valid() const{
    return m_gan_isValid;
}

QJsonValue OAIGiftCard::getGanSource() const {
    return m_gan_source;
}
void OAIGiftCard::setGanSource(const QJsonValue &gan_source) {
    m_gan_source = gan_source;
    m_gan_source_isSet = true;
}

bool OAIGiftCard::is_gan_source_Set() const{
    return m_gan_source_isSet;
}

bool OAIGiftCard::is_gan_source_Valid() const{
    return m_gan_source_isValid;
}

QString OAIGiftCard::getId() const {
    return m_id;
}
void OAIGiftCard::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIGiftCard::is_id_Set() const{
    return m_id_isSet;
}

bool OAIGiftCard::is_id_Valid() const{
    return m_id_isValid;
}

QJsonValue OAIGiftCard::getState() const {
    return m_state;
}
void OAIGiftCard::setState(const QJsonValue &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIGiftCard::is_state_Set() const{
    return m_state_isSet;
}

bool OAIGiftCard::is_state_Valid() const{
    return m_state_isValid;
}

QJsonValue OAIGiftCard::getType() const {
    return m_type;
}
void OAIGiftCard::setType(const QJsonValue &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIGiftCard::is_type_Set() const{
    return m_type_isSet;
}

bool OAIGiftCard::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIGiftCard::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_balance_money.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_gan_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gan_source_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGiftCard::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_type_isValid && true;
}

} // namespace OpenAPI
