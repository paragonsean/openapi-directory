/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInventoryCount.h
 *
 * Represents Square-estimated quantity of items in a particular state at a particular seller location based on the known history of physical counts and inventory adjustments.
 */

#ifndef OAIInventoryCount_H
#define OAIInventoryCount_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIInventoryCount : public OAIObject {
public:
    OAIInventoryCount();
    OAIInventoryCount(QString json);
    ~OAIInventoryCount() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCalculatedAt() const;
    void setCalculatedAt(const QString &calculated_at);
    bool is_calculated_at_Set() const;
    bool is_calculated_at_Valid() const;

    QString getCatalogObjectId() const;
    void setCatalogObjectId(const QString &catalog_object_id);
    bool is_catalog_object_id_Set() const;
    bool is_catalog_object_id_Valid() const;

    QString getCatalogObjectType() const;
    void setCatalogObjectType(const QString &catalog_object_type);
    bool is_catalog_object_type_Set() const;
    bool is_catalog_object_type_Valid() const;

    bool isIsEstimated() const;
    void setIsEstimated(const bool &is_estimated);
    bool is_is_estimated_Set() const;
    bool is_is_estimated_Valid() const;

    QString getLocationId() const;
    void setLocationId(const QString &location_id);
    bool is_location_id_Set() const;
    bool is_location_id_Valid() const;

    QString getQuantity() const;
    void setQuantity(const QString &quantity);
    bool is_quantity_Set() const;
    bool is_quantity_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_calculated_at;
    bool m_calculated_at_isSet;
    bool m_calculated_at_isValid;

    QString m_catalog_object_id;
    bool m_catalog_object_id_isSet;
    bool m_catalog_object_id_isValid;

    QString m_catalog_object_type;
    bool m_catalog_object_type_isSet;
    bool m_catalog_object_type_isValid;

    bool m_is_estimated;
    bool m_is_estimated_isSet;
    bool m_is_estimated_isValid;

    QString m_location_id;
    bool m_location_id_isSet;
    bool m_location_id_isValid;

    QString m_quantity;
    bool m_quantity_isSet;
    bool m_quantity_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInventoryCount)

#endif // OAIInventoryCount_H
