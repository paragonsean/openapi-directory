/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBusinessHoursPeriod.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBusinessHoursPeriod::OAIBusinessHoursPeriod(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBusinessHoursPeriod::OAIBusinessHoursPeriod() {
    this->initializeModel();
}

OAIBusinessHoursPeriod::~OAIBusinessHoursPeriod() {}

void OAIBusinessHoursPeriod::initializeModel() {

    m_day_of_week_isSet = false;
    m_day_of_week_isValid = false;

    m_end_local_time_isSet = false;
    m_end_local_time_isValid = false;

    m_start_local_time_isSet = false;
    m_start_local_time_isValid = false;
}

void OAIBusinessHoursPeriod::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBusinessHoursPeriod::fromJsonObject(QJsonObject json) {

    m_day_of_week_isValid = ::OpenAPI::fromJsonValue(m_day_of_week, json[QString("day_of_week")]);
    m_day_of_week_isSet = !json[QString("day_of_week")].isNull() && m_day_of_week_isValid;

    m_end_local_time_isValid = ::OpenAPI::fromJsonValue(m_end_local_time, json[QString("end_local_time")]);
    m_end_local_time_isSet = !json[QString("end_local_time")].isNull() && m_end_local_time_isValid;

    m_start_local_time_isValid = ::OpenAPI::fromJsonValue(m_start_local_time, json[QString("start_local_time")]);
    m_start_local_time_isSet = !json[QString("start_local_time")].isNull() && m_start_local_time_isValid;
}

QString OAIBusinessHoursPeriod::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBusinessHoursPeriod::asJsonObject() const {
    QJsonObject obj;
    if (m_day_of_week_isSet) {
        obj.insert(QString("day_of_week"), ::OpenAPI::toJsonValue(m_day_of_week));
    }
    if (m_end_local_time_isSet) {
        obj.insert(QString("end_local_time"), ::OpenAPI::toJsonValue(m_end_local_time));
    }
    if (m_start_local_time_isSet) {
        obj.insert(QString("start_local_time"), ::OpenAPI::toJsonValue(m_start_local_time));
    }
    return obj;
}

QString OAIBusinessHoursPeriod::getDayOfWeek() const {
    return m_day_of_week;
}
void OAIBusinessHoursPeriod::setDayOfWeek(const QString &day_of_week) {
    m_day_of_week = day_of_week;
    m_day_of_week_isSet = true;
}

bool OAIBusinessHoursPeriod::is_day_of_week_Set() const{
    return m_day_of_week_isSet;
}

bool OAIBusinessHoursPeriod::is_day_of_week_Valid() const{
    return m_day_of_week_isValid;
}

QString OAIBusinessHoursPeriod::getEndLocalTime() const {
    return m_end_local_time;
}
void OAIBusinessHoursPeriod::setEndLocalTime(const QString &end_local_time) {
    m_end_local_time = end_local_time;
    m_end_local_time_isSet = true;
}

bool OAIBusinessHoursPeriod::is_end_local_time_Set() const{
    return m_end_local_time_isSet;
}

bool OAIBusinessHoursPeriod::is_end_local_time_Valid() const{
    return m_end_local_time_isValid;
}

QString OAIBusinessHoursPeriod::getStartLocalTime() const {
    return m_start_local_time;
}
void OAIBusinessHoursPeriod::setStartLocalTime(const QString &start_local_time) {
    m_start_local_time = start_local_time;
    m_start_local_time_isSet = true;
}

bool OAIBusinessHoursPeriod::is_start_local_time_Set() const{
    return m_start_local_time_isSet;
}

bool OAIBusinessHoursPeriod::is_start_local_time_Valid() const{
    return m_start_local_time_isValid;
}

bool OAIBusinessHoursPeriod::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_day_of_week_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_local_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_local_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBusinessHoursPeriod::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
