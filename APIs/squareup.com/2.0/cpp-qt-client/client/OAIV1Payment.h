/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIV1Payment.h
 *
 * A payment represents a paid transaction between a Square merchant and a customer. Payment details are usually available from Connect API endpoints within a few minutes after the transaction completes.  Each Payment object includes several fields that end in &#x60;_money&#x60;. These fields describe the various amounts of money that contribute to the payment total:  &lt;ul&gt; &lt;li&gt; Monetary values are &lt;b&gt;positive&lt;/b&gt; if they represent an &lt;em&gt;increase&lt;/em&gt; in the amount of money the merchant receives (e.g., &lt;code&gt;tax_money&lt;/code&gt;, &lt;code&gt;tip_money&lt;/code&gt;). &lt;/li&gt; &lt;li&gt; Monetary values are &lt;b&gt;negative&lt;/b&gt; if they represent an &lt;em&gt;decrease&lt;/em&gt; in the amount of money the merchant receives (e.g., &lt;code&gt;discount_money&lt;/code&gt;, &lt;code&gt;refunded_money&lt;/code&gt;). &lt;/li&gt; &lt;/ul&gt;
 */

#ifndef OAIV1Payment_H
#define OAIV1Payment_H

#include <QJsonObject>

#include "OAIDevice.h"
#include "OAIV1Money.h"
#include "OAIV1PaymentItemization.h"
#include "OAIV1PaymentSurcharge.h"
#include "OAIV1PaymentTax.h"
#include "OAIV1Refund.h"
#include "OAIV1Tender.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIV1PaymentTax;
class OAIV1Money;
class OAIDevice;
class OAIV1PaymentItemization;
class OAIV1Refund;
class OAIV1PaymentSurcharge;
class OAIV1Tender;

class OAIV1Payment : public OAIObject {
public:
    OAIV1Payment();
    OAIV1Payment(QString json);
    ~OAIV1Payment() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIV1PaymentTax> getAdditiveTax() const;
    void setAdditiveTax(const QList<OAIV1PaymentTax> &additive_tax);
    bool is_additive_tax_Set() const;
    bool is_additive_tax_Valid() const;

    OAIV1Money getAdditiveTaxMoney() const;
    void setAdditiveTaxMoney(const OAIV1Money &additive_tax_money);
    bool is_additive_tax_money_Set() const;
    bool is_additive_tax_money_Valid() const;

    QString getCreatedAt() const;
    void setCreatedAt(const QString &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getCreatorId() const;
    void setCreatorId(const QString &creator_id);
    bool is_creator_id_Set() const;
    bool is_creator_id_Valid() const;

    OAIDevice getDevice() const;
    void setDevice(const OAIDevice &device);
    bool is_device_Set() const;
    bool is_device_Valid() const;

    OAIV1Money getDiscountMoney() const;
    void setDiscountMoney(const OAIV1Money &discount_money);
    bool is_discount_money_Set() const;
    bool is_discount_money_Valid() const;

    OAIV1Money getGrossSalesMoney() const;
    void setGrossSalesMoney(const OAIV1Money &gross_sales_money);
    bool is_gross_sales_money_Set() const;
    bool is_gross_sales_money_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QList<OAIV1PaymentTax> getInclusiveTax() const;
    void setInclusiveTax(const QList<OAIV1PaymentTax> &inclusive_tax);
    bool is_inclusive_tax_Set() const;
    bool is_inclusive_tax_Valid() const;

    OAIV1Money getInclusiveTaxMoney() const;
    void setInclusiveTaxMoney(const OAIV1Money &inclusive_tax_money);
    bool is_inclusive_tax_money_Set() const;
    bool is_inclusive_tax_money_Valid() const;

    bool isIsPartial() const;
    void setIsPartial(const bool &is_partial);
    bool is_is_partial_Set() const;
    bool is_is_partial_Valid() const;

    QList<OAIV1PaymentItemization> getItemizations() const;
    void setItemizations(const QList<OAIV1PaymentItemization> &itemizations);
    bool is_itemizations_Set() const;
    bool is_itemizations_Valid() const;

    QString getMerchantId() const;
    void setMerchantId(const QString &merchant_id);
    bool is_merchant_id_Set() const;
    bool is_merchant_id_Valid() const;

    OAIV1Money getNetSalesMoney() const;
    void setNetSalesMoney(const OAIV1Money &net_sales_money);
    bool is_net_sales_money_Set() const;
    bool is_net_sales_money_Valid() const;

    OAIV1Money getNetTotalMoney() const;
    void setNetTotalMoney(const OAIV1Money &net_total_money);
    bool is_net_total_money_Set() const;
    bool is_net_total_money_Valid() const;

    QString getPaymentUrl() const;
    void setPaymentUrl(const QString &payment_url);
    bool is_payment_url_Set() const;
    bool is_payment_url_Valid() const;

    OAIV1Money getProcessingFeeMoney() const;
    void setProcessingFeeMoney(const OAIV1Money &processing_fee_money);
    bool is_processing_fee_money_Set() const;
    bool is_processing_fee_money_Valid() const;

    QString getReceiptUrl() const;
    void setReceiptUrl(const QString &receipt_url);
    bool is_receipt_url_Set() const;
    bool is_receipt_url_Valid() const;

    OAIV1Money getRefundedMoney() const;
    void setRefundedMoney(const OAIV1Money &refunded_money);
    bool is_refunded_money_Set() const;
    bool is_refunded_money_Valid() const;

    QList<OAIV1Refund> getRefunds() const;
    void setRefunds(const QList<OAIV1Refund> &refunds);
    bool is_refunds_Set() const;
    bool is_refunds_Valid() const;

    OAIV1Money getSurchargeMoney() const;
    void setSurchargeMoney(const OAIV1Money &surcharge_money);
    bool is_surcharge_money_Set() const;
    bool is_surcharge_money_Valid() const;

    QList<OAIV1PaymentSurcharge> getSurcharges() const;
    void setSurcharges(const QList<OAIV1PaymentSurcharge> &surcharges);
    bool is_surcharges_Set() const;
    bool is_surcharges_Valid() const;

    OAIV1Money getSwedishRoundingMoney() const;
    void setSwedishRoundingMoney(const OAIV1Money &swedish_rounding_money);
    bool is_swedish_rounding_money_Set() const;
    bool is_swedish_rounding_money_Valid() const;

    OAIV1Money getTaxMoney() const;
    void setTaxMoney(const OAIV1Money &tax_money);
    bool is_tax_money_Set() const;
    bool is_tax_money_Valid() const;

    QList<OAIV1Tender> getTender() const;
    void setTender(const QList<OAIV1Tender> &tender);
    bool is_tender_Set() const;
    bool is_tender_Valid() const;

    OAIV1Money getTipMoney() const;
    void setTipMoney(const OAIV1Money &tip_money);
    bool is_tip_money_Set() const;
    bool is_tip_money_Valid() const;

    OAIV1Money getTotalCollectedMoney() const;
    void setTotalCollectedMoney(const OAIV1Money &total_collected_money);
    bool is_total_collected_money_Set() const;
    bool is_total_collected_money_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIV1PaymentTax> m_additive_tax;
    bool m_additive_tax_isSet;
    bool m_additive_tax_isValid;

    OAIV1Money m_additive_tax_money;
    bool m_additive_tax_money_isSet;
    bool m_additive_tax_money_isValid;

    QString m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_creator_id;
    bool m_creator_id_isSet;
    bool m_creator_id_isValid;

    OAIDevice m_device;
    bool m_device_isSet;
    bool m_device_isValid;

    OAIV1Money m_discount_money;
    bool m_discount_money_isSet;
    bool m_discount_money_isValid;

    OAIV1Money m_gross_sales_money;
    bool m_gross_sales_money_isSet;
    bool m_gross_sales_money_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QList<OAIV1PaymentTax> m_inclusive_tax;
    bool m_inclusive_tax_isSet;
    bool m_inclusive_tax_isValid;

    OAIV1Money m_inclusive_tax_money;
    bool m_inclusive_tax_money_isSet;
    bool m_inclusive_tax_money_isValid;

    bool m_is_partial;
    bool m_is_partial_isSet;
    bool m_is_partial_isValid;

    QList<OAIV1PaymentItemization> m_itemizations;
    bool m_itemizations_isSet;
    bool m_itemizations_isValid;

    QString m_merchant_id;
    bool m_merchant_id_isSet;
    bool m_merchant_id_isValid;

    OAIV1Money m_net_sales_money;
    bool m_net_sales_money_isSet;
    bool m_net_sales_money_isValid;

    OAIV1Money m_net_total_money;
    bool m_net_total_money_isSet;
    bool m_net_total_money_isValid;

    QString m_payment_url;
    bool m_payment_url_isSet;
    bool m_payment_url_isValid;

    OAIV1Money m_processing_fee_money;
    bool m_processing_fee_money_isSet;
    bool m_processing_fee_money_isValid;

    QString m_receipt_url;
    bool m_receipt_url_isSet;
    bool m_receipt_url_isValid;

    OAIV1Money m_refunded_money;
    bool m_refunded_money_isSet;
    bool m_refunded_money_isValid;

    QList<OAIV1Refund> m_refunds;
    bool m_refunds_isSet;
    bool m_refunds_isValid;

    OAIV1Money m_surcharge_money;
    bool m_surcharge_money_isSet;
    bool m_surcharge_money_isValid;

    QList<OAIV1PaymentSurcharge> m_surcharges;
    bool m_surcharges_isSet;
    bool m_surcharges_isValid;

    OAIV1Money m_swedish_rounding_money;
    bool m_swedish_rounding_money_isSet;
    bool m_swedish_rounding_money_isValid;

    OAIV1Money m_tax_money;
    bool m_tax_money_isSet;
    bool m_tax_money_isValid;

    QList<OAIV1Tender> m_tender;
    bool m_tender_isSet;
    bool m_tender_isValid;

    OAIV1Money m_tip_money;
    bool m_tip_money_isSet;
    bool m_tip_money_isValid;

    OAIV1Money m_total_collected_money;
    bool m_total_collected_money_isSet;
    bool m_total_collected_money_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIV1Payment)

#endif // OAIV1Payment_H
