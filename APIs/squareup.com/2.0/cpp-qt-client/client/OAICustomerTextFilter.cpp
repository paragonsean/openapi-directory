/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustomerTextFilter.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustomerTextFilter::OAICustomerTextFilter(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustomerTextFilter::OAICustomerTextFilter() {
    this->initializeModel();
}

OAICustomerTextFilter::~OAICustomerTextFilter() {}

void OAICustomerTextFilter::initializeModel() {

    m_exact_isSet = false;
    m_exact_isValid = false;

    m_fuzzy_isSet = false;
    m_fuzzy_isValid = false;
}

void OAICustomerTextFilter::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustomerTextFilter::fromJsonObject(QJsonObject json) {

    m_exact_isValid = ::OpenAPI::fromJsonValue(m_exact, json[QString("exact")]);
    m_exact_isSet = !json[QString("exact")].isNull() && m_exact_isValid;

    m_fuzzy_isValid = ::OpenAPI::fromJsonValue(m_fuzzy, json[QString("fuzzy")]);
    m_fuzzy_isSet = !json[QString("fuzzy")].isNull() && m_fuzzy_isValid;
}

QString OAICustomerTextFilter::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustomerTextFilter::asJsonObject() const {
    QJsonObject obj;
    if (m_exact_isSet) {
        obj.insert(QString("exact"), ::OpenAPI::toJsonValue(m_exact));
    }
    if (m_fuzzy_isSet) {
        obj.insert(QString("fuzzy"), ::OpenAPI::toJsonValue(m_fuzzy));
    }
    return obj;
}

QString OAICustomerTextFilter::getExact() const {
    return m_exact;
}
void OAICustomerTextFilter::setExact(const QString &exact) {
    m_exact = exact;
    m_exact_isSet = true;
}

bool OAICustomerTextFilter::is_exact_Set() const{
    return m_exact_isSet;
}

bool OAICustomerTextFilter::is_exact_Valid() const{
    return m_exact_isValid;
}

QString OAICustomerTextFilter::getFuzzy() const {
    return m_fuzzy;
}
void OAICustomerTextFilter::setFuzzy(const QString &fuzzy) {
    m_fuzzy = fuzzy;
    m_fuzzy_isSet = true;
}

bool OAICustomerTextFilter::is_fuzzy_Set() const{
    return m_fuzzy_isSet;
}

bool OAICustomerTextFilter::is_fuzzy_Valid() const{
    return m_fuzzy_isValid;
}

bool OAICustomerTextFilter::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_exact_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fuzzy_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustomerTextFilter::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
