/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICatalogQueryRange.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICatalogQueryRange::OAICatalogQueryRange(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICatalogQueryRange::OAICatalogQueryRange() {
    this->initializeModel();
}

OAICatalogQueryRange::~OAICatalogQueryRange() {}

void OAICatalogQueryRange::initializeModel() {

    m_attribute_max_value_isSet = false;
    m_attribute_max_value_isValid = false;

    m_attribute_min_value_isSet = false;
    m_attribute_min_value_isValid = false;

    m_attribute_name_isSet = false;
    m_attribute_name_isValid = false;
}

void OAICatalogQueryRange::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICatalogQueryRange::fromJsonObject(QJsonObject json) {

    m_attribute_max_value_isValid = ::OpenAPI::fromJsonValue(m_attribute_max_value, json[QString("attribute_max_value")]);
    m_attribute_max_value_isSet = !json[QString("attribute_max_value")].isNull() && m_attribute_max_value_isValid;

    m_attribute_min_value_isValid = ::OpenAPI::fromJsonValue(m_attribute_min_value, json[QString("attribute_min_value")]);
    m_attribute_min_value_isSet = !json[QString("attribute_min_value")].isNull() && m_attribute_min_value_isValid;

    m_attribute_name_isValid = ::OpenAPI::fromJsonValue(m_attribute_name, json[QString("attribute_name")]);
    m_attribute_name_isSet = !json[QString("attribute_name")].isNull() && m_attribute_name_isValid;
}

QString OAICatalogQueryRange::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICatalogQueryRange::asJsonObject() const {
    QJsonObject obj;
    if (m_attribute_max_value_isSet) {
        obj.insert(QString("attribute_max_value"), ::OpenAPI::toJsonValue(m_attribute_max_value));
    }
    if (m_attribute_min_value_isSet) {
        obj.insert(QString("attribute_min_value"), ::OpenAPI::toJsonValue(m_attribute_min_value));
    }
    if (m_attribute_name_isSet) {
        obj.insert(QString("attribute_name"), ::OpenAPI::toJsonValue(m_attribute_name));
    }
    return obj;
}

qint64 OAICatalogQueryRange::getAttributeMaxValue() const {
    return m_attribute_max_value;
}
void OAICatalogQueryRange::setAttributeMaxValue(const qint64 &attribute_max_value) {
    m_attribute_max_value = attribute_max_value;
    m_attribute_max_value_isSet = true;
}

bool OAICatalogQueryRange::is_attribute_max_value_Set() const{
    return m_attribute_max_value_isSet;
}

bool OAICatalogQueryRange::is_attribute_max_value_Valid() const{
    return m_attribute_max_value_isValid;
}

qint64 OAICatalogQueryRange::getAttributeMinValue() const {
    return m_attribute_min_value;
}
void OAICatalogQueryRange::setAttributeMinValue(const qint64 &attribute_min_value) {
    m_attribute_min_value = attribute_min_value;
    m_attribute_min_value_isSet = true;
}

bool OAICatalogQueryRange::is_attribute_min_value_Set() const{
    return m_attribute_min_value_isSet;
}

bool OAICatalogQueryRange::is_attribute_min_value_Valid() const{
    return m_attribute_min_value_isValid;
}

QString OAICatalogQueryRange::getAttributeName() const {
    return m_attribute_name;
}
void OAICatalogQueryRange::setAttributeName(const QString &attribute_name) {
    m_attribute_name = attribute_name;
    m_attribute_name_isSet = true;
}

bool OAICatalogQueryRange::is_attribute_name_Set() const{
    return m_attribute_name_isSet;
}

bool OAICatalogQueryRange::is_attribute_name_Valid() const{
    return m_attribute_name_isValid;
}

bool OAICatalogQueryRange::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attribute_max_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_attribute_min_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_attribute_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICatalogQueryRange::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_attribute_name_isValid && true;
}

} // namespace OpenAPI
