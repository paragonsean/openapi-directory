/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListWorkweekConfigsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListWorkweekConfigsResponse::OAIListWorkweekConfigsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListWorkweekConfigsResponse::OAIListWorkweekConfigsResponse() {
    this->initializeModel();
}

OAIListWorkweekConfigsResponse::~OAIListWorkweekConfigsResponse() {}

void OAIListWorkweekConfigsResponse::initializeModel() {

    m_cursor_isSet = false;
    m_cursor_isValid = false;

    m_errors_isSet = false;
    m_errors_isValid = false;

    m_workweek_configs_isSet = false;
    m_workweek_configs_isValid = false;
}

void OAIListWorkweekConfigsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListWorkweekConfigsResponse::fromJsonObject(QJsonObject json) {

    m_cursor_isValid = ::OpenAPI::fromJsonValue(m_cursor, json[QString("cursor")]);
    m_cursor_isSet = !json[QString("cursor")].isNull() && m_cursor_isValid;

    m_errors_isValid = ::OpenAPI::fromJsonValue(m_errors, json[QString("errors")]);
    m_errors_isSet = !json[QString("errors")].isNull() && m_errors_isValid;

    m_workweek_configs_isValid = ::OpenAPI::fromJsonValue(m_workweek_configs, json[QString("workweek_configs")]);
    m_workweek_configs_isSet = !json[QString("workweek_configs")].isNull() && m_workweek_configs_isValid;
}

QString OAIListWorkweekConfigsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListWorkweekConfigsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_cursor_isSet) {
        obj.insert(QString("cursor"), ::OpenAPI::toJsonValue(m_cursor));
    }
    if (m_errors.size() > 0) {
        obj.insert(QString("errors"), ::OpenAPI::toJsonValue(m_errors));
    }
    if (m_workweek_configs.size() > 0) {
        obj.insert(QString("workweek_configs"), ::OpenAPI::toJsonValue(m_workweek_configs));
    }
    return obj;
}

QString OAIListWorkweekConfigsResponse::getCursor() const {
    return m_cursor;
}
void OAIListWorkweekConfigsResponse::setCursor(const QString &cursor) {
    m_cursor = cursor;
    m_cursor_isSet = true;
}

bool OAIListWorkweekConfigsResponse::is_cursor_Set() const{
    return m_cursor_isSet;
}

bool OAIListWorkweekConfigsResponse::is_cursor_Valid() const{
    return m_cursor_isValid;
}

QList<OAIError> OAIListWorkweekConfigsResponse::getErrors() const {
    return m_errors;
}
void OAIListWorkweekConfigsResponse::setErrors(const QList<OAIError> &errors) {
    m_errors = errors;
    m_errors_isSet = true;
}

bool OAIListWorkweekConfigsResponse::is_errors_Set() const{
    return m_errors_isSet;
}

bool OAIListWorkweekConfigsResponse::is_errors_Valid() const{
    return m_errors_isValid;
}

QList<OAIWorkweekConfig> OAIListWorkweekConfigsResponse::getWorkweekConfigs() const {
    return m_workweek_configs;
}
void OAIListWorkweekConfigsResponse::setWorkweekConfigs(const QList<OAIWorkweekConfig> &workweek_configs) {
    m_workweek_configs = workweek_configs;
    m_workweek_configs_isSet = true;
}

bool OAIListWorkweekConfigsResponse::is_workweek_configs_Set() const{
    return m_workweek_configs_isSet;
}

bool OAIListWorkweekConfigsResponse::is_workweek_configs_Valid() const{
    return m_workweek_configs_isValid;
}

bool OAIListWorkweekConfigsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cursor_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_errors.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_workweek_configs.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListWorkweekConfigsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
