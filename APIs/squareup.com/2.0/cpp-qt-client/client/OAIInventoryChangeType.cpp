/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInventoryChangeType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInventoryChangeType::OAIInventoryChangeType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInventoryChangeType::OAIInventoryChangeType() {
    this->initializeModel();
}

OAIInventoryChangeType::~OAIInventoryChangeType() {}

void OAIInventoryChangeType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIInventoryChangeType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIInventoryChangeType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("PHYSICAL_COUNT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIInventoryChangeType::PHYSICAL_COUNT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ADJUSTMENT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIInventoryChangeType::ADJUSTMENT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TRANSFER", Qt::CaseInsensitive) == 0) {
        m_value = eOAIInventoryChangeType::TRANSFER;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIInventoryChangeType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIInventoryChangeType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIInventoryChangeType::PHYSICAL_COUNT:
            val = "PHYSICAL_COUNT";
            break;
        case eOAIInventoryChangeType::ADJUSTMENT:
            val = "ADJUSTMENT";
            break;
        case eOAIInventoryChangeType::TRANSFER:
            val = "TRANSFER";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIInventoryChangeType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIInventoryChangeType::eOAIInventoryChangeType OAIInventoryChangeType::getValue() const {
    return m_value;
}

void OAIInventoryChangeType::setValue(const OAIInventoryChangeType::eOAIInventoryChangeType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIInventoryChangeType::isSet() const {
    
    return m_value_isSet;
}

bool OAIInventoryChangeType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
