/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICashDrawerEventType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICashDrawerEventType::OAICashDrawerEventType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICashDrawerEventType::OAICashDrawerEventType() {
    this->initializeModel();
}

OAICashDrawerEventType::~OAICashDrawerEventType() {}

void OAICashDrawerEventType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAICashDrawerEventType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAICashDrawerEventType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("NO_SALE", Qt::CaseInsensitive) == 0) {
        m_value = eOAICashDrawerEventType::NO_SALE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CASH_TENDER_PAYMENT", Qt::CaseInsensitive) == 0) {
        m_value = eOAICashDrawerEventType::CASH_TENDER_PAYMENT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("OTHER_TENDER_PAYMENT", Qt::CaseInsensitive) == 0) {
        m_value = eOAICashDrawerEventType::OTHER_TENDER_PAYMENT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CASH_TENDER_CANCELLED_PAYMENT", Qt::CaseInsensitive) == 0) {
        m_value = eOAICashDrawerEventType::CASH_TENDER_CANCELLED_PAYMENT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("OTHER_TENDER_CANCELLED_PAYMENT", Qt::CaseInsensitive) == 0) {
        m_value = eOAICashDrawerEventType::OTHER_TENDER_CANCELLED_PAYMENT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CASH_TENDER_REFUND", Qt::CaseInsensitive) == 0) {
        m_value = eOAICashDrawerEventType::CASH_TENDER_REFUND;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("OTHER_TENDER_REFUND", Qt::CaseInsensitive) == 0) {
        m_value = eOAICashDrawerEventType::OTHER_TENDER_REFUND;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PAID_IN", Qt::CaseInsensitive) == 0) {
        m_value = eOAICashDrawerEventType::PAID_IN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PAID_OUT", Qt::CaseInsensitive) == 0) {
        m_value = eOAICashDrawerEventType::PAID_OUT;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAICashDrawerEventType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAICashDrawerEventType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAICashDrawerEventType::NO_SALE:
            val = "NO_SALE";
            break;
        case eOAICashDrawerEventType::CASH_TENDER_PAYMENT:
            val = "CASH_TENDER_PAYMENT";
            break;
        case eOAICashDrawerEventType::OTHER_TENDER_PAYMENT:
            val = "OTHER_TENDER_PAYMENT";
            break;
        case eOAICashDrawerEventType::CASH_TENDER_CANCELLED_PAYMENT:
            val = "CASH_TENDER_CANCELLED_PAYMENT";
            break;
        case eOAICashDrawerEventType::OTHER_TENDER_CANCELLED_PAYMENT:
            val = "OTHER_TENDER_CANCELLED_PAYMENT";
            break;
        case eOAICashDrawerEventType::CASH_TENDER_REFUND:
            val = "CASH_TENDER_REFUND";
            break;
        case eOAICashDrawerEventType::OTHER_TENDER_REFUND:
            val = "OTHER_TENDER_REFUND";
            break;
        case eOAICashDrawerEventType::PAID_IN:
            val = "PAID_IN";
            break;
        case eOAICashDrawerEventType::PAID_OUT:
            val = "PAID_OUT";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAICashDrawerEventType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAICashDrawerEventType::eOAICashDrawerEventType OAICashDrawerEventType::getValue() const {
    return m_value;
}

void OAICashDrawerEventType::setValue(const OAICashDrawerEventType::eOAICashDrawerEventType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAICashDrawerEventType::isSet() const {
    
    return m_value_isSet;
}

bool OAICashDrawerEventType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
