/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILoyaltyEvent.h
 *
 * Provides information about a loyalty event.  For more information, see [Loyalty events](https://developer.squareup.com/docs/loyalty-api/overview/#loyalty-events).
 */

#ifndef OAILoyaltyEvent_H
#define OAILoyaltyEvent_H

#include <QJsonObject>

#include "OAILoyaltyEventAccumulatePoints.h"
#include "OAILoyaltyEventAdjustPoints.h"
#include "OAILoyaltyEventCreateReward.h"
#include "OAILoyaltyEventDeleteReward.h"
#include "OAILoyaltyEventExpirePoints.h"
#include "OAILoyaltyEventOther.h"
#include "OAILoyaltyEventRedeemReward.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILoyaltyEventAccumulatePoints;
class OAILoyaltyEventAdjustPoints;
class OAILoyaltyEventCreateReward;
class OAILoyaltyEventDeleteReward;
class OAILoyaltyEventExpirePoints;
class OAILoyaltyEventOther;
class OAILoyaltyEventRedeemReward;

class OAILoyaltyEvent : public OAIObject {
public:
    OAILoyaltyEvent();
    OAILoyaltyEvent(QString json);
    ~OAILoyaltyEvent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAILoyaltyEventAccumulatePoints getAccumulatePoints() const;
    void setAccumulatePoints(const OAILoyaltyEventAccumulatePoints &accumulate_points);
    bool is_accumulate_points_Set() const;
    bool is_accumulate_points_Valid() const;

    OAILoyaltyEventAdjustPoints getAdjustPoints() const;
    void setAdjustPoints(const OAILoyaltyEventAdjustPoints &adjust_points);
    bool is_adjust_points_Set() const;
    bool is_adjust_points_Valid() const;

    OAILoyaltyEventCreateReward getCreateReward() const;
    void setCreateReward(const OAILoyaltyEventCreateReward &create_reward);
    bool is_create_reward_Set() const;
    bool is_create_reward_Valid() const;

    QString getCreatedAt() const;
    void setCreatedAt(const QString &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    OAILoyaltyEventDeleteReward getDeleteReward() const;
    void setDeleteReward(const OAILoyaltyEventDeleteReward &delete_reward);
    bool is_delete_reward_Set() const;
    bool is_delete_reward_Valid() const;

    OAILoyaltyEventExpirePoints getExpirePoints() const;
    void setExpirePoints(const OAILoyaltyEventExpirePoints &expire_points);
    bool is_expire_points_Set() const;
    bool is_expire_points_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getLocationId() const;
    void setLocationId(const QString &location_id);
    bool is_location_id_Set() const;
    bool is_location_id_Valid() const;

    QString getLoyaltyAccountId() const;
    void setLoyaltyAccountId(const QString &loyalty_account_id);
    bool is_loyalty_account_id_Set() const;
    bool is_loyalty_account_id_Valid() const;

    OAILoyaltyEventOther getOtherEvent() const;
    void setOtherEvent(const OAILoyaltyEventOther &other_event);
    bool is_other_event_Set() const;
    bool is_other_event_Valid() const;

    OAILoyaltyEventRedeemReward getRedeemReward() const;
    void setRedeemReward(const OAILoyaltyEventRedeemReward &redeem_reward);
    bool is_redeem_reward_Set() const;
    bool is_redeem_reward_Valid() const;

    QString getSource() const;
    void setSource(const QString &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAILoyaltyEventAccumulatePoints m_accumulate_points;
    bool m_accumulate_points_isSet;
    bool m_accumulate_points_isValid;

    OAILoyaltyEventAdjustPoints m_adjust_points;
    bool m_adjust_points_isSet;
    bool m_adjust_points_isValid;

    OAILoyaltyEventCreateReward m_create_reward;
    bool m_create_reward_isSet;
    bool m_create_reward_isValid;

    QString m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    OAILoyaltyEventDeleteReward m_delete_reward;
    bool m_delete_reward_isSet;
    bool m_delete_reward_isValid;

    OAILoyaltyEventExpirePoints m_expire_points;
    bool m_expire_points_isSet;
    bool m_expire_points_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_location_id;
    bool m_location_id_isSet;
    bool m_location_id_isValid;

    QString m_loyalty_account_id;
    bool m_loyalty_account_id_isSet;
    bool m_loyalty_account_id_isValid;

    OAILoyaltyEventOther m_other_event;
    bool m_other_event_isSet;
    bool m_other_event_isValid;

    OAILoyaltyEventRedeemReward m_redeem_reward;
    bool m_redeem_reward_isSet;
    bool m_redeem_reward_isValid;

    QString m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILoyaltyEvent)

#endif // OAILoyaltyEvent_H
