/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICatalogStockConversion.h
 *
 * Represents the rule of conversion between a stockable [CatalogItemVariation](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogItemVariation) and a non-stockable sell-by or receive-by &#x60;CatalogItemVariation&#x60; that share the same underlying stock.
 */

#ifndef OAICatalogStockConversion_H
#define OAICatalogStockConversion_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICatalogStockConversion : public OAIObject {
public:
    OAICatalogStockConversion();
    OAICatalogStockConversion(QString json);
    ~OAICatalogStockConversion() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getNonstockableQuantity() const;
    void setNonstockableQuantity(const QString &nonstockable_quantity);
    bool is_nonstockable_quantity_Set() const;
    bool is_nonstockable_quantity_Valid() const;

    QString getStockableItemVariationId() const;
    void setStockableItemVariationId(const QString &stockable_item_variation_id);
    bool is_stockable_item_variation_id_Set() const;
    bool is_stockable_item_variation_id_Valid() const;

    QString getStockableQuantity() const;
    void setStockableQuantity(const QString &stockable_quantity);
    bool is_stockable_quantity_Set() const;
    bool is_stockable_quantity_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_nonstockable_quantity;
    bool m_nonstockable_quantity_isSet;
    bool m_nonstockable_quantity_isValid;

    QString m_stockable_item_variation_id;
    bool m_stockable_item_variation_id_isSet;
    bool m_stockable_item_variation_id_isValid;

    QString m_stockable_quantity;
    bool m_stockable_quantity_isSet;
    bool m_stockable_quantity_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICatalogStockConversion)

#endif // OAICatalogStockConversion_H
