/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRiskEvaluationRiskLevel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRiskEvaluationRiskLevel::OAIRiskEvaluationRiskLevel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRiskEvaluationRiskLevel::OAIRiskEvaluationRiskLevel() {
    this->initializeModel();
}

OAIRiskEvaluationRiskLevel::~OAIRiskEvaluationRiskLevel() {}

void OAIRiskEvaluationRiskLevel::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIRiskEvaluationRiskLevel::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIRiskEvaluationRiskLevel::fromJson(QString jsonString) {
    
    if ( jsonString.compare("PENDING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRiskEvaluationRiskLevel::PENDING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NORMAL", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRiskEvaluationRiskLevel::NORMAL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MODERATE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRiskEvaluationRiskLevel::MODERATE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("HIGH", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRiskEvaluationRiskLevel::HIGH;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIRiskEvaluationRiskLevel::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIRiskEvaluationRiskLevel::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIRiskEvaluationRiskLevel::PENDING:
            val = "PENDING";
            break;
        case eOAIRiskEvaluationRiskLevel::NORMAL:
            val = "NORMAL";
            break;
        case eOAIRiskEvaluationRiskLevel::MODERATE:
            val = "MODERATE";
            break;
        case eOAIRiskEvaluationRiskLevel::HIGH:
            val = "HIGH";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIRiskEvaluationRiskLevel::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIRiskEvaluationRiskLevel::eOAIRiskEvaluationRiskLevel OAIRiskEvaluationRiskLevel::getValue() const {
    return m_value;
}

void OAIRiskEvaluationRiskLevel::setValue(const OAIRiskEvaluationRiskLevel::eOAIRiskEvaluationRiskLevel& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIRiskEvaluationRiskLevel::isSet() const {
    
    return m_value_isSet;
}

bool OAIRiskEvaluationRiskLevel::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
