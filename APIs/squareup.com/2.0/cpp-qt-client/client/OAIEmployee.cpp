/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEmployee.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEmployee::OAIEmployee(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEmployee::OAIEmployee() {
    this->initializeModel();
}

OAIEmployee::~OAIEmployee() {}

void OAIEmployee::initializeModel() {

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_is_owner_isSet = false;
    m_is_owner_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_location_ids_isSet = false;
    m_location_ids_isValid = false;

    m_phone_number_isSet = false;
    m_phone_number_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_updated_at_isSet = false;
    m_updated_at_isValid = false;
}

void OAIEmployee::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEmployee::fromJsonObject(QJsonObject json) {

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("first_name")]);
    m_first_name_isSet = !json[QString("first_name")].isNull() && m_first_name_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_is_owner_isValid = ::OpenAPI::fromJsonValue(m_is_owner, json[QString("is_owner")]);
    m_is_owner_isSet = !json[QString("is_owner")].isNull() && m_is_owner_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("last_name")]);
    m_last_name_isSet = !json[QString("last_name")].isNull() && m_last_name_isValid;

    m_location_ids_isValid = ::OpenAPI::fromJsonValue(m_location_ids, json[QString("location_ids")]);
    m_location_ids_isSet = !json[QString("location_ids")].isNull() && m_location_ids_isValid;

    m_phone_number_isValid = ::OpenAPI::fromJsonValue(m_phone_number, json[QString("phone_number")]);
    m_phone_number_isSet = !json[QString("phone_number")].isNull() && m_phone_number_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_updated_at_isValid = ::OpenAPI::fromJsonValue(m_updated_at, json[QString("updated_at")]);
    m_updated_at_isSet = !json[QString("updated_at")].isNull() && m_updated_at_isValid;
}

QString OAIEmployee::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEmployee::asJsonObject() const {
    QJsonObject obj;
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_first_name_isSet) {
        obj.insert(QString("first_name"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_is_owner_isSet) {
        obj.insert(QString("is_owner"), ::OpenAPI::toJsonValue(m_is_owner));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("last_name"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_location_ids.size() > 0) {
        obj.insert(QString("location_ids"), ::OpenAPI::toJsonValue(m_location_ids));
    }
    if (m_phone_number_isSet) {
        obj.insert(QString("phone_number"), ::OpenAPI::toJsonValue(m_phone_number));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_updated_at_isSet) {
        obj.insert(QString("updated_at"), ::OpenAPI::toJsonValue(m_updated_at));
    }
    return obj;
}

QString OAIEmployee::getCreatedAt() const {
    return m_created_at;
}
void OAIEmployee::setCreatedAt(const QString &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIEmployee::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIEmployee::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAIEmployee::getEmail() const {
    return m_email;
}
void OAIEmployee::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIEmployee::is_email_Set() const{
    return m_email_isSet;
}

bool OAIEmployee::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIEmployee::getFirstName() const {
    return m_first_name;
}
void OAIEmployee::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAIEmployee::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAIEmployee::is_first_name_Valid() const{
    return m_first_name_isValid;
}

QString OAIEmployee::getId() const {
    return m_id;
}
void OAIEmployee::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIEmployee::is_id_Set() const{
    return m_id_isSet;
}

bool OAIEmployee::is_id_Valid() const{
    return m_id_isValid;
}

bool OAIEmployee::isIsOwner() const {
    return m_is_owner;
}
void OAIEmployee::setIsOwner(const bool &is_owner) {
    m_is_owner = is_owner;
    m_is_owner_isSet = true;
}

bool OAIEmployee::is_is_owner_Set() const{
    return m_is_owner_isSet;
}

bool OAIEmployee::is_is_owner_Valid() const{
    return m_is_owner_isValid;
}

QString OAIEmployee::getLastName() const {
    return m_last_name;
}
void OAIEmployee::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAIEmployee::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAIEmployee::is_last_name_Valid() const{
    return m_last_name_isValid;
}

QList<QString> OAIEmployee::getLocationIds() const {
    return m_location_ids;
}
void OAIEmployee::setLocationIds(const QList<QString> &location_ids) {
    m_location_ids = location_ids;
    m_location_ids_isSet = true;
}

bool OAIEmployee::is_location_ids_Set() const{
    return m_location_ids_isSet;
}

bool OAIEmployee::is_location_ids_Valid() const{
    return m_location_ids_isValid;
}

QString OAIEmployee::getPhoneNumber() const {
    return m_phone_number;
}
void OAIEmployee::setPhoneNumber(const QString &phone_number) {
    m_phone_number = phone_number;
    m_phone_number_isSet = true;
}

bool OAIEmployee::is_phone_number_Set() const{
    return m_phone_number_isSet;
}

bool OAIEmployee::is_phone_number_Valid() const{
    return m_phone_number_isValid;
}

QString OAIEmployee::getStatus() const {
    return m_status;
}
void OAIEmployee::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIEmployee::is_status_Set() const{
    return m_status_isSet;
}

bool OAIEmployee::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIEmployee::getUpdatedAt() const {
    return m_updated_at;
}
void OAIEmployee::setUpdatedAt(const QString &updated_at) {
    m_updated_at = updated_at;
    m_updated_at_isSet = true;
}

bool OAIEmployee::is_updated_at_Set() const{
    return m_updated_at_isSet;
}

bool OAIEmployee::is_updated_at_Valid() const{
    return m_updated_at_isValid;
}

bool OAIEmployee::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_owner_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_location_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_at_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEmployee::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
