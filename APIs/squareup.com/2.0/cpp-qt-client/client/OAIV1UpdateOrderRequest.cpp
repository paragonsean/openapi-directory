/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIV1UpdateOrderRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIV1UpdateOrderRequest::OAIV1UpdateOrderRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIV1UpdateOrderRequest::OAIV1UpdateOrderRequest() {
    this->initializeModel();
}

OAIV1UpdateOrderRequest::~OAIV1UpdateOrderRequest() {}

void OAIV1UpdateOrderRequest::initializeModel() {

    m_action_isSet = false;
    m_action_isValid = false;

    m_canceled_note_isSet = false;
    m_canceled_note_isValid = false;

    m_completed_note_isSet = false;
    m_completed_note_isValid = false;

    m_refunded_note_isSet = false;
    m_refunded_note_isValid = false;

    m_shipped_tracking_number_isSet = false;
    m_shipped_tracking_number_isValid = false;
}

void OAIV1UpdateOrderRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIV1UpdateOrderRequest::fromJsonObject(QJsonObject json) {

    m_action_isValid = ::OpenAPI::fromJsonValue(m_action, json[QString("action")]);
    m_action_isSet = !json[QString("action")].isNull() && m_action_isValid;

    m_canceled_note_isValid = ::OpenAPI::fromJsonValue(m_canceled_note, json[QString("canceled_note")]);
    m_canceled_note_isSet = !json[QString("canceled_note")].isNull() && m_canceled_note_isValid;

    m_completed_note_isValid = ::OpenAPI::fromJsonValue(m_completed_note, json[QString("completed_note")]);
    m_completed_note_isSet = !json[QString("completed_note")].isNull() && m_completed_note_isValid;

    m_refunded_note_isValid = ::OpenAPI::fromJsonValue(m_refunded_note, json[QString("refunded_note")]);
    m_refunded_note_isSet = !json[QString("refunded_note")].isNull() && m_refunded_note_isValid;

    m_shipped_tracking_number_isValid = ::OpenAPI::fromJsonValue(m_shipped_tracking_number, json[QString("shipped_tracking_number")]);
    m_shipped_tracking_number_isSet = !json[QString("shipped_tracking_number")].isNull() && m_shipped_tracking_number_isValid;
}

QString OAIV1UpdateOrderRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIV1UpdateOrderRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_action_isSet) {
        obj.insert(QString("action"), ::OpenAPI::toJsonValue(m_action));
    }
    if (m_canceled_note_isSet) {
        obj.insert(QString("canceled_note"), ::OpenAPI::toJsonValue(m_canceled_note));
    }
    if (m_completed_note_isSet) {
        obj.insert(QString("completed_note"), ::OpenAPI::toJsonValue(m_completed_note));
    }
    if (m_refunded_note_isSet) {
        obj.insert(QString("refunded_note"), ::OpenAPI::toJsonValue(m_refunded_note));
    }
    if (m_shipped_tracking_number_isSet) {
        obj.insert(QString("shipped_tracking_number"), ::OpenAPI::toJsonValue(m_shipped_tracking_number));
    }
    return obj;
}

QString OAIV1UpdateOrderRequest::getAction() const {
    return m_action;
}
void OAIV1UpdateOrderRequest::setAction(const QString &action) {
    m_action = action;
    m_action_isSet = true;
}

bool OAIV1UpdateOrderRequest::is_action_Set() const{
    return m_action_isSet;
}

bool OAIV1UpdateOrderRequest::is_action_Valid() const{
    return m_action_isValid;
}

QString OAIV1UpdateOrderRequest::getCanceledNote() const {
    return m_canceled_note;
}
void OAIV1UpdateOrderRequest::setCanceledNote(const QString &canceled_note) {
    m_canceled_note = canceled_note;
    m_canceled_note_isSet = true;
}

bool OAIV1UpdateOrderRequest::is_canceled_note_Set() const{
    return m_canceled_note_isSet;
}

bool OAIV1UpdateOrderRequest::is_canceled_note_Valid() const{
    return m_canceled_note_isValid;
}

QString OAIV1UpdateOrderRequest::getCompletedNote() const {
    return m_completed_note;
}
void OAIV1UpdateOrderRequest::setCompletedNote(const QString &completed_note) {
    m_completed_note = completed_note;
    m_completed_note_isSet = true;
}

bool OAIV1UpdateOrderRequest::is_completed_note_Set() const{
    return m_completed_note_isSet;
}

bool OAIV1UpdateOrderRequest::is_completed_note_Valid() const{
    return m_completed_note_isValid;
}

QString OAIV1UpdateOrderRequest::getRefundedNote() const {
    return m_refunded_note;
}
void OAIV1UpdateOrderRequest::setRefundedNote(const QString &refunded_note) {
    m_refunded_note = refunded_note;
    m_refunded_note_isSet = true;
}

bool OAIV1UpdateOrderRequest::is_refunded_note_Set() const{
    return m_refunded_note_isSet;
}

bool OAIV1UpdateOrderRequest::is_refunded_note_Valid() const{
    return m_refunded_note_isValid;
}

QString OAIV1UpdateOrderRequest::getShippedTrackingNumber() const {
    return m_shipped_tracking_number;
}
void OAIV1UpdateOrderRequest::setShippedTrackingNumber(const QString &shipped_tracking_number) {
    m_shipped_tracking_number = shipped_tracking_number;
    m_shipped_tracking_number_isSet = true;
}

bool OAIV1UpdateOrderRequest::is_shipped_tracking_number_Set() const{
    return m_shipped_tracking_number_isSet;
}

bool OAIV1UpdateOrderRequest::is_shipped_tracking_number_Valid() const{
    return m_shipped_tracking_number_isValid;
}

bool OAIV1UpdateOrderRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_action_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_canceled_note_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_completed_note_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_refunded_note_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipped_tracking_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIV1UpdateOrderRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_action_isValid && true;
}

} // namespace OpenAPI
