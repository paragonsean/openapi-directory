/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICardSquareProduct.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICardSquareProduct::OAICardSquareProduct(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICardSquareProduct::OAICardSquareProduct() {
    this->initializeModel();
}

OAICardSquareProduct::~OAICardSquareProduct() {}

void OAICardSquareProduct::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAICardSquareProduct::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAICardSquareProduct::fromJson(QString jsonString) {
    
    if ( jsonString.compare("UNKNOWN_SQUARE_PRODUCT", Qt::CaseInsensitive) == 0) {
        m_value = eOAICardSquareProduct::UNKNOWN_SQUARE_PRODUCT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CONNECT_API", Qt::CaseInsensitive) == 0) {
        m_value = eOAICardSquareProduct::CONNECT_API;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DASHBOARD", Qt::CaseInsensitive) == 0) {
        m_value = eOAICardSquareProduct::DASHBOARD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("REGISTER_CLIENT", Qt::CaseInsensitive) == 0) {
        m_value = eOAICardSquareProduct::REGISTER_CLIENT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BUYER_DASHBOARD", Qt::CaseInsensitive) == 0) {
        m_value = eOAICardSquareProduct::BUYER_DASHBOARD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("WEB", Qt::CaseInsensitive) == 0) {
        m_value = eOAICardSquareProduct::WEB;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("INVOICES", Qt::CaseInsensitive) == 0) {
        m_value = eOAICardSquareProduct::INVOICES;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GIFT_CARD", Qt::CaseInsensitive) == 0) {
        m_value = eOAICardSquareProduct::GIFT_CARD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("VIRTUAL_TERMINAL", Qt::CaseInsensitive) == 0) {
        m_value = eOAICardSquareProduct::VIRTUAL_TERMINAL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("READER_SDK", Qt::CaseInsensitive) == 0) {
        m_value = eOAICardSquareProduct::READER_SDK;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAICardSquareProduct::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAICardSquareProduct::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAICardSquareProduct::UNKNOWN_SQUARE_PRODUCT:
            val = "UNKNOWN_SQUARE_PRODUCT";
            break;
        case eOAICardSquareProduct::CONNECT_API:
            val = "CONNECT_API";
            break;
        case eOAICardSquareProduct::DASHBOARD:
            val = "DASHBOARD";
            break;
        case eOAICardSquareProduct::REGISTER_CLIENT:
            val = "REGISTER_CLIENT";
            break;
        case eOAICardSquareProduct::BUYER_DASHBOARD:
            val = "BUYER_DASHBOARD";
            break;
        case eOAICardSquareProduct::WEB:
            val = "WEB";
            break;
        case eOAICardSquareProduct::INVOICES:
            val = "INVOICES";
            break;
        case eOAICardSquareProduct::GIFT_CARD:
            val = "GIFT_CARD";
            break;
        case eOAICardSquareProduct::VIRTUAL_TERMINAL:
            val = "VIRTUAL_TERMINAL";
            break;
        case eOAICardSquareProduct::READER_SDK:
            val = "READER_SDK";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAICardSquareProduct::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAICardSquareProduct::eOAICardSquareProduct OAICardSquareProduct::getValue() const {
    return m_value;
}

void OAICardSquareProduct::setValue(const OAICardSquareProduct::eOAICardSquareProduct& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAICardSquareProduct::isSet() const {
    
    return m_value_isSet;
}

bool OAICardSquareProduct::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
