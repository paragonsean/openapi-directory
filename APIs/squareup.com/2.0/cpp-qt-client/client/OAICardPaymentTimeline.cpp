/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICardPaymentTimeline.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICardPaymentTimeline::OAICardPaymentTimeline(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICardPaymentTimeline::OAICardPaymentTimeline() {
    this->initializeModel();
}

OAICardPaymentTimeline::~OAICardPaymentTimeline() {}

void OAICardPaymentTimeline::initializeModel() {

    m_authorized_at_isSet = false;
    m_authorized_at_isValid = false;

    m_captured_at_isSet = false;
    m_captured_at_isValid = false;

    m_voided_at_isSet = false;
    m_voided_at_isValid = false;
}

void OAICardPaymentTimeline::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICardPaymentTimeline::fromJsonObject(QJsonObject json) {

    m_authorized_at_isValid = ::OpenAPI::fromJsonValue(m_authorized_at, json[QString("authorized_at")]);
    m_authorized_at_isSet = !json[QString("authorized_at")].isNull() && m_authorized_at_isValid;

    m_captured_at_isValid = ::OpenAPI::fromJsonValue(m_captured_at, json[QString("captured_at")]);
    m_captured_at_isSet = !json[QString("captured_at")].isNull() && m_captured_at_isValid;

    m_voided_at_isValid = ::OpenAPI::fromJsonValue(m_voided_at, json[QString("voided_at")]);
    m_voided_at_isSet = !json[QString("voided_at")].isNull() && m_voided_at_isValid;
}

QString OAICardPaymentTimeline::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICardPaymentTimeline::asJsonObject() const {
    QJsonObject obj;
    if (m_authorized_at_isSet) {
        obj.insert(QString("authorized_at"), ::OpenAPI::toJsonValue(m_authorized_at));
    }
    if (m_captured_at_isSet) {
        obj.insert(QString("captured_at"), ::OpenAPI::toJsonValue(m_captured_at));
    }
    if (m_voided_at_isSet) {
        obj.insert(QString("voided_at"), ::OpenAPI::toJsonValue(m_voided_at));
    }
    return obj;
}

QString OAICardPaymentTimeline::getAuthorizedAt() const {
    return m_authorized_at;
}
void OAICardPaymentTimeline::setAuthorizedAt(const QString &authorized_at) {
    m_authorized_at = authorized_at;
    m_authorized_at_isSet = true;
}

bool OAICardPaymentTimeline::is_authorized_at_Set() const{
    return m_authorized_at_isSet;
}

bool OAICardPaymentTimeline::is_authorized_at_Valid() const{
    return m_authorized_at_isValid;
}

QString OAICardPaymentTimeline::getCapturedAt() const {
    return m_captured_at;
}
void OAICardPaymentTimeline::setCapturedAt(const QString &captured_at) {
    m_captured_at = captured_at;
    m_captured_at_isSet = true;
}

bool OAICardPaymentTimeline::is_captured_at_Set() const{
    return m_captured_at_isSet;
}

bool OAICardPaymentTimeline::is_captured_at_Valid() const{
    return m_captured_at_isValid;
}

QString OAICardPaymentTimeline::getVoidedAt() const {
    return m_voided_at;
}
void OAICardPaymentTimeline::setVoidedAt(const QString &voided_at) {
    m_voided_at = voided_at;
    m_voided_at_isSet = true;
}

bool OAICardPaymentTimeline::is_voided_at_Set() const{
    return m_voided_at_isSet;
}

bool OAICardPaymentTimeline::is_voided_at_Valid() const{
    return m_voided_at_isValid;
}

bool OAICardPaymentTimeline::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_authorized_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_captured_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_voided_at_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICardPaymentTimeline::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
