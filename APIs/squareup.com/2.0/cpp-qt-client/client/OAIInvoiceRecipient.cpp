/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInvoiceRecipient.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInvoiceRecipient::OAIInvoiceRecipient(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInvoiceRecipient::OAIInvoiceRecipient() {
    this->initializeModel();
}

OAIInvoiceRecipient::~OAIInvoiceRecipient() {}

void OAIInvoiceRecipient::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_company_name_isSet = false;
    m_company_name_isValid = false;

    m_customer_id_isSet = false;
    m_customer_id_isValid = false;

    m_email_address_isSet = false;
    m_email_address_isValid = false;

    m_family_name_isSet = false;
    m_family_name_isValid = false;

    m_given_name_isSet = false;
    m_given_name_isValid = false;

    m_phone_number_isSet = false;
    m_phone_number_isValid = false;
}

void OAIInvoiceRecipient::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInvoiceRecipient::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_company_name_isValid = ::OpenAPI::fromJsonValue(m_company_name, json[QString("company_name")]);
    m_company_name_isSet = !json[QString("company_name")].isNull() && m_company_name_isValid;

    m_customer_id_isValid = ::OpenAPI::fromJsonValue(m_customer_id, json[QString("customer_id")]);
    m_customer_id_isSet = !json[QString("customer_id")].isNull() && m_customer_id_isValid;

    m_email_address_isValid = ::OpenAPI::fromJsonValue(m_email_address, json[QString("email_address")]);
    m_email_address_isSet = !json[QString("email_address")].isNull() && m_email_address_isValid;

    m_family_name_isValid = ::OpenAPI::fromJsonValue(m_family_name, json[QString("family_name")]);
    m_family_name_isSet = !json[QString("family_name")].isNull() && m_family_name_isValid;

    m_given_name_isValid = ::OpenAPI::fromJsonValue(m_given_name, json[QString("given_name")]);
    m_given_name_isSet = !json[QString("given_name")].isNull() && m_given_name_isValid;

    m_phone_number_isValid = ::OpenAPI::fromJsonValue(m_phone_number, json[QString("phone_number")]);
    m_phone_number_isSet = !json[QString("phone_number")].isNull() && m_phone_number_isValid;
}

QString OAIInvoiceRecipient::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInvoiceRecipient::asJsonObject() const {
    QJsonObject obj;
    if (m_address.isSet()) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_company_name_isSet) {
        obj.insert(QString("company_name"), ::OpenAPI::toJsonValue(m_company_name));
    }
    if (m_customer_id_isSet) {
        obj.insert(QString("customer_id"), ::OpenAPI::toJsonValue(m_customer_id));
    }
    if (m_email_address_isSet) {
        obj.insert(QString("email_address"), ::OpenAPI::toJsonValue(m_email_address));
    }
    if (m_family_name_isSet) {
        obj.insert(QString("family_name"), ::OpenAPI::toJsonValue(m_family_name));
    }
    if (m_given_name_isSet) {
        obj.insert(QString("given_name"), ::OpenAPI::toJsonValue(m_given_name));
    }
    if (m_phone_number_isSet) {
        obj.insert(QString("phone_number"), ::OpenAPI::toJsonValue(m_phone_number));
    }
    return obj;
}

OAIAddress OAIInvoiceRecipient::getAddress() const {
    return m_address;
}
void OAIInvoiceRecipient::setAddress(const OAIAddress &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAIInvoiceRecipient::is_address_Set() const{
    return m_address_isSet;
}

bool OAIInvoiceRecipient::is_address_Valid() const{
    return m_address_isValid;
}

QString OAIInvoiceRecipient::getCompanyName() const {
    return m_company_name;
}
void OAIInvoiceRecipient::setCompanyName(const QString &company_name) {
    m_company_name = company_name;
    m_company_name_isSet = true;
}

bool OAIInvoiceRecipient::is_company_name_Set() const{
    return m_company_name_isSet;
}

bool OAIInvoiceRecipient::is_company_name_Valid() const{
    return m_company_name_isValid;
}

QString OAIInvoiceRecipient::getCustomerId() const {
    return m_customer_id;
}
void OAIInvoiceRecipient::setCustomerId(const QString &customer_id) {
    m_customer_id = customer_id;
    m_customer_id_isSet = true;
}

bool OAIInvoiceRecipient::is_customer_id_Set() const{
    return m_customer_id_isSet;
}

bool OAIInvoiceRecipient::is_customer_id_Valid() const{
    return m_customer_id_isValid;
}

QString OAIInvoiceRecipient::getEmailAddress() const {
    return m_email_address;
}
void OAIInvoiceRecipient::setEmailAddress(const QString &email_address) {
    m_email_address = email_address;
    m_email_address_isSet = true;
}

bool OAIInvoiceRecipient::is_email_address_Set() const{
    return m_email_address_isSet;
}

bool OAIInvoiceRecipient::is_email_address_Valid() const{
    return m_email_address_isValid;
}

QString OAIInvoiceRecipient::getFamilyName() const {
    return m_family_name;
}
void OAIInvoiceRecipient::setFamilyName(const QString &family_name) {
    m_family_name = family_name;
    m_family_name_isSet = true;
}

bool OAIInvoiceRecipient::is_family_name_Set() const{
    return m_family_name_isSet;
}

bool OAIInvoiceRecipient::is_family_name_Valid() const{
    return m_family_name_isValid;
}

QString OAIInvoiceRecipient::getGivenName() const {
    return m_given_name;
}
void OAIInvoiceRecipient::setGivenName(const QString &given_name) {
    m_given_name = given_name;
    m_given_name_isSet = true;
}

bool OAIInvoiceRecipient::is_given_name_Set() const{
    return m_given_name_isSet;
}

bool OAIInvoiceRecipient::is_given_name_Valid() const{
    return m_given_name_isValid;
}

QString OAIInvoiceRecipient::getPhoneNumber() const {
    return m_phone_number;
}
void OAIInvoiceRecipient::setPhoneNumber(const QString &phone_number) {
    m_phone_number = phone_number;
    m_phone_number_isSet = true;
}

bool OAIInvoiceRecipient::is_phone_number_Set() const{
    return m_phone_number_isSet;
}

bool OAIInvoiceRecipient::is_phone_number_Valid() const{
    return m_phone_number_isValid;
}

bool OAIInvoiceRecipient::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_family_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_given_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInvoiceRecipient::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
