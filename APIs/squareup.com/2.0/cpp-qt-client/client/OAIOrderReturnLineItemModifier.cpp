/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderReturnLineItemModifier.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderReturnLineItemModifier::OAIOrderReturnLineItemModifier(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderReturnLineItemModifier::OAIOrderReturnLineItemModifier() {
    this->initializeModel();
}

OAIOrderReturnLineItemModifier::~OAIOrderReturnLineItemModifier() {}

void OAIOrderReturnLineItemModifier::initializeModel() {

    m_base_price_money_isSet = false;
    m_base_price_money_isValid = false;

    m_catalog_object_id_isSet = false;
    m_catalog_object_id_isValid = false;

    m_catalog_version_isSet = false;
    m_catalog_version_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_source_modifier_uid_isSet = false;
    m_source_modifier_uid_isValid = false;

    m_total_price_money_isSet = false;
    m_total_price_money_isValid = false;

    m_uid_isSet = false;
    m_uid_isValid = false;
}

void OAIOrderReturnLineItemModifier::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrderReturnLineItemModifier::fromJsonObject(QJsonObject json) {

    m_base_price_money_isValid = ::OpenAPI::fromJsonValue(m_base_price_money, json[QString("base_price_money")]);
    m_base_price_money_isSet = !json[QString("base_price_money")].isNull() && m_base_price_money_isValid;

    m_catalog_object_id_isValid = ::OpenAPI::fromJsonValue(m_catalog_object_id, json[QString("catalog_object_id")]);
    m_catalog_object_id_isSet = !json[QString("catalog_object_id")].isNull() && m_catalog_object_id_isValid;

    m_catalog_version_isValid = ::OpenAPI::fromJsonValue(m_catalog_version, json[QString("catalog_version")]);
    m_catalog_version_isSet = !json[QString("catalog_version")].isNull() && m_catalog_version_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_source_modifier_uid_isValid = ::OpenAPI::fromJsonValue(m_source_modifier_uid, json[QString("source_modifier_uid")]);
    m_source_modifier_uid_isSet = !json[QString("source_modifier_uid")].isNull() && m_source_modifier_uid_isValid;

    m_total_price_money_isValid = ::OpenAPI::fromJsonValue(m_total_price_money, json[QString("total_price_money")]);
    m_total_price_money_isSet = !json[QString("total_price_money")].isNull() && m_total_price_money_isValid;

    m_uid_isValid = ::OpenAPI::fromJsonValue(m_uid, json[QString("uid")]);
    m_uid_isSet = !json[QString("uid")].isNull() && m_uid_isValid;
}

QString OAIOrderReturnLineItemModifier::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrderReturnLineItemModifier::asJsonObject() const {
    QJsonObject obj;
    if (m_base_price_money.isSet()) {
        obj.insert(QString("base_price_money"), ::OpenAPI::toJsonValue(m_base_price_money));
    }
    if (m_catalog_object_id_isSet) {
        obj.insert(QString("catalog_object_id"), ::OpenAPI::toJsonValue(m_catalog_object_id));
    }
    if (m_catalog_version_isSet) {
        obj.insert(QString("catalog_version"), ::OpenAPI::toJsonValue(m_catalog_version));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_source_modifier_uid_isSet) {
        obj.insert(QString("source_modifier_uid"), ::OpenAPI::toJsonValue(m_source_modifier_uid));
    }
    if (m_total_price_money.isSet()) {
        obj.insert(QString("total_price_money"), ::OpenAPI::toJsonValue(m_total_price_money));
    }
    if (m_uid_isSet) {
        obj.insert(QString("uid"), ::OpenAPI::toJsonValue(m_uid));
    }
    return obj;
}

OAIMoney OAIOrderReturnLineItemModifier::getBasePriceMoney() const {
    return m_base_price_money;
}
void OAIOrderReturnLineItemModifier::setBasePriceMoney(const OAIMoney &base_price_money) {
    m_base_price_money = base_price_money;
    m_base_price_money_isSet = true;
}

bool OAIOrderReturnLineItemModifier::is_base_price_money_Set() const{
    return m_base_price_money_isSet;
}

bool OAIOrderReturnLineItemModifier::is_base_price_money_Valid() const{
    return m_base_price_money_isValid;
}

QString OAIOrderReturnLineItemModifier::getCatalogObjectId() const {
    return m_catalog_object_id;
}
void OAIOrderReturnLineItemModifier::setCatalogObjectId(const QString &catalog_object_id) {
    m_catalog_object_id = catalog_object_id;
    m_catalog_object_id_isSet = true;
}

bool OAIOrderReturnLineItemModifier::is_catalog_object_id_Set() const{
    return m_catalog_object_id_isSet;
}

bool OAIOrderReturnLineItemModifier::is_catalog_object_id_Valid() const{
    return m_catalog_object_id_isValid;
}

qint64 OAIOrderReturnLineItemModifier::getCatalogVersion() const {
    return m_catalog_version;
}
void OAIOrderReturnLineItemModifier::setCatalogVersion(const qint64 &catalog_version) {
    m_catalog_version = catalog_version;
    m_catalog_version_isSet = true;
}

bool OAIOrderReturnLineItemModifier::is_catalog_version_Set() const{
    return m_catalog_version_isSet;
}

bool OAIOrderReturnLineItemModifier::is_catalog_version_Valid() const{
    return m_catalog_version_isValid;
}

QString OAIOrderReturnLineItemModifier::getName() const {
    return m_name;
}
void OAIOrderReturnLineItemModifier::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIOrderReturnLineItemModifier::is_name_Set() const{
    return m_name_isSet;
}

bool OAIOrderReturnLineItemModifier::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIOrderReturnLineItemModifier::getSourceModifierUid() const {
    return m_source_modifier_uid;
}
void OAIOrderReturnLineItemModifier::setSourceModifierUid(const QString &source_modifier_uid) {
    m_source_modifier_uid = source_modifier_uid;
    m_source_modifier_uid_isSet = true;
}

bool OAIOrderReturnLineItemModifier::is_source_modifier_uid_Set() const{
    return m_source_modifier_uid_isSet;
}

bool OAIOrderReturnLineItemModifier::is_source_modifier_uid_Valid() const{
    return m_source_modifier_uid_isValid;
}

OAIMoney OAIOrderReturnLineItemModifier::getTotalPriceMoney() const {
    return m_total_price_money;
}
void OAIOrderReturnLineItemModifier::setTotalPriceMoney(const OAIMoney &total_price_money) {
    m_total_price_money = total_price_money;
    m_total_price_money_isSet = true;
}

bool OAIOrderReturnLineItemModifier::is_total_price_money_Set() const{
    return m_total_price_money_isSet;
}

bool OAIOrderReturnLineItemModifier::is_total_price_money_Valid() const{
    return m_total_price_money_isValid;
}

QString OAIOrderReturnLineItemModifier::getUid() const {
    return m_uid;
}
void OAIOrderReturnLineItemModifier::setUid(const QString &uid) {
    m_uid = uid;
    m_uid_isSet = true;
}

bool OAIOrderReturnLineItemModifier::is_uid_Set() const{
    return m_uid_isSet;
}

bool OAIOrderReturnLineItemModifier::is_uid_Valid() const{
    return m_uid_isValid;
}

bool OAIOrderReturnLineItemModifier::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_base_price_money.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_catalog_object_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_catalog_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_modifier_uid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_price_money.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_uid_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrderReturnLineItemModifier::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
