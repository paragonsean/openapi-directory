/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISubscriptionPhase.h
 *
 * Describes a phase in a subscription plan. For more information, see [Set Up and Manage a Subscription Plan](https://developer.squareup.com/docs/subscriptions-api/setup-plan).
 */

#ifndef OAISubscriptionPhase_H
#define OAISubscriptionPhase_H

#include <QJsonObject>

#include "OAIMoney.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMoney;

class OAISubscriptionPhase : public OAIObject {
public:
    OAISubscriptionPhase();
    OAISubscriptionPhase(QString json);
    ~OAISubscriptionPhase() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCadence() const;
    void setCadence(const QString &cadence);
    bool is_cadence_Set() const;
    bool is_cadence_Valid() const;

    qint64 getOrdinal() const;
    void setOrdinal(const qint64 &ordinal);
    bool is_ordinal_Set() const;
    bool is_ordinal_Valid() const;

    qint32 getPeriods() const;
    void setPeriods(const qint32 &periods);
    bool is_periods_Set() const;
    bool is_periods_Valid() const;

    OAIMoney getRecurringPriceMoney() const;
    void setRecurringPriceMoney(const OAIMoney &recurring_price_money);
    bool is_recurring_price_money_Set() const;
    bool is_recurring_price_money_Valid() const;

    QString getUid() const;
    void setUid(const QString &uid);
    bool is_uid_Set() const;
    bool is_uid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_cadence;
    bool m_cadence_isSet;
    bool m_cadence_isValid;

    qint64 m_ordinal;
    bool m_ordinal_isSet;
    bool m_ordinal_isValid;

    qint32 m_periods;
    bool m_periods_isSet;
    bool m_periods_isValid;

    OAIMoney m_recurring_price_money;
    bool m_recurring_price_money_isSet;
    bool m_recurring_price_money_isValid;

    QString m_uid;
    bool m_uid_isSet;
    bool m_uid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISubscriptionPhase)

#endif // OAISubscriptionPhase_H
