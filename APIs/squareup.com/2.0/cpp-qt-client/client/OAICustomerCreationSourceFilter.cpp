/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustomerCreationSourceFilter.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustomerCreationSourceFilter::OAICustomerCreationSourceFilter(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustomerCreationSourceFilter::OAICustomerCreationSourceFilter() {
    this->initializeModel();
}

OAICustomerCreationSourceFilter::~OAICustomerCreationSourceFilter() {}

void OAICustomerCreationSourceFilter::initializeModel() {

    m_rule_isSet = false;
    m_rule_isValid = false;

    m_values_isSet = false;
    m_values_isValid = false;
}

void OAICustomerCreationSourceFilter::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustomerCreationSourceFilter::fromJsonObject(QJsonObject json) {

    m_rule_isValid = ::OpenAPI::fromJsonValue(m_rule, json[QString("rule")]);
    m_rule_isSet = !json[QString("rule")].isNull() && m_rule_isValid;

    m_values_isValid = ::OpenAPI::fromJsonValue(m_values, json[QString("values")]);
    m_values_isSet = !json[QString("values")].isNull() && m_values_isValid;
}

QString OAICustomerCreationSourceFilter::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustomerCreationSourceFilter::asJsonObject() const {
    QJsonObject obj;
    if (m_rule_isSet) {
        obj.insert(QString("rule"), ::OpenAPI::toJsonValue(m_rule));
    }
    if (m_values.size() > 0) {
        obj.insert(QString("values"), ::OpenAPI::toJsonValue(m_values));
    }
    return obj;
}

QString OAICustomerCreationSourceFilter::getRule() const {
    return m_rule;
}
void OAICustomerCreationSourceFilter::setRule(const QString &rule) {
    m_rule = rule;
    m_rule_isSet = true;
}

bool OAICustomerCreationSourceFilter::is_rule_Set() const{
    return m_rule_isSet;
}

bool OAICustomerCreationSourceFilter::is_rule_Valid() const{
    return m_rule_isValid;
}

QList<QString> OAICustomerCreationSourceFilter::getValues() const {
    return m_values;
}
void OAICustomerCreationSourceFilter::setValues(const QList<QString> &values) {
    m_values = values;
    m_values_isSet = true;
}

bool OAICustomerCreationSourceFilter::is_values_Set() const{
    return m_values_isSet;
}

bool OAICustomerCreationSourceFilter::is_values_Valid() const{
    return m_values_isValid;
}

bool OAICustomerCreationSourceFilter::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_rule_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_values.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustomerCreationSourceFilter::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
