/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILoyaltyProgramAccrualRule.h
 *
 * Defines an accrual rule, which is how buyers can earn points.
 */

#ifndef OAILoyaltyProgramAccrualRule_H
#define OAILoyaltyProgramAccrualRule_H

#include <QJsonObject>

#include "OAIMoney.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMoney;

class OAILoyaltyProgramAccrualRule : public OAIObject {
public:
    OAILoyaltyProgramAccrualRule();
    OAILoyaltyProgramAccrualRule(QString json);
    ~OAILoyaltyProgramAccrualRule() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccrualType() const;
    void setAccrualType(const QString &accrual_type);
    bool is_accrual_type_Set() const;
    bool is_accrual_type_Valid() const;

    QString getCatalogObjectId() const;
    void setCatalogObjectId(const QString &catalog_object_id);
    bool is_catalog_object_id_Set() const;
    bool is_catalog_object_id_Valid() const;

    QList<QString> getExcludedCategoryIds() const;
    void setExcludedCategoryIds(const QList<QString> &excluded_category_ids);
    bool is_excluded_category_ids_Set() const;
    bool is_excluded_category_ids_Valid() const;

    QList<QString> getExcludedItemVariationIds() const;
    void setExcludedItemVariationIds(const QList<QString> &excluded_item_variation_ids);
    bool is_excluded_item_variation_ids_Set() const;
    bool is_excluded_item_variation_ids_Valid() const;

    qint32 getPoints() const;
    void setPoints(const qint32 &points);
    bool is_points_Set() const;
    bool is_points_Valid() const;

    OAIMoney getSpendAmountMoney() const;
    void setSpendAmountMoney(const OAIMoney &spend_amount_money);
    bool is_spend_amount_money_Set() const;
    bool is_spend_amount_money_Valid() const;

    OAIMoney getVisitMinimumAmountMoney() const;
    void setVisitMinimumAmountMoney(const OAIMoney &visit_minimum_amount_money);
    bool is_visit_minimum_amount_money_Set() const;
    bool is_visit_minimum_amount_money_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_accrual_type;
    bool m_accrual_type_isSet;
    bool m_accrual_type_isValid;

    QString m_catalog_object_id;
    bool m_catalog_object_id_isSet;
    bool m_catalog_object_id_isValid;

    QList<QString> m_excluded_category_ids;
    bool m_excluded_category_ids_isSet;
    bool m_excluded_category_ids_isValid;

    QList<QString> m_excluded_item_variation_ids;
    bool m_excluded_item_variation_ids_isSet;
    bool m_excluded_item_variation_ids_isValid;

    qint32 m_points;
    bool m_points_isSet;
    bool m_points_isValid;

    OAIMoney m_spend_amount_money;
    bool m_spend_amount_money_isSet;
    bool m_spend_amount_money_isValid;

    OAIMoney m_visit_minimum_amount_money;
    bool m_visit_minimum_amount_money_isSet;
    bool m_visit_minimum_amount_money_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILoyaltyProgramAccrualRule)

#endif // OAILoyaltyProgramAccrualRule_H
