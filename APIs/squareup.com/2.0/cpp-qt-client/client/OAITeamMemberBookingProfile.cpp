/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITeamMemberBookingProfile.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITeamMemberBookingProfile::OAITeamMemberBookingProfile(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITeamMemberBookingProfile::OAITeamMemberBookingProfile() {
    this->initializeModel();
}

OAITeamMemberBookingProfile::~OAITeamMemberBookingProfile() {}

void OAITeamMemberBookingProfile::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_is_bookable_isSet = false;
    m_is_bookable_isValid = false;

    m_profile_image_url_isSet = false;
    m_profile_image_url_isValid = false;

    m_team_member_id_isSet = false;
    m_team_member_id_isValid = false;
}

void OAITeamMemberBookingProfile::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITeamMemberBookingProfile::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("display_name")]);
    m_display_name_isSet = !json[QString("display_name")].isNull() && m_display_name_isValid;

    m_is_bookable_isValid = ::OpenAPI::fromJsonValue(m_is_bookable, json[QString("is_bookable")]);
    m_is_bookable_isSet = !json[QString("is_bookable")].isNull() && m_is_bookable_isValid;

    m_profile_image_url_isValid = ::OpenAPI::fromJsonValue(m_profile_image_url, json[QString("profile_image_url")]);
    m_profile_image_url_isSet = !json[QString("profile_image_url")].isNull() && m_profile_image_url_isValid;

    m_team_member_id_isValid = ::OpenAPI::fromJsonValue(m_team_member_id, json[QString("team_member_id")]);
    m_team_member_id_isSet = !json[QString("team_member_id")].isNull() && m_team_member_id_isValid;
}

QString OAITeamMemberBookingProfile::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITeamMemberBookingProfile::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("display_name"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_is_bookable_isSet) {
        obj.insert(QString("is_bookable"), ::OpenAPI::toJsonValue(m_is_bookable));
    }
    if (m_profile_image_url_isSet) {
        obj.insert(QString("profile_image_url"), ::OpenAPI::toJsonValue(m_profile_image_url));
    }
    if (m_team_member_id_isSet) {
        obj.insert(QString("team_member_id"), ::OpenAPI::toJsonValue(m_team_member_id));
    }
    return obj;
}

QString OAITeamMemberBookingProfile::getDescription() const {
    return m_description;
}
void OAITeamMemberBookingProfile::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAITeamMemberBookingProfile::is_description_Set() const{
    return m_description_isSet;
}

bool OAITeamMemberBookingProfile::is_description_Valid() const{
    return m_description_isValid;
}

QString OAITeamMemberBookingProfile::getDisplayName() const {
    return m_display_name;
}
void OAITeamMemberBookingProfile::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAITeamMemberBookingProfile::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAITeamMemberBookingProfile::is_display_name_Valid() const{
    return m_display_name_isValid;
}

bool OAITeamMemberBookingProfile::isIsBookable() const {
    return m_is_bookable;
}
void OAITeamMemberBookingProfile::setIsBookable(const bool &is_bookable) {
    m_is_bookable = is_bookable;
    m_is_bookable_isSet = true;
}

bool OAITeamMemberBookingProfile::is_is_bookable_Set() const{
    return m_is_bookable_isSet;
}

bool OAITeamMemberBookingProfile::is_is_bookable_Valid() const{
    return m_is_bookable_isValid;
}

QString OAITeamMemberBookingProfile::getProfileImageUrl() const {
    return m_profile_image_url;
}
void OAITeamMemberBookingProfile::setProfileImageUrl(const QString &profile_image_url) {
    m_profile_image_url = profile_image_url;
    m_profile_image_url_isSet = true;
}

bool OAITeamMemberBookingProfile::is_profile_image_url_Set() const{
    return m_profile_image_url_isSet;
}

bool OAITeamMemberBookingProfile::is_profile_image_url_Valid() const{
    return m_profile_image_url_isValid;
}

QString OAITeamMemberBookingProfile::getTeamMemberId() const {
    return m_team_member_id;
}
void OAITeamMemberBookingProfile::setTeamMemberId(const QString &team_member_id) {
    m_team_member_id = team_member_id;
    m_team_member_id_isSet = true;
}

bool OAITeamMemberBookingProfile::is_team_member_id_Set() const{
    return m_team_member_id_isSet;
}

bool OAITeamMemberBookingProfile::is_team_member_id_Valid() const{
    return m_team_member_id_isValid;
}

bool OAITeamMemberBookingProfile::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_bookable_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile_image_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_team_member_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITeamMemberBookingProfile::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
