/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICustomAttributeFilter.h
 *
 * Supported custom attribute query expressions for calling the [SearchCatalogItems](https://developer.squareup.com/reference/square_2021-08-18/catalog-api/search-catalog-items) endpoint to search for items or item variations.
 */

#ifndef OAICustomAttributeFilter_H
#define OAICustomAttributeFilter_H

#include <QJsonObject>

#include "OAIRange.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRange;

class OAICustomAttributeFilter : public OAIObject {
public:
    OAICustomAttributeFilter();
    OAICustomAttributeFilter(QString json);
    ~OAICustomAttributeFilter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isBoolFilter() const;
    void setBoolFilter(const bool &bool_filter);
    bool is_bool_filter_Set() const;
    bool is_bool_filter_Valid() const;

    QString getCustomAttributeDefinitionId() const;
    void setCustomAttributeDefinitionId(const QString &custom_attribute_definition_id);
    bool is_custom_attribute_definition_id_Set() const;
    bool is_custom_attribute_definition_id_Valid() const;

    QString getKey() const;
    void setKey(const QString &key);
    bool is_key_Set() const;
    bool is_key_Valid() const;

    OAIRange getNumberFilter() const;
    void setNumberFilter(const OAIRange &number_filter);
    bool is_number_filter_Set() const;
    bool is_number_filter_Valid() const;

    QList<QString> getSelectionUidsFilter() const;
    void setSelectionUidsFilter(const QList<QString> &selection_uids_filter);
    bool is_selection_uids_filter_Set() const;
    bool is_selection_uids_filter_Valid() const;

    QString getStringFilter() const;
    void setStringFilter(const QString &string_filter);
    bool is_string_filter_Set() const;
    bool is_string_filter_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_bool_filter;
    bool m_bool_filter_isSet;
    bool m_bool_filter_isValid;

    QString m_custom_attribute_definition_id;
    bool m_custom_attribute_definition_id_isSet;
    bool m_custom_attribute_definition_id_isValid;

    QString m_key;
    bool m_key_isSet;
    bool m_key_isValid;

    OAIRange m_number_filter;
    bool m_number_filter_isSet;
    bool m_number_filter_isValid;

    QList<QString> m_selection_uids_filter;
    bool m_selection_uids_filter_isSet;
    bool m_selection_uids_filter_isValid;

    QString m_string_filter;
    bool m_string_filter_isSet;
    bool m_string_filter_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICustomAttributeFilter)

#endif // OAICustomAttributeFilter_H
