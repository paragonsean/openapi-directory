/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIV1ListEmployeeRolesRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIV1ListEmployeeRolesRequest::OAIV1ListEmployeeRolesRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIV1ListEmployeeRolesRequest::OAIV1ListEmployeeRolesRequest() {
    this->initializeModel();
}

OAIV1ListEmployeeRolesRequest::~OAIV1ListEmployeeRolesRequest() {}

void OAIV1ListEmployeeRolesRequest::initializeModel() {

    m_batch_token_isSet = false;
    m_batch_token_isValid = false;

    m_limit_isSet = false;
    m_limit_isValid = false;

    m_order_isSet = false;
    m_order_isValid = false;
}

void OAIV1ListEmployeeRolesRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIV1ListEmployeeRolesRequest::fromJsonObject(QJsonObject json) {

    m_batch_token_isValid = ::OpenAPI::fromJsonValue(m_batch_token, json[QString("batch_token")]);
    m_batch_token_isSet = !json[QString("batch_token")].isNull() && m_batch_token_isValid;

    m_limit_isValid = ::OpenAPI::fromJsonValue(m_limit, json[QString("limit")]);
    m_limit_isSet = !json[QString("limit")].isNull() && m_limit_isValid;

    m_order_isValid = ::OpenAPI::fromJsonValue(m_order, json[QString("order")]);
    m_order_isSet = !json[QString("order")].isNull() && m_order_isValid;
}

QString OAIV1ListEmployeeRolesRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIV1ListEmployeeRolesRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_batch_token_isSet) {
        obj.insert(QString("batch_token"), ::OpenAPI::toJsonValue(m_batch_token));
    }
    if (m_limit_isSet) {
        obj.insert(QString("limit"), ::OpenAPI::toJsonValue(m_limit));
    }
    if (m_order_isSet) {
        obj.insert(QString("order"), ::OpenAPI::toJsonValue(m_order));
    }
    return obj;
}

QString OAIV1ListEmployeeRolesRequest::getBatchToken() const {
    return m_batch_token;
}
void OAIV1ListEmployeeRolesRequest::setBatchToken(const QString &batch_token) {
    m_batch_token = batch_token;
    m_batch_token_isSet = true;
}

bool OAIV1ListEmployeeRolesRequest::is_batch_token_Set() const{
    return m_batch_token_isSet;
}

bool OAIV1ListEmployeeRolesRequest::is_batch_token_Valid() const{
    return m_batch_token_isValid;
}

qint32 OAIV1ListEmployeeRolesRequest::getLimit() const {
    return m_limit;
}
void OAIV1ListEmployeeRolesRequest::setLimit(const qint32 &limit) {
    m_limit = limit;
    m_limit_isSet = true;
}

bool OAIV1ListEmployeeRolesRequest::is_limit_Set() const{
    return m_limit_isSet;
}

bool OAIV1ListEmployeeRolesRequest::is_limit_Valid() const{
    return m_limit_isValid;
}

QString OAIV1ListEmployeeRolesRequest::getOrder() const {
    return m_order;
}
void OAIV1ListEmployeeRolesRequest::setOrder(const QString &order) {
    m_order = order;
    m_order_isSet = true;
}

bool OAIV1ListEmployeeRolesRequest::is_order_Set() const{
    return m_order_isSet;
}

bool OAIV1ListEmployeeRolesRequest::is_order_Valid() const{
    return m_order_isValid;
}

bool OAIV1ListEmployeeRolesRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_batch_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_limit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIV1ListEmployeeRolesRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
