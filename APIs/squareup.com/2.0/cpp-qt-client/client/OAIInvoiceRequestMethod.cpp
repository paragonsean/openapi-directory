/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInvoiceRequestMethod.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInvoiceRequestMethod::OAIInvoiceRequestMethod(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInvoiceRequestMethod::OAIInvoiceRequestMethod() {
    this->initializeModel();
}

OAIInvoiceRequestMethod::~OAIInvoiceRequestMethod() {}

void OAIInvoiceRequestMethod::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIInvoiceRequestMethod::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIInvoiceRequestMethod::fromJson(QString jsonString) {
    
    if ( jsonString.compare("EMAIL", Qt::CaseInsensitive) == 0) {
        m_value = eOAIInvoiceRequestMethod::EMAIL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CHARGE_CARD_ON_FILE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIInvoiceRequestMethod::CHARGE_CARD_ON_FILE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SHARE_MANUALLY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIInvoiceRequestMethod::SHARE_MANUALLY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CHARGE_BANK_ON_FILE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIInvoiceRequestMethod::CHARGE_BANK_ON_FILE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SMS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIInvoiceRequestMethod::SMS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SMS_CHARGE_CARD_ON_FILE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIInvoiceRequestMethod::SMS_CHARGE_CARD_ON_FILE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SMS_CHARGE_BANK_ON_FILE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIInvoiceRequestMethod::SMS_CHARGE_BANK_ON_FILE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIInvoiceRequestMethod::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIInvoiceRequestMethod::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIInvoiceRequestMethod::EMAIL:
            val = "EMAIL";
            break;
        case eOAIInvoiceRequestMethod::CHARGE_CARD_ON_FILE:
            val = "CHARGE_CARD_ON_FILE";
            break;
        case eOAIInvoiceRequestMethod::SHARE_MANUALLY:
            val = "SHARE_MANUALLY";
            break;
        case eOAIInvoiceRequestMethod::CHARGE_BANK_ON_FILE:
            val = "CHARGE_BANK_ON_FILE";
            break;
        case eOAIInvoiceRequestMethod::SMS:
            val = "SMS";
            break;
        case eOAIInvoiceRequestMethod::SMS_CHARGE_CARD_ON_FILE:
            val = "SMS_CHARGE_CARD_ON_FILE";
            break;
        case eOAIInvoiceRequestMethod::SMS_CHARGE_BANK_ON_FILE:
            val = "SMS_CHARGE_BANK_ON_FILE";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIInvoiceRequestMethod::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIInvoiceRequestMethod::eOAIInvoiceRequestMethod OAIInvoiceRequestMethod::getValue() const {
    return m_value;
}

void OAIInvoiceRequestMethod::setValue(const OAIInvoiceRequestMethod::eOAIInvoiceRequestMethod& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIInvoiceRequestMethod::isSet() const {
    
    return m_value_isSet;
}

bool OAIInvoiceRequestMethod::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
