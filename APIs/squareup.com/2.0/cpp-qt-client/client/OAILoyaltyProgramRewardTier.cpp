/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILoyaltyProgramRewardTier.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILoyaltyProgramRewardTier::OAILoyaltyProgramRewardTier(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILoyaltyProgramRewardTier::OAILoyaltyProgramRewardTier() {
    this->initializeModel();
}

OAILoyaltyProgramRewardTier::~OAILoyaltyProgramRewardTier() {}

void OAILoyaltyProgramRewardTier::initializeModel() {

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_definition_isSet = false;
    m_definition_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_points_isSet = false;
    m_points_isValid = false;

    m_pricing_rule_reference_isSet = false;
    m_pricing_rule_reference_isValid = false;
}

void OAILoyaltyProgramRewardTier::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILoyaltyProgramRewardTier::fromJsonObject(QJsonObject json) {

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_definition_isValid = ::OpenAPI::fromJsonValue(m_definition, json[QString("definition")]);
    m_definition_isSet = !json[QString("definition")].isNull() && m_definition_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_points_isValid = ::OpenAPI::fromJsonValue(m_points, json[QString("points")]);
    m_points_isSet = !json[QString("points")].isNull() && m_points_isValid;

    m_pricing_rule_reference_isValid = ::OpenAPI::fromJsonValue(m_pricing_rule_reference, json[QString("pricing_rule_reference")]);
    m_pricing_rule_reference_isSet = !json[QString("pricing_rule_reference")].isNull() && m_pricing_rule_reference_isValid;
}

QString OAILoyaltyProgramRewardTier::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILoyaltyProgramRewardTier::asJsonObject() const {
    QJsonObject obj;
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_definition.isSet()) {
        obj.insert(QString("definition"), ::OpenAPI::toJsonValue(m_definition));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_points_isSet) {
        obj.insert(QString("points"), ::OpenAPI::toJsonValue(m_points));
    }
    if (m_pricing_rule_reference.isSet()) {
        obj.insert(QString("pricing_rule_reference"), ::OpenAPI::toJsonValue(m_pricing_rule_reference));
    }
    return obj;
}

QString OAILoyaltyProgramRewardTier::getCreatedAt() const {
    return m_created_at;
}
void OAILoyaltyProgramRewardTier::setCreatedAt(const QString &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAILoyaltyProgramRewardTier::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAILoyaltyProgramRewardTier::is_created_at_Valid() const{
    return m_created_at_isValid;
}

OAILoyaltyProgramRewardDefinition OAILoyaltyProgramRewardTier::getDefinition() const {
    return m_definition;
}
void OAILoyaltyProgramRewardTier::setDefinition(const OAILoyaltyProgramRewardDefinition &definition) {
    m_definition = definition;
    m_definition_isSet = true;
}

bool OAILoyaltyProgramRewardTier::is_definition_Set() const{
    return m_definition_isSet;
}

bool OAILoyaltyProgramRewardTier::is_definition_Valid() const{
    return m_definition_isValid;
}

QString OAILoyaltyProgramRewardTier::getId() const {
    return m_id;
}
void OAILoyaltyProgramRewardTier::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAILoyaltyProgramRewardTier::is_id_Set() const{
    return m_id_isSet;
}

bool OAILoyaltyProgramRewardTier::is_id_Valid() const{
    return m_id_isValid;
}

QString OAILoyaltyProgramRewardTier::getName() const {
    return m_name;
}
void OAILoyaltyProgramRewardTier::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAILoyaltyProgramRewardTier::is_name_Set() const{
    return m_name_isSet;
}

bool OAILoyaltyProgramRewardTier::is_name_Valid() const{
    return m_name_isValid;
}

qint32 OAILoyaltyProgramRewardTier::getPoints() const {
    return m_points;
}
void OAILoyaltyProgramRewardTier::setPoints(const qint32 &points) {
    m_points = points;
    m_points_isSet = true;
}

bool OAILoyaltyProgramRewardTier::is_points_Set() const{
    return m_points_isSet;
}

bool OAILoyaltyProgramRewardTier::is_points_Valid() const{
    return m_points_isValid;
}

OAICatalogObjectReference OAILoyaltyProgramRewardTier::getPricingRuleReference() const {
    return m_pricing_rule_reference;
}
void OAILoyaltyProgramRewardTier::setPricingRuleReference(const OAICatalogObjectReference &pricing_rule_reference) {
    m_pricing_rule_reference = pricing_rule_reference;
    m_pricing_rule_reference_isSet = true;
}

bool OAILoyaltyProgramRewardTier::is_pricing_rule_reference_Set() const{
    return m_pricing_rule_reference_isSet;
}

bool OAILoyaltyProgramRewardTier::is_pricing_rule_reference_Valid() const{
    return m_pricing_rule_reference_isValid;
}

bool OAILoyaltyProgramRewardTier::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_definition.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_points_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pricing_rule_reference.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILoyaltyProgramRewardTier::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_created_at_isValid && m_definition_isValid && m_id_isValid && m_name_isValid && m_points_isValid && true;
}

} // namespace OpenAPI
