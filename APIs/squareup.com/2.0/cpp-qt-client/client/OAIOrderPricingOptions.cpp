/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderPricingOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderPricingOptions::OAIOrderPricingOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderPricingOptions::OAIOrderPricingOptions() {
    this->initializeModel();
}

OAIOrderPricingOptions::~OAIOrderPricingOptions() {}

void OAIOrderPricingOptions::initializeModel() {

    m_auto_apply_discounts_isSet = false;
    m_auto_apply_discounts_isValid = false;

    m_auto_apply_taxes_isSet = false;
    m_auto_apply_taxes_isValid = false;
}

void OAIOrderPricingOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrderPricingOptions::fromJsonObject(QJsonObject json) {

    m_auto_apply_discounts_isValid = ::OpenAPI::fromJsonValue(m_auto_apply_discounts, json[QString("auto_apply_discounts")]);
    m_auto_apply_discounts_isSet = !json[QString("auto_apply_discounts")].isNull() && m_auto_apply_discounts_isValid;

    m_auto_apply_taxes_isValid = ::OpenAPI::fromJsonValue(m_auto_apply_taxes, json[QString("auto_apply_taxes")]);
    m_auto_apply_taxes_isSet = !json[QString("auto_apply_taxes")].isNull() && m_auto_apply_taxes_isValid;
}

QString OAIOrderPricingOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrderPricingOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_auto_apply_discounts_isSet) {
        obj.insert(QString("auto_apply_discounts"), ::OpenAPI::toJsonValue(m_auto_apply_discounts));
    }
    if (m_auto_apply_taxes_isSet) {
        obj.insert(QString("auto_apply_taxes"), ::OpenAPI::toJsonValue(m_auto_apply_taxes));
    }
    return obj;
}

bool OAIOrderPricingOptions::isAutoApplyDiscounts() const {
    return m_auto_apply_discounts;
}
void OAIOrderPricingOptions::setAutoApplyDiscounts(const bool &auto_apply_discounts) {
    m_auto_apply_discounts = auto_apply_discounts;
    m_auto_apply_discounts_isSet = true;
}

bool OAIOrderPricingOptions::is_auto_apply_discounts_Set() const{
    return m_auto_apply_discounts_isSet;
}

bool OAIOrderPricingOptions::is_auto_apply_discounts_Valid() const{
    return m_auto_apply_discounts_isValid;
}

bool OAIOrderPricingOptions::isAutoApplyTaxes() const {
    return m_auto_apply_taxes;
}
void OAIOrderPricingOptions::setAutoApplyTaxes(const bool &auto_apply_taxes) {
    m_auto_apply_taxes = auto_apply_taxes;
    m_auto_apply_taxes_isSet = true;
}

bool OAIOrderPricingOptions::is_auto_apply_taxes_Set() const{
    return m_auto_apply_taxes_isSet;
}

bool OAIOrderPricingOptions::is_auto_apply_taxes_Valid() const{
    return m_auto_apply_taxes_isValid;
}

bool OAIOrderPricingOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_auto_apply_discounts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_auto_apply_taxes_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrderPricingOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
