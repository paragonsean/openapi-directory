/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICatalogCustomAttributeDefinition.h
 *
 * Contains information defining a custom attribute. Custom attributes are intended to store additional information about a catalog object or to associate a catalog object with an entity in another system. Do not use custom attributes to store any sensitive information (personally identifiable information, card details, etc.). [Read more about custom attributes](https://developer.squareup.com/docs/catalog-api/add-custom-attributes)
 */

#ifndef OAICatalogCustomAttributeDefinition_H
#define OAICatalogCustomAttributeDefinition_H

#include <QJsonObject>

#include "OAICatalogCustomAttributeDefinitionNumberConfig.h"
#include "OAICatalogCustomAttributeDefinitionSelectionConfig.h"
#include "OAICatalogCustomAttributeDefinitionStringConfig.h"
#include "OAISourceApplication.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICatalogCustomAttributeDefinitionNumberConfig;
class OAICatalogCustomAttributeDefinitionSelectionConfig;
class OAISourceApplication;
class OAICatalogCustomAttributeDefinitionStringConfig;

class OAICatalogCustomAttributeDefinition : public OAIObject {
public:
    OAICatalogCustomAttributeDefinition();
    OAICatalogCustomAttributeDefinition(QString json);
    ~OAICatalogCustomAttributeDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAllowedObjectTypes() const;
    void setAllowedObjectTypes(const QList<QString> &allowed_object_types);
    bool is_allowed_object_types_Set() const;
    bool is_allowed_object_types_Valid() const;

    QString getAppVisibility() const;
    void setAppVisibility(const QString &app_visibility);
    bool is_app_visibility_Set() const;
    bool is_app_visibility_Valid() const;

    qint32 getCustomAttributeUsageCount() const;
    void setCustomAttributeUsageCount(const qint32 &custom_attribute_usage_count);
    bool is_custom_attribute_usage_count_Set() const;
    bool is_custom_attribute_usage_count_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getKey() const;
    void setKey(const QString &key);
    bool is_key_Set() const;
    bool is_key_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAICatalogCustomAttributeDefinitionNumberConfig getNumberConfig() const;
    void setNumberConfig(const OAICatalogCustomAttributeDefinitionNumberConfig &number_config);
    bool is_number_config_Set() const;
    bool is_number_config_Valid() const;

    OAICatalogCustomAttributeDefinitionSelectionConfig getSelectionConfig() const;
    void setSelectionConfig(const OAICatalogCustomAttributeDefinitionSelectionConfig &selection_config);
    bool is_selection_config_Set() const;
    bool is_selection_config_Valid() const;

    QString getSellerVisibility() const;
    void setSellerVisibility(const QString &seller_visibility);
    bool is_seller_visibility_Set() const;
    bool is_seller_visibility_Valid() const;

    OAISourceApplication getSourceApplication() const;
    void setSourceApplication(const OAISourceApplication &source_application);
    bool is_source_application_Set() const;
    bool is_source_application_Valid() const;

    OAICatalogCustomAttributeDefinitionStringConfig getStringConfig() const;
    void setStringConfig(const OAICatalogCustomAttributeDefinitionStringConfig &string_config);
    bool is_string_config_Set() const;
    bool is_string_config_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_allowed_object_types;
    bool m_allowed_object_types_isSet;
    bool m_allowed_object_types_isValid;

    QString m_app_visibility;
    bool m_app_visibility_isSet;
    bool m_app_visibility_isValid;

    qint32 m_custom_attribute_usage_count;
    bool m_custom_attribute_usage_count_isSet;
    bool m_custom_attribute_usage_count_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_key;
    bool m_key_isSet;
    bool m_key_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAICatalogCustomAttributeDefinitionNumberConfig m_number_config;
    bool m_number_config_isSet;
    bool m_number_config_isValid;

    OAICatalogCustomAttributeDefinitionSelectionConfig m_selection_config;
    bool m_selection_config_isSet;
    bool m_selection_config_isValid;

    QString m_seller_visibility;
    bool m_seller_visibility_isSet;
    bool m_seller_visibility_isValid;

    OAISourceApplication m_source_application;
    bool m_source_application_isSet;
    bool m_source_application_isValid;

    OAICatalogCustomAttributeDefinitionStringConfig m_string_config;
    bool m_string_config_isSet;
    bool m_string_config_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICatalogCustomAttributeDefinition)

#endif // OAICatalogCustomAttributeDefinition_H
