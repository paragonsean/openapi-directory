/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIObtainTokenRequest.h
 *
 * 
 */

#ifndef OAIObtainTokenRequest_H
#define OAIObtainTokenRequest_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIObtainTokenRequest : public OAIObject {
public:
    OAIObtainTokenRequest();
    OAIObtainTokenRequest(QString json);
    ~OAIObtainTokenRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClientId() const;
    void setClientId(const QString &client_id);
    bool is_client_id_Set() const;
    bool is_client_id_Valid() const;

    QString getClientSecret() const;
    void setClientSecret(const QString &client_secret);
    bool is_client_secret_Set() const;
    bool is_client_secret_Valid() const;

    QString getCode() const;
    void setCode(const QString &code);
    bool is_code_Set() const;
    bool is_code_Valid() const;

    QString getGrantType() const;
    void setGrantType(const QString &grant_type);
    bool is_grant_type_Set() const;
    bool is_grant_type_Valid() const;

    QString getMigrationToken() const;
    void setMigrationToken(const QString &migration_token);
    bool is_migration_token_Set() const;
    bool is_migration_token_Valid() const;

    QString getRedirectUri() const;
    void setRedirectUri(const QString &redirect_uri);
    bool is_redirect_uri_Set() const;
    bool is_redirect_uri_Valid() const;

    QString getRefreshToken() const;
    void setRefreshToken(const QString &refresh_token);
    bool is_refresh_token_Set() const;
    bool is_refresh_token_Valid() const;

    QList<QString> getScopes() const;
    void setScopes(const QList<QString> &scopes);
    bool is_scopes_Set() const;
    bool is_scopes_Valid() const;

    bool isShortLived() const;
    void setShortLived(const bool &short_lived);
    bool is_short_lived_Set() const;
    bool is_short_lived_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_client_id;
    bool m_client_id_isSet;
    bool m_client_id_isValid;

    QString m_client_secret;
    bool m_client_secret_isSet;
    bool m_client_secret_isValid;

    QString m_code;
    bool m_code_isSet;
    bool m_code_isValid;

    QString m_grant_type;
    bool m_grant_type_isSet;
    bool m_grant_type_isValid;

    QString m_migration_token;
    bool m_migration_token_isSet;
    bool m_migration_token_isValid;

    QString m_redirect_uri;
    bool m_redirect_uri_isSet;
    bool m_redirect_uri_isValid;

    QString m_refresh_token;
    bool m_refresh_token_isSet;
    bool m_refresh_token_isValid;

    QList<QString> m_scopes;
    bool m_scopes_isSet;
    bool m_scopes_isValid;

    bool m_short_lived;
    bool m_short_lived_isSet;
    bool m_short_lived_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIObtainTokenRequest)

#endif // OAIObtainTokenRequest_H
