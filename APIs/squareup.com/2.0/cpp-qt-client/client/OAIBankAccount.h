/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBankAccount.h
 *
 * Represents a bank account. For more information about  linking a bank account to a Square account, see  [Bank Accounts API](https://developer.squareup.com/docs/bank-accounts-api).
 */

#ifndef OAIBankAccount_H
#define OAIBankAccount_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBankAccount : public OAIObject {
public:
    OAIBankAccount();
    OAIBankAccount(QString json);
    ~OAIBankAccount() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountNumberSuffix() const;
    void setAccountNumberSuffix(const QString &account_number_suffix);
    bool is_account_number_suffix_Set() const;
    bool is_account_number_suffix_Valid() const;

    QString getAccountType() const;
    void setAccountType(const QString &account_type);
    bool is_account_type_Set() const;
    bool is_account_type_Valid() const;

    QString getBankName() const;
    void setBankName(const QString &bank_name);
    bool is_bank_name_Set() const;
    bool is_bank_name_Valid() const;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    bool isCreditable() const;
    void setCreditable(const bool &creditable);
    bool is_creditable_Set() const;
    bool is_creditable_Valid() const;

    QString getCurrency() const;
    void setCurrency(const QString &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    QString getDebitMandateReferenceId() const;
    void setDebitMandateReferenceId(const QString &debit_mandate_reference_id);
    bool is_debit_mandate_reference_id_Set() const;
    bool is_debit_mandate_reference_id_Valid() const;

    bool isDebitable() const;
    void setDebitable(const bool &debitable);
    bool is_debitable_Set() const;
    bool is_debitable_Valid() const;

    QString getFingerprint() const;
    void setFingerprint(const QString &fingerprint);
    bool is_fingerprint_Set() const;
    bool is_fingerprint_Valid() const;

    QString getHolderName() const;
    void setHolderName(const QString &holder_name);
    bool is_holder_name_Set() const;
    bool is_holder_name_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getLocationId() const;
    void setLocationId(const QString &location_id);
    bool is_location_id_Set() const;
    bool is_location_id_Valid() const;

    QString getPrimaryBankIdentificationNumber() const;
    void setPrimaryBankIdentificationNumber(const QString &primary_bank_identification_number);
    bool is_primary_bank_identification_number_Set() const;
    bool is_primary_bank_identification_number_Valid() const;

    QString getReferenceId() const;
    void setReferenceId(const QString &reference_id);
    bool is_reference_id_Set() const;
    bool is_reference_id_Valid() const;

    QString getSecondaryBankIdentificationNumber() const;
    void setSecondaryBankIdentificationNumber(const QString &secondary_bank_identification_number);
    bool is_secondary_bank_identification_number_Set() const;
    bool is_secondary_bank_identification_number_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    qint32 getVersion() const;
    void setVersion(const qint32 &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_number_suffix;
    bool m_account_number_suffix_isSet;
    bool m_account_number_suffix_isValid;

    QString m_account_type;
    bool m_account_type_isSet;
    bool m_account_type_isValid;

    QString m_bank_name;
    bool m_bank_name_isSet;
    bool m_bank_name_isValid;

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    bool m_creditable;
    bool m_creditable_isSet;
    bool m_creditable_isValid;

    QString m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    QString m_debit_mandate_reference_id;
    bool m_debit_mandate_reference_id_isSet;
    bool m_debit_mandate_reference_id_isValid;

    bool m_debitable;
    bool m_debitable_isSet;
    bool m_debitable_isValid;

    QString m_fingerprint;
    bool m_fingerprint_isSet;
    bool m_fingerprint_isValid;

    QString m_holder_name;
    bool m_holder_name_isSet;
    bool m_holder_name_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_location_id;
    bool m_location_id_isSet;
    bool m_location_id_isValid;

    QString m_primary_bank_identification_number;
    bool m_primary_bank_identification_number_isSet;
    bool m_primary_bank_identification_number_isValid;

    QString m_reference_id;
    bool m_reference_id_isSet;
    bool m_reference_id_isValid;

    QString m_secondary_bank_identification_number;
    bool m_secondary_bank_identification_number_isSet;
    bool m_secondary_bank_identification_number_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    qint32 m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBankAccount)

#endif // OAIBankAccount_H
