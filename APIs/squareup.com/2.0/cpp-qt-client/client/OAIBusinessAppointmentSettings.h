/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBusinessAppointmentSettings.h
 *
 * The service appointment settings, including where and how the service is provided.
 */

#ifndef OAIBusinessAppointmentSettings_H
#define OAIBusinessAppointmentSettings_H

#include <QJsonObject>

#include "OAIMoney.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMoney;

class OAIBusinessAppointmentSettings : public OAIObject {
public:
    OAIBusinessAppointmentSettings();
    OAIBusinessAppointmentSettings(QString json);
    ~OAIBusinessAppointmentSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAlignmentTime() const;
    void setAlignmentTime(const QString &alignment_time);
    bool is_alignment_time_Set() const;
    bool is_alignment_time_Valid() const;

    bool isAnyTeamMemberBookingEnabled() const;
    void setAnyTeamMemberBookingEnabled(const bool &any_team_member_booking_enabled);
    bool is_any_team_member_booking_enabled_Set() const;
    bool is_any_team_member_booking_enabled_Valid() const;

    OAIMoney getCancellationFeeMoney() const;
    void setCancellationFeeMoney(const OAIMoney &cancellation_fee_money);
    bool is_cancellation_fee_money_Set() const;
    bool is_cancellation_fee_money_Valid() const;

    QString getCancellationPolicy() const;
    void setCancellationPolicy(const QString &cancellation_policy);
    bool is_cancellation_policy_Set() const;
    bool is_cancellation_policy_Valid() const;

    QString getCancellationPolicyText() const;
    void setCancellationPolicyText(const QString &cancellation_policy_text);
    bool is_cancellation_policy_text_Set() const;
    bool is_cancellation_policy_text_Valid() const;

    qint32 getCancellationWindowSeconds() const;
    void setCancellationWindowSeconds(const qint32 &cancellation_window_seconds);
    bool is_cancellation_window_seconds_Set() const;
    bool is_cancellation_window_seconds_Valid() const;

    QList<QString> getLocationTypes() const;
    void setLocationTypes(const QList<QString> &location_types);
    bool is_location_types_Set() const;
    bool is_location_types_Valid() const;

    qint32 getMaxAppointmentsPerDayLimit() const;
    void setMaxAppointmentsPerDayLimit(const qint32 &max_appointments_per_day_limit);
    bool is_max_appointments_per_day_limit_Set() const;
    bool is_max_appointments_per_day_limit_Valid() const;

    QString getMaxAppointmentsPerDayLimitType() const;
    void setMaxAppointmentsPerDayLimitType(const QString &max_appointments_per_day_limit_type);
    bool is_max_appointments_per_day_limit_type_Set() const;
    bool is_max_appointments_per_day_limit_type_Valid() const;

    qint32 getMaxBookingLeadTimeSeconds() const;
    void setMaxBookingLeadTimeSeconds(const qint32 &max_booking_lead_time_seconds);
    bool is_max_booking_lead_time_seconds_Set() const;
    bool is_max_booking_lead_time_seconds_Valid() const;

    qint32 getMinBookingLeadTimeSeconds() const;
    void setMinBookingLeadTimeSeconds(const qint32 &min_booking_lead_time_seconds);
    bool is_min_booking_lead_time_seconds_Set() const;
    bool is_min_booking_lead_time_seconds_Valid() const;

    bool isMultipleServiceBookingEnabled() const;
    void setMultipleServiceBookingEnabled(const bool &multiple_service_booking_enabled);
    bool is_multiple_service_booking_enabled_Set() const;
    bool is_multiple_service_booking_enabled_Valid() const;

    bool isSkipBookingFlowStaffSelection() const;
    void setSkipBookingFlowStaffSelection(const bool &skip_booking_flow_staff_selection);
    bool is_skip_booking_flow_staff_selection_Set() const;
    bool is_skip_booking_flow_staff_selection_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_alignment_time;
    bool m_alignment_time_isSet;
    bool m_alignment_time_isValid;

    bool m_any_team_member_booking_enabled;
    bool m_any_team_member_booking_enabled_isSet;
    bool m_any_team_member_booking_enabled_isValid;

    OAIMoney m_cancellation_fee_money;
    bool m_cancellation_fee_money_isSet;
    bool m_cancellation_fee_money_isValid;

    QString m_cancellation_policy;
    bool m_cancellation_policy_isSet;
    bool m_cancellation_policy_isValid;

    QString m_cancellation_policy_text;
    bool m_cancellation_policy_text_isSet;
    bool m_cancellation_policy_text_isValid;

    qint32 m_cancellation_window_seconds;
    bool m_cancellation_window_seconds_isSet;
    bool m_cancellation_window_seconds_isValid;

    QList<QString> m_location_types;
    bool m_location_types_isSet;
    bool m_location_types_isValid;

    qint32 m_max_appointments_per_day_limit;
    bool m_max_appointments_per_day_limit_isSet;
    bool m_max_appointments_per_day_limit_isValid;

    QString m_max_appointments_per_day_limit_type;
    bool m_max_appointments_per_day_limit_type_isSet;
    bool m_max_appointments_per_day_limit_type_isValid;

    qint32 m_max_booking_lead_time_seconds;
    bool m_max_booking_lead_time_seconds_isSet;
    bool m_max_booking_lead_time_seconds_isValid;

    qint32 m_min_booking_lead_time_seconds;
    bool m_min_booking_lead_time_seconds_isSet;
    bool m_min_booking_lead_time_seconds_isValid;

    bool m_multiple_service_booking_enabled;
    bool m_multiple_service_booking_enabled_isSet;
    bool m_multiple_service_booking_enabled_isValid;

    bool m_skip_booking_flow_staff_selection;
    bool m_skip_booking_flow_staff_selection_isSet;
    bool m_skip_booking_flow_staff_selection_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBusinessAppointmentSettings)

#endif // OAIBusinessAppointmentSettings_H
