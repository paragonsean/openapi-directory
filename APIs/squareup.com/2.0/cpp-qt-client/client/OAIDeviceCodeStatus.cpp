/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeviceCodeStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeviceCodeStatus::OAIDeviceCodeStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeviceCodeStatus::OAIDeviceCodeStatus() {
    this->initializeModel();
}

OAIDeviceCodeStatus::~OAIDeviceCodeStatus() {}

void OAIDeviceCodeStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIDeviceCodeStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIDeviceCodeStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("UNKNOWN", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDeviceCodeStatus::UNKNOWN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UNPAIRED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDeviceCodeStatus::UNPAIRED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PAIRED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDeviceCodeStatus::PAIRED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EXPIRED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDeviceCodeStatus::EXPIRED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIDeviceCodeStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIDeviceCodeStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIDeviceCodeStatus::UNKNOWN:
            val = "UNKNOWN";
            break;
        case eOAIDeviceCodeStatus::UNPAIRED:
            val = "UNPAIRED";
            break;
        case eOAIDeviceCodeStatus::PAIRED:
            val = "PAIRED";
            break;
        case eOAIDeviceCodeStatus::EXPIRED:
            val = "EXPIRED";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIDeviceCodeStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIDeviceCodeStatus::eOAIDeviceCodeStatus OAIDeviceCodeStatus::getValue() const {
    return m_value;
}

void OAIDeviceCodeStatus::setValue(const OAIDeviceCodeStatus::eOAIDeviceCodeStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIDeviceCodeStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIDeviceCodeStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
