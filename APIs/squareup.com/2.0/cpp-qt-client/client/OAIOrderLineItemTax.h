/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrderLineItemTax.h
 *
 * Represents a tax that applies to one or more line item in the order.  Fixed-amount, order-scoped taxes are distributed across all non-zero line item totals. The amount distributed to each line item is relative to the amount the item contributes to the order subtotal.
 */

#ifndef OAIOrderLineItemTax_H
#define OAIOrderLineItemTax_H

#include <QJsonObject>

#include "OAIMoney.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMoney;

class OAIOrderLineItemTax : public OAIObject {
public:
    OAIOrderLineItemTax();
    OAIOrderLineItemTax(QString json);
    ~OAIOrderLineItemTax() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIMoney getAppliedMoney() const;
    void setAppliedMoney(const OAIMoney &applied_money);
    bool is_applied_money_Set() const;
    bool is_applied_money_Valid() const;

    bool isAutoApplied() const;
    void setAutoApplied(const bool &auto_applied);
    bool is_auto_applied_Set() const;
    bool is_auto_applied_Valid() const;

    QString getCatalogObjectId() const;
    void setCatalogObjectId(const QString &catalog_object_id);
    bool is_catalog_object_id_Set() const;
    bool is_catalog_object_id_Valid() const;

    qint64 getCatalogVersion() const;
    void setCatalogVersion(const qint64 &catalog_version);
    bool is_catalog_version_Set() const;
    bool is_catalog_version_Valid() const;

    QMap<QString, QString> getMetadata() const;
    void setMetadata(const QMap<QString, QString> &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPercentage() const;
    void setPercentage(const QString &percentage);
    bool is_percentage_Set() const;
    bool is_percentage_Valid() const;

    QString getScope() const;
    void setScope(const QString &scope);
    bool is_scope_Set() const;
    bool is_scope_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUid() const;
    void setUid(const QString &uid);
    bool is_uid_Set() const;
    bool is_uid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIMoney m_applied_money;
    bool m_applied_money_isSet;
    bool m_applied_money_isValid;

    bool m_auto_applied;
    bool m_auto_applied_isSet;
    bool m_auto_applied_isValid;

    QString m_catalog_object_id;
    bool m_catalog_object_id_isSet;
    bool m_catalog_object_id_isValid;

    qint64 m_catalog_version;
    bool m_catalog_version_isSet;
    bool m_catalog_version_isValid;

    QMap<QString, QString> m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_percentage;
    bool m_percentage_isSet;
    bool m_percentage_isValid;

    QString m_scope;
    bool m_scope_isSet;
    bool m_scope_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_uid;
    bool m_uid_isSet;
    bool m_uid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOrderLineItemTax)

#endif // OAIOrderLineItemTax_H
