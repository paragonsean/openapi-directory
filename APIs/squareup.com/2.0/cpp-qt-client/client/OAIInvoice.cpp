/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInvoice.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInvoice::OAIInvoice(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInvoice::OAIInvoice() {
    this->initializeModel();
}

OAIInvoice::~OAIInvoice() {}

void OAIInvoice::initializeModel() {

    m_accepted_payment_methods_isSet = false;
    m_accepted_payment_methods_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_custom_fields_isSet = false;
    m_custom_fields_isValid = false;

    m_delivery_method_isSet = false;
    m_delivery_method_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_invoice_number_isSet = false;
    m_invoice_number_isValid = false;

    m_location_id_isSet = false;
    m_location_id_isValid = false;

    m_next_payment_amount_money_isSet = false;
    m_next_payment_amount_money_isValid = false;

    m_order_id_isSet = false;
    m_order_id_isValid = false;

    m_payment_requests_isSet = false;
    m_payment_requests_isValid = false;

    m_primary_recipient_isSet = false;
    m_primary_recipient_isValid = false;

    m_public_url_isSet = false;
    m_public_url_isValid = false;

    m_scheduled_at_isSet = false;
    m_scheduled_at_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_subscription_id_isSet = false;
    m_subscription_id_isValid = false;

    m_timezone_isSet = false;
    m_timezone_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;

    m_updated_at_isSet = false;
    m_updated_at_isValid = false;

    m_version_isSet = false;
    m_version_isValid = false;
}

void OAIInvoice::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInvoice::fromJsonObject(QJsonObject json) {

    m_accepted_payment_methods_isValid = ::OpenAPI::fromJsonValue(m_accepted_payment_methods, json[QString("accepted_payment_methods")]);
    m_accepted_payment_methods_isSet = !json[QString("accepted_payment_methods")].isNull() && m_accepted_payment_methods_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_custom_fields_isValid = ::OpenAPI::fromJsonValue(m_custom_fields, json[QString("custom_fields")]);
    m_custom_fields_isSet = !json[QString("custom_fields")].isNull() && m_custom_fields_isValid;

    m_delivery_method_isValid = ::OpenAPI::fromJsonValue(m_delivery_method, json[QString("delivery_method")]);
    m_delivery_method_isSet = !json[QString("delivery_method")].isNull() && m_delivery_method_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_invoice_number_isValid = ::OpenAPI::fromJsonValue(m_invoice_number, json[QString("invoice_number")]);
    m_invoice_number_isSet = !json[QString("invoice_number")].isNull() && m_invoice_number_isValid;

    m_location_id_isValid = ::OpenAPI::fromJsonValue(m_location_id, json[QString("location_id")]);
    m_location_id_isSet = !json[QString("location_id")].isNull() && m_location_id_isValid;

    m_next_payment_amount_money_isValid = ::OpenAPI::fromJsonValue(m_next_payment_amount_money, json[QString("next_payment_amount_money")]);
    m_next_payment_amount_money_isSet = !json[QString("next_payment_amount_money")].isNull() && m_next_payment_amount_money_isValid;

    m_order_id_isValid = ::OpenAPI::fromJsonValue(m_order_id, json[QString("order_id")]);
    m_order_id_isSet = !json[QString("order_id")].isNull() && m_order_id_isValid;

    m_payment_requests_isValid = ::OpenAPI::fromJsonValue(m_payment_requests, json[QString("payment_requests")]);
    m_payment_requests_isSet = !json[QString("payment_requests")].isNull() && m_payment_requests_isValid;

    m_primary_recipient_isValid = ::OpenAPI::fromJsonValue(m_primary_recipient, json[QString("primary_recipient")]);
    m_primary_recipient_isSet = !json[QString("primary_recipient")].isNull() && m_primary_recipient_isValid;

    m_public_url_isValid = ::OpenAPI::fromJsonValue(m_public_url, json[QString("public_url")]);
    m_public_url_isSet = !json[QString("public_url")].isNull() && m_public_url_isValid;

    m_scheduled_at_isValid = ::OpenAPI::fromJsonValue(m_scheduled_at, json[QString("scheduled_at")]);
    m_scheduled_at_isSet = !json[QString("scheduled_at")].isNull() && m_scheduled_at_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_subscription_id_isValid = ::OpenAPI::fromJsonValue(m_subscription_id, json[QString("subscription_id")]);
    m_subscription_id_isSet = !json[QString("subscription_id")].isNull() && m_subscription_id_isValid;

    m_timezone_isValid = ::OpenAPI::fromJsonValue(m_timezone, json[QString("timezone")]);
    m_timezone_isSet = !json[QString("timezone")].isNull() && m_timezone_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;

    m_updated_at_isValid = ::OpenAPI::fromJsonValue(m_updated_at, json[QString("updated_at")]);
    m_updated_at_isSet = !json[QString("updated_at")].isNull() && m_updated_at_isValid;

    m_version_isValid = ::OpenAPI::fromJsonValue(m_version, json[QString("version")]);
    m_version_isSet = !json[QString("version")].isNull() && m_version_isValid;
}

QString OAIInvoice::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInvoice::asJsonObject() const {
    QJsonObject obj;
    if (m_accepted_payment_methods.isSet()) {
        obj.insert(QString("accepted_payment_methods"), ::OpenAPI::toJsonValue(m_accepted_payment_methods));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_custom_fields.size() > 0) {
        obj.insert(QString("custom_fields"), ::OpenAPI::toJsonValue(m_custom_fields));
    }
    if (m_delivery_method_isSet) {
        obj.insert(QString("delivery_method"), ::OpenAPI::toJsonValue(m_delivery_method));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_invoice_number_isSet) {
        obj.insert(QString("invoice_number"), ::OpenAPI::toJsonValue(m_invoice_number));
    }
    if (m_location_id_isSet) {
        obj.insert(QString("location_id"), ::OpenAPI::toJsonValue(m_location_id));
    }
    if (m_next_payment_amount_money.isSet()) {
        obj.insert(QString("next_payment_amount_money"), ::OpenAPI::toJsonValue(m_next_payment_amount_money));
    }
    if (m_order_id_isSet) {
        obj.insert(QString("order_id"), ::OpenAPI::toJsonValue(m_order_id));
    }
    if (m_payment_requests.size() > 0) {
        obj.insert(QString("payment_requests"), ::OpenAPI::toJsonValue(m_payment_requests));
    }
    if (m_primary_recipient.isSet()) {
        obj.insert(QString("primary_recipient"), ::OpenAPI::toJsonValue(m_primary_recipient));
    }
    if (m_public_url_isSet) {
        obj.insert(QString("public_url"), ::OpenAPI::toJsonValue(m_public_url));
    }
    if (m_scheduled_at_isSet) {
        obj.insert(QString("scheduled_at"), ::OpenAPI::toJsonValue(m_scheduled_at));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_subscription_id_isSet) {
        obj.insert(QString("subscription_id"), ::OpenAPI::toJsonValue(m_subscription_id));
    }
    if (m_timezone_isSet) {
        obj.insert(QString("timezone"), ::OpenAPI::toJsonValue(m_timezone));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    if (m_updated_at_isSet) {
        obj.insert(QString("updated_at"), ::OpenAPI::toJsonValue(m_updated_at));
    }
    if (m_version_isSet) {
        obj.insert(QString("version"), ::OpenAPI::toJsonValue(m_version));
    }
    return obj;
}

OAIInvoiceAcceptedPaymentMethods OAIInvoice::getAcceptedPaymentMethods() const {
    return m_accepted_payment_methods;
}
void OAIInvoice::setAcceptedPaymentMethods(const OAIInvoiceAcceptedPaymentMethods &accepted_payment_methods) {
    m_accepted_payment_methods = accepted_payment_methods;
    m_accepted_payment_methods_isSet = true;
}

bool OAIInvoice::is_accepted_payment_methods_Set() const{
    return m_accepted_payment_methods_isSet;
}

bool OAIInvoice::is_accepted_payment_methods_Valid() const{
    return m_accepted_payment_methods_isValid;
}

QString OAIInvoice::getCreatedAt() const {
    return m_created_at;
}
void OAIInvoice::setCreatedAt(const QString &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIInvoice::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIInvoice::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QList<OAIInvoiceCustomField> OAIInvoice::getCustomFields() const {
    return m_custom_fields;
}
void OAIInvoice::setCustomFields(const QList<OAIInvoiceCustomField> &custom_fields) {
    m_custom_fields = custom_fields;
    m_custom_fields_isSet = true;
}

bool OAIInvoice::is_custom_fields_Set() const{
    return m_custom_fields_isSet;
}

bool OAIInvoice::is_custom_fields_Valid() const{
    return m_custom_fields_isValid;
}

QJsonValue OAIInvoice::getDeliveryMethod() const {
    return m_delivery_method;
}
void OAIInvoice::setDeliveryMethod(const QJsonValue &delivery_method) {
    m_delivery_method = delivery_method;
    m_delivery_method_isSet = true;
}

bool OAIInvoice::is_delivery_method_Set() const{
    return m_delivery_method_isSet;
}

bool OAIInvoice::is_delivery_method_Valid() const{
    return m_delivery_method_isValid;
}

QString OAIInvoice::getDescription() const {
    return m_description;
}
void OAIInvoice::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIInvoice::is_description_Set() const{
    return m_description_isSet;
}

bool OAIInvoice::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIInvoice::getId() const {
    return m_id;
}
void OAIInvoice::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIInvoice::is_id_Set() const{
    return m_id_isSet;
}

bool OAIInvoice::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIInvoice::getInvoiceNumber() const {
    return m_invoice_number;
}
void OAIInvoice::setInvoiceNumber(const QString &invoice_number) {
    m_invoice_number = invoice_number;
    m_invoice_number_isSet = true;
}

bool OAIInvoice::is_invoice_number_Set() const{
    return m_invoice_number_isSet;
}

bool OAIInvoice::is_invoice_number_Valid() const{
    return m_invoice_number_isValid;
}

QString OAIInvoice::getLocationId() const {
    return m_location_id;
}
void OAIInvoice::setLocationId(const QString &location_id) {
    m_location_id = location_id;
    m_location_id_isSet = true;
}

bool OAIInvoice::is_location_id_Set() const{
    return m_location_id_isSet;
}

bool OAIInvoice::is_location_id_Valid() const{
    return m_location_id_isValid;
}

OAIMoney OAIInvoice::getNextPaymentAmountMoney() const {
    return m_next_payment_amount_money;
}
void OAIInvoice::setNextPaymentAmountMoney(const OAIMoney &next_payment_amount_money) {
    m_next_payment_amount_money = next_payment_amount_money;
    m_next_payment_amount_money_isSet = true;
}

bool OAIInvoice::is_next_payment_amount_money_Set() const{
    return m_next_payment_amount_money_isSet;
}

bool OAIInvoice::is_next_payment_amount_money_Valid() const{
    return m_next_payment_amount_money_isValid;
}

QString OAIInvoice::getOrderId() const {
    return m_order_id;
}
void OAIInvoice::setOrderId(const QString &order_id) {
    m_order_id = order_id;
    m_order_id_isSet = true;
}

bool OAIInvoice::is_order_id_Set() const{
    return m_order_id_isSet;
}

bool OAIInvoice::is_order_id_Valid() const{
    return m_order_id_isValid;
}

QList<OAIInvoicePaymentRequest> OAIInvoice::getPaymentRequests() const {
    return m_payment_requests;
}
void OAIInvoice::setPaymentRequests(const QList<OAIInvoicePaymentRequest> &payment_requests) {
    m_payment_requests = payment_requests;
    m_payment_requests_isSet = true;
}

bool OAIInvoice::is_payment_requests_Set() const{
    return m_payment_requests_isSet;
}

bool OAIInvoice::is_payment_requests_Valid() const{
    return m_payment_requests_isValid;
}

OAIInvoiceRecipient OAIInvoice::getPrimaryRecipient() const {
    return m_primary_recipient;
}
void OAIInvoice::setPrimaryRecipient(const OAIInvoiceRecipient &primary_recipient) {
    m_primary_recipient = primary_recipient;
    m_primary_recipient_isSet = true;
}

bool OAIInvoice::is_primary_recipient_Set() const{
    return m_primary_recipient_isSet;
}

bool OAIInvoice::is_primary_recipient_Valid() const{
    return m_primary_recipient_isValid;
}

QString OAIInvoice::getPublicUrl() const {
    return m_public_url;
}
void OAIInvoice::setPublicUrl(const QString &public_url) {
    m_public_url = public_url;
    m_public_url_isSet = true;
}

bool OAIInvoice::is_public_url_Set() const{
    return m_public_url_isSet;
}

bool OAIInvoice::is_public_url_Valid() const{
    return m_public_url_isValid;
}

QString OAIInvoice::getScheduledAt() const {
    return m_scheduled_at;
}
void OAIInvoice::setScheduledAt(const QString &scheduled_at) {
    m_scheduled_at = scheduled_at;
    m_scheduled_at_isSet = true;
}

bool OAIInvoice::is_scheduled_at_Set() const{
    return m_scheduled_at_isSet;
}

bool OAIInvoice::is_scheduled_at_Valid() const{
    return m_scheduled_at_isValid;
}

QString OAIInvoice::getStatus() const {
    return m_status;
}
void OAIInvoice::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIInvoice::is_status_Set() const{
    return m_status_isSet;
}

bool OAIInvoice::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIInvoice::getSubscriptionId() const {
    return m_subscription_id;
}
void OAIInvoice::setSubscriptionId(const QString &subscription_id) {
    m_subscription_id = subscription_id;
    m_subscription_id_isSet = true;
}

bool OAIInvoice::is_subscription_id_Set() const{
    return m_subscription_id_isSet;
}

bool OAIInvoice::is_subscription_id_Valid() const{
    return m_subscription_id_isValid;
}

QString OAIInvoice::getTimezone() const {
    return m_timezone;
}
void OAIInvoice::setTimezone(const QString &timezone) {
    m_timezone = timezone;
    m_timezone_isSet = true;
}

bool OAIInvoice::is_timezone_Set() const{
    return m_timezone_isSet;
}

bool OAIInvoice::is_timezone_Valid() const{
    return m_timezone_isValid;
}

QString OAIInvoice::getTitle() const {
    return m_title;
}
void OAIInvoice::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIInvoice::is_title_Set() const{
    return m_title_isSet;
}

bool OAIInvoice::is_title_Valid() const{
    return m_title_isValid;
}

QString OAIInvoice::getUpdatedAt() const {
    return m_updated_at;
}
void OAIInvoice::setUpdatedAt(const QString &updated_at) {
    m_updated_at = updated_at;
    m_updated_at_isSet = true;
}

bool OAIInvoice::is_updated_at_Set() const{
    return m_updated_at_isSet;
}

bool OAIInvoice::is_updated_at_Valid() const{
    return m_updated_at_isValid;
}

qint32 OAIInvoice::getVersion() const {
    return m_version;
}
void OAIInvoice::setVersion(const qint32 &version) {
    m_version = version;
    m_version_isSet = true;
}

bool OAIInvoice::is_version_Set() const{
    return m_version_isSet;
}

bool OAIInvoice::is_version_Valid() const{
    return m_version_isValid;
}

bool OAIInvoice::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_accepted_payment_methods.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_fields.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_delivery_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_location_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_payment_amount_money.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_requests.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_primary_recipient.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_public_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_scheduled_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subscription_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_timezone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInvoice::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
