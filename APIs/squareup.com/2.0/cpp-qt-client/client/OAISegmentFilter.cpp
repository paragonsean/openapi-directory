/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISegmentFilter.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISegmentFilter::OAISegmentFilter(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISegmentFilter::OAISegmentFilter() {
    this->initializeModel();
}

OAISegmentFilter::~OAISegmentFilter() {}

void OAISegmentFilter::initializeModel() {

    m_service_variation_id_isSet = false;
    m_service_variation_id_isValid = false;

    m_team_member_id_filter_isSet = false;
    m_team_member_id_filter_isValid = false;
}

void OAISegmentFilter::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISegmentFilter::fromJsonObject(QJsonObject json) {

    m_service_variation_id_isValid = ::OpenAPI::fromJsonValue(m_service_variation_id, json[QString("service_variation_id")]);
    m_service_variation_id_isSet = !json[QString("service_variation_id")].isNull() && m_service_variation_id_isValid;

    m_team_member_id_filter_isValid = ::OpenAPI::fromJsonValue(m_team_member_id_filter, json[QString("team_member_id_filter")]);
    m_team_member_id_filter_isSet = !json[QString("team_member_id_filter")].isNull() && m_team_member_id_filter_isValid;
}

QString OAISegmentFilter::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISegmentFilter::asJsonObject() const {
    QJsonObject obj;
    if (m_service_variation_id_isSet) {
        obj.insert(QString("service_variation_id"), ::OpenAPI::toJsonValue(m_service_variation_id));
    }
    if (m_team_member_id_filter.isSet()) {
        obj.insert(QString("team_member_id_filter"), ::OpenAPI::toJsonValue(m_team_member_id_filter));
    }
    return obj;
}

QString OAISegmentFilter::getServiceVariationId() const {
    return m_service_variation_id;
}
void OAISegmentFilter::setServiceVariationId(const QString &service_variation_id) {
    m_service_variation_id = service_variation_id;
    m_service_variation_id_isSet = true;
}

bool OAISegmentFilter::is_service_variation_id_Set() const{
    return m_service_variation_id_isSet;
}

bool OAISegmentFilter::is_service_variation_id_Valid() const{
    return m_service_variation_id_isValid;
}

OAIFilterValue OAISegmentFilter::getTeamMemberIdFilter() const {
    return m_team_member_id_filter;
}
void OAISegmentFilter::setTeamMemberIdFilter(const OAIFilterValue &team_member_id_filter) {
    m_team_member_id_filter = team_member_id_filter;
    m_team_member_id_filter_isSet = true;
}

bool OAISegmentFilter::is_team_member_id_filter_Set() const{
    return m_team_member_id_filter_isSet;
}

bool OAISegmentFilter::is_team_member_id_filter_Valid() const{
    return m_team_member_id_filter_isValid;
}

bool OAISegmentFilter::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_service_variation_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_team_member_id_filter.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISegmentFilter::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_service_variation_id_isValid && true;
}

} // namespace OpenAPI
