/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListTransactionsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListTransactionsRequest::OAIListTransactionsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListTransactionsRequest::OAIListTransactionsRequest() {
    this->initializeModel();
}

OAIListTransactionsRequest::~OAIListTransactionsRequest() {}

void OAIListTransactionsRequest::initializeModel() {

    m_begin_time_isSet = false;
    m_begin_time_isValid = false;

    m_cursor_isSet = false;
    m_cursor_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_sort_order_isSet = false;
    m_sort_order_isValid = false;
}

void OAIListTransactionsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListTransactionsRequest::fromJsonObject(QJsonObject json) {

    m_begin_time_isValid = ::OpenAPI::fromJsonValue(m_begin_time, json[QString("begin_time")]);
    m_begin_time_isSet = !json[QString("begin_time")].isNull() && m_begin_time_isValid;

    m_cursor_isValid = ::OpenAPI::fromJsonValue(m_cursor, json[QString("cursor")]);
    m_cursor_isSet = !json[QString("cursor")].isNull() && m_cursor_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("end_time")]);
    m_end_time_isSet = !json[QString("end_time")].isNull() && m_end_time_isValid;

    m_sort_order_isValid = ::OpenAPI::fromJsonValue(m_sort_order, json[QString("sort_order")]);
    m_sort_order_isSet = !json[QString("sort_order")].isNull() && m_sort_order_isValid;
}

QString OAIListTransactionsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListTransactionsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_begin_time_isSet) {
        obj.insert(QString("begin_time"), ::OpenAPI::toJsonValue(m_begin_time));
    }
    if (m_cursor_isSet) {
        obj.insert(QString("cursor"), ::OpenAPI::toJsonValue(m_cursor));
    }
    if (m_end_time_isSet) {
        obj.insert(QString("end_time"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_sort_order_isSet) {
        obj.insert(QString("sort_order"), ::OpenAPI::toJsonValue(m_sort_order));
    }
    return obj;
}

QString OAIListTransactionsRequest::getBeginTime() const {
    return m_begin_time;
}
void OAIListTransactionsRequest::setBeginTime(const QString &begin_time) {
    m_begin_time = begin_time;
    m_begin_time_isSet = true;
}

bool OAIListTransactionsRequest::is_begin_time_Set() const{
    return m_begin_time_isSet;
}

bool OAIListTransactionsRequest::is_begin_time_Valid() const{
    return m_begin_time_isValid;
}

QString OAIListTransactionsRequest::getCursor() const {
    return m_cursor;
}
void OAIListTransactionsRequest::setCursor(const QString &cursor) {
    m_cursor = cursor;
    m_cursor_isSet = true;
}

bool OAIListTransactionsRequest::is_cursor_Set() const{
    return m_cursor_isSet;
}

bool OAIListTransactionsRequest::is_cursor_Valid() const{
    return m_cursor_isValid;
}

QString OAIListTransactionsRequest::getEndTime() const {
    return m_end_time;
}
void OAIListTransactionsRequest::setEndTime(const QString &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIListTransactionsRequest::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIListTransactionsRequest::is_end_time_Valid() const{
    return m_end_time_isValid;
}

QString OAIListTransactionsRequest::getSortOrder() const {
    return m_sort_order;
}
void OAIListTransactionsRequest::setSortOrder(const QString &sort_order) {
    m_sort_order = sort_order;
    m_sort_order_isSet = true;
}

bool OAIListTransactionsRequest::is_sort_order_Set() const{
    return m_sort_order_isSet;
}

bool OAIListTransactionsRequest::is_sort_order_Valid() const{
    return m_sort_order_isValid;
}

bool OAIListTransactionsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_begin_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cursor_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sort_order_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListTransactionsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
