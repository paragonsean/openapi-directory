/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISearchOrdersRequest.h
 *
 * The request does not have any required fields. When given no query criteria, &#x60;SearchOrders&#x60; returns all results for all of the seller&#39;s locations. When retrieving additional pages using a &#x60;cursor&#x60;, the &#x60;query&#x60; must be equal to the &#x60;query&#x60; used to retrieve the first page of results.
 */

#ifndef OAISearchOrdersRequest_H
#define OAISearchOrdersRequest_H

#include <QJsonObject>

#include "OAISearchOrdersQuery.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISearchOrdersQuery;

class OAISearchOrdersRequest : public OAIObject {
public:
    OAISearchOrdersRequest();
    OAISearchOrdersRequest(QString json);
    ~OAISearchOrdersRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCursor() const;
    void setCursor(const QString &cursor);
    bool is_cursor_Set() const;
    bool is_cursor_Valid() const;

    qint32 getLimit() const;
    void setLimit(const qint32 &limit);
    bool is_limit_Set() const;
    bool is_limit_Valid() const;

    QList<QString> getLocationIds() const;
    void setLocationIds(const QList<QString> &location_ids);
    bool is_location_ids_Set() const;
    bool is_location_ids_Valid() const;

    OAISearchOrdersQuery getQuery() const;
    void setQuery(const OAISearchOrdersQuery &query);
    bool is_query_Set() const;
    bool is_query_Valid() const;

    bool isReturnEntries() const;
    void setReturnEntries(const bool &return_entries);
    bool is_return_entries_Set() const;
    bool is_return_entries_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_cursor;
    bool m_cursor_isSet;
    bool m_cursor_isValid;

    qint32 m_limit;
    bool m_limit_isSet;
    bool m_limit_isValid;

    QList<QString> m_location_ids;
    bool m_location_ids_isSet;
    bool m_location_ids_isValid;

    OAISearchOrdersQuery m_query;
    bool m_query_isSet;
    bool m_query_isValid;

    bool m_return_entries;
    bool m_return_entries_isSet;
    bool m_return_entries_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISearchOrdersRequest)

#endif // OAISearchOrdersRequest_H
