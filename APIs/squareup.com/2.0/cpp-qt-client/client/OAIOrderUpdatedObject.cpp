/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderUpdatedObject.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderUpdatedObject::OAIOrderUpdatedObject(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderUpdatedObject::OAIOrderUpdatedObject() {
    this->initializeModel();
}

OAIOrderUpdatedObject::~OAIOrderUpdatedObject() {}

void OAIOrderUpdatedObject::initializeModel() {

    m_order_updated_isSet = false;
    m_order_updated_isValid = false;
}

void OAIOrderUpdatedObject::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrderUpdatedObject::fromJsonObject(QJsonObject json) {

    m_order_updated_isValid = ::OpenAPI::fromJsonValue(m_order_updated, json[QString("order_updated")]);
    m_order_updated_isSet = !json[QString("order_updated")].isNull() && m_order_updated_isValid;
}

QString OAIOrderUpdatedObject::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrderUpdatedObject::asJsonObject() const {
    QJsonObject obj;
    if (m_order_updated.isSet()) {
        obj.insert(QString("order_updated"), ::OpenAPI::toJsonValue(m_order_updated));
    }
    return obj;
}

OAIOrderUpdated OAIOrderUpdatedObject::getOrderUpdated() const {
    return m_order_updated;
}
void OAIOrderUpdatedObject::setOrderUpdated(const OAIOrderUpdated &order_updated) {
    m_order_updated = order_updated;
    m_order_updated_isSet = true;
}

bool OAIOrderUpdatedObject::is_order_updated_Set() const{
    return m_order_updated_isSet;
}

bool OAIOrderUpdatedObject::is_order_updated_Valid() const{
    return m_order_updated_isValid;
}

bool OAIOrderUpdatedObject::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_order_updated.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrderUpdatedObject::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
