/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITenderType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITenderType::OAITenderType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITenderType::OAITenderType() {
    this->initializeModel();
}

OAITenderType::~OAITenderType() {}

void OAITenderType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAITenderType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAITenderType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("CARD", Qt::CaseInsensitive) == 0) {
        m_value = eOAITenderType::CARD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CASH", Qt::CaseInsensitive) == 0) {
        m_value = eOAITenderType::CASH;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("THIRD_PARTY_CARD", Qt::CaseInsensitive) == 0) {
        m_value = eOAITenderType::THIRD_PARTY_CARD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SQUARE_GIFT_CARD", Qt::CaseInsensitive) == 0) {
        m_value = eOAITenderType::SQUARE_GIFT_CARD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NO_SALE", Qt::CaseInsensitive) == 0) {
        m_value = eOAITenderType::NO_SALE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("WALLET", Qt::CaseInsensitive) == 0) {
        m_value = eOAITenderType::WALLET;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("OTHER", Qt::CaseInsensitive) == 0) {
        m_value = eOAITenderType::OTHER;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAITenderType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAITenderType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAITenderType::CARD:
            val = "CARD";
            break;
        case eOAITenderType::CASH:
            val = "CASH";
            break;
        case eOAITenderType::THIRD_PARTY_CARD:
            val = "THIRD_PARTY_CARD";
            break;
        case eOAITenderType::SQUARE_GIFT_CARD:
            val = "SQUARE_GIFT_CARD";
            break;
        case eOAITenderType::NO_SALE:
            val = "NO_SALE";
            break;
        case eOAITenderType::WALLET:
            val = "WALLET";
            break;
        case eOAITenderType::OTHER:
            val = "OTHER";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAITenderType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAITenderType::eOAITenderType OAITenderType::getValue() const {
    return m_value;
}

void OAITenderType::setValue(const OAITenderType::eOAITenderType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAITenderType::isSet() const {
    
    return m_value_isSet;
}

bool OAITenderType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
