/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateCustomerCardRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateCustomerCardRequest::OAICreateCustomerCardRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateCustomerCardRequest::OAICreateCustomerCardRequest() {
    this->initializeModel();
}

OAICreateCustomerCardRequest::~OAICreateCustomerCardRequest() {}

void OAICreateCustomerCardRequest::initializeModel() {

    m_billing_address_isSet = false;
    m_billing_address_isValid = false;

    m_card_nonce_isSet = false;
    m_card_nonce_isValid = false;

    m_cardholder_name_isSet = false;
    m_cardholder_name_isValid = false;

    m_verification_token_isSet = false;
    m_verification_token_isValid = false;
}

void OAICreateCustomerCardRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateCustomerCardRequest::fromJsonObject(QJsonObject json) {

    m_billing_address_isValid = ::OpenAPI::fromJsonValue(m_billing_address, json[QString("billing_address")]);
    m_billing_address_isSet = !json[QString("billing_address")].isNull() && m_billing_address_isValid;

    m_card_nonce_isValid = ::OpenAPI::fromJsonValue(m_card_nonce, json[QString("card_nonce")]);
    m_card_nonce_isSet = !json[QString("card_nonce")].isNull() && m_card_nonce_isValid;

    m_cardholder_name_isValid = ::OpenAPI::fromJsonValue(m_cardholder_name, json[QString("cardholder_name")]);
    m_cardholder_name_isSet = !json[QString("cardholder_name")].isNull() && m_cardholder_name_isValid;

    m_verification_token_isValid = ::OpenAPI::fromJsonValue(m_verification_token, json[QString("verification_token")]);
    m_verification_token_isSet = !json[QString("verification_token")].isNull() && m_verification_token_isValid;
}

QString OAICreateCustomerCardRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateCustomerCardRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_billing_address.isSet()) {
        obj.insert(QString("billing_address"), ::OpenAPI::toJsonValue(m_billing_address));
    }
    if (m_card_nonce_isSet) {
        obj.insert(QString("card_nonce"), ::OpenAPI::toJsonValue(m_card_nonce));
    }
    if (m_cardholder_name_isSet) {
        obj.insert(QString("cardholder_name"), ::OpenAPI::toJsonValue(m_cardholder_name));
    }
    if (m_verification_token_isSet) {
        obj.insert(QString("verification_token"), ::OpenAPI::toJsonValue(m_verification_token));
    }
    return obj;
}

OAIAddress OAICreateCustomerCardRequest::getBillingAddress() const {
    return m_billing_address;
}
void OAICreateCustomerCardRequest::setBillingAddress(const OAIAddress &billing_address) {
    m_billing_address = billing_address;
    m_billing_address_isSet = true;
}

bool OAICreateCustomerCardRequest::is_billing_address_Set() const{
    return m_billing_address_isSet;
}

bool OAICreateCustomerCardRequest::is_billing_address_Valid() const{
    return m_billing_address_isValid;
}

QString OAICreateCustomerCardRequest::getCardNonce() const {
    return m_card_nonce;
}
void OAICreateCustomerCardRequest::setCardNonce(const QString &card_nonce) {
    m_card_nonce = card_nonce;
    m_card_nonce_isSet = true;
}

bool OAICreateCustomerCardRequest::is_card_nonce_Set() const{
    return m_card_nonce_isSet;
}

bool OAICreateCustomerCardRequest::is_card_nonce_Valid() const{
    return m_card_nonce_isValid;
}

QString OAICreateCustomerCardRequest::getCardholderName() const {
    return m_cardholder_name;
}
void OAICreateCustomerCardRequest::setCardholderName(const QString &cardholder_name) {
    m_cardholder_name = cardholder_name;
    m_cardholder_name_isSet = true;
}

bool OAICreateCustomerCardRequest::is_cardholder_name_Set() const{
    return m_cardholder_name_isSet;
}

bool OAICreateCustomerCardRequest::is_cardholder_name_Valid() const{
    return m_cardholder_name_isValid;
}

QString OAICreateCustomerCardRequest::getVerificationToken() const {
    return m_verification_token;
}
void OAICreateCustomerCardRequest::setVerificationToken(const QString &verification_token) {
    m_verification_token = verification_token;
    m_verification_token_isSet = true;
}

bool OAICreateCustomerCardRequest::is_verification_token_Set() const{
    return m_verification_token_isSet;
}

bool OAICreateCustomerCardRequest::is_verification_token_Valid() const{
    return m_verification_token_isValid;
}

bool OAICreateCustomerCardRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_billing_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_card_nonce_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cardholder_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_verification_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateCustomerCardRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_card_nonce_isValid && true;
}

} // namespace OpenAPI
