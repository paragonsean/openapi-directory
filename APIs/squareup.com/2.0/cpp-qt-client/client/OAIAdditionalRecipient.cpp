/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAdditionalRecipient.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAdditionalRecipient::OAIAdditionalRecipient(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAdditionalRecipient::OAIAdditionalRecipient() {
    this->initializeModel();
}

OAIAdditionalRecipient::~OAIAdditionalRecipient() {}

void OAIAdditionalRecipient::initializeModel() {

    m_amount_money_isSet = false;
    m_amount_money_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_location_id_isSet = false;
    m_location_id_isValid = false;

    m_receivable_id_isSet = false;
    m_receivable_id_isValid = false;
}

void OAIAdditionalRecipient::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAdditionalRecipient::fromJsonObject(QJsonObject json) {

    m_amount_money_isValid = ::OpenAPI::fromJsonValue(m_amount_money, json[QString("amount_money")]);
    m_amount_money_isSet = !json[QString("amount_money")].isNull() && m_amount_money_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_location_id_isValid = ::OpenAPI::fromJsonValue(m_location_id, json[QString("location_id")]);
    m_location_id_isSet = !json[QString("location_id")].isNull() && m_location_id_isValid;

    m_receivable_id_isValid = ::OpenAPI::fromJsonValue(m_receivable_id, json[QString("receivable_id")]);
    m_receivable_id_isSet = !json[QString("receivable_id")].isNull() && m_receivable_id_isValid;
}

QString OAIAdditionalRecipient::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAdditionalRecipient::asJsonObject() const {
    QJsonObject obj;
    if (m_amount_money.isSet()) {
        obj.insert(QString("amount_money"), ::OpenAPI::toJsonValue(m_amount_money));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_location_id_isSet) {
        obj.insert(QString("location_id"), ::OpenAPI::toJsonValue(m_location_id));
    }
    if (m_receivable_id_isSet) {
        obj.insert(QString("receivable_id"), ::OpenAPI::toJsonValue(m_receivable_id));
    }
    return obj;
}

OAIMoney OAIAdditionalRecipient::getAmountMoney() const {
    return m_amount_money;
}
void OAIAdditionalRecipient::setAmountMoney(const OAIMoney &amount_money) {
    m_amount_money = amount_money;
    m_amount_money_isSet = true;
}

bool OAIAdditionalRecipient::is_amount_money_Set() const{
    return m_amount_money_isSet;
}

bool OAIAdditionalRecipient::is_amount_money_Valid() const{
    return m_amount_money_isValid;
}

QString OAIAdditionalRecipient::getDescription() const {
    return m_description;
}
void OAIAdditionalRecipient::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIAdditionalRecipient::is_description_Set() const{
    return m_description_isSet;
}

bool OAIAdditionalRecipient::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIAdditionalRecipient::getLocationId() const {
    return m_location_id;
}
void OAIAdditionalRecipient::setLocationId(const QString &location_id) {
    m_location_id = location_id;
    m_location_id_isSet = true;
}

bool OAIAdditionalRecipient::is_location_id_Set() const{
    return m_location_id_isSet;
}

bool OAIAdditionalRecipient::is_location_id_Valid() const{
    return m_location_id_isValid;
}

QString OAIAdditionalRecipient::getReceivableId() const {
    return m_receivable_id;
}
void OAIAdditionalRecipient::setReceivableId(const QString &receivable_id) {
    m_receivable_id = receivable_id;
    m_receivable_id_isSet = true;
}

bool OAIAdditionalRecipient::is_receivable_id_Set() const{
    return m_receivable_id_isSet;
}

bool OAIAdditionalRecipient::is_receivable_id_Valid() const{
    return m_receivable_id_isValid;
}

bool OAIAdditionalRecipient::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amount_money.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_location_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_receivable_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAdditionalRecipient::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_amount_money_isValid && m_location_id_isValid && true;
}

} // namespace OpenAPI
