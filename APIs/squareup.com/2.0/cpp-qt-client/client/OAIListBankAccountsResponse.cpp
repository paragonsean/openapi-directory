/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListBankAccountsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListBankAccountsResponse::OAIListBankAccountsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListBankAccountsResponse::OAIListBankAccountsResponse() {
    this->initializeModel();
}

OAIListBankAccountsResponse::~OAIListBankAccountsResponse() {}

void OAIListBankAccountsResponse::initializeModel() {

    m_bank_accounts_isSet = false;
    m_bank_accounts_isValid = false;

    m_cursor_isSet = false;
    m_cursor_isValid = false;

    m_errors_isSet = false;
    m_errors_isValid = false;
}

void OAIListBankAccountsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListBankAccountsResponse::fromJsonObject(QJsonObject json) {

    m_bank_accounts_isValid = ::OpenAPI::fromJsonValue(m_bank_accounts, json[QString("bank_accounts")]);
    m_bank_accounts_isSet = !json[QString("bank_accounts")].isNull() && m_bank_accounts_isValid;

    m_cursor_isValid = ::OpenAPI::fromJsonValue(m_cursor, json[QString("cursor")]);
    m_cursor_isSet = !json[QString("cursor")].isNull() && m_cursor_isValid;

    m_errors_isValid = ::OpenAPI::fromJsonValue(m_errors, json[QString("errors")]);
    m_errors_isSet = !json[QString("errors")].isNull() && m_errors_isValid;
}

QString OAIListBankAccountsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListBankAccountsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_bank_accounts.size() > 0) {
        obj.insert(QString("bank_accounts"), ::OpenAPI::toJsonValue(m_bank_accounts));
    }
    if (m_cursor_isSet) {
        obj.insert(QString("cursor"), ::OpenAPI::toJsonValue(m_cursor));
    }
    if (m_errors.size() > 0) {
        obj.insert(QString("errors"), ::OpenAPI::toJsonValue(m_errors));
    }
    return obj;
}

QList<OAIBankAccount> OAIListBankAccountsResponse::getBankAccounts() const {
    return m_bank_accounts;
}
void OAIListBankAccountsResponse::setBankAccounts(const QList<OAIBankAccount> &bank_accounts) {
    m_bank_accounts = bank_accounts;
    m_bank_accounts_isSet = true;
}

bool OAIListBankAccountsResponse::is_bank_accounts_Set() const{
    return m_bank_accounts_isSet;
}

bool OAIListBankAccountsResponse::is_bank_accounts_Valid() const{
    return m_bank_accounts_isValid;
}

QString OAIListBankAccountsResponse::getCursor() const {
    return m_cursor;
}
void OAIListBankAccountsResponse::setCursor(const QString &cursor) {
    m_cursor = cursor;
    m_cursor_isSet = true;
}

bool OAIListBankAccountsResponse::is_cursor_Set() const{
    return m_cursor_isSet;
}

bool OAIListBankAccountsResponse::is_cursor_Valid() const{
    return m_cursor_isValid;
}

QList<OAIError> OAIListBankAccountsResponse::getErrors() const {
    return m_errors;
}
void OAIListBankAccountsResponse::setErrors(const QList<OAIError> &errors) {
    m_errors = errors;
    m_errors_isSet = true;
}

bool OAIListBankAccountsResponse::is_errors_Set() const{
    return m_errors_isSet;
}

bool OAIListBankAccountsResponse::is_errors_Valid() const{
    return m_errors_isValid;
}

bool OAIListBankAccountsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bank_accounts.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_cursor_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_errors.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListBankAccountsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
