/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProcessingFee.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProcessingFee::OAIProcessingFee(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProcessingFee::OAIProcessingFee() {
    this->initializeModel();
}

OAIProcessingFee::~OAIProcessingFee() {}

void OAIProcessingFee::initializeModel() {

    m_amount_money_isSet = false;
    m_amount_money_isValid = false;

    m_effective_at_isSet = false;
    m_effective_at_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIProcessingFee::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProcessingFee::fromJsonObject(QJsonObject json) {

    m_amount_money_isValid = ::OpenAPI::fromJsonValue(m_amount_money, json[QString("amount_money")]);
    m_amount_money_isSet = !json[QString("amount_money")].isNull() && m_amount_money_isValid;

    m_effective_at_isValid = ::OpenAPI::fromJsonValue(m_effective_at, json[QString("effective_at")]);
    m_effective_at_isSet = !json[QString("effective_at")].isNull() && m_effective_at_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIProcessingFee::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProcessingFee::asJsonObject() const {
    QJsonObject obj;
    if (m_amount_money.isSet()) {
        obj.insert(QString("amount_money"), ::OpenAPI::toJsonValue(m_amount_money));
    }
    if (m_effective_at_isSet) {
        obj.insert(QString("effective_at"), ::OpenAPI::toJsonValue(m_effective_at));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

OAIMoney OAIProcessingFee::getAmountMoney() const {
    return m_amount_money;
}
void OAIProcessingFee::setAmountMoney(const OAIMoney &amount_money) {
    m_amount_money = amount_money;
    m_amount_money_isSet = true;
}

bool OAIProcessingFee::is_amount_money_Set() const{
    return m_amount_money_isSet;
}

bool OAIProcessingFee::is_amount_money_Valid() const{
    return m_amount_money_isValid;
}

QString OAIProcessingFee::getEffectiveAt() const {
    return m_effective_at;
}
void OAIProcessingFee::setEffectiveAt(const QString &effective_at) {
    m_effective_at = effective_at;
    m_effective_at_isSet = true;
}

bool OAIProcessingFee::is_effective_at_Set() const{
    return m_effective_at_isSet;
}

bool OAIProcessingFee::is_effective_at_Valid() const{
    return m_effective_at_isValid;
}

QString OAIProcessingFee::getType() const {
    return m_type;
}
void OAIProcessingFee::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIProcessingFee::is_type_Set() const{
    return m_type_isSet;
}

bool OAIProcessingFee::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIProcessingFee::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amount_money.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_effective_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProcessingFee::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
