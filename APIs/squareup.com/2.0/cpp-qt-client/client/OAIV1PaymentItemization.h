/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIV1PaymentItemization.h
 *
 * Payment include an&#x60; itemizations&#x60; field that lists the items purchased, along with associated fees, modifiers, and discounts. Each itemization has an &#x60;itemization_type&#x60; field that indicates which of the following the itemization represents:  &lt;ul&gt; &lt;li&gt;An item variation from the merchant&#39;s item library&lt;/li&gt; &lt;li&gt;A custom monetary amount&lt;/li&gt; &lt;li&gt; An action performed on a Square gift card, such as activating or reloading it. &lt;/li&gt; &lt;/ul&gt;  *Note**: itemization information included in a &#x60;Payment&#x60; object reflects details collected **at the time of the payment**. Details such as the name or price of items might have changed since the payment was processed.
 */

#ifndef OAIV1PaymentItemization_H
#define OAIV1PaymentItemization_H

#include <QJsonObject>

#include "OAIV1Money.h"
#include "OAIV1PaymentDiscount.h"
#include "OAIV1PaymentItemDetail.h"
#include "OAIV1PaymentModifier.h"
#include "OAIV1PaymentTax.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIV1Money;
class OAIV1PaymentDiscount;
class OAIV1PaymentItemDetail;
class OAIV1PaymentModifier;
class OAIV1PaymentTax;

class OAIV1PaymentItemization : public OAIObject {
public:
    OAIV1PaymentItemization();
    OAIV1PaymentItemization(QString json);
    ~OAIV1PaymentItemization() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIV1Money getDiscountMoney() const;
    void setDiscountMoney(const OAIV1Money &discount_money);
    bool is_discount_money_Set() const;
    bool is_discount_money_Valid() const;

    QList<OAIV1PaymentDiscount> getDiscounts() const;
    void setDiscounts(const QList<OAIV1PaymentDiscount> &discounts);
    bool is_discounts_Set() const;
    bool is_discounts_Valid() const;

    OAIV1Money getGrossSalesMoney() const;
    void setGrossSalesMoney(const OAIV1Money &gross_sales_money);
    bool is_gross_sales_money_Set() const;
    bool is_gross_sales_money_Valid() const;

    OAIV1PaymentItemDetail getItemDetail() const;
    void setItemDetail(const OAIV1PaymentItemDetail &item_detail);
    bool is_item_detail_Set() const;
    bool is_item_detail_Valid() const;

    QString getItemVariationName() const;
    void setItemVariationName(const QString &item_variation_name);
    bool is_item_variation_name_Set() const;
    bool is_item_variation_name_Valid() const;

    QString getItemizationType() const;
    void setItemizationType(const QString &itemization_type);
    bool is_itemization_type_Set() const;
    bool is_itemization_type_Valid() const;

    QList<OAIV1PaymentModifier> getModifiers() const;
    void setModifiers(const QList<OAIV1PaymentModifier> &modifiers);
    bool is_modifiers_Set() const;
    bool is_modifiers_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIV1Money getNetSalesMoney() const;
    void setNetSalesMoney(const OAIV1Money &net_sales_money);
    bool is_net_sales_money_Set() const;
    bool is_net_sales_money_Valid() const;

    QString getNotes() const;
    void setNotes(const QString &notes);
    bool is_notes_Set() const;
    bool is_notes_Valid() const;

    double getQuantity() const;
    void setQuantity(const double &quantity);
    bool is_quantity_Set() const;
    bool is_quantity_Valid() const;

    OAIV1Money getSingleQuantityMoney() const;
    void setSingleQuantityMoney(const OAIV1Money &single_quantity_money);
    bool is_single_quantity_money_Set() const;
    bool is_single_quantity_money_Valid() const;

    QList<OAIV1PaymentTax> getTaxes() const;
    void setTaxes(const QList<OAIV1PaymentTax> &taxes);
    bool is_taxes_Set() const;
    bool is_taxes_Valid() const;

    OAIV1Money getTotalMoney() const;
    void setTotalMoney(const OAIV1Money &total_money);
    bool is_total_money_Set() const;
    bool is_total_money_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIV1Money m_discount_money;
    bool m_discount_money_isSet;
    bool m_discount_money_isValid;

    QList<OAIV1PaymentDiscount> m_discounts;
    bool m_discounts_isSet;
    bool m_discounts_isValid;

    OAIV1Money m_gross_sales_money;
    bool m_gross_sales_money_isSet;
    bool m_gross_sales_money_isValid;

    OAIV1PaymentItemDetail m_item_detail;
    bool m_item_detail_isSet;
    bool m_item_detail_isValid;

    QString m_item_variation_name;
    bool m_item_variation_name_isSet;
    bool m_item_variation_name_isValid;

    QString m_itemization_type;
    bool m_itemization_type_isSet;
    bool m_itemization_type_isValid;

    QList<OAIV1PaymentModifier> m_modifiers;
    bool m_modifiers_isSet;
    bool m_modifiers_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIV1Money m_net_sales_money;
    bool m_net_sales_money_isSet;
    bool m_net_sales_money_isValid;

    QString m_notes;
    bool m_notes_isSet;
    bool m_notes_isValid;

    double m_quantity;
    bool m_quantity_isSet;
    bool m_quantity_isValid;

    OAIV1Money m_single_quantity_money;
    bool m_single_quantity_money_isSet;
    bool m_single_quantity_money_isValid;

    QList<OAIV1PaymentTax> m_taxes;
    bool m_taxes_isSet;
    bool m_taxes_isValid;

    OAIV1Money m_total_money;
    bool m_total_money_isSet;
    bool m_total_money_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIV1PaymentItemization)

#endif // OAIV1PaymentItemization_H
