/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIV1Tender.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIV1Tender::OAIV1Tender(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIV1Tender::OAIV1Tender() {
    this->initializeModel();
}

OAIV1Tender::~OAIV1Tender() {}

void OAIV1Tender::initializeModel() {

    m_card_brand_isSet = false;
    m_card_brand_isValid = false;

    m_change_back_money_isSet = false;
    m_change_back_money_isValid = false;

    m_employee_id_isSet = false;
    m_employee_id_isValid = false;

    m_entry_method_isSet = false;
    m_entry_method_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_is_exchange_isSet = false;
    m_is_exchange_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_pan_suffix_isSet = false;
    m_pan_suffix_isValid = false;

    m_payment_note_isSet = false;
    m_payment_note_isValid = false;

    m_receipt_url_isSet = false;
    m_receipt_url_isValid = false;

    m_refunded_money_isSet = false;
    m_refunded_money_isValid = false;

    m_settled_at_isSet = false;
    m_settled_at_isValid = false;

    m_tendered_at_isSet = false;
    m_tendered_at_isValid = false;

    m_tendered_money_isSet = false;
    m_tendered_money_isValid = false;

    m_total_money_isSet = false;
    m_total_money_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIV1Tender::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIV1Tender::fromJsonObject(QJsonObject json) {

    m_card_brand_isValid = ::OpenAPI::fromJsonValue(m_card_brand, json[QString("card_brand")]);
    m_card_brand_isSet = !json[QString("card_brand")].isNull() && m_card_brand_isValid;

    m_change_back_money_isValid = ::OpenAPI::fromJsonValue(m_change_back_money, json[QString("change_back_money")]);
    m_change_back_money_isSet = !json[QString("change_back_money")].isNull() && m_change_back_money_isValid;

    m_employee_id_isValid = ::OpenAPI::fromJsonValue(m_employee_id, json[QString("employee_id")]);
    m_employee_id_isSet = !json[QString("employee_id")].isNull() && m_employee_id_isValid;

    m_entry_method_isValid = ::OpenAPI::fromJsonValue(m_entry_method, json[QString("entry_method")]);
    m_entry_method_isSet = !json[QString("entry_method")].isNull() && m_entry_method_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_is_exchange_isValid = ::OpenAPI::fromJsonValue(m_is_exchange, json[QString("is_exchange")]);
    m_is_exchange_isSet = !json[QString("is_exchange")].isNull() && m_is_exchange_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_pan_suffix_isValid = ::OpenAPI::fromJsonValue(m_pan_suffix, json[QString("pan_suffix")]);
    m_pan_suffix_isSet = !json[QString("pan_suffix")].isNull() && m_pan_suffix_isValid;

    m_payment_note_isValid = ::OpenAPI::fromJsonValue(m_payment_note, json[QString("payment_note")]);
    m_payment_note_isSet = !json[QString("payment_note")].isNull() && m_payment_note_isValid;

    m_receipt_url_isValid = ::OpenAPI::fromJsonValue(m_receipt_url, json[QString("receipt_url")]);
    m_receipt_url_isSet = !json[QString("receipt_url")].isNull() && m_receipt_url_isValid;

    m_refunded_money_isValid = ::OpenAPI::fromJsonValue(m_refunded_money, json[QString("refunded_money")]);
    m_refunded_money_isSet = !json[QString("refunded_money")].isNull() && m_refunded_money_isValid;

    m_settled_at_isValid = ::OpenAPI::fromJsonValue(m_settled_at, json[QString("settled_at")]);
    m_settled_at_isSet = !json[QString("settled_at")].isNull() && m_settled_at_isValid;

    m_tendered_at_isValid = ::OpenAPI::fromJsonValue(m_tendered_at, json[QString("tendered_at")]);
    m_tendered_at_isSet = !json[QString("tendered_at")].isNull() && m_tendered_at_isValid;

    m_tendered_money_isValid = ::OpenAPI::fromJsonValue(m_tendered_money, json[QString("tendered_money")]);
    m_tendered_money_isSet = !json[QString("tendered_money")].isNull() && m_tendered_money_isValid;

    m_total_money_isValid = ::OpenAPI::fromJsonValue(m_total_money, json[QString("total_money")]);
    m_total_money_isSet = !json[QString("total_money")].isNull() && m_total_money_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIV1Tender::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIV1Tender::asJsonObject() const {
    QJsonObject obj;
    if (m_card_brand_isSet) {
        obj.insert(QString("card_brand"), ::OpenAPI::toJsonValue(m_card_brand));
    }
    if (m_change_back_money.isSet()) {
        obj.insert(QString("change_back_money"), ::OpenAPI::toJsonValue(m_change_back_money));
    }
    if (m_employee_id_isSet) {
        obj.insert(QString("employee_id"), ::OpenAPI::toJsonValue(m_employee_id));
    }
    if (m_entry_method_isSet) {
        obj.insert(QString("entry_method"), ::OpenAPI::toJsonValue(m_entry_method));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_is_exchange_isSet) {
        obj.insert(QString("is_exchange"), ::OpenAPI::toJsonValue(m_is_exchange));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_pan_suffix_isSet) {
        obj.insert(QString("pan_suffix"), ::OpenAPI::toJsonValue(m_pan_suffix));
    }
    if (m_payment_note_isSet) {
        obj.insert(QString("payment_note"), ::OpenAPI::toJsonValue(m_payment_note));
    }
    if (m_receipt_url_isSet) {
        obj.insert(QString("receipt_url"), ::OpenAPI::toJsonValue(m_receipt_url));
    }
    if (m_refunded_money.isSet()) {
        obj.insert(QString("refunded_money"), ::OpenAPI::toJsonValue(m_refunded_money));
    }
    if (m_settled_at_isSet) {
        obj.insert(QString("settled_at"), ::OpenAPI::toJsonValue(m_settled_at));
    }
    if (m_tendered_at_isSet) {
        obj.insert(QString("tendered_at"), ::OpenAPI::toJsonValue(m_tendered_at));
    }
    if (m_tendered_money.isSet()) {
        obj.insert(QString("tendered_money"), ::OpenAPI::toJsonValue(m_tendered_money));
    }
    if (m_total_money.isSet()) {
        obj.insert(QString("total_money"), ::OpenAPI::toJsonValue(m_total_money));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIV1Tender::getCardBrand() const {
    return m_card_brand;
}
void OAIV1Tender::setCardBrand(const QString &card_brand) {
    m_card_brand = card_brand;
    m_card_brand_isSet = true;
}

bool OAIV1Tender::is_card_brand_Set() const{
    return m_card_brand_isSet;
}

bool OAIV1Tender::is_card_brand_Valid() const{
    return m_card_brand_isValid;
}

OAIV1Money OAIV1Tender::getChangeBackMoney() const {
    return m_change_back_money;
}
void OAIV1Tender::setChangeBackMoney(const OAIV1Money &change_back_money) {
    m_change_back_money = change_back_money;
    m_change_back_money_isSet = true;
}

bool OAIV1Tender::is_change_back_money_Set() const{
    return m_change_back_money_isSet;
}

bool OAIV1Tender::is_change_back_money_Valid() const{
    return m_change_back_money_isValid;
}

QString OAIV1Tender::getEmployeeId() const {
    return m_employee_id;
}
void OAIV1Tender::setEmployeeId(const QString &employee_id) {
    m_employee_id = employee_id;
    m_employee_id_isSet = true;
}

bool OAIV1Tender::is_employee_id_Set() const{
    return m_employee_id_isSet;
}

bool OAIV1Tender::is_employee_id_Valid() const{
    return m_employee_id_isValid;
}

QString OAIV1Tender::getEntryMethod() const {
    return m_entry_method;
}
void OAIV1Tender::setEntryMethod(const QString &entry_method) {
    m_entry_method = entry_method;
    m_entry_method_isSet = true;
}

bool OAIV1Tender::is_entry_method_Set() const{
    return m_entry_method_isSet;
}

bool OAIV1Tender::is_entry_method_Valid() const{
    return m_entry_method_isValid;
}

QString OAIV1Tender::getId() const {
    return m_id;
}
void OAIV1Tender::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIV1Tender::is_id_Set() const{
    return m_id_isSet;
}

bool OAIV1Tender::is_id_Valid() const{
    return m_id_isValid;
}

bool OAIV1Tender::isIsExchange() const {
    return m_is_exchange;
}
void OAIV1Tender::setIsExchange(const bool &is_exchange) {
    m_is_exchange = is_exchange;
    m_is_exchange_isSet = true;
}

bool OAIV1Tender::is_is_exchange_Set() const{
    return m_is_exchange_isSet;
}

bool OAIV1Tender::is_is_exchange_Valid() const{
    return m_is_exchange_isValid;
}

QString OAIV1Tender::getName() const {
    return m_name;
}
void OAIV1Tender::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIV1Tender::is_name_Set() const{
    return m_name_isSet;
}

bool OAIV1Tender::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIV1Tender::getPanSuffix() const {
    return m_pan_suffix;
}
void OAIV1Tender::setPanSuffix(const QString &pan_suffix) {
    m_pan_suffix = pan_suffix;
    m_pan_suffix_isSet = true;
}

bool OAIV1Tender::is_pan_suffix_Set() const{
    return m_pan_suffix_isSet;
}

bool OAIV1Tender::is_pan_suffix_Valid() const{
    return m_pan_suffix_isValid;
}

QString OAIV1Tender::getPaymentNote() const {
    return m_payment_note;
}
void OAIV1Tender::setPaymentNote(const QString &payment_note) {
    m_payment_note = payment_note;
    m_payment_note_isSet = true;
}

bool OAIV1Tender::is_payment_note_Set() const{
    return m_payment_note_isSet;
}

bool OAIV1Tender::is_payment_note_Valid() const{
    return m_payment_note_isValid;
}

QString OAIV1Tender::getReceiptUrl() const {
    return m_receipt_url;
}
void OAIV1Tender::setReceiptUrl(const QString &receipt_url) {
    m_receipt_url = receipt_url;
    m_receipt_url_isSet = true;
}

bool OAIV1Tender::is_receipt_url_Set() const{
    return m_receipt_url_isSet;
}

bool OAIV1Tender::is_receipt_url_Valid() const{
    return m_receipt_url_isValid;
}

OAIV1Money OAIV1Tender::getRefundedMoney() const {
    return m_refunded_money;
}
void OAIV1Tender::setRefundedMoney(const OAIV1Money &refunded_money) {
    m_refunded_money = refunded_money;
    m_refunded_money_isSet = true;
}

bool OAIV1Tender::is_refunded_money_Set() const{
    return m_refunded_money_isSet;
}

bool OAIV1Tender::is_refunded_money_Valid() const{
    return m_refunded_money_isValid;
}

QString OAIV1Tender::getSettledAt() const {
    return m_settled_at;
}
void OAIV1Tender::setSettledAt(const QString &settled_at) {
    m_settled_at = settled_at;
    m_settled_at_isSet = true;
}

bool OAIV1Tender::is_settled_at_Set() const{
    return m_settled_at_isSet;
}

bool OAIV1Tender::is_settled_at_Valid() const{
    return m_settled_at_isValid;
}

QString OAIV1Tender::getTenderedAt() const {
    return m_tendered_at;
}
void OAIV1Tender::setTenderedAt(const QString &tendered_at) {
    m_tendered_at = tendered_at;
    m_tendered_at_isSet = true;
}

bool OAIV1Tender::is_tendered_at_Set() const{
    return m_tendered_at_isSet;
}

bool OAIV1Tender::is_tendered_at_Valid() const{
    return m_tendered_at_isValid;
}

OAIV1Money OAIV1Tender::getTenderedMoney() const {
    return m_tendered_money;
}
void OAIV1Tender::setTenderedMoney(const OAIV1Money &tendered_money) {
    m_tendered_money = tendered_money;
    m_tendered_money_isSet = true;
}

bool OAIV1Tender::is_tendered_money_Set() const{
    return m_tendered_money_isSet;
}

bool OAIV1Tender::is_tendered_money_Valid() const{
    return m_tendered_money_isValid;
}

OAIV1Money OAIV1Tender::getTotalMoney() const {
    return m_total_money;
}
void OAIV1Tender::setTotalMoney(const OAIV1Money &total_money) {
    m_total_money = total_money;
    m_total_money_isSet = true;
}

bool OAIV1Tender::is_total_money_Set() const{
    return m_total_money_isSet;
}

bool OAIV1Tender::is_total_money_Valid() const{
    return m_total_money_isValid;
}

QString OAIV1Tender::getType() const {
    return m_type;
}
void OAIV1Tender::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIV1Tender::is_type_Set() const{
    return m_type_isSet;
}

bool OAIV1Tender::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIV1Tender::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_card_brand_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_change_back_money.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_employee_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_entry_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_exchange_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pan_suffix_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_note_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_receipt_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_refunded_money.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_settled_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tendered_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tendered_money.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_money.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIV1Tender::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
