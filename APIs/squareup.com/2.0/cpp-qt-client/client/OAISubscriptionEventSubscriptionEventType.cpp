/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISubscriptionEventSubscriptionEventType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISubscriptionEventSubscriptionEventType::OAISubscriptionEventSubscriptionEventType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISubscriptionEventSubscriptionEventType::OAISubscriptionEventSubscriptionEventType() {
    this->initializeModel();
}

OAISubscriptionEventSubscriptionEventType::~OAISubscriptionEventSubscriptionEventType() {}

void OAISubscriptionEventSubscriptionEventType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAISubscriptionEventSubscriptionEventType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAISubscriptionEventSubscriptionEventType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("START_SUBSCRIPTION", Qt::CaseInsensitive) == 0) {
        m_value = eOAISubscriptionEventSubscriptionEventType::START_SUBSCRIPTION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PLAN_CHANGE", Qt::CaseInsensitive) == 0) {
        m_value = eOAISubscriptionEventSubscriptionEventType::PLAN_CHANGE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("STOP_SUBSCRIPTION", Qt::CaseInsensitive) == 0) {
        m_value = eOAISubscriptionEventSubscriptionEventType::STOP_SUBSCRIPTION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DEACTIVATE_SUBSCRIPTION", Qt::CaseInsensitive) == 0) {
        m_value = eOAISubscriptionEventSubscriptionEventType::DEACTIVATE_SUBSCRIPTION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("RESUME_SUBSCRIPTION", Qt::CaseInsensitive) == 0) {
        m_value = eOAISubscriptionEventSubscriptionEventType::RESUME_SUBSCRIPTION;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAISubscriptionEventSubscriptionEventType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAISubscriptionEventSubscriptionEventType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAISubscriptionEventSubscriptionEventType::START_SUBSCRIPTION:
            val = "START_SUBSCRIPTION";
            break;
        case eOAISubscriptionEventSubscriptionEventType::PLAN_CHANGE:
            val = "PLAN_CHANGE";
            break;
        case eOAISubscriptionEventSubscriptionEventType::STOP_SUBSCRIPTION:
            val = "STOP_SUBSCRIPTION";
            break;
        case eOAISubscriptionEventSubscriptionEventType::DEACTIVATE_SUBSCRIPTION:
            val = "DEACTIVATE_SUBSCRIPTION";
            break;
        case eOAISubscriptionEventSubscriptionEventType::RESUME_SUBSCRIPTION:
            val = "RESUME_SUBSCRIPTION";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAISubscriptionEventSubscriptionEventType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAISubscriptionEventSubscriptionEventType::eOAISubscriptionEventSubscriptionEventType OAISubscriptionEventSubscriptionEventType::getValue() const {
    return m_value;
}

void OAISubscriptionEventSubscriptionEventType::setValue(const OAISubscriptionEventSubscriptionEventType::eOAISubscriptionEventSubscriptionEventType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAISubscriptionEventSubscriptionEventType::isSet() const {
    
    return m_value_isSet;
}

bool OAISubscriptionEventSubscriptionEventType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
