/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIShift.h
 *
 * A record of the hourly rate, start, and end times for a single work shift for an employee. This might include a record of the start and end times for breaks taken during the shift.
 */

#ifndef OAIShift_H
#define OAIShift_H

#include <QJsonObject>

#include "OAIBreak.h"
#include "OAIShiftWage.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBreak;
class OAIShiftWage;

class OAIShift : public OAIObject {
public:
    OAIShift();
    OAIShift(QString json);
    ~OAIShift() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIBreak> getBreaks() const;
    void setBreaks(const QList<OAIBreak> &breaks);
    bool is_breaks_Set() const;
    bool is_breaks_Valid() const;

    QString getCreatedAt() const;
    void setCreatedAt(const QString &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getEmployeeId() const;
    void setEmployeeId(const QString &employee_id);
    bool is_employee_id_Set() const;
    bool is_employee_id_Valid() const;

    QString getEndAt() const;
    void setEndAt(const QString &end_at);
    bool is_end_at_Set() const;
    bool is_end_at_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getLocationId() const;
    void setLocationId(const QString &location_id);
    bool is_location_id_Set() const;
    bool is_location_id_Valid() const;

    QString getStartAt() const;
    void setStartAt(const QString &start_at);
    bool is_start_at_Set() const;
    bool is_start_at_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getTeamMemberId() const;
    void setTeamMemberId(const QString &team_member_id);
    bool is_team_member_id_Set() const;
    bool is_team_member_id_Valid() const;

    QString getTimezone() const;
    void setTimezone(const QString &timezone);
    bool is_timezone_Set() const;
    bool is_timezone_Valid() const;

    QString getUpdatedAt() const;
    void setUpdatedAt(const QString &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    qint32 getVersion() const;
    void setVersion(const qint32 &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    OAIShiftWage getWage() const;
    void setWage(const OAIShiftWage &wage);
    bool is_wage_Set() const;
    bool is_wage_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIBreak> m_breaks;
    bool m_breaks_isSet;
    bool m_breaks_isValid;

    QString m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_employee_id;
    bool m_employee_id_isSet;
    bool m_employee_id_isValid;

    QString m_end_at;
    bool m_end_at_isSet;
    bool m_end_at_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_location_id;
    bool m_location_id_isSet;
    bool m_location_id_isValid;

    QString m_start_at;
    bool m_start_at_isSet;
    bool m_start_at_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_team_member_id;
    bool m_team_member_id_isSet;
    bool m_team_member_id_isValid;

    QString m_timezone;
    bool m_timezone_isSet;
    bool m_timezone_isValid;

    QString m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    qint32 m_version;
    bool m_version_isSet;
    bool m_version_isValid;

    OAIShiftWage m_wage;
    bool m_wage_isSet;
    bool m_wage_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIShift)

#endif // OAIShift_H
