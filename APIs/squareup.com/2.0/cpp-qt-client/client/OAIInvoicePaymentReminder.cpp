/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInvoicePaymentReminder.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInvoicePaymentReminder::OAIInvoicePaymentReminder(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInvoicePaymentReminder::OAIInvoicePaymentReminder() {
    this->initializeModel();
}

OAIInvoicePaymentReminder::~OAIInvoicePaymentReminder() {}

void OAIInvoicePaymentReminder::initializeModel() {

    m_message_isSet = false;
    m_message_isValid = false;

    m_relative_scheduled_days_isSet = false;
    m_relative_scheduled_days_isValid = false;

    m_sent_at_isSet = false;
    m_sent_at_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_uid_isSet = false;
    m_uid_isValid = false;
}

void OAIInvoicePaymentReminder::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInvoicePaymentReminder::fromJsonObject(QJsonObject json) {

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;

    m_relative_scheduled_days_isValid = ::OpenAPI::fromJsonValue(m_relative_scheduled_days, json[QString("relative_scheduled_days")]);
    m_relative_scheduled_days_isSet = !json[QString("relative_scheduled_days")].isNull() && m_relative_scheduled_days_isValid;

    m_sent_at_isValid = ::OpenAPI::fromJsonValue(m_sent_at, json[QString("sent_at")]);
    m_sent_at_isSet = !json[QString("sent_at")].isNull() && m_sent_at_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_uid_isValid = ::OpenAPI::fromJsonValue(m_uid, json[QString("uid")]);
    m_uid_isSet = !json[QString("uid")].isNull() && m_uid_isValid;
}

QString OAIInvoicePaymentReminder::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInvoicePaymentReminder::asJsonObject() const {
    QJsonObject obj;
    if (m_message_isSet) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    if (m_relative_scheduled_days_isSet) {
        obj.insert(QString("relative_scheduled_days"), ::OpenAPI::toJsonValue(m_relative_scheduled_days));
    }
    if (m_sent_at_isSet) {
        obj.insert(QString("sent_at"), ::OpenAPI::toJsonValue(m_sent_at));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_uid_isSet) {
        obj.insert(QString("uid"), ::OpenAPI::toJsonValue(m_uid));
    }
    return obj;
}

QString OAIInvoicePaymentReminder::getMessage() const {
    return m_message;
}
void OAIInvoicePaymentReminder::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAIInvoicePaymentReminder::is_message_Set() const{
    return m_message_isSet;
}

bool OAIInvoicePaymentReminder::is_message_Valid() const{
    return m_message_isValid;
}

qint32 OAIInvoicePaymentReminder::getRelativeScheduledDays() const {
    return m_relative_scheduled_days;
}
void OAIInvoicePaymentReminder::setRelativeScheduledDays(const qint32 &relative_scheduled_days) {
    m_relative_scheduled_days = relative_scheduled_days;
    m_relative_scheduled_days_isSet = true;
}

bool OAIInvoicePaymentReminder::is_relative_scheduled_days_Set() const{
    return m_relative_scheduled_days_isSet;
}

bool OAIInvoicePaymentReminder::is_relative_scheduled_days_Valid() const{
    return m_relative_scheduled_days_isValid;
}

QString OAIInvoicePaymentReminder::getSentAt() const {
    return m_sent_at;
}
void OAIInvoicePaymentReminder::setSentAt(const QString &sent_at) {
    m_sent_at = sent_at;
    m_sent_at_isSet = true;
}

bool OAIInvoicePaymentReminder::is_sent_at_Set() const{
    return m_sent_at_isSet;
}

bool OAIInvoicePaymentReminder::is_sent_at_Valid() const{
    return m_sent_at_isValid;
}

QString OAIInvoicePaymentReminder::getStatus() const {
    return m_status;
}
void OAIInvoicePaymentReminder::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIInvoicePaymentReminder::is_status_Set() const{
    return m_status_isSet;
}

bool OAIInvoicePaymentReminder::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIInvoicePaymentReminder::getUid() const {
    return m_uid;
}
void OAIInvoicePaymentReminder::setUid(const QString &uid) {
    m_uid = uid;
    m_uid_isSet = true;
}

bool OAIInvoicePaymentReminder::is_uid_Set() const{
    return m_uid_isSet;
}

bool OAIInvoicePaymentReminder::is_uid_Valid() const{
    return m_uid_isValid;
}

bool OAIInvoicePaymentReminder::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_relative_scheduled_days_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sent_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uid_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInvoicePaymentReminder::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
