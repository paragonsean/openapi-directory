/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIErrorCategory.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIErrorCategory::OAIErrorCategory(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIErrorCategory::OAIErrorCategory() {
    this->initializeModel();
}

OAIErrorCategory::~OAIErrorCategory() {}

void OAIErrorCategory::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIErrorCategory::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIErrorCategory::fromJson(QString jsonString) {
    
    if ( jsonString.compare("API_ERROR", Qt::CaseInsensitive) == 0) {
        m_value = eOAIErrorCategory::API_ERROR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AUTHENTICATION_ERROR", Qt::CaseInsensitive) == 0) {
        m_value = eOAIErrorCategory::AUTHENTICATION_ERROR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("INVALID_REQUEST_ERROR", Qt::CaseInsensitive) == 0) {
        m_value = eOAIErrorCategory::INVALID_REQUEST_ERROR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("RATE_LIMIT_ERROR", Qt::CaseInsensitive) == 0) {
        m_value = eOAIErrorCategory::RATE_LIMIT_ERROR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PAYMENT_METHOD_ERROR", Qt::CaseInsensitive) == 0) {
        m_value = eOAIErrorCategory::PAYMENT_METHOD_ERROR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("REFUND_ERROR", Qt::CaseInsensitive) == 0) {
        m_value = eOAIErrorCategory::REFUND_ERROR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MERCHANT_SUBSCRIPTION_ERROR", Qt::CaseInsensitive) == 0) {
        m_value = eOAIErrorCategory::MERCHANT_SUBSCRIPTION_ERROR;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIErrorCategory::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIErrorCategory::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIErrorCategory::API_ERROR:
            val = "API_ERROR";
            break;
        case eOAIErrorCategory::AUTHENTICATION_ERROR:
            val = "AUTHENTICATION_ERROR";
            break;
        case eOAIErrorCategory::INVALID_REQUEST_ERROR:
            val = "INVALID_REQUEST_ERROR";
            break;
        case eOAIErrorCategory::RATE_LIMIT_ERROR:
            val = "RATE_LIMIT_ERROR";
            break;
        case eOAIErrorCategory::PAYMENT_METHOD_ERROR:
            val = "PAYMENT_METHOD_ERROR";
            break;
        case eOAIErrorCategory::REFUND_ERROR:
            val = "REFUND_ERROR";
            break;
        case eOAIErrorCategory::MERCHANT_SUBSCRIPTION_ERROR:
            val = "MERCHANT_SUBSCRIPTION_ERROR";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIErrorCategory::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIErrorCategory::eOAIErrorCategory OAIErrorCategory::getValue() const {
    return m_value;
}

void OAIErrorCategory::setValue(const OAIErrorCategory::eOAIErrorCategory& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIErrorCategory::isSet() const {
    
    return m_value_isSet;
}

bool OAIErrorCategory::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
