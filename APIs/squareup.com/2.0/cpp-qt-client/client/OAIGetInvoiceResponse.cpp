/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetInvoiceResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetInvoiceResponse::OAIGetInvoiceResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetInvoiceResponse::OAIGetInvoiceResponse() {
    this->initializeModel();
}

OAIGetInvoiceResponse::~OAIGetInvoiceResponse() {}

void OAIGetInvoiceResponse::initializeModel() {

    m_errors_isSet = false;
    m_errors_isValid = false;

    m_invoice_isSet = false;
    m_invoice_isValid = false;
}

void OAIGetInvoiceResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetInvoiceResponse::fromJsonObject(QJsonObject json) {

    m_errors_isValid = ::OpenAPI::fromJsonValue(m_errors, json[QString("errors")]);
    m_errors_isSet = !json[QString("errors")].isNull() && m_errors_isValid;

    m_invoice_isValid = ::OpenAPI::fromJsonValue(m_invoice, json[QString("invoice")]);
    m_invoice_isSet = !json[QString("invoice")].isNull() && m_invoice_isValid;
}

QString OAIGetInvoiceResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetInvoiceResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_errors.size() > 0) {
        obj.insert(QString("errors"), ::OpenAPI::toJsonValue(m_errors));
    }
    if (m_invoice.isSet()) {
        obj.insert(QString("invoice"), ::OpenAPI::toJsonValue(m_invoice));
    }
    return obj;
}

QList<OAIError> OAIGetInvoiceResponse::getErrors() const {
    return m_errors;
}
void OAIGetInvoiceResponse::setErrors(const QList<OAIError> &errors) {
    m_errors = errors;
    m_errors_isSet = true;
}

bool OAIGetInvoiceResponse::is_errors_Set() const{
    return m_errors_isSet;
}

bool OAIGetInvoiceResponse::is_errors_Valid() const{
    return m_errors_isValid;
}

OAIInvoice OAIGetInvoiceResponse::getInvoice() const {
    return m_invoice;
}
void OAIGetInvoiceResponse::setInvoice(const OAIInvoice &invoice) {
    m_invoice = invoice;
    m_invoice_isSet = true;
}

bool OAIGetInvoiceResponse::is_invoice_Set() const{
    return m_invoice_isSet;
}

bool OAIGetInvoiceResponse::is_invoice_Valid() const{
    return m_invoice_isValid;
}

bool OAIGetInvoiceResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_errors.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetInvoiceResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
