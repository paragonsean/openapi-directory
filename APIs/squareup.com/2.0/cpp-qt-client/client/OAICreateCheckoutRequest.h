/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateCheckoutRequest.h
 *
 * Defines the parameters that can be included in the body of a request to the &#x60;CreateCheckout&#x60; endpoint.
 */

#ifndef OAICreateCheckoutRequest_H
#define OAICreateCheckoutRequest_H

#include <QJsonObject>

#include "OAIAddress.h"
#include "OAIChargeRequestAdditionalRecipient.h"
#include "OAICreateOrderRequest.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIChargeRequestAdditionalRecipient;
class OAICreateOrderRequest;
class OAIAddress;

class OAICreateCheckoutRequest : public OAIObject {
public:
    OAICreateCheckoutRequest();
    OAICreateCheckoutRequest(QString json);
    ~OAICreateCheckoutRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIChargeRequestAdditionalRecipient> getAdditionalRecipients() const;
    void setAdditionalRecipients(const QList<OAIChargeRequestAdditionalRecipient> &additional_recipients);
    bool is_additional_recipients_Set() const;
    bool is_additional_recipients_Valid() const;

    bool isAskForShippingAddress() const;
    void setAskForShippingAddress(const bool &ask_for_shipping_address);
    bool is_ask_for_shipping_address_Set() const;
    bool is_ask_for_shipping_address_Valid() const;

    QString getIdempotencyKey() const;
    void setIdempotencyKey(const QString &idempotency_key);
    bool is_idempotency_key_Set() const;
    bool is_idempotency_key_Valid() const;

    QString getMerchantSupportEmail() const;
    void setMerchantSupportEmail(const QString &merchant_support_email);
    bool is_merchant_support_email_Set() const;
    bool is_merchant_support_email_Valid() const;

    QString getNote() const;
    void setNote(const QString &note);
    bool is_note_Set() const;
    bool is_note_Valid() const;

    OAICreateOrderRequest getOrder() const;
    void setOrder(const OAICreateOrderRequest &order);
    bool is_order_Set() const;
    bool is_order_Valid() const;

    QString getPrePopulateBuyerEmail() const;
    void setPrePopulateBuyerEmail(const QString &pre_populate_buyer_email);
    bool is_pre_populate_buyer_email_Set() const;
    bool is_pre_populate_buyer_email_Valid() const;

    OAIAddress getPrePopulateShippingAddress() const;
    void setPrePopulateShippingAddress(const OAIAddress &pre_populate_shipping_address);
    bool is_pre_populate_shipping_address_Set() const;
    bool is_pre_populate_shipping_address_Valid() const;

    QString getRedirectUrl() const;
    void setRedirectUrl(const QString &redirect_url);
    bool is_redirect_url_Set() const;
    bool is_redirect_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIChargeRequestAdditionalRecipient> m_additional_recipients;
    bool m_additional_recipients_isSet;
    bool m_additional_recipients_isValid;

    bool m_ask_for_shipping_address;
    bool m_ask_for_shipping_address_isSet;
    bool m_ask_for_shipping_address_isValid;

    QString m_idempotency_key;
    bool m_idempotency_key_isSet;
    bool m_idempotency_key_isValid;

    QString m_merchant_support_email;
    bool m_merchant_support_email_isSet;
    bool m_merchant_support_email_isValid;

    QString m_note;
    bool m_note_isSet;
    bool m_note_isValid;

    OAICreateOrderRequest m_order;
    bool m_order_isSet;
    bool m_order_isValid;

    QString m_pre_populate_buyer_email;
    bool m_pre_populate_buyer_email_isSet;
    bool m_pre_populate_buyer_email_isValid;

    OAIAddress m_pre_populate_shipping_address;
    bool m_pre_populate_shipping_address_isSet;
    bool m_pre_populate_shipping_address_isValid;

    QString m_redirect_url;
    bool m_redirect_url_isSet;
    bool m_redirect_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateCheckoutRequest)

#endif // OAICreateCheckoutRequest_H
