/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIV1PaymentItemDetail.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIV1PaymentItemDetail::OAIV1PaymentItemDetail(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIV1PaymentItemDetail::OAIV1PaymentItemDetail() {
    this->initializeModel();
}

OAIV1PaymentItemDetail::~OAIV1PaymentItemDetail() {}

void OAIV1PaymentItemDetail::initializeModel() {

    m_category_name_isSet = false;
    m_category_name_isValid = false;

    m_item_id_isSet = false;
    m_item_id_isValid = false;

    m_item_variation_id_isSet = false;
    m_item_variation_id_isValid = false;

    m_sku_isSet = false;
    m_sku_isValid = false;
}

void OAIV1PaymentItemDetail::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIV1PaymentItemDetail::fromJsonObject(QJsonObject json) {

    m_category_name_isValid = ::OpenAPI::fromJsonValue(m_category_name, json[QString("category_name")]);
    m_category_name_isSet = !json[QString("category_name")].isNull() && m_category_name_isValid;

    m_item_id_isValid = ::OpenAPI::fromJsonValue(m_item_id, json[QString("item_id")]);
    m_item_id_isSet = !json[QString("item_id")].isNull() && m_item_id_isValid;

    m_item_variation_id_isValid = ::OpenAPI::fromJsonValue(m_item_variation_id, json[QString("item_variation_id")]);
    m_item_variation_id_isSet = !json[QString("item_variation_id")].isNull() && m_item_variation_id_isValid;

    m_sku_isValid = ::OpenAPI::fromJsonValue(m_sku, json[QString("sku")]);
    m_sku_isSet = !json[QString("sku")].isNull() && m_sku_isValid;
}

QString OAIV1PaymentItemDetail::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIV1PaymentItemDetail::asJsonObject() const {
    QJsonObject obj;
    if (m_category_name_isSet) {
        obj.insert(QString("category_name"), ::OpenAPI::toJsonValue(m_category_name));
    }
    if (m_item_id_isSet) {
        obj.insert(QString("item_id"), ::OpenAPI::toJsonValue(m_item_id));
    }
    if (m_item_variation_id_isSet) {
        obj.insert(QString("item_variation_id"), ::OpenAPI::toJsonValue(m_item_variation_id));
    }
    if (m_sku_isSet) {
        obj.insert(QString("sku"), ::OpenAPI::toJsonValue(m_sku));
    }
    return obj;
}

QString OAIV1PaymentItemDetail::getCategoryName() const {
    return m_category_name;
}
void OAIV1PaymentItemDetail::setCategoryName(const QString &category_name) {
    m_category_name = category_name;
    m_category_name_isSet = true;
}

bool OAIV1PaymentItemDetail::is_category_name_Set() const{
    return m_category_name_isSet;
}

bool OAIV1PaymentItemDetail::is_category_name_Valid() const{
    return m_category_name_isValid;
}

QString OAIV1PaymentItemDetail::getItemId() const {
    return m_item_id;
}
void OAIV1PaymentItemDetail::setItemId(const QString &item_id) {
    m_item_id = item_id;
    m_item_id_isSet = true;
}

bool OAIV1PaymentItemDetail::is_item_id_Set() const{
    return m_item_id_isSet;
}

bool OAIV1PaymentItemDetail::is_item_id_Valid() const{
    return m_item_id_isValid;
}

QString OAIV1PaymentItemDetail::getItemVariationId() const {
    return m_item_variation_id;
}
void OAIV1PaymentItemDetail::setItemVariationId(const QString &item_variation_id) {
    m_item_variation_id = item_variation_id;
    m_item_variation_id_isSet = true;
}

bool OAIV1PaymentItemDetail::is_item_variation_id_Set() const{
    return m_item_variation_id_isSet;
}

bool OAIV1PaymentItemDetail::is_item_variation_id_Valid() const{
    return m_item_variation_id_isValid;
}

QString OAIV1PaymentItemDetail::getSku() const {
    return m_sku;
}
void OAIV1PaymentItemDetail::setSku(const QString &sku) {
    m_sku = sku;
    m_sku_isSet = true;
}

bool OAIV1PaymentItemDetail::is_sku_Set() const{
    return m_sku_isSet;
}

bool OAIV1PaymentItemDetail::is_sku_Valid() const{
    return m_sku_isValid;
}

bool OAIV1PaymentItemDetail::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_category_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_variation_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sku_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIV1PaymentItemDetail::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
