/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrderQuantityUnit.h
 *
 * Contains the measurement unit for a quantity and a precision that specifies the number of digits after the decimal point for decimal quantities.
 */

#ifndef OAIOrderQuantityUnit_H
#define OAIOrderQuantityUnit_H

#include <QJsonObject>

#include "OAIMeasurementUnit.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMeasurementUnit;

class OAIOrderQuantityUnit : public OAIObject {
public:
    OAIOrderQuantityUnit();
    OAIOrderQuantityUnit(QString json);
    ~OAIOrderQuantityUnit() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getCatalogVersion() const;
    void setCatalogVersion(const qint64 &catalog_version);
    bool is_catalog_version_Set() const;
    bool is_catalog_version_Valid() const;

    OAIMeasurementUnit getMeasurementUnit() const;
    void setMeasurementUnit(const OAIMeasurementUnit &measurement_unit);
    bool is_measurement_unit_Set() const;
    bool is_measurement_unit_Valid() const;

    qint32 getPrecision() const;
    void setPrecision(const qint32 &precision);
    bool is_precision_Set() const;
    bool is_precision_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_catalog_version;
    bool m_catalog_version_isSet;
    bool m_catalog_version_isValid;

    OAIMeasurementUnit m_measurement_unit;
    bool m_measurement_unit_isSet;
    bool m_measurement_unit_isValid;

    qint32 m_precision;
    bool m_precision_isSet;
    bool m_precision_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOrderQuantityUnit)

#endif // OAIOrderQuantityUnit_H
