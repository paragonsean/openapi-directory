/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIV1ListEmployeesRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIV1ListEmployeesRequest::OAIV1ListEmployeesRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIV1ListEmployeesRequest::OAIV1ListEmployeesRequest() {
    this->initializeModel();
}

OAIV1ListEmployeesRequest::~OAIV1ListEmployeesRequest() {}

void OAIV1ListEmployeesRequest::initializeModel() {

    m_batch_token_isSet = false;
    m_batch_token_isValid = false;

    m_begin_created_at_isSet = false;
    m_begin_created_at_isValid = false;

    m_begin_updated_at_isSet = false;
    m_begin_updated_at_isValid = false;

    m_end_created_at_isSet = false;
    m_end_created_at_isValid = false;

    m_end_updated_at_isSet = false;
    m_end_updated_at_isValid = false;

    m_external_id_isSet = false;
    m_external_id_isValid = false;

    m_limit_isSet = false;
    m_limit_isValid = false;

    m_order_isSet = false;
    m_order_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIV1ListEmployeesRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIV1ListEmployeesRequest::fromJsonObject(QJsonObject json) {

    m_batch_token_isValid = ::OpenAPI::fromJsonValue(m_batch_token, json[QString("batch_token")]);
    m_batch_token_isSet = !json[QString("batch_token")].isNull() && m_batch_token_isValid;

    m_begin_created_at_isValid = ::OpenAPI::fromJsonValue(m_begin_created_at, json[QString("begin_created_at")]);
    m_begin_created_at_isSet = !json[QString("begin_created_at")].isNull() && m_begin_created_at_isValid;

    m_begin_updated_at_isValid = ::OpenAPI::fromJsonValue(m_begin_updated_at, json[QString("begin_updated_at")]);
    m_begin_updated_at_isSet = !json[QString("begin_updated_at")].isNull() && m_begin_updated_at_isValid;

    m_end_created_at_isValid = ::OpenAPI::fromJsonValue(m_end_created_at, json[QString("end_created_at")]);
    m_end_created_at_isSet = !json[QString("end_created_at")].isNull() && m_end_created_at_isValid;

    m_end_updated_at_isValid = ::OpenAPI::fromJsonValue(m_end_updated_at, json[QString("end_updated_at")]);
    m_end_updated_at_isSet = !json[QString("end_updated_at")].isNull() && m_end_updated_at_isValid;

    m_external_id_isValid = ::OpenAPI::fromJsonValue(m_external_id, json[QString("external_id")]);
    m_external_id_isSet = !json[QString("external_id")].isNull() && m_external_id_isValid;

    m_limit_isValid = ::OpenAPI::fromJsonValue(m_limit, json[QString("limit")]);
    m_limit_isSet = !json[QString("limit")].isNull() && m_limit_isValid;

    m_order_isValid = ::OpenAPI::fromJsonValue(m_order, json[QString("order")]);
    m_order_isSet = !json[QString("order")].isNull() && m_order_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIV1ListEmployeesRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIV1ListEmployeesRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_batch_token_isSet) {
        obj.insert(QString("batch_token"), ::OpenAPI::toJsonValue(m_batch_token));
    }
    if (m_begin_created_at_isSet) {
        obj.insert(QString("begin_created_at"), ::OpenAPI::toJsonValue(m_begin_created_at));
    }
    if (m_begin_updated_at_isSet) {
        obj.insert(QString("begin_updated_at"), ::OpenAPI::toJsonValue(m_begin_updated_at));
    }
    if (m_end_created_at_isSet) {
        obj.insert(QString("end_created_at"), ::OpenAPI::toJsonValue(m_end_created_at));
    }
    if (m_end_updated_at_isSet) {
        obj.insert(QString("end_updated_at"), ::OpenAPI::toJsonValue(m_end_updated_at));
    }
    if (m_external_id_isSet) {
        obj.insert(QString("external_id"), ::OpenAPI::toJsonValue(m_external_id));
    }
    if (m_limit_isSet) {
        obj.insert(QString("limit"), ::OpenAPI::toJsonValue(m_limit));
    }
    if (m_order_isSet) {
        obj.insert(QString("order"), ::OpenAPI::toJsonValue(m_order));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAIV1ListEmployeesRequest::getBatchToken() const {
    return m_batch_token;
}
void OAIV1ListEmployeesRequest::setBatchToken(const QString &batch_token) {
    m_batch_token = batch_token;
    m_batch_token_isSet = true;
}

bool OAIV1ListEmployeesRequest::is_batch_token_Set() const{
    return m_batch_token_isSet;
}

bool OAIV1ListEmployeesRequest::is_batch_token_Valid() const{
    return m_batch_token_isValid;
}

QString OAIV1ListEmployeesRequest::getBeginCreatedAt() const {
    return m_begin_created_at;
}
void OAIV1ListEmployeesRequest::setBeginCreatedAt(const QString &begin_created_at) {
    m_begin_created_at = begin_created_at;
    m_begin_created_at_isSet = true;
}

bool OAIV1ListEmployeesRequest::is_begin_created_at_Set() const{
    return m_begin_created_at_isSet;
}

bool OAIV1ListEmployeesRequest::is_begin_created_at_Valid() const{
    return m_begin_created_at_isValid;
}

QString OAIV1ListEmployeesRequest::getBeginUpdatedAt() const {
    return m_begin_updated_at;
}
void OAIV1ListEmployeesRequest::setBeginUpdatedAt(const QString &begin_updated_at) {
    m_begin_updated_at = begin_updated_at;
    m_begin_updated_at_isSet = true;
}

bool OAIV1ListEmployeesRequest::is_begin_updated_at_Set() const{
    return m_begin_updated_at_isSet;
}

bool OAIV1ListEmployeesRequest::is_begin_updated_at_Valid() const{
    return m_begin_updated_at_isValid;
}

QString OAIV1ListEmployeesRequest::getEndCreatedAt() const {
    return m_end_created_at;
}
void OAIV1ListEmployeesRequest::setEndCreatedAt(const QString &end_created_at) {
    m_end_created_at = end_created_at;
    m_end_created_at_isSet = true;
}

bool OAIV1ListEmployeesRequest::is_end_created_at_Set() const{
    return m_end_created_at_isSet;
}

bool OAIV1ListEmployeesRequest::is_end_created_at_Valid() const{
    return m_end_created_at_isValid;
}

QString OAIV1ListEmployeesRequest::getEndUpdatedAt() const {
    return m_end_updated_at;
}
void OAIV1ListEmployeesRequest::setEndUpdatedAt(const QString &end_updated_at) {
    m_end_updated_at = end_updated_at;
    m_end_updated_at_isSet = true;
}

bool OAIV1ListEmployeesRequest::is_end_updated_at_Set() const{
    return m_end_updated_at_isSet;
}

bool OAIV1ListEmployeesRequest::is_end_updated_at_Valid() const{
    return m_end_updated_at_isValid;
}

QString OAIV1ListEmployeesRequest::getExternalId() const {
    return m_external_id;
}
void OAIV1ListEmployeesRequest::setExternalId(const QString &external_id) {
    m_external_id = external_id;
    m_external_id_isSet = true;
}

bool OAIV1ListEmployeesRequest::is_external_id_Set() const{
    return m_external_id_isSet;
}

bool OAIV1ListEmployeesRequest::is_external_id_Valid() const{
    return m_external_id_isValid;
}

qint32 OAIV1ListEmployeesRequest::getLimit() const {
    return m_limit;
}
void OAIV1ListEmployeesRequest::setLimit(const qint32 &limit) {
    m_limit = limit;
    m_limit_isSet = true;
}

bool OAIV1ListEmployeesRequest::is_limit_Set() const{
    return m_limit_isSet;
}

bool OAIV1ListEmployeesRequest::is_limit_Valid() const{
    return m_limit_isValid;
}

QString OAIV1ListEmployeesRequest::getOrder() const {
    return m_order;
}
void OAIV1ListEmployeesRequest::setOrder(const QString &order) {
    m_order = order;
    m_order_isSet = true;
}

bool OAIV1ListEmployeesRequest::is_order_Set() const{
    return m_order_isSet;
}

bool OAIV1ListEmployeesRequest::is_order_Valid() const{
    return m_order_isValid;
}

QString OAIV1ListEmployeesRequest::getStatus() const {
    return m_status;
}
void OAIV1ListEmployeesRequest::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIV1ListEmployeesRequest::is_status_Set() const{
    return m_status_isSet;
}

bool OAIV1ListEmployeesRequest::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIV1ListEmployeesRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_batch_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_begin_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_begin_updated_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_updated_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_limit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIV1ListEmployeesRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
