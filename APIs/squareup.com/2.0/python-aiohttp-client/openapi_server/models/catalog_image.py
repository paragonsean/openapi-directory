# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CatalogImage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, caption: str=None, name: str=None, url: str=None):
        """CatalogImage - a model defined in OpenAPI

        :param caption: The caption of this CatalogImage.
        :param name: The name of this CatalogImage.
        :param url: The url of this CatalogImage.
        """
        self.openapi_types = {
            'caption': str,
            'name': str,
            'url': str
        }

        self.attribute_map = {
            'caption': 'caption',
            'name': 'name',
            'url': 'url'
        }

        self._caption = caption
        self._name = name
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CatalogImage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CatalogImage of this CatalogImage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def caption(self):
        """Gets the caption of this CatalogImage.

        A caption that describes what is shown in the image. Displayed in the Square Online Store. This is a searchable attribute for use in applicable query filters using the [SearchCatalogObjects](https://developer.squareup.com/reference/square_2021-08-18/catalog-api/search-catalog-objects).

        :return: The caption of this CatalogImage.
        :rtype: str
        """
        return self._caption

    @caption.setter
    def caption(self, caption):
        """Sets the caption of this CatalogImage.

        A caption that describes what is shown in the image. Displayed in the Square Online Store. This is a searchable attribute for use in applicable query filters using the [SearchCatalogObjects](https://developer.squareup.com/reference/square_2021-08-18/catalog-api/search-catalog-objects).

        :param caption: The caption of this CatalogImage.
        :type caption: str
        """

        self._caption = caption

    @property
    def name(self):
        """Gets the name of this CatalogImage.

        The internal name to identify this image in calls to the Square API. This is a searchable attribute for use in applicable query filters using the [SearchCatalogObjects](https://developer.squareup.com/reference/square_2021-08-18/catalog-api/search-catalog-objects). It is not unique and should not be shown in a buyer facing context.

        :return: The name of this CatalogImage.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CatalogImage.

        The internal name to identify this image in calls to the Square API. This is a searchable attribute for use in applicable query filters using the [SearchCatalogObjects](https://developer.squareup.com/reference/square_2021-08-18/catalog-api/search-catalog-objects). It is not unique and should not be shown in a buyer facing context.

        :param name: The name of this CatalogImage.
        :type name: str
        """

        self._name = name

    @property
    def url(self):
        """Gets the url of this CatalogImage.

        The URL of this image, generated by Square after an image is uploaded using the [CreateCatalogImage](https://developer.squareup.com/reference/square_2021-08-18/catalog-api/create-catalog-image) endpoint.

        :return: The url of this CatalogImage.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this CatalogImage.

        The URL of this image, generated by Square after an image is uploaded using the [CreateCatalogImage](https://developer.squareup.com/reference/square_2021-08-18/catalog-api/create-catalog-image) endpoint.

        :param url: The url of this CatalogImage.
        :type url: str
        """

        self._url = url
