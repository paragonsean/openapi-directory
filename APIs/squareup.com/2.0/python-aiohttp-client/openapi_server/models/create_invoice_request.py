# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.invoice import Invoice
from openapi_server import util


class CreateInvoiceRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, idempotency_key: str=None, invoice: Invoice=None):
        """CreateInvoiceRequest - a model defined in OpenAPI

        :param idempotency_key: The idempotency_key of this CreateInvoiceRequest.
        :param invoice: The invoice of this CreateInvoiceRequest.
        """
        self.openapi_types = {
            'idempotency_key': str,
            'invoice': Invoice
        }

        self.attribute_map = {
            'idempotency_key': 'idempotency_key',
            'invoice': 'invoice'
        }

        self._idempotency_key = idempotency_key
        self._invoice = invoice

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateInvoiceRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateInvoiceRequest of this CreateInvoiceRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def idempotency_key(self):
        """Gets the idempotency_key of this CreateInvoiceRequest.

        A unique string that identifies the `CreateInvoice` request. If you do not  provide `idempotency_key` (or provide an empty string as the value), the endpoint  treats each request as independent.  For more information, see [Idempotency](https://developer.squareup.com/docs/working-with-apis/idempotency).

        :return: The idempotency_key of this CreateInvoiceRequest.
        :rtype: str
        """
        return self._idempotency_key

    @idempotency_key.setter
    def idempotency_key(self, idempotency_key):
        """Sets the idempotency_key of this CreateInvoiceRequest.

        A unique string that identifies the `CreateInvoice` request. If you do not  provide `idempotency_key` (or provide an empty string as the value), the endpoint  treats each request as independent.  For more information, see [Idempotency](https://developer.squareup.com/docs/working-with-apis/idempotency).

        :param idempotency_key: The idempotency_key of this CreateInvoiceRequest.
        :type idempotency_key: str
        """
        if idempotency_key is not None and len(idempotency_key) > 128:
            raise ValueError("Invalid value for `idempotency_key`, length must be less than or equal to `128`")

        self._idempotency_key = idempotency_key

    @property
    def invoice(self):
        """Gets the invoice of this CreateInvoiceRequest.


        :return: The invoice of this CreateInvoiceRequest.
        :rtype: Invoice
        """
        return self._invoice

    @invoice.setter
    def invoice(self, invoice):
        """Sets the invoice of this CreateInvoiceRequest.


        :param invoice: The invoice of this CreateInvoiceRequest.
        :type invoice: Invoice
        """
        if invoice is None:
            raise ValueError("Invalid value for `invoice`, must not be `None`")

        self._invoice = invoice
