# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.v1_money import V1Money
from openapi_server.models.v1_payment_surcharge import V1PaymentSurcharge
from openapi_server.models.v1_payment_tax import V1PaymentTax
from openapi_server import util


class V1Refund(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: str=None, is_exchange: bool=None, merchant_id: str=None, payment_id: str=None, processed_at: str=None, reason: str=None, refunded_additive_tax: List[V1PaymentTax]=None, refunded_additive_tax_money: V1Money=None, refunded_discount_money: V1Money=None, refunded_inclusive_tax: List[V1PaymentTax]=None, refunded_inclusive_tax_money: V1Money=None, refunded_money: V1Money=None, refunded_processing_fee_money: V1Money=None, refunded_surcharge_money: V1Money=None, refunded_surcharges: List[V1PaymentSurcharge]=None, refunded_tax_money: V1Money=None, refunded_tip_money: V1Money=None, type: str=None):
        """V1Refund - a model defined in OpenAPI

        :param created_at: The created_at of this V1Refund.
        :param is_exchange: The is_exchange of this V1Refund.
        :param merchant_id: The merchant_id of this V1Refund.
        :param payment_id: The payment_id of this V1Refund.
        :param processed_at: The processed_at of this V1Refund.
        :param reason: The reason of this V1Refund.
        :param refunded_additive_tax: The refunded_additive_tax of this V1Refund.
        :param refunded_additive_tax_money: The refunded_additive_tax_money of this V1Refund.
        :param refunded_discount_money: The refunded_discount_money of this V1Refund.
        :param refunded_inclusive_tax: The refunded_inclusive_tax of this V1Refund.
        :param refunded_inclusive_tax_money: The refunded_inclusive_tax_money of this V1Refund.
        :param refunded_money: The refunded_money of this V1Refund.
        :param refunded_processing_fee_money: The refunded_processing_fee_money of this V1Refund.
        :param refunded_surcharge_money: The refunded_surcharge_money of this V1Refund.
        :param refunded_surcharges: The refunded_surcharges of this V1Refund.
        :param refunded_tax_money: The refunded_tax_money of this V1Refund.
        :param refunded_tip_money: The refunded_tip_money of this V1Refund.
        :param type: The type of this V1Refund.
        """
        self.openapi_types = {
            'created_at': str,
            'is_exchange': bool,
            'merchant_id': str,
            'payment_id': str,
            'processed_at': str,
            'reason': str,
            'refunded_additive_tax': List[V1PaymentTax],
            'refunded_additive_tax_money': V1Money,
            'refunded_discount_money': V1Money,
            'refunded_inclusive_tax': List[V1PaymentTax],
            'refunded_inclusive_tax_money': V1Money,
            'refunded_money': V1Money,
            'refunded_processing_fee_money': V1Money,
            'refunded_surcharge_money': V1Money,
            'refunded_surcharges': List[V1PaymentSurcharge],
            'refunded_tax_money': V1Money,
            'refunded_tip_money': V1Money,
            'type': str
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'is_exchange': 'is_exchange',
            'merchant_id': 'merchant_id',
            'payment_id': 'payment_id',
            'processed_at': 'processed_at',
            'reason': 'reason',
            'refunded_additive_tax': 'refunded_additive_tax',
            'refunded_additive_tax_money': 'refunded_additive_tax_money',
            'refunded_discount_money': 'refunded_discount_money',
            'refunded_inclusive_tax': 'refunded_inclusive_tax',
            'refunded_inclusive_tax_money': 'refunded_inclusive_tax_money',
            'refunded_money': 'refunded_money',
            'refunded_processing_fee_money': 'refunded_processing_fee_money',
            'refunded_surcharge_money': 'refunded_surcharge_money',
            'refunded_surcharges': 'refunded_surcharges',
            'refunded_tax_money': 'refunded_tax_money',
            'refunded_tip_money': 'refunded_tip_money',
            'type': 'type'
        }

        self._created_at = created_at
        self._is_exchange = is_exchange
        self._merchant_id = merchant_id
        self._payment_id = payment_id
        self._processed_at = processed_at
        self._reason = reason
        self._refunded_additive_tax = refunded_additive_tax
        self._refunded_additive_tax_money = refunded_additive_tax_money
        self._refunded_discount_money = refunded_discount_money
        self._refunded_inclusive_tax = refunded_inclusive_tax
        self._refunded_inclusive_tax_money = refunded_inclusive_tax_money
        self._refunded_money = refunded_money
        self._refunded_processing_fee_money = refunded_processing_fee_money
        self._refunded_surcharge_money = refunded_surcharge_money
        self._refunded_surcharges = refunded_surcharges
        self._refunded_tax_money = refunded_tax_money
        self._refunded_tip_money = refunded_tip_money
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'V1Refund':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The V1Refund of this V1Refund.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this V1Refund.

        The time when the merchant initiated the refund for Square to process, in ISO 8601 format.

        :return: The created_at of this V1Refund.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this V1Refund.

        The time when the merchant initiated the refund for Square to process, in ISO 8601 format.

        :param created_at: The created_at of this V1Refund.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def is_exchange(self):
        """Gets the is_exchange of this V1Refund.

        Indicates whether or not the refund is associated with an exchange. If is_exchange is true, the refund reflects the value of goods returned in the exchange not the total money refunded.

        :return: The is_exchange of this V1Refund.
        :rtype: bool
        """
        return self._is_exchange

    @is_exchange.setter
    def is_exchange(self, is_exchange):
        """Sets the is_exchange of this V1Refund.

        Indicates whether or not the refund is associated with an exchange. If is_exchange is true, the refund reflects the value of goods returned in the exchange not the total money refunded.

        :param is_exchange: The is_exchange of this V1Refund.
        :type is_exchange: bool
        """

        self._is_exchange = is_exchange

    @property
    def merchant_id(self):
        """Gets the merchant_id of this V1Refund.

        

        :return: The merchant_id of this V1Refund.
        :rtype: str
        """
        return self._merchant_id

    @merchant_id.setter
    def merchant_id(self, merchant_id):
        """Sets the merchant_id of this V1Refund.

        

        :param merchant_id: The merchant_id of this V1Refund.
        :type merchant_id: str
        """

        self._merchant_id = merchant_id

    @property
    def payment_id(self):
        """Gets the payment_id of this V1Refund.

        A Square-issued ID associated with the refund. For single-tender refunds, payment_id is the ID of the original payment ID. For split-tender refunds, payment_id is the ID of the original tender. For exchange-based refunds (is_exchange == true), payment_id is the ID of the original payment ID even if the payment includes other tenders.

        :return: The payment_id of this V1Refund.
        :rtype: str
        """
        return self._payment_id

    @payment_id.setter
    def payment_id(self, payment_id):
        """Sets the payment_id of this V1Refund.

        A Square-issued ID associated with the refund. For single-tender refunds, payment_id is the ID of the original payment ID. For split-tender refunds, payment_id is the ID of the original tender. For exchange-based refunds (is_exchange == true), payment_id is the ID of the original payment ID even if the payment includes other tenders.

        :param payment_id: The payment_id of this V1Refund.
        :type payment_id: str
        """

        self._payment_id = payment_id

    @property
    def processed_at(self):
        """Gets the processed_at of this V1Refund.

        The time when Square processed the refund on behalf of the merchant, in ISO 8601 format.

        :return: The processed_at of this V1Refund.
        :rtype: str
        """
        return self._processed_at

    @processed_at.setter
    def processed_at(self, processed_at):
        """Sets the processed_at of this V1Refund.

        The time when Square processed the refund on behalf of the merchant, in ISO 8601 format.

        :param processed_at: The processed_at of this V1Refund.
        :type processed_at: str
        """

        self._processed_at = processed_at

    @property
    def reason(self):
        """Gets the reason of this V1Refund.

        The merchant-specified reason for the refund.

        :return: The reason of this V1Refund.
        :rtype: str
        """
        return self._reason

    @reason.setter
    def reason(self, reason):
        """Sets the reason of this V1Refund.

        The merchant-specified reason for the refund.

        :param reason: The reason of this V1Refund.
        :type reason: str
        """

        self._reason = reason

    @property
    def refunded_additive_tax(self):
        """Gets the refunded_additive_tax of this V1Refund.

        All of the additive taxes associated with the refund.

        :return: The refunded_additive_tax of this V1Refund.
        :rtype: List[V1PaymentTax]
        """
        return self._refunded_additive_tax

    @refunded_additive_tax.setter
    def refunded_additive_tax(self, refunded_additive_tax):
        """Sets the refunded_additive_tax of this V1Refund.

        All of the additive taxes associated with the refund.

        :param refunded_additive_tax: The refunded_additive_tax of this V1Refund.
        :type refunded_additive_tax: List[V1PaymentTax]
        """

        self._refunded_additive_tax = refunded_additive_tax

    @property
    def refunded_additive_tax_money(self):
        """Gets the refunded_additive_tax_money of this V1Refund.


        :return: The refunded_additive_tax_money of this V1Refund.
        :rtype: V1Money
        """
        return self._refunded_additive_tax_money

    @refunded_additive_tax_money.setter
    def refunded_additive_tax_money(self, refunded_additive_tax_money):
        """Sets the refunded_additive_tax_money of this V1Refund.


        :param refunded_additive_tax_money: The refunded_additive_tax_money of this V1Refund.
        :type refunded_additive_tax_money: V1Money
        """

        self._refunded_additive_tax_money = refunded_additive_tax_money

    @property
    def refunded_discount_money(self):
        """Gets the refunded_discount_money of this V1Refund.


        :return: The refunded_discount_money of this V1Refund.
        :rtype: V1Money
        """
        return self._refunded_discount_money

    @refunded_discount_money.setter
    def refunded_discount_money(self, refunded_discount_money):
        """Sets the refunded_discount_money of this V1Refund.


        :param refunded_discount_money: The refunded_discount_money of this V1Refund.
        :type refunded_discount_money: V1Money
        """

        self._refunded_discount_money = refunded_discount_money

    @property
    def refunded_inclusive_tax(self):
        """Gets the refunded_inclusive_tax of this V1Refund.

        All of the inclusive taxes associated with the refund.

        :return: The refunded_inclusive_tax of this V1Refund.
        :rtype: List[V1PaymentTax]
        """
        return self._refunded_inclusive_tax

    @refunded_inclusive_tax.setter
    def refunded_inclusive_tax(self, refunded_inclusive_tax):
        """Sets the refunded_inclusive_tax of this V1Refund.

        All of the inclusive taxes associated with the refund.

        :param refunded_inclusive_tax: The refunded_inclusive_tax of this V1Refund.
        :type refunded_inclusive_tax: List[V1PaymentTax]
        """

        self._refunded_inclusive_tax = refunded_inclusive_tax

    @property
    def refunded_inclusive_tax_money(self):
        """Gets the refunded_inclusive_tax_money of this V1Refund.


        :return: The refunded_inclusive_tax_money of this V1Refund.
        :rtype: V1Money
        """
        return self._refunded_inclusive_tax_money

    @refunded_inclusive_tax_money.setter
    def refunded_inclusive_tax_money(self, refunded_inclusive_tax_money):
        """Sets the refunded_inclusive_tax_money of this V1Refund.


        :param refunded_inclusive_tax_money: The refunded_inclusive_tax_money of this V1Refund.
        :type refunded_inclusive_tax_money: V1Money
        """

        self._refunded_inclusive_tax_money = refunded_inclusive_tax_money

    @property
    def refunded_money(self):
        """Gets the refunded_money of this V1Refund.


        :return: The refunded_money of this V1Refund.
        :rtype: V1Money
        """
        return self._refunded_money

    @refunded_money.setter
    def refunded_money(self, refunded_money):
        """Sets the refunded_money of this V1Refund.


        :param refunded_money: The refunded_money of this V1Refund.
        :type refunded_money: V1Money
        """

        self._refunded_money = refunded_money

    @property
    def refunded_processing_fee_money(self):
        """Gets the refunded_processing_fee_money of this V1Refund.


        :return: The refunded_processing_fee_money of this V1Refund.
        :rtype: V1Money
        """
        return self._refunded_processing_fee_money

    @refunded_processing_fee_money.setter
    def refunded_processing_fee_money(self, refunded_processing_fee_money):
        """Sets the refunded_processing_fee_money of this V1Refund.


        :param refunded_processing_fee_money: The refunded_processing_fee_money of this V1Refund.
        :type refunded_processing_fee_money: V1Money
        """

        self._refunded_processing_fee_money = refunded_processing_fee_money

    @property
    def refunded_surcharge_money(self):
        """Gets the refunded_surcharge_money of this V1Refund.


        :return: The refunded_surcharge_money of this V1Refund.
        :rtype: V1Money
        """
        return self._refunded_surcharge_money

    @refunded_surcharge_money.setter
    def refunded_surcharge_money(self, refunded_surcharge_money):
        """Sets the refunded_surcharge_money of this V1Refund.


        :param refunded_surcharge_money: The refunded_surcharge_money of this V1Refund.
        :type refunded_surcharge_money: V1Money
        """

        self._refunded_surcharge_money = refunded_surcharge_money

    @property
    def refunded_surcharges(self):
        """Gets the refunded_surcharges of this V1Refund.

        A list of all surcharges associated with the refund.

        :return: The refunded_surcharges of this V1Refund.
        :rtype: List[V1PaymentSurcharge]
        """
        return self._refunded_surcharges

    @refunded_surcharges.setter
    def refunded_surcharges(self, refunded_surcharges):
        """Sets the refunded_surcharges of this V1Refund.

        A list of all surcharges associated with the refund.

        :param refunded_surcharges: The refunded_surcharges of this V1Refund.
        :type refunded_surcharges: List[V1PaymentSurcharge]
        """

        self._refunded_surcharges = refunded_surcharges

    @property
    def refunded_tax_money(self):
        """Gets the refunded_tax_money of this V1Refund.


        :return: The refunded_tax_money of this V1Refund.
        :rtype: V1Money
        """
        return self._refunded_tax_money

    @refunded_tax_money.setter
    def refunded_tax_money(self, refunded_tax_money):
        """Sets the refunded_tax_money of this V1Refund.


        :param refunded_tax_money: The refunded_tax_money of this V1Refund.
        :type refunded_tax_money: V1Money
        """

        self._refunded_tax_money = refunded_tax_money

    @property
    def refunded_tip_money(self):
        """Gets the refunded_tip_money of this V1Refund.


        :return: The refunded_tip_money of this V1Refund.
        :rtype: V1Money
        """
        return self._refunded_tip_money

    @refunded_tip_money.setter
    def refunded_tip_money(self, refunded_tip_money):
        """Sets the refunded_tip_money of this V1Refund.


        :param refunded_tip_money: The refunded_tip_money of this V1Refund.
        :type refunded_tip_money: V1Money
        """

        self._refunded_tip_money = refunded_tip_money

    @property
    def type(self):
        """Gets the type of this V1Refund.

        The type of refund

        :return: The type of this V1Refund.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this V1Refund.

        The type of refund

        :param type: The type of this V1Refund.
        :type type: str
        """

        self._type = type
