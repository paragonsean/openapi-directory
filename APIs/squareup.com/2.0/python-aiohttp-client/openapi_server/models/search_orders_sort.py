# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SearchOrdersSort(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sort_field: str=None, sort_order: str=None):
        """SearchOrdersSort - a model defined in OpenAPI

        :param sort_field: The sort_field of this SearchOrdersSort.
        :param sort_order: The sort_order of this SearchOrdersSort.
        """
        self.openapi_types = {
            'sort_field': str,
            'sort_order': str
        }

        self.attribute_map = {
            'sort_field': 'sort_field',
            'sort_order': 'sort_order'
        }

        self._sort_field = sort_field
        self._sort_order = sort_order

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SearchOrdersSort':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SearchOrdersSort of this SearchOrdersSort.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sort_field(self):
        """Gets the sort_field of this SearchOrdersSort.

        The field to sort by.  __Important:__ When using a [DateTimeFilter](https://developer.squareup.com/reference/square_2021-08-18/objects/SearchOrdersFilter), `sort_field` must match the timestamp field that the `DateTimeFilter` uses to filter. For example, if you set your `sort_field` to `CLOSED_AT` and you use a `DateTimeFilter`, your `DateTimeFilter` must filter for orders by their `CLOSED_AT` date. If this field does not match the timestamp field in `DateTimeFilter`, `SearchOrders` returns an error.  Default: `CREATED_AT`.

        :return: The sort_field of this SearchOrdersSort.
        :rtype: str
        """
        return self._sort_field

    @sort_field.setter
    def sort_field(self, sort_field):
        """Sets the sort_field of this SearchOrdersSort.

        The field to sort by.  __Important:__ When using a [DateTimeFilter](https://developer.squareup.com/reference/square_2021-08-18/objects/SearchOrdersFilter), `sort_field` must match the timestamp field that the `DateTimeFilter` uses to filter. For example, if you set your `sort_field` to `CLOSED_AT` and you use a `DateTimeFilter`, your `DateTimeFilter` must filter for orders by their `CLOSED_AT` date. If this field does not match the timestamp field in `DateTimeFilter`, `SearchOrders` returns an error.  Default: `CREATED_AT`.

        :param sort_field: The sort_field of this SearchOrdersSort.
        :type sort_field: str
        """
        if sort_field is None:
            raise ValueError("Invalid value for `sort_field`, must not be `None`")

        self._sort_field = sort_field

    @property
    def sort_order(self):
        """Gets the sort_order of this SearchOrdersSort.

        The chronological order in which results are returned. Defaults to `DESC`.

        :return: The sort_order of this SearchOrdersSort.
        :rtype: str
        """
        return self._sort_order

    @sort_order.setter
    def sort_order(self, sort_order):
        """Sets the sort_order of this SearchOrdersSort.

        The chronological order in which results are returned. Defaults to `DESC`.

        :param sort_order: The sort_order of this SearchOrdersSort.
        :type sort_order: str
        """

        self._sort_order = sort_order
