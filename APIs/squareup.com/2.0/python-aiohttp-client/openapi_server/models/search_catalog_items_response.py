# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.catalog_object import CatalogObject
from openapi_server.models.error import Error
from openapi_server import util


class SearchCatalogItemsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cursor: str=None, errors: List[Error]=None, items: List[CatalogObject]=None, matched_variation_ids: List[str]=None):
        """SearchCatalogItemsResponse - a model defined in OpenAPI

        :param cursor: The cursor of this SearchCatalogItemsResponse.
        :param errors: The errors of this SearchCatalogItemsResponse.
        :param items: The items of this SearchCatalogItemsResponse.
        :param matched_variation_ids: The matched_variation_ids of this SearchCatalogItemsResponse.
        """
        self.openapi_types = {
            'cursor': str,
            'errors': List[Error],
            'items': List[CatalogObject],
            'matched_variation_ids': List[str]
        }

        self.attribute_map = {
            'cursor': 'cursor',
            'errors': 'errors',
            'items': 'items',
            'matched_variation_ids': 'matched_variation_ids'
        }

        self._cursor = cursor
        self._errors = errors
        self._items = items
        self._matched_variation_ids = matched_variation_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SearchCatalogItemsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SearchCatalogItemsResponse of this SearchCatalogItemsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cursor(self):
        """Gets the cursor of this SearchCatalogItemsResponse.

        Pagination token used in the next request to return more of the search result.

        :return: The cursor of this SearchCatalogItemsResponse.
        :rtype: str
        """
        return self._cursor

    @cursor.setter
    def cursor(self, cursor):
        """Sets the cursor of this SearchCatalogItemsResponse.

        Pagination token used in the next request to return more of the search result.

        :param cursor: The cursor of this SearchCatalogItemsResponse.
        :type cursor: str
        """

        self._cursor = cursor

    @property
    def errors(self):
        """Gets the errors of this SearchCatalogItemsResponse.

        Any errors that occurred during the request.

        :return: The errors of this SearchCatalogItemsResponse.
        :rtype: List[Error]
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this SearchCatalogItemsResponse.

        Any errors that occurred during the request.

        :param errors: The errors of this SearchCatalogItemsResponse.
        :type errors: List[Error]
        """

        self._errors = errors

    @property
    def items(self):
        """Gets the items of this SearchCatalogItemsResponse.

        Returned items matching the specified query expressions.

        :return: The items of this SearchCatalogItemsResponse.
        :rtype: List[CatalogObject]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this SearchCatalogItemsResponse.

        Returned items matching the specified query expressions.

        :param items: The items of this SearchCatalogItemsResponse.
        :type items: List[CatalogObject]
        """

        self._items = items

    @property
    def matched_variation_ids(self):
        """Gets the matched_variation_ids of this SearchCatalogItemsResponse.

        Ids of returned item variations matching the specified query expression.

        :return: The matched_variation_ids of this SearchCatalogItemsResponse.
        :rtype: List[str]
        """
        return self._matched_variation_ids

    @matched_variation_ids.setter
    def matched_variation_ids(self, matched_variation_ids):
        """Sets the matched_variation_ids of this SearchCatalogItemsResponse.

        Ids of returned item variations matching the specified query expression.

        :param matched_variation_ids: The matched_variation_ids of this SearchCatalogItemsResponse.
        :type matched_variation_ids: List[str]
        """

        self._matched_variation_ids = matched_variation_ids
