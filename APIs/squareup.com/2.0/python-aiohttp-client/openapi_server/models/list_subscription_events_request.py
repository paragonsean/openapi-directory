# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListSubscriptionEventsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cursor: str=None, limit: int=None):
        """ListSubscriptionEventsRequest - a model defined in OpenAPI

        :param cursor: The cursor of this ListSubscriptionEventsRequest.
        :param limit: The limit of this ListSubscriptionEventsRequest.
        """
        self.openapi_types = {
            'cursor': str,
            'limit': int
        }

        self.attribute_map = {
            'cursor': 'cursor',
            'limit': 'limit'
        }

        self._cursor = cursor
        self._limit = limit

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListSubscriptionEventsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListSubscriptionEventsRequest of this ListSubscriptionEventsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cursor(self):
        """Gets the cursor of this ListSubscriptionEventsRequest.

        A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for the original query.  For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination).

        :return: The cursor of this ListSubscriptionEventsRequest.
        :rtype: str
        """
        return self._cursor

    @cursor.setter
    def cursor(self, cursor):
        """Sets the cursor of this ListSubscriptionEventsRequest.

        A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for the original query.  For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination).

        :param cursor: The cursor of this ListSubscriptionEventsRequest.
        :type cursor: str
        """

        self._cursor = cursor

    @property
    def limit(self):
        """Gets the limit of this ListSubscriptionEventsRequest.

        The upper limit on the number of subscription events to return in the response.  Default: `200`

        :return: The limit of this ListSubscriptionEventsRequest.
        :rtype: int
        """
        return self._limit

    @limit.setter
    def limit(self, limit):
        """Sets the limit of this ListSubscriptionEventsRequest.

        The upper limit on the number of subscription events to return in the response.  Default: `200`

        :param limit: The limit of this ListSubscriptionEventsRequest.
        :type limit: int
        """
        if limit is not None and limit < 1:
            raise ValueError("Invalid value for `limit`, must be a value greater than or equal to `1`")

        self._limit = limit
