# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CatalogObjectType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    ITEM = 'ITEM'
    IMAGE = 'IMAGE'
    CATEGORY = 'CATEGORY'
    ITEM_VARIATION = 'ITEM_VARIATION'
    TAX = 'TAX'
    DISCOUNT = 'DISCOUNT'
    MODIFIER_LIST = 'MODIFIER_LIST'
    MODIFIER = 'MODIFIER'
    PRICING_RULE = 'PRICING_RULE'
    PRODUCT_SET = 'PRODUCT_SET'
    TIME_PERIOD = 'TIME_PERIOD'
    MEASUREMENT_UNIT = 'MEASUREMENT_UNIT'
    SUBSCRIPTION_PLAN = 'SUBSCRIPTION_PLAN'
    ITEM_OPTION = 'ITEM_OPTION'
    ITEM_OPTION_VAL = 'ITEM_OPTION_VAL'
    CUSTOM_ATTRIBUTE_DEFINITION = 'CUSTOM_ATTRIBUTE_DEFINITION'
    QUICK_AMOUNTS_SETTINGS = 'QUICK_AMOUNTS_SETTINGS'

    def __init__(self):
        """CatalogObjectType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CatalogObjectType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CatalogObjectType of this CatalogObjectType.
        """
        return util.deserialize_model(dikt, cls)
