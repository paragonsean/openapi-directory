# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.address import Address
from openapi_server import util


class CreateCustomerRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: Address=None, birthday: str=None, company_name: str=None, email_address: str=None, family_name: str=None, given_name: str=None, idempotency_key: str=None, nickname: str=None, note: str=None, phone_number: str=None, reference_id: str=None):
        """CreateCustomerRequest - a model defined in OpenAPI

        :param address: The address of this CreateCustomerRequest.
        :param birthday: The birthday of this CreateCustomerRequest.
        :param company_name: The company_name of this CreateCustomerRequest.
        :param email_address: The email_address of this CreateCustomerRequest.
        :param family_name: The family_name of this CreateCustomerRequest.
        :param given_name: The given_name of this CreateCustomerRequest.
        :param idempotency_key: The idempotency_key of this CreateCustomerRequest.
        :param nickname: The nickname of this CreateCustomerRequest.
        :param note: The note of this CreateCustomerRequest.
        :param phone_number: The phone_number of this CreateCustomerRequest.
        :param reference_id: The reference_id of this CreateCustomerRequest.
        """
        self.openapi_types = {
            'address': Address,
            'birthday': str,
            'company_name': str,
            'email_address': str,
            'family_name': str,
            'given_name': str,
            'idempotency_key': str,
            'nickname': str,
            'note': str,
            'phone_number': str,
            'reference_id': str
        }

        self.attribute_map = {
            'address': 'address',
            'birthday': 'birthday',
            'company_name': 'company_name',
            'email_address': 'email_address',
            'family_name': 'family_name',
            'given_name': 'given_name',
            'idempotency_key': 'idempotency_key',
            'nickname': 'nickname',
            'note': 'note',
            'phone_number': 'phone_number',
            'reference_id': 'reference_id'
        }

        self._address = address
        self._birthday = birthday
        self._company_name = company_name
        self._email_address = email_address
        self._family_name = family_name
        self._given_name = given_name
        self._idempotency_key = idempotency_key
        self._nickname = nickname
        self._note = note
        self._phone_number = phone_number
        self._reference_id = reference_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateCustomerRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateCustomerRequest of this CreateCustomerRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this CreateCustomerRequest.


        :return: The address of this CreateCustomerRequest.
        :rtype: Address
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this CreateCustomerRequest.


        :param address: The address of this CreateCustomerRequest.
        :type address: Address
        """

        self._address = address

    @property
    def birthday(self):
        """Gets the birthday of this CreateCustomerRequest.

        The birthday associated with the customer profile, in RFC 3339 format. The year is optional. The timezone and time are not allowed. For example, `0000-09-21T00:00:00-00:00` represents a birthday on September 21 and `1998-09-21T00:00:00-00:00` represents a birthday on September 21, 1998. You can also specify this value in `YYYY-MM-DD` format.

        :return: The birthday of this CreateCustomerRequest.
        :rtype: str
        """
        return self._birthday

    @birthday.setter
    def birthday(self, birthday):
        """Sets the birthday of this CreateCustomerRequest.

        The birthday associated with the customer profile, in RFC 3339 format. The year is optional. The timezone and time are not allowed. For example, `0000-09-21T00:00:00-00:00` represents a birthday on September 21 and `1998-09-21T00:00:00-00:00` represents a birthday on September 21, 1998. You can also specify this value in `YYYY-MM-DD` format.

        :param birthday: The birthday of this CreateCustomerRequest.
        :type birthday: str
        """

        self._birthday = birthday

    @property
    def company_name(self):
        """Gets the company_name of this CreateCustomerRequest.

        A business name associated with the customer profile.

        :return: The company_name of this CreateCustomerRequest.
        :rtype: str
        """
        return self._company_name

    @company_name.setter
    def company_name(self, company_name):
        """Sets the company_name of this CreateCustomerRequest.

        A business name associated with the customer profile.

        :param company_name: The company_name of this CreateCustomerRequest.
        :type company_name: str
        """

        self._company_name = company_name

    @property
    def email_address(self):
        """Gets the email_address of this CreateCustomerRequest.

        The email address associated with the customer profile.

        :return: The email_address of this CreateCustomerRequest.
        :rtype: str
        """
        return self._email_address

    @email_address.setter
    def email_address(self, email_address):
        """Sets the email_address of this CreateCustomerRequest.

        The email address associated with the customer profile.

        :param email_address: The email_address of this CreateCustomerRequest.
        :type email_address: str
        """

        self._email_address = email_address

    @property
    def family_name(self):
        """Gets the family_name of this CreateCustomerRequest.

        The family name (that is, the last name) associated with the customer profile.

        :return: The family_name of this CreateCustomerRequest.
        :rtype: str
        """
        return self._family_name

    @family_name.setter
    def family_name(self, family_name):
        """Sets the family_name of this CreateCustomerRequest.

        The family name (that is, the last name) associated with the customer profile.

        :param family_name: The family_name of this CreateCustomerRequest.
        :type family_name: str
        """

        self._family_name = family_name

    @property
    def given_name(self):
        """Gets the given_name of this CreateCustomerRequest.

        The given name (that is, the first name) associated with the customer profile.

        :return: The given_name of this CreateCustomerRequest.
        :rtype: str
        """
        return self._given_name

    @given_name.setter
    def given_name(self, given_name):
        """Sets the given_name of this CreateCustomerRequest.

        The given name (that is, the first name) associated with the customer profile.

        :param given_name: The given_name of this CreateCustomerRequest.
        :type given_name: str
        """

        self._given_name = given_name

    @property
    def idempotency_key(self):
        """Gets the idempotency_key of this CreateCustomerRequest.

        The idempotency key for the request. For more information, see [Idempotency](https://developer.squareup.com/docs/working-with-apis/idempotency).

        :return: The idempotency_key of this CreateCustomerRequest.
        :rtype: str
        """
        return self._idempotency_key

    @idempotency_key.setter
    def idempotency_key(self, idempotency_key):
        """Sets the idempotency_key of this CreateCustomerRequest.

        The idempotency key for the request. For more information, see [Idempotency](https://developer.squareup.com/docs/working-with-apis/idempotency).

        :param idempotency_key: The idempotency_key of this CreateCustomerRequest.
        :type idempotency_key: str
        """

        self._idempotency_key = idempotency_key

    @property
    def nickname(self):
        """Gets the nickname of this CreateCustomerRequest.

        A nickname for the customer profile.

        :return: The nickname of this CreateCustomerRequest.
        :rtype: str
        """
        return self._nickname

    @nickname.setter
    def nickname(self, nickname):
        """Sets the nickname of this CreateCustomerRequest.

        A nickname for the customer profile.

        :param nickname: The nickname of this CreateCustomerRequest.
        :type nickname: str
        """

        self._nickname = nickname

    @property
    def note(self):
        """Gets the note of this CreateCustomerRequest.

        A custom note associated with the customer profile.

        :return: The note of this CreateCustomerRequest.
        :rtype: str
        """
        return self._note

    @note.setter
    def note(self, note):
        """Sets the note of this CreateCustomerRequest.

        A custom note associated with the customer profile.

        :param note: The note of this CreateCustomerRequest.
        :type note: str
        """

        self._note = note

    @property
    def phone_number(self):
        """Gets the phone_number of this CreateCustomerRequest.

        The 11-digit phone number associated with the customer profile.

        :return: The phone_number of this CreateCustomerRequest.
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """Sets the phone_number of this CreateCustomerRequest.

        The 11-digit phone number associated with the customer profile.

        :param phone_number: The phone_number of this CreateCustomerRequest.
        :type phone_number: str
        """

        self._phone_number = phone_number

    @property
    def reference_id(self):
        """Gets the reference_id of this CreateCustomerRequest.

        An optional second ID used to associate the customer profile with an entity in another system.

        :return: The reference_id of this CreateCustomerRequest.
        :rtype: str
        """
        return self._reference_id

    @reference_id.setter
    def reference_id(self, reference_id):
        """Sets the reference_id of this CreateCustomerRequest.

        An optional second ID used to associate the customer profile with an entity in another system.

        :param reference_id: The reference_id of this CreateCustomerRequest.
        :type reference_id: str
        """

        self._reference_id = reference_id
