# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.error import Error
from openapi_server.models.invoice import Invoice
from openapi_server import util


class PublishInvoiceResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, errors: List[Error]=None, invoice: Invoice=None):
        """PublishInvoiceResponse - a model defined in OpenAPI

        :param errors: The errors of this PublishInvoiceResponse.
        :param invoice: The invoice of this PublishInvoiceResponse.
        """
        self.openapi_types = {
            'errors': List[Error],
            'invoice': Invoice
        }

        self.attribute_map = {
            'errors': 'errors',
            'invoice': 'invoice'
        }

        self._errors = errors
        self._invoice = invoice

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PublishInvoiceResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PublishInvoiceResponse of this PublishInvoiceResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def errors(self):
        """Gets the errors of this PublishInvoiceResponse.

        Information about errors encountered during the request.

        :return: The errors of this PublishInvoiceResponse.
        :rtype: List[Error]
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this PublishInvoiceResponse.

        Information about errors encountered during the request.

        :param errors: The errors of this PublishInvoiceResponse.
        :type errors: List[Error]
        """

        self._errors = errors

    @property
    def invoice(self):
        """Gets the invoice of this PublishInvoiceResponse.


        :return: The invoice of this PublishInvoiceResponse.
        :rtype: Invoice
        """
        return self._invoice

    @invoice.setter
    def invoice(self, invoice):
        """Sets the invoice of this PublishInvoiceResponse.


        :param invoice: The invoice of this PublishInvoiceResponse.
        :type invoice: Invoice
        """

        self._invoice = invoice
