# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dispute_evidence_created_webhook_object import DisputeEvidenceCreatedWebhookObject
from openapi_server import util


class DisputeEvidenceCreatedWebhookData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, object: DisputeEvidenceCreatedWebhookObject=None, type: str=None):
        """DisputeEvidenceCreatedWebhookData - a model defined in OpenAPI

        :param id: The id of this DisputeEvidenceCreatedWebhookData.
        :param object: The object of this DisputeEvidenceCreatedWebhookData.
        :param type: The type of this DisputeEvidenceCreatedWebhookData.
        """
        self.openapi_types = {
            'id': str,
            'object': DisputeEvidenceCreatedWebhookObject,
            'type': str
        }

        self.attribute_map = {
            'id': 'id',
            'object': 'object',
            'type': 'type'
        }

        self._id = id
        self._object = object
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DisputeEvidenceCreatedWebhookData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DisputeEvidenceCreatedWebhookData of this DisputeEvidenceCreatedWebhookData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this DisputeEvidenceCreatedWebhookData.

        ID of the affected dispute.

        :return: The id of this DisputeEvidenceCreatedWebhookData.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DisputeEvidenceCreatedWebhookData.

        ID of the affected dispute.

        :param id: The id of this DisputeEvidenceCreatedWebhookData.
        :type id: str
        """

        self._id = id

    @property
    def object(self):
        """Gets the object of this DisputeEvidenceCreatedWebhookData.


        :return: The object of this DisputeEvidenceCreatedWebhookData.
        :rtype: DisputeEvidenceCreatedWebhookObject
        """
        return self._object

    @object.setter
    def object(self, object):
        """Sets the object of this DisputeEvidenceCreatedWebhookData.


        :param object: The object of this DisputeEvidenceCreatedWebhookData.
        :type object: DisputeEvidenceCreatedWebhookObject
        """

        self._object = object

    @property
    def type(self):
        """Gets the type of this DisputeEvidenceCreatedWebhookData.

        Name of the affected dispute's type.

        :return: The type of this DisputeEvidenceCreatedWebhookData.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this DisputeEvidenceCreatedWebhookData.

        Name of the affected dispute's type.

        :param type: The type of this DisputeEvidenceCreatedWebhookData.
        :type type: str
        """

        self._type = type
