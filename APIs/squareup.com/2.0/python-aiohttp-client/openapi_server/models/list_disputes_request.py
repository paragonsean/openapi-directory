# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListDisputesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cursor: str=None, location_id: str=None, states: List[str]=None):
        """ListDisputesRequest - a model defined in OpenAPI

        :param cursor: The cursor of this ListDisputesRequest.
        :param location_id: The location_id of this ListDisputesRequest.
        :param states: The states of this ListDisputesRequest.
        """
        self.openapi_types = {
            'cursor': str,
            'location_id': str,
            'states': List[str]
        }

        self.attribute_map = {
            'cursor': 'cursor',
            'location_id': 'location_id',
            'states': 'states'
        }

        self._cursor = cursor
        self._location_id = location_id
        self._states = states

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListDisputesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListDisputesRequest of this ListDisputesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cursor(self):
        """Gets the cursor of this ListDisputesRequest.

        A pagination cursor returned by a previous call to this endpoint. Provide this cursor to retrieve the next set of results for the original query. For more information, see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination).

        :return: The cursor of this ListDisputesRequest.
        :rtype: str
        """
        return self._cursor

    @cursor.setter
    def cursor(self, cursor):
        """Sets the cursor of this ListDisputesRequest.

        A pagination cursor returned by a previous call to this endpoint. Provide this cursor to retrieve the next set of results for the original query. For more information, see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination).

        :param cursor: The cursor of this ListDisputesRequest.
        :type cursor: str
        """

        self._cursor = cursor

    @property
    def location_id(self):
        """Gets the location_id of this ListDisputesRequest.

        The ID of the location for which to return a list of disputes. If not specified, the endpoint returns all open disputes (the dispute status is not `INQUIRY_CLOSED`, `WON`, or `LOST`) associated with all locations.

        :return: The location_id of this ListDisputesRequest.
        :rtype: str
        """
        return self._location_id

    @location_id.setter
    def location_id(self, location_id):
        """Sets the location_id of this ListDisputesRequest.

        The ID of the location for which to return a list of disputes. If not specified, the endpoint returns all open disputes (the dispute status is not `INQUIRY_CLOSED`, `WON`, or `LOST`) associated with all locations.

        :param location_id: The location_id of this ListDisputesRequest.
        :type location_id: str
        """
        if location_id is not None and len(location_id) > 40:
            raise ValueError("Invalid value for `location_id`, length must be less than or equal to `40`")
        if location_id is not None and len(location_id) < 1:
            raise ValueError("Invalid value for `location_id`, length must be greater than or equal to `1`")

        self._location_id = location_id

    @property
    def states(self):
        """Gets the states of this ListDisputesRequest.

        The dispute states to filter the result. If not specified, the endpoint returns all open disputes (the dispute status is not `INQUIRY_CLOSED`, `WON`, or `LOST`).

        :return: The states of this ListDisputesRequest.
        :rtype: List[str]
        """
        return self._states

    @states.setter
    def states(self, states):
        """Sets the states of this ListDisputesRequest.

        The dispute states to filter the result. If not specified, the endpoint returns all open disputes (the dispute status is not `INQUIRY_CLOSED`, `WON`, or `LOST`).

        :param states: The states of this ListDisputesRequest.
        :type states: List[str]
        """

        self._states = states
