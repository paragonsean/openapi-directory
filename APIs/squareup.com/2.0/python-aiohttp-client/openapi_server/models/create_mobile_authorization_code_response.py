# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.error import Error
from openapi_server import util


class CreateMobileAuthorizationCodeResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, authorization_code: str=None, error: Error=None, expires_at: str=None):
        """CreateMobileAuthorizationCodeResponse - a model defined in OpenAPI

        :param authorization_code: The authorization_code of this CreateMobileAuthorizationCodeResponse.
        :param error: The error of this CreateMobileAuthorizationCodeResponse.
        :param expires_at: The expires_at of this CreateMobileAuthorizationCodeResponse.
        """
        self.openapi_types = {
            'authorization_code': str,
            'error': Error,
            'expires_at': str
        }

        self.attribute_map = {
            'authorization_code': 'authorization_code',
            'error': 'error',
            'expires_at': 'expires_at'
        }

        self._authorization_code = authorization_code
        self._error = error
        self._expires_at = expires_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateMobileAuthorizationCodeResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateMobileAuthorizationCodeResponse of this CreateMobileAuthorizationCodeResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def authorization_code(self):
        """Gets the authorization_code of this CreateMobileAuthorizationCodeResponse.

        Generated authorization code that connects a mobile application instance to a Square account.

        :return: The authorization_code of this CreateMobileAuthorizationCodeResponse.
        :rtype: str
        """
        return self._authorization_code

    @authorization_code.setter
    def authorization_code(self, authorization_code):
        """Sets the authorization_code of this CreateMobileAuthorizationCodeResponse.

        Generated authorization code that connects a mobile application instance to a Square account.

        :param authorization_code: The authorization_code of this CreateMobileAuthorizationCodeResponse.
        :type authorization_code: str
        """
        if authorization_code is not None and len(authorization_code) > 191:
            raise ValueError("Invalid value for `authorization_code`, length must be less than or equal to `191`")
        if authorization_code is not None and len(authorization_code) < 0:
            raise ValueError("Invalid value for `authorization_code`, length must be greater than or equal to `0`")

        self._authorization_code = authorization_code

    @property
    def error(self):
        """Gets the error of this CreateMobileAuthorizationCodeResponse.


        :return: The error of this CreateMobileAuthorizationCodeResponse.
        :rtype: Error
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this CreateMobileAuthorizationCodeResponse.


        :param error: The error of this CreateMobileAuthorizationCodeResponse.
        :type error: Error
        """

        self._error = error

    @property
    def expires_at(self):
        """Gets the expires_at of this CreateMobileAuthorizationCodeResponse.

        The timestamp when `authorization_code` expires in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, e.g., \"2016-09-04T23:59:33.123Z\".

        :return: The expires_at of this CreateMobileAuthorizationCodeResponse.
        :rtype: str
        """
        return self._expires_at

    @expires_at.setter
    def expires_at(self, expires_at):
        """Sets the expires_at of this CreateMobileAuthorizationCodeResponse.

        The timestamp when `authorization_code` expires in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, e.g., \"2016-09-04T23:59:33.123Z\".

        :param expires_at: The expires_at of this CreateMobileAuthorizationCodeResponse.
        :type expires_at: str
        """
        if expires_at is not None and len(expires_at) > 48:
            raise ValueError("Invalid value for `expires_at`, length must be less than or equal to `48`")
        if expires_at is not None and len(expires_at) < 20:
            raise ValueError("Invalid value for `expires_at`, length must be greater than or equal to `20`")

        self._expires_at = expires_at
