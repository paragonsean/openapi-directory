# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListCardsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cursor: str=None, customer_id: str=None, include_disabled: bool=None, reference_id: str=None, sort_order: str=None):
        """ListCardsRequest - a model defined in OpenAPI

        :param cursor: The cursor of this ListCardsRequest.
        :param customer_id: The customer_id of this ListCardsRequest.
        :param include_disabled: The include_disabled of this ListCardsRequest.
        :param reference_id: The reference_id of this ListCardsRequest.
        :param sort_order: The sort_order of this ListCardsRequest.
        """
        self.openapi_types = {
            'cursor': str,
            'customer_id': str,
            'include_disabled': bool,
            'reference_id': str,
            'sort_order': str
        }

        self.attribute_map = {
            'cursor': 'cursor',
            'customer_id': 'customer_id',
            'include_disabled': 'include_disabled',
            'reference_id': 'reference_id',
            'sort_order': 'sort_order'
        }

        self._cursor = cursor
        self._customer_id = customer_id
        self._include_disabled = include_disabled
        self._reference_id = reference_id
        self._sort_order = sort_order

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListCardsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListCardsRequest of this ListCardsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cursor(self):
        """Gets the cursor of this ListCardsRequest.

        A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for your original query.  See [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information.

        :return: The cursor of this ListCardsRequest.
        :rtype: str
        """
        return self._cursor

    @cursor.setter
    def cursor(self, cursor):
        """Sets the cursor of this ListCardsRequest.

        A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for your original query.  See [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information.

        :param cursor: The cursor of this ListCardsRequest.
        :type cursor: str
        """
        if cursor is not None and len(cursor) > 256:
            raise ValueError("Invalid value for `cursor`, length must be less than or equal to `256`")

        self._cursor = cursor

    @property
    def customer_id(self):
        """Gets the customer_id of this ListCardsRequest.

        Limit results to cards associated with the customer supplied. By default, all cards owned by the merchant are returned.

        :return: The customer_id of this ListCardsRequest.
        :rtype: str
        """
        return self._customer_id

    @customer_id.setter
    def customer_id(self, customer_id):
        """Sets the customer_id of this ListCardsRequest.

        Limit results to cards associated with the customer supplied. By default, all cards owned by the merchant are returned.

        :param customer_id: The customer_id of this ListCardsRequest.
        :type customer_id: str
        """

        self._customer_id = customer_id

    @property
    def include_disabled(self):
        """Gets the include_disabled of this ListCardsRequest.

        Includes disabled cards. By default, all enabled cards owned by the merchant are returned.

        :return: The include_disabled of this ListCardsRequest.
        :rtype: bool
        """
        return self._include_disabled

    @include_disabled.setter
    def include_disabled(self, include_disabled):
        """Sets the include_disabled of this ListCardsRequest.

        Includes disabled cards. By default, all enabled cards owned by the merchant are returned.

        :param include_disabled: The include_disabled of this ListCardsRequest.
        :type include_disabled: bool
        """

        self._include_disabled = include_disabled

    @property
    def reference_id(self):
        """Gets the reference_id of this ListCardsRequest.

        Limit results to cards associated with the reference_id supplied.

        :return: The reference_id of this ListCardsRequest.
        :rtype: str
        """
        return self._reference_id

    @reference_id.setter
    def reference_id(self, reference_id):
        """Sets the reference_id of this ListCardsRequest.

        Limit results to cards associated with the reference_id supplied.

        :param reference_id: The reference_id of this ListCardsRequest.
        :type reference_id: str
        """

        self._reference_id = reference_id

    @property
    def sort_order(self):
        """Gets the sort_order of this ListCardsRequest.

        Sorts the returned list by when the card was created with the specified order. This field defaults to ASC.

        :return: The sort_order of this ListCardsRequest.
        :rtype: str
        """
        return self._sort_order

    @sort_order.setter
    def sort_order(self, sort_order):
        """Sets the sort_order of this ListCardsRequest.

        Sorts the returned list by when the card was created with the specified order. This field defaults to ASC.

        :param sort_order: The sort_order of this ListCardsRequest.
        :type sort_order: str
        """

        self._sort_order = sort_order
