# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InventoryState(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    CUSTOM = 'CUSTOM'
    IN_STOCK = 'IN_STOCK'
    SOLD = 'SOLD'
    RETURNED_BY_CUSTOMER = 'RETURNED_BY_CUSTOMER'
    RESERVED_FOR_SALE = 'RESERVED_FOR_SALE'
    SOLD_ONLINE = 'SOLD_ONLINE'
    ORDERED_FROM_VENDOR = 'ORDERED_FROM_VENDOR'
    RECEIVED_FROM_VENDOR = 'RECEIVED_FROM_VENDOR'
    IN_TRANSIT_TO = 'IN_TRANSIT_TO'
    NONE = 'NONE'
    WASTE = 'WASTE'
    UNLINKED_RETURN = 'UNLINKED_RETURN'
    COMPOSED = 'COMPOSED'
    DECOMPOSED = 'DECOMPOSED'
    SUPPORTED_BY_NEWER_VERSION = 'SUPPORTED_BY_NEWER_VERSION'

    def __init__(self):
        """InventoryState - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InventoryState':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InventoryState of this InventoryState.
        """
        return util.deserialize_model(dikt, cls)
