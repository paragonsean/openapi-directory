# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OrderCreated(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: str=None, location_id: str=None, order_id: str=None, state: str=None, version: int=None):
        """OrderCreated - a model defined in OpenAPI

        :param created_at: The created_at of this OrderCreated.
        :param location_id: The location_id of this OrderCreated.
        :param order_id: The order_id of this OrderCreated.
        :param state: The state of this OrderCreated.
        :param version: The version of this OrderCreated.
        """
        self.openapi_types = {
            'created_at': str,
            'location_id': str,
            'order_id': str,
            'state': str,
            'version': int
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'location_id': 'location_id',
            'order_id': 'order_id',
            'state': 'state',
            'version': 'version'
        }

        self._created_at = created_at
        self._location_id = location_id
        self._order_id = order_id
        self._state = state
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderCreated':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrderCreated of this OrderCreated.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this OrderCreated.

        The timestamp for when the order was created, in RFC 3339 format.

        :return: The created_at of this OrderCreated.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this OrderCreated.

        The timestamp for when the order was created, in RFC 3339 format.

        :param created_at: The created_at of this OrderCreated.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def location_id(self):
        """Gets the location_id of this OrderCreated.

        The ID of the seller location that this order is associated with.

        :return: The location_id of this OrderCreated.
        :rtype: str
        """
        return self._location_id

    @location_id.setter
    def location_id(self, location_id):
        """Sets the location_id of this OrderCreated.

        The ID of the seller location that this order is associated with.

        :param location_id: The location_id of this OrderCreated.
        :type location_id: str
        """

        self._location_id = location_id

    @property
    def order_id(self):
        """Gets the order_id of this OrderCreated.

        The order's unique ID.

        :return: The order_id of this OrderCreated.
        :rtype: str
        """
        return self._order_id

    @order_id.setter
    def order_id(self, order_id):
        """Sets the order_id of this OrderCreated.

        The order's unique ID.

        :param order_id: The order_id of this OrderCreated.
        :type order_id: str
        """

        self._order_id = order_id

    @property
    def state(self):
        """Gets the state of this OrderCreated.

        The state of the order.

        :return: The state of this OrderCreated.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this OrderCreated.

        The state of the order.

        :param state: The state of this OrderCreated.
        :type state: str
        """

        self._state = state

    @property
    def version(self):
        """Gets the version of this OrderCreated.

        The version number, which is incremented each time an update is committed to the order. Orders that were not created through the API do not include a version number and therefore cannot be updated.  [Read more about working with versions.](https://developer.squareup.com/docs/orders-api/manage-orders#update-orders)

        :return: The version of this OrderCreated.
        :rtype: int
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this OrderCreated.

        The version number, which is incremented each time an update is committed to the order. Orders that were not created through the API do not include a version number and therefore cannot be updated.  [Read more about working with versions.](https://developer.squareup.com/docs/orders-api/manage-orders#update-orders)

        :param version: The version of this OrderCreated.
        :type version: int
        """

        self._version = version
