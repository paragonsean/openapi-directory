# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class V1PaymentItemDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, category_name: str=None, item_id: str=None, item_variation_id: str=None, sku: str=None):
        """V1PaymentItemDetail - a model defined in OpenAPI

        :param category_name: The category_name of this V1PaymentItemDetail.
        :param item_id: The item_id of this V1PaymentItemDetail.
        :param item_variation_id: The item_variation_id of this V1PaymentItemDetail.
        :param sku: The sku of this V1PaymentItemDetail.
        """
        self.openapi_types = {
            'category_name': str,
            'item_id': str,
            'item_variation_id': str,
            'sku': str
        }

        self.attribute_map = {
            'category_name': 'category_name',
            'item_id': 'item_id',
            'item_variation_id': 'item_variation_id',
            'sku': 'sku'
        }

        self._category_name = category_name
        self._item_id = item_id
        self._item_variation_id = item_variation_id
        self._sku = sku

    @classmethod
    def from_dict(cls, dikt: dict) -> 'V1PaymentItemDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The V1PaymentItemDetail of this V1PaymentItemDetail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def category_name(self):
        """Gets the category_name of this V1PaymentItemDetail.

        The name of the item's merchant-defined category, if any.

        :return: The category_name of this V1PaymentItemDetail.
        :rtype: str
        """
        return self._category_name

    @category_name.setter
    def category_name(self, category_name):
        """Sets the category_name of this V1PaymentItemDetail.

        The name of the item's merchant-defined category, if any.

        :param category_name: The category_name of this V1PaymentItemDetail.
        :type category_name: str
        """

        self._category_name = category_name

    @property
    def item_id(self):
        """Gets the item_id of this V1PaymentItemDetail.

        The unique ID of the item purchased, if any.

        :return: The item_id of this V1PaymentItemDetail.
        :rtype: str
        """
        return self._item_id

    @item_id.setter
    def item_id(self, item_id):
        """Sets the item_id of this V1PaymentItemDetail.

        The unique ID of the item purchased, if any.

        :param item_id: The item_id of this V1PaymentItemDetail.
        :type item_id: str
        """

        self._item_id = item_id

    @property
    def item_variation_id(self):
        """Gets the item_variation_id of this V1PaymentItemDetail.

        The unique ID of the item variation purchased, if any.

        :return: The item_variation_id of this V1PaymentItemDetail.
        :rtype: str
        """
        return self._item_variation_id

    @item_variation_id.setter
    def item_variation_id(self, item_variation_id):
        """Sets the item_variation_id of this V1PaymentItemDetail.

        The unique ID of the item variation purchased, if any.

        :param item_variation_id: The item_variation_id of this V1PaymentItemDetail.
        :type item_variation_id: str
        """

        self._item_variation_id = item_variation_id

    @property
    def sku(self):
        """Gets the sku of this V1PaymentItemDetail.

         The item's merchant-defined SKU, if any.

        :return: The sku of this V1PaymentItemDetail.
        :rtype: str
        """
        return self._sku

    @sku.setter
    def sku(self, sku):
        """Sets the sku of this V1PaymentItemDetail.

         The item's merchant-defined SKU, if any.

        :param sku: The sku of this V1PaymentItemDetail.
        :type sku: str
        """

        self._sku = sku
