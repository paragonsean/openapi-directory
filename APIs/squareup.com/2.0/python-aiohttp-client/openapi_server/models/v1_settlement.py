# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.v1_money import V1Money
from openapi_server.models.v1_settlement_entry import V1SettlementEntry
from openapi_server import util


class V1Settlement(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bank_account_id: str=None, entries: List[V1SettlementEntry]=None, id: str=None, initiated_at: str=None, status: str=None, total_money: V1Money=None):
        """V1Settlement - a model defined in OpenAPI

        :param bank_account_id: The bank_account_id of this V1Settlement.
        :param entries: The entries of this V1Settlement.
        :param id: The id of this V1Settlement.
        :param initiated_at: The initiated_at of this V1Settlement.
        :param status: The status of this V1Settlement.
        :param total_money: The total_money of this V1Settlement.
        """
        self.openapi_types = {
            'bank_account_id': str,
            'entries': List[V1SettlementEntry],
            'id': str,
            'initiated_at': str,
            'status': str,
            'total_money': V1Money
        }

        self.attribute_map = {
            'bank_account_id': 'bank_account_id',
            'entries': 'entries',
            'id': 'id',
            'initiated_at': 'initiated_at',
            'status': 'status',
            'total_money': 'total_money'
        }

        self._bank_account_id = bank_account_id
        self._entries = entries
        self._id = id
        self._initiated_at = initiated_at
        self._status = status
        self._total_money = total_money

    @classmethod
    def from_dict(cls, dikt: dict) -> 'V1Settlement':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The V1Settlement of this V1Settlement.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bank_account_id(self):
        """Gets the bank_account_id of this V1Settlement.

        The Square-issued unique identifier for the bank account associated with the settlement.

        :return: The bank_account_id of this V1Settlement.
        :rtype: str
        """
        return self._bank_account_id

    @bank_account_id.setter
    def bank_account_id(self, bank_account_id):
        """Sets the bank_account_id of this V1Settlement.

        The Square-issued unique identifier for the bank account associated with the settlement.

        :param bank_account_id: The bank_account_id of this V1Settlement.
        :type bank_account_id: str
        """

        self._bank_account_id = bank_account_id

    @property
    def entries(self):
        """Gets the entries of this V1Settlement.

        The entries included in this settlement.

        :return: The entries of this V1Settlement.
        :rtype: List[V1SettlementEntry]
        """
        return self._entries

    @entries.setter
    def entries(self, entries):
        """Sets the entries of this V1Settlement.

        The entries included in this settlement.

        :param entries: The entries of this V1Settlement.
        :type entries: List[V1SettlementEntry]
        """

        self._entries = entries

    @property
    def id(self):
        """Gets the id of this V1Settlement.

        The settlement's unique identifier.

        :return: The id of this V1Settlement.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this V1Settlement.

        The settlement's unique identifier.

        :param id: The id of this V1Settlement.
        :type id: str
        """

        self._id = id

    @property
    def initiated_at(self):
        """Gets the initiated_at of this V1Settlement.

        The time when the settlement was submitted for deposit or withdrawal, in ISO 8601 format.

        :return: The initiated_at of this V1Settlement.
        :rtype: str
        """
        return self._initiated_at

    @initiated_at.setter
    def initiated_at(self, initiated_at):
        """Sets the initiated_at of this V1Settlement.

        The time when the settlement was submitted for deposit or withdrawal, in ISO 8601 format.

        :param initiated_at: The initiated_at of this V1Settlement.
        :type initiated_at: str
        """

        self._initiated_at = initiated_at

    @property
    def status(self):
        """Gets the status of this V1Settlement.

        The settlement's current status.

        :return: The status of this V1Settlement.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this V1Settlement.

        The settlement's current status.

        :param status: The status of this V1Settlement.
        :type status: str
        """

        self._status = status

    @property
    def total_money(self):
        """Gets the total_money of this V1Settlement.


        :return: The total_money of this V1Settlement.
        :rtype: V1Money
        """
        return self._total_money

    @total_money.setter
    def total_money(self, total_money):
        """Sets the total_money of this V1Settlement.


        :param total_money: The total_money of this V1Settlement.
        :type total_money: V1Money
        """

        self._total_money = total_money
