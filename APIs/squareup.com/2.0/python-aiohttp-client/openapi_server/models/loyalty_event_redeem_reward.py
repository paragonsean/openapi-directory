# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LoyaltyEventRedeemReward(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, loyalty_program_id: str=None, order_id: str=None, reward_id: str=None):
        """LoyaltyEventRedeemReward - a model defined in OpenAPI

        :param loyalty_program_id: The loyalty_program_id of this LoyaltyEventRedeemReward.
        :param order_id: The order_id of this LoyaltyEventRedeemReward.
        :param reward_id: The reward_id of this LoyaltyEventRedeemReward.
        """
        self.openapi_types = {
            'loyalty_program_id': str,
            'order_id': str,
            'reward_id': str
        }

        self.attribute_map = {
            'loyalty_program_id': 'loyalty_program_id',
            'order_id': 'order_id',
            'reward_id': 'reward_id'
        }

        self._loyalty_program_id = loyalty_program_id
        self._order_id = order_id
        self._reward_id = reward_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LoyaltyEventRedeemReward':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LoyaltyEventRedeemReward of this LoyaltyEventRedeemReward.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def loyalty_program_id(self):
        """Gets the loyalty_program_id of this LoyaltyEventRedeemReward.

        The ID of the [loyalty program](https://developer.squareup.com/reference/square_2021-08-18/objects/LoyaltyProgram).

        :return: The loyalty_program_id of this LoyaltyEventRedeemReward.
        :rtype: str
        """
        return self._loyalty_program_id

    @loyalty_program_id.setter
    def loyalty_program_id(self, loyalty_program_id):
        """Sets the loyalty_program_id of this LoyaltyEventRedeemReward.

        The ID of the [loyalty program](https://developer.squareup.com/reference/square_2021-08-18/objects/LoyaltyProgram).

        :param loyalty_program_id: The loyalty_program_id of this LoyaltyEventRedeemReward.
        :type loyalty_program_id: str
        """
        if loyalty_program_id is None:
            raise ValueError("Invalid value for `loyalty_program_id`, must not be `None`")
        if loyalty_program_id is not None and len(loyalty_program_id) > 36:
            raise ValueError("Invalid value for `loyalty_program_id`, length must be less than or equal to `36`")
        if loyalty_program_id is not None and len(loyalty_program_id) < 1:
            raise ValueError("Invalid value for `loyalty_program_id`, length must be greater than or equal to `1`")

        self._loyalty_program_id = loyalty_program_id

    @property
    def order_id(self):
        """Gets the order_id of this LoyaltyEventRedeemReward.

        The ID of the [order](https://developer.squareup.com/reference/square_2021-08-18/objects/Order) that redeemed the reward. This field is returned only if the Orders API is used to process orders.

        :return: The order_id of this LoyaltyEventRedeemReward.
        :rtype: str
        """
        return self._order_id

    @order_id.setter
    def order_id(self, order_id):
        """Sets the order_id of this LoyaltyEventRedeemReward.

        The ID of the [order](https://developer.squareup.com/reference/square_2021-08-18/objects/Order) that redeemed the reward. This field is returned only if the Orders API is used to process orders.

        :param order_id: The order_id of this LoyaltyEventRedeemReward.
        :type order_id: str
        """

        self._order_id = order_id

    @property
    def reward_id(self):
        """Gets the reward_id of this LoyaltyEventRedeemReward.

        The ID of the redeemed [loyalty reward](https://developer.squareup.com/reference/square_2021-08-18/objects/LoyaltyReward). This field is returned only if the event source is `LOYALTY_API`.

        :return: The reward_id of this LoyaltyEventRedeemReward.
        :rtype: str
        """
        return self._reward_id

    @reward_id.setter
    def reward_id(self, reward_id):
        """Sets the reward_id of this LoyaltyEventRedeemReward.

        The ID of the redeemed [loyalty reward](https://developer.squareup.com/reference/square_2021-08-18/objects/LoyaltyReward). This field is returned only if the event source is `LOYALTY_API`.

        :param reward_id: The reward_id of this LoyaltyEventRedeemReward.
        :type reward_id: str
        """
        if reward_id is not None and len(reward_id) > 36:
            raise ValueError("Invalid value for `reward_id`, length must be less than or equal to `36`")

        self._reward_id = reward_id
