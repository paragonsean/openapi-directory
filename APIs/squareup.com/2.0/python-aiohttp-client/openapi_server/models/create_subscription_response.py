# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.error import Error
from openapi_server.models.subscription import Subscription
from openapi_server import util


class CreateSubscriptionResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, errors: List[Error]=None, subscription: Subscription=None):
        """CreateSubscriptionResponse - a model defined in OpenAPI

        :param errors: The errors of this CreateSubscriptionResponse.
        :param subscription: The subscription of this CreateSubscriptionResponse.
        """
        self.openapi_types = {
            'errors': List[Error],
            'subscription': Subscription
        }

        self.attribute_map = {
            'errors': 'errors',
            'subscription': 'subscription'
        }

        self._errors = errors
        self._subscription = subscription

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateSubscriptionResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateSubscriptionResponse of this CreateSubscriptionResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def errors(self):
        """Gets the errors of this CreateSubscriptionResponse.

        Information about errors encountered during the request.

        :return: The errors of this CreateSubscriptionResponse.
        :rtype: List[Error]
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this CreateSubscriptionResponse.

        Information about errors encountered during the request.

        :param errors: The errors of this CreateSubscriptionResponse.
        :type errors: List[Error]
        """

        self._errors = errors

    @property
    def subscription(self):
        """Gets the subscription of this CreateSubscriptionResponse.


        :return: The subscription of this CreateSubscriptionResponse.
        :rtype: Subscription
        """
        return self._subscription

    @subscription.setter
    def subscription(self, subscription):
        """Sets the subscription of this CreateSubscriptionResponse.


        :param subscription: The subscription of this CreateSubscriptionResponse.
        :type subscription: Subscription
        """

        self._subscription = subscription
