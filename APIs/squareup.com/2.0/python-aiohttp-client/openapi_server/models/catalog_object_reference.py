# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CatalogObjectReference(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, catalog_version: int=None, object_id: str=None):
        """CatalogObjectReference - a model defined in OpenAPI

        :param catalog_version: The catalog_version of this CatalogObjectReference.
        :param object_id: The object_id of this CatalogObjectReference.
        """
        self.openapi_types = {
            'catalog_version': int,
            'object_id': str
        }

        self.attribute_map = {
            'catalog_version': 'catalog_version',
            'object_id': 'object_id'
        }

        self._catalog_version = catalog_version
        self._object_id = object_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CatalogObjectReference':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CatalogObjectReference of this CatalogObjectReference.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def catalog_version(self):
        """Gets the catalog_version of this CatalogObjectReference.

        The version of the object.

        :return: The catalog_version of this CatalogObjectReference.
        :rtype: int
        """
        return self._catalog_version

    @catalog_version.setter
    def catalog_version(self, catalog_version):
        """Sets the catalog_version of this CatalogObjectReference.

        The version of the object.

        :param catalog_version: The catalog_version of this CatalogObjectReference.
        :type catalog_version: int
        """

        self._catalog_version = catalog_version

    @property
    def object_id(self):
        """Gets the object_id of this CatalogObjectReference.

        The ID of the referenced object.

        :return: The object_id of this CatalogObjectReference.
        :rtype: str
        """
        return self._object_id

    @object_id.setter
    def object_id(self, object_id):
        """Sets the object_id of this CatalogObjectReference.

        The ID of the referenced object.

        :param object_id: The object_id of this CatalogObjectReference.
        :type object_id: str
        """

        self._object_id = object_id
