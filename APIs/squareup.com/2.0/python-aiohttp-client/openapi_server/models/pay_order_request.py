# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PayOrderRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, idempotency_key: str=None, order_version: int=None, payment_ids: List[str]=None):
        """PayOrderRequest - a model defined in OpenAPI

        :param idempotency_key: The idempotency_key of this PayOrderRequest.
        :param order_version: The order_version of this PayOrderRequest.
        :param payment_ids: The payment_ids of this PayOrderRequest.
        """
        self.openapi_types = {
            'idempotency_key': str,
            'order_version': int,
            'payment_ids': List[str]
        }

        self.attribute_map = {
            'idempotency_key': 'idempotency_key',
            'order_version': 'order_version',
            'payment_ids': 'payment_ids'
        }

        self._idempotency_key = idempotency_key
        self._order_version = order_version
        self._payment_ids = payment_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PayOrderRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PayOrderRequest of this PayOrderRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def idempotency_key(self):
        """Gets the idempotency_key of this PayOrderRequest.

        A value you specify that uniquely identifies this request among requests you have sent. If you are unsure whether a particular payment request was completed successfully, you can reattempt it with the same idempotency key without worrying about duplicate payments.  For more information, see [Idempotency](https://developer.squareup.com/docs/working-with-apis/idempotency).

        :return: The idempotency_key of this PayOrderRequest.
        :rtype: str
        """
        return self._idempotency_key

    @idempotency_key.setter
    def idempotency_key(self, idempotency_key):
        """Sets the idempotency_key of this PayOrderRequest.

        A value you specify that uniquely identifies this request among requests you have sent. If you are unsure whether a particular payment request was completed successfully, you can reattempt it with the same idempotency key without worrying about duplicate payments.  For more information, see [Idempotency](https://developer.squareup.com/docs/working-with-apis/idempotency).

        :param idempotency_key: The idempotency_key of this PayOrderRequest.
        :type idempotency_key: str
        """
        if idempotency_key is None:
            raise ValueError("Invalid value for `idempotency_key`, must not be `None`")
        if idempotency_key is not None and len(idempotency_key) > 192:
            raise ValueError("Invalid value for `idempotency_key`, length must be less than or equal to `192`")
        if idempotency_key is not None and len(idempotency_key) < 1:
            raise ValueError("Invalid value for `idempotency_key`, length must be greater than or equal to `1`")

        self._idempotency_key = idempotency_key

    @property
    def order_version(self):
        """Gets the order_version of this PayOrderRequest.

        The version of the order being paid. If not supplied, the latest version will be paid.

        :return: The order_version of this PayOrderRequest.
        :rtype: int
        """
        return self._order_version

    @order_version.setter
    def order_version(self, order_version):
        """Sets the order_version of this PayOrderRequest.

        The version of the order being paid. If not supplied, the latest version will be paid.

        :param order_version: The order_version of this PayOrderRequest.
        :type order_version: int
        """

        self._order_version = order_version

    @property
    def payment_ids(self):
        """Gets the payment_ids of this PayOrderRequest.

        The IDs of the [payments](https://developer.squareup.com/reference/square_2021-08-18/objects/Payment) to collect. The payment total must match the order total.

        :return: The payment_ids of this PayOrderRequest.
        :rtype: List[str]
        """
        return self._payment_ids

    @payment_ids.setter
    def payment_ids(self, payment_ids):
        """Sets the payment_ids of this PayOrderRequest.

        The IDs of the [payments](https://developer.squareup.com/reference/square_2021-08-18/objects/Payment) to collect. The payment total must match the order total.

        :param payment_ids: The payment_ids of this PayOrderRequest.
        :type payment_ids: List[str]
        """

        self._payment_ids = payment_ids
