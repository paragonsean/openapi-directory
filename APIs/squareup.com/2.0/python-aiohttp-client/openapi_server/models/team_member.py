# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.team_member_assigned_locations import TeamMemberAssignedLocations
from openapi_server import util


class TeamMember(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, assigned_locations: TeamMemberAssignedLocations=None, created_at: str=None, email_address: str=None, family_name: str=None, given_name: str=None, id: str=None, is_owner: bool=None, phone_number: str=None, reference_id: str=None, status: str=None, updated_at: str=None):
        """TeamMember - a model defined in OpenAPI

        :param assigned_locations: The assigned_locations of this TeamMember.
        :param created_at: The created_at of this TeamMember.
        :param email_address: The email_address of this TeamMember.
        :param family_name: The family_name of this TeamMember.
        :param given_name: The given_name of this TeamMember.
        :param id: The id of this TeamMember.
        :param is_owner: The is_owner of this TeamMember.
        :param phone_number: The phone_number of this TeamMember.
        :param reference_id: The reference_id of this TeamMember.
        :param status: The status of this TeamMember.
        :param updated_at: The updated_at of this TeamMember.
        """
        self.openapi_types = {
            'assigned_locations': TeamMemberAssignedLocations,
            'created_at': str,
            'email_address': str,
            'family_name': str,
            'given_name': str,
            'id': str,
            'is_owner': bool,
            'phone_number': str,
            'reference_id': str,
            'status': str,
            'updated_at': str
        }

        self.attribute_map = {
            'assigned_locations': 'assigned_locations',
            'created_at': 'created_at',
            'email_address': 'email_address',
            'family_name': 'family_name',
            'given_name': 'given_name',
            'id': 'id',
            'is_owner': 'is_owner',
            'phone_number': 'phone_number',
            'reference_id': 'reference_id',
            'status': 'status',
            'updated_at': 'updated_at'
        }

        self._assigned_locations = assigned_locations
        self._created_at = created_at
        self._email_address = email_address
        self._family_name = family_name
        self._given_name = given_name
        self._id = id
        self._is_owner = is_owner
        self._phone_number = phone_number
        self._reference_id = reference_id
        self._status = status
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TeamMember':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TeamMember of this TeamMember.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def assigned_locations(self):
        """Gets the assigned_locations of this TeamMember.


        :return: The assigned_locations of this TeamMember.
        :rtype: TeamMemberAssignedLocations
        """
        return self._assigned_locations

    @assigned_locations.setter
    def assigned_locations(self, assigned_locations):
        """Sets the assigned_locations of this TeamMember.


        :param assigned_locations: The assigned_locations of this TeamMember.
        :type assigned_locations: TeamMemberAssignedLocations
        """

        self._assigned_locations = assigned_locations

    @property
    def created_at(self):
        """Gets the created_at of this TeamMember.

        The timestamp, in RFC 3339 format, describing when the team member was created. For example, \"2018-10-04T04:00:00-07:00\" or \"2019-02-05T12:00:00Z\".

        :return: The created_at of this TeamMember.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this TeamMember.

        The timestamp, in RFC 3339 format, describing when the team member was created. For example, \"2018-10-04T04:00:00-07:00\" or \"2019-02-05T12:00:00Z\".

        :param created_at: The created_at of this TeamMember.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def email_address(self):
        """Gets the email_address of this TeamMember.

        The email address associated with the team member.

        :return: The email_address of this TeamMember.
        :rtype: str
        """
        return self._email_address

    @email_address.setter
    def email_address(self, email_address):
        """Sets the email_address of this TeamMember.

        The email address associated with the team member.

        :param email_address: The email_address of this TeamMember.
        :type email_address: str
        """

        self._email_address = email_address

    @property
    def family_name(self):
        """Gets the family_name of this TeamMember.

        The family name (that is, the last name) associated with the team member.

        :return: The family_name of this TeamMember.
        :rtype: str
        """
        return self._family_name

    @family_name.setter
    def family_name(self, family_name):
        """Sets the family_name of this TeamMember.

        The family name (that is, the last name) associated with the team member.

        :param family_name: The family_name of this TeamMember.
        :type family_name: str
        """

        self._family_name = family_name

    @property
    def given_name(self):
        """Gets the given_name of this TeamMember.

        The given name (that is, the first name) associated with the team member.

        :return: The given_name of this TeamMember.
        :rtype: str
        """
        return self._given_name

    @given_name.setter
    def given_name(self, given_name):
        """Sets the given_name of this TeamMember.

        The given name (that is, the first name) associated with the team member.

        :param given_name: The given_name of this TeamMember.
        :type given_name: str
        """

        self._given_name = given_name

    @property
    def id(self):
        """Gets the id of this TeamMember.

        The unique ID for the team member.

        :return: The id of this TeamMember.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this TeamMember.

        The unique ID for the team member.

        :param id: The id of this TeamMember.
        :type id: str
        """

        self._id = id

    @property
    def is_owner(self):
        """Gets the is_owner of this TeamMember.

        Whether the team member is the owner of the Square account.

        :return: The is_owner of this TeamMember.
        :rtype: bool
        """
        return self._is_owner

    @is_owner.setter
    def is_owner(self, is_owner):
        """Sets the is_owner of this TeamMember.

        Whether the team member is the owner of the Square account.

        :param is_owner: The is_owner of this TeamMember.
        :type is_owner: bool
        """

        self._is_owner = is_owner

    @property
    def phone_number(self):
        """Gets the phone_number of this TeamMember.

        The team member's phone number, in E.164 format. For example: +14155552671 - the country code is 1 for US +551155256325 - the country code is 55 for BR

        :return: The phone_number of this TeamMember.
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """Sets the phone_number of this TeamMember.

        The team member's phone number, in E.164 format. For example: +14155552671 - the country code is 1 for US +551155256325 - the country code is 55 for BR

        :param phone_number: The phone_number of this TeamMember.
        :type phone_number: str
        """

        self._phone_number = phone_number

    @property
    def reference_id(self):
        """Gets the reference_id of this TeamMember.

        A second ID used to associate the team member with an entity in another system.

        :return: The reference_id of this TeamMember.
        :rtype: str
        """
        return self._reference_id

    @reference_id.setter
    def reference_id(self, reference_id):
        """Sets the reference_id of this TeamMember.

        A second ID used to associate the team member with an entity in another system.

        :param reference_id: The reference_id of this TeamMember.
        :type reference_id: str
        """

        self._reference_id = reference_id

    @property
    def status(self):
        """Gets the status of this TeamMember.

        Describes the status of the team member.

        :return: The status of this TeamMember.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this TeamMember.

        Describes the status of the team member.

        :param status: The status of this TeamMember.
        :type status: str
        """

        self._status = status

    @property
    def updated_at(self):
        """Gets the updated_at of this TeamMember.

        The timestamp, in RFC 3339 format, describing when the team member was last updated. For example, \"2018-10-04T04:00:00-07:00\" or \"2019-02-05T12:00:00Z\".

        :return: The updated_at of this TeamMember.
        :rtype: str
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this TeamMember.

        The timestamp, in RFC 3339 format, describing when the team member was last updated. For example, \"2018-10-04T04:00:00-07:00\" or \"2019-02-05T12:00:00Z\".

        :param updated_at: The updated_at of this TeamMember.
        :type updated_at: str
        """

        self._updated_at = updated_at
