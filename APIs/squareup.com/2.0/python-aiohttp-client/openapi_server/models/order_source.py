# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OrderSource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None):
        """OrderSource - a model defined in OpenAPI

        :param name: The name of this OrderSource.
        """
        self.openapi_types = {
            'name': str
        }

        self.attribute_map = {
            'name': 'name'
        }

        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrderSource of this OrderSource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this OrderSource.

        The name used to identify the place (physical or digital) that an order originates. If unset, the name defaults to the name of the application that created the order.

        :return: The name of this OrderSource.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this OrderSource.

        The name used to identify the place (physical or digital) that an order originates. If unset, the name defaults to the name of the application that created the order.

        :param name: The name of this OrderSource.
        :type name: str
        """

        self._name = name
