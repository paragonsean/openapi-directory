# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LoyaltyAccountMapping(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: str=None, id: str=None, phone_number: str=None):
        """LoyaltyAccountMapping - a model defined in OpenAPI

        :param created_at: The created_at of this LoyaltyAccountMapping.
        :param id: The id of this LoyaltyAccountMapping.
        :param phone_number: The phone_number of this LoyaltyAccountMapping.
        """
        self.openapi_types = {
            'created_at': str,
            'id': str,
            'phone_number': str
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'id': 'id',
            'phone_number': 'phone_number'
        }

        self._created_at = created_at
        self._id = id
        self._phone_number = phone_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LoyaltyAccountMapping':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LoyaltyAccountMapping of this LoyaltyAccountMapping.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this LoyaltyAccountMapping.

        The timestamp when the mapping was created, in RFC 3339 format.

        :return: The created_at of this LoyaltyAccountMapping.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this LoyaltyAccountMapping.

        The timestamp when the mapping was created, in RFC 3339 format.

        :param created_at: The created_at of this LoyaltyAccountMapping.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def id(self):
        """Gets the id of this LoyaltyAccountMapping.

        The Square-assigned ID of the mapping.

        :return: The id of this LoyaltyAccountMapping.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this LoyaltyAccountMapping.

        The Square-assigned ID of the mapping.

        :param id: The id of this LoyaltyAccountMapping.
        :type id: str
        """
        if id is not None and len(id) > 36:
            raise ValueError("Invalid value for `id`, length must be less than or equal to `36`")

        self._id = id

    @property
    def phone_number(self):
        """Gets the phone_number of this LoyaltyAccountMapping.

        The phone number of the buyer, in E.164 format. For example, \"+14155551111\".

        :return: The phone_number of this LoyaltyAccountMapping.
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """Sets the phone_number of this LoyaltyAccountMapping.

        The phone number of the buyer, in E.164 format. For example, \"+14155551111\".

        :param phone_number: The phone_number of this LoyaltyAccountMapping.
        :type phone_number: str
        """

        self._phone_number = phone_number
