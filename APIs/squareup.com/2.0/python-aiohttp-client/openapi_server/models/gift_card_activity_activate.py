# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.money import Money
from openapi_server import util


class GiftCardActivityActivate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount_money: Money=None, buyer_payment_instrument_ids: List[str]=None, line_item_uid: str=None, order_id: str=None, reference_id: str=None):
        """GiftCardActivityActivate - a model defined in OpenAPI

        :param amount_money: The amount_money of this GiftCardActivityActivate.
        :param buyer_payment_instrument_ids: The buyer_payment_instrument_ids of this GiftCardActivityActivate.
        :param line_item_uid: The line_item_uid of this GiftCardActivityActivate.
        :param order_id: The order_id of this GiftCardActivityActivate.
        :param reference_id: The reference_id of this GiftCardActivityActivate.
        """
        self.openapi_types = {
            'amount_money': Money,
            'buyer_payment_instrument_ids': List[str],
            'line_item_uid': str,
            'order_id': str,
            'reference_id': str
        }

        self.attribute_map = {
            'amount_money': 'amount_money',
            'buyer_payment_instrument_ids': 'buyer_payment_instrument_ids',
            'line_item_uid': 'line_item_uid',
            'order_id': 'order_id',
            'reference_id': 'reference_id'
        }

        self._amount_money = amount_money
        self._buyer_payment_instrument_ids = buyer_payment_instrument_ids
        self._line_item_uid = line_item_uid
        self._order_id = order_id
        self._reference_id = reference_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GiftCardActivityActivate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GiftCardActivityActivate of this GiftCardActivityActivate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount_money(self):
        """Gets the amount_money of this GiftCardActivityActivate.


        :return: The amount_money of this GiftCardActivityActivate.
        :rtype: Money
        """
        return self._amount_money

    @amount_money.setter
    def amount_money(self, amount_money):
        """Sets the amount_money of this GiftCardActivityActivate.


        :param amount_money: The amount_money of this GiftCardActivityActivate.
        :type amount_money: Money
        """

        self._amount_money = amount_money

    @property
    def buyer_payment_instrument_ids(self):
        """Gets the buyer_payment_instrument_ids of this GiftCardActivityActivate.

        Required if your application does not use the Square Orders API.  This is a list of client-provided payment instrument IDs.  Square uses this information to perform compliance checks. If you use the Square Orders API, Square has the necessary instrument IDs to perform necessary  compliance checks.

        :return: The buyer_payment_instrument_ids of this GiftCardActivityActivate.
        :rtype: List[str]
        """
        return self._buyer_payment_instrument_ids

    @buyer_payment_instrument_ids.setter
    def buyer_payment_instrument_ids(self, buyer_payment_instrument_ids):
        """Sets the buyer_payment_instrument_ids of this GiftCardActivityActivate.

        Required if your application does not use the Square Orders API.  This is a list of client-provided payment instrument IDs.  Square uses this information to perform compliance checks. If you use the Square Orders API, Square has the necessary instrument IDs to perform necessary  compliance checks.

        :param buyer_payment_instrument_ids: The buyer_payment_instrument_ids of this GiftCardActivityActivate.
        :type buyer_payment_instrument_ids: List[str]
        """

        self._buyer_payment_instrument_ids = buyer_payment_instrument_ids

    @property
    def line_item_uid(self):
        """Gets the line_item_uid of this GiftCardActivityActivate.

        The `line_item_uid` of the gift card line item in an order.  This is required if your application uses the Square Orders API.

        :return: The line_item_uid of this GiftCardActivityActivate.
        :rtype: str
        """
        return self._line_item_uid

    @line_item_uid.setter
    def line_item_uid(self, line_item_uid):
        """Sets the line_item_uid of this GiftCardActivityActivate.

        The `line_item_uid` of the gift card line item in an order.  This is required if your application uses the Square Orders API.

        :param line_item_uid: The line_item_uid of this GiftCardActivityActivate.
        :type line_item_uid: str
        """

        self._line_item_uid = line_item_uid

    @property
    def order_id(self):
        """Gets the order_id of this GiftCardActivityActivate.

        The ID of the order associated with the activity.  This is required if your application uses the Square Orders API.

        :return: The order_id of this GiftCardActivityActivate.
        :rtype: str
        """
        return self._order_id

    @order_id.setter
    def order_id(self, order_id):
        """Sets the order_id of this GiftCardActivityActivate.

        The ID of the order associated with the activity.  This is required if your application uses the Square Orders API.

        :param order_id: The order_id of this GiftCardActivityActivate.
        :type order_id: str
        """

        self._order_id = order_id

    @property
    def reference_id(self):
        """Gets the reference_id of this GiftCardActivityActivate.

        If your application does not use the Square Orders API, you can optionally use this field  to associate the gift card activity with a client-side entity.

        :return: The reference_id of this GiftCardActivityActivate.
        :rtype: str
        """
        return self._reference_id

    @reference_id.setter
    def reference_id(self, reference_id):
        """Sets the reference_id of this GiftCardActivityActivate.

        If your application does not use the Square Orders API, you can optionally use this field  to associate the gift card activity with a client-side entity.

        :param reference_id: The reference_id of this GiftCardActivityActivate.
        :type reference_id: str
        """

        self._reference_id = reference_id
