# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListCustomersRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cursor: str=None, limit: int=None, sort_field: str=None, sort_order: str=None):
        """ListCustomersRequest - a model defined in OpenAPI

        :param cursor: The cursor of this ListCustomersRequest.
        :param limit: The limit of this ListCustomersRequest.
        :param sort_field: The sort_field of this ListCustomersRequest.
        :param sort_order: The sort_order of this ListCustomersRequest.
        """
        self.openapi_types = {
            'cursor': str,
            'limit': int,
            'sort_field': str,
            'sort_order': str
        }

        self.attribute_map = {
            'cursor': 'cursor',
            'limit': 'limit',
            'sort_field': 'sort_field',
            'sort_order': 'sort_order'
        }

        self._cursor = cursor
        self._limit = limit
        self._sort_field = sort_field
        self._sort_order = sort_order

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListCustomersRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListCustomersRequest of this ListCustomersRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cursor(self):
        """Gets the cursor of this ListCustomersRequest.

        A pagination cursor returned by a previous call to this endpoint. Provide this cursor to retrieve the next set of results for your original query.  For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination).

        :return: The cursor of this ListCustomersRequest.
        :rtype: str
        """
        return self._cursor

    @cursor.setter
    def cursor(self, cursor):
        """Sets the cursor of this ListCustomersRequest.

        A pagination cursor returned by a previous call to this endpoint. Provide this cursor to retrieve the next set of results for your original query.  For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination).

        :param cursor: The cursor of this ListCustomersRequest.
        :type cursor: str
        """

        self._cursor = cursor

    @property
    def limit(self):
        """Gets the limit of this ListCustomersRequest.

        The maximum number of results to return in a single page. This limit is advisory. The response might contain more or fewer results.  The limit is ignored if it is less than 1 or greater than 100. The default value is 100.  For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination).

        :return: The limit of this ListCustomersRequest.
        :rtype: int
        """
        return self._limit

    @limit.setter
    def limit(self, limit):
        """Sets the limit of this ListCustomersRequest.

        The maximum number of results to return in a single page. This limit is advisory. The response might contain more or fewer results.  The limit is ignored if it is less than 1 or greater than 100. The default value is 100.  For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination).

        :param limit: The limit of this ListCustomersRequest.
        :type limit: int
        """
        if limit is not None and limit > 100:
            raise ValueError("Invalid value for `limit`, must be a value less than or equal to `100`")
        if limit is not None and limit < 1:
            raise ValueError("Invalid value for `limit`, must be a value greater than or equal to `1`")

        self._limit = limit

    @property
    def sort_field(self):
        """Gets the sort_field of this ListCustomersRequest.

        Indicates how customers should be sorted.  The default value is `DEFAULT`.

        :return: The sort_field of this ListCustomersRequest.
        :rtype: str
        """
        return self._sort_field

    @sort_field.setter
    def sort_field(self, sort_field):
        """Sets the sort_field of this ListCustomersRequest.

        Indicates how customers should be sorted.  The default value is `DEFAULT`.

        :param sort_field: The sort_field of this ListCustomersRequest.
        :type sort_field: str
        """

        self._sort_field = sort_field

    @property
    def sort_order(self):
        """Gets the sort_order of this ListCustomersRequest.

        Indicates whether customers should be sorted in ascending (`ASC`) or descending (`DESC`) order.  The default value is `ASC`.

        :return: The sort_order of this ListCustomersRequest.
        :rtype: str
        """
        return self._sort_order

    @sort_order.setter
    def sort_order(self, sort_order):
        """Sets the sort_order of this ListCustomersRequest.

        Indicates whether customers should be sorted in ascending (`ASC`) or descending (`DESC`) order.  The default value is `ASC`.

        :param sort_order: The sort_order of this ListCustomersRequest.
        :type sort_order: str
        """

        self._sort_order = sort_order
