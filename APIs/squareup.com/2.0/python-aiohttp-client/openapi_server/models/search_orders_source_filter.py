# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SearchOrdersSourceFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, source_names: List[str]=None):
        """SearchOrdersSourceFilter - a model defined in OpenAPI

        :param source_names: The source_names of this SearchOrdersSourceFilter.
        """
        self.openapi_types = {
            'source_names': List[str]
        }

        self.attribute_map = {
            'source_names': 'source_names'
        }

        self._source_names = source_names

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SearchOrdersSourceFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SearchOrdersSourceFilter of this SearchOrdersSourceFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source_names(self):
        """Gets the source_names of this SearchOrdersSourceFilter.

        Filters by the [Source](https://developer.squareup.com/reference/square_2021-08-18/objects/OrderSource) `name`. The filter returns any orders with a `source.name` that matches any of the listed source names.  Max: 10 source names.

        :return: The source_names of this SearchOrdersSourceFilter.
        :rtype: List[str]
        """
        return self._source_names

    @source_names.setter
    def source_names(self, source_names):
        """Sets the source_names of this SearchOrdersSourceFilter.

        Filters by the [Source](https://developer.squareup.com/reference/square_2021-08-18/objects/OrderSource) `name`. The filter returns any orders with a `source.name` that matches any of the listed source names.  Max: 10 source names.

        :param source_names: The source_names of this SearchOrdersSourceFilter.
        :type source_names: List[str]
        """

        self._source_names = source_names
