# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BatchDeleteCatalogObjectsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, object_ids: List[str]=None):
        """BatchDeleteCatalogObjectsRequest - a model defined in OpenAPI

        :param object_ids: The object_ids of this BatchDeleteCatalogObjectsRequest.
        """
        self.openapi_types = {
            'object_ids': List[str]
        }

        self.attribute_map = {
            'object_ids': 'object_ids'
        }

        self._object_ids = object_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchDeleteCatalogObjectsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchDeleteCatalogObjectsRequest of this BatchDeleteCatalogObjectsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def object_ids(self):
        """Gets the object_ids of this BatchDeleteCatalogObjectsRequest.

        The IDs of the CatalogObjects to be deleted. When an object is deleted, other objects in the graph that depend on that object will be deleted as well (for example, deleting a CatalogItem will delete its CatalogItemVariation.

        :return: The object_ids of this BatchDeleteCatalogObjectsRequest.
        :rtype: List[str]
        """
        return self._object_ids

    @object_ids.setter
    def object_ids(self, object_ids):
        """Sets the object_ids of this BatchDeleteCatalogObjectsRequest.

        The IDs of the CatalogObjects to be deleted. When an object is deleted, other objects in the graph that depend on that object will be deleted as well (for example, deleting a CatalogItem will delete its CatalogItemVariation.

        :param object_ids: The object_ids of this BatchDeleteCatalogObjectsRequest.
        :type object_ids: List[str]
        """

        self._object_ids = object_ids
