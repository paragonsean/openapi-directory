# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.catalog_info_response_limits import CatalogInfoResponseLimits
from openapi_server.models.error import Error
from openapi_server.models.standard_unit_description_group import StandardUnitDescriptionGroup
from openapi_server import util


class CatalogInfoResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, errors: List[Error]=None, limits: CatalogInfoResponseLimits=None, standard_unit_description_group: StandardUnitDescriptionGroup=None):
        """CatalogInfoResponse - a model defined in OpenAPI

        :param errors: The errors of this CatalogInfoResponse.
        :param limits: The limits of this CatalogInfoResponse.
        :param standard_unit_description_group: The standard_unit_description_group of this CatalogInfoResponse.
        """
        self.openapi_types = {
            'errors': List[Error],
            'limits': CatalogInfoResponseLimits,
            'standard_unit_description_group': StandardUnitDescriptionGroup
        }

        self.attribute_map = {
            'errors': 'errors',
            'limits': 'limits',
            'standard_unit_description_group': 'standard_unit_description_group'
        }

        self._errors = errors
        self._limits = limits
        self._standard_unit_description_group = standard_unit_description_group

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CatalogInfoResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CatalogInfoResponse of this CatalogInfoResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def errors(self):
        """Gets the errors of this CatalogInfoResponse.

        Any errors that occurred during the request.

        :return: The errors of this CatalogInfoResponse.
        :rtype: List[Error]
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this CatalogInfoResponse.

        Any errors that occurred during the request.

        :param errors: The errors of this CatalogInfoResponse.
        :type errors: List[Error]
        """

        self._errors = errors

    @property
    def limits(self):
        """Gets the limits of this CatalogInfoResponse.


        :return: The limits of this CatalogInfoResponse.
        :rtype: CatalogInfoResponseLimits
        """
        return self._limits

    @limits.setter
    def limits(self, limits):
        """Sets the limits of this CatalogInfoResponse.


        :param limits: The limits of this CatalogInfoResponse.
        :type limits: CatalogInfoResponseLimits
        """

        self._limits = limits

    @property
    def standard_unit_description_group(self):
        """Gets the standard_unit_description_group of this CatalogInfoResponse.


        :return: The standard_unit_description_group of this CatalogInfoResponse.
        :rtype: StandardUnitDescriptionGroup
        """
        return self._standard_unit_description_group

    @standard_unit_description_group.setter
    def standard_unit_description_group(self, standard_unit_description_group):
        """Sets the standard_unit_description_group of this CatalogInfoResponse.


        :param standard_unit_description_group: The standard_unit_description_group of this CatalogInfoResponse.
        :type standard_unit_description_group: StandardUnitDescriptionGroup
        """

        self._standard_unit_description_group = standard_unit_description_group
