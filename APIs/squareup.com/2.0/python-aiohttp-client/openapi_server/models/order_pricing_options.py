# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OrderPricingOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, auto_apply_discounts: bool=None, auto_apply_taxes: bool=None):
        """OrderPricingOptions - a model defined in OpenAPI

        :param auto_apply_discounts: The auto_apply_discounts of this OrderPricingOptions.
        :param auto_apply_taxes: The auto_apply_taxes of this OrderPricingOptions.
        """
        self.openapi_types = {
            'auto_apply_discounts': bool,
            'auto_apply_taxes': bool
        }

        self.attribute_map = {
            'auto_apply_discounts': 'auto_apply_discounts',
            'auto_apply_taxes': 'auto_apply_taxes'
        }

        self._auto_apply_discounts = auto_apply_discounts
        self._auto_apply_taxes = auto_apply_taxes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderPricingOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrderPricingOptions of this OrderPricingOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def auto_apply_discounts(self):
        """Gets the auto_apply_discounts of this OrderPricingOptions.

        The option to determine whether pricing rule-based discounts are automatically applied to an order.

        :return: The auto_apply_discounts of this OrderPricingOptions.
        :rtype: bool
        """
        return self._auto_apply_discounts

    @auto_apply_discounts.setter
    def auto_apply_discounts(self, auto_apply_discounts):
        """Sets the auto_apply_discounts of this OrderPricingOptions.

        The option to determine whether pricing rule-based discounts are automatically applied to an order.

        :param auto_apply_discounts: The auto_apply_discounts of this OrderPricingOptions.
        :type auto_apply_discounts: bool
        """

        self._auto_apply_discounts = auto_apply_discounts

    @property
    def auto_apply_taxes(self):
        """Gets the auto_apply_taxes of this OrderPricingOptions.

        The option to determine whether rule-based taxes are automatically applied to an order when the criteria of the corresponding rules are met.

        :return: The auto_apply_taxes of this OrderPricingOptions.
        :rtype: bool
        """
        return self._auto_apply_taxes

    @auto_apply_taxes.setter
    def auto_apply_taxes(self, auto_apply_taxes):
        """Sets the auto_apply_taxes of this OrderPricingOptions.

        The option to determine whether rule-based taxes are automatically applied to an order when the criteria of the corresponding rules are met.

        :param auto_apply_taxes: The auto_apply_taxes of this OrderPricingOptions.
        :type auto_apply_taxes: bool
        """

        self._auto_apply_taxes = auto_apply_taxes
