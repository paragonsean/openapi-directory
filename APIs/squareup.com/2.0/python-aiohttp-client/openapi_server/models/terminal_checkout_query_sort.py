# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TerminalCheckoutQuerySort(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sort_order: str=None):
        """TerminalCheckoutQuerySort - a model defined in OpenAPI

        :param sort_order: The sort_order of this TerminalCheckoutQuerySort.
        """
        self.openapi_types = {
            'sort_order': str
        }

        self.attribute_map = {
            'sort_order': 'sort_order'
        }

        self._sort_order = sort_order

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TerminalCheckoutQuerySort':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TerminalCheckoutQuerySort of this TerminalCheckoutQuerySort.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sort_order(self):
        """Gets the sort_order of this TerminalCheckoutQuerySort.

        The order in which results are listed. - `ASC` - Oldest to newest. - `DESC` - Newest to oldest (default).

        :return: The sort_order of this TerminalCheckoutQuerySort.
        :rtype: str
        """
        return self._sort_order

    @sort_order.setter
    def sort_order(self, sort_order):
        """Sets the sort_order of this TerminalCheckoutQuerySort.

        The order in which results are listed. - `ASC` - Oldest to newest. - `DESC` - Newest to oldest (default).

        :param sort_order: The sort_order of this TerminalCheckoutQuerySort.
        :type sort_order: str
        """

        self._sort_order = sort_order
