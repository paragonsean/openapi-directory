# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DisputeEvidenceType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    GENERIC_EVIDENCE = 'GENERIC_EVIDENCE'
    ONLINE_OR_APP_ACCESS_LOG = 'ONLINE_OR_APP_ACCESS_LOG'
    AUTHORIZATION_DOCUMENTATION = 'AUTHORIZATION_DOCUMENTATION'
    CANCELLATION_OR_REFUND_DOCUMENTATION = 'CANCELLATION_OR_REFUND_DOCUMENTATION'
    CARDHOLDER_COMMUNICATION = 'CARDHOLDER_COMMUNICATION'
    CARDHOLDER_INFORMATION = 'CARDHOLDER_INFORMATION'
    PURCHASE_ACKNOWLEDGEMENT = 'PURCHASE_ACKNOWLEDGEMENT'
    DUPLICATE_CHARGE_DOCUMENTATION = 'DUPLICATE_CHARGE_DOCUMENTATION'
    PRODUCT_OR_SERVICE_DESCRIPTION = 'PRODUCT_OR_SERVICE_DESCRIPTION'
    RECEIPT = 'RECEIPT'
    SERVICE_RECEIVED_DOCUMENTATION = 'SERVICE_RECEIVED_DOCUMENTATION'
    PROOF_OF_DELIVERY_DOCUMENTATION = 'PROOF_OF_DELIVERY_DOCUMENTATION'
    RELATED_TRANSACTION_DOCUMENTATION = 'RELATED_TRANSACTION_DOCUMENTATION'
    REBUTTAL_EXPLANATION = 'REBUTTAL_EXPLANATION'
    TRACKING_NUMBER = 'TRACKING_NUMBER'

    def __init__(self):
        """DisputeEvidenceType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DisputeEvidenceType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DisputeEvidenceType of this DisputeEvidenceType.
        """
        return util.deserialize_model(dikt, cls)
