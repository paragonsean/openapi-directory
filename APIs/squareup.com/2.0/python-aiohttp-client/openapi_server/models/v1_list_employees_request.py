# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class V1ListEmployeesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, batch_token: str=None, begin_created_at: str=None, begin_updated_at: str=None, end_created_at: str=None, end_updated_at: str=None, external_id: str=None, limit: int=None, order: str=None, status: str=None):
        """V1ListEmployeesRequest - a model defined in OpenAPI

        :param batch_token: The batch_token of this V1ListEmployeesRequest.
        :param begin_created_at: The begin_created_at of this V1ListEmployeesRequest.
        :param begin_updated_at: The begin_updated_at of this V1ListEmployeesRequest.
        :param end_created_at: The end_created_at of this V1ListEmployeesRequest.
        :param end_updated_at: The end_updated_at of this V1ListEmployeesRequest.
        :param external_id: The external_id of this V1ListEmployeesRequest.
        :param limit: The limit of this V1ListEmployeesRequest.
        :param order: The order of this V1ListEmployeesRequest.
        :param status: The status of this V1ListEmployeesRequest.
        """
        self.openapi_types = {
            'batch_token': str,
            'begin_created_at': str,
            'begin_updated_at': str,
            'end_created_at': str,
            'end_updated_at': str,
            'external_id': str,
            'limit': int,
            'order': str,
            'status': str
        }

        self.attribute_map = {
            'batch_token': 'batch_token',
            'begin_created_at': 'begin_created_at',
            'begin_updated_at': 'begin_updated_at',
            'end_created_at': 'end_created_at',
            'end_updated_at': 'end_updated_at',
            'external_id': 'external_id',
            'limit': 'limit',
            'order': 'order',
            'status': 'status'
        }

        self._batch_token = batch_token
        self._begin_created_at = begin_created_at
        self._begin_updated_at = begin_updated_at
        self._end_created_at = end_created_at
        self._end_updated_at = end_updated_at
        self._external_id = external_id
        self._limit = limit
        self._order = order
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'V1ListEmployeesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The V1ListEmployeesRequest of this V1ListEmployeesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def batch_token(self):
        """Gets the batch_token of this V1ListEmployeesRequest.

        A pagination cursor to retrieve the next set of results for your original query to the endpoint.

        :return: The batch_token of this V1ListEmployeesRequest.
        :rtype: str
        """
        return self._batch_token

    @batch_token.setter
    def batch_token(self, batch_token):
        """Sets the batch_token of this V1ListEmployeesRequest.

        A pagination cursor to retrieve the next set of results for your original query to the endpoint.

        :param batch_token: The batch_token of this V1ListEmployeesRequest.
        :type batch_token: str
        """

        self._batch_token = batch_token

    @property
    def begin_created_at(self):
        """Gets the begin_created_at of this V1ListEmployeesRequest.

        If filtering results by their created_at field, the beginning of the requested reporting period, in ISO 8601 format.

        :return: The begin_created_at of this V1ListEmployeesRequest.
        :rtype: str
        """
        return self._begin_created_at

    @begin_created_at.setter
    def begin_created_at(self, begin_created_at):
        """Sets the begin_created_at of this V1ListEmployeesRequest.

        If filtering results by their created_at field, the beginning of the requested reporting period, in ISO 8601 format.

        :param begin_created_at: The begin_created_at of this V1ListEmployeesRequest.
        :type begin_created_at: str
        """

        self._begin_created_at = begin_created_at

    @property
    def begin_updated_at(self):
        """Gets the begin_updated_at of this V1ListEmployeesRequest.

        If filtering results by their updated_at field, the beginning of the requested reporting period, in ISO 8601 format

        :return: The begin_updated_at of this V1ListEmployeesRequest.
        :rtype: str
        """
        return self._begin_updated_at

    @begin_updated_at.setter
    def begin_updated_at(self, begin_updated_at):
        """Sets the begin_updated_at of this V1ListEmployeesRequest.

        If filtering results by their updated_at field, the beginning of the requested reporting period, in ISO 8601 format

        :param begin_updated_at: The begin_updated_at of this V1ListEmployeesRequest.
        :type begin_updated_at: str
        """

        self._begin_updated_at = begin_updated_at

    @property
    def end_created_at(self):
        """Gets the end_created_at of this V1ListEmployeesRequest.

        If filtering results by their created_at field, the end of the requested reporting period, in ISO 8601 format.

        :return: The end_created_at of this V1ListEmployeesRequest.
        :rtype: str
        """
        return self._end_created_at

    @end_created_at.setter
    def end_created_at(self, end_created_at):
        """Sets the end_created_at of this V1ListEmployeesRequest.

        If filtering results by their created_at field, the end of the requested reporting period, in ISO 8601 format.

        :param end_created_at: The end_created_at of this V1ListEmployeesRequest.
        :type end_created_at: str
        """

        self._end_created_at = end_created_at

    @property
    def end_updated_at(self):
        """Gets the end_updated_at of this V1ListEmployeesRequest.

        If filtering results by there updated_at field, the end of the requested reporting period, in ISO 8601 format.

        :return: The end_updated_at of this V1ListEmployeesRequest.
        :rtype: str
        """
        return self._end_updated_at

    @end_updated_at.setter
    def end_updated_at(self, end_updated_at):
        """Sets the end_updated_at of this V1ListEmployeesRequest.

        If filtering results by there updated_at field, the end of the requested reporting period, in ISO 8601 format.

        :param end_updated_at: The end_updated_at of this V1ListEmployeesRequest.
        :type end_updated_at: str
        """

        self._end_updated_at = end_updated_at

    @property
    def external_id(self):
        """Gets the external_id of this V1ListEmployeesRequest.

        If provided, the endpoint returns only employee entities with the specified external_id.

        :return: The external_id of this V1ListEmployeesRequest.
        :rtype: str
        """
        return self._external_id

    @external_id.setter
    def external_id(self, external_id):
        """Sets the external_id of this V1ListEmployeesRequest.

        If provided, the endpoint returns only employee entities with the specified external_id.

        :param external_id: The external_id of this V1ListEmployeesRequest.
        :type external_id: str
        """

        self._external_id = external_id

    @property
    def limit(self):
        """Gets the limit of this V1ListEmployeesRequest.

        The maximum integer number of employee entities to return in a single response. Default 100, maximum 200.

        :return: The limit of this V1ListEmployeesRequest.
        :rtype: int
        """
        return self._limit

    @limit.setter
    def limit(self, limit):
        """Sets the limit of this V1ListEmployeesRequest.

        The maximum integer number of employee entities to return in a single response. Default 100, maximum 200.

        :param limit: The limit of this V1ListEmployeesRequest.
        :type limit: int
        """

        self._limit = limit

    @property
    def order(self):
        """Gets the order of this V1ListEmployeesRequest.

        The order in which employees are listed in the response, based on their created_at field.      Default value: ASC

        :return: The order of this V1ListEmployeesRequest.
        :rtype: str
        """
        return self._order

    @order.setter
    def order(self, order):
        """Sets the order of this V1ListEmployeesRequest.

        The order in which employees are listed in the response, based on their created_at field.      Default value: ASC

        :param order: The order of this V1ListEmployeesRequest.
        :type order: str
        """

        self._order = order

    @property
    def status(self):
        """Gets the status of this V1ListEmployeesRequest.

        If provided, the endpoint returns only employee entities with the specified status (ACTIVE or INACTIVE).

        :return: The status of this V1ListEmployeesRequest.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this V1ListEmployeesRequest.

        If provided, the endpoint returns only employee entities with the specified status (ACTIVE or INACTIVE).

        :param status: The status of this V1ListEmployeesRequest.
        :type status: str
        """

        self._status = status
