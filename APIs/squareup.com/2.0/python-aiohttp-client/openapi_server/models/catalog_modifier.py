# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.money import Money
from openapi_server import util


class CatalogModifier(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, modifier_list_id: str=None, name: str=None, ordinal: int=None, price_money: Money=None):
        """CatalogModifier - a model defined in OpenAPI

        :param modifier_list_id: The modifier_list_id of this CatalogModifier.
        :param name: The name of this CatalogModifier.
        :param ordinal: The ordinal of this CatalogModifier.
        :param price_money: The price_money of this CatalogModifier.
        """
        self.openapi_types = {
            'modifier_list_id': str,
            'name': str,
            'ordinal': int,
            'price_money': Money
        }

        self.attribute_map = {
            'modifier_list_id': 'modifier_list_id',
            'name': 'name',
            'ordinal': 'ordinal',
            'price_money': 'price_money'
        }

        self._modifier_list_id = modifier_list_id
        self._name = name
        self._ordinal = ordinal
        self._price_money = price_money

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CatalogModifier':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CatalogModifier of this CatalogModifier.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def modifier_list_id(self):
        """Gets the modifier_list_id of this CatalogModifier.

        The ID of the `CatalogModifierList` associated with this modifier.

        :return: The modifier_list_id of this CatalogModifier.
        :rtype: str
        """
        return self._modifier_list_id

    @modifier_list_id.setter
    def modifier_list_id(self, modifier_list_id):
        """Sets the modifier_list_id of this CatalogModifier.

        The ID of the `CatalogModifierList` associated with this modifier.

        :param modifier_list_id: The modifier_list_id of this CatalogModifier.
        :type modifier_list_id: str
        """

        self._modifier_list_id = modifier_list_id

    @property
    def name(self):
        """Gets the name of this CatalogModifier.

        The modifier name.  This is a searchable attribute for use in applicable query filters, and its value length is of Unicode code points.

        :return: The name of this CatalogModifier.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CatalogModifier.

        The modifier name.  This is a searchable attribute for use in applicable query filters, and its value length is of Unicode code points.

        :param name: The name of this CatalogModifier.
        :type name: str
        """
        if name is not None and len(name) > 255:
            raise ValueError("Invalid value for `name`, length must be less than or equal to `255`")

        self._name = name

    @property
    def ordinal(self):
        """Gets the ordinal of this CatalogModifier.

        Determines where this `CatalogModifier` appears in the `CatalogModifierList`.

        :return: The ordinal of this CatalogModifier.
        :rtype: int
        """
        return self._ordinal

    @ordinal.setter
    def ordinal(self, ordinal):
        """Sets the ordinal of this CatalogModifier.

        Determines where this `CatalogModifier` appears in the `CatalogModifierList`.

        :param ordinal: The ordinal of this CatalogModifier.
        :type ordinal: int
        """

        self._ordinal = ordinal

    @property
    def price_money(self):
        """Gets the price_money of this CatalogModifier.


        :return: The price_money of this CatalogModifier.
        :rtype: Money
        """
        return self._price_money

    @price_money.setter
    def price_money(self, price_money):
        """Sets the price_money of this CatalogModifier.


        :param price_money: The price_money of this CatalogModifier.
        :type price_money: Money
        """

        self._price_money = price_money
