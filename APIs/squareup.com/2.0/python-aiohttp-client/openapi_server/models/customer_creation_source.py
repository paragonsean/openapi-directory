# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CustomerCreationSource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    OTHER = 'OTHER'
    APPOINTMENTS = 'APPOINTMENTS'
    COUPON = 'COUPON'
    DELETION_RECOVERY = 'DELETION_RECOVERY'
    DIRECTORY = 'DIRECTORY'
    EGIFTING = 'EGIFTING'
    EMAIL_COLLECTION = 'EMAIL_COLLECTION'
    FEEDBACK = 'FEEDBACK'
    IMPORT = 'IMPORT'
    INVOICES = 'INVOICES'
    LOYALTY = 'LOYALTY'
    MARKETING = 'MARKETING'
    MERGE = 'MERGE'
    ONLINE_STORE = 'ONLINE_STORE'
    INSTANT_PROFILE = 'INSTANT_PROFILE'
    TERMINAL = 'TERMINAL'
    THIRD_PARTY = 'THIRD_PARTY'
    THIRD_PARTY_IMPORT = 'THIRD_PARTY_IMPORT'
    UNMERGE_RECOVERY = 'UNMERGE_RECOVERY'

    def __init__(self):
        """CustomerCreationSource - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomerCreationSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomerCreationSource of this CustomerCreationSource.
        """
        return util.deserialize_model(dikt, cls)
