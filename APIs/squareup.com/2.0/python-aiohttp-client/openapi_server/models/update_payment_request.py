# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.payment import Payment
from openapi_server import util


class UpdatePaymentRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, idempotency_key: str=None, payment: Payment=None):
        """UpdatePaymentRequest - a model defined in OpenAPI

        :param idempotency_key: The idempotency_key of this UpdatePaymentRequest.
        :param payment: The payment of this UpdatePaymentRequest.
        """
        self.openapi_types = {
            'idempotency_key': str,
            'payment': Payment
        }

        self.attribute_map = {
            'idempotency_key': 'idempotency_key',
            'payment': 'payment'
        }

        self._idempotency_key = idempotency_key
        self._payment = payment

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdatePaymentRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdatePaymentRequest of this UpdatePaymentRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def idempotency_key(self):
        """Gets the idempotency_key of this UpdatePaymentRequest.

        A unique string that identifies this `UpdatePayment` request. Keys can be any valid string but must be unique for every `UpdatePayment` request.  The maximum is 45 characters.  For more information, see [Idempotency](https://developer.squareup.com/docs/basics/api101/idempotency).

        :return: The idempotency_key of this UpdatePaymentRequest.
        :rtype: str
        """
        return self._idempotency_key

    @idempotency_key.setter
    def idempotency_key(self, idempotency_key):
        """Sets the idempotency_key of this UpdatePaymentRequest.

        A unique string that identifies this `UpdatePayment` request. Keys can be any valid string but must be unique for every `UpdatePayment` request.  The maximum is 45 characters.  For more information, see [Idempotency](https://developer.squareup.com/docs/basics/api101/idempotency).

        :param idempotency_key: The idempotency_key of this UpdatePaymentRequest.
        :type idempotency_key: str
        """
        if idempotency_key is None:
            raise ValueError("Invalid value for `idempotency_key`, must not be `None`")
        if idempotency_key is not None and len(idempotency_key) > 45:
            raise ValueError("Invalid value for `idempotency_key`, length must be less than or equal to `45`")
        if idempotency_key is not None and len(idempotency_key) < 1:
            raise ValueError("Invalid value for `idempotency_key`, length must be greater than or equal to `1`")

        self._idempotency_key = idempotency_key

    @property
    def payment(self):
        """Gets the payment of this UpdatePaymentRequest.


        :return: The payment of this UpdatePaymentRequest.
        :rtype: Payment
        """
        return self._payment

    @payment.setter
    def payment(self, payment):
        """Sets the payment of this UpdatePaymentRequest.


        :param payment: The payment of this UpdatePaymentRequest.
        :type payment: Payment
        """

        self._payment = payment
