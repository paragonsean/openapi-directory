# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.money import Money
from openapi_server import util


class CalculateLoyaltyPointsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, order_id: str=None, transaction_amount_money: Money=None):
        """CalculateLoyaltyPointsRequest - a model defined in OpenAPI

        :param order_id: The order_id of this CalculateLoyaltyPointsRequest.
        :param transaction_amount_money: The transaction_amount_money of this CalculateLoyaltyPointsRequest.
        """
        self.openapi_types = {
            'order_id': str,
            'transaction_amount_money': Money
        }

        self.attribute_map = {
            'order_id': 'order_id',
            'transaction_amount_money': 'transaction_amount_money'
        }

        self._order_id = order_id
        self._transaction_amount_money = transaction_amount_money

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CalculateLoyaltyPointsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CalculateLoyaltyPointsRequest of this CalculateLoyaltyPointsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def order_id(self):
        """Gets the order_id of this CalculateLoyaltyPointsRequest.

        The [order](https://developer.squareup.com/reference/square_2021-08-18/objects/Order) ID for which to calculate the points. Specify this field if your application uses the Orders API to process orders. Otherwise, specify the `transaction_amount_money`.

        :return: The order_id of this CalculateLoyaltyPointsRequest.
        :rtype: str
        """
        return self._order_id

    @order_id.setter
    def order_id(self, order_id):
        """Sets the order_id of this CalculateLoyaltyPointsRequest.

        The [order](https://developer.squareup.com/reference/square_2021-08-18/objects/Order) ID for which to calculate the points. Specify this field if your application uses the Orders API to process orders. Otherwise, specify the `transaction_amount_money`.

        :param order_id: The order_id of this CalculateLoyaltyPointsRequest.
        :type order_id: str
        """

        self._order_id = order_id

    @property
    def transaction_amount_money(self):
        """Gets the transaction_amount_money of this CalculateLoyaltyPointsRequest.


        :return: The transaction_amount_money of this CalculateLoyaltyPointsRequest.
        :rtype: Money
        """
        return self._transaction_amount_money

    @transaction_amount_money.setter
    def transaction_amount_money(self, transaction_amount_money):
        """Sets the transaction_amount_money of this CalculateLoyaltyPointsRequest.


        :param transaction_amount_money: The transaction_amount_money of this CalculateLoyaltyPointsRequest.
        :type transaction_amount_money: Money
        """

        self._transaction_amount_money = transaction_amount_money
