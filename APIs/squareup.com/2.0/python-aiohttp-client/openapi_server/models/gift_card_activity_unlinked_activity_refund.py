# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.money import Money
from openapi_server import util


class GiftCardActivityUnlinkedActivityRefund(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount_money: Money=None, payment_id: str=None, reference_id: str=None):
        """GiftCardActivityUnlinkedActivityRefund - a model defined in OpenAPI

        :param amount_money: The amount_money of this GiftCardActivityUnlinkedActivityRefund.
        :param payment_id: The payment_id of this GiftCardActivityUnlinkedActivityRefund.
        :param reference_id: The reference_id of this GiftCardActivityUnlinkedActivityRefund.
        """
        self.openapi_types = {
            'amount_money': Money,
            'payment_id': str,
            'reference_id': str
        }

        self.attribute_map = {
            'amount_money': 'amount_money',
            'payment_id': 'payment_id',
            'reference_id': 'reference_id'
        }

        self._amount_money = amount_money
        self._payment_id = payment_id
        self._reference_id = reference_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GiftCardActivityUnlinkedActivityRefund':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GiftCardActivityUnlinkedActivityRefund of this GiftCardActivityUnlinkedActivityRefund.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount_money(self):
        """Gets the amount_money of this GiftCardActivityUnlinkedActivityRefund.


        :return: The amount_money of this GiftCardActivityUnlinkedActivityRefund.
        :rtype: Money
        """
        return self._amount_money

    @amount_money.setter
    def amount_money(self, amount_money):
        """Sets the amount_money of this GiftCardActivityUnlinkedActivityRefund.


        :param amount_money: The amount_money of this GiftCardActivityUnlinkedActivityRefund.
        :type amount_money: Money
        """
        if amount_money is None:
            raise ValueError("Invalid value for `amount_money`, must not be `None`")

        self._amount_money = amount_money

    @property
    def payment_id(self):
        """Gets the payment_id of this GiftCardActivityUnlinkedActivityRefund.

        When using the Square Payments API, the ID of the payment that was refunded to this gift card.

        :return: The payment_id of this GiftCardActivityUnlinkedActivityRefund.
        :rtype: str
        """
        return self._payment_id

    @payment_id.setter
    def payment_id(self, payment_id):
        """Sets the payment_id of this GiftCardActivityUnlinkedActivityRefund.

        When using the Square Payments API, the ID of the payment that was refunded to this gift card.

        :param payment_id: The payment_id of this GiftCardActivityUnlinkedActivityRefund.
        :type payment_id: str
        """

        self._payment_id = payment_id

    @property
    def reference_id(self):
        """Gets the reference_id of this GiftCardActivityUnlinkedActivityRefund.

        A client-specified ID to associate an entity, in another system, with this gift card activity. This can be used to track the order or payment related information when the Square Payments API is not being used.

        :return: The reference_id of this GiftCardActivityUnlinkedActivityRefund.
        :rtype: str
        """
        return self._reference_id

    @reference_id.setter
    def reference_id(self, reference_id):
        """Sets the reference_id of this GiftCardActivityUnlinkedActivityRefund.

        A client-specified ID to associate an entity, in another system, with this gift card activity. This can be used to track the order or payment related information when the Square Payments API is not being used.

        :param reference_id: The reference_id of this GiftCardActivityUnlinkedActivityRefund.
        :type reference_id: str
        """

        self._reference_id = reference_id
