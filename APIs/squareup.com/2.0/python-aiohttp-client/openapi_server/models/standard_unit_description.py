# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.measurement_unit import MeasurementUnit
from openapi_server import util


class StandardUnitDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, abbreviation: str=None, name: str=None, unit: MeasurementUnit=None):
        """StandardUnitDescription - a model defined in OpenAPI

        :param abbreviation: The abbreviation of this StandardUnitDescription.
        :param name: The name of this StandardUnitDescription.
        :param unit: The unit of this StandardUnitDescription.
        """
        self.openapi_types = {
            'abbreviation': str,
            'name': str,
            'unit': MeasurementUnit
        }

        self.attribute_map = {
            'abbreviation': 'abbreviation',
            'name': 'name',
            'unit': 'unit'
        }

        self._abbreviation = abbreviation
        self._name = name
        self._unit = unit

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StandardUnitDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StandardUnitDescription of this StandardUnitDescription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def abbreviation(self):
        """Gets the abbreviation of this StandardUnitDescription.

        UI display abbreviation for the measurement unit. For example, 'lb'.

        :return: The abbreviation of this StandardUnitDescription.
        :rtype: str
        """
        return self._abbreviation

    @abbreviation.setter
    def abbreviation(self, abbreviation):
        """Sets the abbreviation of this StandardUnitDescription.

        UI display abbreviation for the measurement unit. For example, 'lb'.

        :param abbreviation: The abbreviation of this StandardUnitDescription.
        :type abbreviation: str
        """

        self._abbreviation = abbreviation

    @property
    def name(self):
        """Gets the name of this StandardUnitDescription.

        UI display name of the measurement unit. For example, 'Pound'.

        :return: The name of this StandardUnitDescription.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this StandardUnitDescription.

        UI display name of the measurement unit. For example, 'Pound'.

        :param name: The name of this StandardUnitDescription.
        :type name: str
        """

        self._name = name

    @property
    def unit(self):
        """Gets the unit of this StandardUnitDescription.


        :return: The unit of this StandardUnitDescription.
        :rtype: MeasurementUnit
        """
        return self._unit

    @unit.setter
    def unit(self, unit):
        """Sets the unit of this StandardUnitDescription.


        :param unit: The unit of this StandardUnitDescription.
        :type unit: MeasurementUnit
        """

        self._unit = unit
