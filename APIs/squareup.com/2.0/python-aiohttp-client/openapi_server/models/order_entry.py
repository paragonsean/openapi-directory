# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OrderEntry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, location_id: str=None, order_id: str=None, version: int=None):
        """OrderEntry - a model defined in OpenAPI

        :param location_id: The location_id of this OrderEntry.
        :param order_id: The order_id of this OrderEntry.
        :param version: The version of this OrderEntry.
        """
        self.openapi_types = {
            'location_id': str,
            'order_id': str,
            'version': int
        }

        self.attribute_map = {
            'location_id': 'location_id',
            'order_id': 'order_id',
            'version': 'version'
        }

        self._location_id = location_id
        self._order_id = order_id
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderEntry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrderEntry of this OrderEntry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def location_id(self):
        """Gets the location_id of this OrderEntry.

        The location ID the order belongs to.

        :return: The location_id of this OrderEntry.
        :rtype: str
        """
        return self._location_id

    @location_id.setter
    def location_id(self, location_id):
        """Sets the location_id of this OrderEntry.

        The location ID the order belongs to.

        :param location_id: The location_id of this OrderEntry.
        :type location_id: str
        """

        self._location_id = location_id

    @property
    def order_id(self):
        """Gets the order_id of this OrderEntry.

        The ID of the order.

        :return: The order_id of this OrderEntry.
        :rtype: str
        """
        return self._order_id

    @order_id.setter
    def order_id(self, order_id):
        """Sets the order_id of this OrderEntry.

        The ID of the order.

        :param order_id: The order_id of this OrderEntry.
        :type order_id: str
        """

        self._order_id = order_id

    @property
    def version(self):
        """Gets the version of this OrderEntry.

        The version number, which is incremented each time an update is committed to the order. Orders that were not created through the API do not include a version number and therefore cannot be updated.  [Read more about working with versions.](https://developer.squareup.com/docs/orders-api/manage-orders#update-orders)

        :return: The version of this OrderEntry.
        :rtype: int
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this OrderEntry.

        The version number, which is incremented each time an update is committed to the order. Orders that were not created through the API do not include a version number and therefore cannot be updated.  [Read more about working with versions.](https://developer.squareup.com/docs/orders-api/manage-orders#update-orders)

        :param version: The version of this OrderEntry.
        :type version: int
        """

        self._version = version
