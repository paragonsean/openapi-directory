# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SearchOrdersFulfillmentFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fulfillment_states: List[str]=None, fulfillment_types: List[str]=None):
        """SearchOrdersFulfillmentFilter - a model defined in OpenAPI

        :param fulfillment_states: The fulfillment_states of this SearchOrdersFulfillmentFilter.
        :param fulfillment_types: The fulfillment_types of this SearchOrdersFulfillmentFilter.
        """
        self.openapi_types = {
            'fulfillment_states': List[str],
            'fulfillment_types': List[str]
        }

        self.attribute_map = {
            'fulfillment_states': 'fulfillment_states',
            'fulfillment_types': 'fulfillment_types'
        }

        self._fulfillment_states = fulfillment_states
        self._fulfillment_types = fulfillment_types

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SearchOrdersFulfillmentFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SearchOrdersFulfillmentFilter of this SearchOrdersFulfillmentFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fulfillment_states(self):
        """Gets the fulfillment_states of this SearchOrdersFulfillmentFilter.

        A list of [fulfillment states](https://developer.squareup.com/reference/square_2021-08-18/objects/OrderFulfillmentState) to filter for. The list returns orders if any of its fulfillments match any of the fulfillment states listed in this field.

        :return: The fulfillment_states of this SearchOrdersFulfillmentFilter.
        :rtype: List[str]
        """
        return self._fulfillment_states

    @fulfillment_states.setter
    def fulfillment_states(self, fulfillment_states):
        """Sets the fulfillment_states of this SearchOrdersFulfillmentFilter.

        A list of [fulfillment states](https://developer.squareup.com/reference/square_2021-08-18/objects/OrderFulfillmentState) to filter for. The list returns orders if any of its fulfillments match any of the fulfillment states listed in this field.

        :param fulfillment_states: The fulfillment_states of this SearchOrdersFulfillmentFilter.
        :type fulfillment_states: List[str]
        """

        self._fulfillment_states = fulfillment_states

    @property
    def fulfillment_types(self):
        """Gets the fulfillment_types of this SearchOrdersFulfillmentFilter.

        A list of [fulfillment types](https://developer.squareup.com/reference/square_2021-08-18/enums/OrderFulfillmentType) to filter for. The list returns orders if any of its fulfillments match any of the fulfillment types listed in this field.

        :return: The fulfillment_types of this SearchOrdersFulfillmentFilter.
        :rtype: List[str]
        """
        return self._fulfillment_types

    @fulfillment_types.setter
    def fulfillment_types(self, fulfillment_types):
        """Sets the fulfillment_types of this SearchOrdersFulfillmentFilter.

        A list of [fulfillment types](https://developer.squareup.com/reference/square_2021-08-18/enums/OrderFulfillmentType) to filter for. The list returns orders if any of its fulfillments match any of the fulfillment types listed in this field.

        :param fulfillment_types: The fulfillment_types of this SearchOrdersFulfillmentFilter.
        :type fulfillment_types: List[str]
        """

        self._fulfillment_types = fulfillment_types
