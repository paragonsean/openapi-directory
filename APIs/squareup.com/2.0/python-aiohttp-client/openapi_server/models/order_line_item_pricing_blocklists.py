# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.order_line_item_pricing_blocklists_blocked_discount import OrderLineItemPricingBlocklistsBlockedDiscount
from openapi_server.models.order_line_item_pricing_blocklists_blocked_tax import OrderLineItemPricingBlocklistsBlockedTax
from openapi_server import util


class OrderLineItemPricingBlocklists(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, blocked_discounts: List[OrderLineItemPricingBlocklistsBlockedDiscount]=None, blocked_taxes: List[OrderLineItemPricingBlocklistsBlockedTax]=None):
        """OrderLineItemPricingBlocklists - a model defined in OpenAPI

        :param blocked_discounts: The blocked_discounts of this OrderLineItemPricingBlocklists.
        :param blocked_taxes: The blocked_taxes of this OrderLineItemPricingBlocklists.
        """
        self.openapi_types = {
            'blocked_discounts': List[OrderLineItemPricingBlocklistsBlockedDiscount],
            'blocked_taxes': List[OrderLineItemPricingBlocklistsBlockedTax]
        }

        self.attribute_map = {
            'blocked_discounts': 'blocked_discounts',
            'blocked_taxes': 'blocked_taxes'
        }

        self._blocked_discounts = blocked_discounts
        self._blocked_taxes = blocked_taxes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderLineItemPricingBlocklists':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrderLineItemPricingBlocklists of this OrderLineItemPricingBlocklists.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def blocked_discounts(self):
        """Gets the blocked_discounts of this OrderLineItemPricingBlocklists.

        A list of discounts blocked from applying to the line item.  Discounts can be blocked by the `discount_uid` (for ad hoc discounts) or  the `discount_catalog_object_id` (for catalog discounts).

        :return: The blocked_discounts of this OrderLineItemPricingBlocklists.
        :rtype: List[OrderLineItemPricingBlocklistsBlockedDiscount]
        """
        return self._blocked_discounts

    @blocked_discounts.setter
    def blocked_discounts(self, blocked_discounts):
        """Sets the blocked_discounts of this OrderLineItemPricingBlocklists.

        A list of discounts blocked from applying to the line item.  Discounts can be blocked by the `discount_uid` (for ad hoc discounts) or  the `discount_catalog_object_id` (for catalog discounts).

        :param blocked_discounts: The blocked_discounts of this OrderLineItemPricingBlocklists.
        :type blocked_discounts: List[OrderLineItemPricingBlocklistsBlockedDiscount]
        """

        self._blocked_discounts = blocked_discounts

    @property
    def blocked_taxes(self):
        """Gets the blocked_taxes of this OrderLineItemPricingBlocklists.

        A list of taxes blocked from applying to the line item.  Taxes can be blocked by the `tax_uid` (for ad hoc taxes) or  the `tax_catalog_object_id` (for catalog taxes).

        :return: The blocked_taxes of this OrderLineItemPricingBlocklists.
        :rtype: List[OrderLineItemPricingBlocklistsBlockedTax]
        """
        return self._blocked_taxes

    @blocked_taxes.setter
    def blocked_taxes(self, blocked_taxes):
        """Sets the blocked_taxes of this OrderLineItemPricingBlocklists.

        A list of taxes blocked from applying to the line item.  Taxes can be blocked by the `tax_uid` (for ad hoc taxes) or  the `tax_catalog_object_id` (for catalog taxes).

        :param blocked_taxes: The blocked_taxes of this OrderLineItemPricingBlocklists.
        :type blocked_taxes: List[OrderLineItemPricingBlocklistsBlockedTax]
        """

        self._blocked_taxes = blocked_taxes
