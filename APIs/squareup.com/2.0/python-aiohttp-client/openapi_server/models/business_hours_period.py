# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BusinessHoursPeriod(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, day_of_week: str=None, end_local_time: str=None, start_local_time: str=None):
        """BusinessHoursPeriod - a model defined in OpenAPI

        :param day_of_week: The day_of_week of this BusinessHoursPeriod.
        :param end_local_time: The end_local_time of this BusinessHoursPeriod.
        :param start_local_time: The start_local_time of this BusinessHoursPeriod.
        """
        self.openapi_types = {
            'day_of_week': str,
            'end_local_time': str,
            'start_local_time': str
        }

        self.attribute_map = {
            'day_of_week': 'day_of_week',
            'end_local_time': 'end_local_time',
            'start_local_time': 'start_local_time'
        }

        self._day_of_week = day_of_week
        self._end_local_time = end_local_time
        self._start_local_time = start_local_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BusinessHoursPeriod':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BusinessHoursPeriod of this BusinessHoursPeriod.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def day_of_week(self):
        """Gets the day_of_week of this BusinessHoursPeriod.

        The day of week for this time period.

        :return: The day_of_week of this BusinessHoursPeriod.
        :rtype: str
        """
        return self._day_of_week

    @day_of_week.setter
    def day_of_week(self, day_of_week):
        """Sets the day_of_week of this BusinessHoursPeriod.

        The day of week for this time period.

        :param day_of_week: The day_of_week of this BusinessHoursPeriod.
        :type day_of_week: str
        """

        self._day_of_week = day_of_week

    @property
    def end_local_time(self):
        """Gets the end_local_time of this BusinessHoursPeriod.

        The end time of a business hours period, specified in local time using partial-time RFC 3339 format.

        :return: The end_local_time of this BusinessHoursPeriod.
        :rtype: str
        """
        return self._end_local_time

    @end_local_time.setter
    def end_local_time(self, end_local_time):
        """Sets the end_local_time of this BusinessHoursPeriod.

        The end time of a business hours period, specified in local time using partial-time RFC 3339 format.

        :param end_local_time: The end_local_time of this BusinessHoursPeriod.
        :type end_local_time: str
        """

        self._end_local_time = end_local_time

    @property
    def start_local_time(self):
        """Gets the start_local_time of this BusinessHoursPeriod.

        The start time of a business hours period, specified in local time using partial-time RFC 3339 format.

        :return: The start_local_time of this BusinessHoursPeriod.
        :rtype: str
        """
        return self._start_local_time

    @start_local_time.setter
    def start_local_time(self, start_local_time):
        """Sets the start_local_time of this BusinessHoursPeriod.

        The start time of a business hours period, specified in local time using partial-time RFC 3339 format.

        :param start_local_time: The start_local_time of this BusinessHoursPeriod.
        :type start_local_time: str
        """

        self._start_local_time = start_local_time
