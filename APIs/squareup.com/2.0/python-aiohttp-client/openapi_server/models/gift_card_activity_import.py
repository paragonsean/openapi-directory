# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.money import Money
from openapi_server import util


class GiftCardActivityImport(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount_money: Money=None):
        """GiftCardActivityImport - a model defined in OpenAPI

        :param amount_money: The amount_money of this GiftCardActivityImport.
        """
        self.openapi_types = {
            'amount_money': Money
        }

        self.attribute_map = {
            'amount_money': 'amount_money'
        }

        self._amount_money = amount_money

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GiftCardActivityImport':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GiftCardActivityImport of this GiftCardActivityImport.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount_money(self):
        """Gets the amount_money of this GiftCardActivityImport.


        :return: The amount_money of this GiftCardActivityImport.
        :rtype: Money
        """
        return self._amount_money

    @amount_money.setter
    def amount_money(self, amount_money):
        """Sets the amount_money of this GiftCardActivityImport.


        :param amount_money: The amount_money of this GiftCardActivityImport.
        :type amount_money: Money
        """
        if amount_money is None:
            raise ValueError("Invalid value for `amount_money`, must not be `None`")

        self._amount_money = amount_money
