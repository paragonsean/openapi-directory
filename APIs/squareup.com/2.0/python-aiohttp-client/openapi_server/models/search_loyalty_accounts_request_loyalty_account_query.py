# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.loyalty_account_mapping import LoyaltyAccountMapping
from openapi_server import util


class SearchLoyaltyAccountsRequestLoyaltyAccountQuery(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, customer_ids: List[str]=None, mappings: List[LoyaltyAccountMapping]=None):
        """SearchLoyaltyAccountsRequestLoyaltyAccountQuery - a model defined in OpenAPI

        :param customer_ids: The customer_ids of this SearchLoyaltyAccountsRequestLoyaltyAccountQuery.
        :param mappings: The mappings of this SearchLoyaltyAccountsRequestLoyaltyAccountQuery.
        """
        self.openapi_types = {
            'customer_ids': List[str],
            'mappings': List[LoyaltyAccountMapping]
        }

        self.attribute_map = {
            'customer_ids': 'customer_ids',
            'mappings': 'mappings'
        }

        self._customer_ids = customer_ids
        self._mappings = mappings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SearchLoyaltyAccountsRequestLoyaltyAccountQuery':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SearchLoyaltyAccountsRequestLoyaltyAccountQuery of this SearchLoyaltyAccountsRequestLoyaltyAccountQuery.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def customer_ids(self):
        """Gets the customer_ids of this SearchLoyaltyAccountsRequestLoyaltyAccountQuery.

        The set of customer IDs to use in the loyalty account search.    This cannot be combined with `mappings`.    Max: 30 customer IDs

        :return: The customer_ids of this SearchLoyaltyAccountsRequestLoyaltyAccountQuery.
        :rtype: List[str]
        """
        return self._customer_ids

    @customer_ids.setter
    def customer_ids(self, customer_ids):
        """Sets the customer_ids of this SearchLoyaltyAccountsRequestLoyaltyAccountQuery.

        The set of customer IDs to use in the loyalty account search.    This cannot be combined with `mappings`.    Max: 30 customer IDs

        :param customer_ids: The customer_ids of this SearchLoyaltyAccountsRequestLoyaltyAccountQuery.
        :type customer_ids: List[str]
        """

        self._customer_ids = customer_ids

    @property
    def mappings(self):
        """Gets the mappings of this SearchLoyaltyAccountsRequestLoyaltyAccountQuery.

        The set of mappings to use in the loyalty account search.    This cannot be combined with `customer_ids`.    Max: 30 mappings

        :return: The mappings of this SearchLoyaltyAccountsRequestLoyaltyAccountQuery.
        :rtype: List[LoyaltyAccountMapping]
        """
        return self._mappings

    @mappings.setter
    def mappings(self, mappings):
        """Sets the mappings of this SearchLoyaltyAccountsRequestLoyaltyAccountQuery.

        The set of mappings to use in the loyalty account search.    This cannot be combined with `customer_ids`.    Max: 30 mappings

        :param mappings: The mappings of this SearchLoyaltyAccountsRequestLoyaltyAccountQuery.
        :type mappings: List[LoyaltyAccountMapping]
        """

        self._mappings = mappings
