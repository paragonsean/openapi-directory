# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.search_orders_customer_filter import SearchOrdersCustomerFilter
from openapi_server.models.search_orders_date_time_filter import SearchOrdersDateTimeFilter
from openapi_server.models.search_orders_fulfillment_filter import SearchOrdersFulfillmentFilter
from openapi_server.models.search_orders_source_filter import SearchOrdersSourceFilter
from openapi_server.models.search_orders_state_filter import SearchOrdersStateFilter
from openapi_server import util


class SearchOrdersFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, customer_filter: SearchOrdersCustomerFilter=None, date_time_filter: SearchOrdersDateTimeFilter=None, fulfillment_filter: SearchOrdersFulfillmentFilter=None, source_filter: SearchOrdersSourceFilter=None, state_filter: SearchOrdersStateFilter=None):
        """SearchOrdersFilter - a model defined in OpenAPI

        :param customer_filter: The customer_filter of this SearchOrdersFilter.
        :param date_time_filter: The date_time_filter of this SearchOrdersFilter.
        :param fulfillment_filter: The fulfillment_filter of this SearchOrdersFilter.
        :param source_filter: The source_filter of this SearchOrdersFilter.
        :param state_filter: The state_filter of this SearchOrdersFilter.
        """
        self.openapi_types = {
            'customer_filter': SearchOrdersCustomerFilter,
            'date_time_filter': SearchOrdersDateTimeFilter,
            'fulfillment_filter': SearchOrdersFulfillmentFilter,
            'source_filter': SearchOrdersSourceFilter,
            'state_filter': SearchOrdersStateFilter
        }

        self.attribute_map = {
            'customer_filter': 'customer_filter',
            'date_time_filter': 'date_time_filter',
            'fulfillment_filter': 'fulfillment_filter',
            'source_filter': 'source_filter',
            'state_filter': 'state_filter'
        }

        self._customer_filter = customer_filter
        self._date_time_filter = date_time_filter
        self._fulfillment_filter = fulfillment_filter
        self._source_filter = source_filter
        self._state_filter = state_filter

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SearchOrdersFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SearchOrdersFilter of this SearchOrdersFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def customer_filter(self):
        """Gets the customer_filter of this SearchOrdersFilter.


        :return: The customer_filter of this SearchOrdersFilter.
        :rtype: SearchOrdersCustomerFilter
        """
        return self._customer_filter

    @customer_filter.setter
    def customer_filter(self, customer_filter):
        """Sets the customer_filter of this SearchOrdersFilter.


        :param customer_filter: The customer_filter of this SearchOrdersFilter.
        :type customer_filter: SearchOrdersCustomerFilter
        """

        self._customer_filter = customer_filter

    @property
    def date_time_filter(self):
        """Gets the date_time_filter of this SearchOrdersFilter.


        :return: The date_time_filter of this SearchOrdersFilter.
        :rtype: SearchOrdersDateTimeFilter
        """
        return self._date_time_filter

    @date_time_filter.setter
    def date_time_filter(self, date_time_filter):
        """Sets the date_time_filter of this SearchOrdersFilter.


        :param date_time_filter: The date_time_filter of this SearchOrdersFilter.
        :type date_time_filter: SearchOrdersDateTimeFilter
        """

        self._date_time_filter = date_time_filter

    @property
    def fulfillment_filter(self):
        """Gets the fulfillment_filter of this SearchOrdersFilter.


        :return: The fulfillment_filter of this SearchOrdersFilter.
        :rtype: SearchOrdersFulfillmentFilter
        """
        return self._fulfillment_filter

    @fulfillment_filter.setter
    def fulfillment_filter(self, fulfillment_filter):
        """Sets the fulfillment_filter of this SearchOrdersFilter.


        :param fulfillment_filter: The fulfillment_filter of this SearchOrdersFilter.
        :type fulfillment_filter: SearchOrdersFulfillmentFilter
        """

        self._fulfillment_filter = fulfillment_filter

    @property
    def source_filter(self):
        """Gets the source_filter of this SearchOrdersFilter.


        :return: The source_filter of this SearchOrdersFilter.
        :rtype: SearchOrdersSourceFilter
        """
        return self._source_filter

    @source_filter.setter
    def source_filter(self, source_filter):
        """Sets the source_filter of this SearchOrdersFilter.


        :param source_filter: The source_filter of this SearchOrdersFilter.
        :type source_filter: SearchOrdersSourceFilter
        """

        self._source_filter = source_filter

    @property
    def state_filter(self):
        """Gets the state_filter of this SearchOrdersFilter.


        :return: The state_filter of this SearchOrdersFilter.
        :rtype: SearchOrdersStateFilter
        """
        return self._state_filter

    @state_filter.setter
    def state_filter(self, state_filter):
        """Sets the state_filter of this SearchOrdersFilter.


        :param state_filter: The state_filter of this SearchOrdersFilter.
        :type state_filter: SearchOrdersStateFilter
        """

        self._state_filter = state_filter
