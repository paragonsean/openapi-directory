# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.money import Money
from openapi_server import util


class GiftCardActivityLoad(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount_money: Money=None, buyer_payment_instrument_ids: List[str]=None, line_item_uid: str=None, order_id: str=None, reference_id: str=None):
        """GiftCardActivityLoad - a model defined in OpenAPI

        :param amount_money: The amount_money of this GiftCardActivityLoad.
        :param buyer_payment_instrument_ids: The buyer_payment_instrument_ids of this GiftCardActivityLoad.
        :param line_item_uid: The line_item_uid of this GiftCardActivityLoad.
        :param order_id: The order_id of this GiftCardActivityLoad.
        :param reference_id: The reference_id of this GiftCardActivityLoad.
        """
        self.openapi_types = {
            'amount_money': Money,
            'buyer_payment_instrument_ids': List[str],
            'line_item_uid': str,
            'order_id': str,
            'reference_id': str
        }

        self.attribute_map = {
            'amount_money': 'amount_money',
            'buyer_payment_instrument_ids': 'buyer_payment_instrument_ids',
            'line_item_uid': 'line_item_uid',
            'order_id': 'order_id',
            'reference_id': 'reference_id'
        }

        self._amount_money = amount_money
        self._buyer_payment_instrument_ids = buyer_payment_instrument_ids
        self._line_item_uid = line_item_uid
        self._order_id = order_id
        self._reference_id = reference_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GiftCardActivityLoad':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GiftCardActivityLoad of this GiftCardActivityLoad.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount_money(self):
        """Gets the amount_money of this GiftCardActivityLoad.


        :return: The amount_money of this GiftCardActivityLoad.
        :rtype: Money
        """
        return self._amount_money

    @amount_money.setter
    def amount_money(self, amount_money):
        """Sets the amount_money of this GiftCardActivityLoad.


        :param amount_money: The amount_money of this GiftCardActivityLoad.
        :type amount_money: Money
        """

        self._amount_money = amount_money

    @property
    def buyer_payment_instrument_ids(self):
        """Gets the buyer_payment_instrument_ids of this GiftCardActivityLoad.

        If you are not using the Orders API, this field is required because it is used to identify a buyer  to perform compliance checks.

        :return: The buyer_payment_instrument_ids of this GiftCardActivityLoad.
        :rtype: List[str]
        """
        return self._buyer_payment_instrument_ids

    @buyer_payment_instrument_ids.setter
    def buyer_payment_instrument_ids(self, buyer_payment_instrument_ids):
        """Sets the buyer_payment_instrument_ids of this GiftCardActivityLoad.

        If you are not using the Orders API, this field is required because it is used to identify a buyer  to perform compliance checks.

        :param buyer_payment_instrument_ids: The buyer_payment_instrument_ids of this GiftCardActivityLoad.
        :type buyer_payment_instrument_ids: List[str]
        """

        self._buyer_payment_instrument_ids = buyer_payment_instrument_ids

    @property
    def line_item_uid(self):
        """Gets the line_item_uid of this GiftCardActivityLoad.

        The `line_item_uid` of the gift card’s line item in the order associated with the activity. It is populated along with `order_id` and is required if using the Square Orders API.

        :return: The line_item_uid of this GiftCardActivityLoad.
        :rtype: str
        """
        return self._line_item_uid

    @line_item_uid.setter
    def line_item_uid(self, line_item_uid):
        """Sets the line_item_uid of this GiftCardActivityLoad.

        The `line_item_uid` of the gift card’s line item in the order associated with the activity. It is populated along with `order_id` and is required if using the Square Orders API.

        :param line_item_uid: The line_item_uid of this GiftCardActivityLoad.
        :type line_item_uid: str
        """

        self._line_item_uid = line_item_uid

    @property
    def order_id(self):
        """Gets the order_id of this GiftCardActivityLoad.

        The `order_id` of the order associated with the activity. It is populated along with `line_item_uid` and is required if using the Square Orders API.

        :return: The order_id of this GiftCardActivityLoad.
        :rtype: str
        """
        return self._order_id

    @order_id.setter
    def order_id(self, order_id):
        """Sets the order_id of this GiftCardActivityLoad.

        The `order_id` of the order associated with the activity. It is populated along with `line_item_uid` and is required if using the Square Orders API.

        :param order_id: The order_id of this GiftCardActivityLoad.
        :type order_id: str
        """

        self._order_id = order_id

    @property
    def reference_id(self):
        """Gets the reference_id of this GiftCardActivityLoad.

        A client-specified ID to associate an entity, in another system, with this gift card activity. This can be used to track the order or payment related information when the Square Orders API is not being used.

        :return: The reference_id of this GiftCardActivityLoad.
        :rtype: str
        """
        return self._reference_id

    @reference_id.setter
    def reference_id(self, reference_id):
        """Sets the reference_id of this GiftCardActivityLoad.

        A client-specified ID to associate an entity, in another system, with this gift card activity. This can be used to track the order or payment related information when the Square Orders API is not being used.

        :param reference_id: The reference_id of this GiftCardActivityLoad.
        :type reference_id: str
        """

        self._reference_id = reference_id
