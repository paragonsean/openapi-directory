# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SearchLoyaltyRewardsRequestLoyaltyRewardQuery(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, loyalty_account_id: str=None, status: str=None):
        """SearchLoyaltyRewardsRequestLoyaltyRewardQuery - a model defined in OpenAPI

        :param loyalty_account_id: The loyalty_account_id of this SearchLoyaltyRewardsRequestLoyaltyRewardQuery.
        :param status: The status of this SearchLoyaltyRewardsRequestLoyaltyRewardQuery.
        """
        self.openapi_types = {
            'loyalty_account_id': str,
            'status': str
        }

        self.attribute_map = {
            'loyalty_account_id': 'loyalty_account_id',
            'status': 'status'
        }

        self._loyalty_account_id = loyalty_account_id
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SearchLoyaltyRewardsRequestLoyaltyRewardQuery':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SearchLoyaltyRewardsRequestLoyaltyRewardQuery of this SearchLoyaltyRewardsRequestLoyaltyRewardQuery.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def loyalty_account_id(self):
        """Gets the loyalty_account_id of this SearchLoyaltyRewardsRequestLoyaltyRewardQuery.

        The ID of the [loyalty account](https://developer.squareup.com/reference/square_2021-08-18/objects/LoyaltyAccount) to which the loyalty reward belongs.

        :return: The loyalty_account_id of this SearchLoyaltyRewardsRequestLoyaltyRewardQuery.
        :rtype: str
        """
        return self._loyalty_account_id

    @loyalty_account_id.setter
    def loyalty_account_id(self, loyalty_account_id):
        """Sets the loyalty_account_id of this SearchLoyaltyRewardsRequestLoyaltyRewardQuery.

        The ID of the [loyalty account](https://developer.squareup.com/reference/square_2021-08-18/objects/LoyaltyAccount) to which the loyalty reward belongs.

        :param loyalty_account_id: The loyalty_account_id of this SearchLoyaltyRewardsRequestLoyaltyRewardQuery.
        :type loyalty_account_id: str
        """
        if loyalty_account_id is None:
            raise ValueError("Invalid value for `loyalty_account_id`, must not be `None`")

        self._loyalty_account_id = loyalty_account_id

    @property
    def status(self):
        """Gets the status of this SearchLoyaltyRewardsRequestLoyaltyRewardQuery.

        The status of the loyalty reward.

        :return: The status of this SearchLoyaltyRewardsRequestLoyaltyRewardQuery.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this SearchLoyaltyRewardsRequestLoyaltyRewardQuery.

        The status of the loyalty reward.

        :param status: The status of this SearchLoyaltyRewardsRequestLoyaltyRewardQuery.
        :type status: str
        """

        self._status = status
