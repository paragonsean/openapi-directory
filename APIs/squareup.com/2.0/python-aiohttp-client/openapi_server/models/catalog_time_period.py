# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CatalogTimePeriod(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, event: str=None):
        """CatalogTimePeriod - a model defined in OpenAPI

        :param event: The event of this CatalogTimePeriod.
        """
        self.openapi_types = {
            'event': str
        }

        self.attribute_map = {
            'event': 'event'
        }

        self._event = event

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CatalogTimePeriod':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CatalogTimePeriod of this CatalogTimePeriod.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def event(self):
        """Gets the event of this CatalogTimePeriod.

        An iCalendar (RFC 5545) [event](https://tools.ietf.org/html/rfc5545#section-3.6.1), which specifies the name, timing, duration and recurrence of this time period.  Example:  ``` DTSTART:20190707T180000 DURATION:P2H RRULE:FREQ=WEEKLY;BYDAY=MO,WE,FR ```  Only `SUMMARY`, `DTSTART`, `DURATION` and `RRULE` fields are supported. `DTSTART` must be in local (unzoned) time format. Note that while `BEGIN:VEVENT` and `END:VEVENT` is not required in the request. The response will always include them.

        :return: The event of this CatalogTimePeriod.
        :rtype: str
        """
        return self._event

    @event.setter
    def event(self, event):
        """Sets the event of this CatalogTimePeriod.

        An iCalendar (RFC 5545) [event](https://tools.ietf.org/html/rfc5545#section-3.6.1), which specifies the name, timing, duration and recurrence of this time period.  Example:  ``` DTSTART:20190707T180000 DURATION:P2H RRULE:FREQ=WEEKLY;BYDAY=MO,WE,FR ```  Only `SUMMARY`, `DTSTART`, `DURATION` and `RRULE` fields are supported. `DTSTART` must be in local (unzoned) time format. Note that while `BEGIN:VEVENT` and `END:VEVENT` is not required in the request. The response will always include them.

        :param event: The event of this CatalogTimePeriod.
        :type event: str
        """

        self._event = event
