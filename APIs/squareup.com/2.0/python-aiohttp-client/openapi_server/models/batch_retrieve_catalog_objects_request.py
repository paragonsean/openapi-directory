# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BatchRetrieveCatalogObjectsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, catalog_version: int=None, include_related_objects: bool=None, object_ids: List[str]=None):
        """BatchRetrieveCatalogObjectsRequest - a model defined in OpenAPI

        :param catalog_version: The catalog_version of this BatchRetrieveCatalogObjectsRequest.
        :param include_related_objects: The include_related_objects of this BatchRetrieveCatalogObjectsRequest.
        :param object_ids: The object_ids of this BatchRetrieveCatalogObjectsRequest.
        """
        self.openapi_types = {
            'catalog_version': int,
            'include_related_objects': bool,
            'object_ids': List[str]
        }

        self.attribute_map = {
            'catalog_version': 'catalog_version',
            'include_related_objects': 'include_related_objects',
            'object_ids': 'object_ids'
        }

        self._catalog_version = catalog_version
        self._include_related_objects = include_related_objects
        self._object_ids = object_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchRetrieveCatalogObjectsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchRetrieveCatalogObjectsRequest of this BatchRetrieveCatalogObjectsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def catalog_version(self):
        """Gets the catalog_version of this BatchRetrieveCatalogObjectsRequest.

        The specific version of the catalog objects to be included in the response.  This allows you to retrieve historical versions of objects. The specified version value is matched against the [CatalogObject](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject)s' `version` attribute.

        :return: The catalog_version of this BatchRetrieveCatalogObjectsRequest.
        :rtype: int
        """
        return self._catalog_version

    @catalog_version.setter
    def catalog_version(self, catalog_version):
        """Sets the catalog_version of this BatchRetrieveCatalogObjectsRequest.

        The specific version of the catalog objects to be included in the response.  This allows you to retrieve historical versions of objects. The specified version value is matched against the [CatalogObject](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject)s' `version` attribute.

        :param catalog_version: The catalog_version of this BatchRetrieveCatalogObjectsRequest.
        :type catalog_version: int
        """

        self._catalog_version = catalog_version

    @property
    def include_related_objects(self):
        """Gets the include_related_objects of this BatchRetrieveCatalogObjectsRequest.

        If `true`, the response will include additional objects that are related to the requested objects, as follows:  If the `objects` field of the response contains a CatalogItem, its associated CatalogCategory objects, CatalogTax objects, CatalogImage objects and CatalogModifierLists will be returned in the `related_objects` field of the response. If the `objects` field of the response contains a CatalogItemVariation, its parent CatalogItem will be returned in the `related_objects` field of the response.

        :return: The include_related_objects of this BatchRetrieveCatalogObjectsRequest.
        :rtype: bool
        """
        return self._include_related_objects

    @include_related_objects.setter
    def include_related_objects(self, include_related_objects):
        """Sets the include_related_objects of this BatchRetrieveCatalogObjectsRequest.

        If `true`, the response will include additional objects that are related to the requested objects, as follows:  If the `objects` field of the response contains a CatalogItem, its associated CatalogCategory objects, CatalogTax objects, CatalogImage objects and CatalogModifierLists will be returned in the `related_objects` field of the response. If the `objects` field of the response contains a CatalogItemVariation, its parent CatalogItem will be returned in the `related_objects` field of the response.

        :param include_related_objects: The include_related_objects of this BatchRetrieveCatalogObjectsRequest.
        :type include_related_objects: bool
        """

        self._include_related_objects = include_related_objects

    @property
    def object_ids(self):
        """Gets the object_ids of this BatchRetrieveCatalogObjectsRequest.

        The IDs of the CatalogObjects to be retrieved.

        :return: The object_ids of this BatchRetrieveCatalogObjectsRequest.
        :rtype: List[str]
        """
        return self._object_ids

    @object_ids.setter
    def object_ids(self, object_ids):
        """Sets the object_ids of this BatchRetrieveCatalogObjectsRequest.

        The IDs of the CatalogObjects to be retrieved.

        :param object_ids: The object_ids of this BatchRetrieveCatalogObjectsRequest.
        :type object_ids: List[str]
        """
        if object_ids is None:
            raise ValueError("Invalid value for `object_ids`, must not be `None`")

        self._object_ids = object_ids
