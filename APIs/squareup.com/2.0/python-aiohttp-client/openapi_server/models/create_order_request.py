# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.order import Order
from openapi_server import util


class CreateOrderRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, idempotency_key: str=None, order: Order=None):
        """CreateOrderRequest - a model defined in OpenAPI

        :param idempotency_key: The idempotency_key of this CreateOrderRequest.
        :param order: The order of this CreateOrderRequest.
        """
        self.openapi_types = {
            'idempotency_key': str,
            'order': Order
        }

        self.attribute_map = {
            'idempotency_key': 'idempotency_key',
            'order': 'order'
        }

        self._idempotency_key = idempotency_key
        self._order = order

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateOrderRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateOrderRequest of this CreateOrderRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def idempotency_key(self):
        """Gets the idempotency_key of this CreateOrderRequest.

        A value you specify that uniquely identifies this order among orders you have created.  If you are unsure whether a particular order was created successfully, you can try it again with the same idempotency key without worrying about creating duplicate orders.  For more information, see [Idempotency](https://developer.squareup.com/docs/basics/api101/idempotency).

        :return: The idempotency_key of this CreateOrderRequest.
        :rtype: str
        """
        return self._idempotency_key

    @idempotency_key.setter
    def idempotency_key(self, idempotency_key):
        """Sets the idempotency_key of this CreateOrderRequest.

        A value you specify that uniquely identifies this order among orders you have created.  If you are unsure whether a particular order was created successfully, you can try it again with the same idempotency key without worrying about creating duplicate orders.  For more information, see [Idempotency](https://developer.squareup.com/docs/basics/api101/idempotency).

        :param idempotency_key: The idempotency_key of this CreateOrderRequest.
        :type idempotency_key: str
        """
        if idempotency_key is not None and len(idempotency_key) > 192:
            raise ValueError("Invalid value for `idempotency_key`, length must be less than or equal to `192`")

        self._idempotency_key = idempotency_key

    @property
    def order(self):
        """Gets the order of this CreateOrderRequest.


        :return: The order of this CreateOrderRequest.
        :rtype: Order
        """
        return self._order

    @order.setter
    def order(self, order):
        """Sets the order of this CreateOrderRequest.


        :param order: The order of this CreateOrderRequest.
        :type order: Order
        """

        self._order = order
