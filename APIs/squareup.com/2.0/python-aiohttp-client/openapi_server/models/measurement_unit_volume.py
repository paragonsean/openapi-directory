# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MeasurementUnitVolume(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    GENERIC_FLUID_OUNCE = 'GENERIC_FLUID_OUNCE'
    GENERIC_SHOT = 'GENERIC_SHOT'
    GENERIC_CUP = 'GENERIC_CUP'
    GENERIC_PINT = 'GENERIC_PINT'
    GENERIC_QUART = 'GENERIC_QUART'
    GENERIC_GALLON = 'GENERIC_GALLON'
    IMPERIAL_CUBIC_INCH = 'IMPERIAL_CUBIC_INCH'
    IMPERIAL_CUBIC_FOOT = 'IMPERIAL_CUBIC_FOOT'
    IMPERIAL_CUBIC_YARD = 'IMPERIAL_CUBIC_YARD'
    METRIC_MILLILITER = 'METRIC_MILLILITER'
    METRIC_LITER = 'METRIC_LITER'

    def __init__(self):
        """MeasurementUnitVolume - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MeasurementUnitVolume':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MeasurementUnitVolume of this MeasurementUnitVolume.
        """
        return util.deserialize_model(dikt, cls)
