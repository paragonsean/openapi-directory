# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.error import Error
from openapi_server.models.loyalty_account import LoyaltyAccount
from openapi_server import util


class SearchLoyaltyAccountsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cursor: str=None, errors: List[Error]=None, loyalty_accounts: List[LoyaltyAccount]=None):
        """SearchLoyaltyAccountsResponse - a model defined in OpenAPI

        :param cursor: The cursor of this SearchLoyaltyAccountsResponse.
        :param errors: The errors of this SearchLoyaltyAccountsResponse.
        :param loyalty_accounts: The loyalty_accounts of this SearchLoyaltyAccountsResponse.
        """
        self.openapi_types = {
            'cursor': str,
            'errors': List[Error],
            'loyalty_accounts': List[LoyaltyAccount]
        }

        self.attribute_map = {
            'cursor': 'cursor',
            'errors': 'errors',
            'loyalty_accounts': 'loyalty_accounts'
        }

        self._cursor = cursor
        self._errors = errors
        self._loyalty_accounts = loyalty_accounts

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SearchLoyaltyAccountsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SearchLoyaltyAccountsResponse of this SearchLoyaltyAccountsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cursor(self):
        """Gets the cursor of this SearchLoyaltyAccountsResponse.

        The pagination cursor to use in a subsequent  request. If empty, this is the final response. For more information,  see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination).

        :return: The cursor of this SearchLoyaltyAccountsResponse.
        :rtype: str
        """
        return self._cursor

    @cursor.setter
    def cursor(self, cursor):
        """Sets the cursor of this SearchLoyaltyAccountsResponse.

        The pagination cursor to use in a subsequent  request. If empty, this is the final response. For more information,  see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination).

        :param cursor: The cursor of this SearchLoyaltyAccountsResponse.
        :type cursor: str
        """

        self._cursor = cursor

    @property
    def errors(self):
        """Gets the errors of this SearchLoyaltyAccountsResponse.

        Any errors that occurred during the request.

        :return: The errors of this SearchLoyaltyAccountsResponse.
        :rtype: List[Error]
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this SearchLoyaltyAccountsResponse.

        Any errors that occurred during the request.

        :param errors: The errors of this SearchLoyaltyAccountsResponse.
        :type errors: List[Error]
        """

        self._errors = errors

    @property
    def loyalty_accounts(self):
        """Gets the loyalty_accounts of this SearchLoyaltyAccountsResponse.

        The loyalty accounts that met the search criteria,   in order of creation date.

        :return: The loyalty_accounts of this SearchLoyaltyAccountsResponse.
        :rtype: List[LoyaltyAccount]
        """
        return self._loyalty_accounts

    @loyalty_accounts.setter
    def loyalty_accounts(self, loyalty_accounts):
        """Sets the loyalty_accounts of this SearchLoyaltyAccountsResponse.

        The loyalty accounts that met the search criteria,   in order of creation date.

        :param loyalty_accounts: The loyalty_accounts of this SearchLoyaltyAccountsResponse.
        :type loyalty_accounts: List[LoyaltyAccount]
        """

        self._loyalty_accounts = loyalty_accounts
