# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.catalog_object import CatalogObject
from openapi_server import util


class CatalogItemOption(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, display_name: str=None, name: str=None, show_colors: bool=None, values: List[CatalogObject]=None):
        """CatalogItemOption - a model defined in OpenAPI

        :param description: The description of this CatalogItemOption.
        :param display_name: The display_name of this CatalogItemOption.
        :param name: The name of this CatalogItemOption.
        :param show_colors: The show_colors of this CatalogItemOption.
        :param values: The values of this CatalogItemOption.
        """
        self.openapi_types = {
            'description': str,
            'display_name': str,
            'name': str,
            'show_colors': bool,
            'values': List[CatalogObject]
        }

        self.attribute_map = {
            'description': 'description',
            'display_name': 'display_name',
            'name': 'name',
            'show_colors': 'show_colors',
            'values': 'values'
        }

        self._description = description
        self._display_name = display_name
        self._name = name
        self._show_colors = show_colors
        self._values = values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CatalogItemOption':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CatalogItemOption of this CatalogItemOption.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this CatalogItemOption.

        The item option's human-readable description. Displayed in the Square Point of Sale app for the seller and in the Online Store or on receipts for the buyer. This is a searchable attribute for use in applicable query filters.

        :return: The description of this CatalogItemOption.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CatalogItemOption.

        The item option's human-readable description. Displayed in the Square Point of Sale app for the seller and in the Online Store or on receipts for the buyer. This is a searchable attribute for use in applicable query filters.

        :param description: The description of this CatalogItemOption.
        :type description: str
        """

        self._description = description

    @property
    def display_name(self):
        """Gets the display_name of this CatalogItemOption.

        The item option's display name for the customer. This is a searchable attribute for use in applicable query filters.

        :return: The display_name of this CatalogItemOption.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this CatalogItemOption.

        The item option's display name for the customer. This is a searchable attribute for use in applicable query filters.

        :param display_name: The display_name of this CatalogItemOption.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def name(self):
        """Gets the name of this CatalogItemOption.

        The item option's display name for the seller. Must be unique across all item options. This is a searchable attribute for use in applicable query filters.

        :return: The name of this CatalogItemOption.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CatalogItemOption.

        The item option's display name for the seller. Must be unique across all item options. This is a searchable attribute for use in applicable query filters.

        :param name: The name of this CatalogItemOption.
        :type name: str
        """

        self._name = name

    @property
    def show_colors(self):
        """Gets the show_colors of this CatalogItemOption.

        If true, display colors for entries in `values` when present.

        :return: The show_colors of this CatalogItemOption.
        :rtype: bool
        """
        return self._show_colors

    @show_colors.setter
    def show_colors(self, show_colors):
        """Sets the show_colors of this CatalogItemOption.

        If true, display colors for entries in `values` when present.

        :param show_colors: The show_colors of this CatalogItemOption.
        :type show_colors: bool
        """

        self._show_colors = show_colors

    @property
    def values(self):
        """Gets the values of this CatalogItemOption.

        A list of CatalogObjects containing the `CatalogItemOptionValue`s for this item.

        :return: The values of this CatalogItemOption.
        :rtype: List[CatalogObject]
        """
        return self._values

    @values.setter
    def values(self, values):
        """Sets the values of this CatalogItemOption.

        A list of CatalogObjects containing the `CatalogItemOptionValue`s for this item.

        :param values: The values of this CatalogItemOption.
        :type values: List[CatalogObject]
        """

        self._values = values
