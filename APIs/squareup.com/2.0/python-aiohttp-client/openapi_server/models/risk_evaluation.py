# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RiskEvaluation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: str=None, risk_level: str=None):
        """RiskEvaluation - a model defined in OpenAPI

        :param created_at: The created_at of this RiskEvaluation.
        :param risk_level: The risk_level of this RiskEvaluation.
        """
        self.openapi_types = {
            'created_at': str,
            'risk_level': str
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'risk_level': 'risk_level'
        }

        self._created_at = created_at
        self._risk_level = risk_level

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RiskEvaluation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RiskEvaluation of this RiskEvaluation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this RiskEvaluation.

        The timestamp when payment risk was evaluated, in RFC 3339 format.

        :return: The created_at of this RiskEvaluation.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this RiskEvaluation.

        The timestamp when payment risk was evaluated, in RFC 3339 format.

        :param created_at: The created_at of this RiskEvaluation.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def risk_level(self):
        """Gets the risk_level of this RiskEvaluation.

        The risk level associated with the payment

        :return: The risk_level of this RiskEvaluation.
        :rtype: str
        """
        return self._risk_level

    @risk_level.setter
    def risk_level(self, risk_level):
        """Sets the risk_level of this RiskEvaluation.

        The risk level associated with the payment

        :param risk_level: The risk_level of this RiskEvaluation.
        :type risk_level: str
        """

        self._risk_level = risk_level
