# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.loyalty_event_date_time_filter import LoyaltyEventDateTimeFilter
from openapi_server.models.loyalty_event_location_filter import LoyaltyEventLocationFilter
from openapi_server.models.loyalty_event_loyalty_account_filter import LoyaltyEventLoyaltyAccountFilter
from openapi_server.models.loyalty_event_order_filter import LoyaltyEventOrderFilter
from openapi_server.models.loyalty_event_type_filter import LoyaltyEventTypeFilter
from openapi_server import util


class LoyaltyEventFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, date_time_filter: LoyaltyEventDateTimeFilter=None, location_filter: LoyaltyEventLocationFilter=None, loyalty_account_filter: LoyaltyEventLoyaltyAccountFilter=None, order_filter: LoyaltyEventOrderFilter=None, type_filter: LoyaltyEventTypeFilter=None):
        """LoyaltyEventFilter - a model defined in OpenAPI

        :param date_time_filter: The date_time_filter of this LoyaltyEventFilter.
        :param location_filter: The location_filter of this LoyaltyEventFilter.
        :param loyalty_account_filter: The loyalty_account_filter of this LoyaltyEventFilter.
        :param order_filter: The order_filter of this LoyaltyEventFilter.
        :param type_filter: The type_filter of this LoyaltyEventFilter.
        """
        self.openapi_types = {
            'date_time_filter': LoyaltyEventDateTimeFilter,
            'location_filter': LoyaltyEventLocationFilter,
            'loyalty_account_filter': LoyaltyEventLoyaltyAccountFilter,
            'order_filter': LoyaltyEventOrderFilter,
            'type_filter': LoyaltyEventTypeFilter
        }

        self.attribute_map = {
            'date_time_filter': 'date_time_filter',
            'location_filter': 'location_filter',
            'loyalty_account_filter': 'loyalty_account_filter',
            'order_filter': 'order_filter',
            'type_filter': 'type_filter'
        }

        self._date_time_filter = date_time_filter
        self._location_filter = location_filter
        self._loyalty_account_filter = loyalty_account_filter
        self._order_filter = order_filter
        self._type_filter = type_filter

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LoyaltyEventFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LoyaltyEventFilter of this LoyaltyEventFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def date_time_filter(self):
        """Gets the date_time_filter of this LoyaltyEventFilter.


        :return: The date_time_filter of this LoyaltyEventFilter.
        :rtype: LoyaltyEventDateTimeFilter
        """
        return self._date_time_filter

    @date_time_filter.setter
    def date_time_filter(self, date_time_filter):
        """Sets the date_time_filter of this LoyaltyEventFilter.


        :param date_time_filter: The date_time_filter of this LoyaltyEventFilter.
        :type date_time_filter: LoyaltyEventDateTimeFilter
        """

        self._date_time_filter = date_time_filter

    @property
    def location_filter(self):
        """Gets the location_filter of this LoyaltyEventFilter.


        :return: The location_filter of this LoyaltyEventFilter.
        :rtype: LoyaltyEventLocationFilter
        """
        return self._location_filter

    @location_filter.setter
    def location_filter(self, location_filter):
        """Sets the location_filter of this LoyaltyEventFilter.


        :param location_filter: The location_filter of this LoyaltyEventFilter.
        :type location_filter: LoyaltyEventLocationFilter
        """

        self._location_filter = location_filter

    @property
    def loyalty_account_filter(self):
        """Gets the loyalty_account_filter of this LoyaltyEventFilter.


        :return: The loyalty_account_filter of this LoyaltyEventFilter.
        :rtype: LoyaltyEventLoyaltyAccountFilter
        """
        return self._loyalty_account_filter

    @loyalty_account_filter.setter
    def loyalty_account_filter(self, loyalty_account_filter):
        """Sets the loyalty_account_filter of this LoyaltyEventFilter.


        :param loyalty_account_filter: The loyalty_account_filter of this LoyaltyEventFilter.
        :type loyalty_account_filter: LoyaltyEventLoyaltyAccountFilter
        """

        self._loyalty_account_filter = loyalty_account_filter

    @property
    def order_filter(self):
        """Gets the order_filter of this LoyaltyEventFilter.


        :return: The order_filter of this LoyaltyEventFilter.
        :rtype: LoyaltyEventOrderFilter
        """
        return self._order_filter

    @order_filter.setter
    def order_filter(self, order_filter):
        """Sets the order_filter of this LoyaltyEventFilter.


        :param order_filter: The order_filter of this LoyaltyEventFilter.
        :type order_filter: LoyaltyEventOrderFilter
        """

        self._order_filter = order_filter

    @property
    def type_filter(self):
        """Gets the type_filter of this LoyaltyEventFilter.


        :return: The type_filter of this LoyaltyEventFilter.
        :rtype: LoyaltyEventTypeFilter
        """
        return self._type_filter

    @type_filter.setter
    def type_filter(self, type_filter):
        """Sets the type_filter of this LoyaltyEventFilter.


        :param type_filter: The type_filter of this LoyaltyEventFilter.
        :type type_filter: LoyaltyEventTypeFilter
        """

        self._type_filter = type_filter
