# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.filter_value import FilterValue
from openapi_server import util


class SegmentFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, service_variation_id: str=None, team_member_id_filter: FilterValue=None):
        """SegmentFilter - a model defined in OpenAPI

        :param service_variation_id: The service_variation_id of this SegmentFilter.
        :param team_member_id_filter: The team_member_id_filter of this SegmentFilter.
        """
        self.openapi_types = {
            'service_variation_id': str,
            'team_member_id_filter': FilterValue
        }

        self.attribute_map = {
            'service_variation_id': 'service_variation_id',
            'team_member_id_filter': 'team_member_id_filter'
        }

        self._service_variation_id = service_variation_id
        self._team_member_id_filter = team_member_id_filter

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SegmentFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SegmentFilter of this SegmentFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def service_variation_id(self):
        """Gets the service_variation_id of this SegmentFilter.

        The ID of the [CatalogItemVariation](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogItemVariation) representing the service booked in this segment.

        :return: The service_variation_id of this SegmentFilter.
        :rtype: str
        """
        return self._service_variation_id

    @service_variation_id.setter
    def service_variation_id(self, service_variation_id):
        """Sets the service_variation_id of this SegmentFilter.

        The ID of the [CatalogItemVariation](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogItemVariation) representing the service booked in this segment.

        :param service_variation_id: The service_variation_id of this SegmentFilter.
        :type service_variation_id: str
        """
        if service_variation_id is None:
            raise ValueError("Invalid value for `service_variation_id`, must not be `None`")
        if service_variation_id is not None and len(service_variation_id) < 1:
            raise ValueError("Invalid value for `service_variation_id`, length must be greater than or equal to `1`")

        self._service_variation_id = service_variation_id

    @property
    def team_member_id_filter(self):
        """Gets the team_member_id_filter of this SegmentFilter.


        :return: The team_member_id_filter of this SegmentFilter.
        :rtype: FilterValue
        """
        return self._team_member_id_filter

    @team_member_id_filter.setter
    def team_member_id_filter(self, team_member_id_filter):
        """Sets the team_member_id_filter of this SegmentFilter.


        :param team_member_id_filter: The team_member_id_filter of this SegmentFilter.
        :type team_member_id_filter: FilterValue
        """

        self._team_member_id_filter = team_member_id_filter
