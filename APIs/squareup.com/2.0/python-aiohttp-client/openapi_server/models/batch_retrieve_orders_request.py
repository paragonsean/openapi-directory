# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BatchRetrieveOrdersRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, location_id: str=None, order_ids: List[str]=None):
        """BatchRetrieveOrdersRequest - a model defined in OpenAPI

        :param location_id: The location_id of this BatchRetrieveOrdersRequest.
        :param order_ids: The order_ids of this BatchRetrieveOrdersRequest.
        """
        self.openapi_types = {
            'location_id': str,
            'order_ids': List[str]
        }

        self.attribute_map = {
            'location_id': 'location_id',
            'order_ids': 'order_ids'
        }

        self._location_id = location_id
        self._order_ids = order_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchRetrieveOrdersRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchRetrieveOrdersRequest of this BatchRetrieveOrdersRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def location_id(self):
        """Gets the location_id of this BatchRetrieveOrdersRequest.

        The ID of the location for these orders. This field is optional: omit it to retrieve orders within the scope of the current authorization's merchant ID.

        :return: The location_id of this BatchRetrieveOrdersRequest.
        :rtype: str
        """
        return self._location_id

    @location_id.setter
    def location_id(self, location_id):
        """Sets the location_id of this BatchRetrieveOrdersRequest.

        The ID of the location for these orders. This field is optional: omit it to retrieve orders within the scope of the current authorization's merchant ID.

        :param location_id: The location_id of this BatchRetrieveOrdersRequest.
        :type location_id: str
        """

        self._location_id = location_id

    @property
    def order_ids(self):
        """Gets the order_ids of this BatchRetrieveOrdersRequest.

        The IDs of the orders to retrieve. A maximum of 100 orders can be retrieved per request.

        :return: The order_ids of this BatchRetrieveOrdersRequest.
        :rtype: List[str]
        """
        return self._order_ids

    @order_ids.setter
    def order_ids(self, order_ids):
        """Sets the order_ids of this BatchRetrieveOrdersRequest.

        The IDs of the orders to retrieve. A maximum of 100 orders can be retrieved per request.

        :param order_ids: The order_ids of this BatchRetrieveOrdersRequest.
        :type order_ids: List[str]
        """
        if order_ids is None:
            raise ValueError("Invalid value for `order_ids`, must not be `None`")

        self._order_ids = order_ids
