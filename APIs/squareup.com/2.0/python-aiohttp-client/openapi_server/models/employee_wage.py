# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.money import Money
from openapi_server import util


class EmployeeWage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, employee_id: str=None, hourly_rate: Money=None, id: str=None, title: str=None):
        """EmployeeWage - a model defined in OpenAPI

        :param employee_id: The employee_id of this EmployeeWage.
        :param hourly_rate: The hourly_rate of this EmployeeWage.
        :param id: The id of this EmployeeWage.
        :param title: The title of this EmployeeWage.
        """
        self.openapi_types = {
            'employee_id': str,
            'hourly_rate': Money,
            'id': str,
            'title': str
        }

        self.attribute_map = {
            'employee_id': 'employee_id',
            'hourly_rate': 'hourly_rate',
            'id': 'id',
            'title': 'title'
        }

        self._employee_id = employee_id
        self._hourly_rate = hourly_rate
        self._id = id
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EmployeeWage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EmployeeWage of this EmployeeWage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def employee_id(self):
        """Gets the employee_id of this EmployeeWage.

        The `Employee` that this wage is assigned to.

        :return: The employee_id of this EmployeeWage.
        :rtype: str
        """
        return self._employee_id

    @employee_id.setter
    def employee_id(self, employee_id):
        """Sets the employee_id of this EmployeeWage.

        The `Employee` that this wage is assigned to.

        :param employee_id: The employee_id of this EmployeeWage.
        :type employee_id: str
        """

        self._employee_id = employee_id

    @property
    def hourly_rate(self):
        """Gets the hourly_rate of this EmployeeWage.


        :return: The hourly_rate of this EmployeeWage.
        :rtype: Money
        """
        return self._hourly_rate

    @hourly_rate.setter
    def hourly_rate(self, hourly_rate):
        """Sets the hourly_rate of this EmployeeWage.


        :param hourly_rate: The hourly_rate of this EmployeeWage.
        :type hourly_rate: Money
        """

        self._hourly_rate = hourly_rate

    @property
    def id(self):
        """Gets the id of this EmployeeWage.

        The UUID for this object.

        :return: The id of this EmployeeWage.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this EmployeeWage.

        The UUID for this object.

        :param id: The id of this EmployeeWage.
        :type id: str
        """

        self._id = id

    @property
    def title(self):
        """Gets the title of this EmployeeWage.

        The job title that this wage relates to.

        :return: The title of this EmployeeWage.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this EmployeeWage.

        The job title that this wage relates to.

        :param title: The title of this EmployeeWage.
        :type title: str
        """

        self._title = title
