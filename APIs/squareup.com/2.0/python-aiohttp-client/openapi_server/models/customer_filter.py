# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.customer_creation_source_filter import CustomerCreationSourceFilter
from openapi_server.models.customer_text_filter import CustomerTextFilter
from openapi_server.models.filter_value import FilterValue
from openapi_server.models.time_range import TimeRange
from openapi_server import util


class CustomerFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: TimeRange=None, creation_source: CustomerCreationSourceFilter=None, email_address: CustomerTextFilter=None, group_ids: FilterValue=None, phone_number: CustomerTextFilter=None, reference_id: CustomerTextFilter=None, updated_at: TimeRange=None):
        """CustomerFilter - a model defined in OpenAPI

        :param created_at: The created_at of this CustomerFilter.
        :param creation_source: The creation_source of this CustomerFilter.
        :param email_address: The email_address of this CustomerFilter.
        :param group_ids: The group_ids of this CustomerFilter.
        :param phone_number: The phone_number of this CustomerFilter.
        :param reference_id: The reference_id of this CustomerFilter.
        :param updated_at: The updated_at of this CustomerFilter.
        """
        self.openapi_types = {
            'created_at': TimeRange,
            'creation_source': CustomerCreationSourceFilter,
            'email_address': CustomerTextFilter,
            'group_ids': FilterValue,
            'phone_number': CustomerTextFilter,
            'reference_id': CustomerTextFilter,
            'updated_at': TimeRange
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'creation_source': 'creation_source',
            'email_address': 'email_address',
            'group_ids': 'group_ids',
            'phone_number': 'phone_number',
            'reference_id': 'reference_id',
            'updated_at': 'updated_at'
        }

        self._created_at = created_at
        self._creation_source = creation_source
        self._email_address = email_address
        self._group_ids = group_ids
        self._phone_number = phone_number
        self._reference_id = reference_id
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomerFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomerFilter of this CustomerFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this CustomerFilter.


        :return: The created_at of this CustomerFilter.
        :rtype: TimeRange
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this CustomerFilter.


        :param created_at: The created_at of this CustomerFilter.
        :type created_at: TimeRange
        """

        self._created_at = created_at

    @property
    def creation_source(self):
        """Gets the creation_source of this CustomerFilter.


        :return: The creation_source of this CustomerFilter.
        :rtype: CustomerCreationSourceFilter
        """
        return self._creation_source

    @creation_source.setter
    def creation_source(self, creation_source):
        """Sets the creation_source of this CustomerFilter.


        :param creation_source: The creation_source of this CustomerFilter.
        :type creation_source: CustomerCreationSourceFilter
        """

        self._creation_source = creation_source

    @property
    def email_address(self):
        """Gets the email_address of this CustomerFilter.


        :return: The email_address of this CustomerFilter.
        :rtype: CustomerTextFilter
        """
        return self._email_address

    @email_address.setter
    def email_address(self, email_address):
        """Sets the email_address of this CustomerFilter.


        :param email_address: The email_address of this CustomerFilter.
        :type email_address: CustomerTextFilter
        """

        self._email_address = email_address

    @property
    def group_ids(self):
        """Gets the group_ids of this CustomerFilter.


        :return: The group_ids of this CustomerFilter.
        :rtype: FilterValue
        """
        return self._group_ids

    @group_ids.setter
    def group_ids(self, group_ids):
        """Sets the group_ids of this CustomerFilter.


        :param group_ids: The group_ids of this CustomerFilter.
        :type group_ids: FilterValue
        """

        self._group_ids = group_ids

    @property
    def phone_number(self):
        """Gets the phone_number of this CustomerFilter.


        :return: The phone_number of this CustomerFilter.
        :rtype: CustomerTextFilter
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """Sets the phone_number of this CustomerFilter.


        :param phone_number: The phone_number of this CustomerFilter.
        :type phone_number: CustomerTextFilter
        """

        self._phone_number = phone_number

    @property
    def reference_id(self):
        """Gets the reference_id of this CustomerFilter.


        :return: The reference_id of this CustomerFilter.
        :rtype: CustomerTextFilter
        """
        return self._reference_id

    @reference_id.setter
    def reference_id(self, reference_id):
        """Sets the reference_id of this CustomerFilter.


        :param reference_id: The reference_id of this CustomerFilter.
        :type reference_id: CustomerTextFilter
        """

        self._reference_id = reference_id

    @property
    def updated_at(self):
        """Gets the updated_at of this CustomerFilter.


        :return: The updated_at of this CustomerFilter.
        :rtype: TimeRange
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this CustomerFilter.


        :param updated_at: The updated_at of this CustomerFilter.
        :type updated_at: TimeRange
        """

        self._updated_at = updated_at
