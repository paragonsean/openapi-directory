# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DisputeReason(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    AMOUNT_DIFFERS = 'AMOUNT_DIFFERS'
    CANCELLED = 'CANCELLED'
    DUPLICATE = 'DUPLICATE'
    NO_KNOWLEDGE = 'NO_KNOWLEDGE'
    NOT_AS_DESCRIBED = 'NOT_AS_DESCRIBED'
    NOT_RECEIVED = 'NOT_RECEIVED'
    PAID_BY_OTHER_MEANS = 'PAID_BY_OTHER_MEANS'
    CUSTOMER_REQUESTS_CREDIT = 'CUSTOMER_REQUESTS_CREDIT'
    EMV_LIABILITY_SHIFT = 'EMV_LIABILITY_SHIFT'

    def __init__(self):
        """DisputeReason - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DisputeReason':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DisputeReason of this DisputeReason.
        """
        return util.deserialize_model(dikt, cls)
