# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.error import Error
from openapi_server.models.gift_card_activity import GiftCardActivity
from openapi_server import util


class ListGiftCardActivitiesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cursor: str=None, errors: List[Error]=None, gift_card_activities: List[GiftCardActivity]=None):
        """ListGiftCardActivitiesResponse - a model defined in OpenAPI

        :param cursor: The cursor of this ListGiftCardActivitiesResponse.
        :param errors: The errors of this ListGiftCardActivitiesResponse.
        :param gift_card_activities: The gift_card_activities of this ListGiftCardActivitiesResponse.
        """
        self.openapi_types = {
            'cursor': str,
            'errors': List[Error],
            'gift_card_activities': List[GiftCardActivity]
        }

        self.attribute_map = {
            'cursor': 'cursor',
            'errors': 'errors',
            'gift_card_activities': 'gift_card_activities'
        }

        self._cursor = cursor
        self._errors = errors
        self._gift_card_activities = gift_card_activities

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListGiftCardActivitiesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListGiftCardActivitiesResponse of this ListGiftCardActivitiesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cursor(self):
        """Gets the cursor of this ListGiftCardActivitiesResponse.

        When a response is truncated, it includes a cursor that you can use in a subsequent request to fetch the next set of activities. If empty, this is the final response.

        :return: The cursor of this ListGiftCardActivitiesResponse.
        :rtype: str
        """
        return self._cursor

    @cursor.setter
    def cursor(self, cursor):
        """Sets the cursor of this ListGiftCardActivitiesResponse.

        When a response is truncated, it includes a cursor that you can use in a subsequent request to fetch the next set of activities. If empty, this is the final response.

        :param cursor: The cursor of this ListGiftCardActivitiesResponse.
        :type cursor: str
        """

        self._cursor = cursor

    @property
    def errors(self):
        """Gets the errors of this ListGiftCardActivitiesResponse.

        Any errors that occurred during the request.

        :return: The errors of this ListGiftCardActivitiesResponse.
        :rtype: List[Error]
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this ListGiftCardActivitiesResponse.

        Any errors that occurred during the request.

        :param errors: The errors of this ListGiftCardActivitiesResponse.
        :type errors: List[Error]
        """

        self._errors = errors

    @property
    def gift_card_activities(self):
        """Gets the gift_card_activities of this ListGiftCardActivitiesResponse.

        Gift card activities retrieved.

        :return: The gift_card_activities of this ListGiftCardActivitiesResponse.
        :rtype: List[GiftCardActivity]
        """
        return self._gift_card_activities

    @gift_card_activities.setter
    def gift_card_activities(self, gift_card_activities):
        """Sets the gift_card_activities of this ListGiftCardActivitiesResponse.

        Gift card activities retrieved.

        :param gift_card_activities: The gift_card_activities of this ListGiftCardActivitiesResponse.
        :type gift_card_activities: List[GiftCardActivity]
        """

        self._gift_card_activities = gift_card_activities
