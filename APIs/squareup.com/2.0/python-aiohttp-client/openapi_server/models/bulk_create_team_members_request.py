# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_team_member_request import CreateTeamMemberRequest
from openapi_server import util


class BulkCreateTeamMembersRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, team_members: Dict[str, CreateTeamMemberRequest]=None):
        """BulkCreateTeamMembersRequest - a model defined in OpenAPI

        :param team_members: The team_members of this BulkCreateTeamMembersRequest.
        """
        self.openapi_types = {
            'team_members': Dict[str, CreateTeamMemberRequest]
        }

        self.attribute_map = {
            'team_members': 'team_members'
        }

        self._team_members = team_members

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BulkCreateTeamMembersRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BulkCreateTeamMembersRequest of this BulkCreateTeamMembersRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def team_members(self):
        """Gets the team_members of this BulkCreateTeamMembersRequest.

        The data used to create the `TeamMember` objects. Each key is the `idempotency_key` that maps to the `CreateTeamMemberRequest`.

        :return: The team_members of this BulkCreateTeamMembersRequest.
        :rtype: Dict[str, CreateTeamMemberRequest]
        """
        return self._team_members

    @team_members.setter
    def team_members(self, team_members):
        """Sets the team_members of this BulkCreateTeamMembersRequest.

        The data used to create the `TeamMember` objects. Each key is the `idempotency_key` that maps to the `CreateTeamMemberRequest`.

        :param team_members: The team_members of this BulkCreateTeamMembersRequest.
        :type team_members: Dict[str, CreateTeamMemberRequest]
        """
        if team_members is None:
            raise ValueError("Invalid value for `team_members`, must not be `None`")

        self._team_members = team_members
