# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.error import Error
from openapi_server.models.inventory_count import InventoryCount
from openapi_server import util


class BatchRetrieveInventoryCountsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, counts: List[InventoryCount]=None, cursor: str=None, errors: List[Error]=None):
        """BatchRetrieveInventoryCountsResponse - a model defined in OpenAPI

        :param counts: The counts of this BatchRetrieveInventoryCountsResponse.
        :param cursor: The cursor of this BatchRetrieveInventoryCountsResponse.
        :param errors: The errors of this BatchRetrieveInventoryCountsResponse.
        """
        self.openapi_types = {
            'counts': List[InventoryCount],
            'cursor': str,
            'errors': List[Error]
        }

        self.attribute_map = {
            'counts': 'counts',
            'cursor': 'cursor',
            'errors': 'errors'
        }

        self._counts = counts
        self._cursor = cursor
        self._errors = errors

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchRetrieveInventoryCountsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchRetrieveInventoryCountsResponse of this BatchRetrieveInventoryCountsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def counts(self):
        """Gets the counts of this BatchRetrieveInventoryCountsResponse.

        The current calculated inventory counts for the requested objects and locations.

        :return: The counts of this BatchRetrieveInventoryCountsResponse.
        :rtype: List[InventoryCount]
        """
        return self._counts

    @counts.setter
    def counts(self, counts):
        """Sets the counts of this BatchRetrieveInventoryCountsResponse.

        The current calculated inventory counts for the requested objects and locations.

        :param counts: The counts of this BatchRetrieveInventoryCountsResponse.
        :type counts: List[InventoryCount]
        """

        self._counts = counts

    @property
    def cursor(self):
        """Gets the cursor of this BatchRetrieveInventoryCountsResponse.

        The pagination cursor to be used in a subsequent request. If unset, this is the final response.  See the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information.

        :return: The cursor of this BatchRetrieveInventoryCountsResponse.
        :rtype: str
        """
        return self._cursor

    @cursor.setter
    def cursor(self, cursor):
        """Sets the cursor of this BatchRetrieveInventoryCountsResponse.

        The pagination cursor to be used in a subsequent request. If unset, this is the final response.  See the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information.

        :param cursor: The cursor of this BatchRetrieveInventoryCountsResponse.
        :type cursor: str
        """

        self._cursor = cursor

    @property
    def errors(self):
        """Gets the errors of this BatchRetrieveInventoryCountsResponse.

        Any errors that occurred during the request.

        :return: The errors of this BatchRetrieveInventoryCountsResponse.
        :rtype: List[Error]
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this BatchRetrieveInventoryCountsResponse.

        Any errors that occurred during the request.

        :param errors: The errors of this BatchRetrieveInventoryCountsResponse.
        :type errors: List[Error]
        """

        self._errors = errors
