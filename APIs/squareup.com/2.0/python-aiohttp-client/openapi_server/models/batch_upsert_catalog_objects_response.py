# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.catalog_id_mapping import CatalogIdMapping
from openapi_server.models.catalog_object import CatalogObject
from openapi_server.models.error import Error
from openapi_server import util


class BatchUpsertCatalogObjectsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, errors: List[Error]=None, id_mappings: List[CatalogIdMapping]=None, objects: List[CatalogObject]=None, updated_at: str=None):
        """BatchUpsertCatalogObjectsResponse - a model defined in OpenAPI

        :param errors: The errors of this BatchUpsertCatalogObjectsResponse.
        :param id_mappings: The id_mappings of this BatchUpsertCatalogObjectsResponse.
        :param objects: The objects of this BatchUpsertCatalogObjectsResponse.
        :param updated_at: The updated_at of this BatchUpsertCatalogObjectsResponse.
        """
        self.openapi_types = {
            'errors': List[Error],
            'id_mappings': List[CatalogIdMapping],
            'objects': List[CatalogObject],
            'updated_at': str
        }

        self.attribute_map = {
            'errors': 'errors',
            'id_mappings': 'id_mappings',
            'objects': 'objects',
            'updated_at': 'updated_at'
        }

        self._errors = errors
        self._id_mappings = id_mappings
        self._objects = objects
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchUpsertCatalogObjectsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchUpsertCatalogObjectsResponse of this BatchUpsertCatalogObjectsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def errors(self):
        """Gets the errors of this BatchUpsertCatalogObjectsResponse.

        Any errors that occurred during the request.

        :return: The errors of this BatchUpsertCatalogObjectsResponse.
        :rtype: List[Error]
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this BatchUpsertCatalogObjectsResponse.

        Any errors that occurred during the request.

        :param errors: The errors of this BatchUpsertCatalogObjectsResponse.
        :type errors: List[Error]
        """

        self._errors = errors

    @property
    def id_mappings(self):
        """Gets the id_mappings of this BatchUpsertCatalogObjectsResponse.

        The mapping between client and server IDs for this upsert.

        :return: The id_mappings of this BatchUpsertCatalogObjectsResponse.
        :rtype: List[CatalogIdMapping]
        """
        return self._id_mappings

    @id_mappings.setter
    def id_mappings(self, id_mappings):
        """Sets the id_mappings of this BatchUpsertCatalogObjectsResponse.

        The mapping between client and server IDs for this upsert.

        :param id_mappings: The id_mappings of this BatchUpsertCatalogObjectsResponse.
        :type id_mappings: List[CatalogIdMapping]
        """

        self._id_mappings = id_mappings

    @property
    def objects(self):
        """Gets the objects of this BatchUpsertCatalogObjectsResponse.

        The created successfully created CatalogObjects.

        :return: The objects of this BatchUpsertCatalogObjectsResponse.
        :rtype: List[CatalogObject]
        """
        return self._objects

    @objects.setter
    def objects(self, objects):
        """Sets the objects of this BatchUpsertCatalogObjectsResponse.

        The created successfully created CatalogObjects.

        :param objects: The objects of this BatchUpsertCatalogObjectsResponse.
        :type objects: List[CatalogObject]
        """

        self._objects = objects

    @property
    def updated_at(self):
        """Gets the updated_at of this BatchUpsertCatalogObjectsResponse.

        The database [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates) of this update in RFC 3339 format, e.g., \"2016-09-04T23:59:33.123Z\".

        :return: The updated_at of this BatchUpsertCatalogObjectsResponse.
        :rtype: str
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this BatchUpsertCatalogObjectsResponse.

        The database [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates) of this update in RFC 3339 format, e.g., \"2016-09-04T23:59:33.123Z\".

        :param updated_at: The updated_at of this BatchUpsertCatalogObjectsResponse.
        :type updated_at: str
        """

        self._updated_at = updated_at
