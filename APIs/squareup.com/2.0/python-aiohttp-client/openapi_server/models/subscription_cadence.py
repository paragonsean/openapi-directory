# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SubscriptionCadence(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    DAILY = 'DAILY'
    WEEKLY = 'WEEKLY'
    EVERY_TWO_WEEKS = 'EVERY_TWO_WEEKS'
    THIRTY_DAYS = 'THIRTY_DAYS'
    SIXTY_DAYS = 'SIXTY_DAYS'
    NINETY_DAYS = 'NINETY_DAYS'
    MONTHLY = 'MONTHLY'
    EVERY_TWO_MONTHS = 'EVERY_TWO_MONTHS'
    QUARTERLY = 'QUARTERLY'
    EVERY_FOUR_MONTHS = 'EVERY_FOUR_MONTHS'
    EVERY_SIX_MONTHS = 'EVERY_SIX_MONTHS'
    ANNUAL = 'ANNUAL'
    EVERY_TWO_YEARS = 'EVERY_TWO_YEARS'

    def __init__(self):
        """SubscriptionCadence - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SubscriptionCadence':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SubscriptionCadence of this SubscriptionCadence.
        """
        return util.deserialize_model(dikt, cls)
