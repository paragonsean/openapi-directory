# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListTeamMemberBookingProfilesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bookable_only: bool=None, cursor: str=None, limit: int=None, location_id: str=None):
        """ListTeamMemberBookingProfilesRequest - a model defined in OpenAPI

        :param bookable_only: The bookable_only of this ListTeamMemberBookingProfilesRequest.
        :param cursor: The cursor of this ListTeamMemberBookingProfilesRequest.
        :param limit: The limit of this ListTeamMemberBookingProfilesRequest.
        :param location_id: The location_id of this ListTeamMemberBookingProfilesRequest.
        """
        self.openapi_types = {
            'bookable_only': bool,
            'cursor': str,
            'limit': int,
            'location_id': str
        }

        self.attribute_map = {
            'bookable_only': 'bookable_only',
            'cursor': 'cursor',
            'limit': 'limit',
            'location_id': 'location_id'
        }

        self._bookable_only = bookable_only
        self._cursor = cursor
        self._limit = limit
        self._location_id = location_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListTeamMemberBookingProfilesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListTeamMemberBookingProfilesRequest of this ListTeamMemberBookingProfilesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bookable_only(self):
        """Gets the bookable_only of this ListTeamMemberBookingProfilesRequest.

        Indicates whether to include only bookable team members in the returned result (`true`) or not (`false`).

        :return: The bookable_only of this ListTeamMemberBookingProfilesRequest.
        :rtype: bool
        """
        return self._bookable_only

    @bookable_only.setter
    def bookable_only(self, bookable_only):
        """Sets the bookable_only of this ListTeamMemberBookingProfilesRequest.

        Indicates whether to include only bookable team members in the returned result (`true`) or not (`false`).

        :param bookable_only: The bookable_only of this ListTeamMemberBookingProfilesRequest.
        :type bookable_only: bool
        """

        self._bookable_only = bookable_only

    @property
    def cursor(self):
        """Gets the cursor of this ListTeamMemberBookingProfilesRequest.

        The cursor for paginating through the results.

        :return: The cursor of this ListTeamMemberBookingProfilesRequest.
        :rtype: str
        """
        return self._cursor

    @cursor.setter
    def cursor(self, cursor):
        """Sets the cursor of this ListTeamMemberBookingProfilesRequest.

        The cursor for paginating through the results.

        :param cursor: The cursor of this ListTeamMemberBookingProfilesRequest.
        :type cursor: str
        """

        self._cursor = cursor

    @property
    def limit(self):
        """Gets the limit of this ListTeamMemberBookingProfilesRequest.

        The maximum number of results to return.

        :return: The limit of this ListTeamMemberBookingProfilesRequest.
        :rtype: int
        """
        return self._limit

    @limit.setter
    def limit(self, limit):
        """Sets the limit of this ListTeamMemberBookingProfilesRequest.

        The maximum number of results to return.

        :param limit: The limit of this ListTeamMemberBookingProfilesRequest.
        :type limit: int
        """

        self._limit = limit

    @property
    def location_id(self):
        """Gets the location_id of this ListTeamMemberBookingProfilesRequest.

        Indicates whether to include only team members enabled at the given location in the returned result.

        :return: The location_id of this ListTeamMemberBookingProfilesRequest.
        :rtype: str
        """
        return self._location_id

    @location_id.setter
    def location_id(self, location_id):
        """Sets the location_id of this ListTeamMemberBookingProfilesRequest.

        Indicates whether to include only team members enabled at the given location in the returned result.

        :param location_id: The location_id of this ListTeamMemberBookingProfilesRequest.
        :type location_id: str
        """

        self._location_id = location_id
