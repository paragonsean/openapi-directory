# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.device_code import DeviceCode
from openapi_server.models.error import Error
from openapi_server import util


class CreateDeviceCodeResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, device_code: DeviceCode=None, errors: List[Error]=None):
        """CreateDeviceCodeResponse - a model defined in OpenAPI

        :param device_code: The device_code of this CreateDeviceCodeResponse.
        :param errors: The errors of this CreateDeviceCodeResponse.
        """
        self.openapi_types = {
            'device_code': DeviceCode,
            'errors': List[Error]
        }

        self.attribute_map = {
            'device_code': 'device_code',
            'errors': 'errors'
        }

        self._device_code = device_code
        self._errors = errors

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateDeviceCodeResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateDeviceCodeResponse of this CreateDeviceCodeResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def device_code(self):
        """Gets the device_code of this CreateDeviceCodeResponse.


        :return: The device_code of this CreateDeviceCodeResponse.
        :rtype: DeviceCode
        """
        return self._device_code

    @device_code.setter
    def device_code(self, device_code):
        """Sets the device_code of this CreateDeviceCodeResponse.


        :param device_code: The device_code of this CreateDeviceCodeResponse.
        :type device_code: DeviceCode
        """

        self._device_code = device_code

    @property
    def errors(self):
        """Gets the errors of this CreateDeviceCodeResponse.

        Any errors that occurred during the request.

        :return: The errors of this CreateDeviceCodeResponse.
        :rtype: List[Error]
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this CreateDeviceCodeResponse.

        Any errors that occurred during the request.

        :param errors: The errors of this CreateDeviceCodeResponse.
        :type errors: List[Error]
        """

        self._errors = errors
