# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.error import Error
from openapi_server.models.inventory_change import InventoryChange
from openapi_server.models.inventory_count import InventoryCount
from openapi_server import util


class BatchChangeInventoryResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, changes: List[InventoryChange]=None, counts: List[InventoryCount]=None, errors: List[Error]=None):
        """BatchChangeInventoryResponse - a model defined in OpenAPI

        :param changes: The changes of this BatchChangeInventoryResponse.
        :param counts: The counts of this BatchChangeInventoryResponse.
        :param errors: The errors of this BatchChangeInventoryResponse.
        """
        self.openapi_types = {
            'changes': List[InventoryChange],
            'counts': List[InventoryCount],
            'errors': List[Error]
        }

        self.attribute_map = {
            'changes': 'changes',
            'counts': 'counts',
            'errors': 'errors'
        }

        self._changes = changes
        self._counts = counts
        self._errors = errors

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchChangeInventoryResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchChangeInventoryResponse of this BatchChangeInventoryResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def changes(self):
        """Gets the changes of this BatchChangeInventoryResponse.

        Changes created for the request.

        :return: The changes of this BatchChangeInventoryResponse.
        :rtype: List[InventoryChange]
        """
        return self._changes

    @changes.setter
    def changes(self, changes):
        """Sets the changes of this BatchChangeInventoryResponse.

        Changes created for the request.

        :param changes: The changes of this BatchChangeInventoryResponse.
        :type changes: List[InventoryChange]
        """

        self._changes = changes

    @property
    def counts(self):
        """Gets the counts of this BatchChangeInventoryResponse.

        The current counts for all objects referenced in the request.

        :return: The counts of this BatchChangeInventoryResponse.
        :rtype: List[InventoryCount]
        """
        return self._counts

    @counts.setter
    def counts(self, counts):
        """Sets the counts of this BatchChangeInventoryResponse.

        The current counts for all objects referenced in the request.

        :param counts: The counts of this BatchChangeInventoryResponse.
        :type counts: List[InventoryCount]
        """

        self._counts = counts

    @property
    def errors(self):
        """Gets the errors of this BatchChangeInventoryResponse.

        Any errors that occurred during the request.

        :return: The errors of this BatchChangeInventoryResponse.
        :rtype: List[Error]
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this BatchChangeInventoryResponse.

        Any errors that occurred during the request.

        :param errors: The errors of this BatchChangeInventoryResponse.
        :type errors: List[Error]
        """

        self._errors = errors
