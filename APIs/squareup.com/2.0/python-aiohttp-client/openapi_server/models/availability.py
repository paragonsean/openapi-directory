# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.appointment_segment import AppointmentSegment
from openapi_server import util


class Availability(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, appointment_segments: List[AppointmentSegment]=None, location_id: str=None, start_at: str=None):
        """Availability - a model defined in OpenAPI

        :param appointment_segments: The appointment_segments of this Availability.
        :param location_id: The location_id of this Availability.
        :param start_at: The start_at of this Availability.
        """
        self.openapi_types = {
            'appointment_segments': List[AppointmentSegment],
            'location_id': str,
            'start_at': str
        }

        self.attribute_map = {
            'appointment_segments': 'appointment_segments',
            'location_id': 'location_id',
            'start_at': 'start_at'
        }

        self._appointment_segments = appointment_segments
        self._location_id = location_id
        self._start_at = start_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Availability':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Availability of this Availability.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def appointment_segments(self):
        """Gets the appointment_segments of this Availability.

        The list of appointment segments available for booking

        :return: The appointment_segments of this Availability.
        :rtype: List[AppointmentSegment]
        """
        return self._appointment_segments

    @appointment_segments.setter
    def appointment_segments(self, appointment_segments):
        """Sets the appointment_segments of this Availability.

        The list of appointment segments available for booking

        :param appointment_segments: The appointment_segments of this Availability.
        :type appointment_segments: List[AppointmentSegment]
        """

        self._appointment_segments = appointment_segments

    @property
    def location_id(self):
        """Gets the location_id of this Availability.

        The ID of the location available for booking.

        :return: The location_id of this Availability.
        :rtype: str
        """
        return self._location_id

    @location_id.setter
    def location_id(self, location_id):
        """Sets the location_id of this Availability.

        The ID of the location available for booking.

        :param location_id: The location_id of this Availability.
        :type location_id: str
        """

        self._location_id = location_id

    @property
    def start_at(self):
        """Gets the start_at of this Availability.

        The RFC 3339 timestamp specifying the beginning time of the slot available for booking.

        :return: The start_at of this Availability.
        :rtype: str
        """
        return self._start_at

    @start_at.setter
    def start_at(self, start_at):
        """Sets the start_at of this Availability.

        The RFC 3339 timestamp specifying the beginning time of the slot available for booking.

        :param start_at: The start_at of this Availability.
        :type start_at: str
        """

        self._start_at = start_at
