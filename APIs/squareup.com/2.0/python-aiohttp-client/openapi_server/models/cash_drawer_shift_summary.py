# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.money import Money
from openapi_server import util


class CashDrawerShiftSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, closed_at: str=None, closed_cash_money: Money=None, description: str=None, ended_at: str=None, expected_cash_money: Money=None, id: str=None, opened_at: str=None, opened_cash_money: Money=None, state: str=None):
        """CashDrawerShiftSummary - a model defined in OpenAPI

        :param closed_at: The closed_at of this CashDrawerShiftSummary.
        :param closed_cash_money: The closed_cash_money of this CashDrawerShiftSummary.
        :param description: The description of this CashDrawerShiftSummary.
        :param ended_at: The ended_at of this CashDrawerShiftSummary.
        :param expected_cash_money: The expected_cash_money of this CashDrawerShiftSummary.
        :param id: The id of this CashDrawerShiftSummary.
        :param opened_at: The opened_at of this CashDrawerShiftSummary.
        :param opened_cash_money: The opened_cash_money of this CashDrawerShiftSummary.
        :param state: The state of this CashDrawerShiftSummary.
        """
        self.openapi_types = {
            'closed_at': str,
            'closed_cash_money': Money,
            'description': str,
            'ended_at': str,
            'expected_cash_money': Money,
            'id': str,
            'opened_at': str,
            'opened_cash_money': Money,
            'state': str
        }

        self.attribute_map = {
            'closed_at': 'closed_at',
            'closed_cash_money': 'closed_cash_money',
            'description': 'description',
            'ended_at': 'ended_at',
            'expected_cash_money': 'expected_cash_money',
            'id': 'id',
            'opened_at': 'opened_at',
            'opened_cash_money': 'opened_cash_money',
            'state': 'state'
        }

        self._closed_at = closed_at
        self._closed_cash_money = closed_cash_money
        self._description = description
        self._ended_at = ended_at
        self._expected_cash_money = expected_cash_money
        self._id = id
        self._opened_at = opened_at
        self._opened_cash_money = opened_cash_money
        self._state = state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CashDrawerShiftSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CashDrawerShiftSummary of this CashDrawerShiftSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def closed_at(self):
        """Gets the closed_at of this CashDrawerShiftSummary.

        The shift close time in ISO 8601 format.

        :return: The closed_at of this CashDrawerShiftSummary.
        :rtype: str
        """
        return self._closed_at

    @closed_at.setter
    def closed_at(self, closed_at):
        """Sets the closed_at of this CashDrawerShiftSummary.

        The shift close time in ISO 8601 format.

        :param closed_at: The closed_at of this CashDrawerShiftSummary.
        :type closed_at: str
        """

        self._closed_at = closed_at

    @property
    def closed_cash_money(self):
        """Gets the closed_cash_money of this CashDrawerShiftSummary.


        :return: The closed_cash_money of this CashDrawerShiftSummary.
        :rtype: Money
        """
        return self._closed_cash_money

    @closed_cash_money.setter
    def closed_cash_money(self, closed_cash_money):
        """Sets the closed_cash_money of this CashDrawerShiftSummary.


        :param closed_cash_money: The closed_cash_money of this CashDrawerShiftSummary.
        :type closed_cash_money: Money
        """

        self._closed_cash_money = closed_cash_money

    @property
    def description(self):
        """Gets the description of this CashDrawerShiftSummary.

        An employee free-text description of a cash drawer shift.

        :return: The description of this CashDrawerShiftSummary.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CashDrawerShiftSummary.

        An employee free-text description of a cash drawer shift.

        :param description: The description of this CashDrawerShiftSummary.
        :type description: str
        """

        self._description = description

    @property
    def ended_at(self):
        """Gets the ended_at of this CashDrawerShiftSummary.

        The shift end time in ISO 8601 format.

        :return: The ended_at of this CashDrawerShiftSummary.
        :rtype: str
        """
        return self._ended_at

    @ended_at.setter
    def ended_at(self, ended_at):
        """Sets the ended_at of this CashDrawerShiftSummary.

        The shift end time in ISO 8601 format.

        :param ended_at: The ended_at of this CashDrawerShiftSummary.
        :type ended_at: str
        """

        self._ended_at = ended_at

    @property
    def expected_cash_money(self):
        """Gets the expected_cash_money of this CashDrawerShiftSummary.


        :return: The expected_cash_money of this CashDrawerShiftSummary.
        :rtype: Money
        """
        return self._expected_cash_money

    @expected_cash_money.setter
    def expected_cash_money(self, expected_cash_money):
        """Sets the expected_cash_money of this CashDrawerShiftSummary.


        :param expected_cash_money: The expected_cash_money of this CashDrawerShiftSummary.
        :type expected_cash_money: Money
        """

        self._expected_cash_money = expected_cash_money

    @property
    def id(self):
        """Gets the id of this CashDrawerShiftSummary.

        The shift unique ID.

        :return: The id of this CashDrawerShiftSummary.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CashDrawerShiftSummary.

        The shift unique ID.

        :param id: The id of this CashDrawerShiftSummary.
        :type id: str
        """

        self._id = id

    @property
    def opened_at(self):
        """Gets the opened_at of this CashDrawerShiftSummary.

        The shift start time in ISO 8601 format.

        :return: The opened_at of this CashDrawerShiftSummary.
        :rtype: str
        """
        return self._opened_at

    @opened_at.setter
    def opened_at(self, opened_at):
        """Sets the opened_at of this CashDrawerShiftSummary.

        The shift start time in ISO 8601 format.

        :param opened_at: The opened_at of this CashDrawerShiftSummary.
        :type opened_at: str
        """

        self._opened_at = opened_at

    @property
    def opened_cash_money(self):
        """Gets the opened_cash_money of this CashDrawerShiftSummary.


        :return: The opened_cash_money of this CashDrawerShiftSummary.
        :rtype: Money
        """
        return self._opened_cash_money

    @opened_cash_money.setter
    def opened_cash_money(self, opened_cash_money):
        """Sets the opened_cash_money of this CashDrawerShiftSummary.


        :param opened_cash_money: The opened_cash_money of this CashDrawerShiftSummary.
        :type opened_cash_money: Money
        """

        self._opened_cash_money = opened_cash_money

    @property
    def state(self):
        """Gets the state of this CashDrawerShiftSummary.

        The shift current state.

        :return: The state of this CashDrawerShiftSummary.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this CashDrawerShiftSummary.

        The shift current state.

        :param state: The state of this CashDrawerShiftSummary.
        :type state: str
        """

        self._state = state
