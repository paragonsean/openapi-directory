# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PublishInvoiceRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, idempotency_key: str=None, version: int=None):
        """PublishInvoiceRequest - a model defined in OpenAPI

        :param idempotency_key: The idempotency_key of this PublishInvoiceRequest.
        :param version: The version of this PublishInvoiceRequest.
        """
        self.openapi_types = {
            'idempotency_key': str,
            'version': int
        }

        self.attribute_map = {
            'idempotency_key': 'idempotency_key',
            'version': 'version'
        }

        self._idempotency_key = idempotency_key
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PublishInvoiceRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PublishInvoiceRequest of this PublishInvoiceRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def idempotency_key(self):
        """Gets the idempotency_key of this PublishInvoiceRequest.

        A unique string that identifies the `PublishInvoice` request. If you do not  provide `idempotency_key` (or provide an empty string as the value), the endpoint  treats each request as independent.  For more information, see [Idempotency](https://developer.squareup.com/docs/working-with-apis/idempotency).

        :return: The idempotency_key of this PublishInvoiceRequest.
        :rtype: str
        """
        return self._idempotency_key

    @idempotency_key.setter
    def idempotency_key(self, idempotency_key):
        """Sets the idempotency_key of this PublishInvoiceRequest.

        A unique string that identifies the `PublishInvoice` request. If you do not  provide `idempotency_key` (or provide an empty string as the value), the endpoint  treats each request as independent.  For more information, see [Idempotency](https://developer.squareup.com/docs/working-with-apis/idempotency).

        :param idempotency_key: The idempotency_key of this PublishInvoiceRequest.
        :type idempotency_key: str
        """
        if idempotency_key is not None and len(idempotency_key) > 128:
            raise ValueError("Invalid value for `idempotency_key`, length must be less than or equal to `128`")

        self._idempotency_key = idempotency_key

    @property
    def version(self):
        """Gets the version of this PublishInvoiceRequest.

        The version of the [invoice](https://developer.squareup.com/reference/square_2021-08-18/objects/Invoice) to publish. This must match the current version of the invoice; otherwise, the request is rejected.

        :return: The version of this PublishInvoiceRequest.
        :rtype: int
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this PublishInvoiceRequest.

        The version of the [invoice](https://developer.squareup.com/reference/square_2021-08-18/objects/Invoice) to publish. This must match the current version of the invoice; otherwise, the request is rejected.

        :param version: The version of this PublishInvoiceRequest.
        :type version: int
        """
        if version is None:
            raise ValueError("Invalid value for `version`, must not be `None`")

        self._version = version
