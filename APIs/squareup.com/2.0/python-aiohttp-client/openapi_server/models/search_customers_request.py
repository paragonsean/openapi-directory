# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.customer_query import CustomerQuery
from openapi_server import util


class SearchCustomersRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cursor: str=None, limit: int=None, query: CustomerQuery=None):
        """SearchCustomersRequest - a model defined in OpenAPI

        :param cursor: The cursor of this SearchCustomersRequest.
        :param limit: The limit of this SearchCustomersRequest.
        :param query: The query of this SearchCustomersRequest.
        """
        self.openapi_types = {
            'cursor': str,
            'limit': int,
            'query': CustomerQuery
        }

        self.attribute_map = {
            'cursor': 'cursor',
            'limit': 'limit',
            'query': 'query'
        }

        self._cursor = cursor
        self._limit = limit
        self._query = query

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SearchCustomersRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SearchCustomersRequest of this SearchCustomersRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cursor(self):
        """Gets the cursor of this SearchCustomersRequest.

        Include the pagination cursor in subsequent calls to this endpoint to retrieve the next set of results associated with the original query.  For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination).

        :return: The cursor of this SearchCustomersRequest.
        :rtype: str
        """
        return self._cursor

    @cursor.setter
    def cursor(self, cursor):
        """Sets the cursor of this SearchCustomersRequest.

        Include the pagination cursor in subsequent calls to this endpoint to retrieve the next set of results associated with the original query.  For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination).

        :param cursor: The cursor of this SearchCustomersRequest.
        :type cursor: str
        """

        self._cursor = cursor

    @property
    def limit(self):
        """Gets the limit of this SearchCustomersRequest.

        The maximum number of results to return in a single page. This limit is advisory. The response might contain more or fewer results.  The limit is ignored if it is less than the minimum or greater than the maximum value. The default value is 100.  For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination).

        :return: The limit of this SearchCustomersRequest.
        :rtype: int
        """
        return self._limit

    @limit.setter
    def limit(self, limit):
        """Sets the limit of this SearchCustomersRequest.

        The maximum number of results to return in a single page. This limit is advisory. The response might contain more or fewer results.  The limit is ignored if it is less than the minimum or greater than the maximum value. The default value is 100.  For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination).

        :param limit: The limit of this SearchCustomersRequest.
        :type limit: int
        """
        if limit is not None and limit > 100:
            raise ValueError("Invalid value for `limit`, must be a value less than or equal to `100`")
        if limit is not None and limit < 1:
            raise ValueError("Invalid value for `limit`, must be a value greater than or equal to `1`")

        self._limit = limit

    @property
    def query(self):
        """Gets the query of this SearchCustomersRequest.


        :return: The query of this SearchCustomersRequest.
        :rtype: CustomerQuery
        """
        return self._query

    @query.setter
    def query(self, query):
        """Sets the query of this SearchCustomersRequest.


        :param query: The query of this SearchCustomersRequest.
        :type query: CustomerQuery
        """

        self._query = query
