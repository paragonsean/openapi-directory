# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.catalog_query import CatalogQuery
from openapi_server import util


class SearchCatalogObjectsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, begin_time: str=None, cursor: str=None, include_deleted_objects: bool=None, include_related_objects: bool=None, limit: int=None, object_types: List[str]=None, query: CatalogQuery=None):
        """SearchCatalogObjectsRequest - a model defined in OpenAPI

        :param begin_time: The begin_time of this SearchCatalogObjectsRequest.
        :param cursor: The cursor of this SearchCatalogObjectsRequest.
        :param include_deleted_objects: The include_deleted_objects of this SearchCatalogObjectsRequest.
        :param include_related_objects: The include_related_objects of this SearchCatalogObjectsRequest.
        :param limit: The limit of this SearchCatalogObjectsRequest.
        :param object_types: The object_types of this SearchCatalogObjectsRequest.
        :param query: The query of this SearchCatalogObjectsRequest.
        """
        self.openapi_types = {
            'begin_time': str,
            'cursor': str,
            'include_deleted_objects': bool,
            'include_related_objects': bool,
            'limit': int,
            'object_types': List[str],
            'query': CatalogQuery
        }

        self.attribute_map = {
            'begin_time': 'begin_time',
            'cursor': 'cursor',
            'include_deleted_objects': 'include_deleted_objects',
            'include_related_objects': 'include_related_objects',
            'limit': 'limit',
            'object_types': 'object_types',
            'query': 'query'
        }

        self._begin_time = begin_time
        self._cursor = cursor
        self._include_deleted_objects = include_deleted_objects
        self._include_related_objects = include_related_objects
        self._limit = limit
        self._object_types = object_types
        self._query = query

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SearchCatalogObjectsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SearchCatalogObjectsRequest of this SearchCatalogObjectsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def begin_time(self):
        """Gets the begin_time of this SearchCatalogObjectsRequest.

        Return objects modified after this [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates), in RFC 3339 format, e.g., `2016-09-04T23:59:33.123Z`. The timestamp is exclusive - objects with a timestamp equal to `begin_time` will not be included in the response.

        :return: The begin_time of this SearchCatalogObjectsRequest.
        :rtype: str
        """
        return self._begin_time

    @begin_time.setter
    def begin_time(self, begin_time):
        """Sets the begin_time of this SearchCatalogObjectsRequest.

        Return objects modified after this [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates), in RFC 3339 format, e.g., `2016-09-04T23:59:33.123Z`. The timestamp is exclusive - objects with a timestamp equal to `begin_time` will not be included in the response.

        :param begin_time: The begin_time of this SearchCatalogObjectsRequest.
        :type begin_time: str
        """

        self._begin_time = begin_time

    @property
    def cursor(self):
        """Gets the cursor of this SearchCatalogObjectsRequest.

        The pagination cursor returned in the previous response. Leave unset for an initial request. See [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information.

        :return: The cursor of this SearchCatalogObjectsRequest.
        :rtype: str
        """
        return self._cursor

    @cursor.setter
    def cursor(self, cursor):
        """Sets the cursor of this SearchCatalogObjectsRequest.

        The pagination cursor returned in the previous response. Leave unset for an initial request. See [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information.

        :param cursor: The cursor of this SearchCatalogObjectsRequest.
        :type cursor: str
        """

        self._cursor = cursor

    @property
    def include_deleted_objects(self):
        """Gets the include_deleted_objects of this SearchCatalogObjectsRequest.

        If `true`, deleted objects will be included in the results. Deleted objects will have their `is_deleted` field set to `true`.

        :return: The include_deleted_objects of this SearchCatalogObjectsRequest.
        :rtype: bool
        """
        return self._include_deleted_objects

    @include_deleted_objects.setter
    def include_deleted_objects(self, include_deleted_objects):
        """Sets the include_deleted_objects of this SearchCatalogObjectsRequest.

        If `true`, deleted objects will be included in the results. Deleted objects will have their `is_deleted` field set to `true`.

        :param include_deleted_objects: The include_deleted_objects of this SearchCatalogObjectsRequest.
        :type include_deleted_objects: bool
        """

        self._include_deleted_objects = include_deleted_objects

    @property
    def include_related_objects(self):
        """Gets the include_related_objects of this SearchCatalogObjectsRequest.

        If `true`, the response will include additional objects that are related to the requested object, as follows:  If a CatalogItem is returned in the object field of the response, its associated CatalogCategory, CatalogTax objects, CatalogImage objects and CatalogModifierList objects will be included in the `related_objects` field of the response.  If a CatalogItemVariation is returned in the object field of the response, its parent CatalogItem will be included in the `related_objects` field of the response.

        :return: The include_related_objects of this SearchCatalogObjectsRequest.
        :rtype: bool
        """
        return self._include_related_objects

    @include_related_objects.setter
    def include_related_objects(self, include_related_objects):
        """Sets the include_related_objects of this SearchCatalogObjectsRequest.

        If `true`, the response will include additional objects that are related to the requested object, as follows:  If a CatalogItem is returned in the object field of the response, its associated CatalogCategory, CatalogTax objects, CatalogImage objects and CatalogModifierList objects will be included in the `related_objects` field of the response.  If a CatalogItemVariation is returned in the object field of the response, its parent CatalogItem will be included in the `related_objects` field of the response.

        :param include_related_objects: The include_related_objects of this SearchCatalogObjectsRequest.
        :type include_related_objects: bool
        """

        self._include_related_objects = include_related_objects

    @property
    def limit(self):
        """Gets the limit of this SearchCatalogObjectsRequest.

        A limit on the number of results to be returned in a single page. The limit is advisory - the implementation may return more or fewer results. If the supplied limit is negative, zero, or is higher than the maximum limit of 1,000, it will be ignored.

        :return: The limit of this SearchCatalogObjectsRequest.
        :rtype: int
        """
        return self._limit

    @limit.setter
    def limit(self, limit):
        """Sets the limit of this SearchCatalogObjectsRequest.

        A limit on the number of results to be returned in a single page. The limit is advisory - the implementation may return more or fewer results. If the supplied limit is negative, zero, or is higher than the maximum limit of 1,000, it will be ignored.

        :param limit: The limit of this SearchCatalogObjectsRequest.
        :type limit: int
        """

        self._limit = limit

    @property
    def object_types(self):
        """Gets the object_types of this SearchCatalogObjectsRequest.

        The desired set of object types to appear in the search results.

        :return: The object_types of this SearchCatalogObjectsRequest.
        :rtype: List[str]
        """
        return self._object_types

    @object_types.setter
    def object_types(self, object_types):
        """Sets the object_types of this SearchCatalogObjectsRequest.

        The desired set of object types to appear in the search results.

        :param object_types: The object_types of this SearchCatalogObjectsRequest.
        :type object_types: List[str]
        """

        self._object_types = object_types

    @property
    def query(self):
        """Gets the query of this SearchCatalogObjectsRequest.


        :return: The query of this SearchCatalogObjectsRequest.
        :rtype: CatalogQuery
        """
        return self._query

    @query.setter
    def query(self, query):
        """Sets the query of this SearchCatalogObjectsRequest.


        :param query: The query of this SearchCatalogObjectsRequest.
        :type query: CatalogQuery
        """

        self._query = query
