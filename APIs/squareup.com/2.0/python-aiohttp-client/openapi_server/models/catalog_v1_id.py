# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CatalogV1Id(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, catalog_v1_id: str=None, location_id: str=None):
        """CatalogV1Id - a model defined in OpenAPI

        :param catalog_v1_id: The catalog_v1_id of this CatalogV1Id.
        :param location_id: The location_id of this CatalogV1Id.
        """
        self.openapi_types = {
            'catalog_v1_id': str,
            'location_id': str
        }

        self.attribute_map = {
            'catalog_v1_id': 'catalog_v1_id',
            'location_id': 'location_id'
        }

        self._catalog_v1_id = catalog_v1_id
        self._location_id = location_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CatalogV1Id':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CatalogV1Id of this CatalogV1Id.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def catalog_v1_id(self):
        """Gets the catalog_v1_id of this CatalogV1Id.

        The ID for an object used in the Square API V1, if the object ID differs from the Square API V2 object ID.

        :return: The catalog_v1_id of this CatalogV1Id.
        :rtype: str
        """
        return self._catalog_v1_id

    @catalog_v1_id.setter
    def catalog_v1_id(self, catalog_v1_id):
        """Sets the catalog_v1_id of this CatalogV1Id.

        The ID for an object used in the Square API V1, if the object ID differs from the Square API V2 object ID.

        :param catalog_v1_id: The catalog_v1_id of this CatalogV1Id.
        :type catalog_v1_id: str
        """

        self._catalog_v1_id = catalog_v1_id

    @property
    def location_id(self):
        """Gets the location_id of this CatalogV1Id.

        The ID of the `Location` this Connect V1 ID is associated with.

        :return: The location_id of this CatalogV1Id.
        :rtype: str
        """
        return self._location_id

    @location_id.setter
    def location_id(self, location_id):
        """Sets the location_id of this CatalogV1Id.

        The ID of the `Location` this Connect V1 ID is associated with.

        :param location_id: The location_id of this CatalogV1Id.
        :type location_id: str
        """

        self._location_id = location_id
