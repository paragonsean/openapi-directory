# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.address import Address
from openapi_server.models.card import Card
from openapi_server.models.customer_preferences import CustomerPreferences
from openapi_server import util


class Customer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: Address=None, birthday: str=None, cards: List[Card]=None, company_name: str=None, created_at: str=None, creation_source: str=None, email_address: str=None, family_name: str=None, given_name: str=None, group_ids: List[str]=None, id: str=None, nickname: str=None, note: str=None, phone_number: str=None, preferences: CustomerPreferences=None, reference_id: str=None, segment_ids: List[str]=None, updated_at: str=None, version: int=None):
        """Customer - a model defined in OpenAPI

        :param address: The address of this Customer.
        :param birthday: The birthday of this Customer.
        :param cards: The cards of this Customer.
        :param company_name: The company_name of this Customer.
        :param created_at: The created_at of this Customer.
        :param creation_source: The creation_source of this Customer.
        :param email_address: The email_address of this Customer.
        :param family_name: The family_name of this Customer.
        :param given_name: The given_name of this Customer.
        :param group_ids: The group_ids of this Customer.
        :param id: The id of this Customer.
        :param nickname: The nickname of this Customer.
        :param note: The note of this Customer.
        :param phone_number: The phone_number of this Customer.
        :param preferences: The preferences of this Customer.
        :param reference_id: The reference_id of this Customer.
        :param segment_ids: The segment_ids of this Customer.
        :param updated_at: The updated_at of this Customer.
        :param version: The version of this Customer.
        """
        self.openapi_types = {
            'address': Address,
            'birthday': str,
            'cards': List[Card],
            'company_name': str,
            'created_at': str,
            'creation_source': str,
            'email_address': str,
            'family_name': str,
            'given_name': str,
            'group_ids': List[str],
            'id': str,
            'nickname': str,
            'note': str,
            'phone_number': str,
            'preferences': CustomerPreferences,
            'reference_id': str,
            'segment_ids': List[str],
            'updated_at': str,
            'version': int
        }

        self.attribute_map = {
            'address': 'address',
            'birthday': 'birthday',
            'cards': 'cards',
            'company_name': 'company_name',
            'created_at': 'created_at',
            'creation_source': 'creation_source',
            'email_address': 'email_address',
            'family_name': 'family_name',
            'given_name': 'given_name',
            'group_ids': 'group_ids',
            'id': 'id',
            'nickname': 'nickname',
            'note': 'note',
            'phone_number': 'phone_number',
            'preferences': 'preferences',
            'reference_id': 'reference_id',
            'segment_ids': 'segment_ids',
            'updated_at': 'updated_at',
            'version': 'version'
        }

        self._address = address
        self._birthday = birthday
        self._cards = cards
        self._company_name = company_name
        self._created_at = created_at
        self._creation_source = creation_source
        self._email_address = email_address
        self._family_name = family_name
        self._given_name = given_name
        self._group_ids = group_ids
        self._id = id
        self._nickname = nickname
        self._note = note
        self._phone_number = phone_number
        self._preferences = preferences
        self._reference_id = reference_id
        self._segment_ids = segment_ids
        self._updated_at = updated_at
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Customer':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Customer of this Customer.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this Customer.


        :return: The address of this Customer.
        :rtype: Address
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this Customer.


        :param address: The address of this Customer.
        :type address: Address
        """

        self._address = address

    @property
    def birthday(self):
        """Gets the birthday of this Customer.

        The birthday associated with the customer profile, in RFC 3339 format. The year is optional. The timezone and time are not allowed. For example, `0000-09-21T00:00:00-00:00` represents a birthday on September 21 and `1998-09-21T00:00:00-00:00` represents a birthday on September 21, 1998.

        :return: The birthday of this Customer.
        :rtype: str
        """
        return self._birthday

    @birthday.setter
    def birthday(self, birthday):
        """Sets the birthday of this Customer.

        The birthday associated with the customer profile, in RFC 3339 format. The year is optional. The timezone and time are not allowed. For example, `0000-09-21T00:00:00-00:00` represents a birthday on September 21 and `1998-09-21T00:00:00-00:00` represents a birthday on September 21, 1998.

        :param birthday: The birthday of this Customer.
        :type birthday: str
        """

        self._birthday = birthday

    @property
    def cards(self):
        """Gets the cards of this Customer.

        Payment details of the credit, debit, and gift cards stored on file for the customer profile.   DEPRECATED at version 2021-06-16. Replaced by calling [ListCards](https://developer.squareup.com/reference/square_2021-08-18/cards-api/list-cards) (for credit and debit cards on file)  or [ListGiftCards](https://developer.squareup.com/reference/square_2021-08-18/gift-cards-api/list-gift-cards) (for gift cards on file) and including the `customer_id` query parameter.  For more information, see [Migrate to the Cards API and Gift Cards API](https://developer.squareup.com/docs/customers-api/use-the-api/integrate-with-other-services#migrate-customer-cards).

        :return: The cards of this Customer.
        :rtype: List[Card]
        """
        return self._cards

    @cards.setter
    def cards(self, cards):
        """Sets the cards of this Customer.

        Payment details of the credit, debit, and gift cards stored on file for the customer profile.   DEPRECATED at version 2021-06-16. Replaced by calling [ListCards](https://developer.squareup.com/reference/square_2021-08-18/cards-api/list-cards) (for credit and debit cards on file)  or [ListGiftCards](https://developer.squareup.com/reference/square_2021-08-18/gift-cards-api/list-gift-cards) (for gift cards on file) and including the `customer_id` query parameter.  For more information, see [Migrate to the Cards API and Gift Cards API](https://developer.squareup.com/docs/customers-api/use-the-api/integrate-with-other-services#migrate-customer-cards).

        :param cards: The cards of this Customer.
        :type cards: List[Card]
        """

        self._cards = cards

    @property
    def company_name(self):
        """Gets the company_name of this Customer.

        A business name associated with the customer profile.

        :return: The company_name of this Customer.
        :rtype: str
        """
        return self._company_name

    @company_name.setter
    def company_name(self, company_name):
        """Sets the company_name of this Customer.

        A business name associated with the customer profile.

        :param company_name: The company_name of this Customer.
        :type company_name: str
        """

        self._company_name = company_name

    @property
    def created_at(self):
        """Gets the created_at of this Customer.

        The timestamp when the customer profile was created, in RFC 3339 format.

        :return: The created_at of this Customer.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this Customer.

        The timestamp when the customer profile was created, in RFC 3339 format.

        :param created_at: The created_at of this Customer.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def creation_source(self):
        """Gets the creation_source of this Customer.

        A creation source represents the method used to create the customer profile.

        :return: The creation_source of this Customer.
        :rtype: str
        """
        return self._creation_source

    @creation_source.setter
    def creation_source(self, creation_source):
        """Sets the creation_source of this Customer.

        A creation source represents the method used to create the customer profile.

        :param creation_source: The creation_source of this Customer.
        :type creation_source: str
        """

        self._creation_source = creation_source

    @property
    def email_address(self):
        """Gets the email_address of this Customer.

        The email address associated with the customer profile.

        :return: The email_address of this Customer.
        :rtype: str
        """
        return self._email_address

    @email_address.setter
    def email_address(self, email_address):
        """Sets the email_address of this Customer.

        The email address associated with the customer profile.

        :param email_address: The email_address of this Customer.
        :type email_address: str
        """

        self._email_address = email_address

    @property
    def family_name(self):
        """Gets the family_name of this Customer.

        The family (i.e., last) name associated with the customer profile.

        :return: The family_name of this Customer.
        :rtype: str
        """
        return self._family_name

    @family_name.setter
    def family_name(self, family_name):
        """Sets the family_name of this Customer.

        The family (i.e., last) name associated with the customer profile.

        :param family_name: The family_name of this Customer.
        :type family_name: str
        """

        self._family_name = family_name

    @property
    def given_name(self):
        """Gets the given_name of this Customer.

        The given (i.e., first) name associated with the customer profile.

        :return: The given_name of this Customer.
        :rtype: str
        """
        return self._given_name

    @given_name.setter
    def given_name(self, given_name):
        """Sets the given_name of this Customer.

        The given (i.e., first) name associated with the customer profile.

        :param given_name: The given_name of this Customer.
        :type given_name: str
        """

        self._given_name = given_name

    @property
    def group_ids(self):
        """Gets the group_ids of this Customer.

        The IDs of customer groups the customer belongs to.

        :return: The group_ids of this Customer.
        :rtype: List[str]
        """
        return self._group_ids

    @group_ids.setter
    def group_ids(self, group_ids):
        """Sets the group_ids of this Customer.

        The IDs of customer groups the customer belongs to.

        :param group_ids: The group_ids of this Customer.
        :type group_ids: List[str]
        """

        self._group_ids = group_ids

    @property
    def id(self):
        """Gets the id of this Customer.

        A unique Square-assigned ID for the customer profile.

        :return: The id of this Customer.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Customer.

        A unique Square-assigned ID for the customer profile.

        :param id: The id of this Customer.
        :type id: str
        """

        self._id = id

    @property
    def nickname(self):
        """Gets the nickname of this Customer.

        A nickname for the customer profile.

        :return: The nickname of this Customer.
        :rtype: str
        """
        return self._nickname

    @nickname.setter
    def nickname(self, nickname):
        """Sets the nickname of this Customer.

        A nickname for the customer profile.

        :param nickname: The nickname of this Customer.
        :type nickname: str
        """

        self._nickname = nickname

    @property
    def note(self):
        """Gets the note of this Customer.

        A custom note associated with the customer profile.

        :return: The note of this Customer.
        :rtype: str
        """
        return self._note

    @note.setter
    def note(self, note):
        """Sets the note of this Customer.

        A custom note associated with the customer profile.

        :param note: The note of this Customer.
        :type note: str
        """

        self._note = note

    @property
    def phone_number(self):
        """Gets the phone_number of this Customer.

        The 11-digit phone number associated with the customer profile.

        :return: The phone_number of this Customer.
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """Sets the phone_number of this Customer.

        The 11-digit phone number associated with the customer profile.

        :param phone_number: The phone_number of this Customer.
        :type phone_number: str
        """

        self._phone_number = phone_number

    @property
    def preferences(self):
        """Gets the preferences of this Customer.


        :return: The preferences of this Customer.
        :rtype: CustomerPreferences
        """
        return self._preferences

    @preferences.setter
    def preferences(self, preferences):
        """Sets the preferences of this Customer.


        :param preferences: The preferences of this Customer.
        :type preferences: CustomerPreferences
        """

        self._preferences = preferences

    @property
    def reference_id(self):
        """Gets the reference_id of this Customer.

        An optional second ID used to associate the customer profile with an entity in another system.

        :return: The reference_id of this Customer.
        :rtype: str
        """
        return self._reference_id

    @reference_id.setter
    def reference_id(self, reference_id):
        """Sets the reference_id of this Customer.

        An optional second ID used to associate the customer profile with an entity in another system.

        :param reference_id: The reference_id of this Customer.
        :type reference_id: str
        """

        self._reference_id = reference_id

    @property
    def segment_ids(self):
        """Gets the segment_ids of this Customer.

        The IDs of segments the customer belongs to.

        :return: The segment_ids of this Customer.
        :rtype: List[str]
        """
        return self._segment_ids

    @segment_ids.setter
    def segment_ids(self, segment_ids):
        """Sets the segment_ids of this Customer.

        The IDs of segments the customer belongs to.

        :param segment_ids: The segment_ids of this Customer.
        :type segment_ids: List[str]
        """

        self._segment_ids = segment_ids

    @property
    def updated_at(self):
        """Gets the updated_at of this Customer.

        The timestamp when the customer profile was last updated, in RFC 3339 format.

        :return: The updated_at of this Customer.
        :rtype: str
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this Customer.

        The timestamp when the customer profile was last updated, in RFC 3339 format.

        :param updated_at: The updated_at of this Customer.
        :type updated_at: str
        """

        self._updated_at = updated_at

    @property
    def version(self):
        """Gets the version of this Customer.

        The Square-assigned version number of the customer profile. The version number is incremented each time an update is committed to the customer profile, except for changes to customer segment membership and cards on file.

        :return: The version of this Customer.
        :rtype: int
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this Customer.

        The Square-assigned version number of the customer profile. The version number is incremented each time an update is committed to the customer profile, except for changes to customer segment membership and cards on file.

        :param version: The version of this Customer.
        :type version: int
        """

        self._version = version
