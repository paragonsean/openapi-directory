/**
 * seven.io API
 * seven.io Swagger API. Get your API-Key now at seven.io.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@seven.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* Lookup service.
* @module api/LookupApi
* @version 1.0.0
*/
export default class LookupApi {

    /**
    * Constructs a new LookupApi. 
    * @alias module:api/LookupApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the lookup operation.
     * @callback module:api/LookupApi~lookupCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} type Allowed values are \"cnam\", \"format\", \"hlr\" and \"mnp\".
     * @param {Array.<String>} number The phone number to look up.
     * @param {Object} opts Optional parameters
     * @param {String} [json] Determines whether the response shall be returned in JSON format. Does not work with type \"format\".
     * @param {module:api/LookupApi~lookupCallback} callback The callback function, accepting three arguments: error, data, response
     */
    lookup(type, number, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'type' is set
      if (type === undefined || type === null) {
        throw new Error("Missing the required parameter 'type' when calling lookup");
      }
      // verify the required parameter 'number' is set
      if (number === undefined || number === null) {
        throw new Error("Missing the required parameter 'number' when calling lookup");
      }

      let pathParams = {
      };
      let queryParams = {
        'type': type,
        'number': this.apiClient.buildCollectionParam(number, 'csv'),
        'json': opts['json']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/lookup', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the lookupCnam operation.
     * @callback module:api/LookupApi~lookupCnamCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Array.<String>} number The phone number to look up.
     * @param {module:api/LookupApi~lookupCnamCallback} callback The callback function, accepting three arguments: error, data, response
     */
    lookupCnam(number, callback) {
      let postBody = null;
      // verify the required parameter 'number' is set
      if (number === undefined || number === null) {
        throw new Error("Missing the required parameter 'number' when calling lookupCnam");
      }

      let pathParams = {
      };
      let queryParams = {
        'number': this.apiClient.buildCollectionParam(number, 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/lookup/cnam', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the lookupFormat operation.
     * @callback module:api/LookupApi~lookupFormatCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Array.<String>} number The phone number to look up.
     * @param {module:api/LookupApi~lookupFormatCallback} callback The callback function, accepting three arguments: error, data, response
     */
    lookupFormat(number, callback) {
      let postBody = null;
      // verify the required parameter 'number' is set
      if (number === undefined || number === null) {
        throw new Error("Missing the required parameter 'number' when calling lookupFormat");
      }

      let pathParams = {
      };
      let queryParams = {
        'number': this.apiClient.buildCollectionParam(number, 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/lookup/format', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the lookupHlr operation.
     * @callback module:api/LookupApi~lookupHlrCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Array.<String>} number The phone number to look up.
     * @param {module:api/LookupApi~lookupHlrCallback} callback The callback function, accepting three arguments: error, data, response
     */
    lookupHlr(number, callback) {
      let postBody = null;
      // verify the required parameter 'number' is set
      if (number === undefined || number === null) {
        throw new Error("Missing the required parameter 'number' when calling lookupHlr");
      }

      let pathParams = {
      };
      let queryParams = {
        'number': this.apiClient.buildCollectionParam(number, 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/lookup/hlr', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the lookupMnp operation.
     * @callback module:api/LookupApi~lookupMnpCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Array.<String>} number The phone number to look up.
     * @param {Object} opts Optional parameters
     * @param {String} [json] Determines whether the response shall be returned in JSON format.
     * @param {module:api/LookupApi~lookupMnpCallback} callback The callback function, accepting three arguments: error, data, response
     */
    lookupMnp(number, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'number' is set
      if (number === undefined || number === null) {
        throw new Error("Missing the required parameter 'number' when calling lookupMnp");
      }

      let pathParams = {
      };
      let queryParams = {
        'number': this.apiClient.buildCollectionParam(number, 'csv'),
        'json': opts['json']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/lookup/mnp', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
