/**
 * seven.io API
 * seven.io Swagger API. Get your API-Key now at seven.io.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@seven.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Carrier model module.
 * @module model/Carrier
 * @version 1.0.0
 */
class Carrier {
    /**
     * Constructs a new <code>Carrier</code>.
     * @alias module:model/Carrier
     */
    constructor() { 
        
        Carrier.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Carrier</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Carrier} obj Optional instance to populate.
     * @return {module:model/Carrier} The populated <code>Carrier</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Carrier();

            if (data.hasOwnProperty('country')) {
                obj['country'] = ApiClient.convertToType(data['country'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('network_code')) {
                obj['network_code'] = ApiClient.convertToType(data['network_code'], 'String');
            }
            if (data.hasOwnProperty('network_type')) {
                obj['network_type'] = ApiClient.convertToType(data['network_type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Carrier</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Carrier</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['country'] && !(typeof data['country'] === 'string' || data['country'] instanceof String)) {
            throw new Error("Expected the field `country` to be a primitive type in the JSON string but got " + data['country']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['network_code'] && !(typeof data['network_code'] === 'string' || data['network_code'] instanceof String)) {
            throw new Error("Expected the field `network_code` to be a primitive type in the JSON string but got " + data['network_code']);
        }
        // ensure the json data is a string
        if (data['network_type'] && !(typeof data['network_type'] === 'string' || data['network_type'] instanceof String)) {
            throw new Error("Expected the field `network_type` to be a primitive type in the JSON string but got " + data['network_type']);
        }

        return true;
    }


}



/**
 * @member {String} country
 */
Carrier.prototype['country'] = undefined;

/**
 * @member {String} name
 */
Carrier.prototype['name'] = undefined;

/**
 * @member {String} network_code
 */
Carrier.prototype['network_code'] = undefined;

/**
 * @member {module:model/Carrier.NetworkTypeEnum} network_type
 */
Carrier.prototype['network_type'] = undefined;





/**
 * Allowed values for the <code>network_type</code> property.
 * @enum {String}
 * @readonly
 */
Carrier['NetworkTypeEnum'] = {

    /**
     * value: "fixed_line"
     * @const
     */
    "fixed_line": "fixed_line",

    /**
     * value: "fixed_line_or_mobile"
     * @const
     */
    "fixed_line_or_mobile": "fixed_line_or_mobile",

    /**
     * value: "mobile"
     * @const
     */
    "mobile": "mobile",

    /**
     * value: "pager"
     * @const
     */
    "pager": "pager",

    /**
     * value: "personal_number"
     * @const
     */
    "personal_number": "personal_number",

    /**
     * value: "premium_rate"
     * @const
     */
    "premium_rate": "premium_rate",

    /**
     * value: "shared_cost"
     * @const
     */
    "shared_cost": "shared_cost",

    /**
     * value: "toll_free"
     * @const
     */
    "toll_free": "toll_free",

    /**
     * value: "uan"
     * @const
     */
    "uan": "uan",

    /**
     * value: "unknown"
     * @const
     */
    "unknown": "unknown",

    /**
     * value: "voicemail"
     * @const
     */
    "voicemail": "voicemail",

    /**
     * value: "voip"
     * @const
     */
    "voip": "voip"
};



export default Carrier;

