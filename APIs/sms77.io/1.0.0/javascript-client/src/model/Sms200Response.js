/**
 * seven.io API
 * seven.io Swagger API. Get your API-Key now at seven.io.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@seven.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Sms200ResponseMessagesInner from './Sms200ResponseMessagesInner';

/**
 * The Sms200Response model module.
 * @module model/Sms200Response
 * @version 1.0.0
 */
class Sms200Response {
    /**
     * Constructs a new <code>Sms200Response</code>.
     * @alias module:model/Sms200Response
     */
    constructor() { 
        
        Sms200Response.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Sms200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Sms200Response} obj Optional instance to populate.
     * @return {module:model/Sms200Response} The populated <code>Sms200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Sms200Response();

            if (data.hasOwnProperty('balance')) {
                obj['balance'] = ApiClient.convertToType(data['balance'], 'Number');
            }
            if (data.hasOwnProperty('debug')) {
                obj['debug'] = ApiClient.convertToType(data['debug'], 'String');
            }
            if (data.hasOwnProperty('messages')) {
                obj['messages'] = ApiClient.convertToType(data['messages'], [Sms200ResponseMessagesInner]);
            }
            if (data.hasOwnProperty('sms_type')) {
                obj['sms_type'] = ApiClient.convertToType(data['sms_type'], 'String');
            }
            if (data.hasOwnProperty('success')) {
                obj['success'] = ApiClient.convertToType(data['success'], 'String');
            }
            if (data.hasOwnProperty('total_price')) {
                obj['total_price'] = ApiClient.convertToType(data['total_price'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Sms200Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Sms200Response</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['debug'] && !(typeof data['debug'] === 'string' || data['debug'] instanceof String)) {
            throw new Error("Expected the field `debug` to be a primitive type in the JSON string but got " + data['debug']);
        }
        if (data['messages']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['messages'])) {
                throw new Error("Expected the field `messages` to be an array in the JSON data but got " + data['messages']);
            }
            // validate the optional field `messages` (array)
            for (const item of data['messages']) {
                Sms200ResponseMessagesInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['sms_type'] && !(typeof data['sms_type'] === 'string' || data['sms_type'] instanceof String)) {
            throw new Error("Expected the field `sms_type` to be a primitive type in the JSON string but got " + data['sms_type']);
        }
        // ensure the json data is a string
        if (data['success'] && !(typeof data['success'] === 'string' || data['success'] instanceof String)) {
            throw new Error("Expected the field `success` to be a primitive type in the JSON string but got " + data['success']);
        }

        return true;
    }


}



/**
 * @member {Number} balance
 */
Sms200Response.prototype['balance'] = undefined;

/**
 * @member {String} debug
 */
Sms200Response.prototype['debug'] = undefined;

/**
 * @member {Array.<module:model/Sms200ResponseMessagesInner>} messages
 */
Sms200Response.prototype['messages'] = undefined;

/**
 * @member {module:model/Sms200Response.SmsTypeEnum} sms_type
 */
Sms200Response.prototype['sms_type'] = undefined;

/**
 * @member {String} success
 */
Sms200Response.prototype['success'] = undefined;

/**
 * @member {Number} total_price
 */
Sms200Response.prototype['total_price'] = undefined;





/**
 * Allowed values for the <code>sms_type</code> property.
 * @enum {String}
 * @readonly
 */
Sms200Response['SmsTypeEnum'] = {

    /**
     * value: "economy"
     * @const
     */
    "economy": "economy",

    /**
     * value: "direct"
     * @const
     */
    "direct": "direct"
};



export default Sms200Response;

