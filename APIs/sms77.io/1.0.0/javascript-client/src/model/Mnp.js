/**
 * seven.io API
 * seven.io Swagger API. Get your API-Key now at seven.io.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@seven.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Mnp model module.
 * @module model/Mnp
 * @version 1.0.0
 */
class Mnp {
    /**
     * Constructs a new <code>Mnp</code>.
     * @alias module:model/Mnp
     */
    constructor() { 
        
        Mnp.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Mnp</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Mnp} obj Optional instance to populate.
     * @return {module:model/Mnp} The populated <code>Mnp</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Mnp();

            if (data.hasOwnProperty('country')) {
                obj['country'] = ApiClient.convertToType(data['country'], 'String');
            }
            if (data.hasOwnProperty('international_formatted')) {
                obj['international_formatted'] = ApiClient.convertToType(data['international_formatted'], 'String');
            }
            if (data.hasOwnProperty('isPorted')) {
                obj['isPorted'] = ApiClient.convertToType(data['isPorted'], 'Boolean');
            }
            if (data.hasOwnProperty('mccmnc')) {
                obj['mccmnc'] = ApiClient.convertToType(data['mccmnc'], 'String');
            }
            if (data.hasOwnProperty('national_format')) {
                obj['national_format'] = ApiClient.convertToType(data['national_format'], 'String');
            }
            if (data.hasOwnProperty('network')) {
                obj['network'] = ApiClient.convertToType(data['network'], 'String');
            }
            if (data.hasOwnProperty('number')) {
                obj['number'] = ApiClient.convertToType(data['number'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Mnp</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Mnp</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['country'] && !(typeof data['country'] === 'string' || data['country'] instanceof String)) {
            throw new Error("Expected the field `country` to be a primitive type in the JSON string but got " + data['country']);
        }
        // ensure the json data is a string
        if (data['international_formatted'] && !(typeof data['international_formatted'] === 'string' || data['international_formatted'] instanceof String)) {
            throw new Error("Expected the field `international_formatted` to be a primitive type in the JSON string but got " + data['international_formatted']);
        }
        // ensure the json data is a string
        if (data['mccmnc'] && !(typeof data['mccmnc'] === 'string' || data['mccmnc'] instanceof String)) {
            throw new Error("Expected the field `mccmnc` to be a primitive type in the JSON string but got " + data['mccmnc']);
        }
        // ensure the json data is a string
        if (data['national_format'] && !(typeof data['national_format'] === 'string' || data['national_format'] instanceof String)) {
            throw new Error("Expected the field `national_format` to be a primitive type in the JSON string but got " + data['national_format']);
        }
        // ensure the json data is a string
        if (data['network'] && !(typeof data['network'] === 'string' || data['network'] instanceof String)) {
            throw new Error("Expected the field `network` to be a primitive type in the JSON string but got " + data['network']);
        }
        // ensure the json data is a string
        if (data['number'] && !(typeof data['number'] === 'string' || data['number'] instanceof String)) {
            throw new Error("Expected the field `number` to be a primitive type in the JSON string but got " + data['number']);
        }

        return true;
    }


}



/**
 * @member {String} country
 */
Mnp.prototype['country'] = undefined;

/**
 * @member {String} international_formatted
 */
Mnp.prototype['international_formatted'] = undefined;

/**
 * @member {Boolean} isPorted
 */
Mnp.prototype['isPorted'] = undefined;

/**
 * @member {String} mccmnc
 */
Mnp.prototype['mccmnc'] = undefined;

/**
 * @member {String} national_format
 */
Mnp.prototype['national_format'] = undefined;

/**
 * @member {String} network
 */
Mnp.prototype['network'] = undefined;

/**
 * @member {String} number
 */
Mnp.prototype['number'] = undefined;






export default Mnp;

