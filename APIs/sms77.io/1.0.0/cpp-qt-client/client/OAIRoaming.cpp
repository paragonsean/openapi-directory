/**
 * seven.io API
 * seven.io Swagger API. Get your API-Key now at seven.io.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@seven.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRoaming.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRoaming::OAIRoaming(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRoaming::OAIRoaming() {
    this->initializeModel();
}

OAIRoaming::~OAIRoaming() {}

void OAIRoaming::initializeModel() {

    m_roaming_country_code_isSet = false;
    m_roaming_country_code_isValid = false;

    m_roaming_network_code_isSet = false;
    m_roaming_network_code_isValid = false;

    m_roaming_network_name_isSet = false;
    m_roaming_network_name_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIRoaming::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRoaming::fromJsonObject(QJsonObject json) {

    m_roaming_country_code_isValid = ::OpenAPI::fromJsonValue(m_roaming_country_code, json[QString("roaming_country_code")]);
    m_roaming_country_code_isSet = !json[QString("roaming_country_code")].isNull() && m_roaming_country_code_isValid;

    m_roaming_network_code_isValid = ::OpenAPI::fromJsonValue(m_roaming_network_code, json[QString("roaming_network_code")]);
    m_roaming_network_code_isSet = !json[QString("roaming_network_code")].isNull() && m_roaming_network_code_isValid;

    m_roaming_network_name_isValid = ::OpenAPI::fromJsonValue(m_roaming_network_name, json[QString("roaming_network_name")]);
    m_roaming_network_name_isSet = !json[QString("roaming_network_name")].isNull() && m_roaming_network_name_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIRoaming::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRoaming::asJsonObject() const {
    QJsonObject obj;
    if (m_roaming_country_code_isSet) {
        obj.insert(QString("roaming_country_code"), ::OpenAPI::toJsonValue(m_roaming_country_code));
    }
    if (m_roaming_network_code_isSet) {
        obj.insert(QString("roaming_network_code"), ::OpenAPI::toJsonValue(m_roaming_network_code));
    }
    if (m_roaming_network_name_isSet) {
        obj.insert(QString("roaming_network_name"), ::OpenAPI::toJsonValue(m_roaming_network_name));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAIRoaming::getRoamingCountryCode() const {
    return m_roaming_country_code;
}
void OAIRoaming::setRoamingCountryCode(const QString &roaming_country_code) {
    m_roaming_country_code = roaming_country_code;
    m_roaming_country_code_isSet = true;
}

bool OAIRoaming::is_roaming_country_code_Set() const{
    return m_roaming_country_code_isSet;
}

bool OAIRoaming::is_roaming_country_code_Valid() const{
    return m_roaming_country_code_isValid;
}

QString OAIRoaming::getRoamingNetworkCode() const {
    return m_roaming_network_code;
}
void OAIRoaming::setRoamingNetworkCode(const QString &roaming_network_code) {
    m_roaming_network_code = roaming_network_code;
    m_roaming_network_code_isSet = true;
}

bool OAIRoaming::is_roaming_network_code_Set() const{
    return m_roaming_network_code_isSet;
}

bool OAIRoaming::is_roaming_network_code_Valid() const{
    return m_roaming_network_code_isValid;
}

QString OAIRoaming::getRoamingNetworkName() const {
    return m_roaming_network_name;
}
void OAIRoaming::setRoamingNetworkName(const QString &roaming_network_name) {
    m_roaming_network_name = roaming_network_name;
    m_roaming_network_name_isSet = true;
}

bool OAIRoaming::is_roaming_network_name_Set() const{
    return m_roaming_network_name_isSet;
}

bool OAIRoaming::is_roaming_network_name_Valid() const{
    return m_roaming_network_name_isValid;
}

QString OAIRoaming::getStatus() const {
    return m_status;
}
void OAIRoaming::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIRoaming::is_status_Set() const{
    return m_status_isSet;
}

bool OAIRoaming::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIRoaming::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_roaming_country_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_roaming_network_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_roaming_network_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRoaming::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
