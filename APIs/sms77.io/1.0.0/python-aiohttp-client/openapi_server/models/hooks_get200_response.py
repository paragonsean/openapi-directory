# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.hooks_get200_response_hooks_inner import HooksGet200ResponseHooksInner
from openapi_server import util


class HooksGet200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hooks: List[HooksGet200ResponseHooksInner]=None, success: bool=None):
        """HooksGet200Response - a model defined in OpenAPI

        :param hooks: The hooks of this HooksGet200Response.
        :param success: The success of this HooksGet200Response.
        """
        self.openapi_types = {
            'hooks': List[HooksGet200ResponseHooksInner],
            'success': bool
        }

        self.attribute_map = {
            'hooks': 'hooks',
            'success': 'success'
        }

        self._hooks = hooks
        self._success = success

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HooksGet200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HooksGet_200_response of this HooksGet200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hooks(self):
        """Gets the hooks of this HooksGet200Response.


        :return: The hooks of this HooksGet200Response.
        :rtype: List[HooksGet200ResponseHooksInner]
        """
        return self._hooks

    @hooks.setter
    def hooks(self, hooks):
        """Sets the hooks of this HooksGet200Response.


        :param hooks: The hooks of this HooksGet200Response.
        :type hooks: List[HooksGet200ResponseHooksInner]
        """

        self._hooks = hooks

    @property
    def success(self):
        """Gets the success of this HooksGet200Response.


        :return: The success of this HooksGet200Response.
        :rtype: bool
        """
        return self._success

    @success.setter
    def success(self, success):
        """Sets the success of this HooksGet200Response.


        :param success: The success of this HooksGet200Response.
        :type success: bool
        """

        self._success = success
