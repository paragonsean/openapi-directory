# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Analytics200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _date: str=None, direct: int=None, economy: int=None, hlr: int=None, inbound: int=None, mnp: int=None, usage_eur: float=None, voice: int=None):
        """Analytics200Response - a model defined in OpenAPI

        :param _date: The _date of this Analytics200Response.
        :param direct: The direct of this Analytics200Response.
        :param economy: The economy of this Analytics200Response.
        :param hlr: The hlr of this Analytics200Response.
        :param inbound: The inbound of this Analytics200Response.
        :param mnp: The mnp of this Analytics200Response.
        :param usage_eur: The usage_eur of this Analytics200Response.
        :param voice: The voice of this Analytics200Response.
        """
        self.openapi_types = {
            '_date': str,
            'direct': int,
            'economy': int,
            'hlr': int,
            'inbound': int,
            'mnp': int,
            'usage_eur': float,
            'voice': int
        }

        self.attribute_map = {
            '_date': 'date',
            'direct': 'direct',
            'economy': 'economy',
            'hlr': 'hlr',
            'inbound': 'inbound',
            'mnp': 'mnp',
            'usage_eur': 'usage_eur',
            'voice': 'voice'
        }

        self.__date = _date
        self._direct = direct
        self._economy = economy
        self._hlr = hlr
        self._inbound = inbound
        self._mnp = mnp
        self._usage_eur = usage_eur
        self._voice = voice

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Analytics200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Analytics_200_response of this Analytics200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _date(self):
        """Gets the _date of this Analytics200Response.


        :return: The _date of this Analytics200Response.
        :rtype: str
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this Analytics200Response.


        :param _date: The _date of this Analytics200Response.
        :type _date: str
        """

        self.__date = _date

    @property
    def direct(self):
        """Gets the direct of this Analytics200Response.


        :return: The direct of this Analytics200Response.
        :rtype: int
        """
        return self._direct

    @direct.setter
    def direct(self, direct):
        """Sets the direct of this Analytics200Response.


        :param direct: The direct of this Analytics200Response.
        :type direct: int
        """

        self._direct = direct

    @property
    def economy(self):
        """Gets the economy of this Analytics200Response.


        :return: The economy of this Analytics200Response.
        :rtype: int
        """
        return self._economy

    @economy.setter
    def economy(self, economy):
        """Sets the economy of this Analytics200Response.


        :param economy: The economy of this Analytics200Response.
        :type economy: int
        """

        self._economy = economy

    @property
    def hlr(self):
        """Gets the hlr of this Analytics200Response.


        :return: The hlr of this Analytics200Response.
        :rtype: int
        """
        return self._hlr

    @hlr.setter
    def hlr(self, hlr):
        """Sets the hlr of this Analytics200Response.


        :param hlr: The hlr of this Analytics200Response.
        :type hlr: int
        """

        self._hlr = hlr

    @property
    def inbound(self):
        """Gets the inbound of this Analytics200Response.


        :return: The inbound of this Analytics200Response.
        :rtype: int
        """
        return self._inbound

    @inbound.setter
    def inbound(self, inbound):
        """Sets the inbound of this Analytics200Response.


        :param inbound: The inbound of this Analytics200Response.
        :type inbound: int
        """

        self._inbound = inbound

    @property
    def mnp(self):
        """Gets the mnp of this Analytics200Response.


        :return: The mnp of this Analytics200Response.
        :rtype: int
        """
        return self._mnp

    @mnp.setter
    def mnp(self, mnp):
        """Sets the mnp of this Analytics200Response.


        :param mnp: The mnp of this Analytics200Response.
        :type mnp: int
        """

        self._mnp = mnp

    @property
    def usage_eur(self):
        """Gets the usage_eur of this Analytics200Response.


        :return: The usage_eur of this Analytics200Response.
        :rtype: float
        """
        return self._usage_eur

    @usage_eur.setter
    def usage_eur(self, usage_eur):
        """Sets the usage_eur of this Analytics200Response.


        :param usage_eur: The usage_eur of this Analytics200Response.
        :type usage_eur: float
        """

        self._usage_eur = usage_eur

    @property
    def voice(self):
        """Gets the voice of this Analytics200Response.


        :return: The voice of this Analytics200Response.
        :rtype: int
        """
        return self._voice

    @voice.setter
    def voice(self, voice):
        """Sets the voice of this Analytics200Response.


        :param voice: The voice of this Analytics200Response.
        :type voice: int
        """

        self._voice = voice
