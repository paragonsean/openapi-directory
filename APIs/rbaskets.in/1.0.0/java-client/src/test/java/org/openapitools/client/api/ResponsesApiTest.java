/*
 * Request Baskets API
 * RESTful API of [Request Baskets](https://rbaskets.in) service.  Request Baskets is an open source project of a service to collect HTTP requests and inspect them via RESTful API or web UI.  Check out the [project page](https://github.com/darklynx/request-baskets) for more detailed description. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ResponsesApi
 */
@Disabled
public class ResponsesApiTest {

    private final ResponsesApi api = new ResponsesApi();

    /**
     * Get response settings
     *
     * Retrieves information about configured response of the basket. Service will reply with this response to any HTTP request sent to the basket with appropriate HTTP method.  If nothing is configured, the default response is HTTP 200 - OK with empty content. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiBasketsNameResponsesMethodGetTest() throws ApiException {
        String name = null;
        String method = null;
        Response response = api.apiBasketsNameResponsesMethodGet(name, method);
        // TODO: test validations
    }

    /**
     * Update response settings
     *
     * Allows to configure HTTP response of this basket. The service will reply with configured response to any HTTP request sent to the basket with appropriate HTTP method.  If nothing is configured, the default response is HTTP 200 - OK with empty content. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiBasketsNameResponsesMethodPutTest() throws ApiException {
        String name = null;
        String method = null;
        Response response = null;
        api.apiBasketsNameResponsesMethodPut(name, method, response);
        // TODO: test validations
    }

    /**
     * Get response settings
     *
     * Retrieves information about configured response of the basket. Service will reply with this response to any HTTP request sent to the basket with appropriate HTTP method.  If nothing is configured, the default response is HTTP 200 - OK with empty content. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void basketsNameResponsesMethodGetTest() throws ApiException {
        String name = null;
        String method = null;
        Response response = api.basketsNameResponsesMethodGet(name, method);
        // TODO: test validations
    }

    /**
     * Update response settings
     *
     * Allows to configure HTTP response of this basket. The service will reply with configured response to any HTTP request sent to the basket with appropriate HTTP method.  If nothing is configured, the default response is HTTP 200 - OK with empty content. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void basketsNameResponsesMethodPutTest() throws ApiException {
        String name = null;
        String method = null;
        Response response = null;
        api.basketsNameResponsesMethodPut(name, method, response);
        // TODO: test validations
    }

}
