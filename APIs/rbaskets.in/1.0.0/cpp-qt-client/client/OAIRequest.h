/**
 * Request Baskets API
 * RESTful API of [Request Baskets](https://rbaskets.in) service.  Request Baskets is an open source project of a service to collect HTTP requests and inspect them via RESTful API or web UI.  Check out the [project page](https://github.com/darklynx/request-baskets) for more detailed description. 
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRequest.h
 *
 * 
 */

#ifndef OAIRequest_H
#define OAIRequest_H

#include <QJsonObject>

#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRequest : public OAIObject {
public:
    OAIRequest();
    OAIRequest(QString json);
    ~OAIRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBody() const;
    void setBody(const QString &body);
    bool is_body_Set() const;
    bool is_body_Valid() const;

    qint32 getContentLength() const;
    void setContentLength(const qint32 &content_length);
    bool is_content_length_Set() const;
    bool is_content_length_Valid() const;

    qint64 getDate() const;
    void setDate(const qint64 &date);
    bool is_date_Set() const;
    bool is_date_Valid() const;

    QMap<QString, QList<QString>> getHeaders() const;
    void setHeaders(const QMap<QString, QList<QString>> &headers);
    bool is_headers_Set() const;
    bool is_headers_Valid() const;

    QString getMethod() const;
    void setMethod(const QString &method);
    bool is_method_Set() const;
    bool is_method_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    QString getQuery() const;
    void setQuery(const QString &query);
    bool is_query_Set() const;
    bool is_query_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_body;
    bool m_body_isSet;
    bool m_body_isValid;

    qint32 m_content_length;
    bool m_content_length_isSet;
    bool m_content_length_isValid;

    qint64 m_date;
    bool m_date_isSet;
    bool m_date_isValid;

    QMap<QString, QList<QString>> m_headers;
    bool m_headers_isSet;
    bool m_headers_isValid;

    QString m_method;
    bool m_method_isSet;
    bool m_method_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    QString m_query;
    bool m_query_isSet;
    bool m_query_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRequest)

#endif // OAIRequest_H
