/**
 * Request Baskets API
 * RESTful API of [Request Baskets](https://rbaskets.in) service.  Request Baskets is an open source project of a service to collect HTTP requests and inspect them via RESTful API or web UI.  Check out the [project page](https://github.com/darklynx/request-baskets) for more detailed description. 
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRequests.h
 *
 * 
 */

#ifndef OAIRequests_H
#define OAIRequests_H

#include <QJsonObject>

#include "OAIRequest.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRequest;

class OAIRequests : public OAIObject {
public:
    OAIRequests();
    OAIRequests(QString json);
    ~OAIRequests() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getCount() const;
    void setCount(const qint32 &count);
    bool is_count_Set() const;
    bool is_count_Valid() const;

    bool isHasMore() const;
    void setHasMore(const bool &has_more);
    bool is_has_more_Set() const;
    bool is_has_more_Valid() const;

    QList<OAIRequest> getRequests() const;
    void setRequests(const QList<OAIRequest> &requests);
    bool is_requests_Set() const;
    bool is_requests_Valid() const;

    qint32 getTotalCount() const;
    void setTotalCount(const qint32 &total_count);
    bool is_total_count_Set() const;
    bool is_total_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_count;
    bool m_count_isSet;
    bool m_count_isValid;

    bool m_has_more;
    bool m_has_more_isSet;
    bool m_has_more_isValid;

    QList<OAIRequest> m_requests;
    bool m_requests_isSet;
    bool m_requests_isValid;

    qint32 m_total_count;
    bool m_total_count_isSet;
    bool m_total_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRequests)

#endif // OAIRequests_H
