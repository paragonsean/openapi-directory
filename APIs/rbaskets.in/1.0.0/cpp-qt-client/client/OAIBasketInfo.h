/**
 * Request Baskets API
 * RESTful API of [Request Baskets](https://rbaskets.in) service.  Request Baskets is an open source project of a service to collect HTTP requests and inspect them via RESTful API or web UI.  Check out the [project page](https://github.com/darklynx/request-baskets) for more detailed description. 
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBasketInfo.h
 *
 * 
 */

#ifndef OAIBasketInfo_H
#define OAIBasketInfo_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBasketInfo : public OAIObject {
public:
    OAIBasketInfo();
    OAIBasketInfo(QString json);
    ~OAIBasketInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getLastRequestDate() const;
    void setLastRequestDate(const qint64 &last_request_date);
    bool is_last_request_date_Set() const;
    bool is_last_request_date_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getRequestsCount() const;
    void setRequestsCount(const qint32 &requests_count);
    bool is_requests_count_Set() const;
    bool is_requests_count_Valid() const;

    qint32 getRequestsTotalCount() const;
    void setRequestsTotalCount(const qint32 &requests_total_count);
    bool is_requests_total_count_Set() const;
    bool is_requests_total_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_last_request_date;
    bool m_last_request_date_isSet;
    bool m_last_request_date_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_requests_count;
    bool m_requests_count_isSet;
    bool m_requests_count_isValid;

    qint32 m_requests_total_count;
    bool m_requests_total_count_isSet;
    bool m_requests_total_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBasketInfo)

#endif // OAIBasketInfo_H
