/**
 * Request Baskets API
 * RESTful API of [Request Baskets](https://rbaskets.in) service.  Request Baskets is an open source project of a service to collect HTTP requests and inspect them via RESTful API or web UI.  Check out the [project page](https://github.com/darklynx/request-baskets) for more detailed description. 
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIServiceStats.h
 *
 * 
 */

#ifndef OAIServiceStats_H
#define OAIServiceStats_H

#include <QJsonObject>

#include "OAIBasketInfo.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBasketInfo;

class OAIServiceStats : public OAIObject {
public:
    OAIServiceStats();
    OAIServiceStats(QString json);
    ~OAIServiceStats() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAvgBasketSize() const;
    void setAvgBasketSize(const qint32 &avg_basket_size);
    bool is_avg_basket_size_Set() const;
    bool is_avg_basket_size_Valid() const;

    qint32 getBasketsCount() const;
    void setBasketsCount(const qint32 &baskets_count);
    bool is_baskets_count_Set() const;
    bool is_baskets_count_Valid() const;

    qint32 getEmptyBasketsCount() const;
    void setEmptyBasketsCount(const qint32 &empty_baskets_count);
    bool is_empty_baskets_count_Set() const;
    bool is_empty_baskets_count_Valid() const;

    qint32 getMaxBasketSize() const;
    void setMaxBasketSize(const qint32 &max_basket_size);
    bool is_max_basket_size_Set() const;
    bool is_max_basket_size_Valid() const;

    qint32 getRequestsCount() const;
    void setRequestsCount(const qint32 &requests_count);
    bool is_requests_count_Set() const;
    bool is_requests_count_Valid() const;

    qint32 getRequestsTotalCount() const;
    void setRequestsTotalCount(const qint32 &requests_total_count);
    bool is_requests_total_count_Set() const;
    bool is_requests_total_count_Valid() const;

    QList<OAIBasketInfo> getTopBasketsRecent() const;
    void setTopBasketsRecent(const QList<OAIBasketInfo> &top_baskets_recent);
    bool is_top_baskets_recent_Set() const;
    bool is_top_baskets_recent_Valid() const;

    QList<OAIBasketInfo> getTopBasketsSize() const;
    void setTopBasketsSize(const QList<OAIBasketInfo> &top_baskets_size);
    bool is_top_baskets_size_Set() const;
    bool is_top_baskets_size_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_avg_basket_size;
    bool m_avg_basket_size_isSet;
    bool m_avg_basket_size_isValid;

    qint32 m_baskets_count;
    bool m_baskets_count_isSet;
    bool m_baskets_count_isValid;

    qint32 m_empty_baskets_count;
    bool m_empty_baskets_count_isSet;
    bool m_empty_baskets_count_isValid;

    qint32 m_max_basket_size;
    bool m_max_basket_size_isSet;
    bool m_max_basket_size_isValid;

    qint32 m_requests_count;
    bool m_requests_count_isSet;
    bool m_requests_count_isValid;

    qint32 m_requests_total_count;
    bool m_requests_total_count_isSet;
    bool m_requests_total_count_isValid;

    QList<OAIBasketInfo> m_top_baskets_recent;
    bool m_top_baskets_recent_isSet;
    bool m_top_baskets_recent_isValid;

    QList<OAIBasketInfo> m_top_baskets_size;
    bool m_top_baskets_size_isSet;
    bool m_top_baskets_size_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIServiceStats)

#endif // OAIServiceStats_H
