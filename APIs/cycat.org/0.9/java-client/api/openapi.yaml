openapi: 3.0.1
info:
  description: CyCAT - The Cybersecurity Resource Catalogue public API services.
  license:
    name: CC-BY
  title: CyCAT.org API
  version: "0.9"
  x-apisguru-categories:
  - security
  x-logo:
    url: https://cycat.org/images/illustrations/pointing.svg
  x-origin:
  - format: swagger
    url: https://api.cycat.org/swagger.json
    version: "2.0"
  x-providerName: cycat.org
servers:
- url: /
tags:
- description: Default namespace
  name: default
paths:
  /child/{uuid}:
    get:
      description: Get child UUID(s) from a specified project or publisher UUID.
      operationId: get_child
      parameters:
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Success
      tags:
      - default
      x-accepts:
      - application/json
  /generate/uuid:
    get:
      description: Generate an UUID version 4 RFC4122-compliant.
      operationId: get_generate_uuid
      responses:
        "200":
          content: {}
          description: Success
      tags:
      - default
      x-accepts:
      - application/json
  /info:
    get:
      description: "Get information about the CyCAT backend services including status,\
        \ overall statistics and version."
      operationId: get_info
      responses:
        "200":
          content: {}
          description: Success
      tags:
      - default
      x-accepts:
      - application/json
  /list/project/{start}/{end}:
    get:
      description: "List projects registered in CyCAT by pagination (start,end)."
      operationId: get_list_project
      parameters:
      - in: path
        name: start
        required: true
        schema:
          type: integer
      - in: path
        name: end
        required: true
        schema:
          type: integer
      responses:
        "200":
          content: {}
          description: Success
      tags:
      - default
      x-accepts:
      - application/json
  /list/publisher/{start}/{end}:
    get:
      description: "List publishers registered in CyCAT by pagination (start,end)."
      operationId: get_list_publisher
      parameters:
      - in: path
        name: start
        required: true
        schema:
          type: integer
      - in: path
        name: end
        required: true
        schema:
          type: integer
      responses:
        "200":
          content: {}
          description: Success
      tags:
      - default
      x-accepts:
      - application/json
  /lookup/{uuid}:
    get:
      description: Lookup UUID registered in CyCAT.
      operationId: get_lookup
      parameters:
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Success
      tags:
      - default
      x-accepts:
      - application/json
  /namespace/finduuid/{namespace}/{namespaceid}:
    get:
      description: Get all known UUID for a given namespace id.
      operationId: get_namespacefinduuid
      parameters:
      - in: path
        name: namespace
        required: true
        schema:
          type: string
      - in: path
        name: namespaceid
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Success
      tags:
      - default
      x-accepts:
      - application/json
  /namespace/getall:
    get:
      description: List all known namespaces.
      operationId: get_namespacegetall
      responses:
        "200":
          content: {}
          description: Success
      tags:
      - default
      x-accepts:
      - application/json
  /namespace/getid/{namespace}:
    get:
      description: Get all ID from a given namespace.
      operationId: get_namespacegetid
      parameters:
      - in: path
        name: namespace
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Success
      tags:
      - default
      x-accepts:
      - application/json
  /parent/{uuid}:
    get:
      description: Get parent UUID(s) from a specified project or item UUID.
      operationId: get_parent
      parameters:
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Success
      tags:
      - default
      x-accepts:
      - application/json
  /propose:
    post:
      description: Propose new resource to CyCAT.
      operationId: post_propose
      responses:
        "200":
          content: {}
          description: Success
      tags:
      - default
      x-accepts:
      - application/json
  /relationships/expanded/{uuid}:
    get:
      description: Get relationship(s) UUID from a specified UUID including the relationships
        meta information.
      operationId: get_relationshipsexpanded
      parameters:
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Success
      tags:
      - default
      x-accepts:
      - application/json
  /relationships/{uuid}:
    get:
      description: Get relationship(s) UUID from a specified UUID.
      operationId: get_relationships
      parameters:
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Success
      tags:
      - default
      x-accepts:
      - application/json
  /search/{searchquery}:
    get:
      description: Full-text search in CyCAT and return matching UUID.
      operationId: get_search
      parameters:
      - in: path
        name: searchquery
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Success
      tags:
      - default
      x-accepts:
      - application/json
components:
  responses:
    MaskError:
      content: {}
      description: When any error occurs on mask
    ParseError:
      content: {}
      description: When a mask can't be parsed
  schemas: {}
x-original-swagger-version: "2.0"

