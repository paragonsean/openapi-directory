/**
 * koomalooma Partner API
 * This is the koomalooma Partner API. koomalooma is the first Loyalty BPaaS (Business Process as a Service) for mobile and web companies. With koomalooma merchants issue points for actions their customers / users make on your mobile or web store, for example a purchase or a referral. koomalooma takes care of all the rest, from signing up users, keeping track of points and delivering rewards in over 80 countries. koomalooma offers an easy to integrate API and web backend to configure loyalty campaigns and track performance. You can find more at http://support.koomalooma.com
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@koomalooma.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUser.h
 *
 * 
 */

#ifndef OAIUser_H
#define OAIUser_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUser : public OAIObject {
public:
    OAIUser();
    OAIUser(QString json);
    ~OAIUser() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getPartnerId() const;
    void setPartnerId(const QString &partner_id);
    bool is_partner_id_Set() const;
    bool is_partner_id_Valid() const;

    QString getPartnerUserId() const;
    void setPartnerUserId(const QString &partner_user_id);
    bool is_partner_user_id_Set() const;
    bool is_partner_user_id_Valid() const;

    QString getUserSessionId() const;
    void setUserSessionId(const QString &user_session_id);
    bool is_user_session_id_Set() const;
    bool is_user_session_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_partner_id;
    bool m_partner_id_isSet;
    bool m_partner_id_isValid;

    QString m_partner_user_id;
    bool m_partner_user_id_isSet;
    bool m_partner_user_id_isValid;

    QString m_user_session_id;
    bool m_user_session_id_isSet;
    bool m_user_session_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUser)

#endif // OAIUser_H
