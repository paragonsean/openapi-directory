/**
 * koomalooma Partner API
 * This is the koomalooma Partner API. koomalooma is the first Loyalty BPaaS (Business Process as a Service) for mobile and web companies. With koomalooma merchants issue points for actions their customers / users make on your mobile or web store, for example a purchase or a referral. koomalooma takes care of all the rest, from signing up users, keeping track of points and delivering rewards in over 80 countries. koomalooma offers an easy to integrate API and web backend to configure loyalty campaigns and track performance. You can find more at http://support.koomalooma.com
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@koomalooma.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICommitment.h
 *
 * 
 */

#ifndef OAICommitment_H
#define OAICommitment_H

#include <QJsonObject>

#include "OAIGoal.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoal;

class OAICommitment : public OAIObject {
public:
    OAICommitment();
    OAICommitment(QString json);
    ~OAICommitment() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getConfirmationStatus() const;
    void setConfirmationStatus(const QString &confirmation_status);
    bool is_confirmation_status_Set() const;
    bool is_confirmation_status_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    qint32 getFreeLoyaltyUnits() const;
    void setFreeLoyaltyUnits(const qint32 &free_loyalty_units);
    bool is_free_loyalty_units_Set() const;
    bool is_free_loyalty_units_Valid() const;

    OAIGoal getGoal() const;
    void setGoal(const OAIGoal &goal);
    bool is_goal_Set() const;
    bool is_goal_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getLoyaltyAccumulationValue() const;
    void setLoyaltyAccumulationValue(const QString &loyalty_accumulation_value);
    bool is_loyalty_accumulation_value_Set() const;
    bool is_loyalty_accumulation_value_Valid() const;

    qint32 getLoyaltyUnits() const;
    void setLoyaltyUnits(const qint32 &loyalty_units);
    bool is_loyalty_units_Set() const;
    bool is_loyalty_units_Valid() const;

    QString getPartnerId() const;
    void setPartnerId(const QString &partner_id);
    bool is_partner_id_Set() const;
    bool is_partner_id_Valid() const;

    QString getPromotionGoalCategory() const;
    void setPromotionGoalCategory(const QString &promotion_goal_category);
    bool is_promotion_goal_category_Set() const;
    bool is_promotion_goal_category_Valid() const;

    QString getPromotionGoalDescription() const;
    void setPromotionGoalDescription(const QString &promotion_goal_description);
    bool is_promotion_goal_description_Set() const;
    bool is_promotion_goal_description_Valid() const;

    qint32 getRedeemableLoyaltyUnits() const;
    void setRedeemableLoyaltyUnits(const qint32 &redeemable_loyalty_units);
    bool is_redeemable_loyalty_units_Set() const;
    bool is_redeemable_loyalty_units_Valid() const;

    bool isRedeemed() const;
    void setRedeemed(const bool &redeemed);
    bool is_redeemed_Set() const;
    bool is_redeemed_Valid() const;

    qint32 getRedeemedLoyaltyUnits() const;
    void setRedeemedLoyaltyUnits(const qint32 &redeemed_loyalty_units);
    bool is_redeemed_loyalty_units_Set() const;
    bool is_redeemed_loyalty_units_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    QString getUserId() const;
    void setUserId(const QString &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_confirmation_status;
    bool m_confirmation_status_isSet;
    bool m_confirmation_status_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    qint32 m_free_loyalty_units;
    bool m_free_loyalty_units_isSet;
    bool m_free_loyalty_units_isValid;

    OAIGoal m_goal;
    bool m_goal_isSet;
    bool m_goal_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_loyalty_accumulation_value;
    bool m_loyalty_accumulation_value_isSet;
    bool m_loyalty_accumulation_value_isValid;

    qint32 m_loyalty_units;
    bool m_loyalty_units_isSet;
    bool m_loyalty_units_isValid;

    QString m_partner_id;
    bool m_partner_id_isSet;
    bool m_partner_id_isValid;

    QString m_promotion_goal_category;
    bool m_promotion_goal_category_isSet;
    bool m_promotion_goal_category_isValid;

    QString m_promotion_goal_description;
    bool m_promotion_goal_description_isSet;
    bool m_promotion_goal_description_isValid;

    qint32 m_redeemable_loyalty_units;
    bool m_redeemable_loyalty_units_isSet;
    bool m_redeemable_loyalty_units_isValid;

    bool m_redeemed;
    bool m_redeemed_isSet;
    bool m_redeemed_isValid;

    qint32 m_redeemed_loyalty_units;
    bool m_redeemed_loyalty_units_isSet;
    bool m_redeemed_loyalty_units_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    QString m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICommitment)

#endif // OAICommitment_H
