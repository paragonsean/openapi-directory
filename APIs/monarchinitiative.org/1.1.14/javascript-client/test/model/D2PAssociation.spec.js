/**
 * BioLink API
 * API integration layer for linked biological objects.   __Source:__ https://github.com/biolink/biolink-api/
 *
 * The version of the OpenAPI document: 1.1.14
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BioLinkApi);
  }
}(this, function(expect, BioLinkApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BioLinkApi.D2PAssociation();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('D2PAssociation', function() {
    it('should create an instance of D2PAssociation', function() {
      // uncomment below and update the code to test D2PAssociation
      //var instance = new BioLinkApi.D2PAssociation();
      //expect(instance).to.be.a(BioLinkApi.D2PAssociation);
    });

    it('should have the property evidenceGraph (base name: "evidence_graph")', function() {
      // uncomment below and update the code to test the property evidenceGraph
      //var instance = new BioLinkApi.D2PAssociation();
      //expect(instance).to.be();
    });

    it('should have the property evidenceTypes (base name: "evidence_types")', function() {
      // uncomment below and update the code to test the property evidenceTypes
      //var instance = new BioLinkApi.D2PAssociation();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new BioLinkApi.D2PAssociation();
      //expect(instance).to.be();
    });

    it('should have the property negated (base name: "negated")', function() {
      // uncomment below and update the code to test the property negated
      //var instance = new BioLinkApi.D2PAssociation();
      //expect(instance).to.be();
    });

    it('should have the property object (base name: "object")', function() {
      // uncomment below and update the code to test the property object
      //var instance = new BioLinkApi.D2PAssociation();
      //expect(instance).to.be();
    });

    it('should have the property objectEq (base name: "object_eq")', function() {
      // uncomment below and update the code to test the property objectEq
      //var instance = new BioLinkApi.D2PAssociation();
      //expect(instance).to.be();
    });

    it('should have the property objectExtensions (base name: "object_extensions")', function() {
      // uncomment below and update the code to test the property objectExtensions
      //var instance = new BioLinkApi.D2PAssociation();
      //expect(instance).to.be();
    });

    it('should have the property providedBy (base name: "provided_by")', function() {
      // uncomment below and update the code to test the property providedBy
      //var instance = new BioLinkApi.D2PAssociation();
      //expect(instance).to.be();
    });

    it('should have the property publications (base name: "publications")', function() {
      // uncomment below and update the code to test the property publications
      //var instance = new BioLinkApi.D2PAssociation();
      //expect(instance).to.be();
    });

    it('should have the property qualifiers (base name: "qualifiers")', function() {
      // uncomment below and update the code to test the property qualifiers
      //var instance = new BioLinkApi.D2PAssociation();
      //expect(instance).to.be();
    });

    it('should have the property relation (base name: "relation")', function() {
      // uncomment below and update the code to test the property relation
      //var instance = new BioLinkApi.D2PAssociation();
      //expect(instance).to.be();
    });

    it('should have the property slim (base name: "slim")', function() {
      // uncomment below and update the code to test the property slim
      //var instance = new BioLinkApi.D2PAssociation();
      //expect(instance).to.be();
    });

    it('should have the property subject (base name: "subject")', function() {
      // uncomment below and update the code to test the property subject
      //var instance = new BioLinkApi.D2PAssociation();
      //expect(instance).to.be();
    });

    it('should have the property subjectEq (base name: "subject_eq")', function() {
      // uncomment below and update the code to test the property subjectEq
      //var instance = new BioLinkApi.D2PAssociation();
      //expect(instance).to.be();
    });

    it('should have the property subjectExtensions (base name: "subject_extensions")', function() {
      // uncomment below and update the code to test the property subjectExtensions
      //var instance = new BioLinkApi.D2PAssociation();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new BioLinkApi.D2PAssociation();
      //expect(instance).to.be();
    });

    it('should have the property frequency (base name: "frequency")', function() {
      // uncomment below and update the code to test the property frequency
      //var instance = new BioLinkApi.D2PAssociation();
      //expect(instance).to.be();
    });

    it('should have the property onset (base name: "onset")', function() {
      // uncomment below and update the code to test the property onset
      //var instance = new BioLinkApi.D2PAssociation();
      //expect(instance).to.be();
    });

  });

}));
