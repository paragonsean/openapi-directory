/**
 * BioLink API
 * API integration layer for linked biological objects.   __Source:__ https://github.com/biolink/biolink-api/
 *
 * The version of the OpenAPI document: 1.1.14
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BioObject from '../model/BioObject';
import Graph from '../model/Graph';

/**
* Graph service.
* @module api/GraphApi
* @version 1.1.14
*/
export default class GraphApi {

    /**
    * Constructs a new GraphApi. 
    * @alias module:api/GraphApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getEdgeResource operation.
     * @callback module:api/GraphApi~getEdgeResourceCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Graph>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns edges emanating from a given node
     * @param {String} id CURIE e.g. HP:0000465
     * @param {Object} opts Optional parameters
     * @param {Number} [depth = 1)] How far to traverse for neighbors
     * @param {module:model/String} [direction = 'BOTH')] Which direction to traverse (used only if relationship_type is defined)
     * @param {Array.<String>} [relationshipType] Relationship type to traverse
     * @param {Boolean} [entail = false)] Include sub-properties and equivalent properties
     * @param {module:model/String} [graph = 'data')] Which monarch graph to query
     * @param {module:api/GraphApi~getEdgeResourceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Graph>}
     */
    getEdgeResource(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getEdgeResource");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'depth': opts['depth'],
        'direction': opts['direction'],
        'relationship_type': this.apiClient.buildCollectionParam(opts['relationshipType'], 'multi'),
        'entail': opts['entail'],
        'graph': opts['graph']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Graph];
      return this.apiClient.callApi(
        '/graph/edges/from/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNodeResource operation.
     * @callback module:api/GraphApi~getNodeResourceCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/BioObject>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a graph node
     * A node is an abstract representation of some kind of entity. The entity may be a physical thing such as a patient, a molecular entity such as a gene or protein, or a conceptual entity such as a class from an ontology.
     * @param {String} id CURIE e.g. HP:0000465
     * @param {module:api/GraphApi~getNodeResourceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/BioObject>}
     */
    getNodeResource(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getNodeResource");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [BioObject];
      return this.apiClient.callApi(
        '/graph/node/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
