/**
 * BioLink API
 * API integration layer for linked biological objects.   __Source:__ https://github.com/biolink/biolink-api/
 *
 * The version of the OpenAPI document: 1.1.14
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* OntolIdentifier service.
* @module api/OntolIdentifierApi
* @version 1.1.14
*/
export default class OntolIdentifierApi {

    /**
    * Constructs a new OntolIdentifierApi. 
    * @alias module:api/OntolIdentifierApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getOntolIdentifierResource operation.
     * @callback module:api/OntolIdentifierApi~getOntolIdentifierResourceCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Fetches a map from CURIEs/IDs to labels
     * @param {Array.<String>} label List of labels
     * @param {module:api/OntolIdentifierApi~getOntolIdentifierResourceCallback} callback The callback function, accepting three arguments: error, data, response
     */
    getOntolIdentifierResource(label, callback) {
      let postBody = null;
      // verify the required parameter 'label' is set
      if (label === undefined || label === null) {
        throw new Error("Missing the required parameter 'label' when calling getOntolIdentifierResource");
      }

      let pathParams = {
      };
      let queryParams = {
        'label': this.apiClient.buildCollectionParam(label, 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/ontol/identifier/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postOntolIdentifierResource operation.
     * @callback module:api/OntolIdentifierApi~postOntolIdentifierResourceCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Fetches a map from CURIEs/IDs to labels
     * Takes 'label' list argument either as a querystring argument or as a key in the POST body when content-type is application/json.
     * @param {Array.<String>} label List of labels
     * @param {module:api/OntolIdentifierApi~postOntolIdentifierResourceCallback} callback The callback function, accepting three arguments: error, data, response
     */
    postOntolIdentifierResource(label, callback) {
      let postBody = null;
      // verify the required parameter 'label' is set
      if (label === undefined || label === null) {
        throw new Error("Missing the required parameter 'label' when calling postOntolIdentifierResource");
      }

      let pathParams = {
      };
      let queryParams = {
        'label': this.apiClient.buildCollectionParam(label, 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/ontol/identifier/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
