/**
 * BioLink API
 * API integration layer for linked biological objects.   __Source:__ https://github.com/biolink/biolink-api/
 *
 * The version of the OpenAPI document: 1.1.14
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Association from '../model/Association';

/**
* IdentifierMapper service.
* @module api/IdentifierMapperApi
* @version 1.1.14
*/
export default class IdentifierMapperApi {

    /**
    * Constructs a new IdentifierMapperApi. 
    * @alias module:api/IdentifierMapperApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getIdentifierMapper operation.
     * @callback module:api/IdentifierMapperApi~getIdentifierMapperCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Association>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * TODO maps a list of identifiers from a source to a target
     * @param {String} source 
     * @param {String} target 
     * @param {module:api/IdentifierMapperApi~getIdentifierMapperCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Association>}
     */
    getIdentifierMapper(source, target, callback) {
      let postBody = null;
      // verify the required parameter 'source' is set
      if (source === undefined || source === null) {
        throw new Error("Missing the required parameter 'source' when calling getIdentifierMapper");
      }
      // verify the required parameter 'target' is set
      if (target === undefined || target === null) {
        throw new Error("Missing the required parameter 'target' when calling getIdentifierMapper");
      }

      let pathParams = {
        'source': source,
        'target': target
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Association];
      return this.apiClient.callApi(
        '/identifier/mapper/{source}/{target}/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
