/**
 * BioLink API
 * API integration layer for linked biological objects.   __Source:__ https://github.com/biolink/biolink-api/
 *
 * The version of the OpenAPI document: 1.1.14
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AssociationResults from '../model/AssociationResults';

/**
* Bioentityset service.
* @module api/BioentitysetApi
* @version 1.1.14
*/
export default class BioentitysetApi {

    /**
    * Constructs a new BioentitysetApi. 
    * @alias module:api/BioentitysetApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getEntitySetAssociations operation.
     * @callback module:api/BioentitysetApi~getEntitySetAssociationsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/AssociationResults>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns compact associations for a given input set
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} [subject] Entity ids to be examined, e.g. NCBIGene:9342, NCBIGene:7227, NCBIGene:8131, NCBIGene:157570, NCBIGene:51164, NCBIGene:6689, NCBIGene:6387
     * @param {Array.<String>} [background] Entity ids in background set, e.g. NCBIGene:84570, NCBIGene:3630; used in over-representation tests
     * @param {String} [objectCategory] E.g. phenotype, function
     * @param {String} [objectSlim] Slim or subset to which the descriptors are to be mapped, NOT IMPLEMENTED
     * @param {module:api/BioentitysetApi~getEntitySetAssociationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/AssociationResults>}
     */
    getEntitySetAssociations(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'subject': this.apiClient.buildCollectionParam(opts['subject'], 'multi'),
        'background': this.apiClient.buildCollectionParam(opts['background'], 'multi'),
        'object_category': opts['objectCategory'],
        'object_slim': opts['objectSlim']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [AssociationResults];
      return this.apiClient.callApi(
        '/bioentityset/associations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getEntitySetGraphResource operation.
     * @callback module:api/BioentitysetApi~getEntitySetGraphResourceCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * TODO Graph object spanning all entities
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} [subject] Entity ids to be examined, e.g. NCBIGene:9342, NCBIGene:7227, NCBIGene:8131, NCBIGene:157570, NCBIGene:51164, NCBIGene:6689, NCBIGene:6387
     * @param {Array.<String>} [background] Entity ids in background set, e.g. NCBIGene:84570, NCBIGene:3630; used in over-representation tests
     * @param {String} [objectCategory] E.g. phenotype, function
     * @param {String} [objectSlim] Slim or subset to which the descriptors are to be mapped, NOT IMPLEMENTED
     * @param {module:api/BioentitysetApi~getEntitySetGraphResourceCallback} callback The callback function, accepting three arguments: error, data, response
     */
    getEntitySetGraphResource(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'subject': this.apiClient.buildCollectionParam(opts['subject'], 'multi'),
        'background': this.apiClient.buildCollectionParam(opts['background'], 'multi'),
        'object_category': opts['objectCategory'],
        'object_slim': opts['objectSlim']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/bioentityset/graph', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getEntitySetSummary operation.
     * @callback module:api/BioentitysetApi~getEntitySetSummaryCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Summary statistics for objects associated
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} [subject] Entity ids to be examined, e.g. NCBIGene:9342, NCBIGene:7227, NCBIGene:8131, NCBIGene:157570, NCBIGene:51164, NCBIGene:6689, NCBIGene:6387
     * @param {Array.<String>} [background] Entity ids in background set, e.g. NCBIGene:84570, NCBIGene:3630; used in over-representation tests
     * @param {String} [objectCategory] E.g. phenotype, function
     * @param {String} [objectSlim] Slim or subset to which the descriptors are to be mapped, NOT IMPLEMENTED
     * @param {module:api/BioentitysetApi~getEntitySetSummaryCallback} callback The callback function, accepting three arguments: error, data, response
     */
    getEntitySetSummary(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'subject': this.apiClient.buildCollectionParam(opts['subject'], 'multi'),
        'background': this.apiClient.buildCollectionParam(opts['background'], 'multi'),
        'object_category': opts['objectCategory'],
        'object_slim': opts['objectSlim']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/bioentityset/descriptor/counts', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOverRepresentation operation.
     * @callback module:api/BioentitysetApi~getOverRepresentationCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Summary statistics for objects associated
     * @param {Object} opts Optional parameters
     * @param {String} [objectCategory] E.g. phenotype, function
     * @param {Array.<String>} [subject] Entity ids to be examined, e.g. NCBIGene:9342, NCBIGene:7227, NCBIGene:8131, NCBIGene:157570, NCBIGene:51164, NCBIGene:6689, NCBIGene:6387
     * @param {Array.<String>} [background] Entity ids in background set, e.g. NCBIGene:84570, NCBIGene:3630; used in over-representation tests
     * @param {String} [subjectCategory = 'gene')] Default: gene. Other types may be used e.g. disease but statistics may not make sense
     * @param {String} [maxPValue = '0.05')] Exclude results with p-value greater than this
     * @param {String} [ontology] ontology id. Must be obo id. Examples: go, mp, hp, uberon (optional: will be inferred if left blank)
     * @param {String} [taxon] must be NCBITaxon CURIE. Example: NCBITaxon:9606
     * @param {module:api/BioentitysetApi~getOverRepresentationCallback} callback The callback function, accepting three arguments: error, data, response
     */
    getOverRepresentation(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'object_category': opts['objectCategory'],
        'subject': this.apiClient.buildCollectionParam(opts['subject'], 'multi'),
        'background': this.apiClient.buildCollectionParam(opts['background'], 'multi'),
        'subject_category': opts['subjectCategory'],
        'max_p_value': opts['maxPValue'],
        'ontology': opts['ontology'],
        'taxon': opts['taxon']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/bioentityset/overrepresentation', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
