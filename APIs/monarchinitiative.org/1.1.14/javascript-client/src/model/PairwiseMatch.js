/**
 * BioLink API
 * API integration layer for linked biological objects.   __Source:__ https://github.com/biolink/biolink-api/
 *
 * The version of the OpenAPI document: 1.1.14
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IcNode from './IcNode';

/**
 * The PairwiseMatch model module.
 * @module model/PairwiseMatch
 * @version 1.1.14
 */
class PairwiseMatch {
    /**
     * Constructs a new <code>PairwiseMatch</code>.
     * @alias module:model/PairwiseMatch
     */
    constructor() { 
        
        PairwiseMatch.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PairwiseMatch</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PairwiseMatch} obj Optional instance to populate.
     * @return {module:model/PairwiseMatch} The populated <code>PairwiseMatch</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PairwiseMatch();

            if (data.hasOwnProperty('lcs')) {
                obj['lcs'] = ApiClient.convertToType(data['lcs'], IcNode);
            }
            if (data.hasOwnProperty('match')) {
                obj['match'] = ApiClient.convertToType(data['match'], IcNode);
            }
            if (data.hasOwnProperty('reference')) {
                obj['reference'] = ApiClient.convertToType(data['reference'], IcNode);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PairwiseMatch</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PairwiseMatch</code>.
     */
    static validateJSON(data) {
        // validate the optional field `lcs`
        if (data['lcs']) { // data not null
          IcNode.validateJSON(data['lcs']);
        }
        // validate the optional field `match`
        if (data['match']) { // data not null
          IcNode.validateJSON(data['match']);
        }
        // validate the optional field `reference`
        if (data['reference']) { // data not null
          IcNode.validateJSON(data['reference']);
        }

        return true;
    }


}



/**
 * lowest common subsumer
 * @member {module:model/IcNode} lcs
 */
PairwiseMatch.prototype['lcs'] = undefined;

/**
 * match id
 * @member {module:model/IcNode} match
 */
PairwiseMatch.prototype['match'] = undefined;

/**
 * reference id
 * @member {module:model/IcNode} reference
 */
PairwiseMatch.prototype['reference'] = undefined;






export default PairwiseMatch;

