/**
 * BioLink API
 * API integration layer for linked biological objects.   __Source:__ https://github.com/biolink/biolink-api/
 *
 * The version of the OpenAPI document: 1.1.14
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SearchResult model module.
 * @module model/SearchResult
 * @version 1.1.14
 */
class SearchResult {
    /**
     * Constructs a new <code>SearchResult</code>.
     * @alias module:model/SearchResult
     */
    constructor() { 
        
        SearchResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SearchResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SearchResult} obj Optional instance to populate.
     * @return {module:model/SearchResult} The populated <code>SearchResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SearchResult();

            if (data.hasOwnProperty('docs')) {
                obj['docs'] = ApiClient.convertToType(data['docs'], [Object]);
            }
            if (data.hasOwnProperty('facet_counts')) {
                obj['facet_counts'] = ApiClient.convertToType(data['facet_counts'], Object);
            }
            if (data.hasOwnProperty('highlighting')) {
                obj['highlighting'] = ApiClient.convertToType(data['highlighting'], Object);
            }
            if (data.hasOwnProperty('numFound')) {
                obj['numFound'] = ApiClient.convertToType(data['numFound'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SearchResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SearchResult</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['docs'])) {
            throw new Error("Expected the field `docs` to be an array in the JSON data but got " + data['docs']);
        }

        return true;
    }


}



/**
 * solr docs
 * @member {Array.<Object>} docs
 */
SearchResult.prototype['docs'] = undefined;

/**
 * Mapping between field names and association counts
 * @member {Object} facet_counts
 */
SearchResult.prototype['facet_counts'] = undefined;

/**
 * Mapping between id and solr highlight
 * @member {Object} highlighting
 */
SearchResult.prototype['highlighting'] = undefined;

/**
 * total number of associations matching query
 * @member {Number} numFound
 */
SearchResult.prototype['numFound'] = undefined;






export default SearchResult;

