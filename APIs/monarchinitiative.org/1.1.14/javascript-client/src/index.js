/**
 * BioLink API
 * API integration layer for linked biological objects.   __Source:__ https://github.com/biolink/biolink-api/
 *
 * The version of the OpenAPI document: 1.1.14
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import APageOfResults from './model/APageOfResults';
import AbstractPropertyValue from './model/AbstractPropertyValue';
import AnnotationExtension from './model/AnnotationExtension';
import Association from './model/Association';
import AssociationResults from './model/AssociationResults';
import AutocompleteResult from './model/AutocompleteResult';
import AutocompleteResults from './model/AutocompleteResults';
import BioObject from './model/BioObject';
import BioObjectCore from './model/BioObjectCore';
import CompactAssociationSet from './model/CompactAssociationSet';
import CompareInput from './model/CompareInput';
import D2PAssociation from './model/D2PAssociation';
import D2PAssociationResults from './model/D2PAssociationResults';
import Edge from './model/Edge';
import EntityAnnotationResult from './model/EntityAnnotationResult';
import EntityReference from './model/EntityReference';
import Feature from './model/Feature';
import Graph from './model/Graph';
import IcNode from './model/IcNode';
import LayAutocomplete from './model/LayAutocomplete';
import LayResults from './model/LayResults';
import NamedObject from './model/NamedObject';
import NamedObjectCore from './model/NamedObjectCore';
import Node from './model/Node';
import PageOfVariantSets from './model/PageOfVariantSets';
import PairwiseMatch from './model/PairwiseMatch';
import Relation from './model/Relation';
import RelationRef from './model/RelationRef';
import SearchResult from './model/SearchResult';
import Seq from './model/Seq';
import SequenceFeature from './model/SequenceFeature';
import SequenceLocation from './model/SequenceLocation';
import SequencePosition from './model/SequencePosition';
import SimMatch from './model/SimMatch';
import SimMatchAllOfPairwiseMatch from './model/SimMatchAllOfPairwiseMatch';
import SimMetadata from './model/SimMetadata';
import SimQuery from './model/SimQuery';
import SimResult from './model/SimResult';
import Span from './model/Span';
import SufficiencyOutput from './model/SufficiencyOutput';
import SufficiencyPostInput from './model/SufficiencyPostInput';
import SynonymPropertyValue from './model/SynonymPropertyValue';
import Taxon from './model/Taxon';
import Token from './model/Token';
import TypedNode from './model/TypedNode';
import VariantSet from './model/VariantSet';
import AssociationApi from './api/AssociationApi';
import BioentityApi from './api/BioentityApi';
import BioentitysetApi from './api/BioentitysetApi';
import BioentitysetHomologsApi from './api/BioentitysetHomologsApi';
import BioentitysetSlimmerApi from './api/BioentitysetSlimmerApi';
import CamApi from './api/CamApi';
import EvidenceGraphApi from './api/EvidenceGraphApi';
import GenomeFeaturesApi from './api/GenomeFeaturesApi';
import GraphApi from './api/GraphApi';
import IdentifierMapperApi from './api/IdentifierMapperApi';
import IdentifierPrefixesApi from './api/IdentifierPrefixesApi';
import IndividualApi from './api/IndividualApi';
import MartApi from './api/MartApi';
import MetadataApi from './api/MetadataApi';
import MmeApi from './api/MmeApi';
import NlpAnnotateApi from './api/NlpAnnotateApi';
import OntolApi from './api/OntolApi';
import OntolIdentifierApi from './api/OntolIdentifierApi';
import OntolLabelerApi from './api/OntolLabelerApi';
import OntologyApi from './api/OntologyApi';
import OwlOntologyApi from './api/OwlOntologyApi';
import PairSimApi from './api/PairSimApi';
import RelationUsageApi from './api/RelationUsageApi';
import SearchApi from './api/SearchApi';
import SimApi from './api/SimApi';
import VariationSetApi from './api/VariationSetApi';


/**
* API integration layer for linked biological objects.   __Source:__ https://github.com/biolink/biolink-api/.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var BioLinkApi = require('index'); // See note below*.
* var xxxSvc = new BioLinkApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new BioLinkApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new BioLinkApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new BioLinkApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.1.14
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The APageOfResults model constructor.
     * @property {module:model/APageOfResults}
     */
    APageOfResults,

    /**
     * The AbstractPropertyValue model constructor.
     * @property {module:model/AbstractPropertyValue}
     */
    AbstractPropertyValue,

    /**
     * The AnnotationExtension model constructor.
     * @property {module:model/AnnotationExtension}
     */
    AnnotationExtension,

    /**
     * The Association model constructor.
     * @property {module:model/Association}
     */
    Association,

    /**
     * The AssociationResults model constructor.
     * @property {module:model/AssociationResults}
     */
    AssociationResults,

    /**
     * The AutocompleteResult model constructor.
     * @property {module:model/AutocompleteResult}
     */
    AutocompleteResult,

    /**
     * The AutocompleteResults model constructor.
     * @property {module:model/AutocompleteResults}
     */
    AutocompleteResults,

    /**
     * The BioObject model constructor.
     * @property {module:model/BioObject}
     */
    BioObject,

    /**
     * The BioObjectCore model constructor.
     * @property {module:model/BioObjectCore}
     */
    BioObjectCore,

    /**
     * The CompactAssociationSet model constructor.
     * @property {module:model/CompactAssociationSet}
     */
    CompactAssociationSet,

    /**
     * The CompareInput model constructor.
     * @property {module:model/CompareInput}
     */
    CompareInput,

    /**
     * The D2PAssociation model constructor.
     * @property {module:model/D2PAssociation}
     */
    D2PAssociation,

    /**
     * The D2PAssociationResults model constructor.
     * @property {module:model/D2PAssociationResults}
     */
    D2PAssociationResults,

    /**
     * The Edge model constructor.
     * @property {module:model/Edge}
     */
    Edge,

    /**
     * The EntityAnnotationResult model constructor.
     * @property {module:model/EntityAnnotationResult}
     */
    EntityAnnotationResult,

    /**
     * The EntityReference model constructor.
     * @property {module:model/EntityReference}
     */
    EntityReference,

    /**
     * The Feature model constructor.
     * @property {module:model/Feature}
     */
    Feature,

    /**
     * The Graph model constructor.
     * @property {module:model/Graph}
     */
    Graph,

    /**
     * The IcNode model constructor.
     * @property {module:model/IcNode}
     */
    IcNode,

    /**
     * The LayAutocomplete model constructor.
     * @property {module:model/LayAutocomplete}
     */
    LayAutocomplete,

    /**
     * The LayResults model constructor.
     * @property {module:model/LayResults}
     */
    LayResults,

    /**
     * The NamedObject model constructor.
     * @property {module:model/NamedObject}
     */
    NamedObject,

    /**
     * The NamedObjectCore model constructor.
     * @property {module:model/NamedObjectCore}
     */
    NamedObjectCore,

    /**
     * The Node model constructor.
     * @property {module:model/Node}
     */
    Node,

    /**
     * The PageOfVariantSets model constructor.
     * @property {module:model/PageOfVariantSets}
     */
    PageOfVariantSets,

    /**
     * The PairwiseMatch model constructor.
     * @property {module:model/PairwiseMatch}
     */
    PairwiseMatch,

    /**
     * The Relation model constructor.
     * @property {module:model/Relation}
     */
    Relation,

    /**
     * The RelationRef model constructor.
     * @property {module:model/RelationRef}
     */
    RelationRef,

    /**
     * The SearchResult model constructor.
     * @property {module:model/SearchResult}
     */
    SearchResult,

    /**
     * The Seq model constructor.
     * @property {module:model/Seq}
     */
    Seq,

    /**
     * The SequenceFeature model constructor.
     * @property {module:model/SequenceFeature}
     */
    SequenceFeature,

    /**
     * The SequenceLocation model constructor.
     * @property {module:model/SequenceLocation}
     */
    SequenceLocation,

    /**
     * The SequencePosition model constructor.
     * @property {module:model/SequencePosition}
     */
    SequencePosition,

    /**
     * The SimMatch model constructor.
     * @property {module:model/SimMatch}
     */
    SimMatch,

    /**
     * The SimMatchAllOfPairwiseMatch model constructor.
     * @property {module:model/SimMatchAllOfPairwiseMatch}
     */
    SimMatchAllOfPairwiseMatch,

    /**
     * The SimMetadata model constructor.
     * @property {module:model/SimMetadata}
     */
    SimMetadata,

    /**
     * The SimQuery model constructor.
     * @property {module:model/SimQuery}
     */
    SimQuery,

    /**
     * The SimResult model constructor.
     * @property {module:model/SimResult}
     */
    SimResult,

    /**
     * The Span model constructor.
     * @property {module:model/Span}
     */
    Span,

    /**
     * The SufficiencyOutput model constructor.
     * @property {module:model/SufficiencyOutput}
     */
    SufficiencyOutput,

    /**
     * The SufficiencyPostInput model constructor.
     * @property {module:model/SufficiencyPostInput}
     */
    SufficiencyPostInput,

    /**
     * The SynonymPropertyValue model constructor.
     * @property {module:model/SynonymPropertyValue}
     */
    SynonymPropertyValue,

    /**
     * The Taxon model constructor.
     * @property {module:model/Taxon}
     */
    Taxon,

    /**
     * The Token model constructor.
     * @property {module:model/Token}
     */
    Token,

    /**
     * The TypedNode model constructor.
     * @property {module:model/TypedNode}
     */
    TypedNode,

    /**
     * The VariantSet model constructor.
     * @property {module:model/VariantSet}
     */
    VariantSet,

    /**
    * The AssociationApi service constructor.
    * @property {module:api/AssociationApi}
    */
    AssociationApi,

    /**
    * The BioentityApi service constructor.
    * @property {module:api/BioentityApi}
    */
    BioentityApi,

    /**
    * The BioentitysetApi service constructor.
    * @property {module:api/BioentitysetApi}
    */
    BioentitysetApi,

    /**
    * The BioentitysetHomologsApi service constructor.
    * @property {module:api/BioentitysetHomologsApi}
    */
    BioentitysetHomologsApi,

    /**
    * The BioentitysetSlimmerApi service constructor.
    * @property {module:api/BioentitysetSlimmerApi}
    */
    BioentitysetSlimmerApi,

    /**
    * The CamApi service constructor.
    * @property {module:api/CamApi}
    */
    CamApi,

    /**
    * The EvidenceGraphApi service constructor.
    * @property {module:api/EvidenceGraphApi}
    */
    EvidenceGraphApi,

    /**
    * The GenomeFeaturesApi service constructor.
    * @property {module:api/GenomeFeaturesApi}
    */
    GenomeFeaturesApi,

    /**
    * The GraphApi service constructor.
    * @property {module:api/GraphApi}
    */
    GraphApi,

    /**
    * The IdentifierMapperApi service constructor.
    * @property {module:api/IdentifierMapperApi}
    */
    IdentifierMapperApi,

    /**
    * The IdentifierPrefixesApi service constructor.
    * @property {module:api/IdentifierPrefixesApi}
    */
    IdentifierPrefixesApi,

    /**
    * The IndividualApi service constructor.
    * @property {module:api/IndividualApi}
    */
    IndividualApi,

    /**
    * The MartApi service constructor.
    * @property {module:api/MartApi}
    */
    MartApi,

    /**
    * The MetadataApi service constructor.
    * @property {module:api/MetadataApi}
    */
    MetadataApi,

    /**
    * The MmeApi service constructor.
    * @property {module:api/MmeApi}
    */
    MmeApi,

    /**
    * The NlpAnnotateApi service constructor.
    * @property {module:api/NlpAnnotateApi}
    */
    NlpAnnotateApi,

    /**
    * The OntolApi service constructor.
    * @property {module:api/OntolApi}
    */
    OntolApi,

    /**
    * The OntolIdentifierApi service constructor.
    * @property {module:api/OntolIdentifierApi}
    */
    OntolIdentifierApi,

    /**
    * The OntolLabelerApi service constructor.
    * @property {module:api/OntolLabelerApi}
    */
    OntolLabelerApi,

    /**
    * The OntologyApi service constructor.
    * @property {module:api/OntologyApi}
    */
    OntologyApi,

    /**
    * The OwlOntologyApi service constructor.
    * @property {module:api/OwlOntologyApi}
    */
    OwlOntologyApi,

    /**
    * The PairSimApi service constructor.
    * @property {module:api/PairSimApi}
    */
    PairSimApi,

    /**
    * The RelationUsageApi service constructor.
    * @property {module:api/RelationUsageApi}
    */
    RelationUsageApi,

    /**
    * The SearchApi service constructor.
    * @property {module:api/SearchApi}
    */
    SearchApi,

    /**
    * The SimApi service constructor.
    * @property {module:api/SimApi}
    */
    SimApi,

    /**
    * The VariationSetApi service constructor.
    * @property {module:api/VariationSetApi}
    */
    VariationSetApi
};
