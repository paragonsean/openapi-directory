/**
 * BioLink API
 * API integration layer for linked biological objects.   __Source:__ https://github.com/biolink/biolink-api/
 *
 * The version of the OpenAPI document: 1.1.14
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAID2PAssociation.h
 *
 * 
 */

#ifndef OAID2PAssociation_H
#define OAID2PAssociation_H

#include <QJsonObject>

#include "OAIAnnotationExtension.h"
#include "OAIBioObjectCore.h"
#include "OAIEntityReference.h"
#include "OAIGraph.h"
#include "OAIRelationRef.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGraph;
class OAIEntityReference;
class OAIBioObjectCore;
class OAIAnnotationExtension;
class OAIRelationRef;

class OAID2PAssociation : public OAIObject {
public:
    OAID2PAssociation();
    OAID2PAssociation(QString json);
    ~OAID2PAssociation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGraph getEvidenceGraph() const;
    void setEvidenceGraph(const OAIGraph &evidence_graph);
    bool is_evidence_graph_Set() const;
    bool is_evidence_graph_Valid() const;

    QList<OAIEntityReference> getEvidenceTypes() const;
    void setEvidenceTypes(const QList<OAIEntityReference> &evidence_types);
    bool is_evidence_types_Set() const;
    bool is_evidence_types_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isNegated() const;
    void setNegated(const bool &negated);
    bool is_negated_Set() const;
    bool is_negated_Valid() const;

    OAIBioObjectCore getObject() const;
    void setObject(const OAIBioObjectCore &object);
    bool is_object_Set() const;
    bool is_object_Valid() const;

    QList<QString> getObjectEq() const;
    void setObjectEq(const QList<QString> &object_eq);
    bool is_object_eq_Set() const;
    bool is_object_eq_Valid() const;

    QList<OAIAnnotationExtension> getObjectExtensions() const;
    void setObjectExtensions(const QList<OAIAnnotationExtension> &object_extensions);
    bool is_object_extensions_Set() const;
    bool is_object_extensions_Valid() const;

    QList<QString> getProvidedBy() const;
    void setProvidedBy(const QList<QString> &provided_by);
    bool is_provided_by_Set() const;
    bool is_provided_by_Valid() const;

    QList<OAIEntityReference> getPublications() const;
    void setPublications(const QList<OAIEntityReference> &publications);
    bool is_publications_Set() const;
    bool is_publications_Valid() const;

    QList<QString> getQualifiers() const;
    void setQualifiers(const QList<QString> &qualifiers);
    bool is_qualifiers_Set() const;
    bool is_qualifiers_Valid() const;

    OAIRelationRef getRelation() const;
    void setRelation(const OAIRelationRef &relation);
    bool is_relation_Set() const;
    bool is_relation_Valid() const;

    QList<QString> getSlim() const;
    void setSlim(const QList<QString> &slim);
    bool is_slim_Set() const;
    bool is_slim_Valid() const;

    OAIBioObjectCore getSubject() const;
    void setSubject(const OAIBioObjectCore &subject);
    bool is_subject_Set() const;
    bool is_subject_Valid() const;

    QList<QString> getSubjectEq() const;
    void setSubjectEq(const QList<QString> &subject_eq);
    bool is_subject_eq_Set() const;
    bool is_subject_eq_Valid() const;

    QList<OAIAnnotationExtension> getSubjectExtensions() const;
    void setSubjectExtensions(const QList<OAIAnnotationExtension> &subject_extensions);
    bool is_subject_extensions_Set() const;
    bool is_subject_extensions_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAIEntityReference getFrequency() const;
    void setFrequency(const OAIEntityReference &frequency);
    bool is_frequency_Set() const;
    bool is_frequency_Valid() const;

    OAIEntityReference getOnset() const;
    void setOnset(const OAIEntityReference &onset);
    bool is_onset_Set() const;
    bool is_onset_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGraph m_evidence_graph;
    bool m_evidence_graph_isSet;
    bool m_evidence_graph_isValid;

    QList<OAIEntityReference> m_evidence_types;
    bool m_evidence_types_isSet;
    bool m_evidence_types_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_negated;
    bool m_negated_isSet;
    bool m_negated_isValid;

    OAIBioObjectCore m_object;
    bool m_object_isSet;
    bool m_object_isValid;

    QList<QString> m_object_eq;
    bool m_object_eq_isSet;
    bool m_object_eq_isValid;

    QList<OAIAnnotationExtension> m_object_extensions;
    bool m_object_extensions_isSet;
    bool m_object_extensions_isValid;

    QList<QString> m_provided_by;
    bool m_provided_by_isSet;
    bool m_provided_by_isValid;

    QList<OAIEntityReference> m_publications;
    bool m_publications_isSet;
    bool m_publications_isValid;

    QList<QString> m_qualifiers;
    bool m_qualifiers_isSet;
    bool m_qualifiers_isValid;

    OAIRelationRef m_relation;
    bool m_relation_isSet;
    bool m_relation_isValid;

    QList<QString> m_slim;
    bool m_slim_isSet;
    bool m_slim_isValid;

    OAIBioObjectCore m_subject;
    bool m_subject_isSet;
    bool m_subject_isValid;

    QList<QString> m_subject_eq;
    bool m_subject_eq_isSet;
    bool m_subject_eq_isValid;

    QList<OAIAnnotationExtension> m_subject_extensions;
    bool m_subject_extensions_isSet;
    bool m_subject_extensions_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAIEntityReference m_frequency;
    bool m_frequency_isSet;
    bool m_frequency_isValid;

    OAIEntityReference m_onset;
    bool m_onset_isSet;
    bool m_onset_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAID2PAssociation)

#endif // OAID2PAssociation_H
