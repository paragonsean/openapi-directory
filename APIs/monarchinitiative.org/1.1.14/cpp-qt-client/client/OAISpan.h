/**
 * BioLink API
 * API integration layer for linked biological objects.   __Source:__ https://github.com/biolink/biolink-api/
 *
 * The version of the OpenAPI document: 1.1.14
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISpan.h
 *
 * 
 */

#ifndef OAISpan_H
#define OAISpan_H

#include <QJsonObject>

#include "OAIToken.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIToken;

class OAISpan : public OAIObject {
public:
    OAISpan();
    OAISpan(QString json);
    ~OAISpan() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getEnd() const;
    void setEnd(const qint32 &end);
    bool is_end_Set() const;
    bool is_end_Valid() const;

    qint32 getStart() const;
    void setStart(const qint32 &start);
    bool is_start_Set() const;
    bool is_start_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    QList<OAIToken> getToken() const;
    void setToken(const QList<OAIToken> &token);
    bool is_token_Set() const;
    bool is_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_end;
    bool m_end_isSet;
    bool m_end_isValid;

    qint32 m_start;
    bool m_start_isSet;
    bool m_start_isValid;

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;

    QList<OAIToken> m_token;
    bool m_token_isSet;
    bool m_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISpan)

#endif // OAISpan_H
