/**
 * BioLink API
 * API integration layer for linked biological objects.   __Source:__ https://github.com/biolink/biolink-api/
 *
 * The version of the OpenAPI document: 1.1.14
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAutocompleteResult.h
 *
 * 
 */

#ifndef OAIAutocompleteResult_H
#define OAIAutocompleteResult_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAutocompleteResult : public OAIObject {
public:
    OAIAutocompleteResult();
    OAIAutocompleteResult(QString json);
    ~OAIAutocompleteResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getCategory() const;
    void setCategory(const QList<QString> &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    QList<QString> getEquivalentIds() const;
    void setEquivalentIds(const QList<QString> &equivalent_ids);
    bool is_equivalent_ids_Set() const;
    bool is_equivalent_ids_Valid() const;

    bool isHasHighlight() const;
    void setHasHighlight(const bool &has_highlight);
    bool is_has_highlight_Set() const;
    bool is_has_highlight_Valid() const;

    QString getHighlight() const;
    void setHighlight(const QString &highlight);
    bool is_highlight_Set() const;
    bool is_highlight_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QList<QString> getLabel() const;
    void setLabel(const QList<QString> &label);
    bool is_label_Set() const;
    bool is_label_Valid() const;

    QString getMatch() const;
    void setMatch(const QString &match);
    bool is_match_Set() const;
    bool is_match_Valid() const;

    QString getTaxon() const;
    void setTaxon(const QString &taxon);
    bool is_taxon_Set() const;
    bool is_taxon_Valid() const;

    QString getTaxonLabel() const;
    void setTaxonLabel(const QString &taxon_label);
    bool is_taxon_label_Set() const;
    bool is_taxon_label_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    QList<QString> m_equivalent_ids;
    bool m_equivalent_ids_isSet;
    bool m_equivalent_ids_isValid;

    bool m_has_highlight;
    bool m_has_highlight_isSet;
    bool m_has_highlight_isValid;

    QString m_highlight;
    bool m_highlight_isSet;
    bool m_highlight_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QList<QString> m_label;
    bool m_label_isSet;
    bool m_label_isValid;

    QString m_match;
    bool m_match_isSet;
    bool m_match_isValid;

    QString m_taxon;
    bool m_taxon_isSet;
    bool m_taxon_isValid;

    QString m_taxon_label;
    bool m_taxon_label_isSet;
    bool m_taxon_label_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAutocompleteResult)

#endif // OAIAutocompleteResult_H
