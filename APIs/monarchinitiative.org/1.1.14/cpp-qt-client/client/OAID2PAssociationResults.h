/**
 * BioLink API
 * API integration layer for linked biological objects.   __Source:__ https://github.com/biolink/biolink-api/
 *
 * The version of the OpenAPI document: 1.1.14
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAID2PAssociationResults.h
 *
 * 
 */

#ifndef OAID2PAssociationResults_H
#define OAID2PAssociationResults_H

#include <QJsonObject>

#include "OAICompactAssociationSet.h"
#include "OAID2PAssociation.h"
#include "OAIObject.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAID2PAssociation;
class OAICompactAssociationSet;

class OAID2PAssociationResults : public OAIObject {
public:
    OAID2PAssociationResults();
    OAID2PAssociationResults(QString json);
    ~OAID2PAssociationResults() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIObject> getDocs() const;
    void setDocs(const QList<OAIObject> &docs);
    bool is_docs_Set() const;
    bool is_docs_Valid() const;

    OAIObject getFacetCounts() const;
    void setFacetCounts(const OAIObject &facet_counts);
    bool is_facet_counts_Set() const;
    bool is_facet_counts_Valid() const;

    OAIObject getHighlighting() const;
    void setHighlighting(const OAIObject &highlighting);
    bool is_highlighting_Set() const;
    bool is_highlighting_Valid() const;

    qint32 getNumFound() const;
    void setNumFound(const qint32 &num_found);
    bool is_num_found_Set() const;
    bool is_num_found_Valid() const;

    QList<OAID2PAssociation> getAssociations() const;
    void setAssociations(const QList<OAID2PAssociation> &associations);
    bool is_associations_Set() const;
    bool is_associations_Valid() const;

    QList<OAICompactAssociationSet> getCompactAssociations() const;
    void setCompactAssociations(const QList<OAICompactAssociationSet> &compact_associations);
    bool is_compact_associations_Set() const;
    bool is_compact_associations_Valid() const;

    QList<QString> getObjects() const;
    void setObjects(const QList<QString> &objects);
    bool is_objects_Set() const;
    bool is_objects_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIObject> m_docs;
    bool m_docs_isSet;
    bool m_docs_isValid;

    OAIObject m_facet_counts;
    bool m_facet_counts_isSet;
    bool m_facet_counts_isValid;

    OAIObject m_highlighting;
    bool m_highlighting_isSet;
    bool m_highlighting_isValid;

    qint32 m_num_found;
    bool m_num_found_isSet;
    bool m_num_found_isValid;

    QList<OAID2PAssociation> m_associations;
    bool m_associations_isSet;
    bool m_associations_isValid;

    QList<OAICompactAssociationSet> m_compact_associations;
    bool m_compact_associations_isSet;
    bool m_compact_associations_isValid;

    QList<QString> m_objects;
    bool m_objects_isSet;
    bool m_objects_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAID2PAssociationResults)

#endif // OAID2PAssociationResults_H
