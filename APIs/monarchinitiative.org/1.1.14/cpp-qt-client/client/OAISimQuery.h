/**
 * BioLink API
 * API integration layer for linked biological objects.   __Source:__ https://github.com/biolink/biolink-api/
 *
 * The version of the OpenAPI document: 1.1.14
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISimQuery.h
 *
 * 
 */

#ifndef OAISimQuery_H
#define OAISimQuery_H

#include <QJsonObject>

#include "OAINode.h"
#include "OAITypedNode.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINode;
class OAITypedNode;

class OAISimQuery : public OAIObject {
public:
    OAISimQuery();
    OAISimQuery(QString json);
    ~OAISimQuery() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAINode> getIds() const;
    void setIds(const QList<OAINode> &ids);
    bool is_ids_Set() const;
    bool is_ids_Valid() const;

    QList<OAINode> getNegatedIds() const;
    void setNegatedIds(const QList<OAINode> &negated_ids);
    bool is_negated_ids_Set() const;
    bool is_negated_ids_Valid() const;

    OAITypedNode getReference() const;
    void setReference(const OAITypedNode &reference);
    bool is_reference_Set() const;
    bool is_reference_Valid() const;

    QList<QList<OAINode>> getTargetIds() const;
    void setTargetIds(const QList<QList<OAINode>> &target_ids);
    bool is_target_ids_Set() const;
    bool is_target_ids_Valid() const;

    QList<QString> getUnresolvedIds() const;
    void setUnresolvedIds(const QList<QString> &unresolved_ids);
    bool is_unresolved_ids_Set() const;
    bool is_unresolved_ids_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAINode> m_ids;
    bool m_ids_isSet;
    bool m_ids_isValid;

    QList<OAINode> m_negated_ids;
    bool m_negated_ids_isSet;
    bool m_negated_ids_isValid;

    OAITypedNode m_reference;
    bool m_reference_isSet;
    bool m_reference_isValid;

    QList<QList<OAINode>> m_target_ids;
    bool m_target_ids_isSet;
    bool m_target_ids_isValid;

    QList<QString> m_unresolved_ids;
    bool m_unresolved_ids_isSet;
    bool m_unresolved_ids_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISimQuery)

#endif // OAISimQuery_H
