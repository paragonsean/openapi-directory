/**
 * BioLink API
 * API integration layer for linked biological objects.   __Source:__ https://github.com/biolink/biolink-api/
 *
 * The version of the OpenAPI document: 1.1.14
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISequencePosition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISequencePosition::OAISequencePosition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISequencePosition::OAISequencePosition() {
    this->initializeModel();
}

OAISequencePosition::~OAISequencePosition() {}

void OAISequencePosition::initializeModel() {

    m_position_isSet = false;
    m_position_isValid = false;

    m_reference_isSet = false;
    m_reference_isValid = false;
}

void OAISequencePosition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISequencePosition::fromJsonObject(QJsonObject json) {

    m_position_isValid = ::OpenAPI::fromJsonValue(m_position, json[QString("position")]);
    m_position_isSet = !json[QString("position")].isNull() && m_position_isValid;

    m_reference_isValid = ::OpenAPI::fromJsonValue(m_reference, json[QString("reference")]);
    m_reference_isSet = !json[QString("reference")].isNull() && m_reference_isValid;
}

QString OAISequencePosition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISequencePosition::asJsonObject() const {
    QJsonObject obj;
    if (m_position_isSet) {
        obj.insert(QString("position"), ::OpenAPI::toJsonValue(m_position));
    }
    if (m_reference_isSet) {
        obj.insert(QString("reference"), ::OpenAPI::toJsonValue(m_reference));
    }
    return obj;
}

qint32 OAISequencePosition::getPosition() const {
    return m_position;
}
void OAISequencePosition::setPosition(const qint32 &position) {
    m_position = position;
    m_position_isSet = true;
}

bool OAISequencePosition::is_position_Set() const{
    return m_position_isSet;
}

bool OAISequencePosition::is_position_Valid() const{
    return m_position_isValid;
}

QString OAISequencePosition::getReference() const {
    return m_reference;
}
void OAISequencePosition::setReference(const QString &reference) {
    m_reference = reference;
    m_reference_isSet = true;
}

bool OAISequencePosition::is_reference_Set() const{
    return m_reference_isSet;
}

bool OAISequencePosition::is_reference_Valid() const{
    return m_reference_isValid;
}

bool OAISequencePosition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_position_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reference_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISequencePosition::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
