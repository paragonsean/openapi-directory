/**
 * BioLink API
 * API integration layer for linked biological objects.   __Source:__ https://github.com/biolink/biolink-api/
 *
 * The version of the OpenAPI document: 1.1.14
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEdge.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEdge::OAIEdge(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEdge::OAIEdge() {
    this->initializeModel();
}

OAIEdge::~OAIEdge() {}

void OAIEdge::initializeModel() {

    m_meta_isSet = false;
    m_meta_isValid = false;

    m_obj_isSet = false;
    m_obj_isValid = false;

    m_pred_isSet = false;
    m_pred_isValid = false;

    m_sub_isSet = false;
    m_sub_isValid = false;
}

void OAIEdge::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEdge::fromJsonObject(QJsonObject json) {

    m_meta_isValid = ::OpenAPI::fromJsonValue(m_meta, json[QString("meta")]);
    m_meta_isSet = !json[QString("meta")].isNull() && m_meta_isValid;

    m_obj_isValid = ::OpenAPI::fromJsonValue(m_obj, json[QString("obj")]);
    m_obj_isSet = !json[QString("obj")].isNull() && m_obj_isValid;

    m_pred_isValid = ::OpenAPI::fromJsonValue(m_pred, json[QString("pred")]);
    m_pred_isSet = !json[QString("pred")].isNull() && m_pred_isValid;

    m_sub_isValid = ::OpenAPI::fromJsonValue(m_sub, json[QString("sub")]);
    m_sub_isSet = !json[QString("sub")].isNull() && m_sub_isValid;
}

QString OAIEdge::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEdge::asJsonObject() const {
    QJsonObject obj;
    if (m_meta_isSet) {
        obj.insert(QString("meta"), ::OpenAPI::toJsonValue(m_meta));
    }
    if (m_obj_isSet) {
        obj.insert(QString("obj"), ::OpenAPI::toJsonValue(m_obj));
    }
    if (m_pred_isSet) {
        obj.insert(QString("pred"), ::OpenAPI::toJsonValue(m_pred));
    }
    if (m_sub_isSet) {
        obj.insert(QString("sub"), ::OpenAPI::toJsonValue(m_sub));
    }
    return obj;
}

OAIObject OAIEdge::getMeta() const {
    return m_meta;
}
void OAIEdge::setMeta(const OAIObject &meta) {
    m_meta = meta;
    m_meta_isSet = true;
}

bool OAIEdge::is_meta_Set() const{
    return m_meta_isSet;
}

bool OAIEdge::is_meta_Valid() const{
    return m_meta_isValid;
}

QString OAIEdge::getObj() const {
    return m_obj;
}
void OAIEdge::setObj(const QString &obj) {
    m_obj = obj;
    m_obj_isSet = true;
}

bool OAIEdge::is_obj_Set() const{
    return m_obj_isSet;
}

bool OAIEdge::is_obj_Valid() const{
    return m_obj_isValid;
}

QString OAIEdge::getPred() const {
    return m_pred;
}
void OAIEdge::setPred(const QString &pred) {
    m_pred = pred;
    m_pred_isSet = true;
}

bool OAIEdge::is_pred_Set() const{
    return m_pred_isSet;
}

bool OAIEdge::is_pred_Valid() const{
    return m_pred_isValid;
}

QString OAIEdge::getSub() const {
    return m_sub;
}
void OAIEdge::setSub(const QString &sub) {
    m_sub = sub;
    m_sub_isSet = true;
}

bool OAIEdge::is_sub_Set() const{
    return m_sub_isSet;
}

bool OAIEdge::is_sub_Valid() const{
    return m_sub_isValid;
}

bool OAIEdge::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_meta_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_obj_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pred_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sub_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEdge::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
