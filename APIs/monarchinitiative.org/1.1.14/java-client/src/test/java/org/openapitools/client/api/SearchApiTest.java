/*
 * BioLink API
 * API integration layer for linked biological objects.   __Source:__ https://github.com/biolink/biolink-api/
 *
 * The version of the OpenAPI document: 1.1.14
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AutocompleteResults;
import org.openapitools.client.model.LayResults;
import org.openapitools.client.model.SearchResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SearchApi
 */
@Disabled
public class SearchApiTest {

    private final SearchApi api = new SearchApi();

    /**
     * Returns list of matching concepts or entities using lexical search
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAutocompleteTest() throws ApiException {
        String term = null;
        List<String> fq = null;
        List<String> category = null;
        List<String> prefix = null;
        Boolean includeEqs = null;
        List<String> boostFx = null;
        List<String> boostQ = null;
        List<String> taxon = null;
        Integer rows = null;
        String start = null;
        String highlightClass = null;
        String minMatch = null;
        Boolean excludeGroups = null;
        Boolean minimalTokenizer = null;
        AutocompleteResults response = api.getAutocomplete(term, fq, category, prefix, includeEqs, boostFx, boostQ, taxon, rows, start, highlightClass, minMatch, excludeGroups, minimalTokenizer);
        // TODO: test validations
    }

    /**
     * Returns list of matching concepts or entities using lexical search
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSearchEntitiesTest() throws ApiException {
        String term = null;
        List<String> fq = null;
        List<String> category = null;
        List<String> prefix = null;
        Boolean includeEqs = null;
        List<String> boostFx = null;
        List<String> boostQ = null;
        List<String> taxon = null;
        Integer rows = null;
        String start = null;
        String highlightClass = null;
        String minMatch = null;
        Boolean excludeGroups = null;
        Boolean minimalTokenizer = null;
        SearchResult response = api.getSearchEntities(term, fq, category, prefix, includeEqs, boostFx, boostQ, taxon, rows, start, highlightClass, minMatch, excludeGroups, minimalTokenizer);
        // TODO: test validations
    }

    /**
     * Returns list of matching concepts or entities using lexical search
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSearchHpoEntitiesTest() throws ApiException {
        String term = null;
        Integer rows = null;
        String start = null;
        String phenotypeGroup = null;
        String phenotypeGroupLabel = null;
        String anatomicalSystem = null;
        String anatomicalSystemLabel = null;
        String highlightClass = null;
        LayResults response = api.getSearchHpoEntities(term, rows, start, phenotypeGroup, phenotypeGroupLabel, anatomicalSystem, anatomicalSystemLabel, highlightClass);
        // TODO: test validations
    }

}
