/*
 * BioLink API
 * API integration layer for linked biological objects.   __Source:__ https://github.com/biolink/biolink-api/
 *
 * The version of the OpenAPI document: 1.1.14
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.EntityAnnotationResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for NlpAnnotateApi
 */
@Disabled
public class NlpAnnotateApiTest {

    private final NlpAnnotateApi api = new NlpAnnotateApi();

    /**
     * Annotate a given text using SciGraph annotator
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAnnotateTest() throws ApiException {
        String content = null;
        List<String> includeCategory = null;
        List<String> excludeCategory = null;
        String minLength = null;
        Boolean longestOnly = null;
        Boolean includeAbbreviation = null;
        Boolean includeAcronym = null;
        Boolean includeNumbers = null;
        api.getAnnotate(content, includeCategory, excludeCategory, minLength, longestOnly, includeAbbreviation, includeAcronym, includeNumbers);
        // TODO: test validations
    }

    /**
     * Annotate a given content using SciGraph annotator and get all entities from content
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAnnotateEntitiesTest() throws ApiException {
        String content = null;
        List<String> includeCategory = null;
        List<String> excludeCategory = null;
        String minLength = null;
        Boolean longestOnly = null;
        Boolean includeAbbreviation = null;
        Boolean includeAcronym = null;
        Boolean includeNumbers = null;
        EntityAnnotationResult response = api.getAnnotateEntities(content, includeCategory, excludeCategory, minLength, longestOnly, includeAbbreviation, includeAcronym, includeNumbers);
        // TODO: test validations
    }

    /**
     * Annotate a given text using SciGraph annotator
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postAnnotateTest() throws ApiException {
        String content = null;
        List<String> includeCategory = null;
        List<String> excludeCategory = null;
        String minLength = null;
        Boolean longestOnly = null;
        Boolean includeAbbreviation = null;
        Boolean includeAcronym = null;
        Boolean includeNumbers = null;
        api.postAnnotate(content, includeCategory, excludeCategory, minLength, longestOnly, includeAbbreviation, includeAcronym, includeNumbers);
        // TODO: test validations
    }

    /**
     * Annotate a given content using SciGraph annotator and get all entities from content
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postAnnotateEntitiesTest() throws ApiException {
        String content = null;
        List<String> includeCategory = null;
        List<String> excludeCategory = null;
        String minLength = null;
        Boolean longestOnly = null;
        Boolean includeAbbreviation = null;
        Boolean includeAcronym = null;
        Boolean includeNumbers = null;
        EntityAnnotationResult response = api.postAnnotateEntities(content, includeCategory, excludeCategory, minLength, longestOnly, includeAbbreviation, includeAcronym, includeNumbers);
        // TODO: test validations
    }

}
