/*
 * BioLink API
 * API integration layer for linked biological objects.   __Source:__ https://github.com/biolink/biolink-api/
 *
 * The version of the OpenAPI document: 1.1.14
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OntologyApi
 */
@Disabled
public class OntologyApiTest {

    private final OntologyApi api = new OntologyApi();

    /**
     * Returns meta data of an ontology subset (slim)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOntologySubsetTest() throws ApiException {
        String id = null;
        api.getOntologySubset(id);
        // TODO: test validations
    }

    /**
     * Returns meta data of an ontology term
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOntologyTermTest() throws ApiException {
        String id = null;
        api.getOntologyTerm(id);
        // TODO: test validations
    }

    /**
     * Returns graph of an ontology term
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOntologyTermGraphTest() throws ApiException {
        String id = null;
        String graphType = null;
        api.getOntologyTermGraph(id, graphType);
        // TODO: test validations
    }

    /**
     * Extract a subgraph from an ontology term
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOntologyTermSubgraphTest() throws ApiException {
        String id = null;
        List<String> cnode = null;
        Boolean includeAncestors = null;
        Boolean includeDescendants = null;
        List<String> relation = null;
        Boolean includeMeta = null;
        api.getOntologyTermSubgraph(id, cnode, includeAncestors, includeDescendants, relation, includeMeta);
        // TODO: test validations
    }

    /**
     * Returns subsets (slims) associated to an ontology term
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOntologyTermSubsetsTest() throws ApiException {
        String id = null;
        api.getOntologyTermSubsets(id);
        // TODO: test validations
    }

    /**
     * Returns the ancestor ontology terms shared by two ontology terms
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOntologyTermsSharedAncestorTest() throws ApiException {
        String subject = null;
        String _object = null;
        api.getOntologyTermsSharedAncestor(subject, _object);
        // TODO: test validations
    }

}
