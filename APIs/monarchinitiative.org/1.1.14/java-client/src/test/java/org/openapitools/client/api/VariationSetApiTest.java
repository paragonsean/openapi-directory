/*
 * BioLink API
 * API integration layer for linked biological objects.   __Source:__ https://github.com/biolink/biolink-api/
 *
 * The version of the OpenAPI document: 1.1.14
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Association;
import org.openapitools.client.model.PageOfVariantSets;
import org.openapitools.client.model.VariantSet;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VariationSetApi
 */
@Disabled
public class VariationSetApiTest {

    private final VariationSetApi api = new VariationSetApi();

    /**
     * Deletes variant set
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteVariantSetItemTest() throws ApiException {
        String id = null;
        api.deleteVariantSetItem(id);
        // TODO: test validations
    }

    /**
     * Returns list of matches
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getVariantAnalyzeTest() throws ApiException {
        String id = null;
        List<Association> response = api.getVariantAnalyze(id);
        // TODO: test validations
    }

    /**
     * Returns a variant set
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getVariantSetItemTest() throws ApiException {
        String id = null;
        VariantSet response = api.getVariantSetItem(id);
        // TODO: test validations
    }

    /**
     * Returns list of variant sets from a specified time period
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getVariantSetsArchiveCollectionTest() throws ApiException {
        Integer year = null;
        Integer month = null;
        Integer day = null;
        Integer page = null;
        Integer perPage = null;
        PageOfVariantSets response = api.getVariantSetsArchiveCollection(year, month, day, page, perPage);
        // TODO: test validations
    }

    /**
     * Returns list of variant sets
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getVariantSetsCollectionTest() throws ApiException {
        Integer page = null;
        Integer perPage = null;
        PageOfVariantSets response = api.getVariantSetsCollection(page, perPage);
        // TODO: test validations
    }

    /**
     * Creates a new variant set
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postVariantSetsCollectionTest() throws ApiException {
        VariantSet variantSet = null;
        api.postVariantSetsCollection(variantSet);
        // TODO: test validations
    }

    /**
     * Updates a variant set
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putVariantSetItemTest() throws ApiException {
        String id = null;
        VariantSet variantSet = null;
        api.putVariantSetItem(id, variantSet);
        // TODO: test validations
    }

}
