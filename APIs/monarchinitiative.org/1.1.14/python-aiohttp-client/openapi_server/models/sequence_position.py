# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SequencePosition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, position: int=None, reference: str=None):
        """SequencePosition - a model defined in OpenAPI

        :param position: The position of this SequencePosition.
        :param reference: The reference of this SequencePosition.
        """
        self.openapi_types = {
            'position': int,
            'reference': str
        }

        self.attribute_map = {
            'position': 'position',
            'reference': 'reference'
        }

        self._position = position
        self._reference = reference

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SequencePosition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SequencePosition of this SequencePosition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def position(self):
        """Gets the position of this SequencePosition.


        :return: The position of this SequencePosition.
        :rtype: int
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this SequencePosition.


        :param position: The position of this SequencePosition.
        :type position: int
        """

        self._position = position

    @property
    def reference(self):
        """Gets the reference of this SequencePosition.


        :return: The reference of this SequencePosition.
        :rtype: str
        """
        return self._reference

    @reference.setter
    def reference(self, reference):
        """Sets the reference of this SequencePosition.


        :param reference: The reference of this SequencePosition.
        :type reference: str
        """

        self._reference = reference
