# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SufficiencyOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, categorical_score: float=None, scaled_score: float=None, simple_score: float=None):
        """SufficiencyOutput - a model defined in OpenAPI

        :param categorical_score: The categorical_score of this SufficiencyOutput.
        :param scaled_score: The scaled_score of this SufficiencyOutput.
        :param simple_score: The simple_score of this SufficiencyOutput.
        """
        self.openapi_types = {
            'categorical_score': float,
            'scaled_score': float,
            'simple_score': float
        }

        self.attribute_map = {
            'categorical_score': 'categorical_score',
            'scaled_score': 'scaled_score',
            'simple_score': 'simple_score'
        }

        self._categorical_score = categorical_score
        self._scaled_score = scaled_score
        self._simple_score = simple_score

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SufficiencyOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SufficiencyOutput of this SufficiencyOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def categorical_score(self):
        """Gets the categorical_score of this SufficiencyOutput.

        categorical score

        :return: The categorical_score of this SufficiencyOutput.
        :rtype: float
        """
        return self._categorical_score

    @categorical_score.setter
    def categorical_score(self, categorical_score):
        """Sets the categorical_score of this SufficiencyOutput.

        categorical score

        :param categorical_score: The categorical_score of this SufficiencyOutput.
        :type categorical_score: float
        """

        self._categorical_score = categorical_score

    @property
    def scaled_score(self):
        """Gets the scaled_score of this SufficiencyOutput.

        scaled score

        :return: The scaled_score of this SufficiencyOutput.
        :rtype: float
        """
        return self._scaled_score

    @scaled_score.setter
    def scaled_score(self, scaled_score):
        """Sets the scaled_score of this SufficiencyOutput.

        scaled score

        :param scaled_score: The scaled_score of this SufficiencyOutput.
        :type scaled_score: float
        """

        self._scaled_score = scaled_score

    @property
    def simple_score(self):
        """Gets the simple_score of this SufficiencyOutput.

        simple score

        :return: The simple_score of this SufficiencyOutput.
        :rtype: float
        """
        return self._simple_score

    @simple_score.setter
    def simple_score(self, simple_score):
        """Sets the simple_score of this SufficiencyOutput.

        simple score

        :param simple_score: The simple_score of this SufficiencyOutput.
        :type simple_score: float
        """

        self._simple_score = simple_score
