# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.autocomplete_result import AutocompleteResult
from openapi_server import util


class AutocompleteResults(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, docs: List[AutocompleteResult]=None):
        """AutocompleteResults - a model defined in OpenAPI

        :param docs: The docs of this AutocompleteResults.
        """
        self.openapi_types = {
            'docs': List[AutocompleteResult]
        }

        self.attribute_map = {
            'docs': 'docs'
        }

        self._docs = docs

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AutocompleteResults':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AutocompleteResults of this AutocompleteResults.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def docs(self):
        """Gets the docs of this AutocompleteResults.

        list of AutocompleteResult docs

        :return: The docs of this AutocompleteResults.
        :rtype: List[AutocompleteResult]
        """
        return self._docs

    @docs.setter
    def docs(self, docs):
        """Sets the docs of this AutocompleteResults.

        list of AutocompleteResult docs

        :param docs: The docs of this AutocompleteResults.
        :type docs: List[AutocompleteResult]
        """

        self._docs = docs
