# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Token(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, categories: List[str]=None, id: str=None, terms: List[str]=None):
        """Token - a model defined in OpenAPI

        :param categories: The categories of this Token.
        :param id: The id of this Token.
        :param terms: The terms of this Token.
        """
        self.openapi_types = {
            'categories': List[str],
            'id': str,
            'terms': List[str]
        }

        self.attribute_map = {
            'categories': 'categories',
            'id': 'id',
            'terms': 'terms'
        }

        self._categories = categories
        self._id = id
        self._terms = terms

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Token':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Token of this Token.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def categories(self):
        """Gets the categories of this Token.

        entity categories

        :return: The categories of this Token.
        :rtype: List[str]
        """
        return self._categories

    @categories.setter
    def categories(self, categories):
        """Sets the categories of this Token.

        entity categories

        :param categories: The categories of this Token.
        :type categories: List[str]
        """

        self._categories = categories

    @property
    def id(self):
        """Gets the id of this Token.

        The CURIE for the entity or token

        :return: The id of this Token.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Token.

        The CURIE for the entity or token

        :param id: The id of this Token.
        :type id: str
        """

        self._id = id

    @property
    def terms(self):
        """Gets the terms of this Token.

        terms

        :return: The terms of this Token.
        :rtype: List[str]
        """
        return self._terms

    @terms.setter
    def terms(self, terms):
        """Sets the terms of this Token.

        terms

        :param terms: The terms of this Token.
        :type terms: List[str]
        """

        self._terms = terms
