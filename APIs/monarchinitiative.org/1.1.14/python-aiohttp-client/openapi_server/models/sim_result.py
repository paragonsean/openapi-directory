# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.sim_match import SimMatch
from openapi_server.models.sim_metadata import SimMetadata
from openapi_server.models.sim_query import SimQuery
from openapi_server import util


class SimResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, matches: List[SimMatch]=None, metadata: SimMetadata=None, query: SimQuery=None):
        """SimResult - a model defined in OpenAPI

        :param matches: The matches of this SimResult.
        :param metadata: The metadata of this SimResult.
        :param query: The query of this SimResult.
        """
        self.openapi_types = {
            'matches': List[SimMatch],
            'metadata': SimMetadata,
            'query': SimQuery
        }

        self.attribute_map = {
            'matches': 'matches',
            'metadata': 'metadata',
            'query': 'query'
        }

        self._matches = matches
        self._metadata = metadata
        self._query = query

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SimResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SimResult of this SimResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def matches(self):
        """Gets the matches of this SimResult.


        :return: The matches of this SimResult.
        :rtype: List[SimMatch]
        """
        return self._matches

    @matches.setter
    def matches(self, matches):
        """Sets the matches of this SimResult.


        :param matches: The matches of this SimResult.
        :type matches: List[SimMatch]
        """

        self._matches = matches

    @property
    def metadata(self):
        """Gets the metadata of this SimResult.


        :return: The metadata of this SimResult.
        :rtype: SimMetadata
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this SimResult.


        :param metadata: The metadata of this SimResult.
        :type metadata: SimMetadata
        """

        self._metadata = metadata

    @property
    def query(self):
        """Gets the query of this SimResult.


        :return: The query of this SimResult.
        :rtype: SimQuery
        """
        return self._query

    @query.setter
    def query(self, query):
        """Sets the query of this SimResult.


        :param query: The query of this SimResult.
        :type query: SimQuery
        """

        self._query = query
