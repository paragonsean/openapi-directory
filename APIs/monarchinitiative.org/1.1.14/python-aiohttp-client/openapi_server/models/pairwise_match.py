# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ic_node import IcNode
from openapi_server import util


class PairwiseMatch(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, lcs: IcNode=None, match: IcNode=None, reference: IcNode=None):
        """PairwiseMatch - a model defined in OpenAPI

        :param lcs: The lcs of this PairwiseMatch.
        :param match: The match of this PairwiseMatch.
        :param reference: The reference of this PairwiseMatch.
        """
        self.openapi_types = {
            'lcs': IcNode,
            'match': IcNode,
            'reference': IcNode
        }

        self.attribute_map = {
            'lcs': 'lcs',
            'match': 'match',
            'reference': 'reference'
        }

        self._lcs = lcs
        self._match = match
        self._reference = reference

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PairwiseMatch':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PairwiseMatch of this PairwiseMatch.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def lcs(self):
        """Gets the lcs of this PairwiseMatch.

        lowest common subsumer

        :return: The lcs of this PairwiseMatch.
        :rtype: IcNode
        """
        return self._lcs

    @lcs.setter
    def lcs(self, lcs):
        """Sets the lcs of this PairwiseMatch.

        lowest common subsumer

        :param lcs: The lcs of this PairwiseMatch.
        :type lcs: IcNode
        """

        self._lcs = lcs

    @property
    def match(self):
        """Gets the match of this PairwiseMatch.

        match id

        :return: The match of this PairwiseMatch.
        :rtype: IcNode
        """
        return self._match

    @match.setter
    def match(self, match):
        """Sets the match of this PairwiseMatch.

        match id

        :param match: The match of this PairwiseMatch.
        :type match: IcNode
        """

        self._match = match

    @property
    def reference(self):
        """Gets the reference of this PairwiseMatch.

        reference id

        :return: The reference of this PairwiseMatch.
        :rtype: IcNode
        """
        return self._reference

    @reference.setter
    def reference(self, reference):
        """Sets the reference of this PairwiseMatch.

        reference id

        :param reference: The reference of this PairwiseMatch.
        :type reference: IcNode
        """

        self._reference = reference
