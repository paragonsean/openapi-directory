/**
 * RentCast API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProperty_records_200_response_inner_propertyTaxes.h
 *
 * 
 */

#ifndef OAIProperty_records_200_response_inner_propertyTaxes_H
#define OAIProperty_records_200_response_inner_propertyTaxes_H

#include <QJsonObject>

#include "OAIProperty_records_200_response_inner_propertyTaxes_2019.h"
#include "OAIProperty_records_200_response_inner_propertyTaxes_2020.h"
#include "OAIProperty_records_200_response_inner_propertyTaxes_2021.h"
#include "OAIProperty_records_200_response_inner_propertyTaxes_2022.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIProperty_records_200_response_inner_propertyTaxes_2019;
class OAIProperty_records_200_response_inner_propertyTaxes_2020;
class OAIProperty_records_200_response_inner_propertyTaxes_2021;
class OAIProperty_records_200_response_inner_propertyTaxes_2022;

class OAIProperty_records_200_response_inner_propertyTaxes : public OAIObject {
public:
    OAIProperty_records_200_response_inner_propertyTaxes();
    OAIProperty_records_200_response_inner_propertyTaxes(QString json);
    ~OAIProperty_records_200_response_inner_propertyTaxes() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIProperty_records_200_response_inner_propertyTaxes_2019 getR2019() const;
    void setR2019(const OAIProperty_records_200_response_inner_propertyTaxes_2019 &r_2019);
    bool is_r_2019_Set() const;
    bool is_r_2019_Valid() const;

    OAIProperty_records_200_response_inner_propertyTaxes_2020 getR2020() const;
    void setR2020(const OAIProperty_records_200_response_inner_propertyTaxes_2020 &r_2020);
    bool is_r_2020_Set() const;
    bool is_r_2020_Valid() const;

    OAIProperty_records_200_response_inner_propertyTaxes_2021 getR2021() const;
    void setR2021(const OAIProperty_records_200_response_inner_propertyTaxes_2021 &r_2021);
    bool is_r_2021_Set() const;
    bool is_r_2021_Valid() const;

    OAIProperty_records_200_response_inner_propertyTaxes_2022 getR2022() const;
    void setR2022(const OAIProperty_records_200_response_inner_propertyTaxes_2022 &r_2022);
    bool is_r_2022_Set() const;
    bool is_r_2022_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIProperty_records_200_response_inner_propertyTaxes_2019 m_r_2019;
    bool m_r_2019_isSet;
    bool m_r_2019_isValid;

    OAIProperty_records_200_response_inner_propertyTaxes_2020 m_r_2020;
    bool m_r_2020_isSet;
    bool m_r_2020_isValid;

    OAIProperty_records_200_response_inner_propertyTaxes_2021 m_r_2021;
    bool m_r_2021_isSet;
    bool m_r_2021_isValid;

    OAIProperty_records_200_response_inner_propertyTaxes_2022 m_r_2022;
    bool m_r_2022_isSet;
    bool m_r_2022_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProperty_records_200_response_inner_propertyTaxes)

#endif // OAIProperty_records_200_response_inner_propertyTaxes_H
