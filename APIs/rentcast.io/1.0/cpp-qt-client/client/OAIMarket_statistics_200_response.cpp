/**
 * RentCast API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMarket_statistics_200_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMarket_statistics_200_response::OAIMarket_statistics_200_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMarket_statistics_200_response::OAIMarket_statistics_200_response() {
    this->initializeModel();
}

OAIMarket_statistics_200_response::~OAIMarket_statistics_200_response() {}

void OAIMarket_statistics_200_response::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_rental_data_isSet = false;
    m_rental_data_isValid = false;

    m_zip_code_isSet = false;
    m_zip_code_isValid = false;
}

void OAIMarket_statistics_200_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMarket_statistics_200_response::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_rental_data_isValid = ::OpenAPI::fromJsonValue(m_rental_data, json[QString("rentalData")]);
    m_rental_data_isSet = !json[QString("rentalData")].isNull() && m_rental_data_isValid;

    m_zip_code_isValid = ::OpenAPI::fromJsonValue(m_zip_code, json[QString("zipCode")]);
    m_zip_code_isSet = !json[QString("zipCode")].isNull() && m_zip_code_isValid;
}

QString OAIMarket_statistics_200_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMarket_statistics_200_response::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_rental_data.isSet()) {
        obj.insert(QString("rentalData"), ::OpenAPI::toJsonValue(m_rental_data));
    }
    if (m_zip_code_isSet) {
        obj.insert(QString("zipCode"), ::OpenAPI::toJsonValue(m_zip_code));
    }
    return obj;
}

QString OAIMarket_statistics_200_response::getId() const {
    return m_id;
}
void OAIMarket_statistics_200_response::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIMarket_statistics_200_response::is_id_Set() const{
    return m_id_isSet;
}

bool OAIMarket_statistics_200_response::is_id_Valid() const{
    return m_id_isValid;
}

OAIMarket_statistics_200_response_rentalData OAIMarket_statistics_200_response::getRentalData() const {
    return m_rental_data;
}
void OAIMarket_statistics_200_response::setRentalData(const OAIMarket_statistics_200_response_rentalData &rental_data) {
    m_rental_data = rental_data;
    m_rental_data_isSet = true;
}

bool OAIMarket_statistics_200_response::is_rental_data_Set() const{
    return m_rental_data_isSet;
}

bool OAIMarket_statistics_200_response::is_rental_data_Valid() const{
    return m_rental_data_isValid;
}

QString OAIMarket_statistics_200_response::getZipCode() const {
    return m_zip_code;
}
void OAIMarket_statistics_200_response::setZipCode(const QString &zip_code) {
    m_zip_code = zip_code;
    m_zip_code_isSet = true;
}

bool OAIMarket_statistics_200_response::is_zip_code_Set() const{
    return m_zip_code_isSet;
}

bool OAIMarket_statistics_200_response::is_zip_code_Valid() const{
    return m_zip_code_isValid;
}

bool OAIMarket_statistics_200_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rental_data.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_zip_code_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMarket_statistics_200_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
