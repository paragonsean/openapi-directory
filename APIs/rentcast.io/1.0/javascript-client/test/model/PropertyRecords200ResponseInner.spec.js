/**
 * RentCast API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.RentCastApi);
  }
}(this, function(expect, RentCastApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new RentCastApi.PropertyRecords200ResponseInner();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PropertyRecords200ResponseInner', function() {
    it('should create an instance of PropertyRecords200ResponseInner', function() {
      // uncomment below and update the code to test PropertyRecords200ResponseInner
      //var instance = new RentCastApi.PropertyRecords200ResponseInner();
      //expect(instance).to.be.a(RentCastApi.PropertyRecords200ResponseInner);
    });

    it('should have the property addressLine1 (base name: "addressLine1")', function() {
      // uncomment below and update the code to test the property addressLine1
      //var instance = new RentCastApi.PropertyRecords200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property assessorID (base name: "assessorID")', function() {
      // uncomment below and update the code to test the property assessorID
      //var instance = new RentCastApi.PropertyRecords200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property bathrooms (base name: "bathrooms")', function() {
      // uncomment below and update the code to test the property bathrooms
      //var instance = new RentCastApi.PropertyRecords200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property bedrooms (base name: "bedrooms")', function() {
      // uncomment below and update the code to test the property bedrooms
      //var instance = new RentCastApi.PropertyRecords200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property city (base name: "city")', function() {
      // uncomment below and update the code to test the property city
      //var instance = new RentCastApi.PropertyRecords200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property county (base name: "county")', function() {
      // uncomment below and update the code to test the property county
      //var instance = new RentCastApi.PropertyRecords200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property features (base name: "features")', function() {
      // uncomment below and update the code to test the property features
      //var instance = new RentCastApi.PropertyRecords200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property formattedAddress (base name: "formattedAddress")', function() {
      // uncomment below and update the code to test the property formattedAddress
      //var instance = new RentCastApi.PropertyRecords200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new RentCastApi.PropertyRecords200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property lastSaleDate (base name: "lastSaleDate")', function() {
      // uncomment below and update the code to test the property lastSaleDate
      //var instance = new RentCastApi.PropertyRecords200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property lastSalePrice (base name: "lastSalePrice")', function() {
      // uncomment below and update the code to test the property lastSalePrice
      //var instance = new RentCastApi.PropertyRecords200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property latitude (base name: "latitude")', function() {
      // uncomment below and update the code to test the property latitude
      //var instance = new RentCastApi.PropertyRecords200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property legalDescription (base name: "legalDescription")', function() {
      // uncomment below and update the code to test the property legalDescription
      //var instance = new RentCastApi.PropertyRecords200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property longitude (base name: "longitude")', function() {
      // uncomment below and update the code to test the property longitude
      //var instance = new RentCastApi.PropertyRecords200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property lotSize (base name: "lotSize")', function() {
      // uncomment below and update the code to test the property lotSize
      //var instance = new RentCastApi.PropertyRecords200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property owner (base name: "owner")', function() {
      // uncomment below and update the code to test the property owner
      //var instance = new RentCastApi.PropertyRecords200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property ownerOccupied (base name: "ownerOccupied")', function() {
      // uncomment below and update the code to test the property ownerOccupied
      //var instance = new RentCastApi.PropertyRecords200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property propertyTaxes (base name: "propertyTaxes")', function() {
      // uncomment below and update the code to test the property propertyTaxes
      //var instance = new RentCastApi.PropertyRecords200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property propertyType (base name: "propertyType")', function() {
      // uncomment below and update the code to test the property propertyType
      //var instance = new RentCastApi.PropertyRecords200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property squareFootage (base name: "squareFootage")', function() {
      // uncomment below and update the code to test the property squareFootage
      //var instance = new RentCastApi.PropertyRecords200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new RentCastApi.PropertyRecords200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property subdivision (base name: "subdivision")', function() {
      // uncomment below and update the code to test the property subdivision
      //var instance = new RentCastApi.PropertyRecords200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property taxAssessments (base name: "taxAssessments")', function() {
      // uncomment below and update the code to test the property taxAssessments
      //var instance = new RentCastApi.PropertyRecords200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property yearBuilt (base name: "yearBuilt")', function() {
      // uncomment below and update the code to test the property yearBuilt
      //var instance = new RentCastApi.PropertyRecords200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property zipCode (base name: "zipCode")', function() {
      // uncomment below and update the code to test the property zipCode
      //var instance = new RentCastApi.PropertyRecords200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property zoning (base name: "zoning")', function() {
      // uncomment below and update the code to test the property zoning
      //var instance = new RentCastApi.PropertyRecords200ResponseInner();
      //expect(instance).to.be();
    });

  });

}));
