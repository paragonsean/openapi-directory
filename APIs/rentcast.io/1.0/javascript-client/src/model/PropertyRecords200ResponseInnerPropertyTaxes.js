/**
 * RentCast API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PropertyRecords200ResponseInnerPropertyTaxes2019 from './PropertyRecords200ResponseInnerPropertyTaxes2019';
import PropertyRecords200ResponseInnerPropertyTaxes2020 from './PropertyRecords200ResponseInnerPropertyTaxes2020';
import PropertyRecords200ResponseInnerPropertyTaxes2021 from './PropertyRecords200ResponseInnerPropertyTaxes2021';
import PropertyRecords200ResponseInnerPropertyTaxes2022 from './PropertyRecords200ResponseInnerPropertyTaxes2022';

/**
 * The PropertyRecords200ResponseInnerPropertyTaxes model module.
 * @module model/PropertyRecords200ResponseInnerPropertyTaxes
 * @version 1.0
 */
class PropertyRecords200ResponseInnerPropertyTaxes {
    /**
     * Constructs a new <code>PropertyRecords200ResponseInnerPropertyTaxes</code>.
     * @alias module:model/PropertyRecords200ResponseInnerPropertyTaxes
     */
    constructor() { 
        
        PropertyRecords200ResponseInnerPropertyTaxes.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PropertyRecords200ResponseInnerPropertyTaxes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PropertyRecords200ResponseInnerPropertyTaxes} obj Optional instance to populate.
     * @return {module:model/PropertyRecords200ResponseInnerPropertyTaxes} The populated <code>PropertyRecords200ResponseInnerPropertyTaxes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PropertyRecords200ResponseInnerPropertyTaxes();

            if (data.hasOwnProperty('2019')) {
                obj['2019'] = PropertyRecords200ResponseInnerPropertyTaxes2019.constructFromObject(data['2019']);
            }
            if (data.hasOwnProperty('2020')) {
                obj['2020'] = PropertyRecords200ResponseInnerPropertyTaxes2020.constructFromObject(data['2020']);
            }
            if (data.hasOwnProperty('2021')) {
                obj['2021'] = PropertyRecords200ResponseInnerPropertyTaxes2021.constructFromObject(data['2021']);
            }
            if (data.hasOwnProperty('2022')) {
                obj['2022'] = PropertyRecords200ResponseInnerPropertyTaxes2022.constructFromObject(data['2022']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PropertyRecords200ResponseInnerPropertyTaxes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PropertyRecords200ResponseInnerPropertyTaxes</code>.
     */
    static validateJSON(data) {
        // validate the optional field `2019`
        if (data['2019']) { // data not null
          PropertyRecords200ResponseInnerPropertyTaxes2019.validateJSON(data['2019']);
        }
        // validate the optional field `2020`
        if (data['2020']) { // data not null
          PropertyRecords200ResponseInnerPropertyTaxes2020.validateJSON(data['2020']);
        }
        // validate the optional field `2021`
        if (data['2021']) { // data not null
          PropertyRecords200ResponseInnerPropertyTaxes2021.validateJSON(data['2021']);
        }
        // validate the optional field `2022`
        if (data['2022']) { // data not null
          PropertyRecords200ResponseInnerPropertyTaxes2022.validateJSON(data['2022']);
        }

        return true;
    }


}



/**
 * @member {module:model/PropertyRecords200ResponseInnerPropertyTaxes2019} 2019
 */
PropertyRecords200ResponseInnerPropertyTaxes.prototype['2019'] = undefined;

/**
 * @member {module:model/PropertyRecords200ResponseInnerPropertyTaxes2020} 2020
 */
PropertyRecords200ResponseInnerPropertyTaxes.prototype['2020'] = undefined;

/**
 * @member {module:model/PropertyRecords200ResponseInnerPropertyTaxes2021} 2021
 */
PropertyRecords200ResponseInnerPropertyTaxes.prototype['2021'] = undefined;

/**
 * @member {module:model/PropertyRecords200ResponseInnerPropertyTaxes2022} 2022
 */
PropertyRecords200ResponseInnerPropertyTaxes.prototype['2022'] = undefined;






export default PropertyRecords200ResponseInnerPropertyTaxes;

