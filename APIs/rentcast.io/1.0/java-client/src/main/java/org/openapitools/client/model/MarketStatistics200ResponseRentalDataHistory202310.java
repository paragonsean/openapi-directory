/*
 * RentCast API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.MarketStatistics200ResponseRentalDataDataByBedroomsInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * MarketStatistics200ResponseRentalDataHistory202310
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:20:12.015833-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class MarketStatistics200ResponseRentalDataHistory202310 {
  public static final String SERIALIZED_NAME_AVERAGE_RENT = "averageRent";
  @SerializedName(SERIALIZED_NAME_AVERAGE_RENT)
  private Integer averageRent = 0;

  public static final String SERIALIZED_NAME_DATA_BY_BEDROOMS = "dataByBedrooms";
  @SerializedName(SERIALIZED_NAME_DATA_BY_BEDROOMS)
  private List<MarketStatistics200ResponseRentalDataDataByBedroomsInner> dataByBedrooms = new ArrayList<>();

  public static final String SERIALIZED_NAME_MAX_RENT = "maxRent";
  @SerializedName(SERIALIZED_NAME_MAX_RENT)
  private Integer maxRent = 0;

  public static final String SERIALIZED_NAME_MIN_RENT = "minRent";
  @SerializedName(SERIALIZED_NAME_MIN_RENT)
  private Integer minRent = 0;

  public static final String SERIALIZED_NAME_TOTAL_LISTINGS = "totalListings";
  @SerializedName(SERIALIZED_NAME_TOTAL_LISTINGS)
  private Integer totalListings = 0;

  public MarketStatistics200ResponseRentalDataHistory202310() {
  }

  public MarketStatistics200ResponseRentalDataHistory202310 averageRent(Integer averageRent) {
    this.averageRent = averageRent;
    return this;
  }

  /**
   * Get averageRent
   * @return averageRent
   */
  @javax.annotation.Nullable
  public Integer getAverageRent() {
    return averageRent;
  }

  public void setAverageRent(Integer averageRent) {
    this.averageRent = averageRent;
  }


  public MarketStatistics200ResponseRentalDataHistory202310 dataByBedrooms(List<MarketStatistics200ResponseRentalDataDataByBedroomsInner> dataByBedrooms) {
    this.dataByBedrooms = dataByBedrooms;
    return this;
  }

  public MarketStatistics200ResponseRentalDataHistory202310 addDataByBedroomsItem(MarketStatistics200ResponseRentalDataDataByBedroomsInner dataByBedroomsItem) {
    if (this.dataByBedrooms == null) {
      this.dataByBedrooms = new ArrayList<>();
    }
    this.dataByBedrooms.add(dataByBedroomsItem);
    return this;
  }

  /**
   * Get dataByBedrooms
   * @return dataByBedrooms
   */
  @javax.annotation.Nullable
  public List<MarketStatistics200ResponseRentalDataDataByBedroomsInner> getDataByBedrooms() {
    return dataByBedrooms;
  }

  public void setDataByBedrooms(List<MarketStatistics200ResponseRentalDataDataByBedroomsInner> dataByBedrooms) {
    this.dataByBedrooms = dataByBedrooms;
  }


  public MarketStatistics200ResponseRentalDataHistory202310 maxRent(Integer maxRent) {
    this.maxRent = maxRent;
    return this;
  }

  /**
   * Get maxRent
   * @return maxRent
   */
  @javax.annotation.Nullable
  public Integer getMaxRent() {
    return maxRent;
  }

  public void setMaxRent(Integer maxRent) {
    this.maxRent = maxRent;
  }


  public MarketStatistics200ResponseRentalDataHistory202310 minRent(Integer minRent) {
    this.minRent = minRent;
    return this;
  }

  /**
   * Get minRent
   * @return minRent
   */
  @javax.annotation.Nullable
  public Integer getMinRent() {
    return minRent;
  }

  public void setMinRent(Integer minRent) {
    this.minRent = minRent;
  }


  public MarketStatistics200ResponseRentalDataHistory202310 totalListings(Integer totalListings) {
    this.totalListings = totalListings;
    return this;
  }

  /**
   * Get totalListings
   * @return totalListings
   */
  @javax.annotation.Nullable
  public Integer getTotalListings() {
    return totalListings;
  }

  public void setTotalListings(Integer totalListings) {
    this.totalListings = totalListings;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MarketStatistics200ResponseRentalDataHistory202310 marketStatistics200ResponseRentalDataHistory202310 = (MarketStatistics200ResponseRentalDataHistory202310) o;
    return Objects.equals(this.averageRent, marketStatistics200ResponseRentalDataHistory202310.averageRent) &&
        Objects.equals(this.dataByBedrooms, marketStatistics200ResponseRentalDataHistory202310.dataByBedrooms) &&
        Objects.equals(this.maxRent, marketStatistics200ResponseRentalDataHistory202310.maxRent) &&
        Objects.equals(this.minRent, marketStatistics200ResponseRentalDataHistory202310.minRent) &&
        Objects.equals(this.totalListings, marketStatistics200ResponseRentalDataHistory202310.totalListings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(averageRent, dataByBedrooms, maxRent, minRent, totalListings);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MarketStatistics200ResponseRentalDataHistory202310 {\n");
    sb.append("    averageRent: ").append(toIndentedString(averageRent)).append("\n");
    sb.append("    dataByBedrooms: ").append(toIndentedString(dataByBedrooms)).append("\n");
    sb.append("    maxRent: ").append(toIndentedString(maxRent)).append("\n");
    sb.append("    minRent: ").append(toIndentedString(minRent)).append("\n");
    sb.append("    totalListings: ").append(toIndentedString(totalListings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("averageRent");
    openapiFields.add("dataByBedrooms");
    openapiFields.add("maxRent");
    openapiFields.add("minRent");
    openapiFields.add("totalListings");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to MarketStatistics200ResponseRentalDataHistory202310
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MarketStatistics200ResponseRentalDataHistory202310.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MarketStatistics200ResponseRentalDataHistory202310 is not found in the empty JSON string", MarketStatistics200ResponseRentalDataHistory202310.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MarketStatistics200ResponseRentalDataHistory202310.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MarketStatistics200ResponseRentalDataHistory202310` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("dataByBedrooms") != null && !jsonObj.get("dataByBedrooms").isJsonNull()) {
        JsonArray jsonArraydataByBedrooms = jsonObj.getAsJsonArray("dataByBedrooms");
        if (jsonArraydataByBedrooms != null) {
          // ensure the json data is an array
          if (!jsonObj.get("dataByBedrooms").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `dataByBedrooms` to be an array in the JSON string but got `%s`", jsonObj.get("dataByBedrooms").toString()));
          }

          // validate the optional field `dataByBedrooms` (array)
          for (int i = 0; i < jsonArraydataByBedrooms.size(); i++) {
            MarketStatistics200ResponseRentalDataDataByBedroomsInner.validateJsonElement(jsonArraydataByBedrooms.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MarketStatistics200ResponseRentalDataHistory202310.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MarketStatistics200ResponseRentalDataHistory202310' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MarketStatistics200ResponseRentalDataHistory202310> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MarketStatistics200ResponseRentalDataHistory202310.class));

       return (TypeAdapter<T>) new TypeAdapter<MarketStatistics200ResponseRentalDataHistory202310>() {
           @Override
           public void write(JsonWriter out, MarketStatistics200ResponseRentalDataHistory202310 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MarketStatistics200ResponseRentalDataHistory202310 read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of MarketStatistics200ResponseRentalDataHistory202310 given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MarketStatistics200ResponseRentalDataHistory202310
   * @throws IOException if the JSON string is invalid with respect to MarketStatistics200ResponseRentalDataHistory202310
   */
  public static MarketStatistics200ResponseRentalDataHistory202310 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MarketStatistics200ResponseRentalDataHistory202310.class);
  }

  /**
   * Convert an instance of MarketStatistics200ResponseRentalDataHistory202310 to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

