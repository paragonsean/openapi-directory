# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PropertyRecordsRandom200ResponseInnerPropertyTaxes2022(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, total: int=0):
        """PropertyRecordsRandom200ResponseInnerPropertyTaxes2022 - a model defined in OpenAPI

        :param total: The total of this PropertyRecordsRandom200ResponseInnerPropertyTaxes2022.
        """
        self.openapi_types = {
            'total': int
        }

        self.attribute_map = {
            'total': 'total'
        }

        self._total = total

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PropertyRecordsRandom200ResponseInnerPropertyTaxes2022':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The property_records_random_200_response_inner_propertyTaxes_2022 of this PropertyRecordsRandom200ResponseInnerPropertyTaxes2022.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def total(self):
        """Gets the total of this PropertyRecordsRandom200ResponseInnerPropertyTaxes2022.


        :return: The total of this PropertyRecordsRandom200ResponseInnerPropertyTaxes2022.
        :rtype: int
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this PropertyRecordsRandom200ResponseInnerPropertyTaxes2022.


        :param total: The total of this PropertyRecordsRandom200ResponseInnerPropertyTaxes2022.
        :type total: int
        """

        self._total = total
