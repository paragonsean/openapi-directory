# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MarketStatistics200ResponseRentalDataDataByBedroomsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, average_rent: int=0, bedrooms: int=0, max_rent: int=0, min_rent: int=0, total_listings: int=0):
        """MarketStatistics200ResponseRentalDataDataByBedroomsInner - a model defined in OpenAPI

        :param average_rent: The average_rent of this MarketStatistics200ResponseRentalDataDataByBedroomsInner.
        :param bedrooms: The bedrooms of this MarketStatistics200ResponseRentalDataDataByBedroomsInner.
        :param max_rent: The max_rent of this MarketStatistics200ResponseRentalDataDataByBedroomsInner.
        :param min_rent: The min_rent of this MarketStatistics200ResponseRentalDataDataByBedroomsInner.
        :param total_listings: The total_listings of this MarketStatistics200ResponseRentalDataDataByBedroomsInner.
        """
        self.openapi_types = {
            'average_rent': int,
            'bedrooms': int,
            'max_rent': int,
            'min_rent': int,
            'total_listings': int
        }

        self.attribute_map = {
            'average_rent': 'averageRent',
            'bedrooms': 'bedrooms',
            'max_rent': 'maxRent',
            'min_rent': 'minRent',
            'total_listings': 'totalListings'
        }

        self._average_rent = average_rent
        self._bedrooms = bedrooms
        self._max_rent = max_rent
        self._min_rent = min_rent
        self._total_listings = total_listings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MarketStatistics200ResponseRentalDataDataByBedroomsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The market_statistics_200_response_rentalData_dataByBedrooms_inner of this MarketStatistics200ResponseRentalDataDataByBedroomsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def average_rent(self):
        """Gets the average_rent of this MarketStatistics200ResponseRentalDataDataByBedroomsInner.


        :return: The average_rent of this MarketStatistics200ResponseRentalDataDataByBedroomsInner.
        :rtype: int
        """
        return self._average_rent

    @average_rent.setter
    def average_rent(self, average_rent):
        """Sets the average_rent of this MarketStatistics200ResponseRentalDataDataByBedroomsInner.


        :param average_rent: The average_rent of this MarketStatistics200ResponseRentalDataDataByBedroomsInner.
        :type average_rent: int
        """

        self._average_rent = average_rent

    @property
    def bedrooms(self):
        """Gets the bedrooms of this MarketStatistics200ResponseRentalDataDataByBedroomsInner.


        :return: The bedrooms of this MarketStatistics200ResponseRentalDataDataByBedroomsInner.
        :rtype: int
        """
        return self._bedrooms

    @bedrooms.setter
    def bedrooms(self, bedrooms):
        """Sets the bedrooms of this MarketStatistics200ResponseRentalDataDataByBedroomsInner.


        :param bedrooms: The bedrooms of this MarketStatistics200ResponseRentalDataDataByBedroomsInner.
        :type bedrooms: int
        """

        self._bedrooms = bedrooms

    @property
    def max_rent(self):
        """Gets the max_rent of this MarketStatistics200ResponseRentalDataDataByBedroomsInner.


        :return: The max_rent of this MarketStatistics200ResponseRentalDataDataByBedroomsInner.
        :rtype: int
        """
        return self._max_rent

    @max_rent.setter
    def max_rent(self, max_rent):
        """Sets the max_rent of this MarketStatistics200ResponseRentalDataDataByBedroomsInner.


        :param max_rent: The max_rent of this MarketStatistics200ResponseRentalDataDataByBedroomsInner.
        :type max_rent: int
        """

        self._max_rent = max_rent

    @property
    def min_rent(self):
        """Gets the min_rent of this MarketStatistics200ResponseRentalDataDataByBedroomsInner.


        :return: The min_rent of this MarketStatistics200ResponseRentalDataDataByBedroomsInner.
        :rtype: int
        """
        return self._min_rent

    @min_rent.setter
    def min_rent(self, min_rent):
        """Sets the min_rent of this MarketStatistics200ResponseRentalDataDataByBedroomsInner.


        :param min_rent: The min_rent of this MarketStatistics200ResponseRentalDataDataByBedroomsInner.
        :type min_rent: int
        """

        self._min_rent = min_rent

    @property
    def total_listings(self):
        """Gets the total_listings of this MarketStatistics200ResponseRentalDataDataByBedroomsInner.


        :return: The total_listings of this MarketStatistics200ResponseRentalDataDataByBedroomsInner.
        :rtype: int
        """
        return self._total_listings

    @total_listings.setter
    def total_listings(self, total_listings):
        """Sets the total_listings of this MarketStatistics200ResponseRentalDataDataByBedroomsInner.


        :param total_listings: The total_listings of this MarketStatistics200ResponseRentalDataDataByBedroomsInner.
        :type total_listings: int
        """

        self._total_listings = total_listings
