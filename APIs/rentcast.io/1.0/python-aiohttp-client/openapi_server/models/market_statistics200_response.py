# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.market_statistics200_response_rental_data import MarketStatistics200ResponseRentalData
from openapi_server import util


class MarketStatistics200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, rental_data: MarketStatistics200ResponseRentalData=None, zip_code: str=None):
        """MarketStatistics200Response - a model defined in OpenAPI

        :param id: The id of this MarketStatistics200Response.
        :param rental_data: The rental_data of this MarketStatistics200Response.
        :param zip_code: The zip_code of this MarketStatistics200Response.
        """
        self.openapi_types = {
            'id': str,
            'rental_data': MarketStatistics200ResponseRentalData,
            'zip_code': str
        }

        self.attribute_map = {
            'id': 'id',
            'rental_data': 'rentalData',
            'zip_code': 'zipCode'
        }

        self._id = id
        self._rental_data = rental_data
        self._zip_code = zip_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MarketStatistics200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The market_statistics_200_response of this MarketStatistics200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this MarketStatistics200Response.


        :return: The id of this MarketStatistics200Response.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this MarketStatistics200Response.


        :param id: The id of this MarketStatistics200Response.
        :type id: str
        """

        self._id = id

    @property
    def rental_data(self):
        """Gets the rental_data of this MarketStatistics200Response.


        :return: The rental_data of this MarketStatistics200Response.
        :rtype: MarketStatistics200ResponseRentalData
        """
        return self._rental_data

    @rental_data.setter
    def rental_data(self, rental_data):
        """Sets the rental_data of this MarketStatistics200Response.


        :param rental_data: The rental_data of this MarketStatistics200Response.
        :type rental_data: MarketStatistics200ResponseRentalData
        """

        self._rental_data = rental_data

    @property
    def zip_code(self):
        """Gets the zip_code of this MarketStatistics200Response.


        :return: The zip_code of this MarketStatistics200Response.
        :rtype: str
        """
        return self._zip_code

    @zip_code.setter
    def zip_code(self, zip_code):
        """Sets the zip_code of this MarketStatistics200Response.


        :param zip_code: The zip_code of this MarketStatistics200Response.
        :type zip_code: str
        """

        self._zip_code = zip_code
