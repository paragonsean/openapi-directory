# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.property_records_random200_response_inner_features import PropertyRecordsRandom200ResponseInnerFeatures
from openapi_server.models.property_records_random200_response_inner_owner import PropertyRecordsRandom200ResponseInnerOwner
from openapi_server.models.property_records_random200_response_inner_property_taxes import PropertyRecordsRandom200ResponseInnerPropertyTaxes
from openapi_server.models.property_records_random200_response_inner_tax_assessments import PropertyRecordsRandom200ResponseInnerTaxAssessments
from openapi_server import util


class PropertyRecordsRandom200ResponseInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address_line1: str=None, assessor_id: str=None, bathrooms: float=0, bedrooms: int=0, city: str=None, county: str=None, features: PropertyRecordsRandom200ResponseInnerFeatures=None, formatted_address: str=None, id: str=None, last_sale_date: str=None, last_sale_price: int=0, latitude: float=0, legal_description: str=None, longitude: float=0, lot_size: int=0, owner: PropertyRecordsRandom200ResponseInnerOwner=None, owner_occupied: bool=True, property_taxes: PropertyRecordsRandom200ResponseInnerPropertyTaxes=None, property_type: str=None, square_footage: int=0, state: str=None, subdivision: str=None, tax_assessments: PropertyRecordsRandom200ResponseInnerTaxAssessments=None, year_built: int=0, zip_code: str=None, zoning: str=None):
        """PropertyRecordsRandom200ResponseInner - a model defined in OpenAPI

        :param address_line1: The address_line1 of this PropertyRecordsRandom200ResponseInner.
        :param assessor_id: The assessor_id of this PropertyRecordsRandom200ResponseInner.
        :param bathrooms: The bathrooms of this PropertyRecordsRandom200ResponseInner.
        :param bedrooms: The bedrooms of this PropertyRecordsRandom200ResponseInner.
        :param city: The city of this PropertyRecordsRandom200ResponseInner.
        :param county: The county of this PropertyRecordsRandom200ResponseInner.
        :param features: The features of this PropertyRecordsRandom200ResponseInner.
        :param formatted_address: The formatted_address of this PropertyRecordsRandom200ResponseInner.
        :param id: The id of this PropertyRecordsRandom200ResponseInner.
        :param last_sale_date: The last_sale_date of this PropertyRecordsRandom200ResponseInner.
        :param last_sale_price: The last_sale_price of this PropertyRecordsRandom200ResponseInner.
        :param latitude: The latitude of this PropertyRecordsRandom200ResponseInner.
        :param legal_description: The legal_description of this PropertyRecordsRandom200ResponseInner.
        :param longitude: The longitude of this PropertyRecordsRandom200ResponseInner.
        :param lot_size: The lot_size of this PropertyRecordsRandom200ResponseInner.
        :param owner: The owner of this PropertyRecordsRandom200ResponseInner.
        :param owner_occupied: The owner_occupied of this PropertyRecordsRandom200ResponseInner.
        :param property_taxes: The property_taxes of this PropertyRecordsRandom200ResponseInner.
        :param property_type: The property_type of this PropertyRecordsRandom200ResponseInner.
        :param square_footage: The square_footage of this PropertyRecordsRandom200ResponseInner.
        :param state: The state of this PropertyRecordsRandom200ResponseInner.
        :param subdivision: The subdivision of this PropertyRecordsRandom200ResponseInner.
        :param tax_assessments: The tax_assessments of this PropertyRecordsRandom200ResponseInner.
        :param year_built: The year_built of this PropertyRecordsRandom200ResponseInner.
        :param zip_code: The zip_code of this PropertyRecordsRandom200ResponseInner.
        :param zoning: The zoning of this PropertyRecordsRandom200ResponseInner.
        """
        self.openapi_types = {
            'address_line1': str,
            'assessor_id': str,
            'bathrooms': float,
            'bedrooms': int,
            'city': str,
            'county': str,
            'features': PropertyRecordsRandom200ResponseInnerFeatures,
            'formatted_address': str,
            'id': str,
            'last_sale_date': str,
            'last_sale_price': int,
            'latitude': float,
            'legal_description': str,
            'longitude': float,
            'lot_size': int,
            'owner': PropertyRecordsRandom200ResponseInnerOwner,
            'owner_occupied': bool,
            'property_taxes': PropertyRecordsRandom200ResponseInnerPropertyTaxes,
            'property_type': str,
            'square_footage': int,
            'state': str,
            'subdivision': str,
            'tax_assessments': PropertyRecordsRandom200ResponseInnerTaxAssessments,
            'year_built': int,
            'zip_code': str,
            'zoning': str
        }

        self.attribute_map = {
            'address_line1': 'addressLine1',
            'assessor_id': 'assessorID',
            'bathrooms': 'bathrooms',
            'bedrooms': 'bedrooms',
            'city': 'city',
            'county': 'county',
            'features': 'features',
            'formatted_address': 'formattedAddress',
            'id': 'id',
            'last_sale_date': 'lastSaleDate',
            'last_sale_price': 'lastSalePrice',
            'latitude': 'latitude',
            'legal_description': 'legalDescription',
            'longitude': 'longitude',
            'lot_size': 'lotSize',
            'owner': 'owner',
            'owner_occupied': 'ownerOccupied',
            'property_taxes': 'propertyTaxes',
            'property_type': 'propertyType',
            'square_footage': 'squareFootage',
            'state': 'state',
            'subdivision': 'subdivision',
            'tax_assessments': 'taxAssessments',
            'year_built': 'yearBuilt',
            'zip_code': 'zipCode',
            'zoning': 'zoning'
        }

        self._address_line1 = address_line1
        self._assessor_id = assessor_id
        self._bathrooms = bathrooms
        self._bedrooms = bedrooms
        self._city = city
        self._county = county
        self._features = features
        self._formatted_address = formatted_address
        self._id = id
        self._last_sale_date = last_sale_date
        self._last_sale_price = last_sale_price
        self._latitude = latitude
        self._legal_description = legal_description
        self._longitude = longitude
        self._lot_size = lot_size
        self._owner = owner
        self._owner_occupied = owner_occupied
        self._property_taxes = property_taxes
        self._property_type = property_type
        self._square_footage = square_footage
        self._state = state
        self._subdivision = subdivision
        self._tax_assessments = tax_assessments
        self._year_built = year_built
        self._zip_code = zip_code
        self._zoning = zoning

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PropertyRecordsRandom200ResponseInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The property_records_random_200_response_inner of this PropertyRecordsRandom200ResponseInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address_line1(self):
        """Gets the address_line1 of this PropertyRecordsRandom200ResponseInner.


        :return: The address_line1 of this PropertyRecordsRandom200ResponseInner.
        :rtype: str
        """
        return self._address_line1

    @address_line1.setter
    def address_line1(self, address_line1):
        """Sets the address_line1 of this PropertyRecordsRandom200ResponseInner.


        :param address_line1: The address_line1 of this PropertyRecordsRandom200ResponseInner.
        :type address_line1: str
        """

        self._address_line1 = address_line1

    @property
    def assessor_id(self):
        """Gets the assessor_id of this PropertyRecordsRandom200ResponseInner.


        :return: The assessor_id of this PropertyRecordsRandom200ResponseInner.
        :rtype: str
        """
        return self._assessor_id

    @assessor_id.setter
    def assessor_id(self, assessor_id):
        """Sets the assessor_id of this PropertyRecordsRandom200ResponseInner.


        :param assessor_id: The assessor_id of this PropertyRecordsRandom200ResponseInner.
        :type assessor_id: str
        """

        self._assessor_id = assessor_id

    @property
    def bathrooms(self):
        """Gets the bathrooms of this PropertyRecordsRandom200ResponseInner.


        :return: The bathrooms of this PropertyRecordsRandom200ResponseInner.
        :rtype: float
        """
        return self._bathrooms

    @bathrooms.setter
    def bathrooms(self, bathrooms):
        """Sets the bathrooms of this PropertyRecordsRandom200ResponseInner.


        :param bathrooms: The bathrooms of this PropertyRecordsRandom200ResponseInner.
        :type bathrooms: float
        """

        self._bathrooms = bathrooms

    @property
    def bedrooms(self):
        """Gets the bedrooms of this PropertyRecordsRandom200ResponseInner.


        :return: The bedrooms of this PropertyRecordsRandom200ResponseInner.
        :rtype: int
        """
        return self._bedrooms

    @bedrooms.setter
    def bedrooms(self, bedrooms):
        """Sets the bedrooms of this PropertyRecordsRandom200ResponseInner.


        :param bedrooms: The bedrooms of this PropertyRecordsRandom200ResponseInner.
        :type bedrooms: int
        """

        self._bedrooms = bedrooms

    @property
    def city(self):
        """Gets the city of this PropertyRecordsRandom200ResponseInner.


        :return: The city of this PropertyRecordsRandom200ResponseInner.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this PropertyRecordsRandom200ResponseInner.


        :param city: The city of this PropertyRecordsRandom200ResponseInner.
        :type city: str
        """

        self._city = city

    @property
    def county(self):
        """Gets the county of this PropertyRecordsRandom200ResponseInner.


        :return: The county of this PropertyRecordsRandom200ResponseInner.
        :rtype: str
        """
        return self._county

    @county.setter
    def county(self, county):
        """Sets the county of this PropertyRecordsRandom200ResponseInner.


        :param county: The county of this PropertyRecordsRandom200ResponseInner.
        :type county: str
        """

        self._county = county

    @property
    def features(self):
        """Gets the features of this PropertyRecordsRandom200ResponseInner.


        :return: The features of this PropertyRecordsRandom200ResponseInner.
        :rtype: PropertyRecordsRandom200ResponseInnerFeatures
        """
        return self._features

    @features.setter
    def features(self, features):
        """Sets the features of this PropertyRecordsRandom200ResponseInner.


        :param features: The features of this PropertyRecordsRandom200ResponseInner.
        :type features: PropertyRecordsRandom200ResponseInnerFeatures
        """

        self._features = features

    @property
    def formatted_address(self):
        """Gets the formatted_address of this PropertyRecordsRandom200ResponseInner.


        :return: The formatted_address of this PropertyRecordsRandom200ResponseInner.
        :rtype: str
        """
        return self._formatted_address

    @formatted_address.setter
    def formatted_address(self, formatted_address):
        """Sets the formatted_address of this PropertyRecordsRandom200ResponseInner.


        :param formatted_address: The formatted_address of this PropertyRecordsRandom200ResponseInner.
        :type formatted_address: str
        """

        self._formatted_address = formatted_address

    @property
    def id(self):
        """Gets the id of this PropertyRecordsRandom200ResponseInner.


        :return: The id of this PropertyRecordsRandom200ResponseInner.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PropertyRecordsRandom200ResponseInner.


        :param id: The id of this PropertyRecordsRandom200ResponseInner.
        :type id: str
        """

        self._id = id

    @property
    def last_sale_date(self):
        """Gets the last_sale_date of this PropertyRecordsRandom200ResponseInner.


        :return: The last_sale_date of this PropertyRecordsRandom200ResponseInner.
        :rtype: str
        """
        return self._last_sale_date

    @last_sale_date.setter
    def last_sale_date(self, last_sale_date):
        """Sets the last_sale_date of this PropertyRecordsRandom200ResponseInner.


        :param last_sale_date: The last_sale_date of this PropertyRecordsRandom200ResponseInner.
        :type last_sale_date: str
        """

        self._last_sale_date = last_sale_date

    @property
    def last_sale_price(self):
        """Gets the last_sale_price of this PropertyRecordsRandom200ResponseInner.


        :return: The last_sale_price of this PropertyRecordsRandom200ResponseInner.
        :rtype: int
        """
        return self._last_sale_price

    @last_sale_price.setter
    def last_sale_price(self, last_sale_price):
        """Sets the last_sale_price of this PropertyRecordsRandom200ResponseInner.


        :param last_sale_price: The last_sale_price of this PropertyRecordsRandom200ResponseInner.
        :type last_sale_price: int
        """

        self._last_sale_price = last_sale_price

    @property
    def latitude(self):
        """Gets the latitude of this PropertyRecordsRandom200ResponseInner.


        :return: The latitude of this PropertyRecordsRandom200ResponseInner.
        :rtype: float
        """
        return self._latitude

    @latitude.setter
    def latitude(self, latitude):
        """Sets the latitude of this PropertyRecordsRandom200ResponseInner.


        :param latitude: The latitude of this PropertyRecordsRandom200ResponseInner.
        :type latitude: float
        """

        self._latitude = latitude

    @property
    def legal_description(self):
        """Gets the legal_description of this PropertyRecordsRandom200ResponseInner.


        :return: The legal_description of this PropertyRecordsRandom200ResponseInner.
        :rtype: str
        """
        return self._legal_description

    @legal_description.setter
    def legal_description(self, legal_description):
        """Sets the legal_description of this PropertyRecordsRandom200ResponseInner.


        :param legal_description: The legal_description of this PropertyRecordsRandom200ResponseInner.
        :type legal_description: str
        """

        self._legal_description = legal_description

    @property
    def longitude(self):
        """Gets the longitude of this PropertyRecordsRandom200ResponseInner.


        :return: The longitude of this PropertyRecordsRandom200ResponseInner.
        :rtype: float
        """
        return self._longitude

    @longitude.setter
    def longitude(self, longitude):
        """Sets the longitude of this PropertyRecordsRandom200ResponseInner.


        :param longitude: The longitude of this PropertyRecordsRandom200ResponseInner.
        :type longitude: float
        """

        self._longitude = longitude

    @property
    def lot_size(self):
        """Gets the lot_size of this PropertyRecordsRandom200ResponseInner.


        :return: The lot_size of this PropertyRecordsRandom200ResponseInner.
        :rtype: int
        """
        return self._lot_size

    @lot_size.setter
    def lot_size(self, lot_size):
        """Sets the lot_size of this PropertyRecordsRandom200ResponseInner.


        :param lot_size: The lot_size of this PropertyRecordsRandom200ResponseInner.
        :type lot_size: int
        """

        self._lot_size = lot_size

    @property
    def owner(self):
        """Gets the owner of this PropertyRecordsRandom200ResponseInner.


        :return: The owner of this PropertyRecordsRandom200ResponseInner.
        :rtype: PropertyRecordsRandom200ResponseInnerOwner
        """
        return self._owner

    @owner.setter
    def owner(self, owner):
        """Sets the owner of this PropertyRecordsRandom200ResponseInner.


        :param owner: The owner of this PropertyRecordsRandom200ResponseInner.
        :type owner: PropertyRecordsRandom200ResponseInnerOwner
        """

        self._owner = owner

    @property
    def owner_occupied(self):
        """Gets the owner_occupied of this PropertyRecordsRandom200ResponseInner.


        :return: The owner_occupied of this PropertyRecordsRandom200ResponseInner.
        :rtype: bool
        """
        return self._owner_occupied

    @owner_occupied.setter
    def owner_occupied(self, owner_occupied):
        """Sets the owner_occupied of this PropertyRecordsRandom200ResponseInner.


        :param owner_occupied: The owner_occupied of this PropertyRecordsRandom200ResponseInner.
        :type owner_occupied: bool
        """

        self._owner_occupied = owner_occupied

    @property
    def property_taxes(self):
        """Gets the property_taxes of this PropertyRecordsRandom200ResponseInner.


        :return: The property_taxes of this PropertyRecordsRandom200ResponseInner.
        :rtype: PropertyRecordsRandom200ResponseInnerPropertyTaxes
        """
        return self._property_taxes

    @property_taxes.setter
    def property_taxes(self, property_taxes):
        """Sets the property_taxes of this PropertyRecordsRandom200ResponseInner.


        :param property_taxes: The property_taxes of this PropertyRecordsRandom200ResponseInner.
        :type property_taxes: PropertyRecordsRandom200ResponseInnerPropertyTaxes
        """

        self._property_taxes = property_taxes

    @property
    def property_type(self):
        """Gets the property_type of this PropertyRecordsRandom200ResponseInner.


        :return: The property_type of this PropertyRecordsRandom200ResponseInner.
        :rtype: str
        """
        return self._property_type

    @property_type.setter
    def property_type(self, property_type):
        """Sets the property_type of this PropertyRecordsRandom200ResponseInner.


        :param property_type: The property_type of this PropertyRecordsRandom200ResponseInner.
        :type property_type: str
        """

        self._property_type = property_type

    @property
    def square_footage(self):
        """Gets the square_footage of this PropertyRecordsRandom200ResponseInner.


        :return: The square_footage of this PropertyRecordsRandom200ResponseInner.
        :rtype: int
        """
        return self._square_footage

    @square_footage.setter
    def square_footage(self, square_footage):
        """Sets the square_footage of this PropertyRecordsRandom200ResponseInner.


        :param square_footage: The square_footage of this PropertyRecordsRandom200ResponseInner.
        :type square_footage: int
        """

        self._square_footage = square_footage

    @property
    def state(self):
        """Gets the state of this PropertyRecordsRandom200ResponseInner.


        :return: The state of this PropertyRecordsRandom200ResponseInner.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this PropertyRecordsRandom200ResponseInner.


        :param state: The state of this PropertyRecordsRandom200ResponseInner.
        :type state: str
        """

        self._state = state

    @property
    def subdivision(self):
        """Gets the subdivision of this PropertyRecordsRandom200ResponseInner.


        :return: The subdivision of this PropertyRecordsRandom200ResponseInner.
        :rtype: str
        """
        return self._subdivision

    @subdivision.setter
    def subdivision(self, subdivision):
        """Sets the subdivision of this PropertyRecordsRandom200ResponseInner.


        :param subdivision: The subdivision of this PropertyRecordsRandom200ResponseInner.
        :type subdivision: str
        """

        self._subdivision = subdivision

    @property
    def tax_assessments(self):
        """Gets the tax_assessments of this PropertyRecordsRandom200ResponseInner.


        :return: The tax_assessments of this PropertyRecordsRandom200ResponseInner.
        :rtype: PropertyRecordsRandom200ResponseInnerTaxAssessments
        """
        return self._tax_assessments

    @tax_assessments.setter
    def tax_assessments(self, tax_assessments):
        """Sets the tax_assessments of this PropertyRecordsRandom200ResponseInner.


        :param tax_assessments: The tax_assessments of this PropertyRecordsRandom200ResponseInner.
        :type tax_assessments: PropertyRecordsRandom200ResponseInnerTaxAssessments
        """

        self._tax_assessments = tax_assessments

    @property
    def year_built(self):
        """Gets the year_built of this PropertyRecordsRandom200ResponseInner.


        :return: The year_built of this PropertyRecordsRandom200ResponseInner.
        :rtype: int
        """
        return self._year_built

    @year_built.setter
    def year_built(self, year_built):
        """Sets the year_built of this PropertyRecordsRandom200ResponseInner.


        :param year_built: The year_built of this PropertyRecordsRandom200ResponseInner.
        :type year_built: int
        """

        self._year_built = year_built

    @property
    def zip_code(self):
        """Gets the zip_code of this PropertyRecordsRandom200ResponseInner.


        :return: The zip_code of this PropertyRecordsRandom200ResponseInner.
        :rtype: str
        """
        return self._zip_code

    @zip_code.setter
    def zip_code(self, zip_code):
        """Sets the zip_code of this PropertyRecordsRandom200ResponseInner.


        :param zip_code: The zip_code of this PropertyRecordsRandom200ResponseInner.
        :type zip_code: str
        """

        self._zip_code = zip_code

    @property
    def zoning(self):
        """Gets the zoning of this PropertyRecordsRandom200ResponseInner.


        :return: The zoning of this PropertyRecordsRandom200ResponseInner.
        :rtype: str
        """
        return self._zoning

    @zoning.setter
    def zoning(self, zoning):
        """Sets the zoning of this PropertyRecordsRandom200ResponseInner.


        :param zoning: The zoning of this PropertyRecordsRandom200ResponseInner.
        :type zoning: str
        """

        self._zoning = zoning
