# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PropertyRecords200ResponseInnerTaxAssessments2020(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, improvements: int=0, land: int=0, value: int=0):
        """PropertyRecords200ResponseInnerTaxAssessments2020 - a model defined in OpenAPI

        :param improvements: The improvements of this PropertyRecords200ResponseInnerTaxAssessments2020.
        :param land: The land of this PropertyRecords200ResponseInnerTaxAssessments2020.
        :param value: The value of this PropertyRecords200ResponseInnerTaxAssessments2020.
        """
        self.openapi_types = {
            'improvements': int,
            'land': int,
            'value': int
        }

        self.attribute_map = {
            'improvements': 'improvements',
            'land': 'land',
            'value': 'value'
        }

        self._improvements = improvements
        self._land = land
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PropertyRecords200ResponseInnerTaxAssessments2020':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The property_records_200_response_inner_taxAssessments_2020 of this PropertyRecords200ResponseInnerTaxAssessments2020.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def improvements(self):
        """Gets the improvements of this PropertyRecords200ResponseInnerTaxAssessments2020.


        :return: The improvements of this PropertyRecords200ResponseInnerTaxAssessments2020.
        :rtype: int
        """
        return self._improvements

    @improvements.setter
    def improvements(self, improvements):
        """Sets the improvements of this PropertyRecords200ResponseInnerTaxAssessments2020.


        :param improvements: The improvements of this PropertyRecords200ResponseInnerTaxAssessments2020.
        :type improvements: int
        """

        self._improvements = improvements

    @property
    def land(self):
        """Gets the land of this PropertyRecords200ResponseInnerTaxAssessments2020.


        :return: The land of this PropertyRecords200ResponseInnerTaxAssessments2020.
        :rtype: int
        """
        return self._land

    @land.setter
    def land(self, land):
        """Sets the land of this PropertyRecords200ResponseInnerTaxAssessments2020.


        :param land: The land of this PropertyRecords200ResponseInnerTaxAssessments2020.
        :type land: int
        """

        self._land = land

    @property
    def value(self):
        """Gets the value of this PropertyRecords200ResponseInnerTaxAssessments2020.


        :return: The value of this PropertyRecords200ResponseInnerTaxAssessments2020.
        :rtype: int
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this PropertyRecords200ResponseInnerTaxAssessments2020.


        :param value: The value of this PropertyRecords200ResponseInnerTaxAssessments2020.
        :type value: int
        """

        self._value = value
