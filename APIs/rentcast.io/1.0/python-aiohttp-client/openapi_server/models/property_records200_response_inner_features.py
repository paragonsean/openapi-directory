# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PropertyRecords200ResponseInnerFeatures(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, architecture_type: str=None, cooling: bool=True, cooling_type: str=None, exterior_type: str=None, floor_count: int=0, foundation_type: str=None, garage: bool=True, garage_type: str=None, heating: bool=True, heating_type: str=None, pool: bool=True, roof_type: str=None, room_count: int=0, unit_count: int=0):
        """PropertyRecords200ResponseInnerFeatures - a model defined in OpenAPI

        :param architecture_type: The architecture_type of this PropertyRecords200ResponseInnerFeatures.
        :param cooling: The cooling of this PropertyRecords200ResponseInnerFeatures.
        :param cooling_type: The cooling_type of this PropertyRecords200ResponseInnerFeatures.
        :param exterior_type: The exterior_type of this PropertyRecords200ResponseInnerFeatures.
        :param floor_count: The floor_count of this PropertyRecords200ResponseInnerFeatures.
        :param foundation_type: The foundation_type of this PropertyRecords200ResponseInnerFeatures.
        :param garage: The garage of this PropertyRecords200ResponseInnerFeatures.
        :param garage_type: The garage_type of this PropertyRecords200ResponseInnerFeatures.
        :param heating: The heating of this PropertyRecords200ResponseInnerFeatures.
        :param heating_type: The heating_type of this PropertyRecords200ResponseInnerFeatures.
        :param pool: The pool of this PropertyRecords200ResponseInnerFeatures.
        :param roof_type: The roof_type of this PropertyRecords200ResponseInnerFeatures.
        :param room_count: The room_count of this PropertyRecords200ResponseInnerFeatures.
        :param unit_count: The unit_count of this PropertyRecords200ResponseInnerFeatures.
        """
        self.openapi_types = {
            'architecture_type': str,
            'cooling': bool,
            'cooling_type': str,
            'exterior_type': str,
            'floor_count': int,
            'foundation_type': str,
            'garage': bool,
            'garage_type': str,
            'heating': bool,
            'heating_type': str,
            'pool': bool,
            'roof_type': str,
            'room_count': int,
            'unit_count': int
        }

        self.attribute_map = {
            'architecture_type': 'architectureType',
            'cooling': 'cooling',
            'cooling_type': 'coolingType',
            'exterior_type': 'exteriorType',
            'floor_count': 'floorCount',
            'foundation_type': 'foundationType',
            'garage': 'garage',
            'garage_type': 'garageType',
            'heating': 'heating',
            'heating_type': 'heatingType',
            'pool': 'pool',
            'roof_type': 'roofType',
            'room_count': 'roomCount',
            'unit_count': 'unitCount'
        }

        self._architecture_type = architecture_type
        self._cooling = cooling
        self._cooling_type = cooling_type
        self._exterior_type = exterior_type
        self._floor_count = floor_count
        self._foundation_type = foundation_type
        self._garage = garage
        self._garage_type = garage_type
        self._heating = heating
        self._heating_type = heating_type
        self._pool = pool
        self._roof_type = roof_type
        self._room_count = room_count
        self._unit_count = unit_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PropertyRecords200ResponseInnerFeatures':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The property_records_200_response_inner_features of this PropertyRecords200ResponseInnerFeatures.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def architecture_type(self):
        """Gets the architecture_type of this PropertyRecords200ResponseInnerFeatures.


        :return: The architecture_type of this PropertyRecords200ResponseInnerFeatures.
        :rtype: str
        """
        return self._architecture_type

    @architecture_type.setter
    def architecture_type(self, architecture_type):
        """Sets the architecture_type of this PropertyRecords200ResponseInnerFeatures.


        :param architecture_type: The architecture_type of this PropertyRecords200ResponseInnerFeatures.
        :type architecture_type: str
        """

        self._architecture_type = architecture_type

    @property
    def cooling(self):
        """Gets the cooling of this PropertyRecords200ResponseInnerFeatures.


        :return: The cooling of this PropertyRecords200ResponseInnerFeatures.
        :rtype: bool
        """
        return self._cooling

    @cooling.setter
    def cooling(self, cooling):
        """Sets the cooling of this PropertyRecords200ResponseInnerFeatures.


        :param cooling: The cooling of this PropertyRecords200ResponseInnerFeatures.
        :type cooling: bool
        """

        self._cooling = cooling

    @property
    def cooling_type(self):
        """Gets the cooling_type of this PropertyRecords200ResponseInnerFeatures.


        :return: The cooling_type of this PropertyRecords200ResponseInnerFeatures.
        :rtype: str
        """
        return self._cooling_type

    @cooling_type.setter
    def cooling_type(self, cooling_type):
        """Sets the cooling_type of this PropertyRecords200ResponseInnerFeatures.


        :param cooling_type: The cooling_type of this PropertyRecords200ResponseInnerFeatures.
        :type cooling_type: str
        """

        self._cooling_type = cooling_type

    @property
    def exterior_type(self):
        """Gets the exterior_type of this PropertyRecords200ResponseInnerFeatures.


        :return: The exterior_type of this PropertyRecords200ResponseInnerFeatures.
        :rtype: str
        """
        return self._exterior_type

    @exterior_type.setter
    def exterior_type(self, exterior_type):
        """Sets the exterior_type of this PropertyRecords200ResponseInnerFeatures.


        :param exterior_type: The exterior_type of this PropertyRecords200ResponseInnerFeatures.
        :type exterior_type: str
        """

        self._exterior_type = exterior_type

    @property
    def floor_count(self):
        """Gets the floor_count of this PropertyRecords200ResponseInnerFeatures.


        :return: The floor_count of this PropertyRecords200ResponseInnerFeatures.
        :rtype: int
        """
        return self._floor_count

    @floor_count.setter
    def floor_count(self, floor_count):
        """Sets the floor_count of this PropertyRecords200ResponseInnerFeatures.


        :param floor_count: The floor_count of this PropertyRecords200ResponseInnerFeatures.
        :type floor_count: int
        """

        self._floor_count = floor_count

    @property
    def foundation_type(self):
        """Gets the foundation_type of this PropertyRecords200ResponseInnerFeatures.


        :return: The foundation_type of this PropertyRecords200ResponseInnerFeatures.
        :rtype: str
        """
        return self._foundation_type

    @foundation_type.setter
    def foundation_type(self, foundation_type):
        """Sets the foundation_type of this PropertyRecords200ResponseInnerFeatures.


        :param foundation_type: The foundation_type of this PropertyRecords200ResponseInnerFeatures.
        :type foundation_type: str
        """

        self._foundation_type = foundation_type

    @property
    def garage(self):
        """Gets the garage of this PropertyRecords200ResponseInnerFeatures.


        :return: The garage of this PropertyRecords200ResponseInnerFeatures.
        :rtype: bool
        """
        return self._garage

    @garage.setter
    def garage(self, garage):
        """Sets the garage of this PropertyRecords200ResponseInnerFeatures.


        :param garage: The garage of this PropertyRecords200ResponseInnerFeatures.
        :type garage: bool
        """

        self._garage = garage

    @property
    def garage_type(self):
        """Gets the garage_type of this PropertyRecords200ResponseInnerFeatures.


        :return: The garage_type of this PropertyRecords200ResponseInnerFeatures.
        :rtype: str
        """
        return self._garage_type

    @garage_type.setter
    def garage_type(self, garage_type):
        """Sets the garage_type of this PropertyRecords200ResponseInnerFeatures.


        :param garage_type: The garage_type of this PropertyRecords200ResponseInnerFeatures.
        :type garage_type: str
        """

        self._garage_type = garage_type

    @property
    def heating(self):
        """Gets the heating of this PropertyRecords200ResponseInnerFeatures.


        :return: The heating of this PropertyRecords200ResponseInnerFeatures.
        :rtype: bool
        """
        return self._heating

    @heating.setter
    def heating(self, heating):
        """Sets the heating of this PropertyRecords200ResponseInnerFeatures.


        :param heating: The heating of this PropertyRecords200ResponseInnerFeatures.
        :type heating: bool
        """

        self._heating = heating

    @property
    def heating_type(self):
        """Gets the heating_type of this PropertyRecords200ResponseInnerFeatures.


        :return: The heating_type of this PropertyRecords200ResponseInnerFeatures.
        :rtype: str
        """
        return self._heating_type

    @heating_type.setter
    def heating_type(self, heating_type):
        """Sets the heating_type of this PropertyRecords200ResponseInnerFeatures.


        :param heating_type: The heating_type of this PropertyRecords200ResponseInnerFeatures.
        :type heating_type: str
        """

        self._heating_type = heating_type

    @property
    def pool(self):
        """Gets the pool of this PropertyRecords200ResponseInnerFeatures.


        :return: The pool of this PropertyRecords200ResponseInnerFeatures.
        :rtype: bool
        """
        return self._pool

    @pool.setter
    def pool(self, pool):
        """Sets the pool of this PropertyRecords200ResponseInnerFeatures.


        :param pool: The pool of this PropertyRecords200ResponseInnerFeatures.
        :type pool: bool
        """

        self._pool = pool

    @property
    def roof_type(self):
        """Gets the roof_type of this PropertyRecords200ResponseInnerFeatures.


        :return: The roof_type of this PropertyRecords200ResponseInnerFeatures.
        :rtype: str
        """
        return self._roof_type

    @roof_type.setter
    def roof_type(self, roof_type):
        """Sets the roof_type of this PropertyRecords200ResponseInnerFeatures.


        :param roof_type: The roof_type of this PropertyRecords200ResponseInnerFeatures.
        :type roof_type: str
        """

        self._roof_type = roof_type

    @property
    def room_count(self):
        """Gets the room_count of this PropertyRecords200ResponseInnerFeatures.


        :return: The room_count of this PropertyRecords200ResponseInnerFeatures.
        :rtype: int
        """
        return self._room_count

    @room_count.setter
    def room_count(self, room_count):
        """Sets the room_count of this PropertyRecords200ResponseInnerFeatures.


        :param room_count: The room_count of this PropertyRecords200ResponseInnerFeatures.
        :type room_count: int
        """

        self._room_count = room_count

    @property
    def unit_count(self):
        """Gets the unit_count of this PropertyRecords200ResponseInnerFeatures.


        :return: The unit_count of this PropertyRecords200ResponseInnerFeatures.
        :rtype: int
        """
        return self._unit_count

    @unit_count.setter
    def unit_count(self, unit_count):
        """Sets the unit_count of this PropertyRecords200ResponseInnerFeatures.


        :param unit_count: The unit_count of this PropertyRecords200ResponseInnerFeatures.
        :type unit_count: int
        """

        self._unit_count = unit_count
