/*
 * Storecove API
 * Storecove API
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: apisupport@storecove.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.client.model.PaymentMeansDEPRECATED;
import org.openapitools.client.model.PurchaseInvoiceAccountingDetails;
import org.openapitools.client.model.PurchaseInvoiceAllowanceCharge;
import org.openapitools.client.model.PurchaseInvoiceAttachment;
import org.openapitools.client.model.PurchaseInvoiceDelivery;
import org.openapitools.client.model.PurchaseInvoiceDocumentTotals;
import org.openapitools.client.model.PurchaseInvoiceInvoiceLine;
import org.openapitools.client.model.PurchaseInvoicePaymentMeans;
import org.openapitools.client.model.PurchaseInvoiceSender;
import org.openapitools.client.model.PurchaseInvoiceTaxSubtotal;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for PurchaseInvoice
 */
public class PurchaseInvoiceTest {
    private final PurchaseInvoice model = new PurchaseInvoice();

    /**
     * Model tests for PurchaseInvoice
     */
    @Test
    public void testPurchaseInvoice() {
        // TODO: test PurchaseInvoice
    }

    /**
     * Test the property 'accounting'
     */
    @Test
    public void accountingTest() {
        // TODO: test accounting
    }

    /**
     * Test the property 'accountingCost'
     */
    @Test
    public void accountingCostTest() {
        // TODO: test accountingCost
    }

    /**
     * Test the property 'allowanceCharge'
     */
    @Test
    public void allowanceChargeTest() {
        // TODO: test allowanceCharge
    }

    /**
     * Test the property 'allowanceCharges'
     */
    @Test
    public void allowanceChargesTest() {
        // TODO: test allowanceCharges
    }

    /**
     * Test the property 'amountIncludingVat'
     */
    @Test
    public void amountIncludingVatTest() {
        // TODO: test amountIncludingVat
    }

    /**
     * Test the property 'attachments'
     */
    @Test
    public void attachmentsTest() {
        // TODO: test attachments
    }

    /**
     * Test the property 'billingReference'
     */
    @Test
    public void billingReferenceTest() {
        // TODO: test billingReference
    }

    /**
     * Test the property 'buyerReference'
     */
    @Test
    public void buyerReferenceTest() {
        // TODO: test buyerReference
    }

    /**
     * Test the property 'contractDocumentReference'
     */
    @Test
    public void contractDocumentReferenceTest() {
        // TODO: test contractDocumentReference
    }

    /**
     * Test the property 'delivery'
     */
    @Test
    public void deliveryTest() {
        // TODO: test delivery
    }

    /**
     * Test the property 'document'
     */
    @Test
    public void documentTest() {
        // TODO: test document
    }

    /**
     * Test the property 'documentCurrencyCode'
     */
    @Test
    public void documentCurrencyCodeTest() {
        // TODO: test documentCurrencyCode
    }

    /**
     * Test the property 'documentTotals'
     */
    @Test
    public void documentTotalsTest() {
        // TODO: test documentTotals
    }

    /**
     * Test the property 'documentType'
     */
    @Test
    public void documentTypeTest() {
        // TODO: test documentType
    }

    /**
     * Test the property 'dueDate'
     */
    @Test
    public void dueDateTest() {
        // TODO: test dueDate
    }

    /**
     * Test the property 'externalKey'
     */
    @Test
    public void externalKeyTest() {
        // TODO: test externalKey
    }

    /**
     * Test the property 'externalUserId'
     */
    @Test
    public void externalUserIdTest() {
        // TODO: test externalUserId
    }

    /**
     * Test the property 'guid'
     */
    @Test
    public void guidTest() {
        // TODO: test guid
    }

    /**
     * Test the property 'invoiceLines'
     */
    @Test
    public void invoiceLinesTest() {
        // TODO: test invoiceLines
    }

    /**
     * Test the property 'invoiceNumber'
     */
    @Test
    public void invoiceNumberTest() {
        // TODO: test invoiceNumber
    }

    /**
     * Test the property 'invoiceType'
     */
    @Test
    public void invoiceTypeTest() {
        // TODO: test invoiceType
    }

    /**
     * Test the property 'issueDate'
     */
    @Test
    public void issueDateTest() {
        // TODO: test issueDate
    }

    /**
     * Test the property 'legalEntityId'
     */
    @Test
    public void legalEntityIdTest() {
        // TODO: test legalEntityId
    }

    /**
     * Test the property 'note'
     */
    @Test
    public void noteTest() {
        // TODO: test note
    }

    /**
     * Test the property 'orderReference'
     */
    @Test
    public void orderReferenceTest() {
        // TODO: test orderReference
    }

    /**
     * Test the property 'paymentMeans'
     */
    @Test
    public void paymentMeansTest() {
        // TODO: test paymentMeans
    }

    /**
     * Test the property 'paymentMeansArray'
     */
    @Test
    public void paymentMeansArrayTest() {
        // TODO: test paymentMeansArray
    }

    /**
     * Test the property 'paymentMeansPaymentId'
     */
    @Test
    public void paymentMeansPaymentIdTest() {
        // TODO: test paymentMeansPaymentId
    }

    /**
     * Test the property 'paymentTermsNote'
     */
    @Test
    public void paymentTermsNoteTest() {
        // TODO: test paymentTermsNote
    }

    /**
     * Test the property 'periodEnd'
     */
    @Test
    public void periodEndTest() {
        // TODO: test periodEnd
    }

    /**
     * Test the property 'periodStart'
     */
    @Test
    public void periodStartTest() {
        // TODO: test periodStart
    }

    /**
     * Test the property 'projectReference'
     */
    @Test
    public void projectReferenceTest() {
        // TODO: test projectReference
    }

    /**
     * Test the property 'sender'
     */
    @Test
    public void senderTest() {
        // TODO: test sender
    }

    /**
     * Test the property 'source'
     */
    @Test
    public void sourceTest() {
        // TODO: test source
    }

    /**
     * Test the property 'subType'
     */
    @Test
    public void subTypeTest() {
        // TODO: test subType
    }

    /**
     * Test the property 'systemGeneratedPrimaryImage'
     */
    @Test
    public void systemGeneratedPrimaryImageTest() {
        // TODO: test systemGeneratedPrimaryImage
    }

    /**
     * Test the property 'taxPointDate'
     */
    @Test
    public void taxPointDateTest() {
        // TODO: test taxPointDate
    }

    /**
     * Test the property 'taxSubtotals'
     */
    @Test
    public void taxSubtotalsTest() {
        // TODO: test taxSubtotals
    }

    /**
     * Test the property 'taxSystem'
     */
    @Test
    public void taxSystemTest() {
        // TODO: test taxSystem
    }

    /**
     * Test the property 'vatReverseCharge'
     */
    @Test
    public void vatReverseChargeTest() {
        // TODO: test vatReverseCharge
    }

}
