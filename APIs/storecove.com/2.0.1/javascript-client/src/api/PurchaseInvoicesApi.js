/**
 * Storecove API
 * Storecove API
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: apisupport@storecove.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import PurchaseInvoice from '../model/PurchaseInvoice';
import PurchaseInvoiceUbl from '../model/PurchaseInvoiceUbl';

/**
* PurchaseInvoices service.
* @module api/PurchaseInvoicesApi
* @version 2.0.1
*/
export default class PurchaseInvoicesApi {

    /**
    * Constructs a new PurchaseInvoicesApi. 
    * @alias module:api/PurchaseInvoicesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getInvoiceJson operation.
     * @callback module:api/PurchaseInvoicesApi~getInvoiceJsonCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PurchaseInvoice} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Purchase invoice data as JSON
     * Get a specific PurchaseInvoice, in JSON format.
     * @param {String} guid The guid of the purchase invoice, from the webhook.
     * @param {Object} opts Optional parameters
     * @param {String} [pmv = '1.0')] The PaymentMeans version. The default (and deprecated) version 1.0 will give BankPaymentMean, DirectDebitPaymentMean, CardPaymentMean, NppPaymentMean, SeBankGiroPaymentMean, SePlusGiroPaymentMean, SgCardPaymentMean, SgGiroPaymentMean, SgPaynowPaymentMean.  Version 2.0 deprecates BankPaymentMean (now CreditTransferPaymentMean), CardPaymentMean (now CreditCardPaymentMean), NppPaymentMean (now AunzNppPayidPaymentMean), SeBankGiroPaymentMean (now SeBankgiroPaymentMean  -- note the lower 'g' in 'bankgiro'). It also adds OnlinePaymentServicePaymentMean, StandingAgreementPaymentMean, AunzNppPaytoPaymentMean, AunzBpayPaymentMean, AunzPostbillpayPaymentMean, AunzUriPaymentMean.
     * @param {module:api/PurchaseInvoicesApi~getInvoiceJsonCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PurchaseInvoice}
     */
    getInvoiceJson(guid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'guid' is set
      if (guid === undefined || guid === null) {
        throw new Error("Missing the required parameter 'guid' when calling getInvoiceJson");
      }

      let pathParams = {
        'guid': guid
      };
      let queryParams = {
        'pmv': opts['pmv']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PurchaseInvoice;
      return this.apiClient.callApi(
        '/purchase_invoices/{guid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getInvoiceUbl operation.
     * @callback module:api/PurchaseInvoicesApi~getInvoiceUblCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PurchaseInvoiceUbl} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Purchase invoice data in a selectable format
     * Get a specific PurchaseInvoice.
     * @param {String} guid purchase invoice guid
     * @param {module:model/String} packaging How to package the purchase invoice.
     * @param {Object} opts Optional parameters
     * @param {String} [pmv = '1.0')] The PaymentMeans version. The default (and deprecated) version 1.0 will give BankPaymentMean, DirectDebitPaymentMean, CardPaymentMean, NppPaymentMean, SeBankGiroPaymentMean, SePlusGiroPaymentMean, SgCardPaymentMean, SgGiroPaymentMean, SgPaynowPaymentMean.  Version 2.0 deprecates BankPaymentMean (now CreditTransferPaymentMean), CardPaymentMean (now CreditCardPaymentMean), NppPaymentMean (now AunzNppPayidPaymentMean), SeBankGiroPaymentMean (now SeBankgiroPaymentMean  -- note the lower 'g' in 'bankgiro'). It also adds OnlinePaymentServicePaymentMean, StandingAgreementPaymentMean, AunzNppPaytoPaymentMean, AunzBpayPaymentMean, AunzPostbillpayPaymentMean, AunzUriPaymentMean.
     * @param {module:api/PurchaseInvoicesApi~getInvoiceUblCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PurchaseInvoiceUbl}
     */
    getInvoiceUbl(guid, packaging, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'guid' is set
      if (guid === undefined || guid === null) {
        throw new Error("Missing the required parameter 'guid' when calling getInvoiceUbl");
      }
      // verify the required parameter 'packaging' is set
      if (packaging === undefined || packaging === null) {
        throw new Error("Missing the required parameter 'packaging' when calling getInvoiceUbl");
      }

      let pathParams = {
        'guid': guid,
        'packaging': packaging
      };
      let queryParams = {
        'pmv': opts['pmv']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PurchaseInvoiceUbl;
      return this.apiClient.callApi(
        '/purchase_invoices/{guid}/{packaging}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getInvoiceUblVersioned operation.
     * @callback module:api/PurchaseInvoicesApi~getInvoiceUblVersionedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PurchaseInvoiceUbl} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Purchase invoice data as JSON with a Base64-encoded UBL string in the specified version
     * Get a specific PurchaseInvoice in UBL format
     * @param {String} guid purchase invoice guid
     * @param {module:model/String} packaging How to package the purchase invoice.
     * @param {module:model/String} packageVersion The version of the package.
     * @param {module:api/PurchaseInvoicesApi~getInvoiceUblVersionedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PurchaseInvoiceUbl}
     */
    getInvoiceUblVersioned(guid, packaging, packageVersion, callback) {
      let postBody = null;
      // verify the required parameter 'guid' is set
      if (guid === undefined || guid === null) {
        throw new Error("Missing the required parameter 'guid' when calling getInvoiceUblVersioned");
      }
      // verify the required parameter 'packaging' is set
      if (packaging === undefined || packaging === null) {
        throw new Error("Missing the required parameter 'packaging' when calling getInvoiceUblVersioned");
      }
      // verify the required parameter 'packageVersion' is set
      if (packageVersion === undefined || packageVersion === null) {
        throw new Error("Missing the required parameter 'packageVersion' when calling getInvoiceUblVersioned");
      }

      let pathParams = {
        'guid': guid,
        'packaging': packaging,
        'package_version': packageVersion
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PurchaseInvoiceUbl;
      return this.apiClient.callApi(
        '/purchase_invoices/{guid}/{packaging}/{package_version}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
