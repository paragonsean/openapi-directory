/**
 * Storecove API
 * Storecove API
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: apisupport@storecove.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InvoiceSubmissionActionEvidence from './InvoiceSubmissionActionEvidence';

/**
 * The InvoiceSubmissionEvidence model module.
 * @module model/InvoiceSubmissionEvidence
 * @version 2.0.1
 */
class InvoiceSubmissionEvidence {
    /**
     * Constructs a new <code>InvoiceSubmissionEvidence</code>.
     * @alias module:model/InvoiceSubmissionEvidence
     */
    constructor() { 
        
        InvoiceSubmissionEvidence.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InvoiceSubmissionEvidence</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InvoiceSubmissionEvidence} obj Optional instance to populate.
     * @return {module:model/InvoiceSubmissionEvidence} The populated <code>InvoiceSubmissionEvidence</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InvoiceSubmissionEvidence();

            if (data.hasOwnProperty('actions')) {
                obj['actions'] = ApiClient.convertToType(data['actions'], [InvoiceSubmissionActionEvidence]);
            }
            if (data.hasOwnProperty('guid')) {
                obj['guid'] = ApiClient.convertToType(data['guid'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InvoiceSubmissionEvidence</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InvoiceSubmissionEvidence</code>.
     */
    static validateJSON(data) {
        if (data['actions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['actions'])) {
                throw new Error("Expected the field `actions` to be an array in the JSON data but got " + data['actions']);
            }
            // validate the optional field `actions` (array)
            for (const item of data['actions']) {
                InvoiceSubmissionActionEvidence.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['guid'] && !(typeof data['guid'] === 'string' || data['guid'] instanceof String)) {
            throw new Error("Expected the field `guid` to be a primitive type in the JSON string but got " + data['guid']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * An array of actions taken to deliver the document.
 * @member {Array.<module:model/InvoiceSubmissionActionEvidence>} actions
 */
InvoiceSubmissionEvidence.prototype['actions'] = undefined;

/**
 * The guid for the InvoiceSubmission.
 * @member {String} guid
 */
InvoiceSubmissionEvidence.prototype['guid'] = undefined;

/**
 * The overall status for this InvoiceSubmission.
 * @member {String} status
 */
InvoiceSubmissionEvidence.prototype['status'] = undefined;






export default InvoiceSubmissionEvidence;

