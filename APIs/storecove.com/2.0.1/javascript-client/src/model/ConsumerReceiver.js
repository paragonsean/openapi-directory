/**
 * Storecove API
 * Storecove API
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: apisupport@storecove.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CountrySpecificationIdentifier from './CountrySpecificationIdentifier';

/**
 * The ConsumerReceiver model module.
 * @module model/ConsumerReceiver
 * @version 2.0.1
 */
class ConsumerReceiver {
    /**
     * Constructs a new <code>ConsumerReceiver</code>.
     * The consumer receiver of the document.
     * @alias module:model/ConsumerReceiver
     */
    constructor() { 
        
        ConsumerReceiver.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ConsumerReceiver</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConsumerReceiver} obj Optional instance to populate.
     * @return {module:model/ConsumerReceiver} The populated <code>ConsumerReceiver</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConsumerReceiver();

            if (data.hasOwnProperty('legal')) {
                obj['legal'] = CountrySpecificationIdentifier.constructFromObject(data['legal']);
            }
            if (data.hasOwnProperty('routing')) {
                obj['routing'] = CountrySpecificationIdentifier.constructFromObject(data['routing']);
            }
            if (data.hasOwnProperty('tax')) {
                obj['tax'] = CountrySpecificationIdentifier.constructFromObject(data['tax']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ConsumerReceiver</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ConsumerReceiver</code>.
     */
    static validateJSON(data) {
        // validate the optional field `legal`
        if (data['legal']) { // data not null
          CountrySpecificationIdentifier.validateJSON(data['legal']);
        }
        // validate the optional field `routing`
        if (data['routing']) { // data not null
          CountrySpecificationIdentifier.validateJSON(data['routing']);
        }
        // validate the optional field `tax`
        if (data['tax']) { // data not null
          CountrySpecificationIdentifier.validateJSON(data['tax']);
        }

        return true;
    }


}



/**
 * @member {module:model/CountrySpecificationIdentifier} legal
 */
ConsumerReceiver.prototype['legal'] = undefined;

/**
 * @member {module:model/CountrySpecificationIdentifier} routing
 */
ConsumerReceiver.prototype['routing'] = undefined;

/**
 * @member {module:model/CountrySpecificationIdentifier} tax
 */
ConsumerReceiver.prototype['tax'] = undefined;






export default ConsumerReceiver;

