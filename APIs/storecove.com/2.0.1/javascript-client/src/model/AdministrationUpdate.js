/**
 * Storecove API
 * Storecove API
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: apisupport@storecove.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AdministrationUpdate model module.
 * @module model/AdministrationUpdate
 * @version 2.0.1
 */
class AdministrationUpdate {
    /**
     * Constructs a new <code>AdministrationUpdate</code>.
     * @alias module:model/AdministrationUpdate
     */
    constructor() { 
        
        AdministrationUpdate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AdministrationUpdate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AdministrationUpdate} obj Optional instance to populate.
     * @return {module:model/AdministrationUpdate} The populated <code>AdministrationUpdate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AdministrationUpdate();

            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('package_version')) {
                obj['package_version'] = ApiClient.convertToType(data['package_version'], 'String');
            }
            if (data.hasOwnProperty('packaging')) {
                obj['packaging'] = ApiClient.convertToType(data['packaging'], 'String');
            }
            if (data.hasOwnProperty('sender_email_identity_id')) {
                obj['sender_email_identity_id'] = ApiClient.convertToType(data['sender_email_identity_id'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AdministrationUpdate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AdministrationUpdate</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['package_version'] && !(typeof data['package_version'] === 'string' || data['package_version'] instanceof String)) {
            throw new Error("Expected the field `package_version` to be a primitive type in the JSON string but got " + data['package_version']);
        }
        // ensure the json data is a string
        if (data['packaging'] && !(typeof data['packaging'] === 'string' || data['packaging'] instanceof String)) {
            throw new Error("Expected the field `packaging` to be a primitive type in the JSON string but got " + data['packaging']);
        }

        return true;
    }


}



/**
 * The email address to send the received document to
 * @member {String} email
 */
AdministrationUpdate.prototype['email'] = undefined;

/**
 * The version of the package.
 * @member {module:model/AdministrationUpdate.PackageVersionEnum} package_version
 */
AdministrationUpdate.prototype['package_version'] = undefined;

/**
 * How to package the purchase invoice.
 * @member {module:model/AdministrationUpdate.PackagingEnum} packaging
 */
AdministrationUpdate.prototype['packaging'] = undefined;

/**
 * The id of the SenderEmailIdentity. If not provided, the Storecove default sender will be used
 * @member {Number} sender_email_identity_id
 */
AdministrationUpdate.prototype['sender_email_identity_id'] = undefined;





/**
 * Allowed values for the <code>package_version</code> property.
 * @enum {String}
 * @readonly
 */
AdministrationUpdate['PackageVersionEnum'] = {

    /**
     * value: "peppol_bis_v3"
     * @const
     */
    "peppol_bis_v3": "peppol_bis_v3",

    /**
     * value: "aunz"
     * @const
     */
    "aunz": "aunz",

    /**
     * value: "sg"
     * @const
     */
    "sg": "sg"
};


/**
 * Allowed values for the <code>packaging</code> property.
 * @enum {String}
 * @readonly
 */
AdministrationUpdate['PackagingEnum'] = {

    /**
     * value: "ubl"
     * @const
     */
    "ubl": "ubl"
};



export default AdministrationUpdate;

