/**
 * Storecove API
 * Storecove API
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: apisupport@storecove.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SenderParty from './SenderParty';

/**
 * The AccountingSupplierParty model module.
 * @module model/AccountingSupplierParty
 * @version 2.0.1
 */
class AccountingSupplierParty {
    /**
     * Constructs a new <code>AccountingSupplierParty</code>.
     * The party sending the invoice. Most data for the AccountingSupplierParty is taken from the Storecove database, where your sender identity resides and has been validated. However, we provide a limited number of fields here that you can specify on an invoice-by-invoice basis.
     * @alias module:model/AccountingSupplierParty
     */
    constructor() { 
        
        AccountingSupplierParty.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AccountingSupplierParty</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AccountingSupplierParty} obj Optional instance to populate.
     * @return {module:model/AccountingSupplierParty} The populated <code>AccountingSupplierParty</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AccountingSupplierParty();

            if (data.hasOwnProperty('party')) {
                obj['party'] = SenderParty.constructFromObject(data['party']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AccountingSupplierParty</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AccountingSupplierParty</code>.
     */
    static validateJSON(data) {
        // validate the optional field `party`
        if (data['party']) { // data not null
          SenderParty.validateJSON(data['party']);
        }

        return true;
    }


}



/**
 * @member {module:model/SenderParty} party
 */
AccountingSupplierParty.prototype['party'] = undefined;






export default AccountingSupplierParty;

