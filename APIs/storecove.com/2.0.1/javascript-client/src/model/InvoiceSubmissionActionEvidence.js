/**
 * Storecove API
 * Storecove API
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: apisupport@storecove.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InvoiceSubmissionActionEvidence model module.
 * @module model/InvoiceSubmissionActionEvidence
 * @version 2.0.1
 */
class InvoiceSubmissionActionEvidence {
    /**
     * Constructs a new <code>InvoiceSubmissionActionEvidence</code>.
     * @alias module:model/InvoiceSubmissionActionEvidence
     */
    constructor() { 
        
        InvoiceSubmissionActionEvidence.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InvoiceSubmissionActionEvidence</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InvoiceSubmissionActionEvidence} obj Optional instance to populate.
     * @return {module:model/InvoiceSubmissionActionEvidence} The populated <code>InvoiceSubmissionActionEvidence</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InvoiceSubmissionActionEvidence();

            if (data.hasOwnProperty('receiver_response')) {
                obj['receiver_response'] = ApiClient.convertToType(data['receiver_response'], 'String');
            }
            if (data.hasOwnProperty('transmission_datetime')) {
                obj['transmission_datetime'] = ApiClient.convertToType(data['transmission_datetime'], 'String');
            }
            if (data.hasOwnProperty('transmission_result')) {
                obj['transmission_result'] = ApiClient.convertToType(data['transmission_result'], 'String');
            }
            if (data.hasOwnProperty('transmission_type')) {
                obj['transmission_type'] = ApiClient.convertToType(data['transmission_type'], 'String');
            }
            if (data.hasOwnProperty('transmitted_document')) {
                obj['transmitted_document'] = ApiClient.convertToType(data['transmitted_document'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InvoiceSubmissionActionEvidence</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InvoiceSubmissionActionEvidence</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['receiver_response'] && !(typeof data['receiver_response'] === 'string' || data['receiver_response'] instanceof String)) {
            throw new Error("Expected the field `receiver_response` to be a primitive type in the JSON string but got " + data['receiver_response']);
        }
        // ensure the json data is a string
        if (data['transmission_datetime'] && !(typeof data['transmission_datetime'] === 'string' || data['transmission_datetime'] instanceof String)) {
            throw new Error("Expected the field `transmission_datetime` to be a primitive type in the JSON string but got " + data['transmission_datetime']);
        }
        // ensure the json data is a string
        if (data['transmission_result'] && !(typeof data['transmission_result'] === 'string' || data['transmission_result'] instanceof String)) {
            throw new Error("Expected the field `transmission_result` to be a primitive type in the JSON string but got " + data['transmission_result']);
        }
        // ensure the json data is a string
        if (data['transmission_type'] && !(typeof data['transmission_type'] === 'string' || data['transmission_type'] instanceof String)) {
            throw new Error("Expected the field `transmission_type` to be a primitive type in the JSON string but got " + data['transmission_type']);
        }
        // ensure the json data is a string
        if (data['transmitted_document'] && !(typeof data['transmitted_document'] === 'string' || data['transmitted_document'] instanceof String)) {
            throw new Error("Expected the field `transmitted_document` to be a primitive type in the JSON string but got " + data['transmitted_document']);
        }

        return true;
    }


}



/**
 * The response the receiver sent.
 * @member {String} receiver_response
 */
InvoiceSubmissionActionEvidence.prototype['receiver_response'] = undefined;

/**
 * The DateTime of the transmission, as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z.
 * @member {String} transmission_datetime
 */
InvoiceSubmissionActionEvidence.prototype['transmission_datetime'] = undefined;

/**
 * The result of this transmission.
 * @member {module:model/InvoiceSubmissionActionEvidence.TransmissionResultEnum} transmission_result
 */
InvoiceSubmissionActionEvidence.prototype['transmission_result'] = undefined;

/**
 * How the document was transmitted.
 * @member {module:model/InvoiceSubmissionActionEvidence.TransmissionTypeEnum} transmission_type
 */
InvoiceSubmissionActionEvidence.prototype['transmission_type'] = undefined;

/**
 * The document that was transmitted.
 * @member {String} transmitted_document
 */
InvoiceSubmissionActionEvidence.prototype['transmitted_document'] = undefined;





/**
 * Allowed values for the <code>transmission_result</code> property.
 * @enum {String}
 * @readonly
 */
InvoiceSubmissionActionEvidence['TransmissionResultEnum'] = {

    /**
     * value: "unknown"
     * @const
     */
    "unknown": "unknown",

    /**
     * value: "accepted"
     * @const
     */
    "accepted": "accepted",

    /**
     * value: "rejected"
     * @const
     */
    "rejected": "rejected",

    /**
     * value: "send_error"
     * @const
     */
    "send_error": "send_error",

    /**
     * value: "internal_error"
     * @const
     */
    "internal_error": "internal_error"
};


/**
 * Allowed values for the <code>transmission_type</code> property.
 * @enum {String}
 * @readonly
 */
InvoiceSubmissionActionEvidence['TransmissionTypeEnum'] = {

    /**
     * value: "email"
     * @const
     */
    "email": "email",

    /**
     * value: "edi"
     * @const
     */
    "edi": "edi",

    /**
     * value: "as2"
     * @const
     */
    "as2": "as2",

    /**
     * value: "peppol"
     * @const
     */
    "peppol": "peppol",

    /**
     * value: "sandbox"
     * @const
     */
    "sandbox": "sandbox"
};



export default InvoiceSubmissionActionEvidence;

