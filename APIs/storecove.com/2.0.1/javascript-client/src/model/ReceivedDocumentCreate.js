/**
 * Storecove API
 * Storecove API
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: apisupport@storecove.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ReceivedDocumentCreate model module.
 * @module model/ReceivedDocumentCreate
 * @version 2.0.1
 */
class ReceivedDocumentCreate {
    /**
     * Constructs a new <code>ReceivedDocumentCreate</code>.
     * @alias module:model/ReceivedDocumentCreate
     * @param document {String} The Base64 encoded document.
     * @param parseStrategy {module:model/ReceivedDocumentCreate.ParseStrategyEnum} The attachment content type (mime type).
     */
    constructor(document, parseStrategy) { 
        
        ReceivedDocumentCreate.initialize(this, document, parseStrategy);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, document, parseStrategy) { 
        obj['document'] = document;
        obj['parseStrategy'] = parseStrategy;
    }

    /**
     * Constructs a <code>ReceivedDocumentCreate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReceivedDocumentCreate} obj Optional instance to populate.
     * @return {module:model/ReceivedDocumentCreate} The populated <code>ReceivedDocumentCreate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReceivedDocumentCreate();

            if (data.hasOwnProperty('document')) {
                obj['document'] = ApiClient.convertToType(data['document'], 'String');
            }
            if (data.hasOwnProperty('parseStrategy')) {
                obj['parseStrategy'] = ApiClient.convertToType(data['parseStrategy'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReceivedDocumentCreate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReceivedDocumentCreate</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ReceivedDocumentCreate.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['document'] && !(typeof data['document'] === 'string' || data['document'] instanceof String)) {
            throw new Error("Expected the field `document` to be a primitive type in the JSON string but got " + data['document']);
        }
        // ensure the json data is a string
        if (data['parseStrategy'] && !(typeof data['parseStrategy'] === 'string' || data['parseStrategy'] instanceof String)) {
            throw new Error("Expected the field `parseStrategy` to be a primitive type in the JSON string but got " + data['parseStrategy']);
        }

        return true;
    }


}

ReceivedDocumentCreate.RequiredProperties = ["document", "parseStrategy"];

/**
 * The Base64 encoded document.
 * @member {String} document
 */
ReceivedDocumentCreate.prototype['document'] = undefined;

/**
 * The attachment content type (mime type).
 * @member {module:model/ReceivedDocumentCreate.ParseStrategyEnum} parseStrategy
 */
ReceivedDocumentCreate.prototype['parseStrategy'] = undefined;





/**
 * Allowed values for the <code>parseStrategy</code> property.
 * @enum {String}
 * @readonly
 */
ReceivedDocumentCreate['ParseStrategyEnum'] = {

    /**
     * value: "rfc822"
     * @const
     */
    "rfc822": "rfc822"
};



export default ReceivedDocumentCreate;

