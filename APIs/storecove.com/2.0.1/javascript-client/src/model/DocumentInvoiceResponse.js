/**
 * Storecove API
 * Storecove API
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: apisupport@storecove.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InvoiceResponseClarification from './InvoiceResponseClarification';

/**
 * The DocumentInvoiceResponse model module.
 * @module model/DocumentInvoiceResponse
 * @version 2.0.1
 */
class DocumentInvoiceResponse {
    /**
     * Constructs a new <code>DocumentInvoiceResponse</code>.
     * The invoice response to send or received.
     * @alias module:model/DocumentInvoiceResponse
     * @param responseCode {module:model/DocumentInvoiceResponse.ResponseCodeEnum} The response code. For details see https://docs.peppol.eu/poacc/upgrade-3/codelist/UNCL4343-T111/
     */
    constructor(responseCode) { 
        
        DocumentInvoiceResponse.initialize(this, responseCode);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, responseCode) { 
        obj['responseCode'] = responseCode;
    }

    /**
     * Constructs a <code>DocumentInvoiceResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DocumentInvoiceResponse} obj Optional instance to populate.
     * @return {module:model/DocumentInvoiceResponse} The populated <code>DocumentInvoiceResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DocumentInvoiceResponse();

            if (data.hasOwnProperty('clarifications')) {
                obj['clarifications'] = ApiClient.convertToType(data['clarifications'], [InvoiceResponseClarification]);
            }
            if (data.hasOwnProperty('effectiveDate')) {
                obj['effectiveDate'] = ApiClient.convertToType(data['effectiveDate'], 'String');
            }
            if (data.hasOwnProperty('note')) {
                obj['note'] = ApiClient.convertToType(data['note'], 'String');
            }
            if (data.hasOwnProperty('responseCode')) {
                obj['responseCode'] = ApiClient.convertToType(data['responseCode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DocumentInvoiceResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DocumentInvoiceResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DocumentInvoiceResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['clarifications']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['clarifications'])) {
                throw new Error("Expected the field `clarifications` to be an array in the JSON data but got " + data['clarifications']);
            }
            // validate the optional field `clarifications` (array)
            for (const item of data['clarifications']) {
                InvoiceResponseClarification.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['effectiveDate'] && !(typeof data['effectiveDate'] === 'string' || data['effectiveDate'] instanceof String)) {
            throw new Error("Expected the field `effectiveDate` to be a primitive type in the JSON string but got " + data['effectiveDate']);
        }
        // ensure the json data is a string
        if (data['note'] && !(typeof data['note'] === 'string' || data['note'] instanceof String)) {
            throw new Error("Expected the field `note` to be a primitive type in the JSON string but got " + data['note']);
        }
        // ensure the json data is a string
        if (data['responseCode'] && !(typeof data['responseCode'] === 'string' || data['responseCode'] instanceof String)) {
            throw new Error("Expected the field `responseCode` to be a primitive type in the JSON string but got " + data['responseCode']);
        }

        return true;
    }


}

DocumentInvoiceResponse.RequiredProperties = ["responseCode"];

/**
 * A list of clarifications why a received invoice was rejected (RE) or under query (UQ) and what action to take.
 * @member {Array.<module:model/InvoiceResponseClarification>} clarifications
 */
DocumentInvoiceResponse.prototype['clarifications'] = undefined;

/**
 * The date when the status became effective. Format: yyyy-mm-dd.
 * @member {String} effectiveDate
 */
DocumentInvoiceResponse.prototype['effectiveDate'] = undefined;

/**
 * A note to add to the invoice reponse
 * @member {String} note
 */
DocumentInvoiceResponse.prototype['note'] = undefined;

/**
 * The response code. For details see https://docs.peppol.eu/poacc/upgrade-3/codelist/UNCL4343-T111/
 * @member {module:model/DocumentInvoiceResponse.ResponseCodeEnum} responseCode
 */
DocumentInvoiceResponse.prototype['responseCode'] = undefined;





/**
 * Allowed values for the <code>responseCode</code> property.
 * @enum {String}
 * @readonly
 */
DocumentInvoiceResponse['ResponseCodeEnum'] = {

    /**
     * value: "AB"
     * @const
     */
    "AB": "AB",

    /**
     * value: "IP"
     * @const
     */
    "IP": "IP",

    /**
     * value: "UQ"
     * @const
     */
    "UQ": "UQ",

    /**
     * value: "CA"
     * @const
     */
    "CA": "CA",

    /**
     * value: "RE"
     * @const
     */
    "RE": "RE",

    /**
     * value: "AP"
     * @const
     */
    "AP": "AP",

    /**
     * value: "PD"
     * @const
     */
    "PD": "PD"
};



export default DocumentInvoiceResponse;

