/**
 * Storecove API
 * Storecove API
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: apisupport@storecove.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.StorecoveApi);
  }
}(this, function(expect, StorecoveApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new StorecoveApi.DocumentOrder();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DocumentOrder', function() {
    it('should create an instance of DocumentOrder', function() {
      // uncomment below and update the code to test DocumentOrder
      //var instance = new StorecoveApi.DocumentOrder();
      //expect(instance).to.be.a(StorecoveApi.DocumentOrder);
    });

    it('should have the property accountingCost (base name: "accountingCost")', function() {
      // uncomment below and update the code to test the property accountingCost
      //var instance = new StorecoveApi.DocumentOrder();
      //expect(instance).to.be();
    });

    it('should have the property allowanceCharges (base name: "allowanceCharges")', function() {
      // uncomment below and update the code to test the property allowanceCharges
      //var instance = new StorecoveApi.DocumentOrder();
      //expect(instance).to.be();
    });

    it('should have the property amountIncludingTax (base name: "amountIncludingTax")', function() {
      // uncomment below and update the code to test the property amountIncludingTax
      //var instance = new StorecoveApi.DocumentOrder();
      //expect(instance).to.be();
    });

    it('should have the property attachments (base name: "attachments")', function() {
      // uncomment below and update the code to test the property attachments
      //var instance = new StorecoveApi.DocumentOrder();
      //expect(instance).to.be();
    });

    it('should have the property delivery (base name: "delivery")', function() {
      // uncomment below and update the code to test the property delivery
      //var instance = new StorecoveApi.DocumentOrder();
      //expect(instance).to.be();
    });

    it('should have the property deliveryTerms (base name: "deliveryTerms")', function() {
      // uncomment below and update the code to test the property deliveryTerms
      //var instance = new StorecoveApi.DocumentOrder();
      //expect(instance).to.be();
    });

    it('should have the property documentCurrencyCode (base name: "documentCurrencyCode")', function() {
      // uncomment below and update the code to test the property documentCurrencyCode
      //var instance = new StorecoveApi.DocumentOrder();
      //expect(instance).to.be();
    });

    it('should have the property documentNumber (base name: "documentNumber")', function() {
      // uncomment below and update the code to test the property documentNumber
      //var instance = new StorecoveApi.DocumentOrder();
      //expect(instance).to.be();
    });

    it('should have the property issueDate (base name: "issueDate")', function() {
      // uncomment below and update the code to test the property issueDate
      //var instance = new StorecoveApi.DocumentOrder();
      //expect(instance).to.be();
    });

    it('should have the property issueTime (base name: "issueTime")', function() {
      // uncomment below and update the code to test the property issueTime
      //var instance = new StorecoveApi.DocumentOrder();
      //expect(instance).to.be();
    });

    it('should have the property note (base name: "note")', function() {
      // uncomment below and update the code to test the property note
      //var instance = new StorecoveApi.DocumentOrder();
      //expect(instance).to.be();
    });

    it('should have the property orderLines (base name: "orderLines")', function() {
      // uncomment below and update the code to test the property orderLines
      //var instance = new StorecoveApi.DocumentOrder();
      //expect(instance).to.be();
    });

    it('should have the property orderType (base name: "orderType")', function() {
      // uncomment below and update the code to test the property orderType
      //var instance = new StorecoveApi.DocumentOrder();
      //expect(instance).to.be();
    });

    it('should have the property paymentTerms (base name: "paymentTerms")', function() {
      // uncomment below and update the code to test the property paymentTerms
      //var instance = new StorecoveApi.DocumentOrder();
      //expect(instance).to.be();
    });

    it('should have the property references (base name: "references")', function() {
      // uncomment below and update the code to test the property references
      //var instance = new StorecoveApi.DocumentOrder();
      //expect(instance).to.be();
    });

    it('should have the property sellerSupplierParty (base name: "sellerSupplierParty")', function() {
      // uncomment below and update the code to test the property sellerSupplierParty
      //var instance = new StorecoveApi.DocumentOrder();
      //expect(instance).to.be();
    });

    it('should have the property taxSystem (base name: "taxSystem")', function() {
      // uncomment below and update the code to test the property taxSystem
      //var instance = new StorecoveApi.DocumentOrder();
      //expect(instance).to.be();
    });

    it('should have the property timeZone (base name: "timeZone")', function() {
      // uncomment below and update the code to test the property timeZone
      //var instance = new StorecoveApi.DocumentOrder();
      //expect(instance).to.be();
    });

    it('should have the property validityPeriod (base name: "validityPeriod")', function() {
      // uncomment below and update the code to test the property validityPeriod
      //var instance = new StorecoveApi.DocumentOrder();
      //expect(instance).to.be();
    });

  });

}));
