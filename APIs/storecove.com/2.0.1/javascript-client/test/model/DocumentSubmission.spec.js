/**
 * Storecove API
 * Storecove API
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: apisupport@storecove.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.StorecoveApi);
  }
}(this, function(expect, StorecoveApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new StorecoveApi.DocumentSubmission();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DocumentSubmission', function() {
    it('should create an instance of DocumentSubmission', function() {
      // uncomment below and update the code to test DocumentSubmission
      //var instance = new StorecoveApi.DocumentSubmission();
      //expect(instance).to.be.a(StorecoveApi.DocumentSubmission);
    });

    it('should have the property attachments (base name: "attachments")', function() {
      // uncomment below and update the code to test the property attachments
      //var instance = new StorecoveApi.DocumentSubmission();
      //expect(instance).to.be();
    });

    it('should have the property createPrimaryImage (base name: "createPrimaryImage")', function() {
      // uncomment below and update the code to test the property createPrimaryImage
      //var instance = new StorecoveApi.DocumentSubmission();
      //expect(instance).to.be();
    });

    it('should have the property document (base name: "document")', function() {
      // uncomment below and update the code to test the property document
      //var instance = new StorecoveApi.DocumentSubmission();
      //expect(instance).to.be();
    });

    it('should have the property idempotencyGuid (base name: "idempotencyGuid")', function() {
      // uncomment below and update the code to test the property idempotencyGuid
      //var instance = new StorecoveApi.DocumentSubmission();
      //expect(instance).to.be();
    });

    it('should have the property legalEntityId (base name: "legalEntityId")', function() {
      // uncomment below and update the code to test the property legalEntityId
      //var instance = new StorecoveApi.DocumentSubmission();
      //expect(instance).to.be();
    });

    it('should have the property receiveGuid (base name: "receiveGuid")', function() {
      // uncomment below and update the code to test the property receiveGuid
      //var instance = new StorecoveApi.DocumentSubmission();
      //expect(instance).to.be();
    });

    it('should have the property routing (base name: "routing")', function() {
      // uncomment below and update the code to test the property routing
      //var instance = new StorecoveApi.DocumentSubmission();
      //expect(instance).to.be();
    });

  });

}));
