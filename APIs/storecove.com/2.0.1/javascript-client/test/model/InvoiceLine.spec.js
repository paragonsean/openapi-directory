/**
 * Storecove API
 * Storecove API
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: apisupport@storecove.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.StorecoveApi);
  }
}(this, function(expect, StorecoveApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new StorecoveApi.InvoiceLine();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('InvoiceLine', function() {
    it('should create an instance of InvoiceLine', function() {
      // uncomment below and update the code to test InvoiceLine
      //var instance = new StorecoveApi.InvoiceLine();
      //expect(instance).to.be.a(StorecoveApi.InvoiceLine);
    });

    it('should have the property accountingCost (base name: "accountingCost")', function() {
      // uncomment below and update the code to test the property accountingCost
      //var instance = new StorecoveApi.InvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property additionalItemProperties (base name: "additionalItemProperties")', function() {
      // uncomment below and update the code to test the property additionalItemProperties
      //var instance = new StorecoveApi.InvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property allowanceCharge (base name: "allowanceCharge")', function() {
      // uncomment below and update the code to test the property allowanceCharge
      //var instance = new StorecoveApi.InvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property allowanceCharges (base name: "allowanceCharges")', function() {
      // uncomment below and update the code to test the property allowanceCharges
      //var instance = new StorecoveApi.InvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property amountExcludingTax (base name: "amountExcludingTax")', function() {
      // uncomment below and update the code to test the property amountExcludingTax
      //var instance = new StorecoveApi.InvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property amountExcludingVat (base name: "amountExcludingVat")', function() {
      // uncomment below and update the code to test the property amountExcludingVat
      //var instance = new StorecoveApi.InvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property amountIncludingTax (base name: "amountIncludingTax")', function() {
      // uncomment below and update the code to test the property amountIncludingTax
      //var instance = new StorecoveApi.InvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property buyersItemIdentification (base name: "buyersItemIdentification")', function() {
      // uncomment below and update the code to test the property buyersItemIdentification
      //var instance = new StorecoveApi.InvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new StorecoveApi.InvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property invoicePeriod (base name: "invoicePeriod")', function() {
      // uncomment below and update the code to test the property invoicePeriod
      //var instance = new StorecoveApi.InvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property itemPrice (base name: "itemPrice")', function() {
      // uncomment below and update the code to test the property itemPrice
      //var instance = new StorecoveApi.InvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property lineId (base name: "lineId")', function() {
      // uncomment below and update the code to test the property lineId
      //var instance = new StorecoveApi.InvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new StorecoveApi.InvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property note (base name: "note")', function() {
      // uncomment below and update the code to test the property note
      //var instance = new StorecoveApi.InvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property orderLineReferenceLineId (base name: "orderLineReferenceLineId")', function() {
      // uncomment below and update the code to test the property orderLineReferenceLineId
      //var instance = new StorecoveApi.InvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property quantity (base name: "quantity")', function() {
      // uncomment below and update the code to test the property quantity
      //var instance = new StorecoveApi.InvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property quantityUnitCode (base name: "quantityUnitCode")', function() {
      // uncomment below and update the code to test the property quantityUnitCode
      //var instance = new StorecoveApi.InvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property references (base name: "references")', function() {
      // uncomment below and update the code to test the property references
      //var instance = new StorecoveApi.InvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property sellersItemIdentification (base name: "sellersItemIdentification")', function() {
      // uncomment below and update the code to test the property sellersItemIdentification
      //var instance = new StorecoveApi.InvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property standardItemIdentification (base name: "standardItemIdentification")', function() {
      // uncomment below and update the code to test the property standardItemIdentification
      //var instance = new StorecoveApi.InvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property standardItemIdentificationSchemeAgencyId (base name: "standardItemIdentificationSchemeAgencyId")', function() {
      // uncomment below and update the code to test the property standardItemIdentificationSchemeAgencyId
      //var instance = new StorecoveApi.InvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property standardItemIdentificationSchemeId (base name: "standardItemIdentificationSchemeId")', function() {
      // uncomment below and update the code to test the property standardItemIdentificationSchemeId
      //var instance = new StorecoveApi.InvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property tax (base name: "tax")', function() {
      // uncomment below and update the code to test the property tax
      //var instance = new StorecoveApi.InvoiceLine();
      //expect(instance).to.be();
    });

    it('should have the property taxesDutiesFees (base name: "taxesDutiesFees")', function() {
      // uncomment below and update the code to test the property taxesDutiesFees
      //var instance = new StorecoveApi.InvoiceLine();
      //expect(instance).to.be();
    });

  });

}));
