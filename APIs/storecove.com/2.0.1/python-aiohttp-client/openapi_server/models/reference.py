# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class Reference(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, document_id: str=None, document_type: str=None, issue_date: str=None, line_id: str=None):
        """Reference - a model defined in OpenAPI

        :param document_id: The document_id of this Reference.
        :param document_type: The document_type of this Reference.
        :param issue_date: The issue_date of this Reference.
        :param line_id: The line_id of this Reference.
        """
        self.openapi_types = {
            'document_id': str,
            'document_type': str,
            'issue_date': str,
            'line_id': str
        }

        self.attribute_map = {
            'document_id': 'documentId',
            'document_type': 'documentType',
            'issue_date': 'issueDate',
            'line_id': 'lineId'
        }

        self._document_id = document_id
        self._document_type = document_type
        self._issue_date = issue_date
        self._line_id = line_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Reference':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Reference of this Reference.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def document_id(self):
        """Gets the document_id of this Reference.

        The id of the referenced document.

        :return: The document_id of this Reference.
        :rtype: str
        """
        return self._document_id

    @document_id.setter
    def document_id(self, document_id):
        """Sets the document_id of this Reference.

        The id of the referenced document.

        :param document_id: The document_id of this Reference.
        :type document_id: str
        """

        self._document_id = document_id

    @property
    def document_type(self):
        """Gets the document_type of this Reference.

        The type of the referenced document. The following types are supported: ++++ <ul>    <li>        <b>purchase_order</b> (document level, Invoice + Order)        <p>A reference to an order for this document, assigned by the buyer. Note that this often is a key field, since many receivers of invoices will use this field to automatically match the invoice to an order they placed. Many receivers refuse invoices that cannot be automatically matched, in particular government agencies. So it is highly recommended to fill this field whenever possible.</p>    </li>    <li>        <b>billing</b> (document level, Invoice)        <p>A reference to a billing document. For instance, credit notes may refer to an invoice they are a credit note for.</p>    </li>    <li>        <b>sales_order</b> (document level, Invoice + Order)        <p>A reference to an order for this document, assigned by the seller.</p>    </li>    <li>        <b>buyer_reference</b> (document level, Invoice, Order)        <p>The buyer's reference. Used for internal routing by the receiver. For orders, this becomes the customer reference which the receiver of the order should put back in the buyer reference field in the invoice.</p>    </li>    <li>        <b>contract</b> (document level, Invoice + Order)        <p>A reference to a contract or framework agreement that this document relates to.</p>    </li>    <li>        <b>despatch_advice</b> (document level, Invoice)        <p>A reference to a despatch advice for this document. In the FatturaPA, this is what will become the DDT.</p>    </li>    <li>        <b>originator</b> (document level, Invoice + Order)        <p>A reference to an originator document for this invoice.</p>    </li>    <li>        <b>receipt</b> (document level, Invoice)        <p>A reference to a receipt document for this document.</p>    </li>    <li>        <b>project</b> (document level, Invoice)        <p>A reference to a project document for this document.</p>    </li>    <li>        <b>quotation</b> (document level, Order)        <p>A reference to a quotation document for this document.</p>    </li>    <li>        <b>payment_url</b> (document level, Invoice)        <p>A to a payment URL for the invoice.</p>    </li>    <li>        <b>item_classification_code</b> (line level)        <p>A reference to a commodity classification / item classification code for this line.</p>    </li>    <li>        <b>item_commodity_code</b> (line level)        <p>A reference to a commodity classification / commodity code for this line.</p>    </li>    <li>        <b>line_document_reference</b> (line level)        <p>A reference to another document for this line.</p>    </li>    <li>        <b>line_standard_item_identification</b> (line level)        <p>A standard item identification.</p>    </li>    <li>        <b>line_sellers_item_identification</b> (line level)        <p>The seller's item identification.</p>    </li>    <li>        <b>line_buyers_item_identification</b> (line level)        <p>The buyer's item identification.</p>    </li>    <li>        <b>item_specification</b> (line level)        <p>Referece to an item specification document</p>    </li></ul> ++++ 

        :return: The document_type of this Reference.
        :rtype: str
        """
        return self._document_type

    @document_type.setter
    def document_type(self, document_type):
        """Sets the document_type of this Reference.

        The type of the referenced document. The following types are supported: ++++ <ul>    <li>        <b>purchase_order</b> (document level, Invoice + Order)        <p>A reference to an order for this document, assigned by the buyer. Note that this often is a key field, since many receivers of invoices will use this field to automatically match the invoice to an order they placed. Many receivers refuse invoices that cannot be automatically matched, in particular government agencies. So it is highly recommended to fill this field whenever possible.</p>    </li>    <li>        <b>billing</b> (document level, Invoice)        <p>A reference to a billing document. For instance, credit notes may refer to an invoice they are a credit note for.</p>    </li>    <li>        <b>sales_order</b> (document level, Invoice + Order)        <p>A reference to an order for this document, assigned by the seller.</p>    </li>    <li>        <b>buyer_reference</b> (document level, Invoice, Order)        <p>The buyer's reference. Used for internal routing by the receiver. For orders, this becomes the customer reference which the receiver of the order should put back in the buyer reference field in the invoice.</p>    </li>    <li>        <b>contract</b> (document level, Invoice + Order)        <p>A reference to a contract or framework agreement that this document relates to.</p>    </li>    <li>        <b>despatch_advice</b> (document level, Invoice)        <p>A reference to a despatch advice for this document. In the FatturaPA, this is what will become the DDT.</p>    </li>    <li>        <b>originator</b> (document level, Invoice + Order)        <p>A reference to an originator document for this invoice.</p>    </li>    <li>        <b>receipt</b> (document level, Invoice)        <p>A reference to a receipt document for this document.</p>    </li>    <li>        <b>project</b> (document level, Invoice)        <p>A reference to a project document for this document.</p>    </li>    <li>        <b>quotation</b> (document level, Order)        <p>A reference to a quotation document for this document.</p>    </li>    <li>        <b>payment_url</b> (document level, Invoice)        <p>A to a payment URL for the invoice.</p>    </li>    <li>        <b>item_classification_code</b> (line level)        <p>A reference to a commodity classification / item classification code for this line.</p>    </li>    <li>        <b>item_commodity_code</b> (line level)        <p>A reference to a commodity classification / commodity code for this line.</p>    </li>    <li>        <b>line_document_reference</b> (line level)        <p>A reference to another document for this line.</p>    </li>    <li>        <b>line_standard_item_identification</b> (line level)        <p>A standard item identification.</p>    </li>    <li>        <b>line_sellers_item_identification</b> (line level)        <p>The seller's item identification.</p>    </li>    <li>        <b>line_buyers_item_identification</b> (line level)        <p>The buyer's item identification.</p>    </li>    <li>        <b>item_specification</b> (line level)        <p>Referece to an item specification document</p>    </li></ul> ++++ 

        :param document_type: The document_type of this Reference.
        :type document_type: str
        """
        allowed_values = ["purchase_order", "buyer_reference", "billing", "sales_order", "contract", "despatch_advice", "originator", "receipt", "project", "quotation", "payment_url", "item_classification_code", "item_commodity_code", "line_document_reference", "line_standard_item_identification", "line_sellers_item_identification", "line_buyers_item_identification", "item_specification"]  # noqa: E501
        if document_type not in allowed_values:
            raise ValueError(
                "Invalid value for `document_type` ({0}), must be one of {1}"
                .format(document_type, allowed_values)
            )

        self._document_type = document_type

    @property
    def issue_date(self):
        """Gets the issue_date of this Reference.

        The issue date of the referenced document.

        :return: The issue_date of this Reference.
        :rtype: str
        """
        return self._issue_date

    @issue_date.setter
    def issue_date(self, issue_date):
        """Sets the issue_date of this Reference.

        The issue date of the referenced document.

        :param issue_date: The issue_date of this Reference.
        :type issue_date: str
        """
        if issue_date is not None and not re.search(r'^[0-9]{4}-[0-9]{2}-[0-9]{2}$', issue_date):
            raise ValueError("Invalid value for `issue_date`, must be a follow pattern or equal to `/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/`")

        self._issue_date = issue_date

    @property
    def line_id(self):
        """Gets the line_id of this Reference.

        The line in the referenced document.

        :return: The line_id of this Reference.
        :rtype: str
        """
        return self._line_id

    @line_id.setter
    def line_id(self, line_id):
        """Sets the line_id of this Reference.

        The line in the referenced document.

        :param line_id: The line_id of this Reference.
        :type line_id: str
        """

        self._line_id = line_id
