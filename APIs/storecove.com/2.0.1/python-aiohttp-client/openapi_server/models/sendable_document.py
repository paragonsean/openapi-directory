# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.document_invoice_response import DocumentInvoiceResponse
from openapi_server.models.document_order import DocumentOrder
from openapi_server.models.invoice import Invoice
from openapi_server.models.raw_document_data import RawDocumentData
from openapi_server import util


class SendableDocument(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, document_type: str=None, invoice: Invoice=None, invoice_response: DocumentInvoiceResponse=None, order: DocumentOrder=None, raw_document_data: RawDocumentData=None):
        """SendableDocument - a model defined in OpenAPI

        :param document_type: The document_type of this SendableDocument.
        :param invoice: The invoice of this SendableDocument.
        :param invoice_response: The invoice_response of this SendableDocument.
        :param order: The order of this SendableDocument.
        :param raw_document_data: The raw_document_data of this SendableDocument.
        """
        self.openapi_types = {
            'document_type': str,
            'invoice': Invoice,
            'invoice_response': DocumentInvoiceResponse,
            'order': DocumentOrder,
            'raw_document_data': RawDocumentData
        }

        self.attribute_map = {
            'document_type': 'documentType',
            'invoice': 'invoice',
            'invoice_response': 'invoiceResponse',
            'order': 'order',
            'raw_document_data': 'rawDocumentData'
        }

        self._document_type = document_type
        self._invoice = invoice
        self._invoice_response = invoice_response
        self._order = order
        self._raw_document_data = raw_document_data

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SendableDocument':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SendableDocument of this SendableDocument.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def document_type(self):
        """Gets the document_type of this SendableDocument.

        The type of document to be sent.

        :return: The document_type of this SendableDocument.
        :rtype: str
        """
        return self._document_type

    @document_type.setter
    def document_type(self, document_type):
        """Sets the document_type of this SendableDocument.

        The type of document to be sent.

        :param document_type: The document_type of this SendableDocument.
        :type document_type: str
        """
        allowed_values = ["invoice", "invoice_response", "order"]  # noqa: E501
        if document_type not in allowed_values:
            raise ValueError(
                "Invalid value for `document_type` ({0}), must be one of {1}"
                .format(document_type, allowed_values)
            )

        self._document_type = document_type

    @property
    def invoice(self):
        """Gets the invoice of this SendableDocument.


        :return: The invoice of this SendableDocument.
        :rtype: Invoice
        """
        return self._invoice

    @invoice.setter
    def invoice(self, invoice):
        """Sets the invoice of this SendableDocument.


        :param invoice: The invoice of this SendableDocument.
        :type invoice: Invoice
        """

        self._invoice = invoice

    @property
    def invoice_response(self):
        """Gets the invoice_response of this SendableDocument.


        :return: The invoice_response of this SendableDocument.
        :rtype: DocumentInvoiceResponse
        """
        return self._invoice_response

    @invoice_response.setter
    def invoice_response(self, invoice_response):
        """Sets the invoice_response of this SendableDocument.


        :param invoice_response: The invoice_response of this SendableDocument.
        :type invoice_response: DocumentInvoiceResponse
        """

        self._invoice_response = invoice_response

    @property
    def order(self):
        """Gets the order of this SendableDocument.


        :return: The order of this SendableDocument.
        :rtype: DocumentOrder
        """
        return self._order

    @order.setter
    def order(self, order):
        """Sets the order of this SendableDocument.


        :param order: The order of this SendableDocument.
        :type order: DocumentOrder
        """

        self._order = order

    @property
    def raw_document_data(self):
        """Gets the raw_document_data of this SendableDocument.


        :return: The raw_document_data of this SendableDocument.
        :rtype: RawDocumentData
        """
        return self._raw_document_data

    @raw_document_data.setter
    def raw_document_data(self, raw_document_data):
        """Sets the raw_document_data of this SendableDocument.


        :param raw_document_data: The raw_document_data of this SendableDocument.
        :type raw_document_data: RawDocumentData
        """

        self._raw_document_data = raw_document_data
