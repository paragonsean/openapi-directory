# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PurchaseInvoiceInvoiceLinePrice(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, base_quantity: float=None, price_amount: float=None):
        """PurchaseInvoiceInvoiceLinePrice - a model defined in OpenAPI

        :param base_quantity: The base_quantity of this PurchaseInvoiceInvoiceLinePrice.
        :param price_amount: The price_amount of this PurchaseInvoiceInvoiceLinePrice.
        """
        self.openapi_types = {
            'base_quantity': float,
            'price_amount': float
        }

        self.attribute_map = {
            'base_quantity': 'base_quantity',
            'price_amount': 'price_amount'
        }

        self._base_quantity = base_quantity
        self._price_amount = price_amount

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PurchaseInvoiceInvoiceLinePrice':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PurchaseInvoiceInvoiceLinePrice of this PurchaseInvoiceInvoiceLinePrice.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def base_quantity(self):
        """Gets the base_quantity of this PurchaseInvoiceInvoiceLinePrice.

        The number of items the price is for. Can have up to digits.

        :return: The base_quantity of this PurchaseInvoiceInvoiceLinePrice.
        :rtype: float
        """
        return self._base_quantity

    @base_quantity.setter
    def base_quantity(self, base_quantity):
        """Sets the base_quantity of this PurchaseInvoiceInvoiceLinePrice.

        The number of items the price is for. Can have up to digits.

        :param base_quantity: The base_quantity of this PurchaseInvoiceInvoiceLinePrice.
        :type base_quantity: float
        """

        self._base_quantity = base_quantity

    @property
    def price_amount(self):
        """Gets the price_amount of this PurchaseInvoiceInvoiceLinePrice.

        The price for one item, excluding VAT. Can have up to digits.

        :return: The price_amount of this PurchaseInvoiceInvoiceLinePrice.
        :rtype: float
        """
        return self._price_amount

    @price_amount.setter
    def price_amount(self, price_amount):
        """Sets the price_amount of this PurchaseInvoiceInvoiceLinePrice.

        The price for one item, excluding VAT. Can have up to digits.

        :param price_amount: The price_amount of this PurchaseInvoiceInvoiceLinePrice.
        :type price_amount: float
        """

        self._price_amount = price_amount
