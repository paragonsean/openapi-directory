# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.business_receiver import BusinessReceiver
from openapi_server.models.consumer_receiver import ConsumerReceiver
from openapi_server.models.government_receiver import GovernmentReceiver
from openapi_server import util


class Receiver(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, business: BusinessReceiver=None, consumer: ConsumerReceiver=None, government: GovernmentReceiver=None):
        """Receiver - a model defined in OpenAPI

        :param business: The business of this Receiver.
        :param consumer: The consumer of this Receiver.
        :param government: The government of this Receiver.
        """
        self.openapi_types = {
            'business': BusinessReceiver,
            'consumer': ConsumerReceiver,
            'government': GovernmentReceiver
        }

        self.attribute_map = {
            'business': 'business',
            'consumer': 'consumer',
            'government': 'government'
        }

        self._business = business
        self._consumer = consumer
        self._government = government

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Receiver':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Receiver of this Receiver.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def business(self):
        """Gets the business of this Receiver.


        :return: The business of this Receiver.
        :rtype: BusinessReceiver
        """
        return self._business

    @business.setter
    def business(self, business):
        """Sets the business of this Receiver.


        :param business: The business of this Receiver.
        :type business: BusinessReceiver
        """

        self._business = business

    @property
    def consumer(self):
        """Gets the consumer of this Receiver.


        :return: The consumer of this Receiver.
        :rtype: ConsumerReceiver
        """
        return self._consumer

    @consumer.setter
    def consumer(self, consumer):
        """Sets the consumer of this Receiver.


        :param consumer: The consumer of this Receiver.
        :type consumer: ConsumerReceiver
        """

        self._consumer = consumer

    @property
    def government(self):
        """Gets the government of this Receiver.


        :return: The government of this Receiver.
        :rtype: GovernmentReceiver
        """
        return self._government

    @government.setter
    def government(self, government):
        """Sets the government of this Receiver.


        :param government: The government of this Receiver.
        :type government: GovernmentReceiver
        """

        self._government = government
