# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.purchase_invoice_accounting_details import PurchaseInvoiceAccountingDetails
from openapi_server.models.purchase_invoice_invoice_line_allowance_charge import PurchaseInvoiceInvoiceLineAllowanceCharge
from openapi_server.models.purchase_invoice_invoice_line_item import PurchaseInvoiceInvoiceLineItem
from openapi_server.models.purchase_invoice_invoice_line_price import PurchaseInvoiceInvoiceLinePrice
from openapi_server.models.purchase_invoice_tax import PurchaseInvoiceTax
from openapi_server.models.vat_details import VATDetails
from openapi_server import util


class PurchaseInvoiceInvoiceLine(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, accounting: PurchaseInvoiceAccountingDetails=None, allowance_charge: float=None, allowance_charge_array: List[PurchaseInvoiceInvoiceLineAllowanceCharge]=None, allowance_charges: List[float]=None, amount_excluding_tax: float=None, amount_excluding_vat: float=None, description: str=None, name: str=None, period_end: str=None, period_start: str=None, price: PurchaseInvoiceInvoiceLinePrice=None, tax: PurchaseInvoiceTax=None, units: PurchaseInvoiceInvoiceLineItem=None, vat: VATDetails=None):
        """PurchaseInvoiceInvoiceLine - a model defined in OpenAPI

        :param accounting: The accounting of this PurchaseInvoiceInvoiceLine.
        :param allowance_charge: The allowance_charge of this PurchaseInvoiceInvoiceLine.
        :param allowance_charge_array: The allowance_charge_array of this PurchaseInvoiceInvoiceLine.
        :param allowance_charges: The allowance_charges of this PurchaseInvoiceInvoiceLine.
        :param amount_excluding_tax: The amount_excluding_tax of this PurchaseInvoiceInvoiceLine.
        :param amount_excluding_vat: The amount_excluding_vat of this PurchaseInvoiceInvoiceLine.
        :param description: The description of this PurchaseInvoiceInvoiceLine.
        :param name: The name of this PurchaseInvoiceInvoiceLine.
        :param period_end: The period_end of this PurchaseInvoiceInvoiceLine.
        :param period_start: The period_start of this PurchaseInvoiceInvoiceLine.
        :param price: The price of this PurchaseInvoiceInvoiceLine.
        :param tax: The tax of this PurchaseInvoiceInvoiceLine.
        :param units: The units of this PurchaseInvoiceInvoiceLine.
        :param vat: The vat of this PurchaseInvoiceInvoiceLine.
        """
        self.openapi_types = {
            'accounting': PurchaseInvoiceAccountingDetails,
            'allowance_charge': float,
            'allowance_charge_array': List[PurchaseInvoiceInvoiceLineAllowanceCharge],
            'allowance_charges': List[float],
            'amount_excluding_tax': float,
            'amount_excluding_vat': float,
            'description': str,
            'name': str,
            'period_end': str,
            'period_start': str,
            'price': PurchaseInvoiceInvoiceLinePrice,
            'tax': PurchaseInvoiceTax,
            'units': PurchaseInvoiceInvoiceLineItem,
            'vat': VATDetails
        }

        self.attribute_map = {
            'accounting': 'accounting',
            'allowance_charge': 'allowance_charge',
            'allowance_charge_array': 'allowance_charge_array',
            'allowance_charges': 'allowance_charges',
            'amount_excluding_tax': 'amount_excluding_tax',
            'amount_excluding_vat': 'amount_excluding_vat',
            'description': 'description',
            'name': 'name',
            'period_end': 'period_end',
            'period_start': 'period_start',
            'price': 'price',
            'tax': 'tax',
            'units': 'units',
            'vat': 'vat'
        }

        self._accounting = accounting
        self._allowance_charge = allowance_charge
        self._allowance_charge_array = allowance_charge_array
        self._allowance_charges = allowance_charges
        self._amount_excluding_tax = amount_excluding_tax
        self._amount_excluding_vat = amount_excluding_vat
        self._description = description
        self._name = name
        self._period_end = period_end
        self._period_start = period_start
        self._price = price
        self._tax = tax
        self._units = units
        self._vat = vat

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PurchaseInvoiceInvoiceLine':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PurchaseInvoiceInvoiceLine of this PurchaseInvoiceInvoiceLine.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def accounting(self):
        """Gets the accounting of this PurchaseInvoiceInvoiceLine.


        :return: The accounting of this PurchaseInvoiceInvoiceLine.
        :rtype: PurchaseInvoiceAccountingDetails
        """
        return self._accounting

    @accounting.setter
    def accounting(self, accounting):
        """Sets the accounting of this PurchaseInvoiceInvoiceLine.


        :param accounting: The accounting of this PurchaseInvoiceInvoiceLine.
        :type accounting: PurchaseInvoiceAccountingDetails
        """

        self._accounting = accounting

    @property
    def allowance_charge(self):
        """Gets the allowance_charge of this PurchaseInvoiceInvoiceLine.

        DEPRECATED - use allowance_charges.

        :return: The allowance_charge of this PurchaseInvoiceInvoiceLine.
        :rtype: float
        """
        return self._allowance_charge

    @allowance_charge.setter
    def allowance_charge(self, allowance_charge):
        """Sets the allowance_charge of this PurchaseInvoiceInvoiceLine.

        DEPRECATED - use allowance_charges.

        :param allowance_charge: The allowance_charge of this PurchaseInvoiceInvoiceLine.
        :type allowance_charge: float
        """

        self._allowance_charge = allowance_charge

    @property
    def allowance_charge_array(self):
        """Gets the allowance_charge_array of this PurchaseInvoiceInvoiceLine.


        :return: The allowance_charge_array of this PurchaseInvoiceInvoiceLine.
        :rtype: List[PurchaseInvoiceInvoiceLineAllowanceCharge]
        """
        return self._allowance_charge_array

    @allowance_charge_array.setter
    def allowance_charge_array(self, allowance_charge_array):
        """Sets the allowance_charge_array of this PurchaseInvoiceInvoiceLine.


        :param allowance_charge_array: The allowance_charge_array of this PurchaseInvoiceInvoiceLine.
        :type allowance_charge_array: List[PurchaseInvoiceInvoiceLineAllowanceCharge]
        """

        self._allowance_charge_array = allowance_charge_array

    @property
    def allowance_charges(self):
        """Gets the allowance_charges of this PurchaseInvoiceInvoiceLine.

        Deprecated.

        :return: The allowance_charges of this PurchaseInvoiceInvoiceLine.
        :rtype: List[float]
        """
        return self._allowance_charges

    @allowance_charges.setter
    def allowance_charges(self, allowance_charges):
        """Sets the allowance_charges of this PurchaseInvoiceInvoiceLine.

        Deprecated.

        :param allowance_charges: The allowance_charges of this PurchaseInvoiceInvoiceLine.
        :type allowance_charges: List[float]
        """

        self._allowance_charges = allowance_charges

    @property
    def amount_excluding_tax(self):
        """Gets the amount_excluding_tax of this PurchaseInvoiceInvoiceLine.

        The amount excluding Tax. This is equal to quantity x price_amount + ∑ allowance_charges.

        :return: The amount_excluding_tax of this PurchaseInvoiceInvoiceLine.
        :rtype: float
        """
        return self._amount_excluding_tax

    @amount_excluding_tax.setter
    def amount_excluding_tax(self, amount_excluding_tax):
        """Sets the amount_excluding_tax of this PurchaseInvoiceInvoiceLine.

        The amount excluding Tax. This is equal to quantity x price_amount + ∑ allowance_charges.

        :param amount_excluding_tax: The amount_excluding_tax of this PurchaseInvoiceInvoiceLine.
        :type amount_excluding_tax: float
        """

        self._amount_excluding_tax = amount_excluding_tax

    @property
    def amount_excluding_vat(self):
        """Gets the amount_excluding_vat of this PurchaseInvoiceInvoiceLine.

        DEPRECATED - use amount_excluding_tax. The amount excluding VAT.

        :return: The amount_excluding_vat of this PurchaseInvoiceInvoiceLine.
        :rtype: float
        """
        return self._amount_excluding_vat

    @amount_excluding_vat.setter
    def amount_excluding_vat(self, amount_excluding_vat):
        """Sets the amount_excluding_vat of this PurchaseInvoiceInvoiceLine.

        DEPRECATED - use amount_excluding_tax. The amount excluding VAT.

        :param amount_excluding_vat: The amount_excluding_vat of this PurchaseInvoiceInvoiceLine.
        :type amount_excluding_vat: float
        """

        self._amount_excluding_vat = amount_excluding_vat

    @property
    def description(self):
        """Gets the description of this PurchaseInvoiceInvoiceLine.

        The description for the invoice line.

        :return: The description of this PurchaseInvoiceInvoiceLine.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this PurchaseInvoiceInvoiceLine.

        The description for the invoice line.

        :param description: The description of this PurchaseInvoiceInvoiceLine.
        :type description: str
        """

        self._description = description

    @property
    def name(self):
        """Gets the name of this PurchaseInvoiceInvoiceLine.

        A short name for the invoice line.

        :return: The name of this PurchaseInvoiceInvoiceLine.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PurchaseInvoiceInvoiceLine.

        A short name for the invoice line.

        :param name: The name of this PurchaseInvoiceInvoiceLine.
        :type name: str
        """

        self._name = name

    @property
    def period_end(self):
        """Gets the period_end of this PurchaseInvoiceInvoiceLine.

        The end date of the period this invoice line relates to. Format \"YYYY-MM-DD\".

        :return: The period_end of this PurchaseInvoiceInvoiceLine.
        :rtype: str
        """
        return self._period_end

    @period_end.setter
    def period_end(self, period_end):
        """Sets the period_end of this PurchaseInvoiceInvoiceLine.

        The end date of the period this invoice line relates to. Format \"YYYY-MM-DD\".

        :param period_end: The period_end of this PurchaseInvoiceInvoiceLine.
        :type period_end: str
        """

        self._period_end = period_end

    @property
    def period_start(self):
        """Gets the period_start of this PurchaseInvoiceInvoiceLine.

        The start date of the period this invoice line relates to. Format \"YYYY-MM-DD\".

        :return: The period_start of this PurchaseInvoiceInvoiceLine.
        :rtype: str
        """
        return self._period_start

    @period_start.setter
    def period_start(self, period_start):
        """Sets the period_start of this PurchaseInvoiceInvoiceLine.

        The start date of the period this invoice line relates to. Format \"YYYY-MM-DD\".

        :param period_start: The period_start of this PurchaseInvoiceInvoiceLine.
        :type period_start: str
        """

        self._period_start = period_start

    @property
    def price(self):
        """Gets the price of this PurchaseInvoiceInvoiceLine.


        :return: The price of this PurchaseInvoiceInvoiceLine.
        :rtype: PurchaseInvoiceInvoiceLinePrice
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this PurchaseInvoiceInvoiceLine.


        :param price: The price of this PurchaseInvoiceInvoiceLine.
        :type price: PurchaseInvoiceInvoiceLinePrice
        """

        self._price = price

    @property
    def tax(self):
        """Gets the tax of this PurchaseInvoiceInvoiceLine.


        :return: The tax of this PurchaseInvoiceInvoiceLine.
        :rtype: PurchaseInvoiceTax
        """
        return self._tax

    @tax.setter
    def tax(self, tax):
        """Sets the tax of this PurchaseInvoiceInvoiceLine.


        :param tax: The tax of this PurchaseInvoiceInvoiceLine.
        :type tax: PurchaseInvoiceTax
        """

        self._tax = tax

    @property
    def units(self):
        """Gets the units of this PurchaseInvoiceInvoiceLine.


        :return: The units of this PurchaseInvoiceInvoiceLine.
        :rtype: PurchaseInvoiceInvoiceLineItem
        """
        return self._units

    @units.setter
    def units(self, units):
        """Sets the units of this PurchaseInvoiceInvoiceLine.


        :param units: The units of this PurchaseInvoiceInvoiceLine.
        :type units: PurchaseInvoiceInvoiceLineItem
        """

        self._units = units

    @property
    def vat(self):
        """Gets the vat of this PurchaseInvoiceInvoiceLine.


        :return: The vat of this PurchaseInvoiceInvoiceLine.
        :rtype: VATDetails
        """
        return self._vat

    @vat.setter
    def vat(self, vat):
        """Sets the vat of this PurchaseInvoiceInvoiceLine.


        :param vat: The vat of this PurchaseInvoiceInvoiceLine.
        :type vat: VATDetails
        """

        self._vat = vat
