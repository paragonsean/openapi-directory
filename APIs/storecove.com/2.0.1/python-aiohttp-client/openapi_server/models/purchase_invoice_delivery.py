# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.location import Location
from openapi_server.models.purchase_invoice_party import PurchaseInvoiceParty
from openapi_server import util


class PurchaseInvoiceDelivery(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, actual_date: str=None, location: Location=None, party: PurchaseInvoiceParty=None):
        """PurchaseInvoiceDelivery - a model defined in OpenAPI

        :param actual_date: The actual_date of this PurchaseInvoiceDelivery.
        :param location: The location of this PurchaseInvoiceDelivery.
        :param party: The party of this PurchaseInvoiceDelivery.
        """
        self.openapi_types = {
            'actual_date': str,
            'location': Location,
            'party': PurchaseInvoiceParty
        }

        self.attribute_map = {
            'actual_date': 'actual_date',
            'location': 'location',
            'party': 'party'
        }

        self._actual_date = actual_date
        self._location = location
        self._party = party

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PurchaseInvoiceDelivery':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PurchaseInvoice_Delivery of this PurchaseInvoiceDelivery.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def actual_date(self):
        """Gets the actual_date of this PurchaseInvoiceDelivery.

        The actual delivery date.

        :return: The actual_date of this PurchaseInvoiceDelivery.
        :rtype: str
        """
        return self._actual_date

    @actual_date.setter
    def actual_date(self, actual_date):
        """Sets the actual_date of this PurchaseInvoiceDelivery.

        The actual delivery date.

        :param actual_date: The actual_date of this PurchaseInvoiceDelivery.
        :type actual_date: str
        """

        self._actual_date = actual_date

    @property
    def location(self):
        """Gets the location of this PurchaseInvoiceDelivery.


        :return: The location of this PurchaseInvoiceDelivery.
        :rtype: Location
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this PurchaseInvoiceDelivery.


        :param location: The location of this PurchaseInvoiceDelivery.
        :type location: Location
        """

        self._location = location

    @property
    def party(self):
        """Gets the party of this PurchaseInvoiceDelivery.


        :return: The party of this PurchaseInvoiceDelivery.
        :rtype: PurchaseInvoiceParty
        """
        return self._party

    @party.setter
    def party(self, party):
        """Sets the party of this PurchaseInvoiceDelivery.


        :param party: The party of this PurchaseInvoiceDelivery.
        :type party: PurchaseInvoiceParty
        """

        self._party = party
