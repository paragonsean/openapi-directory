# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReceivedDocumentCreate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, document: str=None, parse_strategy: str=None):
        """ReceivedDocumentCreate - a model defined in OpenAPI

        :param document: The document of this ReceivedDocumentCreate.
        :param parse_strategy: The parse_strategy of this ReceivedDocumentCreate.
        """
        self.openapi_types = {
            'document': str,
            'parse_strategy': str
        }

        self.attribute_map = {
            'document': 'document',
            'parse_strategy': 'parseStrategy'
        }

        self._document = document
        self._parse_strategy = parse_strategy

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReceivedDocumentCreate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReceivedDocumentCreate of this ReceivedDocumentCreate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def document(self):
        """Gets the document of this ReceivedDocumentCreate.

        The Base64 encoded document.

        :return: The document of this ReceivedDocumentCreate.
        :rtype: str
        """
        return self._document

    @document.setter
    def document(self, document):
        """Sets the document of this ReceivedDocumentCreate.

        The Base64 encoded document.

        :param document: The document of this ReceivedDocumentCreate.
        :type document: str
        """
        if document is None:
            raise ValueError("Invalid value for `document`, must not be `None`")

        self._document = document

    @property
    def parse_strategy(self):
        """Gets the parse_strategy of this ReceivedDocumentCreate.

        The attachment content type (mime type).

        :return: The parse_strategy of this ReceivedDocumentCreate.
        :rtype: str
        """
        return self._parse_strategy

    @parse_strategy.setter
    def parse_strategy(self, parse_strategy):
        """Sets the parse_strategy of this ReceivedDocumentCreate.

        The attachment content type (mime type).

        :param parse_strategy: The parse_strategy of this ReceivedDocumentCreate.
        :type parse_strategy: str
        """
        allowed_values = ["rfc822"]  # noqa: E501
        if parse_strategy not in allowed_values:
            raise ValueError(
                "Invalid value for `parse_strategy` ({0}), must be one of {1}"
                .format(parse_strategy, allowed_values)
            )

        self._parse_strategy = parse_strategy
