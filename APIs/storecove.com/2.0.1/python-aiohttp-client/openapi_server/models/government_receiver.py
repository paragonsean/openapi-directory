# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.country_specification_identifier import CountrySpecificationIdentifier
from openapi_server import util


class GovernmentReceiver(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, legal: CountrySpecificationIdentifier=None, routing: CountrySpecificationIdentifier=None, tax: CountrySpecificationIdentifier=None):
        """GovernmentReceiver - a model defined in OpenAPI

        :param legal: The legal of this GovernmentReceiver.
        :param routing: The routing of this GovernmentReceiver.
        :param tax: The tax of this GovernmentReceiver.
        """
        self.openapi_types = {
            'legal': CountrySpecificationIdentifier,
            'routing': CountrySpecificationIdentifier,
            'tax': CountrySpecificationIdentifier
        }

        self.attribute_map = {
            'legal': 'legal',
            'routing': 'routing',
            'tax': 'tax'
        }

        self._legal = legal
        self._routing = routing
        self._tax = tax

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GovernmentReceiver':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Government_Receiver of this GovernmentReceiver.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def legal(self):
        """Gets the legal of this GovernmentReceiver.


        :return: The legal of this GovernmentReceiver.
        :rtype: CountrySpecificationIdentifier
        """
        return self._legal

    @legal.setter
    def legal(self, legal):
        """Sets the legal of this GovernmentReceiver.


        :param legal: The legal of this GovernmentReceiver.
        :type legal: CountrySpecificationIdentifier
        """

        self._legal = legal

    @property
    def routing(self):
        """Gets the routing of this GovernmentReceiver.


        :return: The routing of this GovernmentReceiver.
        :rtype: CountrySpecificationIdentifier
        """
        return self._routing

    @routing.setter
    def routing(self, routing):
        """Sets the routing of this GovernmentReceiver.


        :param routing: The routing of this GovernmentReceiver.
        :type routing: CountrySpecificationIdentifier
        """

        self._routing = routing

    @property
    def tax(self):
        """Gets the tax of this GovernmentReceiver.


        :return: The tax of this GovernmentReceiver.
        :rtype: CountrySpecificationIdentifier
        """
        return self._tax

    @tax.setter
    def tax(self, tax):
        """Sets the tax of this GovernmentReceiver.


        :param tax: The tax of this GovernmentReceiver.
        :type tax: CountrySpecificationIdentifier
        """

        self._tax = tax
