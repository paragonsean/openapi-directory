# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.sender_party import SenderParty
from openapi_server import util


class AccountingSupplierParty(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, party: SenderParty=None):
        """AccountingSupplierParty - a model defined in OpenAPI

        :param party: The party of this AccountingSupplierParty.
        """
        self.openapi_types = {
            'party': SenderParty
        }

        self.attribute_map = {
            'party': 'party'
        }

        self._party = party

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountingSupplierParty':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccountingSupplierParty of this AccountingSupplierParty.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def party(self):
        """Gets the party of this AccountingSupplierParty.


        :return: The party of this AccountingSupplierParty.
        :rtype: SenderParty
        """
        return self._party

    @party.setter
    def party(self, party):
        """Sets the party of this AccountingSupplierParty.


        :param party: The party of this AccountingSupplierParty.
        :type party: SenderParty
        """

        self._party = party
