# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.invoice_submission_action_evidence import InvoiceSubmissionActionEvidence
from openapi_server import util


class InvoiceSubmissionEvidence(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, actions: List[InvoiceSubmissionActionEvidence]=None, guid: str=None, status: str=None):
        """InvoiceSubmissionEvidence - a model defined in OpenAPI

        :param actions: The actions of this InvoiceSubmissionEvidence.
        :param guid: The guid of this InvoiceSubmissionEvidence.
        :param status: The status of this InvoiceSubmissionEvidence.
        """
        self.openapi_types = {
            'actions': List[InvoiceSubmissionActionEvidence],
            'guid': str,
            'status': str
        }

        self.attribute_map = {
            'actions': 'actions',
            'guid': 'guid',
            'status': 'status'
        }

        self._actions = actions
        self._guid = guid
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InvoiceSubmissionEvidence':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InvoiceSubmissionEvidence of this InvoiceSubmissionEvidence.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def actions(self):
        """Gets the actions of this InvoiceSubmissionEvidence.

        An array of actions taken to deliver the document.

        :return: The actions of this InvoiceSubmissionEvidence.
        :rtype: List[InvoiceSubmissionActionEvidence]
        """
        return self._actions

    @actions.setter
    def actions(self, actions):
        """Sets the actions of this InvoiceSubmissionEvidence.

        An array of actions taken to deliver the document.

        :param actions: The actions of this InvoiceSubmissionEvidence.
        :type actions: List[InvoiceSubmissionActionEvidence]
        """

        self._actions = actions

    @property
    def guid(self):
        """Gets the guid of this InvoiceSubmissionEvidence.

        The guid for the InvoiceSubmission.

        :return: The guid of this InvoiceSubmissionEvidence.
        :rtype: str
        """
        return self._guid

    @guid.setter
    def guid(self, guid):
        """Sets the guid of this InvoiceSubmissionEvidence.

        The guid for the InvoiceSubmission.

        :param guid: The guid of this InvoiceSubmissionEvidence.
        :type guid: str
        """

        self._guid = guid

    @property
    def status(self):
        """Gets the status of this InvoiceSubmissionEvidence.

        The overall status for this InvoiceSubmission.

        :return: The status of this InvoiceSubmissionEvidence.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this InvoiceSubmissionEvidence.

        The overall status for this InvoiceSubmission.

        :param status: The status of this InvoiceSubmissionEvidence.
        :type status: str
        """

        self._status = status
