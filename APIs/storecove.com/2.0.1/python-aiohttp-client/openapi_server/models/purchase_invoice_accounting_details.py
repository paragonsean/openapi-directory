# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PurchaseInvoiceAccountingDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code: str=None, list: str=None, list_version: str=None, name: str=None):
        """PurchaseInvoiceAccountingDetails - a model defined in OpenAPI

        :param code: The code of this PurchaseInvoiceAccountingDetails.
        :param list: The list of this PurchaseInvoiceAccountingDetails.
        :param list_version: The list_version of this PurchaseInvoiceAccountingDetails.
        :param name: The name of this PurchaseInvoiceAccountingDetails.
        """
        self.openapi_types = {
            'code': str,
            'list': str,
            'list_version': str,
            'name': str
        }

        self.attribute_map = {
            'code': 'code',
            'list': 'list',
            'list_version': 'list_version',
            'name': 'name'
        }

        self._code = code
        self._list = list
        self._list_version = list_version
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PurchaseInvoiceAccountingDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PurchaseInvoiceAccountingDetails of this PurchaseInvoiceAccountingDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self):
        """Gets the code of this PurchaseInvoiceAccountingDetails.

        The the code of the general ledger account.

        :return: The code of this PurchaseInvoiceAccountingDetails.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this PurchaseInvoiceAccountingDetails.

        The the code of the general ledger account.

        :param code: The code of this PurchaseInvoiceAccountingDetails.
        :type code: str
        """

        self._code = code

    @property
    def list(self):
        """Gets the list of this PurchaseInvoiceAccountingDetails.

        The name of the list for the code, e.g. \"RGS\".

        :return: The list of this PurchaseInvoiceAccountingDetails.
        :rtype: str
        """
        return self._list

    @list.setter
    def list(self, list):
        """Sets the list of this PurchaseInvoiceAccountingDetails.

        The name of the list for the code, e.g. \"RGS\".

        :param list: The list of this PurchaseInvoiceAccountingDetails.
        :type list: str
        """

        self._list = list

    @property
    def list_version(self):
        """Gets the list_version of this PurchaseInvoiceAccountingDetails.

        The version of the list for the code, e.g. \"1.1\".

        :return: The list_version of this PurchaseInvoiceAccountingDetails.
        :rtype: str
        """
        return self._list_version

    @list_version.setter
    def list_version(self, list_version):
        """Sets the list_version of this PurchaseInvoiceAccountingDetails.

        The version of the list for the code, e.g. \"1.1\".

        :param list_version: The list_version of this PurchaseInvoiceAccountingDetails.
        :type list_version: str
        """

        self._list_version = list_version

    @property
    def name(self):
        """Gets the name of this PurchaseInvoiceAccountingDetails.

        A textual description of the code.

        :return: The name of this PurchaseInvoiceAccountingDetails.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PurchaseInvoiceAccountingDetails.

        A textual description of the code.

        :param name: The name of this PurchaseInvoiceAccountingDetails.
        :type name: str
        """

        self._name = name
