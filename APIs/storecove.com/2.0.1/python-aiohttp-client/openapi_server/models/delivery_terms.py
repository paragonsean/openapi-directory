# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeliveryTerms(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, delivery_location_id: str=None, incoterms: str=None, special_terms: str=None):
        """DeliveryTerms - a model defined in OpenAPI

        :param delivery_location_id: The delivery_location_id of this DeliveryTerms.
        :param incoterms: The incoterms of this DeliveryTerms.
        :param special_terms: The special_terms of this DeliveryTerms.
        """
        self.openapi_types = {
            'delivery_location_id': str,
            'incoterms': str,
            'special_terms': str
        }

        self.attribute_map = {
            'delivery_location_id': 'deliveryLocationId',
            'incoterms': 'incoterms',
            'special_terms': 'specialTerms'
        }

        self._delivery_location_id = delivery_location_id
        self._incoterms = incoterms
        self._special_terms = special_terms

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeliveryTerms':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeliveryTerms of this DeliveryTerms.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def delivery_location_id(self):
        """Gets the delivery_location_id of this DeliveryTerms.

        The location to which the delivery terms refer.

        :return: The delivery_location_id of this DeliveryTerms.
        :rtype: str
        """
        return self._delivery_location_id

    @delivery_location_id.setter
    def delivery_location_id(self, delivery_location_id):
        """Sets the delivery_location_id of this DeliveryTerms.

        The location to which the delivery terms refer.

        :param delivery_location_id: The delivery_location_id of this DeliveryTerms.
        :type delivery_location_id: str
        """
        if delivery_location_id is not None and len(delivery_location_id) > 128:
            raise ValueError("Invalid value for `delivery_location_id`, length must be less than or equal to `128`")

        self._delivery_location_id = delivery_location_id

    @property
    def incoterms(self):
        """Gets the incoterms of this DeliveryTerms.

        The incoterms: ++++ <ul>    <li>        <strong>EXW – Ex Works</strong><br/>        The seller must give the buyer access to goods at an agreed location. From that moment, the buyer bears almost all costs and risks during the entire shipping process.<br/>    </li>    <li>        <strong>FCA – Free Carrier</strong><br/>        The seller must make the goods available at his own risk and expense at his own premises or at an agreed place. In both cases, the seller is responsible for the clearance of the goods for export. It can be agreed that the buyer must instruct the carrier to transfer a “Bill of Lading (BL)” with a note on board to the seller.    </li>    <li>        <strong>CPT – Carriage Paid To</strong><br/>        The seller has the same responsibilities as with FCA, but in this case also pays the delivery costs.    </li>    <li>        <strong>CIP – Carriage Insurance Paid To</strong><br/>        The same seller responsibilities as with CPT, only in this case the seller is obliged to pay the insurance with a high coverage ratio. Parties can agree separately to apply limited coverage.    </li>    <li>        <strong>DAP – Delivered At Place</strong><br/>        The seller bears the costs and risks during the transport of the goods to an agreed address. As soon as the goods have arrived at this address and are ready for unloading, the risk passes to the buyer.    </li>    <li>        <strong>DPU – Delivered at Place Unloaded</strong><br/>        The seller is responsible for the costs and risks of delivering goods to an agreed destination where goods can be unloaded for further transport. The selling party arranges customs and unloads the goods at the agreed place. The buyer arranges the customs clearance and any associated rights.    </li>    <li>        <strong>DDP – Delivered Duty Paid</strong><br/>        The seller bears the costs and risks of transport, carries out the export and import responsibilities and pays any import duties. As soon as the goods have arrived at the address and are ready for unloading, the risk passes to the buyer.    </li>    <li>        <strong>FAS – Free Alongside Ship</strong><br/>        The seller bears all costs and risks until the goods are delivered next to the ship. From that point, the risk is for the buyer and he also arranges the export clearance and import clearance.    </li>    <li>        <strong>FOB – Free On Board</strong><br/>        The seller bears all costs and risks until the goods are on board the ship and also arranges the export clearance. As soon as the goods have been delivered to the ship, the buyer bears all responsibilities.    </li>    <li>        <strong>CFR – Cost And Freight</strong><br/>        The same applies to the seller and buyer as with FOB, but in this case, the seller must also pay for the transport of the goods to the port.    </li>    <li>        <strong>CIF – Cost, Insurance, and Freight</strong><br/>        The seller has the same obligations as with CFR but also pays the (minimum) insurance costs. The buyer must pay for more comprehensive insurance.    </li></ul> ++++

        :return: The incoterms of this DeliveryTerms.
        :rtype: str
        """
        return self._incoterms

    @incoterms.setter
    def incoterms(self, incoterms):
        """Sets the incoterms of this DeliveryTerms.

        The incoterms: ++++ <ul>    <li>        <strong>EXW – Ex Works</strong><br/>        The seller must give the buyer access to goods at an agreed location. From that moment, the buyer bears almost all costs and risks during the entire shipping process.<br/>    </li>    <li>        <strong>FCA – Free Carrier</strong><br/>        The seller must make the goods available at his own risk and expense at his own premises or at an agreed place. In both cases, the seller is responsible for the clearance of the goods for export. It can be agreed that the buyer must instruct the carrier to transfer a “Bill of Lading (BL)” with a note on board to the seller.    </li>    <li>        <strong>CPT – Carriage Paid To</strong><br/>        The seller has the same responsibilities as with FCA, but in this case also pays the delivery costs.    </li>    <li>        <strong>CIP – Carriage Insurance Paid To</strong><br/>        The same seller responsibilities as with CPT, only in this case the seller is obliged to pay the insurance with a high coverage ratio. Parties can agree separately to apply limited coverage.    </li>    <li>        <strong>DAP – Delivered At Place</strong><br/>        The seller bears the costs and risks during the transport of the goods to an agreed address. As soon as the goods have arrived at this address and are ready for unloading, the risk passes to the buyer.    </li>    <li>        <strong>DPU – Delivered at Place Unloaded</strong><br/>        The seller is responsible for the costs and risks of delivering goods to an agreed destination where goods can be unloaded for further transport. The selling party arranges customs and unloads the goods at the agreed place. The buyer arranges the customs clearance and any associated rights.    </li>    <li>        <strong>DDP – Delivered Duty Paid</strong><br/>        The seller bears the costs and risks of transport, carries out the export and import responsibilities and pays any import duties. As soon as the goods have arrived at the address and are ready for unloading, the risk passes to the buyer.    </li>    <li>        <strong>FAS – Free Alongside Ship</strong><br/>        The seller bears all costs and risks until the goods are delivered next to the ship. From that point, the risk is for the buyer and he also arranges the export clearance and import clearance.    </li>    <li>        <strong>FOB – Free On Board</strong><br/>        The seller bears all costs and risks until the goods are on board the ship and also arranges the export clearance. As soon as the goods have been delivered to the ship, the buyer bears all responsibilities.    </li>    <li>        <strong>CFR – Cost And Freight</strong><br/>        The same applies to the seller and buyer as with FOB, but in this case, the seller must also pay for the transport of the goods to the port.    </li>    <li>        <strong>CIF – Cost, Insurance, and Freight</strong><br/>        The seller has the same obligations as with CFR but also pays the (minimum) insurance costs. The buyer must pay for more comprehensive insurance.    </li></ul> ++++

        :param incoterms: The incoterms of this DeliveryTerms.
        :type incoterms: str
        """
        allowed_values = ["EXW", "FCA", "CPT", "CIP", "DAP", "DPU", "DDP", "FAS", "FOB", "CFR", "CIF"]  # noqa: E501
        if incoterms not in allowed_values:
            raise ValueError(
                "Invalid value for `incoterms` ({0}), must be one of {1}"
                .format(incoterms, allowed_values)
            )

        self._incoterms = incoterms

    @property
    def special_terms(self):
        """Gets the special_terms of this DeliveryTerms.

        A description of special conditions relating to the delivery terms.

        :return: The special_terms of this DeliveryTerms.
        :rtype: str
        """
        return self._special_terms

    @special_terms.setter
    def special_terms(self, special_terms):
        """Sets the special_terms of this DeliveryTerms.

        A description of special conditions relating to the delivery terms.

        :param special_terms: The special_terms of this DeliveryTerms.
        :type special_terms: str
        """
        if special_terms is not None and len(special_terms) > 512:
            raise ValueError("Invalid value for `special_terms`, length must be less than or equal to `512`")

        self._special_terms = special_terms
