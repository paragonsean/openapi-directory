/**
 * Storecove API
 * Storecove API
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: apisupport@storecove.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInvoiceSubmissionActionEvidence.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInvoiceSubmissionActionEvidence::OAIInvoiceSubmissionActionEvidence(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInvoiceSubmissionActionEvidence::OAIInvoiceSubmissionActionEvidence() {
    this->initializeModel();
}

OAIInvoiceSubmissionActionEvidence::~OAIInvoiceSubmissionActionEvidence() {}

void OAIInvoiceSubmissionActionEvidence::initializeModel() {

    m_receiver_response_isSet = false;
    m_receiver_response_isValid = false;

    m_transmission_datetime_isSet = false;
    m_transmission_datetime_isValid = false;

    m_transmission_result_isSet = false;
    m_transmission_result_isValid = false;

    m_transmission_type_isSet = false;
    m_transmission_type_isValid = false;

    m_transmitted_document_isSet = false;
    m_transmitted_document_isValid = false;
}

void OAIInvoiceSubmissionActionEvidence::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInvoiceSubmissionActionEvidence::fromJsonObject(QJsonObject json) {

    m_receiver_response_isValid = ::OpenAPI::fromJsonValue(m_receiver_response, json[QString("receiver_response")]);
    m_receiver_response_isSet = !json[QString("receiver_response")].isNull() && m_receiver_response_isValid;

    m_transmission_datetime_isValid = ::OpenAPI::fromJsonValue(m_transmission_datetime, json[QString("transmission_datetime")]);
    m_transmission_datetime_isSet = !json[QString("transmission_datetime")].isNull() && m_transmission_datetime_isValid;

    m_transmission_result_isValid = ::OpenAPI::fromJsonValue(m_transmission_result, json[QString("transmission_result")]);
    m_transmission_result_isSet = !json[QString("transmission_result")].isNull() && m_transmission_result_isValid;

    m_transmission_type_isValid = ::OpenAPI::fromJsonValue(m_transmission_type, json[QString("transmission_type")]);
    m_transmission_type_isSet = !json[QString("transmission_type")].isNull() && m_transmission_type_isValid;

    m_transmitted_document_isValid = ::OpenAPI::fromJsonValue(m_transmitted_document, json[QString("transmitted_document")]);
    m_transmitted_document_isSet = !json[QString("transmitted_document")].isNull() && m_transmitted_document_isValid;
}

QString OAIInvoiceSubmissionActionEvidence::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInvoiceSubmissionActionEvidence::asJsonObject() const {
    QJsonObject obj;
    if (m_receiver_response_isSet) {
        obj.insert(QString("receiver_response"), ::OpenAPI::toJsonValue(m_receiver_response));
    }
    if (m_transmission_datetime_isSet) {
        obj.insert(QString("transmission_datetime"), ::OpenAPI::toJsonValue(m_transmission_datetime));
    }
    if (m_transmission_result_isSet) {
        obj.insert(QString("transmission_result"), ::OpenAPI::toJsonValue(m_transmission_result));
    }
    if (m_transmission_type_isSet) {
        obj.insert(QString("transmission_type"), ::OpenAPI::toJsonValue(m_transmission_type));
    }
    if (m_transmitted_document_isSet) {
        obj.insert(QString("transmitted_document"), ::OpenAPI::toJsonValue(m_transmitted_document));
    }
    return obj;
}

QString OAIInvoiceSubmissionActionEvidence::getReceiverResponse() const {
    return m_receiver_response;
}
void OAIInvoiceSubmissionActionEvidence::setReceiverResponse(const QString &receiver_response) {
    m_receiver_response = receiver_response;
    m_receiver_response_isSet = true;
}

bool OAIInvoiceSubmissionActionEvidence::is_receiver_response_Set() const{
    return m_receiver_response_isSet;
}

bool OAIInvoiceSubmissionActionEvidence::is_receiver_response_Valid() const{
    return m_receiver_response_isValid;
}

QString OAIInvoiceSubmissionActionEvidence::getTransmissionDatetime() const {
    return m_transmission_datetime;
}
void OAIInvoiceSubmissionActionEvidence::setTransmissionDatetime(const QString &transmission_datetime) {
    m_transmission_datetime = transmission_datetime;
    m_transmission_datetime_isSet = true;
}

bool OAIInvoiceSubmissionActionEvidence::is_transmission_datetime_Set() const{
    return m_transmission_datetime_isSet;
}

bool OAIInvoiceSubmissionActionEvidence::is_transmission_datetime_Valid() const{
    return m_transmission_datetime_isValid;
}

QString OAIInvoiceSubmissionActionEvidence::getTransmissionResult() const {
    return m_transmission_result;
}
void OAIInvoiceSubmissionActionEvidence::setTransmissionResult(const QString &transmission_result) {
    m_transmission_result = transmission_result;
    m_transmission_result_isSet = true;
}

bool OAIInvoiceSubmissionActionEvidence::is_transmission_result_Set() const{
    return m_transmission_result_isSet;
}

bool OAIInvoiceSubmissionActionEvidence::is_transmission_result_Valid() const{
    return m_transmission_result_isValid;
}

QString OAIInvoiceSubmissionActionEvidence::getTransmissionType() const {
    return m_transmission_type;
}
void OAIInvoiceSubmissionActionEvidence::setTransmissionType(const QString &transmission_type) {
    m_transmission_type = transmission_type;
    m_transmission_type_isSet = true;
}

bool OAIInvoiceSubmissionActionEvidence::is_transmission_type_Set() const{
    return m_transmission_type_isSet;
}

bool OAIInvoiceSubmissionActionEvidence::is_transmission_type_Valid() const{
    return m_transmission_type_isValid;
}

QString OAIInvoiceSubmissionActionEvidence::getTransmittedDocument() const {
    return m_transmitted_document;
}
void OAIInvoiceSubmissionActionEvidence::setTransmittedDocument(const QString &transmitted_document) {
    m_transmitted_document = transmitted_document;
    m_transmitted_document_isSet = true;
}

bool OAIInvoiceSubmissionActionEvidence::is_transmitted_document_Set() const{
    return m_transmitted_document_isSet;
}

bool OAIInvoiceSubmissionActionEvidence::is_transmitted_document_Valid() const{
    return m_transmitted_document_isValid;
}

bool OAIInvoiceSubmissionActionEvidence::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_receiver_response_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transmission_datetime_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transmission_result_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transmission_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transmitted_document_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInvoiceSubmissionActionEvidence::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
