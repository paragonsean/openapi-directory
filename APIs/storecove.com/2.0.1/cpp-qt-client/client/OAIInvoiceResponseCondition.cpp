/**
 * Storecove API
 * Storecove API
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: apisupport@storecove.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInvoiceResponseCondition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInvoiceResponseCondition::OAIInvoiceResponseCondition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInvoiceResponseCondition::OAIInvoiceResponseCondition() {
    this->initializeModel();
}

OAIInvoiceResponseCondition::~OAIInvoiceResponseCondition() {}

void OAIInvoiceResponseCondition::initializeModel() {

    m_field_code_isSet = false;
    m_field_code_isValid = false;

    m_field_value_isSet = false;
    m_field_value_isValid = false;
}

void OAIInvoiceResponseCondition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInvoiceResponseCondition::fromJsonObject(QJsonObject json) {

    m_field_code_isValid = ::OpenAPI::fromJsonValue(m_field_code, json[QString("fieldCode")]);
    m_field_code_isSet = !json[QString("fieldCode")].isNull() && m_field_code_isValid;

    m_field_value_isValid = ::OpenAPI::fromJsonValue(m_field_value, json[QString("fieldValue")]);
    m_field_value_isSet = !json[QString("fieldValue")].isNull() && m_field_value_isValid;
}

QString OAIInvoiceResponseCondition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInvoiceResponseCondition::asJsonObject() const {
    QJsonObject obj;
    if (m_field_code_isSet) {
        obj.insert(QString("fieldCode"), ::OpenAPI::toJsonValue(m_field_code));
    }
    if (m_field_value_isSet) {
        obj.insert(QString("fieldValue"), ::OpenAPI::toJsonValue(m_field_value));
    }
    return obj;
}

QString OAIInvoiceResponseCondition::getFieldCode() const {
    return m_field_code;
}
void OAIInvoiceResponseCondition::setFieldCode(const QString &field_code) {
    m_field_code = field_code;
    m_field_code_isSet = true;
}

bool OAIInvoiceResponseCondition::is_field_code_Set() const{
    return m_field_code_isSet;
}

bool OAIInvoiceResponseCondition::is_field_code_Valid() const{
    return m_field_code_isValid;
}

QString OAIInvoiceResponseCondition::getFieldValue() const {
    return m_field_value;
}
void OAIInvoiceResponseCondition::setFieldValue(const QString &field_value) {
    m_field_value = field_value;
    m_field_value_isSet = true;
}

bool OAIInvoiceResponseCondition::is_field_value_Set() const{
    return m_field_value_isSet;
}

bool OAIInvoiceResponseCondition::is_field_value_Valid() const{
    return m_field_value_isValid;
}

bool OAIInvoiceResponseCondition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_field_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_field_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInvoiceResponseCondition::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_field_code_isValid && m_field_value_isValid && true;
}

} // namespace OpenAPI
