/**
 * Storecove API
 * Storecove API
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: apisupport@storecove.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrderLine.h
 *
 * 
 */

#ifndef OAIOrderLine_H
#define OAIOrderLine_H

#include <QJsonObject>

#include "OAIAdditionalItemProperty.h"
#include "OAILineAllowanceCharge.h"
#include "OAILineDelivery.h"
#include "OAIReference.h"
#include "OAITax.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAdditionalItemProperty;
class OAILineAllowanceCharge;
class OAILineDelivery;
class OAIReference;
class OAITax;

class OAIOrderLine : public OAIObject {
public:
    OAIOrderLine();
    OAIOrderLine(QString json);
    ~OAIOrderLine() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountingCost() const;
    void setAccountingCost(const QString &accounting_cost);
    bool is_accounting_cost_Set() const;
    bool is_accounting_cost_Valid() const;

    QList<OAIAdditionalItemProperty> getAdditionalItemProperties() const;
    void setAdditionalItemProperties(const QList<OAIAdditionalItemProperty> &additional_item_properties);
    bool is_additional_item_properties_Set() const;
    bool is_additional_item_properties_Valid() const;

    bool isAllowPartialDelivery() const;
    void setAllowPartialDelivery(const bool &allow_partial_delivery);
    bool is_allow_partial_delivery_Set() const;
    bool is_allow_partial_delivery_Valid() const;

    QList<OAILineAllowanceCharge> getAllowanceCharges() const;
    void setAllowanceCharges(const QList<OAILineAllowanceCharge> &allowance_charges);
    bool is_allowance_charges_Set() const;
    bool is_allowance_charges_Valid() const;

    double getAmountExcludingTax() const;
    void setAmountExcludingTax(const double &amount_excluding_tax);
    bool is_amount_excluding_tax_Set() const;
    bool is_amount_excluding_tax_Valid() const;

    double getBaseQuantity() const;
    void setBaseQuantity(const double &base_quantity);
    bool is_base_quantity_Set() const;
    bool is_base_quantity_Valid() const;

    OAILineDelivery getDelivery() const;
    void setDelivery(const OAILineDelivery &delivery);
    bool is_delivery_Set() const;
    bool is_delivery_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    double getItemPrice() const;
    void setItemPrice(const double &item_price);
    bool is_item_price_Set() const;
    bool is_item_price_Valid() const;

    QString getLineId() const;
    void setLineId(const QString &line_id);
    bool is_line_id_Set() const;
    bool is_line_id_Valid() const;

    QList<QString> getLotNumberIds() const;
    void setLotNumberIds(const QList<QString> &lot_number_ids);
    bool is_lot_number_ids_Set() const;
    bool is_lot_number_ids_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNote() const;
    void setNote(const QString &note);
    bool is_note_Set() const;
    bool is_note_Valid() const;

    double getQuantity() const;
    void setQuantity(const double &quantity);
    bool is_quantity_Set() const;
    bool is_quantity_Valid() const;

    QString getQuantityUnitCode() const;
    void setQuantityUnitCode(const QString &quantity_unit_code);
    bool is_quantity_unit_code_Set() const;
    bool is_quantity_unit_code_Valid() const;

    QList<OAIReference> getReferences() const;
    void setReferences(const QList<OAIReference> &references);
    bool is_references_Set() const;
    bool is_references_Valid() const;

    QList<OAITax> getTaxesDutiesFees() const;
    void setTaxesDutiesFees(const QList<OAITax> &taxes_duties_fees);
    bool is_taxes_duties_fees_Set() const;
    bool is_taxes_duties_fees_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_accounting_cost;
    bool m_accounting_cost_isSet;
    bool m_accounting_cost_isValid;

    QList<OAIAdditionalItemProperty> m_additional_item_properties;
    bool m_additional_item_properties_isSet;
    bool m_additional_item_properties_isValid;

    bool m_allow_partial_delivery;
    bool m_allow_partial_delivery_isSet;
    bool m_allow_partial_delivery_isValid;

    QList<OAILineAllowanceCharge> m_allowance_charges;
    bool m_allowance_charges_isSet;
    bool m_allowance_charges_isValid;

    double m_amount_excluding_tax;
    bool m_amount_excluding_tax_isSet;
    bool m_amount_excluding_tax_isValid;

    double m_base_quantity;
    bool m_base_quantity_isSet;
    bool m_base_quantity_isValid;

    OAILineDelivery m_delivery;
    bool m_delivery_isSet;
    bool m_delivery_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    double m_item_price;
    bool m_item_price_isSet;
    bool m_item_price_isValid;

    QString m_line_id;
    bool m_line_id_isSet;
    bool m_line_id_isValid;

    QList<QString> m_lot_number_ids;
    bool m_lot_number_ids_isSet;
    bool m_lot_number_ids_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_note;
    bool m_note_isSet;
    bool m_note_isValid;

    double m_quantity;
    bool m_quantity_isSet;
    bool m_quantity_isValid;

    QString m_quantity_unit_code;
    bool m_quantity_unit_code_isSet;
    bool m_quantity_unit_code_isValid;

    QList<OAIReference> m_references;
    bool m_references_isSet;
    bool m_references_isValid;

    QList<OAITax> m_taxes_duties_fees;
    bool m_taxes_duties_fees_isSet;
    bool m_taxes_duties_fees_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOrderLine)

#endif // OAIOrderLine_H
