/**
 * Storecove API
 * Storecove API
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: apisupport@storecove.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPurchaseInvoiceInvoiceLineItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPurchaseInvoiceInvoiceLineItem::OAIPurchaseInvoiceInvoiceLineItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPurchaseInvoiceInvoiceLineItem::OAIPurchaseInvoiceInvoiceLineItem() {
    this->initializeModel();
}

OAIPurchaseInvoiceInvoiceLineItem::~OAIPurchaseInvoiceInvoiceLineItem() {}

void OAIPurchaseInvoiceInvoiceLineItem::initializeModel() {

    m_quantity_isSet = false;
    m_quantity_isValid = false;

    m_unit_code_isSet = false;
    m_unit_code_isValid = false;
}

void OAIPurchaseInvoiceInvoiceLineItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPurchaseInvoiceInvoiceLineItem::fromJsonObject(QJsonObject json) {

    m_quantity_isValid = ::OpenAPI::fromJsonValue(m_quantity, json[QString("quantity")]);
    m_quantity_isSet = !json[QString("quantity")].isNull() && m_quantity_isValid;

    m_unit_code_isValid = ::OpenAPI::fromJsonValue(m_unit_code, json[QString("unit_code")]);
    m_unit_code_isSet = !json[QString("unit_code")].isNull() && m_unit_code_isValid;
}

QString OAIPurchaseInvoiceInvoiceLineItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPurchaseInvoiceInvoiceLineItem::asJsonObject() const {
    QJsonObject obj;
    if (m_quantity_isSet) {
        obj.insert(QString("quantity"), ::OpenAPI::toJsonValue(m_quantity));
    }
    if (m_unit_code_isSet) {
        obj.insert(QString("unit_code"), ::OpenAPI::toJsonValue(m_unit_code));
    }
    return obj;
}

double OAIPurchaseInvoiceInvoiceLineItem::getQuantity() const {
    return m_quantity;
}
void OAIPurchaseInvoiceInvoiceLineItem::setQuantity(const double &quantity) {
    m_quantity = quantity;
    m_quantity_isSet = true;
}

bool OAIPurchaseInvoiceInvoiceLineItem::is_quantity_Set() const{
    return m_quantity_isSet;
}

bool OAIPurchaseInvoiceInvoiceLineItem::is_quantity_Valid() const{
    return m_quantity_isValid;
}

QString OAIPurchaseInvoiceInvoiceLineItem::getUnitCode() const {
    return m_unit_code;
}
void OAIPurchaseInvoiceInvoiceLineItem::setUnitCode(const QString &unit_code) {
    m_unit_code = unit_code;
    m_unit_code_isSet = true;
}

bool OAIPurchaseInvoiceInvoiceLineItem::is_unit_code_Set() const{
    return m_unit_code_isSet;
}

bool OAIPurchaseInvoiceInvoiceLineItem::is_unit_code_Valid() const{
    return m_unit_code_isValid;
}

bool OAIPurchaseInvoiceInvoiceLineItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unit_code_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPurchaseInvoiceInvoiceLineItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
