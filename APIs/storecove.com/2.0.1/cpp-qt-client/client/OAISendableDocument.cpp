/**
 * Storecove API
 * Storecove API
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: apisupport@storecove.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISendableDocument.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISendableDocument::OAISendableDocument(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISendableDocument::OAISendableDocument() {
    this->initializeModel();
}

OAISendableDocument::~OAISendableDocument() {}

void OAISendableDocument::initializeModel() {

    m_document_type_isSet = false;
    m_document_type_isValid = false;

    m_invoice_isSet = false;
    m_invoice_isValid = false;

    m_invoice_response_isSet = false;
    m_invoice_response_isValid = false;

    m_order_isSet = false;
    m_order_isValid = false;

    m_raw_document_data_isSet = false;
    m_raw_document_data_isValid = false;
}

void OAISendableDocument::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISendableDocument::fromJsonObject(QJsonObject json) {

    m_document_type_isValid = ::OpenAPI::fromJsonValue(m_document_type, json[QString("documentType")]);
    m_document_type_isSet = !json[QString("documentType")].isNull() && m_document_type_isValid;

    m_invoice_isValid = ::OpenAPI::fromJsonValue(m_invoice, json[QString("invoice")]);
    m_invoice_isSet = !json[QString("invoice")].isNull() && m_invoice_isValid;

    m_invoice_response_isValid = ::OpenAPI::fromJsonValue(m_invoice_response, json[QString("invoiceResponse")]);
    m_invoice_response_isSet = !json[QString("invoiceResponse")].isNull() && m_invoice_response_isValid;

    m_order_isValid = ::OpenAPI::fromJsonValue(m_order, json[QString("order")]);
    m_order_isSet = !json[QString("order")].isNull() && m_order_isValid;

    m_raw_document_data_isValid = ::OpenAPI::fromJsonValue(m_raw_document_data, json[QString("rawDocumentData")]);
    m_raw_document_data_isSet = !json[QString("rawDocumentData")].isNull() && m_raw_document_data_isValid;
}

QString OAISendableDocument::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISendableDocument::asJsonObject() const {
    QJsonObject obj;
    if (m_document_type_isSet) {
        obj.insert(QString("documentType"), ::OpenAPI::toJsonValue(m_document_type));
    }
    if (m_invoice.isSet()) {
        obj.insert(QString("invoice"), ::OpenAPI::toJsonValue(m_invoice));
    }
    if (m_invoice_response.isSet()) {
        obj.insert(QString("invoiceResponse"), ::OpenAPI::toJsonValue(m_invoice_response));
    }
    if (m_order.isSet()) {
        obj.insert(QString("order"), ::OpenAPI::toJsonValue(m_order));
    }
    if (m_raw_document_data.isSet()) {
        obj.insert(QString("rawDocumentData"), ::OpenAPI::toJsonValue(m_raw_document_data));
    }
    return obj;
}

QString OAISendableDocument::getDocumentType() const {
    return m_document_type;
}
void OAISendableDocument::setDocumentType(const QString &document_type) {
    m_document_type = document_type;
    m_document_type_isSet = true;
}

bool OAISendableDocument::is_document_type_Set() const{
    return m_document_type_isSet;
}

bool OAISendableDocument::is_document_type_Valid() const{
    return m_document_type_isValid;
}

OAIInvoice OAISendableDocument::getInvoice() const {
    return m_invoice;
}
void OAISendableDocument::setInvoice(const OAIInvoice &invoice) {
    m_invoice = invoice;
    m_invoice_isSet = true;
}

bool OAISendableDocument::is_invoice_Set() const{
    return m_invoice_isSet;
}

bool OAISendableDocument::is_invoice_Valid() const{
    return m_invoice_isValid;
}

OAIDocumentInvoiceResponse OAISendableDocument::getInvoiceResponse() const {
    return m_invoice_response;
}
void OAISendableDocument::setInvoiceResponse(const OAIDocumentInvoiceResponse &invoice_response) {
    m_invoice_response = invoice_response;
    m_invoice_response_isSet = true;
}

bool OAISendableDocument::is_invoice_response_Set() const{
    return m_invoice_response_isSet;
}

bool OAISendableDocument::is_invoice_response_Valid() const{
    return m_invoice_response_isValid;
}

OAIDocumentOrder OAISendableDocument::getOrder() const {
    return m_order;
}
void OAISendableDocument::setOrder(const OAIDocumentOrder &order) {
    m_order = order;
    m_order_isSet = true;
}

bool OAISendableDocument::is_order_Set() const{
    return m_order_isSet;
}

bool OAISendableDocument::is_order_Valid() const{
    return m_order_isValid;
}

OAIRawDocumentData OAISendableDocument::getRawDocumentData() const {
    return m_raw_document_data;
}
void OAISendableDocument::setRawDocumentData(const OAIRawDocumentData &raw_document_data) {
    m_raw_document_data = raw_document_data;
    m_raw_document_data_isSet = true;
}

bool OAISendableDocument::is_raw_document_data_Set() const{
    return m_raw_document_data_isSet;
}

bool OAISendableDocument::is_raw_document_data_Valid() const{
    return m_raw_document_data_isValid;
}

bool OAISendableDocument::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_document_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice_response.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_order.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_raw_document_data.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISendableDocument::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_document_type_isValid && true;
}

} // namespace OpenAPI
