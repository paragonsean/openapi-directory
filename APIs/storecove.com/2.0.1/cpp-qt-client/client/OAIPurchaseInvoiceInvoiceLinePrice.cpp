/**
 * Storecove API
 * Storecove API
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: apisupport@storecove.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPurchaseInvoiceInvoiceLinePrice.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPurchaseInvoiceInvoiceLinePrice::OAIPurchaseInvoiceInvoiceLinePrice(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPurchaseInvoiceInvoiceLinePrice::OAIPurchaseInvoiceInvoiceLinePrice() {
    this->initializeModel();
}

OAIPurchaseInvoiceInvoiceLinePrice::~OAIPurchaseInvoiceInvoiceLinePrice() {}

void OAIPurchaseInvoiceInvoiceLinePrice::initializeModel() {

    m_base_quantity_isSet = false;
    m_base_quantity_isValid = false;

    m_price_amount_isSet = false;
    m_price_amount_isValid = false;
}

void OAIPurchaseInvoiceInvoiceLinePrice::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPurchaseInvoiceInvoiceLinePrice::fromJsonObject(QJsonObject json) {

    m_base_quantity_isValid = ::OpenAPI::fromJsonValue(m_base_quantity, json[QString("base_quantity")]);
    m_base_quantity_isSet = !json[QString("base_quantity")].isNull() && m_base_quantity_isValid;

    m_price_amount_isValid = ::OpenAPI::fromJsonValue(m_price_amount, json[QString("price_amount")]);
    m_price_amount_isSet = !json[QString("price_amount")].isNull() && m_price_amount_isValid;
}

QString OAIPurchaseInvoiceInvoiceLinePrice::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPurchaseInvoiceInvoiceLinePrice::asJsonObject() const {
    QJsonObject obj;
    if (m_base_quantity_isSet) {
        obj.insert(QString("base_quantity"), ::OpenAPI::toJsonValue(m_base_quantity));
    }
    if (m_price_amount_isSet) {
        obj.insert(QString("price_amount"), ::OpenAPI::toJsonValue(m_price_amount));
    }
    return obj;
}

double OAIPurchaseInvoiceInvoiceLinePrice::getBaseQuantity() const {
    return m_base_quantity;
}
void OAIPurchaseInvoiceInvoiceLinePrice::setBaseQuantity(const double &base_quantity) {
    m_base_quantity = base_quantity;
    m_base_quantity_isSet = true;
}

bool OAIPurchaseInvoiceInvoiceLinePrice::is_base_quantity_Set() const{
    return m_base_quantity_isSet;
}

bool OAIPurchaseInvoiceInvoiceLinePrice::is_base_quantity_Valid() const{
    return m_base_quantity_isValid;
}

double OAIPurchaseInvoiceInvoiceLinePrice::getPriceAmount() const {
    return m_price_amount;
}
void OAIPurchaseInvoiceInvoiceLinePrice::setPriceAmount(const double &price_amount) {
    m_price_amount = price_amount;
    m_price_amount_isSet = true;
}

bool OAIPurchaseInvoiceInvoiceLinePrice::is_price_amount_Set() const{
    return m_price_amount_isSet;
}

bool OAIPurchaseInvoiceInvoiceLinePrice::is_price_amount_Valid() const{
    return m_price_amount_isValid;
}

bool OAIPurchaseInvoiceInvoiceLinePrice::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_base_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_amount_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPurchaseInvoiceInvoiceLinePrice::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
