/**
 * Storecove API
 * Storecove API
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: apisupport@storecove.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConsumer_Receiver.h
 *
 * The consumer receiver of the document.
 */

#ifndef OAIConsumer_Receiver_H
#define OAIConsumer_Receiver_H

#include <QJsonObject>

#include "OAICountrySpecificationIdentifier.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICountrySpecificationIdentifier;

class OAIConsumer_Receiver : public OAIObject {
public:
    OAIConsumer_Receiver();
    OAIConsumer_Receiver(QString json);
    ~OAIConsumer_Receiver() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICountrySpecificationIdentifier getLegal() const;
    void setLegal(const OAICountrySpecificationIdentifier &legal);
    bool is_legal_Set() const;
    bool is_legal_Valid() const;

    OAICountrySpecificationIdentifier getRouting() const;
    void setRouting(const OAICountrySpecificationIdentifier &routing);
    bool is_routing_Set() const;
    bool is_routing_Valid() const;

    OAICountrySpecificationIdentifier getTax() const;
    void setTax(const OAICountrySpecificationIdentifier &tax);
    bool is_tax_Set() const;
    bool is_tax_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICountrySpecificationIdentifier m_legal;
    bool m_legal_isSet;
    bool m_legal_isValid;

    OAICountrySpecificationIdentifier m_routing;
    bool m_routing_isSet;
    bool m_routing_isValid;

    OAICountrySpecificationIdentifier m_tax;
    bool m_tax_isSet;
    bool m_tax_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConsumer_Receiver)

#endif // OAIConsumer_Receiver_H
