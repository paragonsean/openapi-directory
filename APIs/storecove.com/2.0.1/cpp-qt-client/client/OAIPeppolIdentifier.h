/**
 * Storecove API
 * Storecove API
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: apisupport@storecove.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPeppolIdentifier.h
 *
 * 
 */

#ifndef OAIPeppolIdentifier_H
#define OAIPeppolIdentifier_H

#include <QJsonObject>

#include "OAICorpPass.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICorpPass;

class OAIPeppolIdentifier : public OAIObject {
public:
    OAIPeppolIdentifier();
    OAIPeppolIdentifier(QString json);
    ~OAIPeppolIdentifier() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICorpPass getCorppass() const;
    void setCorppass(const OAICorpPass &corppass);
    bool is_corppass_Set() const;
    bool is_corppass_Valid() const;

    QString getIdentifier() const;
    void setIdentifier(const QString &identifier);
    bool is_identifier_Set() const;
    bool is_identifier_Valid() const;

    QString getScheme() const;
    void setScheme(const QString &scheme);
    bool is_scheme_Set() const;
    bool is_scheme_Valid() const;

    QString getSuperscheme() const;
    void setSuperscheme(const QString &superscheme);
    bool is_superscheme_Set() const;
    bool is_superscheme_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICorpPass m_corppass;
    bool m_corppass_isSet;
    bool m_corppass_isValid;

    QString m_identifier;
    bool m_identifier_isSet;
    bool m_identifier_isValid;

    QString m_scheme;
    bool m_scheme_isSet;
    bool m_scheme_isValid;

    QString m_superscheme;
    bool m_superscheme_isSet;
    bool m_superscheme_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPeppolIdentifier)

#endif // OAIPeppolIdentifier_H
