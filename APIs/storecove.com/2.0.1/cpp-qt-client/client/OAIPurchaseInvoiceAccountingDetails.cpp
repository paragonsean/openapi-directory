/**
 * Storecove API
 * Storecove API
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: apisupport@storecove.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPurchaseInvoiceAccountingDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPurchaseInvoiceAccountingDetails::OAIPurchaseInvoiceAccountingDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPurchaseInvoiceAccountingDetails::OAIPurchaseInvoiceAccountingDetails() {
    this->initializeModel();
}

OAIPurchaseInvoiceAccountingDetails::~OAIPurchaseInvoiceAccountingDetails() {}

void OAIPurchaseInvoiceAccountingDetails::initializeModel() {

    m_code_isSet = false;
    m_code_isValid = false;

    m_list_isSet = false;
    m_list_isValid = false;

    m_list_version_isSet = false;
    m_list_version_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIPurchaseInvoiceAccountingDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPurchaseInvoiceAccountingDetails::fromJsonObject(QJsonObject json) {

    m_code_isValid = ::OpenAPI::fromJsonValue(m_code, json[QString("code")]);
    m_code_isSet = !json[QString("code")].isNull() && m_code_isValid;

    m_list_isValid = ::OpenAPI::fromJsonValue(m_list, json[QString("list")]);
    m_list_isSet = !json[QString("list")].isNull() && m_list_isValid;

    m_list_version_isValid = ::OpenAPI::fromJsonValue(m_list_version, json[QString("list_version")]);
    m_list_version_isSet = !json[QString("list_version")].isNull() && m_list_version_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIPurchaseInvoiceAccountingDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPurchaseInvoiceAccountingDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_code_isSet) {
        obj.insert(QString("code"), ::OpenAPI::toJsonValue(m_code));
    }
    if (m_list_isSet) {
        obj.insert(QString("list"), ::OpenAPI::toJsonValue(m_list));
    }
    if (m_list_version_isSet) {
        obj.insert(QString("list_version"), ::OpenAPI::toJsonValue(m_list_version));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QString OAIPurchaseInvoiceAccountingDetails::getCode() const {
    return m_code;
}
void OAIPurchaseInvoiceAccountingDetails::setCode(const QString &code) {
    m_code = code;
    m_code_isSet = true;
}

bool OAIPurchaseInvoiceAccountingDetails::is_code_Set() const{
    return m_code_isSet;
}

bool OAIPurchaseInvoiceAccountingDetails::is_code_Valid() const{
    return m_code_isValid;
}

QString OAIPurchaseInvoiceAccountingDetails::getList() const {
    return m_list;
}
void OAIPurchaseInvoiceAccountingDetails::setList(const QString &list) {
    m_list = list;
    m_list_isSet = true;
}

bool OAIPurchaseInvoiceAccountingDetails::is_list_Set() const{
    return m_list_isSet;
}

bool OAIPurchaseInvoiceAccountingDetails::is_list_Valid() const{
    return m_list_isValid;
}

QString OAIPurchaseInvoiceAccountingDetails::getListVersion() const {
    return m_list_version;
}
void OAIPurchaseInvoiceAccountingDetails::setListVersion(const QString &list_version) {
    m_list_version = list_version;
    m_list_version_isSet = true;
}

bool OAIPurchaseInvoiceAccountingDetails::is_list_version_Set() const{
    return m_list_version_isSet;
}

bool OAIPurchaseInvoiceAccountingDetails::is_list_version_Valid() const{
    return m_list_version_isValid;
}

QString OAIPurchaseInvoiceAccountingDetails::getName() const {
    return m_name;
}
void OAIPurchaseInvoiceAccountingDetails::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIPurchaseInvoiceAccountingDetails::is_name_Set() const{
    return m_name_isSet;
}

bool OAIPurchaseInvoiceAccountingDetails::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIPurchaseInvoiceAccountingDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_list_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_list_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPurchaseInvoiceAccountingDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
