/**
 * Storecove API
 * Storecove API
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: apisupport@storecove.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDocumentInvoiceResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDocumentInvoiceResponse::OAIDocumentInvoiceResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDocumentInvoiceResponse::OAIDocumentInvoiceResponse() {
    this->initializeModel();
}

OAIDocumentInvoiceResponse::~OAIDocumentInvoiceResponse() {}

void OAIDocumentInvoiceResponse::initializeModel() {

    m_clarifications_isSet = false;
    m_clarifications_isValid = false;

    m_effective_date_isSet = false;
    m_effective_date_isValid = false;

    m_note_isSet = false;
    m_note_isValid = false;

    m_response_code_isSet = false;
    m_response_code_isValid = false;
}

void OAIDocumentInvoiceResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDocumentInvoiceResponse::fromJsonObject(QJsonObject json) {

    m_clarifications_isValid = ::OpenAPI::fromJsonValue(m_clarifications, json[QString("clarifications")]);
    m_clarifications_isSet = !json[QString("clarifications")].isNull() && m_clarifications_isValid;

    m_effective_date_isValid = ::OpenAPI::fromJsonValue(m_effective_date, json[QString("effectiveDate")]);
    m_effective_date_isSet = !json[QString("effectiveDate")].isNull() && m_effective_date_isValid;

    m_note_isValid = ::OpenAPI::fromJsonValue(m_note, json[QString("note")]);
    m_note_isSet = !json[QString("note")].isNull() && m_note_isValid;

    m_response_code_isValid = ::OpenAPI::fromJsonValue(m_response_code, json[QString("responseCode")]);
    m_response_code_isSet = !json[QString("responseCode")].isNull() && m_response_code_isValid;
}

QString OAIDocumentInvoiceResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDocumentInvoiceResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_clarifications.size() > 0) {
        obj.insert(QString("clarifications"), ::OpenAPI::toJsonValue(m_clarifications));
    }
    if (m_effective_date_isSet) {
        obj.insert(QString("effectiveDate"), ::OpenAPI::toJsonValue(m_effective_date));
    }
    if (m_note_isSet) {
        obj.insert(QString("note"), ::OpenAPI::toJsonValue(m_note));
    }
    if (m_response_code_isSet) {
        obj.insert(QString("responseCode"), ::OpenAPI::toJsonValue(m_response_code));
    }
    return obj;
}

QList<OAIInvoiceResponseClarification> OAIDocumentInvoiceResponse::getClarifications() const {
    return m_clarifications;
}
void OAIDocumentInvoiceResponse::setClarifications(const QList<OAIInvoiceResponseClarification> &clarifications) {
    m_clarifications = clarifications;
    m_clarifications_isSet = true;
}

bool OAIDocumentInvoiceResponse::is_clarifications_Set() const{
    return m_clarifications_isSet;
}

bool OAIDocumentInvoiceResponse::is_clarifications_Valid() const{
    return m_clarifications_isValid;
}

QString OAIDocumentInvoiceResponse::getEffectiveDate() const {
    return m_effective_date;
}
void OAIDocumentInvoiceResponse::setEffectiveDate(const QString &effective_date) {
    m_effective_date = effective_date;
    m_effective_date_isSet = true;
}

bool OAIDocumentInvoiceResponse::is_effective_date_Set() const{
    return m_effective_date_isSet;
}

bool OAIDocumentInvoiceResponse::is_effective_date_Valid() const{
    return m_effective_date_isValid;
}

QString OAIDocumentInvoiceResponse::getNote() const {
    return m_note;
}
void OAIDocumentInvoiceResponse::setNote(const QString &note) {
    m_note = note;
    m_note_isSet = true;
}

bool OAIDocumentInvoiceResponse::is_note_Set() const{
    return m_note_isSet;
}

bool OAIDocumentInvoiceResponse::is_note_Valid() const{
    return m_note_isValid;
}

QString OAIDocumentInvoiceResponse::getResponseCode() const {
    return m_response_code;
}
void OAIDocumentInvoiceResponse::setResponseCode(const QString &response_code) {
    m_response_code = response_code;
    m_response_code_isSet = true;
}

bool OAIDocumentInvoiceResponse::is_response_code_Set() const{
    return m_response_code_isSet;
}

bool OAIDocumentInvoiceResponse::is_response_code_Valid() const{
    return m_response_code_isValid;
}

bool OAIDocumentInvoiceResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_clarifications.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_effective_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_note_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_response_code_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDocumentInvoiceResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_response_code_isValid && true;
}

} // namespace OpenAPI
