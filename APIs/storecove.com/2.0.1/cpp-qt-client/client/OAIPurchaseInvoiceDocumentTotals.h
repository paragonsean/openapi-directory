/**
 * Storecove API
 * Storecove API
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: apisupport@storecove.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPurchaseInvoiceDocumentTotals.h
 *
 * 
 */

#ifndef OAIPurchaseInvoiceDocumentTotals_H
#define OAIPurchaseInvoiceDocumentTotals_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPurchaseInvoiceDocumentTotals : public OAIObject {
public:
    OAIPurchaseInvoiceDocumentTotals();
    OAIPurchaseInvoiceDocumentTotals(QString json);
    ~OAIPurchaseInvoiceDocumentTotals() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getPayable() const;
    void setPayable(const double &payable);
    bool is_payable_Set() const;
    bool is_payable_Valid() const;

    double getPrepaid() const;
    void setPrepaid(const double &prepaid);
    bool is_prepaid_Set() const;
    bool is_prepaid_Valid() const;

    double getRounding() const;
    void setRounding(const double &rounding);
    bool is_rounding_Set() const;
    bool is_rounding_Valid() const;

    double getTotal() const;
    void setTotal(const double &total);
    bool is_total_Set() const;
    bool is_total_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_payable;
    bool m_payable_isSet;
    bool m_payable_isValid;

    double m_prepaid;
    bool m_prepaid_isSet;
    bool m_prepaid_isValid;

    double m_rounding;
    bool m_rounding_isSet;
    bool m_rounding_isValid;

    double m_total;
    bool m_total_isSet;
    bool m_total_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPurchaseInvoiceDocumentTotals)

#endif // OAIPurchaseInvoiceDocumentTotals_H
