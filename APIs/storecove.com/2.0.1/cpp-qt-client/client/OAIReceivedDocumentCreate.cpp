/**
 * Storecove API
 * Storecove API
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: apisupport@storecove.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReceivedDocumentCreate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReceivedDocumentCreate::OAIReceivedDocumentCreate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReceivedDocumentCreate::OAIReceivedDocumentCreate() {
    this->initializeModel();
}

OAIReceivedDocumentCreate::~OAIReceivedDocumentCreate() {}

void OAIReceivedDocumentCreate::initializeModel() {

    m_document_isSet = false;
    m_document_isValid = false;

    m_parse_strategy_isSet = false;
    m_parse_strategy_isValid = false;
}

void OAIReceivedDocumentCreate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReceivedDocumentCreate::fromJsonObject(QJsonObject json) {

    m_document_isValid = ::OpenAPI::fromJsonValue(m_document, json[QString("document")]);
    m_document_isSet = !json[QString("document")].isNull() && m_document_isValid;

    m_parse_strategy_isValid = ::OpenAPI::fromJsonValue(m_parse_strategy, json[QString("parseStrategy")]);
    m_parse_strategy_isSet = !json[QString("parseStrategy")].isNull() && m_parse_strategy_isValid;
}

QString OAIReceivedDocumentCreate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReceivedDocumentCreate::asJsonObject() const {
    QJsonObject obj;
    if (m_document_isSet) {
        obj.insert(QString("document"), ::OpenAPI::toJsonValue(m_document));
    }
    if (m_parse_strategy_isSet) {
        obj.insert(QString("parseStrategy"), ::OpenAPI::toJsonValue(m_parse_strategy));
    }
    return obj;
}

QString OAIReceivedDocumentCreate::getDocument() const {
    return m_document;
}
void OAIReceivedDocumentCreate::setDocument(const QString &document) {
    m_document = document;
    m_document_isSet = true;
}

bool OAIReceivedDocumentCreate::is_document_Set() const{
    return m_document_isSet;
}

bool OAIReceivedDocumentCreate::is_document_Valid() const{
    return m_document_isValid;
}

QString OAIReceivedDocumentCreate::getParseStrategy() const {
    return m_parse_strategy;
}
void OAIReceivedDocumentCreate::setParseStrategy(const QString &parse_strategy) {
    m_parse_strategy = parse_strategy;
    m_parse_strategy_isSet = true;
}

bool OAIReceivedDocumentCreate::is_parse_strategy_Set() const{
    return m_parse_strategy_isSet;
}

bool OAIReceivedDocumentCreate::is_parse_strategy_Valid() const{
    return m_parse_strategy_isValid;
}

bool OAIReceivedDocumentCreate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_document_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parse_strategy_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReceivedDocumentCreate::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_document_isValid && m_parse_strategy_isValid && true;
}

} // namespace OpenAPI
