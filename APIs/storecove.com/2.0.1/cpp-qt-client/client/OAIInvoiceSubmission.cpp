/**
 * Storecove API
 * Storecove API
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: apisupport@storecove.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInvoiceSubmission.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInvoiceSubmission::OAIInvoiceSubmission(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInvoiceSubmission::OAIInvoiceSubmission() {
    this->initializeModel();
}

OAIInvoiceSubmission::~OAIInvoiceSubmission() {}

void OAIInvoiceSubmission::initializeModel() {

    m_attachments_isSet = false;
    m_attachments_isValid = false;

    m_create_primary_image_isSet = false;
    m_create_primary_image_isValid = false;

    m_document_isSet = false;
    m_document_isValid = false;

    m_document_url_isSet = false;
    m_document_url_isValid = false;

    m_idempotency_guid_isSet = false;
    m_idempotency_guid_isValid = false;

    m_invoice_isSet = false;
    m_invoice_isValid = false;

    m_invoice_data_isSet = false;
    m_invoice_data_isValid = false;

    m_invoice_recipient_isSet = false;
    m_invoice_recipient_isValid = false;

    m_legal_entity_id_isSet = false;
    m_legal_entity_id_isValid = false;

    m_legal_supplier_id_isSet = false;
    m_legal_supplier_id_isValid = false;

    m_mode_isSet = false;
    m_mode_isValid = false;

    m_routing_isSet = false;
    m_routing_isValid = false;

    m_supplier_id_isSet = false;
    m_supplier_id_isValid = false;
}

void OAIInvoiceSubmission::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInvoiceSubmission::fromJsonObject(QJsonObject json) {

    m_attachments_isValid = ::OpenAPI::fromJsonValue(m_attachments, json[QString("attachments")]);
    m_attachments_isSet = !json[QString("attachments")].isNull() && m_attachments_isValid;

    m_create_primary_image_isValid = ::OpenAPI::fromJsonValue(m_create_primary_image, json[QString("createPrimaryImage")]);
    m_create_primary_image_isSet = !json[QString("createPrimaryImage")].isNull() && m_create_primary_image_isValid;

    m_document_isValid = ::OpenAPI::fromJsonValue(m_document, json[QString("document")]);
    m_document_isSet = !json[QString("document")].isNull() && m_document_isValid;

    m_document_url_isValid = ::OpenAPI::fromJsonValue(m_document_url, json[QString("documentUrl")]);
    m_document_url_isSet = !json[QString("documentUrl")].isNull() && m_document_url_isValid;

    m_idempotency_guid_isValid = ::OpenAPI::fromJsonValue(m_idempotency_guid, json[QString("idempotencyGuid")]);
    m_idempotency_guid_isSet = !json[QString("idempotencyGuid")].isNull() && m_idempotency_guid_isValid;

    m_invoice_isValid = ::OpenAPI::fromJsonValue(m_invoice, json[QString("invoice")]);
    m_invoice_isSet = !json[QString("invoice")].isNull() && m_invoice_isValid;

    m_invoice_data_isValid = ::OpenAPI::fromJsonValue(m_invoice_data, json[QString("invoiceData")]);
    m_invoice_data_isSet = !json[QString("invoiceData")].isNull() && m_invoice_data_isValid;

    m_invoice_recipient_isValid = ::OpenAPI::fromJsonValue(m_invoice_recipient, json[QString("invoiceRecipient")]);
    m_invoice_recipient_isSet = !json[QString("invoiceRecipient")].isNull() && m_invoice_recipient_isValid;

    m_legal_entity_id_isValid = ::OpenAPI::fromJsonValue(m_legal_entity_id, json[QString("legalEntityId")]);
    m_legal_entity_id_isSet = !json[QString("legalEntityId")].isNull() && m_legal_entity_id_isValid;

    m_legal_supplier_id_isValid = ::OpenAPI::fromJsonValue(m_legal_supplier_id, json[QString("legalSupplierId")]);
    m_legal_supplier_id_isSet = !json[QString("legalSupplierId")].isNull() && m_legal_supplier_id_isValid;

    m_mode_isValid = ::OpenAPI::fromJsonValue(m_mode, json[QString("mode")]);
    m_mode_isSet = !json[QString("mode")].isNull() && m_mode_isValid;

    m_routing_isValid = ::OpenAPI::fromJsonValue(m_routing, json[QString("routing")]);
    m_routing_isSet = !json[QString("routing")].isNull() && m_routing_isValid;

    m_supplier_id_isValid = ::OpenAPI::fromJsonValue(m_supplier_id, json[QString("supplierId")]);
    m_supplier_id_isSet = !json[QString("supplierId")].isNull() && m_supplier_id_isValid;
}

QString OAIInvoiceSubmission::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInvoiceSubmission::asJsonObject() const {
    QJsonObject obj;
    if (m_attachments.size() > 0) {
        obj.insert(QString("attachments"), ::OpenAPI::toJsonValue(m_attachments));
    }
    if (m_create_primary_image_isSet) {
        obj.insert(QString("createPrimaryImage"), ::OpenAPI::toJsonValue(m_create_primary_image));
    }
    if (m_document_isSet) {
        obj.insert(QString("document"), ::OpenAPI::toJsonValue(m_document));
    }
    if (m_document_url_isSet) {
        obj.insert(QString("documentUrl"), ::OpenAPI::toJsonValue(m_document_url));
    }
    if (m_idempotency_guid_isSet) {
        obj.insert(QString("idempotencyGuid"), ::OpenAPI::toJsonValue(m_idempotency_guid));
    }
    if (m_invoice.isSet()) {
        obj.insert(QString("invoice"), ::OpenAPI::toJsonValue(m_invoice));
    }
    if (m_invoice_data.isSet()) {
        obj.insert(QString("invoiceData"), ::OpenAPI::toJsonValue(m_invoice_data));
    }
    if (m_invoice_recipient.isSet()) {
        obj.insert(QString("invoiceRecipient"), ::OpenAPI::toJsonValue(m_invoice_recipient));
    }
    if (m_legal_entity_id_isSet) {
        obj.insert(QString("legalEntityId"), ::OpenAPI::toJsonValue(m_legal_entity_id));
    }
    if (m_legal_supplier_id_isSet) {
        obj.insert(QString("legalSupplierId"), ::OpenAPI::toJsonValue(m_legal_supplier_id));
    }
    if (m_mode_isSet) {
        obj.insert(QString("mode"), ::OpenAPI::toJsonValue(m_mode));
    }
    if (m_routing.isSet()) {
        obj.insert(QString("routing"), ::OpenAPI::toJsonValue(m_routing));
    }
    if (m_supplier_id_isSet) {
        obj.insert(QString("supplierId"), ::OpenAPI::toJsonValue(m_supplier_id));
    }
    return obj;
}

QList<OAIAttachment> OAIInvoiceSubmission::getAttachments() const {
    return m_attachments;
}
void OAIInvoiceSubmission::setAttachments(const QList<OAIAttachment> &attachments) {
    m_attachments = attachments;
    m_attachments_isSet = true;
}

bool OAIInvoiceSubmission::is_attachments_Set() const{
    return m_attachments_isSet;
}

bool OAIInvoiceSubmission::is_attachments_Valid() const{
    return m_attachments_isValid;
}

bool OAIInvoiceSubmission::isCreatePrimaryImage() const {
    return m_create_primary_image;
}
void OAIInvoiceSubmission::setCreatePrimaryImage(const bool &create_primary_image) {
    m_create_primary_image = create_primary_image;
    m_create_primary_image_isSet = true;
}

bool OAIInvoiceSubmission::is_create_primary_image_Set() const{
    return m_create_primary_image_isSet;
}

bool OAIInvoiceSubmission::is_create_primary_image_Valid() const{
    return m_create_primary_image_isValid;
}

QString OAIInvoiceSubmission::getDocument() const {
    return m_document;
}
void OAIInvoiceSubmission::setDocument(const QString &document) {
    m_document = document;
    m_document_isSet = true;
}

bool OAIInvoiceSubmission::is_document_Set() const{
    return m_document_isSet;
}

bool OAIInvoiceSubmission::is_document_Valid() const{
    return m_document_isValid;
}

QString OAIInvoiceSubmission::getDocumentUrl() const {
    return m_document_url;
}
void OAIInvoiceSubmission::setDocumentUrl(const QString &document_url) {
    m_document_url = document_url;
    m_document_url_isSet = true;
}

bool OAIInvoiceSubmission::is_document_url_Set() const{
    return m_document_url_isSet;
}

bool OAIInvoiceSubmission::is_document_url_Valid() const{
    return m_document_url_isValid;
}

QString OAIInvoiceSubmission::getIdempotencyGuid() const {
    return m_idempotency_guid;
}
void OAIInvoiceSubmission::setIdempotencyGuid(const QString &idempotency_guid) {
    m_idempotency_guid = idempotency_guid;
    m_idempotency_guid_isSet = true;
}

bool OAIInvoiceSubmission::is_idempotency_guid_Set() const{
    return m_idempotency_guid_isSet;
}

bool OAIInvoiceSubmission::is_idempotency_guid_Valid() const{
    return m_idempotency_guid_isValid;
}

OAIInvoice OAIInvoiceSubmission::getInvoice() const {
    return m_invoice;
}
void OAIInvoiceSubmission::setInvoice(const OAIInvoice &invoice) {
    m_invoice = invoice;
    m_invoice_isSet = true;
}

bool OAIInvoiceSubmission::is_invoice_Set() const{
    return m_invoice_isSet;
}

bool OAIInvoiceSubmission::is_invoice_Valid() const{
    return m_invoice_isValid;
}

OAIInvoiceData OAIInvoiceSubmission::getInvoiceData() const {
    return m_invoice_data;
}
void OAIInvoiceSubmission::setInvoiceData(const OAIInvoiceData &invoice_data) {
    m_invoice_data = invoice_data;
    m_invoice_data_isSet = true;
}

bool OAIInvoiceSubmission::is_invoice_data_Set() const{
    return m_invoice_data_isSet;
}

bool OAIInvoiceSubmission::is_invoice_data_Valid() const{
    return m_invoice_data_isValid;
}

OAIInvoiceRecipient OAIInvoiceSubmission::getInvoiceRecipient() const {
    return m_invoice_recipient;
}
void OAIInvoiceSubmission::setInvoiceRecipient(const OAIInvoiceRecipient &invoice_recipient) {
    m_invoice_recipient = invoice_recipient;
    m_invoice_recipient_isSet = true;
}

bool OAIInvoiceSubmission::is_invoice_recipient_Set() const{
    return m_invoice_recipient_isSet;
}

bool OAIInvoiceSubmission::is_invoice_recipient_Valid() const{
    return m_invoice_recipient_isValid;
}

qint32 OAIInvoiceSubmission::getLegalEntityId() const {
    return m_legal_entity_id;
}
void OAIInvoiceSubmission::setLegalEntityId(const qint32 &legal_entity_id) {
    m_legal_entity_id = legal_entity_id;
    m_legal_entity_id_isSet = true;
}

bool OAIInvoiceSubmission::is_legal_entity_id_Set() const{
    return m_legal_entity_id_isSet;
}

bool OAIInvoiceSubmission::is_legal_entity_id_Valid() const{
    return m_legal_entity_id_isValid;
}

qint32 OAIInvoiceSubmission::getLegalSupplierId() const {
    return m_legal_supplier_id;
}
void OAIInvoiceSubmission::setLegalSupplierId(const qint32 &legal_supplier_id) {
    m_legal_supplier_id = legal_supplier_id;
    m_legal_supplier_id_isSet = true;
}

bool OAIInvoiceSubmission::is_legal_supplier_id_Set() const{
    return m_legal_supplier_id_isSet;
}

bool OAIInvoiceSubmission::is_legal_supplier_id_Valid() const{
    return m_legal_supplier_id_isValid;
}

QString OAIInvoiceSubmission::getMode() const {
    return m_mode;
}
void OAIInvoiceSubmission::setMode(const QString &mode) {
    m_mode = mode;
    m_mode_isSet = true;
}

bool OAIInvoiceSubmission::is_mode_Set() const{
    return m_mode_isSet;
}

bool OAIInvoiceSubmission::is_mode_Valid() const{
    return m_mode_isValid;
}

OAIRouting OAIInvoiceSubmission::getRouting() const {
    return m_routing;
}
void OAIInvoiceSubmission::setRouting(const OAIRouting &routing) {
    m_routing = routing;
    m_routing_isSet = true;
}

bool OAIInvoiceSubmission::is_routing_Set() const{
    return m_routing_isSet;
}

bool OAIInvoiceSubmission::is_routing_Valid() const{
    return m_routing_isValid;
}

qint32 OAIInvoiceSubmission::getSupplierId() const {
    return m_supplier_id;
}
void OAIInvoiceSubmission::setSupplierId(const qint32 &supplier_id) {
    m_supplier_id = supplier_id;
    m_supplier_id_isSet = true;
}

bool OAIInvoiceSubmission::is_supplier_id_Set() const{
    return m_supplier_id_isSet;
}

bool OAIInvoiceSubmission::is_supplier_id_Valid() const{
    return m_supplier_id_isValid;
}

bool OAIInvoiceSubmission::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attachments.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_primary_image_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_document_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_document_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_idempotency_guid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice_data.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice_recipient.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_legal_entity_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_legal_supplier_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mode_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_routing.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_supplier_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInvoiceSubmission::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
