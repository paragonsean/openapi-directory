/**
 * Storecove API
 * Storecove API
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: apisupport@storecove.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICorpPass.h
 *
 * 
 */

#ifndef OAICorpPass_H
#define OAICorpPass_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICorpPass : public OAIObject {
public:
    OAICorpPass();
    OAICorpPass(QString json);
    ~OAICorpPass() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClientRedirectFailUrl() const;
    void setClientRedirectFailUrl(const QString &client_redirect_fail_url);
    bool is_client_redirect_fail_url_Set() const;
    bool is_client_redirect_fail_url_Valid() const;

    QString getClientRedirectSuccessUrl() const;
    void setClientRedirectSuccessUrl(const QString &client_redirect_success_url);
    bool is_client_redirect_success_url_Set() const;
    bool is_client_redirect_success_url_Valid() const;

    QString getCorppassUrl() const;
    void setCorppassUrl(const QString &corppass_url);
    bool is_corppass_url_Set() const;
    bool is_corppass_url_Valid() const;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    QString getFlowType() const;
    void setFlowType(const QString &flow_type);
    bool is_flow_type_Set() const;
    bool is_flow_type_Valid() const;

    QString getSignerEmail() const;
    void setSignerEmail(const QString &signer_email);
    bool is_signer_email_Set() const;
    bool is_signer_email_Valid() const;

    QString getSignerName() const;
    void setSignerName(const QString &signer_name);
    bool is_signer_name_Set() const;
    bool is_signer_name_Valid() const;

    bool isSimulateCorppass() const;
    void setSimulateCorppass(const bool &simulate_corppass);
    bool is_simulate_corppass_Set() const;
    bool is_simulate_corppass_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_client_redirect_fail_url;
    bool m_client_redirect_fail_url_isSet;
    bool m_client_redirect_fail_url_isValid;

    QString m_client_redirect_success_url;
    bool m_client_redirect_success_url_isSet;
    bool m_client_redirect_success_url_isValid;

    QString m_corppass_url;
    bool m_corppass_url_isSet;
    bool m_corppass_url_isValid;

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    QString m_flow_type;
    bool m_flow_type_isSet;
    bool m_flow_type_isValid;

    QString m_signer_email;
    bool m_signer_email_isSet;
    bool m_signer_email_isValid;

    QString m_signer_name;
    bool m_signer_name_isSet;
    bool m_signer_name_isValid;

    bool m_simulate_corppass;
    bool m_simulate_corppass_isSet;
    bool m_simulate_corppass_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICorpPass)

#endif // OAICorpPass_H
