/**
 * Storecove API
 * Storecove API
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: apisupport@storecove.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILegalEntityCreate.h
 *
 * 
 */

#ifndef OAILegalEntityCreate_H
#define OAILegalEntityCreate_H

#include <QJsonObject>

#include "OAICountry.h"
#include "OAIRea.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRea;

class OAILegalEntityCreate : public OAIObject {
public:
    OAILegalEntityCreate();
    OAILegalEntityCreate(QString json);
    ~OAILegalEntityCreate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAdvertisements() const;
    void setAdvertisements(const QList<QString> &advertisements);
    bool is_advertisements_Set() const;
    bool is_advertisements_Valid() const;

    QString getCity() const;
    void setCity(const QString &city);
    bool is_city_Set() const;
    bool is_city_Valid() const;

    OAICountry getCountry() const;
    void setCountry(const OAICountry &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    QString getCounty() const;
    void setCounty(const QString &county);
    bool is_county_Set() const;
    bool is_county_Valid() const;

    QString getLine1() const;
    void setLine1(const QString &line1);
    bool is_line1_Set() const;
    bool is_line1_Valid() const;

    QString getLine2() const;
    void setLine2(const QString &line2);
    bool is_line2_Set() const;
    bool is_line2_Valid() const;

    QString getPartyName() const;
    void setPartyName(const QString &party_name);
    bool is_party_name_Set() const;
    bool is_party_name_Valid() const;

    bool isRPublic() const;
    void setRPublic(const bool &r_public);
    bool is_r_public_Set() const;
    bool is_r_public_Valid() const;

    OAIRea getRea() const;
    void setRea(const OAIRea &rea);
    bool is_rea_Set() const;
    bool is_rea_Valid() const;

    QString getTenantId() const;
    void setTenantId(const QString &tenant_id);
    bool is_tenant_id_Set() const;
    bool is_tenant_id_Valid() const;

    QString getThirdPartyPassword() const;
    void setThirdPartyPassword(const QString &third_party_password);
    bool is_third_party_password_Set() const;
    bool is_third_party_password_Valid() const;

    QString getThirdPartyUsername() const;
    void setThirdPartyUsername(const QString &third_party_username);
    bool is_third_party_username_Set() const;
    bool is_third_party_username_Valid() const;

    QString getZip() const;
    void setZip(const QString &zip);
    bool is_zip_Set() const;
    bool is_zip_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_advertisements;
    bool m_advertisements_isSet;
    bool m_advertisements_isValid;

    QString m_city;
    bool m_city_isSet;
    bool m_city_isValid;

    OAICountry m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    QString m_county;
    bool m_county_isSet;
    bool m_county_isValid;

    QString m_line1;
    bool m_line1_isSet;
    bool m_line1_isValid;

    QString m_line2;
    bool m_line2_isSet;
    bool m_line2_isValid;

    QString m_party_name;
    bool m_party_name_isSet;
    bool m_party_name_isValid;

    bool m_r_public;
    bool m_r_public_isSet;
    bool m_r_public_isValid;

    OAIRea m_rea;
    bool m_rea_isSet;
    bool m_rea_isValid;

    QString m_tenant_id;
    bool m_tenant_id_isSet;
    bool m_tenant_id_isValid;

    QString m_third_party_password;
    bool m_third_party_password_isSet;
    bool m_third_party_password_isValid;

    QString m_third_party_username;
    bool m_third_party_username_isSet;
    bool m_third_party_username_isValid;

    QString m_zip;
    bool m_zip_isSet;
    bool m_zip_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILegalEntityCreate)

#endif // OAILegalEntityCreate_H
