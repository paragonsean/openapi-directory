/**
 * XKCD
 * Webcomic of romance, sarcasm, math, and language.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Comic from '../model/Comic';

/**
* Default service.
* @module api/DefaultApi
* @version 1.0.0
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the comicIdInfo0JsonGet operation.
     * @callback module:api/DefaultApi~comicIdInfo0JsonGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Comic} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Fetch comics and metadata  by comic id. 
     * @param {Number} comicId 
     * @param {module:api/DefaultApi~comicIdInfo0JsonGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Comic}
     */
    comicIdInfo0JsonGet(comicId, callback) {
      let postBody = null;
      // verify the required parameter 'comicId' is set
      if (comicId === undefined || comicId === null) {
        throw new Error("Missing the required parameter 'comicId' when calling comicIdInfo0JsonGet");
      }

      let pathParams = {
        'comicId': comicId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = Comic;
      return this.apiClient.callApi(
        '/{comicId}/info.0.json', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the info0JsonGet operation.
     * @callback module:api/DefaultApi~info0JsonGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Comic} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Fetch current comic and metadata. 
     * @param {module:api/DefaultApi~info0JsonGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Comic}
     */
    info0JsonGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = Comic;
      return this.apiClient.callApi(
        '/info.0.json', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
