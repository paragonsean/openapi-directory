# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Comic(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alt: str=None, day: str=None, img: str=None, link: str=None, month: str=None, news: str=None, num: float=None, safe_title: str=None, title: str=None, transcript: str=None, year: str=None):
        """Comic - a model defined in OpenAPI

        :param alt: The alt of this Comic.
        :param day: The day of this Comic.
        :param img: The img of this Comic.
        :param link: The link of this Comic.
        :param month: The month of this Comic.
        :param news: The news of this Comic.
        :param num: The num of this Comic.
        :param safe_title: The safe_title of this Comic.
        :param title: The title of this Comic.
        :param transcript: The transcript of this Comic.
        :param year: The year of this Comic.
        """
        self.openapi_types = {
            'alt': str,
            'day': str,
            'img': str,
            'link': str,
            'month': str,
            'news': str,
            'num': float,
            'safe_title': str,
            'title': str,
            'transcript': str,
            'year': str
        }

        self.attribute_map = {
            'alt': 'alt',
            'day': 'day',
            'img': 'img',
            'link': 'link',
            'month': 'month',
            'news': 'news',
            'num': 'num',
            'safe_title': 'safe_title',
            'title': 'title',
            'transcript': 'transcript',
            'year': 'year'
        }

        self._alt = alt
        self._day = day
        self._img = img
        self._link = link
        self._month = month
        self._news = news
        self._num = num
        self._safe_title = safe_title
        self._title = title
        self._transcript = transcript
        self._year = year

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Comic':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The comic of this Comic.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alt(self):
        """Gets the alt of this Comic.


        :return: The alt of this Comic.
        :rtype: str
        """
        return self._alt

    @alt.setter
    def alt(self, alt):
        """Sets the alt of this Comic.


        :param alt: The alt of this Comic.
        :type alt: str
        """

        self._alt = alt

    @property
    def day(self):
        """Gets the day of this Comic.


        :return: The day of this Comic.
        :rtype: str
        """
        return self._day

    @day.setter
    def day(self, day):
        """Sets the day of this Comic.


        :param day: The day of this Comic.
        :type day: str
        """

        self._day = day

    @property
    def img(self):
        """Gets the img of this Comic.


        :return: The img of this Comic.
        :rtype: str
        """
        return self._img

    @img.setter
    def img(self, img):
        """Sets the img of this Comic.


        :param img: The img of this Comic.
        :type img: str
        """

        self._img = img

    @property
    def link(self):
        """Gets the link of this Comic.


        :return: The link of this Comic.
        :rtype: str
        """
        return self._link

    @link.setter
    def link(self, link):
        """Sets the link of this Comic.


        :param link: The link of this Comic.
        :type link: str
        """

        self._link = link

    @property
    def month(self):
        """Gets the month of this Comic.


        :return: The month of this Comic.
        :rtype: str
        """
        return self._month

    @month.setter
    def month(self, month):
        """Sets the month of this Comic.


        :param month: The month of this Comic.
        :type month: str
        """

        self._month = month

    @property
    def news(self):
        """Gets the news of this Comic.


        :return: The news of this Comic.
        :rtype: str
        """
        return self._news

    @news.setter
    def news(self, news):
        """Sets the news of this Comic.


        :param news: The news of this Comic.
        :type news: str
        """

        self._news = news

    @property
    def num(self):
        """Gets the num of this Comic.


        :return: The num of this Comic.
        :rtype: float
        """
        return self._num

    @num.setter
    def num(self, num):
        """Sets the num of this Comic.


        :param num: The num of this Comic.
        :type num: float
        """

        self._num = num

    @property
    def safe_title(self):
        """Gets the safe_title of this Comic.


        :return: The safe_title of this Comic.
        :rtype: str
        """
        return self._safe_title

    @safe_title.setter
    def safe_title(self, safe_title):
        """Sets the safe_title of this Comic.


        :param safe_title: The safe_title of this Comic.
        :type safe_title: str
        """

        self._safe_title = safe_title

    @property
    def title(self):
        """Gets the title of this Comic.


        :return: The title of this Comic.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this Comic.


        :param title: The title of this Comic.
        :type title: str
        """

        self._title = title

    @property
    def transcript(self):
        """Gets the transcript of this Comic.


        :return: The transcript of this Comic.
        :rtype: str
        """
        return self._transcript

    @transcript.setter
    def transcript(self, transcript):
        """Sets the transcript of this Comic.


        :param transcript: The transcript of this Comic.
        :type transcript: str
        """

        self._transcript = transcript

    @property
    def year(self):
        """Gets the year of this Comic.


        :return: The year of this Comic.
        :rtype: str
        """
        return self._year

    @year.setter
    def year(self, year):
        """Sets the year of this Comic.


        :param year: The year of this Comic.
        :type year: str
        """

        self._year = year
