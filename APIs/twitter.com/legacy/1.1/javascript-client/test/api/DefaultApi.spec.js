/**
 * Twitter API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@twitter.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TwitterApi);
  }
}(this, function(expect, TwitterApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TwitterApi.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('accountSettingsGet', function() {
      it('should call accountSettingsGet successfully', function(done) {
        //uncomment below and update the code to test accountSettingsGet
        //instance.accountSettingsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountSettingsPost', function() {
      it('should call accountSettingsPost successfully', function(done) {
        //uncomment below and update the code to test accountSettingsPost
        //instance.accountSettingsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountUpdateDeliveryDevice', function() {
      it('should call accountUpdateDeliveryDevice successfully', function(done) {
        //uncomment below and update the code to test accountUpdateDeliveryDevice
        //instance.accountUpdateDeliveryDevice(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountUpdateProfile', function() {
      it('should call accountUpdateProfile successfully', function(done) {
        //uncomment below and update the code to test accountUpdateProfile
        //instance.accountUpdateProfile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountsUpdateProfileBackgroundImage', function() {
      it('should call accountsUpdateProfileBackgroundImage successfully', function(done) {
        //uncomment below and update the code to test accountsUpdateProfileBackgroundImage
        //instance.accountsUpdateProfileBackgroundImage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountsUpdateProfileColors', function() {
      it('should call accountsUpdateProfileColors successfully', function(done) {
        //uncomment below and update the code to test accountsUpdateProfileColors
        //instance.accountsUpdateProfileColors(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountsUpdateProfileImage', function() {
      it('should call accountsUpdateProfileImage successfully', function(done) {
        //uncomment below and update the code to test accountsUpdateProfileImage
        //instance.accountsUpdateProfileImage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('applicationRateLimitStatus', function() {
      it('should call applicationRateLimitStatus successfully', function(done) {
        //uncomment below and update the code to test applicationRateLimitStatus
        //instance.applicationRateLimitStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('blocksCreate', function() {
      it('should call blocksCreate successfully', function(done) {
        //uncomment below and update the code to test blocksCreate
        //instance.blocksCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('blocksDestroy', function() {
      it('should call blocksDestroy successfully', function(done) {
        //uncomment below and update the code to test blocksDestroy
        //instance.blocksDestroy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('blocksIds', function() {
      it('should call blocksIds successfully', function(done) {
        //uncomment below and update the code to test blocksIds
        //instance.blocksIds(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('blocksList', function() {
      it('should call blocksList successfully', function(done) {
        //uncomment below and update the code to test blocksList
        //instance.blocksList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('directMessages', function() {
      it('should call directMessages successfully', function(done) {
        //uncomment below and update the code to test directMessages
        //instance.directMessages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('directMessagesDestroy', function() {
      it('should call directMessagesDestroy successfully', function(done) {
        //uncomment below and update the code to test directMessagesDestroy
        //instance.directMessagesDestroy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('directMessagesNew', function() {
      it('should call directMessagesNew successfully', function(done) {
        //uncomment below and update the code to test directMessagesNew
        //instance.directMessagesNew(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('directMessagesSent', function() {
      it('should call directMessagesSent successfully', function(done) {
        //uncomment below and update the code to test directMessagesSent
        //instance.directMessagesSent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('directMessagesShow', function() {
      it('should call directMessagesShow successfully', function(done) {
        //uncomment below and update the code to test directMessagesShow
        //instance.directMessagesShow(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('favoritesCreate', function() {
      it('should call favoritesCreate successfully', function(done) {
        //uncomment below and update the code to test favoritesCreate
        //instance.favoritesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('favoritesDestroy', function() {
      it('should call favoritesDestroy successfully', function(done) {
        //uncomment below and update the code to test favoritesDestroy
        //instance.favoritesDestroy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('favoritesList', function() {
      it('should call favoritesList successfully', function(done) {
        //uncomment below and update the code to test favoritesList
        //instance.favoritesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('followersIds', function() {
      it('should call followersIds successfully', function(done) {
        //uncomment below and update the code to test followersIds
        //instance.followersIds(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('friendsIds', function() {
      it('should call friendsIds successfully', function(done) {
        //uncomment below and update the code to test friendsIds
        //instance.friendsIds(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('friendshipsCreate', function() {
      it('should call friendshipsCreate successfully', function(done) {
        //uncomment below and update the code to test friendshipsCreate
        //instance.friendshipsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('friendshipsDestroy', function() {
      it('should call friendshipsDestroy successfully', function(done) {
        //uncomment below and update the code to test friendshipsDestroy
        //instance.friendshipsDestroy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('friendshipsIncoming', function() {
      it('should call friendshipsIncoming successfully', function(done) {
        //uncomment below and update the code to test friendshipsIncoming
        //instance.friendshipsIncoming(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('friendshipsLookup', function() {
      it('should call friendshipsLookup successfully', function(done) {
        //uncomment below and update the code to test friendshipsLookup
        //instance.friendshipsLookup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('friendshipsOutgoing', function() {
      it('should call friendshipsOutgoing successfully', function(done) {
        //uncomment below and update the code to test friendshipsOutgoing
        //instance.friendshipsOutgoing(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('friendshipsShow', function() {
      it('should call friendshipsShow successfully', function(done) {
        //uncomment below and update the code to test friendshipsShow
        //instance.friendshipsShow(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('friendshipsUpdate', function() {
      it('should call friendshipsUpdate successfully', function(done) {
        //uncomment below and update the code to test friendshipsUpdate
        //instance.friendshipsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('geoPlaceId', function() {
      it('should call geoPlaceId successfully', function(done) {
        //uncomment below and update the code to test geoPlaceId
        //instance.geoPlaceId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('geoPlaces', function() {
      it('should call geoPlaces successfully', function(done) {
        //uncomment below and update the code to test geoPlaces
        //instance.geoPlaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('geoReverseGeocode', function() {
      it('should call geoReverseGeocode successfully', function(done) {
        //uncomment below and update the code to test geoReverseGeocode
        //instance.geoReverseGeocode(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('geoSearch', function() {
      it('should call geoSearch successfully', function(done) {
        //uncomment below and update the code to test geoSearch
        //instance.geoSearch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('geoSimilarPlaces', function() {
      it('should call geoSimilarPlaces successfully', function(done) {
        //uncomment below and update the code to test geoSimilarPlaces
        //instance.geoSimilarPlaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('helpConfigurations', function() {
      it('should call helpConfigurations successfully', function(done) {
        //uncomment below and update the code to test helpConfigurations
        //instance.helpConfigurations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('helpLanguages', function() {
      it('should call helpLanguages successfully', function(done) {
        //uncomment below and update the code to test helpLanguages
        //instance.helpLanguages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('helpPrivacy', function() {
      it('should call helpPrivacy successfully', function(done) {
        //uncomment below and update the code to test helpPrivacy
        //instance.helpPrivacy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('helpTos', function() {
      it('should call helpTos successfully', function(done) {
        //uncomment below and update the code to test helpTos
        //instance.helpTos(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listsCreate', function() {
      it('should call listsCreate successfully', function(done) {
        //uncomment below and update the code to test listsCreate
        //instance.listsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listsDestroy', function() {
      it('should call listsDestroy successfully', function(done) {
        //uncomment below and update the code to test listsDestroy
        //instance.listsDestroy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listsList', function() {
      it('should call listsList successfully', function(done) {
        //uncomment below and update the code to test listsList
        //instance.listsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listsMembers', function() {
      it('should call listsMembers successfully', function(done) {
        //uncomment below and update the code to test listsMembers
        //instance.listsMembers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listsMembersCreate', function() {
      it('should call listsMembersCreate successfully', function(done) {
        //uncomment below and update the code to test listsMembersCreate
        //instance.listsMembersCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listsMembersCreateAll', function() {
      it('should call listsMembersCreateAll successfully', function(done) {
        //uncomment below and update the code to test listsMembersCreateAll
        //instance.listsMembersCreateAll(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listsMembersDestroy', function() {
      it('should call listsMembersDestroy successfully', function(done) {
        //uncomment below and update the code to test listsMembersDestroy
        //instance.listsMembersDestroy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listsMembersDestroyAll', function() {
      it('should call listsMembersDestroyAll successfully', function(done) {
        //uncomment below and update the code to test listsMembersDestroyAll
        //instance.listsMembersDestroyAll(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listsMembersShow', function() {
      it('should call listsMembersShow successfully', function(done) {
        //uncomment below and update the code to test listsMembersShow
        //instance.listsMembersShow(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listsMemberships', function() {
      it('should call listsMemberships successfully', function(done) {
        //uncomment below and update the code to test listsMemberships
        //instance.listsMemberships(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listsShow', function() {
      it('should call listsShow successfully', function(done) {
        //uncomment below and update the code to test listsShow
        //instance.listsShow(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listsStatuses', function() {
      it('should call listsStatuses successfully', function(done) {
        //uncomment below and update the code to test listsStatuses
        //instance.listsStatuses(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listsSubscribers', function() {
      it('should call listsSubscribers successfully', function(done) {
        //uncomment below and update the code to test listsSubscribers
        //instance.listsSubscribers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listsSubscribersCreate', function() {
      it('should call listsSubscribersCreate successfully', function(done) {
        //uncomment below and update the code to test listsSubscribersCreate
        //instance.listsSubscribersCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listsSubscribersDestroy', function() {
      it('should call listsSubscribersDestroy successfully', function(done) {
        //uncomment below and update the code to test listsSubscribersDestroy
        //instance.listsSubscribersDestroy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listsSubscribersShow', function() {
      it('should call listsSubscribersShow successfully', function(done) {
        //uncomment below and update the code to test listsSubscribersShow
        //instance.listsSubscribersShow(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listsSubscriptions', function() {
      it('should call listsSubscriptions successfully', function(done) {
        //uncomment below and update the code to test listsSubscriptions
        //instance.listsSubscriptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listsUpdate', function() {
      it('should call listsUpdate successfully', function(done) {
        //uncomment below and update the code to test listsUpdate
        //instance.listsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('savedSearchesCreate', function() {
      it('should call savedSearchesCreate successfully', function(done) {
        //uncomment below and update the code to test savedSearchesCreate
        //instance.savedSearchesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('savedSearchesDestroy', function() {
      it('should call savedSearchesDestroy successfully', function(done) {
        //uncomment below and update the code to test savedSearchesDestroy
        //instance.savedSearchesDestroy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('savedSearchesList', function() {
      it('should call savedSearchesList successfully', function(done) {
        //uncomment below and update the code to test savedSearchesList
        //instance.savedSearchesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('savedsearchesid', function() {
      it('should call savedsearchesid successfully', function(done) {
        //uncomment below and update the code to test savedsearchesid
        //instance.savedsearchesid(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchTweets', function() {
      it('should call searchTweets successfully', function(done) {
        //uncomment below and update the code to test searchTweets
        //instance.searchTweets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('statusesDestroy', function() {
      it('should call statusesDestroy successfully', function(done) {
        //uncomment below and update the code to test statusesDestroy
        //instance.statusesDestroy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('statusesHomeTimeline', function() {
      it('should call statusesHomeTimeline successfully', function(done) {
        //uncomment below and update the code to test statusesHomeTimeline
        //instance.statusesHomeTimeline(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('statusesMentionsTimeline', function() {
      it('should call statusesMentionsTimeline successfully', function(done) {
        //uncomment below and update the code to test statusesMentionsTimeline
        //instance.statusesMentionsTimeline(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('statusesOembed', function() {
      it('should call statusesOembed successfully', function(done) {
        //uncomment below and update the code to test statusesOembed
        //instance.statusesOembed(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('statusesRetweets', function() {
      it('should call statusesRetweets successfully', function(done) {
        //uncomment below and update the code to test statusesRetweets
        //instance.statusesRetweets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('statusesShow', function() {
      it('should call statusesShow successfully', function(done) {
        //uncomment below and update the code to test statusesShow
        //instance.statusesShow(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('statusesUpdate', function() {
      it('should call statusesUpdate successfully', function(done) {
        //uncomment below and update the code to test statusesUpdate
        //instance.statusesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('statusesUpdateWithMedia', function() {
      it('should call statusesUpdateWithMedia successfully', function(done) {
        //uncomment below and update the code to test statusesUpdateWithMedia
        //instance.statusesUpdateWithMedia(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('statusesUserTimeline', function() {
      it('should call statusesUserTimeline successfully', function(done) {
        //uncomment below and update the code to test statusesUserTimeline
        //instance.statusesUserTimeline(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('statusesretweetid', function() {
      it('should call statusesretweetid successfully', function(done) {
        //uncomment below and update the code to test statusesretweetid
        //instance.statusesretweetid(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('trendsAvailable', function() {
      it('should call trendsAvailable successfully', function(done) {
        //uncomment below and update the code to test trendsAvailable
        //instance.trendsAvailable(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('trendsClosest', function() {
      it('should call trendsClosest successfully', function(done) {
        //uncomment below and update the code to test trendsClosest
        //instance.trendsClosest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('trendsPlace', function() {
      it('should call trendsPlace successfully', function(done) {
        //uncomment below and update the code to test trendsPlace
        //instance.trendsPlace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersContributees', function() {
      it('should call usersContributees successfully', function(done) {
        //uncomment below and update the code to test usersContributees
        //instance.usersContributees(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersContributors', function() {
      it('should call usersContributors successfully', function(done) {
        //uncomment below and update the code to test usersContributors
        //instance.usersContributors(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersLookup', function() {
      it('should call usersLookup successfully', function(done) {
        //uncomment below and update the code to test usersLookup
        //instance.usersLookup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersReportSpam', function() {
      it('should call usersReportSpam successfully', function(done) {
        //uncomment below and update the code to test usersReportSpam
        //instance.usersReportSpam(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersSearch', function() {
      it('should call usersSearch successfully', function(done) {
        //uncomment below and update the code to test usersSearch
        //instance.usersSearch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersShow', function() {
      it('should call usersShow successfully', function(done) {
        //uncomment below and update the code to test usersShow
        //instance.usersShow(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersSuggestions', function() {
      it('should call usersSuggestions successfully', function(done) {
        //uncomment below and update the code to test usersSuggestions
        //instance.usersSuggestions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersSuggestionsSlug', function() {
      it('should call usersSuggestionsSlug successfully', function(done) {
        //uncomment below and update the code to test usersSuggestionsSlug
        //instance.usersSuggestionsSlug(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersSuggestionsslugmembers', function() {
      it('should call usersSuggestionsslugmembers successfully', function(done) {
        //uncomment below and update the code to test usersSuggestionsslugmembers
        //instance.usersSuggestionsslugmembers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
