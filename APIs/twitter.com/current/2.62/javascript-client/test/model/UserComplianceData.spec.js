/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.62
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TwitterApiV2);
  }
}(this, function(expect, TwitterApiV2) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TwitterApiV2.UserComplianceData();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UserComplianceData', function() {
    it('should create an instance of UserComplianceData', function() {
      // uncomment below and update the code to test UserComplianceData
      //var instance = new TwitterApiV2.UserComplianceData();
      //expect(instance).to.be.a(TwitterApiV2.UserComplianceData);
    });

    it('should have the property userProtect (base name: "user_protect")', function() {
      // uncomment below and update the code to test the property userProtect
      //var instance = new TwitterApiV2.UserComplianceData();
      //expect(instance).to.be();
    });

    it('should have the property userUnprotect (base name: "user_unprotect")', function() {
      // uncomment below and update the code to test the property userUnprotect
      //var instance = new TwitterApiV2.UserComplianceData();
      //expect(instance).to.be();
    });

    it('should have the property userDelete (base name: "user_delete")', function() {
      // uncomment below and update the code to test the property userDelete
      //var instance = new TwitterApiV2.UserComplianceData();
      //expect(instance).to.be();
    });

    it('should have the property userUndelete (base name: "user_undelete")', function() {
      // uncomment below and update the code to test the property userUndelete
      //var instance = new TwitterApiV2.UserComplianceData();
      //expect(instance).to.be();
    });

    it('should have the property userSuspend (base name: "user_suspend")', function() {
      // uncomment below and update the code to test the property userSuspend
      //var instance = new TwitterApiV2.UserComplianceData();
      //expect(instance).to.be();
    });

    it('should have the property userUnsuspend (base name: "user_unsuspend")', function() {
      // uncomment below and update the code to test the property userUnsuspend
      //var instance = new TwitterApiV2.UserComplianceData();
      //expect(instance).to.be();
    });

    it('should have the property userWithheld (base name: "user_withheld")', function() {
      // uncomment below and update the code to test the property userWithheld
      //var instance = new TwitterApiV2.UserComplianceData();
      //expect(instance).to.be();
    });

    it('should have the property scrubGeo (base name: "scrub_geo")', function() {
      // uncomment below and update the code to test the property scrubGeo
      //var instance = new TwitterApiV2.UserComplianceData();
      //expect(instance).to.be();
    });

    it('should have the property userProfileModification (base name: "user_profile_modification")', function() {
      // uncomment below and update the code to test the property userProfileModification
      //var instance = new TwitterApiV2.UserComplianceData();
      //expect(instance).to.be();
    });

  });

}));
