/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.62
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TwitterApiV2);
  }
}(this, function(expect, TwitterApiV2) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TwitterApiV2.Space();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Space', function() {
    it('should create an instance of Space', function() {
      // uncomment below and update the code to test Space
      //var instance = new TwitterApiV2.Space();
      //expect(instance).to.be.a(TwitterApiV2.Space);
    });

    it('should have the property createdAt (base name: "created_at")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new TwitterApiV2.Space();
      //expect(instance).to.be();
    });

    it('should have the property creatorId (base name: "creator_id")', function() {
      // uncomment below and update the code to test the property creatorId
      //var instance = new TwitterApiV2.Space();
      //expect(instance).to.be();
    });

    it('should have the property endedAt (base name: "ended_at")', function() {
      // uncomment below and update the code to test the property endedAt
      //var instance = new TwitterApiV2.Space();
      //expect(instance).to.be();
    });

    it('should have the property hostIds (base name: "host_ids")', function() {
      // uncomment below and update the code to test the property hostIds
      //var instance = new TwitterApiV2.Space();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new TwitterApiV2.Space();
      //expect(instance).to.be();
    });

    it('should have the property invitedUserIds (base name: "invited_user_ids")', function() {
      // uncomment below and update the code to test the property invitedUserIds
      //var instance = new TwitterApiV2.Space();
      //expect(instance).to.be();
    });

    it('should have the property isTicketed (base name: "is_ticketed")', function() {
      // uncomment below and update the code to test the property isTicketed
      //var instance = new TwitterApiV2.Space();
      //expect(instance).to.be();
    });

    it('should have the property lang (base name: "lang")', function() {
      // uncomment below and update the code to test the property lang
      //var instance = new TwitterApiV2.Space();
      //expect(instance).to.be();
    });

    it('should have the property participantCount (base name: "participant_count")', function() {
      // uncomment below and update the code to test the property participantCount
      //var instance = new TwitterApiV2.Space();
      //expect(instance).to.be();
    });

    it('should have the property scheduledStart (base name: "scheduled_start")', function() {
      // uncomment below and update the code to test the property scheduledStart
      //var instance = new TwitterApiV2.Space();
      //expect(instance).to.be();
    });

    it('should have the property speakerIds (base name: "speaker_ids")', function() {
      // uncomment below and update the code to test the property speakerIds
      //var instance = new TwitterApiV2.Space();
      //expect(instance).to.be();
    });

    it('should have the property startedAt (base name: "started_at")', function() {
      // uncomment below and update the code to test the property startedAt
      //var instance = new TwitterApiV2.Space();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new TwitterApiV2.Space();
      //expect(instance).to.be();
    });

    it('should have the property subscriberCount (base name: "subscriber_count")', function() {
      // uncomment below and update the code to test the property subscriberCount
      //var instance = new TwitterApiV2.Space();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new TwitterApiV2.Space();
      //expect(instance).to.be();
    });

    it('should have the property topics (base name: "topics")', function() {
      // uncomment below and update the code to test the property topics
      //var instance = new TwitterApiV2.Space();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updated_at")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new TwitterApiV2.Space();
      //expect(instance).to.be();
    });

  });

}));
