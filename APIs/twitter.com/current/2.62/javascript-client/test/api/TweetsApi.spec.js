/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.62
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TwitterApiV2);
  }
}(this, function(expect, TwitterApiV2) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TwitterApiV2.TweetsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TweetsApi', function() {
    describe('addOrDeleteRules', function() {
      it('should call addOrDeleteRules successfully', function(done) {
        //uncomment below and update the code to test addOrDeleteRules
        //instance.addOrDeleteRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createTweet', function() {
      it('should call createTweet successfully', function(done) {
        //uncomment below and update the code to test createTweet
        //instance.createTweet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteTweetById', function() {
      it('should call deleteTweetById successfully', function(done) {
        //uncomment below and update the code to test deleteTweetById
        //instance.deleteTweetById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('findTweetById', function() {
      it('should call findTweetById successfully', function(done) {
        //uncomment below and update the code to test findTweetById
        //instance.findTweetById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('findTweetsById', function() {
      it('should call findTweetsById successfully', function(done) {
        //uncomment below and update the code to test findTweetsById
        //instance.findTweetsById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('findTweetsThatQuoteATweet', function() {
      it('should call findTweetsThatQuoteATweet successfully', function(done) {
        //uncomment below and update the code to test findTweetsThatQuoteATweet
        //instance.findTweetsThatQuoteATweet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRules', function() {
      it('should call getRules successfully', function(done) {
        //uncomment below and update the code to test getRules
        //instance.getRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTweetsFirehoseStream', function() {
      it('should call getTweetsFirehoseStream successfully', function(done) {
        //uncomment below and update the code to test getTweetsFirehoseStream
        //instance.getTweetsFirehoseStream(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTweetsSample10Stream', function() {
      it('should call getTweetsSample10Stream successfully', function(done) {
        //uncomment below and update the code to test getTweetsSample10Stream
        //instance.getTweetsSample10Stream(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('hideReplyById', function() {
      it('should call hideReplyById successfully', function(done) {
        //uncomment below and update the code to test hideReplyById
        //instance.hideReplyById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listsIdTweets', function() {
      it('should call listsIdTweets successfully', function(done) {
        //uncomment below and update the code to test listsIdTweets
        //instance.listsIdTweets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sampleStream', function() {
      it('should call sampleStream successfully', function(done) {
        //uncomment below and update the code to test sampleStream
        //instance.sampleStream(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchStream', function() {
      it('should call searchStream successfully', function(done) {
        //uncomment below and update the code to test searchStream
        //instance.searchStream(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('spaceBuyers_0', function() {
      it('should call spaceBuyers_0 successfully', function(done) {
        //uncomment below and update the code to test spaceBuyers_0
        //instance.spaceBuyers_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('spaceTweets_0', function() {
      it('should call spaceTweets_0 successfully', function(done) {
        //uncomment below and update the code to test spaceTweets_0
        //instance.spaceTweets_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tweetCountsFullArchiveSearch', function() {
      it('should call tweetCountsFullArchiveSearch successfully', function(done) {
        //uncomment below and update the code to test tweetCountsFullArchiveSearch
        //instance.tweetCountsFullArchiveSearch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tweetCountsRecentSearch', function() {
      it('should call tweetCountsRecentSearch successfully', function(done) {
        //uncomment below and update the code to test tweetCountsRecentSearch
        //instance.tweetCountsRecentSearch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tweetsFullarchiveSearch', function() {
      it('should call tweetsFullarchiveSearch successfully', function(done) {
        //uncomment below and update the code to test tweetsFullarchiveSearch
        //instance.tweetsFullarchiveSearch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tweetsRecentSearch', function() {
      it('should call tweetsRecentSearch successfully', function(done) {
        //uncomment below and update the code to test tweetsRecentSearch
        //instance.tweetsRecentSearch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersIdLike', function() {
      it('should call usersIdLike successfully', function(done) {
        //uncomment below and update the code to test usersIdLike
        //instance.usersIdLike(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersIdLikedTweets', function() {
      it('should call usersIdLikedTweets successfully', function(done) {
        //uncomment below and update the code to test usersIdLikedTweets
        //instance.usersIdLikedTweets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersIdMentions', function() {
      it('should call usersIdMentions successfully', function(done) {
        //uncomment below and update the code to test usersIdMentions
        //instance.usersIdMentions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersIdRetweets', function() {
      it('should call usersIdRetweets successfully', function(done) {
        //uncomment below and update the code to test usersIdRetweets
        //instance.usersIdRetweets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersIdTimeline', function() {
      it('should call usersIdTimeline successfully', function(done) {
        //uncomment below and update the code to test usersIdTimeline
        //instance.usersIdTimeline(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersIdTweets', function() {
      it('should call usersIdTweets successfully', function(done) {
        //uncomment below and update the code to test usersIdTweets
        //instance.usersIdTweets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersIdUnlike', function() {
      it('should call usersIdUnlike successfully', function(done) {
        //uncomment below and update the code to test usersIdUnlike
        //instance.usersIdUnlike(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersIdUnretweets', function() {
      it('should call usersIdUnretweets successfully', function(done) {
        //uncomment below and update the code to test usersIdUnretweets
        //instance.usersIdUnretweets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
