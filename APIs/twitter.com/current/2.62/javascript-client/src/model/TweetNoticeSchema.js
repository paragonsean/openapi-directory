/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.62
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TweetNotice from './TweetNotice';

/**
 * The TweetNoticeSchema model module.
 * @module model/TweetNoticeSchema
 * @version 2.62
 */
class TweetNoticeSchema {
    /**
     * Constructs a new <code>TweetNoticeSchema</code>.
     * @alias module:model/TweetNoticeSchema
     * @param publicTweetNotice {module:model/TweetNotice} 
     */
    constructor(publicTweetNotice) { 
        
        TweetNoticeSchema.initialize(this, publicTweetNotice);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, publicTweetNotice) { 
        obj['public_tweet_notice'] = publicTweetNotice;
    }

    /**
     * Constructs a <code>TweetNoticeSchema</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TweetNoticeSchema} obj Optional instance to populate.
     * @return {module:model/TweetNoticeSchema} The populated <code>TweetNoticeSchema</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TweetNoticeSchema();

            if (data.hasOwnProperty('public_tweet_notice')) {
                obj['public_tweet_notice'] = TweetNotice.constructFromObject(data['public_tweet_notice']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TweetNoticeSchema</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TweetNoticeSchema</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TweetNoticeSchema.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `public_tweet_notice`
        if (data['public_tweet_notice']) { // data not null
          TweetNotice.validateJSON(data['public_tweet_notice']);
        }

        return true;
    }


}

TweetNoticeSchema.RequiredProperties = ["public_tweet_notice"];

/**
 * @member {module:model/TweetNotice} public_tweet_notice
 */
TweetNoticeSchema.prototype['public_tweet_notice'] = undefined;






export default TweetNoticeSchema;

