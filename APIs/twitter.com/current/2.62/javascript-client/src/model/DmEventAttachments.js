/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.62
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DmEventAttachments model module.
 * @module model/DmEventAttachments
 * @version 2.62
 */
class DmEventAttachments {
    /**
     * Constructs a new <code>DmEventAttachments</code>.
     * Specifies the type of attachments (if any) present in this DM.
     * @alias module:model/DmEventAttachments
     */
    constructor() { 
        
        DmEventAttachments.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DmEventAttachments</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DmEventAttachments} obj Optional instance to populate.
     * @return {module:model/DmEventAttachments} The populated <code>DmEventAttachments</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DmEventAttachments();

            if (data.hasOwnProperty('card_ids')) {
                obj['card_ids'] = ApiClient.convertToType(data['card_ids'], ['String']);
            }
            if (data.hasOwnProperty('media_keys')) {
                obj['media_keys'] = ApiClient.convertToType(data['media_keys'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DmEventAttachments</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DmEventAttachments</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['card_ids'])) {
            throw new Error("Expected the field `card_ids` to be an array in the JSON data but got " + data['card_ids']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['media_keys'])) {
            throw new Error("Expected the field `media_keys` to be an array in the JSON data but got " + data['media_keys']);
        }

        return true;
    }


}



/**
 * A list of card IDs (if cards are attached).
 * @member {Array.<String>} card_ids
 */
DmEventAttachments.prototype['card_ids'] = undefined;

/**
 * A list of Media Keys for each one of the media attachments (if media are attached).
 * @member {Array.<String>} media_keys
 */
DmEventAttachments.prototype['media_keys'] = undefined;






export default DmEventAttachments;

