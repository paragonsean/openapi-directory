/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.62
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ComplianceJobStatus from './ComplianceJobStatus';
import ComplianceJobType from './ComplianceJobType';

/**
 * The ComplianceJob model module.
 * @module model/ComplianceJob
 * @version 2.62
 */
class ComplianceJob {
    /**
     * Constructs a new <code>ComplianceJob</code>.
     * @alias module:model/ComplianceJob
     * @param createdAt {Date} Creation time of the compliance job.
     * @param downloadExpiresAt {Date} Expiration time of the download URL.
     * @param downloadUrl {String} URL from which the user will retrieve their compliance results.
     * @param id {String} Compliance Job ID.
     * @param status {module:model/ComplianceJobStatus} 
     * @param type {module:model/ComplianceJobType} 
     * @param uploadExpiresAt {Date} Expiration time of the upload URL.
     * @param uploadUrl {String} URL to which the user will upload their Tweet or user IDs.
     */
    constructor(createdAt, downloadExpiresAt, downloadUrl, id, status, type, uploadExpiresAt, uploadUrl) { 
        
        ComplianceJob.initialize(this, createdAt, downloadExpiresAt, downloadUrl, id, status, type, uploadExpiresAt, uploadUrl);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, createdAt, downloadExpiresAt, downloadUrl, id, status, type, uploadExpiresAt, uploadUrl) { 
        obj['created_at'] = createdAt;
        obj['download_expires_at'] = downloadExpiresAt;
        obj['download_url'] = downloadUrl;
        obj['id'] = id;
        obj['status'] = status;
        obj['type'] = type;
        obj['upload_expires_at'] = uploadExpiresAt;
        obj['upload_url'] = uploadUrl;
    }

    /**
     * Constructs a <code>ComplianceJob</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ComplianceJob} obj Optional instance to populate.
     * @return {module:model/ComplianceJob} The populated <code>ComplianceJob</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ComplianceJob();

            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('download_expires_at')) {
                obj['download_expires_at'] = ApiClient.convertToType(data['download_expires_at'], 'Date');
            }
            if (data.hasOwnProperty('download_url')) {
                obj['download_url'] = ApiClient.convertToType(data['download_url'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ComplianceJobStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ComplianceJobType.constructFromObject(data['type']);
            }
            if (data.hasOwnProperty('upload_expires_at')) {
                obj['upload_expires_at'] = ApiClient.convertToType(data['upload_expires_at'], 'Date');
            }
            if (data.hasOwnProperty('upload_url')) {
                obj['upload_url'] = ApiClient.convertToType(data['upload_url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ComplianceJob</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ComplianceJob</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ComplianceJob.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['download_url'] && !(typeof data['download_url'] === 'string' || data['download_url'] instanceof String)) {
            throw new Error("Expected the field `download_url` to be a primitive type in the JSON string but got " + data['download_url']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['upload_url'] && !(typeof data['upload_url'] === 'string' || data['upload_url'] instanceof String)) {
            throw new Error("Expected the field `upload_url` to be a primitive type in the JSON string but got " + data['upload_url']);
        }

        return true;
    }


}

ComplianceJob.RequiredProperties = ["created_at", "download_expires_at", "download_url", "id", "status", "type", "upload_expires_at", "upload_url"];

/**
 * Creation time of the compliance job.
 * @member {Date} created_at
 */
ComplianceJob.prototype['created_at'] = undefined;

/**
 * Expiration time of the download URL.
 * @member {Date} download_expires_at
 */
ComplianceJob.prototype['download_expires_at'] = undefined;

/**
 * URL from which the user will retrieve their compliance results.
 * @member {String} download_url
 */
ComplianceJob.prototype['download_url'] = undefined;

/**
 * Compliance Job ID.
 * @member {String} id
 */
ComplianceJob.prototype['id'] = undefined;

/**
 * User-provided name for a compliance job.
 * @member {String} name
 */
ComplianceJob.prototype['name'] = undefined;

/**
 * @member {module:model/ComplianceJobStatus} status
 */
ComplianceJob.prototype['status'] = undefined;

/**
 * @member {module:model/ComplianceJobType} type
 */
ComplianceJob.prototype['type'] = undefined;

/**
 * Expiration time of the upload URL.
 * @member {Date} upload_expires_at
 */
ComplianceJob.prototype['upload_expires_at'] = undefined;

/**
 * URL to which the user will upload their Tweet or user IDs.
 * @member {String} upload_url
 */
ComplianceJob.prototype['upload_url'] = undefined;






export default ComplianceJob;

