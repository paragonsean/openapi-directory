/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.62
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UserComplianceSchemaUser from './UserComplianceSchemaUser';

/**
 * The UserScrubGeoObjectSchema model module.
 * @module model/UserScrubGeoObjectSchema
 * @version 2.62
 */
class UserScrubGeoObjectSchema {
    /**
     * Constructs a new <code>UserScrubGeoObjectSchema</code>.
     * @alias module:model/UserScrubGeoObjectSchema
     * @param eventAt {Date} Event time.
     * @param upToTweetId {String} Unique identifier of this Tweet. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers.
     * @param user {module:model/UserComplianceSchemaUser} 
     */
    constructor(eventAt, upToTweetId, user) { 
        
        UserScrubGeoObjectSchema.initialize(this, eventAt, upToTweetId, user);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, eventAt, upToTweetId, user) { 
        obj['event_at'] = eventAt;
        obj['up_to_tweet_id'] = upToTweetId;
        obj['user'] = user;
    }

    /**
     * Constructs a <code>UserScrubGeoObjectSchema</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserScrubGeoObjectSchema} obj Optional instance to populate.
     * @return {module:model/UserScrubGeoObjectSchema} The populated <code>UserScrubGeoObjectSchema</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserScrubGeoObjectSchema();

            if (data.hasOwnProperty('event_at')) {
                obj['event_at'] = ApiClient.convertToType(data['event_at'], 'Date');
            }
            if (data.hasOwnProperty('up_to_tweet_id')) {
                obj['up_to_tweet_id'] = ApiClient.convertToType(data['up_to_tweet_id'], 'String');
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = UserComplianceSchemaUser.constructFromObject(data['user']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserScrubGeoObjectSchema</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserScrubGeoObjectSchema</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UserScrubGeoObjectSchema.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['up_to_tweet_id'] && !(typeof data['up_to_tweet_id'] === 'string' || data['up_to_tweet_id'] instanceof String)) {
            throw new Error("Expected the field `up_to_tweet_id` to be a primitive type in the JSON string but got " + data['up_to_tweet_id']);
        }
        // validate the optional field `user`
        if (data['user']) { // data not null
          UserComplianceSchemaUser.validateJSON(data['user']);
        }

        return true;
    }


}

UserScrubGeoObjectSchema.RequiredProperties = ["event_at", "up_to_tweet_id", "user"];

/**
 * Event time.
 * @member {Date} event_at
 */
UserScrubGeoObjectSchema.prototype['event_at'] = undefined;

/**
 * Unique identifier of this Tweet. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers.
 * @member {String} up_to_tweet_id
 */
UserScrubGeoObjectSchema.prototype['up_to_tweet_id'] = undefined;

/**
 * @member {module:model/UserComplianceSchemaUser} user
 */
UserScrubGeoObjectSchema.prototype['user'] = undefined;






export default UserScrubGeoObjectSchema;

