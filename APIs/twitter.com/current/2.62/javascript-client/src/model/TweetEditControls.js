/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.62
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TweetEditControls model module.
 * @module model/TweetEditControls
 * @version 2.62
 */
class TweetEditControls {
    /**
     * Constructs a new <code>TweetEditControls</code>.
     * @alias module:model/TweetEditControls
     * @param editableUntil {Date} Time when Tweet is no longer editable.
     * @param editsRemaining {Number} Number of times this Tweet can be edited.
     * @param isEditEligible {Boolean} Indicates if this Tweet is eligible to be edited.
     */
    constructor(editableUntil, editsRemaining, isEditEligible) { 
        
        TweetEditControls.initialize(this, editableUntil, editsRemaining, isEditEligible);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, editableUntil, editsRemaining, isEditEligible) { 
        obj['editable_until'] = editableUntil;
        obj['edits_remaining'] = editsRemaining;
        obj['is_edit_eligible'] = isEditEligible;
    }

    /**
     * Constructs a <code>TweetEditControls</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TweetEditControls} obj Optional instance to populate.
     * @return {module:model/TweetEditControls} The populated <code>TweetEditControls</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TweetEditControls();

            if (data.hasOwnProperty('editable_until')) {
                obj['editable_until'] = ApiClient.convertToType(data['editable_until'], 'Date');
            }
            if (data.hasOwnProperty('edits_remaining')) {
                obj['edits_remaining'] = ApiClient.convertToType(data['edits_remaining'], 'Number');
            }
            if (data.hasOwnProperty('is_edit_eligible')) {
                obj['is_edit_eligible'] = ApiClient.convertToType(data['is_edit_eligible'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TweetEditControls</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TweetEditControls</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TweetEditControls.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

TweetEditControls.RequiredProperties = ["editable_until", "edits_remaining", "is_edit_eligible"];

/**
 * Time when Tweet is no longer editable.
 * @member {Date} editable_until
 */
TweetEditControls.prototype['editable_until'] = undefined;

/**
 * Number of times this Tweet can be edited.
 * @member {Number} edits_remaining
 */
TweetEditControls.prototype['edits_remaining'] = undefined;

/**
 * Indicates if this Tweet is eligible to be edited.
 * @member {Boolean} is_edit_eligible
 */
TweetEditControls.prototype['is_edit_eligible'] = undefined;






export default TweetEditControls;

