/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.62
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Media from './Media';
import Variant from './Variant';

/**
 * The AnimatedGif model module.
 * @module model/AnimatedGif
 * @version 2.62
 */
class AnimatedGif {
    /**
     * Constructs a new <code>AnimatedGif</code>.
     * @alias module:model/AnimatedGif
     * @extends module:model/Media
     * @implements module:model/Media
     * @param type {String} 
     */
    constructor(type) { 
        Media.initialize(this, type);
        AnimatedGif.initialize(this, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type) { 
    }

    /**
     * Constructs a <code>AnimatedGif</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AnimatedGif} obj Optional instance to populate.
     * @return {module:model/AnimatedGif} The populated <code>AnimatedGif</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AnimatedGif();
            Media.constructFromObject(data, obj);
            Media.constructFromObject(data, obj);

            if (data.hasOwnProperty('preview_image_url')) {
                obj['preview_image_url'] = ApiClient.convertToType(data['preview_image_url'], 'String');
            }
            if (data.hasOwnProperty('variants')) {
                obj['variants'] = ApiClient.convertToType(data['variants'], [Variant]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AnimatedGif</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AnimatedGif</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AnimatedGif.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['preview_image_url'] && !(typeof data['preview_image_url'] === 'string' || data['preview_image_url'] instanceof String)) {
            throw new Error("Expected the field `preview_image_url` to be a primitive type in the JSON string but got " + data['preview_image_url']);
        }
        if (data['variants']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['variants'])) {
                throw new Error("Expected the field `variants` to be an array in the JSON data but got " + data['variants']);
            }
            // validate the optional field `variants` (array)
            for (const item of data['variants']) {
                Variant.validateJSON(item);
            };
        }

        return true;
    }


}

AnimatedGif.RequiredProperties = ["type"];

/**
 * @member {String} preview_image_url
 */
AnimatedGif.prototype['preview_image_url'] = undefined;

/**
 * An array of all available variants of the media.
 * @member {Array.<module:model/Variant>} variants
 */
AnimatedGif.prototype['variants'] = undefined;


// Implement Media interface:
/**
 * The height of the media in pixels.
 * @member {Number} height
 */
Media.prototype['height'] = undefined;
/**
 * The Media Key identifier for this attachment.
 * @member {String} media_key
 */
Media.prototype['media_key'] = undefined;
/**
 * @member {String} type
 */
Media.prototype['type'] = undefined;
/**
 * The width of the media in pixels.
 * @member {Number} width
 */
Media.prototype['width'] = undefined;




export default AnimatedGif;

