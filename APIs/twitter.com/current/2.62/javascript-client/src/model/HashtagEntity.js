/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.62
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EntityIndicesInclusiveExclusive from './EntityIndicesInclusiveExclusive';
import HashtagFields from './HashtagFields';

/**
 * The HashtagEntity model module.
 * @module model/HashtagEntity
 * @version 2.62
 */
class HashtagEntity {
    /**
     * Constructs a new <code>HashtagEntity</code>.
     * @alias module:model/HashtagEntity
     * @implements module:model/EntityIndicesInclusiveExclusive
     * @implements module:model/HashtagFields
     * @param end {Number} Index (zero-based) at which position this entity ends.  The index is exclusive.
     * @param start {Number} Index (zero-based) at which position this entity starts.  The index is inclusive.
     * @param tag {String} The text of the Hashtag.
     */
    constructor(end, start, tag) { 
        EntityIndicesInclusiveExclusive.initialize(this, end, start);HashtagFields.initialize(this, tag);
        HashtagEntity.initialize(this, end, start, tag);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, end, start, tag) { 
        obj['end'] = end;
        obj['start'] = start;
        obj['tag'] = tag;
    }

    /**
     * Constructs a <code>HashtagEntity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HashtagEntity} obj Optional instance to populate.
     * @return {module:model/HashtagEntity} The populated <code>HashtagEntity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HashtagEntity();
            EntityIndicesInclusiveExclusive.constructFromObject(data, obj);
            HashtagFields.constructFromObject(data, obj);

            if (data.hasOwnProperty('end')) {
                obj['end'] = ApiClient.convertToType(data['end'], 'Number');
            }
            if (data.hasOwnProperty('start')) {
                obj['start'] = ApiClient.convertToType(data['start'], 'Number');
            }
            if (data.hasOwnProperty('tag')) {
                obj['tag'] = ApiClient.convertToType(data['tag'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HashtagEntity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HashtagEntity</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of HashtagEntity.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['tag'] && !(typeof data['tag'] === 'string' || data['tag'] instanceof String)) {
            throw new Error("Expected the field `tag` to be a primitive type in the JSON string but got " + data['tag']);
        }

        return true;
    }


}

HashtagEntity.RequiredProperties = ["end", "start", "tag"];

/**
 * Index (zero-based) at which position this entity ends.  The index is exclusive.
 * @member {Number} end
 */
HashtagEntity.prototype['end'] = undefined;

/**
 * Index (zero-based) at which position this entity starts.  The index is inclusive.
 * @member {Number} start
 */
HashtagEntity.prototype['start'] = undefined;

/**
 * The text of the Hashtag.
 * @member {String} tag
 */
HashtagEntity.prototype['tag'] = undefined;


// Implement EntityIndicesInclusiveExclusive interface:
/**
 * Index (zero-based) at which position this entity ends.  The index is exclusive.
 * @member {Number} end
 */
EntityIndicesInclusiveExclusive.prototype['end'] = undefined;
/**
 * Index (zero-based) at which position this entity starts.  The index is inclusive.
 * @member {Number} start
 */
EntityIndicesInclusiveExclusive.prototype['start'] = undefined;
// Implement HashtagFields interface:
/**
 * The text of the Hashtag.
 * @member {String} tag
 */
HashtagFields.prototype['tag'] = undefined;




export default HashtagEntity;

