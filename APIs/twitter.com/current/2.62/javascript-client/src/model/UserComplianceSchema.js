/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.62
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UserComplianceSchemaUser from './UserComplianceSchemaUser';

/**
 * The UserComplianceSchema model module.
 * @module model/UserComplianceSchema
 * @version 2.62
 */
class UserComplianceSchema {
    /**
     * Constructs a new <code>UserComplianceSchema</code>.
     * @alias module:model/UserComplianceSchema
     * @param eventAt {Date} Event time.
     * @param user {module:model/UserComplianceSchemaUser} 
     */
    constructor(eventAt, user) { 
        
        UserComplianceSchema.initialize(this, eventAt, user);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, eventAt, user) { 
        obj['event_at'] = eventAt;
        obj['user'] = user;
    }

    /**
     * Constructs a <code>UserComplianceSchema</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserComplianceSchema} obj Optional instance to populate.
     * @return {module:model/UserComplianceSchema} The populated <code>UserComplianceSchema</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserComplianceSchema();

            if (data.hasOwnProperty('event_at')) {
                obj['event_at'] = ApiClient.convertToType(data['event_at'], 'Date');
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = UserComplianceSchemaUser.constructFromObject(data['user']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserComplianceSchema</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserComplianceSchema</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UserComplianceSchema.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `user`
        if (data['user']) { // data not null
          UserComplianceSchemaUser.validateJSON(data['user']);
        }

        return true;
    }


}

UserComplianceSchema.RequiredProperties = ["event_at", "user"];

/**
 * Event time.
 * @member {Date} event_at
 */
UserComplianceSchema.prototype['event_at'] = undefined;

/**
 * @member {module:model/UserComplianceSchemaUser} user
 */
UserComplianceSchema.prototype['user'] = undefined;






export default UserComplianceSchema;

