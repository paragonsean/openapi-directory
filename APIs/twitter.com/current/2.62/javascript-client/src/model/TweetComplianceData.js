/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.62
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TweetComplianceSchema from './TweetComplianceSchema';
import TweetDeleteComplianceSchema from './TweetDeleteComplianceSchema';
import TweetDropComplianceSchema from './TweetDropComplianceSchema';
import TweetEditComplianceObjectSchema from './TweetEditComplianceObjectSchema';
import TweetEditComplianceSchema from './TweetEditComplianceSchema';
import TweetTakedownComplianceSchema from './TweetTakedownComplianceSchema';
import TweetUndropComplianceSchema from './TweetUndropComplianceSchema';
import TweetWithheldComplianceSchema from './TweetWithheldComplianceSchema';

/**
 * The TweetComplianceData model module.
 * @module model/TweetComplianceData
 * @version 2.62
 */
class TweetComplianceData {
    /**
     * Constructs a new <code>TweetComplianceData</code>.
     * Tweet compliance data.
     * @alias module:model/TweetComplianceData
     * @param {(module:model/TweetDeleteComplianceSchema|module:model/TweetDropComplianceSchema|module:model/TweetEditComplianceSchema|module:model/TweetUndropComplianceSchema|module:model/TweetWithheldComplianceSchema)} instance The actual instance to initialize TweetComplianceData.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "TweetDeleteComplianceSchema") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                TweetDeleteComplianceSchema.validateJSON(instance); // throw an exception if no match
                // create TweetDeleteComplianceSchema from JS object
                this.actualInstance = TweetDeleteComplianceSchema.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into TweetDeleteComplianceSchema
            errorMessages.push("Failed to construct TweetDeleteComplianceSchema: " + err)
        }

        try {
            if (typeof instance === "TweetWithheldComplianceSchema") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                TweetWithheldComplianceSchema.validateJSON(instance); // throw an exception if no match
                // create TweetWithheldComplianceSchema from JS object
                this.actualInstance = TweetWithheldComplianceSchema.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into TweetWithheldComplianceSchema
            errorMessages.push("Failed to construct TweetWithheldComplianceSchema: " + err)
        }

        try {
            if (typeof instance === "TweetDropComplianceSchema") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                TweetDropComplianceSchema.validateJSON(instance); // throw an exception if no match
                // create TweetDropComplianceSchema from JS object
                this.actualInstance = TweetDropComplianceSchema.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into TweetDropComplianceSchema
            errorMessages.push("Failed to construct TweetDropComplianceSchema: " + err)
        }

        try {
            if (typeof instance === "TweetUndropComplianceSchema") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                TweetUndropComplianceSchema.validateJSON(instance); // throw an exception if no match
                // create TweetUndropComplianceSchema from JS object
                this.actualInstance = TweetUndropComplianceSchema.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into TweetUndropComplianceSchema
            errorMessages.push("Failed to construct TweetUndropComplianceSchema: " + err)
        }

        try {
            if (typeof instance === "TweetEditComplianceSchema") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                TweetEditComplianceSchema.validateJSON(instance); // throw an exception if no match
                // create TweetEditComplianceSchema from JS object
                this.actualInstance = TweetEditComplianceSchema.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into TweetEditComplianceSchema
            errorMessages.push("Failed to construct TweetEditComplianceSchema: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `TweetComplianceData` with oneOf schemas TweetDeleteComplianceSchema, TweetDropComplianceSchema, TweetEditComplianceSchema, TweetUndropComplianceSchema, TweetWithheldComplianceSchema. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `TweetComplianceData` with oneOf schemas TweetDeleteComplianceSchema, TweetDropComplianceSchema, TweetEditComplianceSchema, TweetUndropComplianceSchema, TweetWithheldComplianceSchema. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>TweetComplianceData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TweetComplianceData} obj Optional instance to populate.
     * @return {module:model/TweetComplianceData} The populated <code>TweetComplianceData</code> instance.
     */
    static constructFromObject(data, obj) {
        return new TweetComplianceData(data);
    }

    /**
     * Gets the actual instance, which can be <code>TweetDeleteComplianceSchema</code>, <code>TweetDropComplianceSchema</code>, <code>TweetEditComplianceSchema</code>, <code>TweetUndropComplianceSchema</code>, <code>TweetWithheldComplianceSchema</code>.
     * @return {(module:model/TweetDeleteComplianceSchema|module:model/TweetDropComplianceSchema|module:model/TweetEditComplianceSchema|module:model/TweetUndropComplianceSchema|module:model/TweetWithheldComplianceSchema)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>TweetDeleteComplianceSchema</code>, <code>TweetDropComplianceSchema</code>, <code>TweetEditComplianceSchema</code>, <code>TweetUndropComplianceSchema</code>, <code>TweetWithheldComplianceSchema</code>.
     * @param {(module:model/TweetDeleteComplianceSchema|module:model/TweetDropComplianceSchema|module:model/TweetEditComplianceSchema|module:model/TweetUndropComplianceSchema|module:model/TweetWithheldComplianceSchema)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = TweetComplianceData.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of TweetComplianceData from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/TweetComplianceData} An instance of TweetComplianceData.
     */
    static fromJSON = function(json_string){
        return TweetComplianceData.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * @member {module:model/TweetComplianceSchema} delete
 */
TweetComplianceData.prototype['delete'] = undefined;

/**
 * @member {module:model/TweetTakedownComplianceSchema} withheld
 */
TweetComplianceData.prototype['withheld'] = undefined;

/**
 * @member {module:model/TweetComplianceSchema} drop
 */
TweetComplianceData.prototype['drop'] = undefined;

/**
 * @member {module:model/TweetComplianceSchema} undrop
 */
TweetComplianceData.prototype['undrop'] = undefined;

/**
 * @member {module:model/TweetEditComplianceObjectSchema} tweet_edit
 */
TweetComplianceData.prototype['tweet_edit'] = undefined;


TweetComplianceData.OneOf = ["TweetDeleteComplianceSchema", "TweetDropComplianceSchema", "TweetEditComplianceSchema", "TweetUndropComplianceSchema", "TweetWithheldComplianceSchema"];

export default TweetComplianceData;

