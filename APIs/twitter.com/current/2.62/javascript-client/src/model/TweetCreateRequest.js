/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.62
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TweetCreateRequestGeo from './TweetCreateRequestGeo';
import TweetCreateRequestMedia from './TweetCreateRequestMedia';
import TweetCreateRequestPoll from './TweetCreateRequestPoll';
import TweetCreateRequestReply from './TweetCreateRequestReply';

/**
 * The TweetCreateRequest model module.
 * @module model/TweetCreateRequest
 * @version 2.62
 */
class TweetCreateRequest {
    /**
     * Constructs a new <code>TweetCreateRequest</code>.
     * @alias module:model/TweetCreateRequest
     */
    constructor() { 
        
        TweetCreateRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['for_super_followers_only'] = false;
        obj['nullcast'] = false;
    }

    /**
     * Constructs a <code>TweetCreateRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TweetCreateRequest} obj Optional instance to populate.
     * @return {module:model/TweetCreateRequest} The populated <code>TweetCreateRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TweetCreateRequest();

            if (data.hasOwnProperty('card_uri')) {
                obj['card_uri'] = ApiClient.convertToType(data['card_uri'], 'String');
            }
            if (data.hasOwnProperty('direct_message_deep_link')) {
                obj['direct_message_deep_link'] = ApiClient.convertToType(data['direct_message_deep_link'], 'String');
            }
            if (data.hasOwnProperty('for_super_followers_only')) {
                obj['for_super_followers_only'] = ApiClient.convertToType(data['for_super_followers_only'], 'Boolean');
            }
            if (data.hasOwnProperty('geo')) {
                obj['geo'] = TweetCreateRequestGeo.constructFromObject(data['geo']);
            }
            if (data.hasOwnProperty('media')) {
                obj['media'] = TweetCreateRequestMedia.constructFromObject(data['media']);
            }
            if (data.hasOwnProperty('nullcast')) {
                obj['nullcast'] = ApiClient.convertToType(data['nullcast'], 'Boolean');
            }
            if (data.hasOwnProperty('poll')) {
                obj['poll'] = TweetCreateRequestPoll.constructFromObject(data['poll']);
            }
            if (data.hasOwnProperty('quote_tweet_id')) {
                obj['quote_tweet_id'] = ApiClient.convertToType(data['quote_tweet_id'], 'String');
            }
            if (data.hasOwnProperty('reply')) {
                obj['reply'] = TweetCreateRequestReply.constructFromObject(data['reply']);
            }
            if (data.hasOwnProperty('reply_settings')) {
                obj['reply_settings'] = ApiClient.convertToType(data['reply_settings'], 'String');
            }
            if (data.hasOwnProperty('text')) {
                obj['text'] = ApiClient.convertToType(data['text'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TweetCreateRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TweetCreateRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['card_uri'] && !(typeof data['card_uri'] === 'string' || data['card_uri'] instanceof String)) {
            throw new Error("Expected the field `card_uri` to be a primitive type in the JSON string but got " + data['card_uri']);
        }
        // ensure the json data is a string
        if (data['direct_message_deep_link'] && !(typeof data['direct_message_deep_link'] === 'string' || data['direct_message_deep_link'] instanceof String)) {
            throw new Error("Expected the field `direct_message_deep_link` to be a primitive type in the JSON string but got " + data['direct_message_deep_link']);
        }
        // validate the optional field `geo`
        if (data['geo']) { // data not null
          TweetCreateRequestGeo.validateJSON(data['geo']);
        }
        // validate the optional field `media`
        if (data['media']) { // data not null
          TweetCreateRequestMedia.validateJSON(data['media']);
        }
        // validate the optional field `poll`
        if (data['poll']) { // data not null
          TweetCreateRequestPoll.validateJSON(data['poll']);
        }
        // ensure the json data is a string
        if (data['quote_tweet_id'] && !(typeof data['quote_tweet_id'] === 'string' || data['quote_tweet_id'] instanceof String)) {
            throw new Error("Expected the field `quote_tweet_id` to be a primitive type in the JSON string but got " + data['quote_tweet_id']);
        }
        // validate the optional field `reply`
        if (data['reply']) { // data not null
          TweetCreateRequestReply.validateJSON(data['reply']);
        }
        // ensure the json data is a string
        if (data['reply_settings'] && !(typeof data['reply_settings'] === 'string' || data['reply_settings'] instanceof String)) {
            throw new Error("Expected the field `reply_settings` to be a primitive type in the JSON string but got " + data['reply_settings']);
        }
        // ensure the json data is a string
        if (data['text'] && !(typeof data['text'] === 'string' || data['text'] instanceof String)) {
            throw new Error("Expected the field `text` to be a primitive type in the JSON string but got " + data['text']);
        }

        return true;
    }


}



/**
 * Card Uri Parameter. This is mutually exclusive from Quote Tweet Id, Poll, Media, and Direct Message Deep Link.
 * @member {String} card_uri
 */
TweetCreateRequest.prototype['card_uri'] = undefined;

/**
 * Link to take the conversation from the public timeline to a private Direct Message.
 * @member {String} direct_message_deep_link
 */
TweetCreateRequest.prototype['direct_message_deep_link'] = undefined;

/**
 * Exclusive Tweet for super followers.
 * @member {Boolean} for_super_followers_only
 * @default false
 */
TweetCreateRequest.prototype['for_super_followers_only'] = false;

/**
 * @member {module:model/TweetCreateRequestGeo} geo
 */
TweetCreateRequest.prototype['geo'] = undefined;

/**
 * @member {module:model/TweetCreateRequestMedia} media
 */
TweetCreateRequest.prototype['media'] = undefined;

/**
 * Nullcasted (promoted-only) Tweets do not appear in the public timeline and are not served to followers.
 * @member {Boolean} nullcast
 * @default false
 */
TweetCreateRequest.prototype['nullcast'] = false;

/**
 * @member {module:model/TweetCreateRequestPoll} poll
 */
TweetCreateRequest.prototype['poll'] = undefined;

/**
 * Unique identifier of this Tweet. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers.
 * @member {String} quote_tweet_id
 */
TweetCreateRequest.prototype['quote_tweet_id'] = undefined;

/**
 * @member {module:model/TweetCreateRequestReply} reply
 */
TweetCreateRequest.prototype['reply'] = undefined;

/**
 * Settings to indicate who can reply to the Tweet.
 * @member {module:model/TweetCreateRequest.ReplySettingsEnum} reply_settings
 */
TweetCreateRequest.prototype['reply_settings'] = undefined;

/**
 * The content of the Tweet.
 * @member {String} text
 */
TweetCreateRequest.prototype['text'] = undefined;





/**
 * Allowed values for the <code>reply_settings</code> property.
 * @enum {String}
 * @readonly
 */
TweetCreateRequest['ReplySettingsEnum'] = {

    /**
     * value: "following"
     * @const
     */
    "following": "following",

    /**
     * value: "mentionedUsers"
     * @const
     */
    "mentionedUsers": "mentionedUsers"
};



export default TweetCreateRequest;

