/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.62
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateMessageRequest from './CreateMessageRequest';

/**
 * The CreateDmConversationRequest model module.
 * @module model/CreateDmConversationRequest
 * @version 2.62
 */
class CreateDmConversationRequest {
    /**
     * Constructs a new <code>CreateDmConversationRequest</code>.
     * @alias module:model/CreateDmConversationRequest
     * @param conversationType {module:model/CreateDmConversationRequest.ConversationTypeEnum} The conversation type that is being created.
     * @param message {module:model/CreateMessageRequest} 
     * @param participantIds {Array.<String>} Participants for the DM Conversation.
     */
    constructor(conversationType, message, participantIds) { 
        
        CreateDmConversationRequest.initialize(this, conversationType, message, participantIds);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, conversationType, message, participantIds) { 
        obj['conversation_type'] = conversationType;
        obj['message'] = message;
        obj['participant_ids'] = participantIds;
    }

    /**
     * Constructs a <code>CreateDmConversationRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateDmConversationRequest} obj Optional instance to populate.
     * @return {module:model/CreateDmConversationRequest} The populated <code>CreateDmConversationRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateDmConversationRequest();

            if (data.hasOwnProperty('conversation_type')) {
                obj['conversation_type'] = ApiClient.convertToType(data['conversation_type'], 'String');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = CreateMessageRequest.constructFromObject(data['message']);
            }
            if (data.hasOwnProperty('participant_ids')) {
                obj['participant_ids'] = ApiClient.convertToType(data['participant_ids'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateDmConversationRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateDmConversationRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateDmConversationRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['conversation_type'] && !(typeof data['conversation_type'] === 'string' || data['conversation_type'] instanceof String)) {
            throw new Error("Expected the field `conversation_type` to be a primitive type in the JSON string but got " + data['conversation_type']);
        }
        // validate the optional field `message`
        if (data['message']) { // data not null
          CreateMessageRequest.validateJSON(data['message']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['participant_ids'])) {
            throw new Error("Expected the field `participant_ids` to be an array in the JSON data but got " + data['participant_ids']);
        }

        return true;
    }


}

CreateDmConversationRequest.RequiredProperties = ["conversation_type", "message", "participant_ids"];

/**
 * The conversation type that is being created.
 * @member {module:model/CreateDmConversationRequest.ConversationTypeEnum} conversation_type
 */
CreateDmConversationRequest.prototype['conversation_type'] = undefined;

/**
 * @member {module:model/CreateMessageRequest} message
 */
CreateDmConversationRequest.prototype['message'] = undefined;

/**
 * Participants for the DM Conversation.
 * @member {Array.<String>} participant_ids
 */
CreateDmConversationRequest.prototype['participant_ids'] = undefined;





/**
 * Allowed values for the <code>conversation_type</code> property.
 * @enum {String}
 * @readonly
 */
CreateDmConversationRequest['ConversationTypeEnum'] = {

    /**
     * value: "Group"
     * @const
     */
    "Group": "Group"
};



export default CreateDmConversationRequest;

