/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.62
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DmEventReferencedTweetsInner from './DmEventReferencedTweetsInner';

/**
 * The TweetEditComplianceObjectSchema model module.
 * @module model/TweetEditComplianceObjectSchema
 * @version 2.62
 */
class TweetEditComplianceObjectSchema {
    /**
     * Constructs a new <code>TweetEditComplianceObjectSchema</code>.
     * @alias module:model/TweetEditComplianceObjectSchema
     * @param editTweetIds {Array.<String>} 
     * @param eventAt {Date} Event time.
     * @param initialTweetId {String} Unique identifier of this Tweet. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers.
     * @param tweet {module:model/DmEventReferencedTweetsInner} 
     */
    constructor(editTweetIds, eventAt, initialTweetId, tweet) { 
        
        TweetEditComplianceObjectSchema.initialize(this, editTweetIds, eventAt, initialTweetId, tweet);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, editTweetIds, eventAt, initialTweetId, tweet) { 
        obj['edit_tweet_ids'] = editTweetIds;
        obj['event_at'] = eventAt;
        obj['initial_tweet_id'] = initialTweetId;
        obj['tweet'] = tweet;
    }

    /**
     * Constructs a <code>TweetEditComplianceObjectSchema</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TweetEditComplianceObjectSchema} obj Optional instance to populate.
     * @return {module:model/TweetEditComplianceObjectSchema} The populated <code>TweetEditComplianceObjectSchema</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TweetEditComplianceObjectSchema();

            if (data.hasOwnProperty('edit_tweet_ids')) {
                obj['edit_tweet_ids'] = ApiClient.convertToType(data['edit_tweet_ids'], ['String']);
            }
            if (data.hasOwnProperty('event_at')) {
                obj['event_at'] = ApiClient.convertToType(data['event_at'], 'Date');
            }
            if (data.hasOwnProperty('initial_tweet_id')) {
                obj['initial_tweet_id'] = ApiClient.convertToType(data['initial_tweet_id'], 'String');
            }
            if (data.hasOwnProperty('tweet')) {
                obj['tweet'] = DmEventReferencedTweetsInner.constructFromObject(data['tweet']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TweetEditComplianceObjectSchema</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TweetEditComplianceObjectSchema</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TweetEditComplianceObjectSchema.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['edit_tweet_ids'])) {
            throw new Error("Expected the field `edit_tweet_ids` to be an array in the JSON data but got " + data['edit_tweet_ids']);
        }
        // ensure the json data is a string
        if (data['initial_tweet_id'] && !(typeof data['initial_tweet_id'] === 'string' || data['initial_tweet_id'] instanceof String)) {
            throw new Error("Expected the field `initial_tweet_id` to be a primitive type in the JSON string but got " + data['initial_tweet_id']);
        }
        // validate the optional field `tweet`
        if (data['tweet']) { // data not null
          DmEventReferencedTweetsInner.validateJSON(data['tweet']);
        }

        return true;
    }


}

TweetEditComplianceObjectSchema.RequiredProperties = ["edit_tweet_ids", "event_at", "initial_tweet_id", "tweet"];

/**
 * @member {Array.<String>} edit_tweet_ids
 */
TweetEditComplianceObjectSchema.prototype['edit_tweet_ids'] = undefined;

/**
 * Event time.
 * @member {Date} event_at
 */
TweetEditComplianceObjectSchema.prototype['event_at'] = undefined;

/**
 * Unique identifier of this Tweet. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers.
 * @member {String} initial_tweet_id
 */
TweetEditComplianceObjectSchema.prototype['initial_tweet_id'] = undefined;

/**
 * @member {module:model/DmEventReferencedTweetsInner} tweet
 */
TweetEditComplianceObjectSchema.prototype['tweet'] = undefined;






export default TweetEditComplianceObjectSchema;

