/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.62
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITweetDropComplianceSchema.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITweetDropComplianceSchema::OAITweetDropComplianceSchema(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITweetDropComplianceSchema::OAITweetDropComplianceSchema() {
    this->initializeModel();
}

OAITweetDropComplianceSchema::~OAITweetDropComplianceSchema() {}

void OAITweetDropComplianceSchema::initializeModel() {

    m_drop_isSet = false;
    m_drop_isValid = false;
}

void OAITweetDropComplianceSchema::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITweetDropComplianceSchema::fromJsonObject(QJsonObject json) {

    m_drop_isValid = ::OpenAPI::fromJsonValue(m_drop, json[QString("drop")]);
    m_drop_isSet = !json[QString("drop")].isNull() && m_drop_isValid;
}

QString OAITweetDropComplianceSchema::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITweetDropComplianceSchema::asJsonObject() const {
    QJsonObject obj;
    if (m_drop.isSet()) {
        obj.insert(QString("drop"), ::OpenAPI::toJsonValue(m_drop));
    }
    return obj;
}

OAITweetComplianceSchema OAITweetDropComplianceSchema::getDrop() const {
    return m_drop;
}
void OAITweetDropComplianceSchema::setDrop(const OAITweetComplianceSchema &drop) {
    m_drop = drop;
    m_drop_isSet = true;
}

bool OAITweetDropComplianceSchema::is_drop_Set() const{
    return m_drop_isSet;
}

bool OAITweetDropComplianceSchema::is_drop_Valid() const{
    return m_drop_isValid;
}

bool OAITweetDropComplianceSchema::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_drop.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITweetDropComplianceSchema::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_drop_isValid && true;
}

} // namespace OpenAPI
