/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.62
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVideo_allOf_public_metrics.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVideo_allOf_public_metrics::OAIVideo_allOf_public_metrics(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVideo_allOf_public_metrics::OAIVideo_allOf_public_metrics() {
    this->initializeModel();
}

OAIVideo_allOf_public_metrics::~OAIVideo_allOf_public_metrics() {}

void OAIVideo_allOf_public_metrics::initializeModel() {

    m_view_count_isSet = false;
    m_view_count_isValid = false;
}

void OAIVideo_allOf_public_metrics::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVideo_allOf_public_metrics::fromJsonObject(QJsonObject json) {

    m_view_count_isValid = ::OpenAPI::fromJsonValue(m_view_count, json[QString("view_count")]);
    m_view_count_isSet = !json[QString("view_count")].isNull() && m_view_count_isValid;
}

QString OAIVideo_allOf_public_metrics::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVideo_allOf_public_metrics::asJsonObject() const {
    QJsonObject obj;
    if (m_view_count_isSet) {
        obj.insert(QString("view_count"), ::OpenAPI::toJsonValue(m_view_count));
    }
    return obj;
}

qint32 OAIVideo_allOf_public_metrics::getViewCount() const {
    return m_view_count;
}
void OAIVideo_allOf_public_metrics::setViewCount(const qint32 &view_count) {
    m_view_count = view_count;
    m_view_count_isSet = true;
}

bool OAIVideo_allOf_public_metrics::is_view_count_Set() const{
    return m_view_count_isSet;
}

bool OAIVideo_allOf_public_metrics::is_view_count_Valid() const{
    return m_view_count_isValid;
}

bool OAIVideo_allOf_public_metrics::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_view_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVideo_allOf_public_metrics::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
