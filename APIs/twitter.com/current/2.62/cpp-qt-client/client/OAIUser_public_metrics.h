/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.62
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUser_public_metrics.h
 *
 * A list of metrics for this User.
 */

#ifndef OAIUser_public_metrics_H
#define OAIUser_public_metrics_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUser_public_metrics : public OAIObject {
public:
    OAIUser_public_metrics();
    OAIUser_public_metrics(QString json);
    ~OAIUser_public_metrics() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getFollowersCount() const;
    void setFollowersCount(const qint32 &followers_count);
    bool is_followers_count_Set() const;
    bool is_followers_count_Valid() const;

    qint32 getFollowingCount() const;
    void setFollowingCount(const qint32 &following_count);
    bool is_following_count_Set() const;
    bool is_following_count_Valid() const;

    qint32 getListedCount() const;
    void setListedCount(const qint32 &listed_count);
    bool is_listed_count_Set() const;
    bool is_listed_count_Valid() const;

    qint32 getTweetCount() const;
    void setTweetCount(const qint32 &tweet_count);
    bool is_tweet_count_Set() const;
    bool is_tweet_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_followers_count;
    bool m_followers_count_isSet;
    bool m_followers_count_isValid;

    qint32 m_following_count;
    bool m_following_count_isSet;
    bool m_following_count_isValid;

    qint32 m_listed_count;
    bool m_listed_count_isSet;
    bool m_listed_count_isValid;

    qint32 m_tweet_count;
    bool m_tweet_count_isSet;
    bool m_tweet_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUser_public_metrics)

#endif // OAIUser_public_metrics_H
