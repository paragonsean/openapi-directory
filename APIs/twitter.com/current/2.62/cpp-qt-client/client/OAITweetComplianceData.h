/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.62
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITweetComplianceData.h
 *
 * Tweet compliance data.
 */

#ifndef OAITweetComplianceData_H
#define OAITweetComplianceData_H

#include <QJsonObject>

#include "OAITweetComplianceSchema.h"
#include "OAITweetDeleteComplianceSchema.h"
#include "OAITweetDropComplianceSchema.h"
#include "OAITweetEditComplianceObjectSchema.h"
#include "OAITweetEditComplianceSchema.h"
#include "OAITweetTakedownComplianceSchema.h"
#include "OAITweetUndropComplianceSchema.h"
#include "OAITweetWithheldComplianceSchema.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITweetComplianceSchema;
class OAITweetTakedownComplianceSchema;
class OAITweetEditComplianceObjectSchema;

class OAITweetComplianceData : public OAIObject {
public:
    OAITweetComplianceData();
    OAITweetComplianceData(QString json);
    ~OAITweetComplianceData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAITweetComplianceSchema getRDelete() const;
    void setRDelete(const OAITweetComplianceSchema &r_delete);
    bool is_r_delete_Set() const;
    bool is_r_delete_Valid() const;

    OAITweetTakedownComplianceSchema getWithheld() const;
    void setWithheld(const OAITweetTakedownComplianceSchema &withheld);
    bool is_withheld_Set() const;
    bool is_withheld_Valid() const;

    OAITweetComplianceSchema getDrop() const;
    void setDrop(const OAITweetComplianceSchema &drop);
    bool is_drop_Set() const;
    bool is_drop_Valid() const;

    OAITweetComplianceSchema getUndrop() const;
    void setUndrop(const OAITweetComplianceSchema &undrop);
    bool is_undrop_Set() const;
    bool is_undrop_Valid() const;

    OAITweetEditComplianceObjectSchema getTweetEdit() const;
    void setTweetEdit(const OAITweetEditComplianceObjectSchema &tweet_edit);
    bool is_tweet_edit_Set() const;
    bool is_tweet_edit_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAITweetComplianceSchema m_r_delete;
    bool m_r_delete_isSet;
    bool m_r_delete_isValid;

    OAITweetTakedownComplianceSchema m_withheld;
    bool m_withheld_isSet;
    bool m_withheld_isValid;

    OAITweetComplianceSchema m_drop;
    bool m_drop_isSet;
    bool m_drop_isValid;

    OAITweetComplianceSchema m_undrop;
    bool m_undrop_isSet;
    bool m_undrop_isValid;

    OAITweetEditComplianceObjectSchema m_tweet_edit;
    bool m_tweet_edit_isSet;
    bool m_tweet_edit_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITweetComplianceData)

#endif // OAITweetComplianceData_H
