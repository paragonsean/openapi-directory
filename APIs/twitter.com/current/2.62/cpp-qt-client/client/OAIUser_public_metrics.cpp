/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.62
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUser_public_metrics.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUser_public_metrics::OAIUser_public_metrics(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUser_public_metrics::OAIUser_public_metrics() {
    this->initializeModel();
}

OAIUser_public_metrics::~OAIUser_public_metrics() {}

void OAIUser_public_metrics::initializeModel() {

    m_followers_count_isSet = false;
    m_followers_count_isValid = false;

    m_following_count_isSet = false;
    m_following_count_isValid = false;

    m_listed_count_isSet = false;
    m_listed_count_isValid = false;

    m_tweet_count_isSet = false;
    m_tweet_count_isValid = false;
}

void OAIUser_public_metrics::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUser_public_metrics::fromJsonObject(QJsonObject json) {

    m_followers_count_isValid = ::OpenAPI::fromJsonValue(m_followers_count, json[QString("followers_count")]);
    m_followers_count_isSet = !json[QString("followers_count")].isNull() && m_followers_count_isValid;

    m_following_count_isValid = ::OpenAPI::fromJsonValue(m_following_count, json[QString("following_count")]);
    m_following_count_isSet = !json[QString("following_count")].isNull() && m_following_count_isValid;

    m_listed_count_isValid = ::OpenAPI::fromJsonValue(m_listed_count, json[QString("listed_count")]);
    m_listed_count_isSet = !json[QString("listed_count")].isNull() && m_listed_count_isValid;

    m_tweet_count_isValid = ::OpenAPI::fromJsonValue(m_tweet_count, json[QString("tweet_count")]);
    m_tweet_count_isSet = !json[QString("tweet_count")].isNull() && m_tweet_count_isValid;
}

QString OAIUser_public_metrics::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUser_public_metrics::asJsonObject() const {
    QJsonObject obj;
    if (m_followers_count_isSet) {
        obj.insert(QString("followers_count"), ::OpenAPI::toJsonValue(m_followers_count));
    }
    if (m_following_count_isSet) {
        obj.insert(QString("following_count"), ::OpenAPI::toJsonValue(m_following_count));
    }
    if (m_listed_count_isSet) {
        obj.insert(QString("listed_count"), ::OpenAPI::toJsonValue(m_listed_count));
    }
    if (m_tweet_count_isSet) {
        obj.insert(QString("tweet_count"), ::OpenAPI::toJsonValue(m_tweet_count));
    }
    return obj;
}

qint32 OAIUser_public_metrics::getFollowersCount() const {
    return m_followers_count;
}
void OAIUser_public_metrics::setFollowersCount(const qint32 &followers_count) {
    m_followers_count = followers_count;
    m_followers_count_isSet = true;
}

bool OAIUser_public_metrics::is_followers_count_Set() const{
    return m_followers_count_isSet;
}

bool OAIUser_public_metrics::is_followers_count_Valid() const{
    return m_followers_count_isValid;
}

qint32 OAIUser_public_metrics::getFollowingCount() const {
    return m_following_count;
}
void OAIUser_public_metrics::setFollowingCount(const qint32 &following_count) {
    m_following_count = following_count;
    m_following_count_isSet = true;
}

bool OAIUser_public_metrics::is_following_count_Set() const{
    return m_following_count_isSet;
}

bool OAIUser_public_metrics::is_following_count_Valid() const{
    return m_following_count_isValid;
}

qint32 OAIUser_public_metrics::getListedCount() const {
    return m_listed_count;
}
void OAIUser_public_metrics::setListedCount(const qint32 &listed_count) {
    m_listed_count = listed_count;
    m_listed_count_isSet = true;
}

bool OAIUser_public_metrics::is_listed_count_Set() const{
    return m_listed_count_isSet;
}

bool OAIUser_public_metrics::is_listed_count_Valid() const{
    return m_listed_count_isValid;
}

qint32 OAIUser_public_metrics::getTweetCount() const {
    return m_tweet_count;
}
void OAIUser_public_metrics::setTweetCount(const qint32 &tweet_count) {
    m_tweet_count = tweet_count;
    m_tweet_count_isSet = true;
}

bool OAIUser_public_metrics::is_tweet_count_Set() const{
    return m_tweet_count_isSet;
}

bool OAIUser_public_metrics::is_tweet_count_Valid() const{
    return m_tweet_count_isValid;
}

bool OAIUser_public_metrics::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_followers_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_following_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_listed_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tweet_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUser_public_metrics::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_followers_count_isValid && m_following_count_isValid && m_listed_count_isValid && m_tweet_count_isValid && true;
}

} // namespace OpenAPI
