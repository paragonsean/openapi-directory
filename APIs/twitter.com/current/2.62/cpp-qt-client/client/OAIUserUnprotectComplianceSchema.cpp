/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.62
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUserUnprotectComplianceSchema.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUserUnprotectComplianceSchema::OAIUserUnprotectComplianceSchema(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUserUnprotectComplianceSchema::OAIUserUnprotectComplianceSchema() {
    this->initializeModel();
}

OAIUserUnprotectComplianceSchema::~OAIUserUnprotectComplianceSchema() {}

void OAIUserUnprotectComplianceSchema::initializeModel() {

    m_user_unprotect_isSet = false;
    m_user_unprotect_isValid = false;
}

void OAIUserUnprotectComplianceSchema::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUserUnprotectComplianceSchema::fromJsonObject(QJsonObject json) {

    m_user_unprotect_isValid = ::OpenAPI::fromJsonValue(m_user_unprotect, json[QString("user_unprotect")]);
    m_user_unprotect_isSet = !json[QString("user_unprotect")].isNull() && m_user_unprotect_isValid;
}

QString OAIUserUnprotectComplianceSchema::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUserUnprotectComplianceSchema::asJsonObject() const {
    QJsonObject obj;
    if (m_user_unprotect.isSet()) {
        obj.insert(QString("user_unprotect"), ::OpenAPI::toJsonValue(m_user_unprotect));
    }
    return obj;
}

OAIUserComplianceSchema OAIUserUnprotectComplianceSchema::getUserUnprotect() const {
    return m_user_unprotect;
}
void OAIUserUnprotectComplianceSchema::setUserUnprotect(const OAIUserComplianceSchema &user_unprotect) {
    m_user_unprotect = user_unprotect;
    m_user_unprotect_isSet = true;
}

bool OAIUserUnprotectComplianceSchema::is_user_unprotect_Set() const{
    return m_user_unprotect_isSet;
}

bool OAIUserUnprotectComplianceSchema::is_user_unprotect_Valid() const{
    return m_user_unprotect_isValid;
}

bool OAIUserUnprotectComplianceSchema::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_user_unprotect.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUserUnprotectComplianceSchema::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_user_unprotect_isValid && true;
}

} // namespace OpenAPI
