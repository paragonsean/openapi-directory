/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.62
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITweet_geo.h
 *
 * The location tagged on the Tweet, if the user provided one.
 */

#ifndef OAITweet_geo_H
#define OAITweet_geo_H

#include <QJsonObject>

#include "OAIPoint.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPoint;

class OAITweet_geo : public OAIObject {
public:
    OAITweet_geo();
    OAITweet_geo(QString json);
    ~OAITweet_geo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIPoint getCoordinates() const;
    void setCoordinates(const OAIPoint &coordinates);
    bool is_coordinates_Set() const;
    bool is_coordinates_Valid() const;

    QString getPlaceId() const;
    void setPlaceId(const QString &place_id);
    bool is_place_id_Set() const;
    bool is_place_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIPoint m_coordinates;
    bool m_coordinates_isSet;
    bool m_coordinates_isValid;

    QString m_place_id;
    bool m_place_id_isSet;
    bool m_place_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITweet_geo)

#endif // OAITweet_geo_H
