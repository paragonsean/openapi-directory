/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.62
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUserProfileModificationObjectSchema.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUserProfileModificationObjectSchema::OAIUserProfileModificationObjectSchema(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUserProfileModificationObjectSchema::OAIUserProfileModificationObjectSchema() {
    this->initializeModel();
}

OAIUserProfileModificationObjectSchema::~OAIUserProfileModificationObjectSchema() {}

void OAIUserProfileModificationObjectSchema::initializeModel() {

    m_event_at_isSet = false;
    m_event_at_isValid = false;

    m_new_value_isSet = false;
    m_new_value_isValid = false;

    m_profile_field_isSet = false;
    m_profile_field_isValid = false;

    m_user_isSet = false;
    m_user_isValid = false;
}

void OAIUserProfileModificationObjectSchema::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUserProfileModificationObjectSchema::fromJsonObject(QJsonObject json) {

    m_event_at_isValid = ::OpenAPI::fromJsonValue(m_event_at, json[QString("event_at")]);
    m_event_at_isSet = !json[QString("event_at")].isNull() && m_event_at_isValid;

    m_new_value_isValid = ::OpenAPI::fromJsonValue(m_new_value, json[QString("new_value")]);
    m_new_value_isSet = !json[QString("new_value")].isNull() && m_new_value_isValid;

    m_profile_field_isValid = ::OpenAPI::fromJsonValue(m_profile_field, json[QString("profile_field")]);
    m_profile_field_isSet = !json[QString("profile_field")].isNull() && m_profile_field_isValid;

    m_user_isValid = ::OpenAPI::fromJsonValue(m_user, json[QString("user")]);
    m_user_isSet = !json[QString("user")].isNull() && m_user_isValid;
}

QString OAIUserProfileModificationObjectSchema::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUserProfileModificationObjectSchema::asJsonObject() const {
    QJsonObject obj;
    if (m_event_at_isSet) {
        obj.insert(QString("event_at"), ::OpenAPI::toJsonValue(m_event_at));
    }
    if (m_new_value_isSet) {
        obj.insert(QString("new_value"), ::OpenAPI::toJsonValue(m_new_value));
    }
    if (m_profile_field_isSet) {
        obj.insert(QString("profile_field"), ::OpenAPI::toJsonValue(m_profile_field));
    }
    if (m_user.isSet()) {
        obj.insert(QString("user"), ::OpenAPI::toJsonValue(m_user));
    }
    return obj;
}

QDateTime OAIUserProfileModificationObjectSchema::getEventAt() const {
    return m_event_at;
}
void OAIUserProfileModificationObjectSchema::setEventAt(const QDateTime &event_at) {
    m_event_at = event_at;
    m_event_at_isSet = true;
}

bool OAIUserProfileModificationObjectSchema::is_event_at_Set() const{
    return m_event_at_isSet;
}

bool OAIUserProfileModificationObjectSchema::is_event_at_Valid() const{
    return m_event_at_isValid;
}

QString OAIUserProfileModificationObjectSchema::getNewValue() const {
    return m_new_value;
}
void OAIUserProfileModificationObjectSchema::setNewValue(const QString &new_value) {
    m_new_value = new_value;
    m_new_value_isSet = true;
}

bool OAIUserProfileModificationObjectSchema::is_new_value_Set() const{
    return m_new_value_isSet;
}

bool OAIUserProfileModificationObjectSchema::is_new_value_Valid() const{
    return m_new_value_isValid;
}

QString OAIUserProfileModificationObjectSchema::getProfileField() const {
    return m_profile_field;
}
void OAIUserProfileModificationObjectSchema::setProfileField(const QString &profile_field) {
    m_profile_field = profile_field;
    m_profile_field_isSet = true;
}

bool OAIUserProfileModificationObjectSchema::is_profile_field_Set() const{
    return m_profile_field_isSet;
}

bool OAIUserProfileModificationObjectSchema::is_profile_field_Valid() const{
    return m_profile_field_isValid;
}

OAIUserComplianceSchema_user OAIUserProfileModificationObjectSchema::getUser() const {
    return m_user;
}
void OAIUserProfileModificationObjectSchema::setUser(const OAIUserComplianceSchema_user &user) {
    m_user = user;
    m_user_isSet = true;
}

bool OAIUserProfileModificationObjectSchema::is_user_Set() const{
    return m_user_isSet;
}

bool OAIUserProfileModificationObjectSchema::is_user_Valid() const{
    return m_user_isValid;
}

bool OAIUserProfileModificationObjectSchema::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_event_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_new_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile_field_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUserProfileModificationObjectSchema::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_event_at_isValid && m_new_value_isValid && m_profile_field_isValid && m_user_isValid && true;
}

} // namespace OpenAPI
