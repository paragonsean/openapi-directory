/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.62
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUserScrubGeoSchema.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUserScrubGeoSchema::OAIUserScrubGeoSchema(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUserScrubGeoSchema::OAIUserScrubGeoSchema() {
    this->initializeModel();
}

OAIUserScrubGeoSchema::~OAIUserScrubGeoSchema() {}

void OAIUserScrubGeoSchema::initializeModel() {

    m_scrub_geo_isSet = false;
    m_scrub_geo_isValid = false;
}

void OAIUserScrubGeoSchema::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUserScrubGeoSchema::fromJsonObject(QJsonObject json) {

    m_scrub_geo_isValid = ::OpenAPI::fromJsonValue(m_scrub_geo, json[QString("scrub_geo")]);
    m_scrub_geo_isSet = !json[QString("scrub_geo")].isNull() && m_scrub_geo_isValid;
}

QString OAIUserScrubGeoSchema::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUserScrubGeoSchema::asJsonObject() const {
    QJsonObject obj;
    if (m_scrub_geo.isSet()) {
        obj.insert(QString("scrub_geo"), ::OpenAPI::toJsonValue(m_scrub_geo));
    }
    return obj;
}

OAIUserScrubGeoObjectSchema OAIUserScrubGeoSchema::getScrubGeo() const {
    return m_scrub_geo;
}
void OAIUserScrubGeoSchema::setScrubGeo(const OAIUserScrubGeoObjectSchema &scrub_geo) {
    m_scrub_geo = scrub_geo;
    m_scrub_geo_isSet = true;
}

bool OAIUserScrubGeoSchema::is_scrub_geo_Set() const{
    return m_scrub_geo_isSet;
}

bool OAIUserScrubGeoSchema::is_scrub_geo_Valid() const{
    return m_scrub_geo_isValid;
}

bool OAIUserScrubGeoSchema::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_scrub_geo.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUserScrubGeoSchema::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_scrub_geo_isValid && true;
}

} // namespace OpenAPI
