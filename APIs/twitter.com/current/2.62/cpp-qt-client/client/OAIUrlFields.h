/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.62
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUrlFields.h
 *
 * Represent the portion of text recognized as a URL.
 */

#ifndef OAIUrlFields_H
#define OAIUrlFields_H

#include <QJsonObject>

#include "OAIUrlImage.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUrlImage;

class OAIUrlFields : public OAIObject {
public:
    OAIUrlFields();
    OAIUrlFields(QString json);
    ~OAIUrlFields() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDisplayUrl() const;
    void setDisplayUrl(const QString &display_url);
    bool is_display_url_Set() const;
    bool is_display_url_Valid() const;

    QString getExpandedUrl() const;
    void setExpandedUrl(const QString &expanded_url);
    bool is_expanded_url_Set() const;
    bool is_expanded_url_Valid() const;

    QList<OAIUrlImage> getImages() const;
    void setImages(const QList<OAIUrlImage> &images);
    bool is_images_Set() const;
    bool is_images_Valid() const;

    QString getMediaKey() const;
    void setMediaKey(const QString &media_key);
    bool is_media_key_Set() const;
    bool is_media_key_Valid() const;

    qint32 getStatus() const;
    void setStatus(const qint32 &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getUnwoundUrl() const;
    void setUnwoundUrl(const QString &unwound_url);
    bool is_unwound_url_Set() const;
    bool is_unwound_url_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_display_url;
    bool m_display_url_isSet;
    bool m_display_url_isValid;

    QString m_expanded_url;
    bool m_expanded_url_isSet;
    bool m_expanded_url_isValid;

    QList<OAIUrlImage> m_images;
    bool m_images_isSet;
    bool m_images_isValid;

    QString m_media_key;
    bool m_media_key_isSet;
    bool m_media_key_isValid;

    qint32 m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_unwound_url;
    bool m_unwound_url_isSet;
    bool m_unwound_url_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUrlFields)

#endif // OAIUrlFields_H
