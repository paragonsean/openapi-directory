/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.62
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITweetEditComplianceSchema.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITweetEditComplianceSchema::OAITweetEditComplianceSchema(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITweetEditComplianceSchema::OAITweetEditComplianceSchema() {
    this->initializeModel();
}

OAITweetEditComplianceSchema::~OAITweetEditComplianceSchema() {}

void OAITweetEditComplianceSchema::initializeModel() {

    m_tweet_edit_isSet = false;
    m_tweet_edit_isValid = false;
}

void OAITweetEditComplianceSchema::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITweetEditComplianceSchema::fromJsonObject(QJsonObject json) {

    m_tweet_edit_isValid = ::OpenAPI::fromJsonValue(m_tweet_edit, json[QString("tweet_edit")]);
    m_tweet_edit_isSet = !json[QString("tweet_edit")].isNull() && m_tweet_edit_isValid;
}

QString OAITweetEditComplianceSchema::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITweetEditComplianceSchema::asJsonObject() const {
    QJsonObject obj;
    if (m_tweet_edit.isSet()) {
        obj.insert(QString("tweet_edit"), ::OpenAPI::toJsonValue(m_tweet_edit));
    }
    return obj;
}

OAITweetEditComplianceObjectSchema OAITweetEditComplianceSchema::getTweetEdit() const {
    return m_tweet_edit;
}
void OAITweetEditComplianceSchema::setTweetEdit(const OAITweetEditComplianceObjectSchema &tweet_edit) {
    m_tweet_edit = tweet_edit;
    m_tweet_edit_isSet = true;
}

bool OAITweetEditComplianceSchema::is_tweet_edit_Set() const{
    return m_tweet_edit_isSet;
}

bool OAITweetEditComplianceSchema::is_tweet_edit_Valid() const{
    return m_tweet_edit_isValid;
}

bool OAITweetEditComplianceSchema::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_tweet_edit.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITweetEditComplianceSchema::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_tweet_edit_isValid && true;
}

} // namespace OpenAPI
