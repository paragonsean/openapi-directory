/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.62
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITweet.h
 *
 * 
 */

#ifndef OAITweet_H
#define OAITweet_H

#include <QJsonObject>

#include "OAIContextAnnotation.h"
#include "OAIFullTextEntities.h"
#include "OAIReplySettings.h"
#include "OAITweetWithheld.h"
#include "OAITweet_attachments.h"
#include "OAITweet_edit_controls.h"
#include "OAITweet_geo.h"
#include "OAITweet_non_public_metrics.h"
#include "OAITweet_organic_metrics.h"
#include "OAITweet_promoted_metrics.h"
#include "OAITweet_public_metrics.h"
#include "OAITweet_referenced_tweets_inner.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITweet_attachments;
class OAIContextAnnotation;
class OAITweet_edit_controls;
class OAIFullTextEntities;
class OAITweet_geo;
class OAITweet_non_public_metrics;
class OAITweet_organic_metrics;
class OAITweet_promoted_metrics;
class OAITweet_public_metrics;
class OAITweet_referenced_tweets_inner;
class OAITweetWithheld;

class OAITweet : public OAIObject {
public:
    OAITweet();
    OAITweet(QString json);
    ~OAITweet() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAITweet_attachments getAttachments() const;
    void setAttachments(const OAITweet_attachments &attachments);
    bool is_attachments_Set() const;
    bool is_attachments_Valid() const;

    QString getAuthorId() const;
    void setAuthorId(const QString &author_id);
    bool is_author_id_Set() const;
    bool is_author_id_Valid() const;

    QList<OAIContextAnnotation> getContextAnnotations() const;
    void setContextAnnotations(const QList<OAIContextAnnotation> &context_annotations);
    bool is_context_annotations_Set() const;
    bool is_context_annotations_Valid() const;

    QString getConversationId() const;
    void setConversationId(const QString &conversation_id);
    bool is_conversation_id_Set() const;
    bool is_conversation_id_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    OAITweet_edit_controls getEditControls() const;
    void setEditControls(const OAITweet_edit_controls &edit_controls);
    bool is_edit_controls_Set() const;
    bool is_edit_controls_Valid() const;

    QList<QString> getEditHistoryTweetIds() const;
    void setEditHistoryTweetIds(const QList<QString> &edit_history_tweet_ids);
    bool is_edit_history_tweet_ids_Set() const;
    bool is_edit_history_tweet_ids_Valid() const;

    OAIFullTextEntities getEntities() const;
    void setEntities(const OAIFullTextEntities &entities);
    bool is_entities_Set() const;
    bool is_entities_Valid() const;

    OAITweet_geo getGeo() const;
    void setGeo(const OAITweet_geo &geo);
    bool is_geo_Set() const;
    bool is_geo_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getInReplyToUserId() const;
    void setInReplyToUserId(const QString &in_reply_to_user_id);
    bool is_in_reply_to_user_id_Set() const;
    bool is_in_reply_to_user_id_Valid() const;

    QString getLang() const;
    void setLang(const QString &lang);
    bool is_lang_Set() const;
    bool is_lang_Valid() const;

    OAITweet_non_public_metrics getNonPublicMetrics() const;
    void setNonPublicMetrics(const OAITweet_non_public_metrics &non_public_metrics);
    bool is_non_public_metrics_Set() const;
    bool is_non_public_metrics_Valid() const;

    OAITweet_organic_metrics getOrganicMetrics() const;
    void setOrganicMetrics(const OAITweet_organic_metrics &organic_metrics);
    bool is_organic_metrics_Set() const;
    bool is_organic_metrics_Valid() const;

    bool isPossiblySensitive() const;
    void setPossiblySensitive(const bool &possibly_sensitive);
    bool is_possibly_sensitive_Set() const;
    bool is_possibly_sensitive_Valid() const;

    OAITweet_promoted_metrics getPromotedMetrics() const;
    void setPromotedMetrics(const OAITweet_promoted_metrics &promoted_metrics);
    bool is_promoted_metrics_Set() const;
    bool is_promoted_metrics_Valid() const;

    OAITweet_public_metrics getPublicMetrics() const;
    void setPublicMetrics(const OAITweet_public_metrics &public_metrics);
    bool is_public_metrics_Set() const;
    bool is_public_metrics_Valid() const;

    QList<OAITweet_referenced_tweets_inner> getReferencedTweets() const;
    void setReferencedTweets(const QList<OAITweet_referenced_tweets_inner> &referenced_tweets);
    bool is_referenced_tweets_Set() const;
    bool is_referenced_tweets_Valid() const;

    OAIReplySettings getReplySettings() const;
    void setReplySettings(const OAIReplySettings &reply_settings);
    bool is_reply_settings_Set() const;
    bool is_reply_settings_Valid() const;

    QString getSource() const;
    void setSource(const QString &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    OAITweetWithheld getWithheld() const;
    void setWithheld(const OAITweetWithheld &withheld);
    bool is_withheld_Set() const;
    bool is_withheld_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAITweet_attachments m_attachments;
    bool m_attachments_isSet;
    bool m_attachments_isValid;

    QString m_author_id;
    bool m_author_id_isSet;
    bool m_author_id_isValid;

    QList<OAIContextAnnotation> m_context_annotations;
    bool m_context_annotations_isSet;
    bool m_context_annotations_isValid;

    QString m_conversation_id;
    bool m_conversation_id_isSet;
    bool m_conversation_id_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    OAITweet_edit_controls m_edit_controls;
    bool m_edit_controls_isSet;
    bool m_edit_controls_isValid;

    QList<QString> m_edit_history_tweet_ids;
    bool m_edit_history_tweet_ids_isSet;
    bool m_edit_history_tweet_ids_isValid;

    OAIFullTextEntities m_entities;
    bool m_entities_isSet;
    bool m_entities_isValid;

    OAITweet_geo m_geo;
    bool m_geo_isSet;
    bool m_geo_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_in_reply_to_user_id;
    bool m_in_reply_to_user_id_isSet;
    bool m_in_reply_to_user_id_isValid;

    QString m_lang;
    bool m_lang_isSet;
    bool m_lang_isValid;

    OAITweet_non_public_metrics m_non_public_metrics;
    bool m_non_public_metrics_isSet;
    bool m_non_public_metrics_isValid;

    OAITweet_organic_metrics m_organic_metrics;
    bool m_organic_metrics_isSet;
    bool m_organic_metrics_isValid;

    bool m_possibly_sensitive;
    bool m_possibly_sensitive_isSet;
    bool m_possibly_sensitive_isValid;

    OAITweet_promoted_metrics m_promoted_metrics;
    bool m_promoted_metrics_isSet;
    bool m_promoted_metrics_isValid;

    OAITweet_public_metrics m_public_metrics;
    bool m_public_metrics_isSet;
    bool m_public_metrics_isValid;

    QList<OAITweet_referenced_tweets_inner> m_referenced_tweets;
    bool m_referenced_tweets_isSet;
    bool m_referenced_tweets_isValid;

    OAIReplySettings m_reply_settings;
    bool m_reply_settings_isSet;
    bool m_reply_settings_isValid;

    QString m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;

    OAITweetWithheld m_withheld;
    bool m_withheld_isSet;
    bool m_withheld_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITweet)

#endif // OAITweet_H
