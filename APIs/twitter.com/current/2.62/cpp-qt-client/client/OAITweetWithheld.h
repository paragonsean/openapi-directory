/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.62
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITweetWithheld.h
 *
 * Indicates withholding details for [withheld content](https://help.twitter.com/en/rules-and-policies/tweet-withheld-by-country).
 */

#ifndef OAITweetWithheld_H
#define OAITweetWithheld_H

#include <QJsonObject>

#include <QSet>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITweetWithheld : public OAIObject {
public:
    OAITweetWithheld();
    OAITweetWithheld(QString json);
    ~OAITweetWithheld() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isCopyright() const;
    void setCopyright(const bool &copyright);
    bool is_copyright_Set() const;
    bool is_copyright_Valid() const;

    QSet<QString> getCountryCodes() const;
    void setCountryCodes(const QSet<QString> &country_codes);
    bool is_country_codes_Set() const;
    bool is_country_codes_Valid() const;

    QString getScope() const;
    void setScope(const QString &scope);
    bool is_scope_Set() const;
    bool is_scope_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_copyright;
    bool m_copyright_isSet;
    bool m_copyright_isValid;

    QSet<QString> m_country_codes;
    bool m_country_codes_isSet;
    bool m_country_codes_isValid;

    QString m_scope;
    bool m_scope_isSet;
    bool m_scope_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITweetWithheld)

#endif // OAITweetWithheld_H
