/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.62
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPlaceType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPlaceType::OAIPlaceType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPlaceType::OAIPlaceType() {
    this->initializeModel();
}

OAIPlaceType::~OAIPlaceType() {}

void OAIPlaceType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIPlaceType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIPlaceType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("poi", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPlaceType::POI;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("neighborhood", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPlaceType::NEIGHBORHOOD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("city", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPlaceType::CITY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("admin", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPlaceType::ADMIN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("country", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPlaceType::COUNTRY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("unknown", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPlaceType::UNKNOWN;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIPlaceType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIPlaceType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIPlaceType::POI:
            val = "poi";
            break;
        case eOAIPlaceType::NEIGHBORHOOD:
            val = "neighborhood";
            break;
        case eOAIPlaceType::CITY:
            val = "city";
            break;
        case eOAIPlaceType::ADMIN:
            val = "admin";
            break;
        case eOAIPlaceType::COUNTRY:
            val = "country";
            break;
        case eOAIPlaceType::UNKNOWN:
            val = "unknown";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIPlaceType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIPlaceType::eOAIPlaceType OAIPlaceType::getValue() const {
    return m_value;
}

void OAIPlaceType::setValue(const OAIPlaceType::eOAIPlaceType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIPlaceType::isSet() const {
    
    return m_value_isSet;
}

bool OAIPlaceType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
