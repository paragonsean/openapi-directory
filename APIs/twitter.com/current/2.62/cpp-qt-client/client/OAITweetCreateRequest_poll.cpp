/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.62
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITweetCreateRequest_poll.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITweetCreateRequest_poll::OAITweetCreateRequest_poll(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITweetCreateRequest_poll::OAITweetCreateRequest_poll() {
    this->initializeModel();
}

OAITweetCreateRequest_poll::~OAITweetCreateRequest_poll() {}

void OAITweetCreateRequest_poll::initializeModel() {

    m_duration_minutes_isSet = false;
    m_duration_minutes_isValid = false;

    m_options_isSet = false;
    m_options_isValid = false;

    m_reply_settings_isSet = false;
    m_reply_settings_isValid = false;
}

void OAITweetCreateRequest_poll::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITweetCreateRequest_poll::fromJsonObject(QJsonObject json) {

    m_duration_minutes_isValid = ::OpenAPI::fromJsonValue(m_duration_minutes, json[QString("duration_minutes")]);
    m_duration_minutes_isSet = !json[QString("duration_minutes")].isNull() && m_duration_minutes_isValid;

    m_options_isValid = ::OpenAPI::fromJsonValue(m_options, json[QString("options")]);
    m_options_isSet = !json[QString("options")].isNull() && m_options_isValid;

    m_reply_settings_isValid = ::OpenAPI::fromJsonValue(m_reply_settings, json[QString("reply_settings")]);
    m_reply_settings_isSet = !json[QString("reply_settings")].isNull() && m_reply_settings_isValid;
}

QString OAITweetCreateRequest_poll::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITweetCreateRequest_poll::asJsonObject() const {
    QJsonObject obj;
    if (m_duration_minutes_isSet) {
        obj.insert(QString("duration_minutes"), ::OpenAPI::toJsonValue(m_duration_minutes));
    }
    if (m_options.size() > 0) {
        obj.insert(QString("options"), ::OpenAPI::toJsonValue(m_options));
    }
    if (m_reply_settings_isSet) {
        obj.insert(QString("reply_settings"), ::OpenAPI::toJsonValue(m_reply_settings));
    }
    return obj;
}

qint32 OAITweetCreateRequest_poll::getDurationMinutes() const {
    return m_duration_minutes;
}
void OAITweetCreateRequest_poll::setDurationMinutes(const qint32 &duration_minutes) {
    m_duration_minutes = duration_minutes;
    m_duration_minutes_isSet = true;
}

bool OAITweetCreateRequest_poll::is_duration_minutes_Set() const{
    return m_duration_minutes_isSet;
}

bool OAITweetCreateRequest_poll::is_duration_minutes_Valid() const{
    return m_duration_minutes_isValid;
}

QList<QString> OAITweetCreateRequest_poll::getOptions() const {
    return m_options;
}
void OAITweetCreateRequest_poll::setOptions(const QList<QString> &options) {
    m_options = options;
    m_options_isSet = true;
}

bool OAITweetCreateRequest_poll::is_options_Set() const{
    return m_options_isSet;
}

bool OAITweetCreateRequest_poll::is_options_Valid() const{
    return m_options_isValid;
}

QString OAITweetCreateRequest_poll::getReplySettings() const {
    return m_reply_settings;
}
void OAITweetCreateRequest_poll::setReplySettings(const QString &reply_settings) {
    m_reply_settings = reply_settings;
    m_reply_settings_isSet = true;
}

bool OAITweetCreateRequest_poll::is_reply_settings_Set() const{
    return m_reply_settings_isSet;
}

bool OAITweetCreateRequest_poll::is_reply_settings_Valid() const{
    return m_reply_settings_isValid;
}

bool OAITweetCreateRequest_poll::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_duration_minutes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_options.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_reply_settings_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITweetCreateRequest_poll::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_duration_minutes_isValid && m_options_isValid && true;
}

} // namespace OpenAPI
