/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.62
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFilteredStreamingTweetResponse.h
 *
 * A Tweet or error that can be returned by the streaming Tweet API. The values returned with a successful streamed Tweet includes the user provided rules that the Tweet matched.
 */

#ifndef OAIFilteredStreamingTweetResponse_H
#define OAIFilteredStreamingTweetResponse_H

#include <QJsonObject>

#include "OAIExpansions.h"
#include "OAIFilteredStreamingTweetResponse_matching_rules_inner.h"
#include "OAIProblem.h"
#include "OAITweet.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITweet;
class OAIProblem;
class OAIExpansions;
class OAIFilteredStreamingTweetResponse_matching_rules_inner;

class OAIFilteredStreamingTweetResponse : public OAIObject {
public:
    OAIFilteredStreamingTweetResponse();
    OAIFilteredStreamingTweetResponse(QString json);
    ~OAIFilteredStreamingTweetResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAITweet getData() const;
    void setData(const OAITweet &data);
    bool is_data_Set() const;
    bool is_data_Valid() const;

    QList<OAIProblem> getErrors() const;
    void setErrors(const QList<OAIProblem> &errors);
    bool is_errors_Set() const;
    bool is_errors_Valid() const;

    OAIExpansions getIncludes() const;
    void setIncludes(const OAIExpansions &includes);
    bool is_includes_Set() const;
    bool is_includes_Valid() const;

    QList<OAIFilteredStreamingTweetResponse_matching_rules_inner> getMatchingRules() const;
    void setMatchingRules(const QList<OAIFilteredStreamingTweetResponse_matching_rules_inner> &matching_rules);
    bool is_matching_rules_Set() const;
    bool is_matching_rules_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAITweet m_data;
    bool m_data_isSet;
    bool m_data_isValid;

    QList<OAIProblem> m_errors;
    bool m_errors_isSet;
    bool m_errors_isValid;

    OAIExpansions m_includes;
    bool m_includes_isSet;
    bool m_includes_isValid;

    QList<OAIFilteredStreamingTweetResponse_matching_rules_inner> m_matching_rules;
    bool m_matching_rules_isSet;
    bool m_matching_rules_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFilteredStreamingTweetResponse)

#endif // OAIFilteredStreamingTweetResponse_H
