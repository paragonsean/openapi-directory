/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.62
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMuteUserMutationResponse_data.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMuteUserMutationResponse_data::OAIMuteUserMutationResponse_data(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMuteUserMutationResponse_data::OAIMuteUserMutationResponse_data() {
    this->initializeModel();
}

OAIMuteUserMutationResponse_data::~OAIMuteUserMutationResponse_data() {}

void OAIMuteUserMutationResponse_data::initializeModel() {

    m_muting_isSet = false;
    m_muting_isValid = false;
}

void OAIMuteUserMutationResponse_data::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMuteUserMutationResponse_data::fromJsonObject(QJsonObject json) {

    m_muting_isValid = ::OpenAPI::fromJsonValue(m_muting, json[QString("muting")]);
    m_muting_isSet = !json[QString("muting")].isNull() && m_muting_isValid;
}

QString OAIMuteUserMutationResponse_data::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMuteUserMutationResponse_data::asJsonObject() const {
    QJsonObject obj;
    if (m_muting_isSet) {
        obj.insert(QString("muting"), ::OpenAPI::toJsonValue(m_muting));
    }
    return obj;
}

bool OAIMuteUserMutationResponse_data::isMuting() const {
    return m_muting;
}
void OAIMuteUserMutationResponse_data::setMuting(const bool &muting) {
    m_muting = muting;
    m_muting_isSet = true;
}

bool OAIMuteUserMutationResponse_data::is_muting_Set() const{
    return m_muting_isSet;
}

bool OAIMuteUserMutationResponse_data::is_muting_Valid() const{
    return m_muting_isValid;
}

bool OAIMuteUserMutationResponse_data::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_muting_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMuteUserMutationResponse_data::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
