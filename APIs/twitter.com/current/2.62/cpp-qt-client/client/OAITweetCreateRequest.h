/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.62
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITweetCreateRequest.h
 *
 * 
 */

#ifndef OAITweetCreateRequest_H
#define OAITweetCreateRequest_H

#include <QJsonObject>

#include "OAITweetCreateRequest_geo.h"
#include "OAITweetCreateRequest_media.h"
#include "OAITweetCreateRequest_poll.h"
#include "OAITweetCreateRequest_reply.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITweetCreateRequest_geo;
class OAITweetCreateRequest_media;
class OAITweetCreateRequest_poll;
class OAITweetCreateRequest_reply;

class OAITweetCreateRequest : public OAIObject {
public:
    OAITweetCreateRequest();
    OAITweetCreateRequest(QString json);
    ~OAITweetCreateRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCardUri() const;
    void setCardUri(const QString &card_uri);
    bool is_card_uri_Set() const;
    bool is_card_uri_Valid() const;

    QString getDirectMessageDeepLink() const;
    void setDirectMessageDeepLink(const QString &direct_message_deep_link);
    bool is_direct_message_deep_link_Set() const;
    bool is_direct_message_deep_link_Valid() const;

    bool isForSuperFollowersOnly() const;
    void setForSuperFollowersOnly(const bool &for_super_followers_only);
    bool is_for_super_followers_only_Set() const;
    bool is_for_super_followers_only_Valid() const;

    OAITweetCreateRequest_geo getGeo() const;
    void setGeo(const OAITweetCreateRequest_geo &geo);
    bool is_geo_Set() const;
    bool is_geo_Valid() const;

    OAITweetCreateRequest_media getMedia() const;
    void setMedia(const OAITweetCreateRequest_media &media);
    bool is_media_Set() const;
    bool is_media_Valid() const;

    bool isNullcast() const;
    void setNullcast(const bool &nullcast);
    bool is_nullcast_Set() const;
    bool is_nullcast_Valid() const;

    OAITweetCreateRequest_poll getPoll() const;
    void setPoll(const OAITweetCreateRequest_poll &poll);
    bool is_poll_Set() const;
    bool is_poll_Valid() const;

    QString getQuoteTweetId() const;
    void setQuoteTweetId(const QString &quote_tweet_id);
    bool is_quote_tweet_id_Set() const;
    bool is_quote_tweet_id_Valid() const;

    OAITweetCreateRequest_reply getReply() const;
    void setReply(const OAITweetCreateRequest_reply &reply);
    bool is_reply_Set() const;
    bool is_reply_Valid() const;

    QString getReplySettings() const;
    void setReplySettings(const QString &reply_settings);
    bool is_reply_settings_Set() const;
    bool is_reply_settings_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_card_uri;
    bool m_card_uri_isSet;
    bool m_card_uri_isValid;

    QString m_direct_message_deep_link;
    bool m_direct_message_deep_link_isSet;
    bool m_direct_message_deep_link_isValid;

    bool m_for_super_followers_only;
    bool m_for_super_followers_only_isSet;
    bool m_for_super_followers_only_isValid;

    OAITweetCreateRequest_geo m_geo;
    bool m_geo_isSet;
    bool m_geo_isValid;

    OAITweetCreateRequest_media m_media;
    bool m_media_isSet;
    bool m_media_isValid;

    bool m_nullcast;
    bool m_nullcast_isSet;
    bool m_nullcast_isValid;

    OAITweetCreateRequest_poll m_poll;
    bool m_poll_isSet;
    bool m_poll_isValid;

    QString m_quote_tweet_id;
    bool m_quote_tweet_id_isSet;
    bool m_quote_tweet_id_isValid;

    OAITweetCreateRequest_reply m_reply;
    bool m_reply_isSet;
    bool m_reply_isValid;

    QString m_reply_settings;
    bool m_reply_settings_isSet;
    bool m_reply_settings_isValid;

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITweetCreateRequest)

#endif // OAITweetCreateRequest_H
