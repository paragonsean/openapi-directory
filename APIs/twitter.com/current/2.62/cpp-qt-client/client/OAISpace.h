/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.62
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISpace.h
 *
 * 
 */

#ifndef OAISpace_H
#define OAISpace_H

#include <QJsonObject>

#include "OAISpace_topics_inner.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISpace_topics_inner;

class OAISpace : public OAIObject {
public:
    OAISpace();
    OAISpace(QString json);
    ~OAISpace() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getCreatorId() const;
    void setCreatorId(const QString &creator_id);
    bool is_creator_id_Set() const;
    bool is_creator_id_Valid() const;

    QDateTime getEndedAt() const;
    void setEndedAt(const QDateTime &ended_at);
    bool is_ended_at_Set() const;
    bool is_ended_at_Valid() const;

    QList<QString> getHostIds() const;
    void setHostIds(const QList<QString> &host_ids);
    bool is_host_ids_Set() const;
    bool is_host_ids_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QList<QString> getInvitedUserIds() const;
    void setInvitedUserIds(const QList<QString> &invited_user_ids);
    bool is_invited_user_ids_Set() const;
    bool is_invited_user_ids_Valid() const;

    bool isIsTicketed() const;
    void setIsTicketed(const bool &is_ticketed);
    bool is_is_ticketed_Set() const;
    bool is_is_ticketed_Valid() const;

    QString getLang() const;
    void setLang(const QString &lang);
    bool is_lang_Set() const;
    bool is_lang_Valid() const;

    qint32 getParticipantCount() const;
    void setParticipantCount(const qint32 &participant_count);
    bool is_participant_count_Set() const;
    bool is_participant_count_Valid() const;

    QDateTime getScheduledStart() const;
    void setScheduledStart(const QDateTime &scheduled_start);
    bool is_scheduled_start_Set() const;
    bool is_scheduled_start_Valid() const;

    QList<QString> getSpeakerIds() const;
    void setSpeakerIds(const QList<QString> &speaker_ids);
    bool is_speaker_ids_Set() const;
    bool is_speaker_ids_Valid() const;

    QDateTime getStartedAt() const;
    void setStartedAt(const QDateTime &started_at);
    bool is_started_at_Set() const;
    bool is_started_at_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    qint32 getSubscriberCount() const;
    void setSubscriberCount(const qint32 &subscriber_count);
    bool is_subscriber_count_Set() const;
    bool is_subscriber_count_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QList<OAISpace_topics_inner> getTopics() const;
    void setTopics(const QList<OAISpace_topics_inner> &topics);
    bool is_topics_Set() const;
    bool is_topics_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_creator_id;
    bool m_creator_id_isSet;
    bool m_creator_id_isValid;

    QDateTime m_ended_at;
    bool m_ended_at_isSet;
    bool m_ended_at_isValid;

    QList<QString> m_host_ids;
    bool m_host_ids_isSet;
    bool m_host_ids_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QList<QString> m_invited_user_ids;
    bool m_invited_user_ids_isSet;
    bool m_invited_user_ids_isValid;

    bool m_is_ticketed;
    bool m_is_ticketed_isSet;
    bool m_is_ticketed_isValid;

    QString m_lang;
    bool m_lang_isSet;
    bool m_lang_isValid;

    qint32 m_participant_count;
    bool m_participant_count_isSet;
    bool m_participant_count_isValid;

    QDateTime m_scheduled_start;
    bool m_scheduled_start_isSet;
    bool m_scheduled_start_isValid;

    QList<QString> m_speaker_ids;
    bool m_speaker_ids_isSet;
    bool m_speaker_ids_isValid;

    QDateTime m_started_at;
    bool m_started_at_isSet;
    bool m_started_at_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    qint32 m_subscriber_count;
    bool m_subscriber_count_isSet;
    bool m_subscriber_count_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QList<OAISpace_topics_inner> m_topics;
    bool m_topics_isSet;
    bool m_topics_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISpace)

#endif // OAISpace_H
