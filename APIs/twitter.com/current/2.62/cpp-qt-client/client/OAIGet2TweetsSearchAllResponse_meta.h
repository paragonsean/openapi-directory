/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.62
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGet2TweetsSearchAllResponse_meta.h
 *
 * 
 */

#ifndef OAIGet2TweetsSearchAllResponse_meta_H
#define OAIGet2TweetsSearchAllResponse_meta_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGet2TweetsSearchAllResponse_meta : public OAIObject {
public:
    OAIGet2TweetsSearchAllResponse_meta();
    OAIGet2TweetsSearchAllResponse_meta(QString json);
    ~OAIGet2TweetsSearchAllResponse_meta() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getNewestId() const;
    void setNewestId(const QString &newest_id);
    bool is_newest_id_Set() const;
    bool is_newest_id_Valid() const;

    QString getNextToken() const;
    void setNextToken(const QString &next_token);
    bool is_next_token_Set() const;
    bool is_next_token_Valid() const;

    QString getOldestId() const;
    void setOldestId(const QString &oldest_id);
    bool is_oldest_id_Set() const;
    bool is_oldest_id_Valid() const;

    qint32 getResultCount() const;
    void setResultCount(const qint32 &result_count);
    bool is_result_count_Set() const;
    bool is_result_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_newest_id;
    bool m_newest_id_isSet;
    bool m_newest_id_isValid;

    QString m_next_token;
    bool m_next_token_isSet;
    bool m_next_token_isValid;

    QString m_oldest_id;
    bool m_oldest_id_isSet;
    bool m_oldest_id_isValid;

    qint32 m_result_count;
    bool m_result_count_isSet;
    bool m_result_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGet2TweetsSearchAllResponse_meta)

#endif // OAIGet2TweetsSearchAllResponse_meta_H
