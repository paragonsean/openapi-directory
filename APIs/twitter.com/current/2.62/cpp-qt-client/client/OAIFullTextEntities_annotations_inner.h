/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.62
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFullTextEntities_annotations_inner.h
 *
 * Annotation for entities based on the Tweet text.
 */

#ifndef OAIFullTextEntities_annotations_inner_H
#define OAIFullTextEntities_annotations_inner_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFullTextEntities_annotations_inner : public OAIObject {
public:
    OAIFullTextEntities_annotations_inner();
    OAIFullTextEntities_annotations_inner(QString json);
    ~OAIFullTextEntities_annotations_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getEnd() const;
    void setEnd(const qint32 &end);
    bool is_end_Set() const;
    bool is_end_Valid() const;

    qint32 getStart() const;
    void setStart(const qint32 &start);
    bool is_start_Set() const;
    bool is_start_Valid() const;

    QString getNormalizedText() const;
    void setNormalizedText(const QString &normalized_text);
    bool is_normalized_text_Set() const;
    bool is_normalized_text_Valid() const;

    double getProbability() const;
    void setProbability(const double &probability);
    bool is_probability_Set() const;
    bool is_probability_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_end;
    bool m_end_isSet;
    bool m_end_isValid;

    qint32 m_start;
    bool m_start_isSet;
    bool m_start_isValid;

    QString m_normalized_text;
    bool m_normalized_text_isSet;
    bool m_normalized_text_isValid;

    double m_probability;
    bool m_probability_isSet;
    bool m_probability_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFullTextEntities_annotations_inner)

#endif // OAIFullTextEntities_annotations_inner_H
