/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.62
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAnimatedGif.h
 *
 * 
 */

#ifndef OAIAnimatedGif_H
#define OAIAnimatedGif_H

#include <QJsonObject>

#include "OAIMedia.h"
#include "OAIVariant.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIVariant;

class OAIAnimatedGif : public OAIObject {
public:
    OAIAnimatedGif();
    OAIAnimatedGif(QString json);
    ~OAIAnimatedGif() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getHeight() const;
    void setHeight(const qint32 &height);
    bool is_height_Set() const;
    bool is_height_Valid() const;

    QString getMediaKey() const;
    void setMediaKey(const QString &media_key);
    bool is_media_key_Set() const;
    bool is_media_key_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    qint32 getWidth() const;
    void setWidth(const qint32 &width);
    bool is_width_Set() const;
    bool is_width_Valid() const;

    QString getPreviewImageUrl() const;
    void setPreviewImageUrl(const QString &preview_image_url);
    bool is_preview_image_url_Set() const;
    bool is_preview_image_url_Valid() const;

    QList<OAIVariant> getVariants() const;
    void setVariants(const QList<OAIVariant> &variants);
    bool is_variants_Set() const;
    bool is_variants_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_height;
    bool m_height_isSet;
    bool m_height_isValid;

    QString m_media_key;
    bool m_media_key_isSet;
    bool m_media_key_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    qint32 m_width;
    bool m_width_isSet;
    bool m_width_isValid;

    QString m_preview_image_url;
    bool m_preview_image_url_isSet;
    bool m_preview_image_url_isValid;

    QList<OAIVariant> m_variants;
    bool m_variants_isSet;
    bool m_variants_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAnimatedGif)

#endif // OAIAnimatedGif_H
