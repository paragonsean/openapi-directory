/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.62
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExpansions.h
 *
 * 
 */

#ifndef OAIExpansions_H
#define OAIExpansions_H

#include <QJsonObject>

#include "OAIMedia.h"
#include "OAIPlace.h"
#include "OAIPoll.h"
#include "OAITopic.h"
#include "OAITweet.h"
#include "OAIUser.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMedia;
class OAIPlace;
class OAIPoll;
class OAITopic;
class OAITweet;
class OAIUser;

class OAIExpansions : public OAIObject {
public:
    OAIExpansions();
    OAIExpansions(QString json);
    ~OAIExpansions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIMedia> getMedia() const;
    void setMedia(const QList<OAIMedia> &media);
    bool is_media_Set() const;
    bool is_media_Valid() const;

    QList<OAIPlace> getPlaces() const;
    void setPlaces(const QList<OAIPlace> &places);
    bool is_places_Set() const;
    bool is_places_Valid() const;

    QList<OAIPoll> getPolls() const;
    void setPolls(const QList<OAIPoll> &polls);
    bool is_polls_Set() const;
    bool is_polls_Valid() const;

    QList<OAITopic> getTopics() const;
    void setTopics(const QList<OAITopic> &topics);
    bool is_topics_Set() const;
    bool is_topics_Valid() const;

    QList<OAITweet> getTweets() const;
    void setTweets(const QList<OAITweet> &tweets);
    bool is_tweets_Set() const;
    bool is_tweets_Valid() const;

    QList<OAIUser> getUsers() const;
    void setUsers(const QList<OAIUser> &users);
    bool is_users_Set() const;
    bool is_users_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIMedia> m_media;
    bool m_media_isSet;
    bool m_media_isValid;

    QList<OAIPlace> m_places;
    bool m_places_isSet;
    bool m_places_isValid;

    QList<OAIPoll> m_polls;
    bool m_polls_isSet;
    bool m_polls_isValid;

    QList<OAITopic> m_topics;
    bool m_topics_isSet;
    bool m_topics_isValid;

    QList<OAITweet> m_tweets;
    bool m_tweets_isSet;
    bool m_tweets_isValid;

    QList<OAIUser> m_users;
    bool m_users_isSet;
    bool m_users_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExpansions)

#endif // OAIExpansions_H
