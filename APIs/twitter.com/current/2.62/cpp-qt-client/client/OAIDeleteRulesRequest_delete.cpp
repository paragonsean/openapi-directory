/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.62
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeleteRulesRequest_delete.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeleteRulesRequest_delete::OAIDeleteRulesRequest_delete(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeleteRulesRequest_delete::OAIDeleteRulesRequest_delete() {
    this->initializeModel();
}

OAIDeleteRulesRequest_delete::~OAIDeleteRulesRequest_delete() {}

void OAIDeleteRulesRequest_delete::initializeModel() {

    m_ids_isSet = false;
    m_ids_isValid = false;

    m_values_isSet = false;
    m_values_isValid = false;
}

void OAIDeleteRulesRequest_delete::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeleteRulesRequest_delete::fromJsonObject(QJsonObject json) {

    m_ids_isValid = ::OpenAPI::fromJsonValue(m_ids, json[QString("ids")]);
    m_ids_isSet = !json[QString("ids")].isNull() && m_ids_isValid;

    m_values_isValid = ::OpenAPI::fromJsonValue(m_values, json[QString("values")]);
    m_values_isSet = !json[QString("values")].isNull() && m_values_isValid;
}

QString OAIDeleteRulesRequest_delete::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeleteRulesRequest_delete::asJsonObject() const {
    QJsonObject obj;
    if (m_ids.size() > 0) {
        obj.insert(QString("ids"), ::OpenAPI::toJsonValue(m_ids));
    }
    if (m_values.size() > 0) {
        obj.insert(QString("values"), ::OpenAPI::toJsonValue(m_values));
    }
    return obj;
}

QList<QString> OAIDeleteRulesRequest_delete::getIds() const {
    return m_ids;
}
void OAIDeleteRulesRequest_delete::setIds(const QList<QString> &ids) {
    m_ids = ids;
    m_ids_isSet = true;
}

bool OAIDeleteRulesRequest_delete::is_ids_Set() const{
    return m_ids_isSet;
}

bool OAIDeleteRulesRequest_delete::is_ids_Valid() const{
    return m_ids_isValid;
}

QList<QString> OAIDeleteRulesRequest_delete::getValues() const {
    return m_values;
}
void OAIDeleteRulesRequest_delete::setValues(const QList<QString> &values) {
    m_values = values;
    m_values_isSet = true;
}

bool OAIDeleteRulesRequest_delete::is_values_Set() const{
    return m_values_isSet;
}

bool OAIDeleteRulesRequest_delete::is_values_Valid() const{
    return m_values_isValid;
}

bool OAIDeleteRulesRequest_delete::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_values.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeleteRulesRequest_delete::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
