# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TweetPromotedMetrics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, impression_count: int=None, like_count: int=None, reply_count: int=None, retweet_count: int=None):
        """TweetPromotedMetrics - a model defined in OpenAPI

        :param impression_count: The impression_count of this TweetPromotedMetrics.
        :param like_count: The like_count of this TweetPromotedMetrics.
        :param reply_count: The reply_count of this TweetPromotedMetrics.
        :param retweet_count: The retweet_count of this TweetPromotedMetrics.
        """
        self.openapi_types = {
            'impression_count': int,
            'like_count': int,
            'reply_count': int,
            'retweet_count': int
        }

        self.attribute_map = {
            'impression_count': 'impression_count',
            'like_count': 'like_count',
            'reply_count': 'reply_count',
            'retweet_count': 'retweet_count'
        }

        self._impression_count = impression_count
        self._like_count = like_count
        self._reply_count = reply_count
        self._retweet_count = retweet_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TweetPromotedMetrics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Tweet_promoted_metrics of this TweetPromotedMetrics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def impression_count(self):
        """Gets the impression_count of this TweetPromotedMetrics.

        Number of times this Tweet has been viewed.

        :return: The impression_count of this TweetPromotedMetrics.
        :rtype: int
        """
        return self._impression_count

    @impression_count.setter
    def impression_count(self, impression_count):
        """Sets the impression_count of this TweetPromotedMetrics.

        Number of times this Tweet has been viewed.

        :param impression_count: The impression_count of this TweetPromotedMetrics.
        :type impression_count: int
        """

        self._impression_count = impression_count

    @property
    def like_count(self):
        """Gets the like_count of this TweetPromotedMetrics.

        Number of times this Tweet has been liked.

        :return: The like_count of this TweetPromotedMetrics.
        :rtype: int
        """
        return self._like_count

    @like_count.setter
    def like_count(self, like_count):
        """Sets the like_count of this TweetPromotedMetrics.

        Number of times this Tweet has been liked.

        :param like_count: The like_count of this TweetPromotedMetrics.
        :type like_count: int
        """

        self._like_count = like_count

    @property
    def reply_count(self):
        """Gets the reply_count of this TweetPromotedMetrics.

        Number of times this Tweet has been replied to.

        :return: The reply_count of this TweetPromotedMetrics.
        :rtype: int
        """
        return self._reply_count

    @reply_count.setter
    def reply_count(self, reply_count):
        """Sets the reply_count of this TweetPromotedMetrics.

        Number of times this Tweet has been replied to.

        :param reply_count: The reply_count of this TweetPromotedMetrics.
        :type reply_count: int
        """

        self._reply_count = reply_count

    @property
    def retweet_count(self):
        """Gets the retweet_count of this TweetPromotedMetrics.

        Number of times this Tweet has been Retweeted.

        :return: The retweet_count of this TweetPromotedMetrics.
        :rtype: int
        """
        return self._retweet_count

    @retweet_count.setter
    def retweet_count(self, retweet_count):
        """Sets the retweet_count of this TweetPromotedMetrics.

        Number of times this Tweet has been Retweeted.

        :param retweet_count: The retweet_count of this TweetPromotedMetrics.
        :type retweet_count: int
        """

        self._retweet_count = retweet_count
