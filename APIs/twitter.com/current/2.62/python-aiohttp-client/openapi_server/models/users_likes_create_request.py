# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class UsersLikesCreateRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, tweet_id: str=None):
        """UsersLikesCreateRequest - a model defined in OpenAPI

        :param tweet_id: The tweet_id of this UsersLikesCreateRequest.
        """
        self.openapi_types = {
            'tweet_id': str
        }

        self.attribute_map = {
            'tweet_id': 'tweet_id'
        }

        self._tweet_id = tweet_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UsersLikesCreateRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UsersLikesCreateRequest of this UsersLikesCreateRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def tweet_id(self):
        """Gets the tweet_id of this UsersLikesCreateRequest.

        Unique identifier of this Tweet. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers.

        :return: The tweet_id of this UsersLikesCreateRequest.
        :rtype: str
        """
        return self._tweet_id

    @tweet_id.setter
    def tweet_id(self, tweet_id):
        """Sets the tweet_id of this UsersLikesCreateRequest.

        Unique identifier of this Tweet. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers.

        :param tweet_id: The tweet_id of this UsersLikesCreateRequest.
        :type tweet_id: str
        """
        if tweet_id is None:
            raise ValueError("Invalid value for `tweet_id`, must not be `None`")
        if tweet_id is not None and not re.search(r'^[0-9]{1,19}$', tweet_id):
            raise ValueError("Invalid value for `tweet_id`, must be a follow pattern or equal to `/^[0-9]{1,19}$/`")

        self._tweet_id = tweet_id
