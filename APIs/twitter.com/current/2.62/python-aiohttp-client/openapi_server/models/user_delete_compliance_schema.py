# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.user_compliance_schema import UserComplianceSchema
from openapi_server import util


class UserDeleteComplianceSchema(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, user_delete: UserComplianceSchema=None):
        """UserDeleteComplianceSchema - a model defined in OpenAPI

        :param user_delete: The user_delete of this UserDeleteComplianceSchema.
        """
        self.openapi_types = {
            'user_delete': UserComplianceSchema
        }

        self.attribute_map = {
            'user_delete': 'user_delete'
        }

        self._user_delete = user_delete

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserDeleteComplianceSchema':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UserDeleteComplianceSchema of this UserDeleteComplianceSchema.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def user_delete(self):
        """Gets the user_delete of this UserDeleteComplianceSchema.


        :return: The user_delete of this UserDeleteComplianceSchema.
        :rtype: UserComplianceSchema
        """
        return self._user_delete

    @user_delete.setter
    def user_delete(self, user_delete):
        """Sets the user_delete of this UserDeleteComplianceSchema.


        :param user_delete: The user_delete of this UserDeleteComplianceSchema.
        :type user_delete: UserComplianceSchema
        """
        if user_delete is None:
            raise ValueError("Invalid value for `user_delete`, must not be `None`")

        self._user_delete = user_delete
