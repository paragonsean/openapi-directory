# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class TweetCreateRequestReply(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, exclude_reply_user_ids: List[str]=None, in_reply_to_tweet_id: str=None):
        """TweetCreateRequestReply - a model defined in OpenAPI

        :param exclude_reply_user_ids: The exclude_reply_user_ids of this TweetCreateRequestReply.
        :param in_reply_to_tweet_id: The in_reply_to_tweet_id of this TweetCreateRequestReply.
        """
        self.openapi_types = {
            'exclude_reply_user_ids': List[str],
            'in_reply_to_tweet_id': str
        }

        self.attribute_map = {
            'exclude_reply_user_ids': 'exclude_reply_user_ids',
            'in_reply_to_tweet_id': 'in_reply_to_tweet_id'
        }

        self._exclude_reply_user_ids = exclude_reply_user_ids
        self._in_reply_to_tweet_id = in_reply_to_tweet_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TweetCreateRequestReply':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TweetCreateRequest_reply of this TweetCreateRequestReply.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def exclude_reply_user_ids(self):
        """Gets the exclude_reply_user_ids of this TweetCreateRequestReply.

        A list of User Ids to be excluded from the reply Tweet.

        :return: The exclude_reply_user_ids of this TweetCreateRequestReply.
        :rtype: List[str]
        """
        return self._exclude_reply_user_ids

    @exclude_reply_user_ids.setter
    def exclude_reply_user_ids(self, exclude_reply_user_ids):
        """Sets the exclude_reply_user_ids of this TweetCreateRequestReply.

        A list of User Ids to be excluded from the reply Tweet.

        :param exclude_reply_user_ids: The exclude_reply_user_ids of this TweetCreateRequestReply.
        :type exclude_reply_user_ids: List[str]
        """

        self._exclude_reply_user_ids = exclude_reply_user_ids

    @property
    def in_reply_to_tweet_id(self):
        """Gets the in_reply_to_tweet_id of this TweetCreateRequestReply.

        Unique identifier of this Tweet. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers.

        :return: The in_reply_to_tweet_id of this TweetCreateRequestReply.
        :rtype: str
        """
        return self._in_reply_to_tweet_id

    @in_reply_to_tweet_id.setter
    def in_reply_to_tweet_id(self, in_reply_to_tweet_id):
        """Sets the in_reply_to_tweet_id of this TweetCreateRequestReply.

        Unique identifier of this Tweet. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers.

        :param in_reply_to_tweet_id: The in_reply_to_tweet_id of this TweetCreateRequestReply.
        :type in_reply_to_tweet_id: str
        """
        if in_reply_to_tweet_id is None:
            raise ValueError("Invalid value for `in_reply_to_tweet_id`, must not be `None`")
        if in_reply_to_tweet_id is not None and not re.search(r'^[0-9]{1,19}$', in_reply_to_tweet_id):
            raise ValueError("Invalid value for `in_reply_to_tweet_id`, must be a follow pattern or equal to `/^[0-9]{1,19}$/`")

        self._in_reply_to_tweet_id = in_reply_to_tweet_id
