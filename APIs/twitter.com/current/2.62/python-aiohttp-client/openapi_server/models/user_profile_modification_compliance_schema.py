# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.user_profile_modification_object_schema import UserProfileModificationObjectSchema
from openapi_server import util


class UserProfileModificationComplianceSchema(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, user_profile_modification: UserProfileModificationObjectSchema=None):
        """UserProfileModificationComplianceSchema - a model defined in OpenAPI

        :param user_profile_modification: The user_profile_modification of this UserProfileModificationComplianceSchema.
        """
        self.openapi_types = {
            'user_profile_modification': UserProfileModificationObjectSchema
        }

        self.attribute_map = {
            'user_profile_modification': 'user_profile_modification'
        }

        self._user_profile_modification = user_profile_modification

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserProfileModificationComplianceSchema':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UserProfileModificationComplianceSchema of this UserProfileModificationComplianceSchema.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def user_profile_modification(self):
        """Gets the user_profile_modification of this UserProfileModificationComplianceSchema.


        :return: The user_profile_modification of this UserProfileModificationComplianceSchema.
        :rtype: UserProfileModificationObjectSchema
        """
        return self._user_profile_modification

    @user_profile_modification.setter
    def user_profile_modification(self, user_profile_modification):
        """Sets the user_profile_modification of this UserProfileModificationComplianceSchema.


        :param user_profile_modification: The user_profile_modification of this UserProfileModificationComplianceSchema.
        :type user_profile_modification: UserProfileModificationObjectSchema
        """
        if user_profile_modification is None:
            raise ValueError("Invalid value for `user_profile_modification`, must not be `None`")

        self._user_profile_modification = user_profile_modification
