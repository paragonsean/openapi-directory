# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VideoAllOfNonPublicMetrics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, playback_0_count: int=None, playback_100_count: int=None, playback_25_count: int=None, playback_50_count: int=None, playback_75_count: int=None):
        """VideoAllOfNonPublicMetrics - a model defined in OpenAPI

        :param playback_0_count: The playback_0_count of this VideoAllOfNonPublicMetrics.
        :param playback_100_count: The playback_100_count of this VideoAllOfNonPublicMetrics.
        :param playback_25_count: The playback_25_count of this VideoAllOfNonPublicMetrics.
        :param playback_50_count: The playback_50_count of this VideoAllOfNonPublicMetrics.
        :param playback_75_count: The playback_75_count of this VideoAllOfNonPublicMetrics.
        """
        self.openapi_types = {
            'playback_0_count': int,
            'playback_100_count': int,
            'playback_25_count': int,
            'playback_50_count': int,
            'playback_75_count': int
        }

        self.attribute_map = {
            'playback_0_count': 'playback_0_count',
            'playback_100_count': 'playback_100_count',
            'playback_25_count': 'playback_25_count',
            'playback_50_count': 'playback_50_count',
            'playback_75_count': 'playback_75_count'
        }

        self._playback_0_count = playback_0_count
        self._playback_100_count = playback_100_count
        self._playback_25_count = playback_25_count
        self._playback_50_count = playback_50_count
        self._playback_75_count = playback_75_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VideoAllOfNonPublicMetrics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Video_allOf_non_public_metrics of this VideoAllOfNonPublicMetrics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def playback_0_count(self):
        """Gets the playback_0_count of this VideoAllOfNonPublicMetrics.

        Number of users who made it through 0% of the video.

        :return: The playback_0_count of this VideoAllOfNonPublicMetrics.
        :rtype: int
        """
        return self._playback_0_count

    @playback_0_count.setter
    def playback_0_count(self, playback_0_count):
        """Sets the playback_0_count of this VideoAllOfNonPublicMetrics.

        Number of users who made it through 0% of the video.

        :param playback_0_count: The playback_0_count of this VideoAllOfNonPublicMetrics.
        :type playback_0_count: int
        """

        self._playback_0_count = playback_0_count

    @property
    def playback_100_count(self):
        """Gets the playback_100_count of this VideoAllOfNonPublicMetrics.

        Number of users who made it through 100% of the video.

        :return: The playback_100_count of this VideoAllOfNonPublicMetrics.
        :rtype: int
        """
        return self._playback_100_count

    @playback_100_count.setter
    def playback_100_count(self, playback_100_count):
        """Sets the playback_100_count of this VideoAllOfNonPublicMetrics.

        Number of users who made it through 100% of the video.

        :param playback_100_count: The playback_100_count of this VideoAllOfNonPublicMetrics.
        :type playback_100_count: int
        """

        self._playback_100_count = playback_100_count

    @property
    def playback_25_count(self):
        """Gets the playback_25_count of this VideoAllOfNonPublicMetrics.

        Number of users who made it through 25% of the video.

        :return: The playback_25_count of this VideoAllOfNonPublicMetrics.
        :rtype: int
        """
        return self._playback_25_count

    @playback_25_count.setter
    def playback_25_count(self, playback_25_count):
        """Sets the playback_25_count of this VideoAllOfNonPublicMetrics.

        Number of users who made it through 25% of the video.

        :param playback_25_count: The playback_25_count of this VideoAllOfNonPublicMetrics.
        :type playback_25_count: int
        """

        self._playback_25_count = playback_25_count

    @property
    def playback_50_count(self):
        """Gets the playback_50_count of this VideoAllOfNonPublicMetrics.

        Number of users who made it through 50% of the video.

        :return: The playback_50_count of this VideoAllOfNonPublicMetrics.
        :rtype: int
        """
        return self._playback_50_count

    @playback_50_count.setter
    def playback_50_count(self, playback_50_count):
        """Sets the playback_50_count of this VideoAllOfNonPublicMetrics.

        Number of users who made it through 50% of the video.

        :param playback_50_count: The playback_50_count of this VideoAllOfNonPublicMetrics.
        :type playback_50_count: int
        """

        self._playback_50_count = playback_50_count

    @property
    def playback_75_count(self):
        """Gets the playback_75_count of this VideoAllOfNonPublicMetrics.

        Number of users who made it through 75% of the video.

        :return: The playback_75_count of this VideoAllOfNonPublicMetrics.
        :rtype: int
        """
        return self._playback_75_count

    @playback_75_count.setter
    def playback_75_count(self, playback_75_count):
        """Sets the playback_75_count of this VideoAllOfNonPublicMetrics.

        Number of users who made it through 75% of the video.

        :param playback_75_count: The playback_75_count of this VideoAllOfNonPublicMetrics.
        :type playback_75_count: int
        """

        self._playback_75_count = playback_75_count
