# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.user_takedown_compliance_schema import UserTakedownComplianceSchema
from openapi_server import util


class UserWithheldComplianceSchema(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, user_withheld: UserTakedownComplianceSchema=None):
        """UserWithheldComplianceSchema - a model defined in OpenAPI

        :param user_withheld: The user_withheld of this UserWithheldComplianceSchema.
        """
        self.openapi_types = {
            'user_withheld': UserTakedownComplianceSchema
        }

        self.attribute_map = {
            'user_withheld': 'user_withheld'
        }

        self._user_withheld = user_withheld

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserWithheldComplianceSchema':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UserWithheldComplianceSchema of this UserWithheldComplianceSchema.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def user_withheld(self):
        """Gets the user_withheld of this UserWithheldComplianceSchema.


        :return: The user_withheld of this UserWithheldComplianceSchema.
        :rtype: UserTakedownComplianceSchema
        """
        return self._user_withheld

    @user_withheld.setter
    def user_withheld(self, user_withheld):
        """Sets the user_withheld of this UserWithheldComplianceSchema.


        :param user_withheld: The user_withheld of this UserWithheldComplianceSchema.
        :type user_withheld: UserTakedownComplianceSchema
        """
        if user_withheld is None:
            raise ValueError("Invalid value for `user_withheld`, must not be `None`")

        self._user_withheld = user_withheld
