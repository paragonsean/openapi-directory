# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TweetHideRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hidden: bool=None):
        """TweetHideRequest - a model defined in OpenAPI

        :param hidden: The hidden of this TweetHideRequest.
        """
        self.openapi_types = {
            'hidden': bool
        }

        self.attribute_map = {
            'hidden': 'hidden'
        }

        self._hidden = hidden

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TweetHideRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TweetHideRequest of this TweetHideRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hidden(self):
        """Gets the hidden of this TweetHideRequest.


        :return: The hidden of this TweetHideRequest.
        :rtype: bool
        """
        return self._hidden

    @hidden.setter
    def hidden(self, hidden):
        """Sets the hidden of this TweetHideRequest.


        :param hidden: The hidden of this TweetHideRequest.
        :type hidden: bool
        """
        if hidden is None:
            raise ValueError("Invalid value for `hidden`, must not be `None`")

        self._hidden = hidden
