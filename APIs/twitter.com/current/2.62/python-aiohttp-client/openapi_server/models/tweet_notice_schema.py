# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.tweet_notice import TweetNotice
from openapi_server import util


class TweetNoticeSchema(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, public_tweet_notice: TweetNotice=None):
        """TweetNoticeSchema - a model defined in OpenAPI

        :param public_tweet_notice: The public_tweet_notice of this TweetNoticeSchema.
        """
        self.openapi_types = {
            'public_tweet_notice': TweetNotice
        }

        self.attribute_map = {
            'public_tweet_notice': 'public_tweet_notice'
        }

        self._public_tweet_notice = public_tweet_notice

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TweetNoticeSchema':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TweetNoticeSchema of this TweetNoticeSchema.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def public_tweet_notice(self):
        """Gets the public_tweet_notice of this TweetNoticeSchema.


        :return: The public_tweet_notice of this TweetNoticeSchema.
        :rtype: TweetNotice
        """
        return self._public_tweet_notice

    @public_tweet_notice.setter
    def public_tweet_notice(self, public_tweet_notice):
        """Sets the public_tweet_notice of this TweetNoticeSchema.


        :param public_tweet_notice: The public_tweet_notice of this TweetNoticeSchema.
        :type public_tweet_notice: TweetNotice
        """
        if public_tweet_notice is None:
            raise ValueError("Invalid value for `public_tweet_notice`, must not be `None`")

        self._public_tweet_notice = public_tweet_notice
