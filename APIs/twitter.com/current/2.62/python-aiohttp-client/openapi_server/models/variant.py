# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Variant(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bit_rate: int=None, content_type: str=None, url: str=None):
        """Variant - a model defined in OpenAPI

        :param bit_rate: The bit_rate of this Variant.
        :param content_type: The content_type of this Variant.
        :param url: The url of this Variant.
        """
        self.openapi_types = {
            'bit_rate': int,
            'content_type': str,
            'url': str
        }

        self.attribute_map = {
            'bit_rate': 'bit_rate',
            'content_type': 'content_type',
            'url': 'url'
        }

        self._bit_rate = bit_rate
        self._content_type = content_type
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Variant':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Variant of this Variant.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bit_rate(self):
        """Gets the bit_rate of this Variant.

        The bit rate of the media.

        :return: The bit_rate of this Variant.
        :rtype: int
        """
        return self._bit_rate

    @bit_rate.setter
    def bit_rate(self, bit_rate):
        """Sets the bit_rate of this Variant.

        The bit rate of the media.

        :param bit_rate: The bit_rate of this Variant.
        :type bit_rate: int
        """

        self._bit_rate = bit_rate

    @property
    def content_type(self):
        """Gets the content_type of this Variant.

        The content type of the media.

        :return: The content_type of this Variant.
        :rtype: str
        """
        return self._content_type

    @content_type.setter
    def content_type(self, content_type):
        """Sets the content_type of this Variant.

        The content type of the media.

        :param content_type: The content_type of this Variant.
        :type content_type: str
        """

        self._content_type = content_type

    @property
    def url(self):
        """Gets the url of this Variant.

        The url to the media.

        :return: The url of this Variant.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this Variant.

        The url to the media.

        :param url: The url of this Variant.
        :type url: str
        """

        self._url = url
