# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Get2UsersIdMentionsResponseMeta(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, newest_id: str=None, next_token: str=None, oldest_id: str=None, previous_token: str=None, result_count: int=None):
        """Get2UsersIdMentionsResponseMeta - a model defined in OpenAPI

        :param newest_id: The newest_id of this Get2UsersIdMentionsResponseMeta.
        :param next_token: The next_token of this Get2UsersIdMentionsResponseMeta.
        :param oldest_id: The oldest_id of this Get2UsersIdMentionsResponseMeta.
        :param previous_token: The previous_token of this Get2UsersIdMentionsResponseMeta.
        :param result_count: The result_count of this Get2UsersIdMentionsResponseMeta.
        """
        self.openapi_types = {
            'newest_id': str,
            'next_token': str,
            'oldest_id': str,
            'previous_token': str,
            'result_count': int
        }

        self.attribute_map = {
            'newest_id': 'newest_id',
            'next_token': 'next_token',
            'oldest_id': 'oldest_id',
            'previous_token': 'previous_token',
            'result_count': 'result_count'
        }

        self._newest_id = newest_id
        self._next_token = next_token
        self._oldest_id = oldest_id
        self._previous_token = previous_token
        self._result_count = result_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Get2UsersIdMentionsResponseMeta':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Get2UsersIdMentionsResponse_meta of this Get2UsersIdMentionsResponseMeta.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def newest_id(self):
        """Gets the newest_id of this Get2UsersIdMentionsResponseMeta.

        The newest id in this response.

        :return: The newest_id of this Get2UsersIdMentionsResponseMeta.
        :rtype: str
        """
        return self._newest_id

    @newest_id.setter
    def newest_id(self, newest_id):
        """Sets the newest_id of this Get2UsersIdMentionsResponseMeta.

        The newest id in this response.

        :param newest_id: The newest_id of this Get2UsersIdMentionsResponseMeta.
        :type newest_id: str
        """

        self._newest_id = newest_id

    @property
    def next_token(self):
        """Gets the next_token of this Get2UsersIdMentionsResponseMeta.

        The next token.

        :return: The next_token of this Get2UsersIdMentionsResponseMeta.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this Get2UsersIdMentionsResponseMeta.

        The next token.

        :param next_token: The next_token of this Get2UsersIdMentionsResponseMeta.
        :type next_token: str
        """
        if next_token is not None and len(next_token) < 1:
            raise ValueError("Invalid value for `next_token`, length must be greater than or equal to `1`")

        self._next_token = next_token

    @property
    def oldest_id(self):
        """Gets the oldest_id of this Get2UsersIdMentionsResponseMeta.

        The oldest id in this response.

        :return: The oldest_id of this Get2UsersIdMentionsResponseMeta.
        :rtype: str
        """
        return self._oldest_id

    @oldest_id.setter
    def oldest_id(self, oldest_id):
        """Sets the oldest_id of this Get2UsersIdMentionsResponseMeta.

        The oldest id in this response.

        :param oldest_id: The oldest_id of this Get2UsersIdMentionsResponseMeta.
        :type oldest_id: str
        """

        self._oldest_id = oldest_id

    @property
    def previous_token(self):
        """Gets the previous_token of this Get2UsersIdMentionsResponseMeta.

        The previous token.

        :return: The previous_token of this Get2UsersIdMentionsResponseMeta.
        :rtype: str
        """
        return self._previous_token

    @previous_token.setter
    def previous_token(self, previous_token):
        """Sets the previous_token of this Get2UsersIdMentionsResponseMeta.

        The previous token.

        :param previous_token: The previous_token of this Get2UsersIdMentionsResponseMeta.
        :type previous_token: str
        """
        if previous_token is not None and len(previous_token) < 1:
            raise ValueError("Invalid value for `previous_token`, length must be greater than or equal to `1`")

        self._previous_token = previous_token

    @property
    def result_count(self):
        """Gets the result_count of this Get2UsersIdMentionsResponseMeta.

        The number of results returned in this response.

        :return: The result_count of this Get2UsersIdMentionsResponseMeta.
        :rtype: int
        """
        return self._result_count

    @result_count.setter
    def result_count(self, result_count):
        """Sets the result_count of this Get2UsersIdMentionsResponseMeta.

        The number of results returned in this response.

        :param result_count: The result_count of this Get2UsersIdMentionsResponseMeta.
        :type result_count: int
        """

        self._result_count = result_count
