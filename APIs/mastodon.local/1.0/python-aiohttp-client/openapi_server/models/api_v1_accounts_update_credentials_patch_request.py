# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.api_v1_accounts_update_credentials_patch_request_source import ApiV1AccountsUpdateCredentialsPatchRequestSource
from openapi_server import util


class ApiV1AccountsUpdateCredentialsPatchRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, avatar: str=None, bot: bool=None, discoverable: str=None, display_name: str=None, fields_attributes: object=None, header: str=None, locked: bool=None, note: str=None, source: ApiV1AccountsUpdateCredentialsPatchRequestSource=None):
        """ApiV1AccountsUpdateCredentialsPatchRequest - a model defined in OpenAPI

        :param avatar: The avatar of this ApiV1AccountsUpdateCredentialsPatchRequest.
        :param bot: The bot of this ApiV1AccountsUpdateCredentialsPatchRequest.
        :param discoverable: The discoverable of this ApiV1AccountsUpdateCredentialsPatchRequest.
        :param display_name: The display_name of this ApiV1AccountsUpdateCredentialsPatchRequest.
        :param fields_attributes: The fields_attributes of this ApiV1AccountsUpdateCredentialsPatchRequest.
        :param header: The header of this ApiV1AccountsUpdateCredentialsPatchRequest.
        :param locked: The locked of this ApiV1AccountsUpdateCredentialsPatchRequest.
        :param note: The note of this ApiV1AccountsUpdateCredentialsPatchRequest.
        :param source: The source of this ApiV1AccountsUpdateCredentialsPatchRequest.
        """
        self.openapi_types = {
            'avatar': str,
            'bot': bool,
            'discoverable': str,
            'display_name': str,
            'fields_attributes': object,
            'header': str,
            'locked': bool,
            'note': str,
            'source': ApiV1AccountsUpdateCredentialsPatchRequestSource
        }

        self.attribute_map = {
            'avatar': 'avatar',
            'bot': 'bot',
            'discoverable': 'discoverable',
            'display_name': 'display_name',
            'fields_attributes': 'fields_attributes',
            'header': 'header',
            'locked': 'locked',
            'note': 'note',
            'source': 'source'
        }

        self._avatar = avatar
        self._bot = bot
        self._discoverable = discoverable
        self._display_name = display_name
        self._fields_attributes = fields_attributes
        self._header = header
        self._locked = locked
        self._note = note
        self._source = source

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiV1AccountsUpdateCredentialsPatchRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _api_v1_accounts_update_credentials_patch_request of this ApiV1AccountsUpdateCredentialsPatchRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def avatar(self):
        """Gets the avatar of this ApiV1AccountsUpdateCredentialsPatchRequest.

        Avatar image encoded using multipart/form-data

        :return: The avatar of this ApiV1AccountsUpdateCredentialsPatchRequest.
        :rtype: str
        """
        return self._avatar

    @avatar.setter
    def avatar(self, avatar):
        """Sets the avatar of this ApiV1AccountsUpdateCredentialsPatchRequest.

        Avatar image encoded using multipart/form-data

        :param avatar: The avatar of this ApiV1AccountsUpdateCredentialsPatchRequest.
        :type avatar: str
        """

        self._avatar = avatar

    @property
    def bot(self):
        """Gets the bot of this ApiV1AccountsUpdateCredentialsPatchRequest.

        Whether the account has a bot flag.

        :return: The bot of this ApiV1AccountsUpdateCredentialsPatchRequest.
        :rtype: bool
        """
        return self._bot

    @bot.setter
    def bot(self, bot):
        """Sets the bot of this ApiV1AccountsUpdateCredentialsPatchRequest.

        Whether the account has a bot flag.

        :param bot: The bot of this ApiV1AccountsUpdateCredentialsPatchRequest.
        :type bot: bool
        """

        self._bot = bot

    @property
    def discoverable(self):
        """Gets the discoverable of this ApiV1AccountsUpdateCredentialsPatchRequest.

        Whether the account should be shown in the profile directory.

        :return: The discoverable of this ApiV1AccountsUpdateCredentialsPatchRequest.
        :rtype: str
        """
        return self._discoverable

    @discoverable.setter
    def discoverable(self, discoverable):
        """Sets the discoverable of this ApiV1AccountsUpdateCredentialsPatchRequest.

        Whether the account should be shown in the profile directory.

        :param discoverable: The discoverable of this ApiV1AccountsUpdateCredentialsPatchRequest.
        :type discoverable: str
        """

        self._discoverable = discoverable

    @property
    def display_name(self):
        """Gets the display_name of this ApiV1AccountsUpdateCredentialsPatchRequest.

        The display name to use for the profile.

        :return: The display_name of this ApiV1AccountsUpdateCredentialsPatchRequest.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this ApiV1AccountsUpdateCredentialsPatchRequest.

        The display name to use for the profile.

        :param display_name: The display_name of this ApiV1AccountsUpdateCredentialsPatchRequest.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def fields_attributes(self):
        """Gets the fields_attributes of this ApiV1AccountsUpdateCredentialsPatchRequest.

        Profile metadata `name` and `value`. (By default, max 4 fields and 255 characters per property/value)

        :return: The fields_attributes of this ApiV1AccountsUpdateCredentialsPatchRequest.
        :rtype: object
        """
        return self._fields_attributes

    @fields_attributes.setter
    def fields_attributes(self, fields_attributes):
        """Sets the fields_attributes of this ApiV1AccountsUpdateCredentialsPatchRequest.

        Profile metadata `name` and `value`. (By default, max 4 fields and 255 characters per property/value)

        :param fields_attributes: The fields_attributes of this ApiV1AccountsUpdateCredentialsPatchRequest.
        :type fields_attributes: object
        """

        self._fields_attributes = fields_attributes

    @property
    def header(self):
        """Gets the header of this ApiV1AccountsUpdateCredentialsPatchRequest.

        Header image encoded using multipart/form-data

        :return: The header of this ApiV1AccountsUpdateCredentialsPatchRequest.
        :rtype: str
        """
        return self._header

    @header.setter
    def header(self, header):
        """Sets the header of this ApiV1AccountsUpdateCredentialsPatchRequest.

        Header image encoded using multipart/form-data

        :param header: The header of this ApiV1AccountsUpdateCredentialsPatchRequest.
        :type header: str
        """

        self._header = header

    @property
    def locked(self):
        """Gets the locked of this ApiV1AccountsUpdateCredentialsPatchRequest.

        Whether manual approval of follow requests is required.

        :return: The locked of this ApiV1AccountsUpdateCredentialsPatchRequest.
        :rtype: bool
        """
        return self._locked

    @locked.setter
    def locked(self, locked):
        """Sets the locked of this ApiV1AccountsUpdateCredentialsPatchRequest.

        Whether manual approval of follow requests is required.

        :param locked: The locked of this ApiV1AccountsUpdateCredentialsPatchRequest.
        :type locked: bool
        """

        self._locked = locked

    @property
    def note(self):
        """Gets the note of this ApiV1AccountsUpdateCredentialsPatchRequest.

        The account bio.

        :return: The note of this ApiV1AccountsUpdateCredentialsPatchRequest.
        :rtype: str
        """
        return self._note

    @note.setter
    def note(self, note):
        """Sets the note of this ApiV1AccountsUpdateCredentialsPatchRequest.

        The account bio.

        :param note: The note of this ApiV1AccountsUpdateCredentialsPatchRequest.
        :type note: str
        """

        self._note = note

    @property
    def source(self):
        """Gets the source of this ApiV1AccountsUpdateCredentialsPatchRequest.


        :return: The source of this ApiV1AccountsUpdateCredentialsPatchRequest.
        :rtype: ApiV1AccountsUpdateCredentialsPatchRequestSource
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this ApiV1AccountsUpdateCredentialsPatchRequest.


        :param source: The source of this ApiV1AccountsUpdateCredentialsPatchRequest.
        :type source: ApiV1AccountsUpdateCredentialsPatchRequestSource
        """

        self._source = source
