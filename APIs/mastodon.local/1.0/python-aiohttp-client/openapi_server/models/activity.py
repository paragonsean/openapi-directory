# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Activity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, logins: str=None, registrations: str=None, statuses: str=None, week: str=None):
        """Activity - a model defined in OpenAPI

        :param logins: The logins of this Activity.
        :param registrations: The registrations of this Activity.
        :param statuses: The statuses of this Activity.
        :param week: The week of this Activity.
        """
        self.openapi_types = {
            'logins': str,
            'registrations': str,
            'statuses': str,
            'week': str
        }

        self.attribute_map = {
            'logins': 'logins',
            'registrations': 'registrations',
            'statuses': 'statuses',
            'week': 'week'
        }

        self._logins = logins
        self._registrations = registrations
        self._statuses = statuses
        self._week = week

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Activity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Activity of this Activity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def logins(self):
        """Gets the logins of this Activity.

        User logins since the week began, String (cast from an integer).

        :return: The logins of this Activity.
        :rtype: str
        """
        return self._logins

    @logins.setter
    def logins(self, logins):
        """Sets the logins of this Activity.

        User logins since the week began, String (cast from an integer).

        :param logins: The logins of this Activity.
        :type logins: str
        """

        self._logins = logins

    @property
    def registrations(self):
        """Gets the registrations of this Activity.

        User registrations since the week began, String (cast from an integer).

        :return: The registrations of this Activity.
        :rtype: str
        """
        return self._registrations

    @registrations.setter
    def registrations(self, registrations):
        """Sets the registrations of this Activity.

        User registrations since the week began, String (cast from an integer).

        :param registrations: The registrations of this Activity.
        :type registrations: str
        """

        self._registrations = registrations

    @property
    def statuses(self):
        """Gets the statuses of this Activity.

        Statuses created since the week began, String (cast from an integer).

        :return: The statuses of this Activity.
        :rtype: str
        """
        return self._statuses

    @statuses.setter
    def statuses(self, statuses):
        """Sets the statuses of this Activity.

        Statuses created since the week began, String (cast from an integer).

        :param statuses: The statuses of this Activity.
        :type statuses: str
        """

        self._statuses = statuses

    @property
    def week(self):
        """Gets the week of this Activity.

        Midnight at the first day of the week.  (UNIX Timestamp).

        :return: The week of this Activity.
        :rtype: str
        """
        return self._week

    @week.setter
    def week(self, week):
        """Sets the week of this Activity.

        Midnight at the first day of the week.  (UNIX Timestamp).

        :param week: The week of this Activity.
        :type week: str
        """

        self._week = week
