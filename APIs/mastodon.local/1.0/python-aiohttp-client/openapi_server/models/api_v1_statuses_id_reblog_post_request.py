# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ApiV1StatusesIdReblogPostRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, visibility: str=None):
        """ApiV1StatusesIdReblogPostRequest - a model defined in OpenAPI

        :param visibility: The visibility of this ApiV1StatusesIdReblogPostRequest.
        """
        self.openapi_types = {
            'visibility': str
        }

        self.attribute_map = {
            'visibility': 'visibility'
        }

        self._visibility = visibility

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiV1StatusesIdReblogPostRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _api_v1_statuses__id__reblog_post_request of this ApiV1StatusesIdReblogPostRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def visibility(self):
        """Gets the visibility of this ApiV1StatusesIdReblogPostRequest.

        any visibility except limited or direct (i.e. public, unlisted, private). Defaults to public. Currently unused in UI.

        :return: The visibility of this ApiV1StatusesIdReblogPostRequest.
        :rtype: str
        """
        return self._visibility

    @visibility.setter
    def visibility(self, visibility):
        """Sets the visibility of this ApiV1StatusesIdReblogPostRequest.

        any visibility except limited or direct (i.e. public, unlisted, private). Defaults to public. Currently unused in UI.

        :param visibility: The visibility of this ApiV1StatusesIdReblogPostRequest.
        :type visibility: str
        """

        self._visibility = visibility
