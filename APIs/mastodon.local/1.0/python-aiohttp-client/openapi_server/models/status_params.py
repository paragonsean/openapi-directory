# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StatusParams(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_id: str=None, in_reply_to_id: str=None, media_ids: List[str]=None, scheduled_at: datetime=None, sensitive: bool=None, spoiler_text: str=None, text: str=None, visibility: str=None):
        """StatusParams - a model defined in OpenAPI

        :param application_id: The application_id of this StatusParams.
        :param in_reply_to_id: The in_reply_to_id of this StatusParams.
        :param media_ids: The media_ids of this StatusParams.
        :param scheduled_at: The scheduled_at of this StatusParams.
        :param sensitive: The sensitive of this StatusParams.
        :param spoiler_text: The spoiler_text of this StatusParams.
        :param text: The text of this StatusParams.
        :param visibility: The visibility of this StatusParams.
        """
        self.openapi_types = {
            'application_id': str,
            'in_reply_to_id': str,
            'media_ids': List[str],
            'scheduled_at': datetime,
            'sensitive': bool,
            'spoiler_text': str,
            'text': str,
            'visibility': str
        }

        self.attribute_map = {
            'application_id': 'application_id',
            'in_reply_to_id': 'in_reply_to_id',
            'media_ids': 'media_ids',
            'scheduled_at': 'scheduled_at',
            'sensitive': 'sensitive',
            'spoiler_text': 'spoiler_text',
            'text': 'text',
            'visibility': 'visibility'
        }

        self._application_id = application_id
        self._in_reply_to_id = in_reply_to_id
        self._media_ids = media_ids
        self._scheduled_at = scheduled_at
        self._sensitive = sensitive
        self._spoiler_text = spoiler_text
        self._text = text
        self._visibility = visibility

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StatusParams':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StatusParams of this StatusParams.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_id(self):
        """Gets the application_id of this StatusParams.

        application_id

        :return: The application_id of this StatusParams.
        :rtype: str
        """
        return self._application_id

    @application_id.setter
    def application_id(self, application_id):
        """Sets the application_id of this StatusParams.

        application_id

        :param application_id: The application_id of this StatusParams.
        :type application_id: str
        """

        self._application_id = application_id

    @property
    def in_reply_to_id(self):
        """Gets the in_reply_to_id of this StatusParams.

        in_reply_to_id

        :return: The in_reply_to_id of this StatusParams.
        :rtype: str
        """
        return self._in_reply_to_id

    @in_reply_to_id.setter
    def in_reply_to_id(self, in_reply_to_id):
        """Sets the in_reply_to_id of this StatusParams.

        in_reply_to_id

        :param in_reply_to_id: The in_reply_to_id of this StatusParams.
        :type in_reply_to_id: str
        """

        self._in_reply_to_id = in_reply_to_id

    @property
    def media_ids(self):
        """Gets the media_ids of this StatusParams.

        media_ids

        :return: The media_ids of this StatusParams.
        :rtype: List[str]
        """
        return self._media_ids

    @media_ids.setter
    def media_ids(self, media_ids):
        """Sets the media_ids of this StatusParams.

        media_ids

        :param media_ids: The media_ids of this StatusParams.
        :type media_ids: List[str]
        """

        self._media_ids = media_ids

    @property
    def scheduled_at(self):
        """Gets the scheduled_at of this StatusParams.

        scheduled_at

        :return: The scheduled_at of this StatusParams.
        :rtype: datetime
        """
        return self._scheduled_at

    @scheduled_at.setter
    def scheduled_at(self, scheduled_at):
        """Sets the scheduled_at of this StatusParams.

        scheduled_at

        :param scheduled_at: The scheduled_at of this StatusParams.
        :type scheduled_at: datetime
        """

        self._scheduled_at = scheduled_at

    @property
    def sensitive(self):
        """Gets the sensitive of this StatusParams.

        sensitive

        :return: The sensitive of this StatusParams.
        :rtype: bool
        """
        return self._sensitive

    @sensitive.setter
    def sensitive(self, sensitive):
        """Sets the sensitive of this StatusParams.

        sensitive

        :param sensitive: The sensitive of this StatusParams.
        :type sensitive: bool
        """

        self._sensitive = sensitive

    @property
    def spoiler_text(self):
        """Gets the spoiler_text of this StatusParams.

        spoiler_text

        :return: The spoiler_text of this StatusParams.
        :rtype: str
        """
        return self._spoiler_text

    @spoiler_text.setter
    def spoiler_text(self, spoiler_text):
        """Sets the spoiler_text of this StatusParams.

        spoiler_text

        :param spoiler_text: The spoiler_text of this StatusParams.
        :type spoiler_text: str
        """

        self._spoiler_text = spoiler_text

    @property
    def text(self):
        """Gets the text of this StatusParams.

        text

        :return: The text of this StatusParams.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this StatusParams.

        text

        :param text: The text of this StatusParams.
        :type text: str
        """

        self._text = text

    @property
    def visibility(self):
        """Gets the visibility of this StatusParams.

        visibility

        :return: The visibility of this StatusParams.
        :rtype: str
        """
        return self._visibility

    @visibility.setter
    def visibility(self, visibility):
        """Sets the visibility of this StatusParams.

        visibility

        :param visibility: The visibility of this StatusParams.
        :type visibility: str
        """

        self._visibility = visibility
