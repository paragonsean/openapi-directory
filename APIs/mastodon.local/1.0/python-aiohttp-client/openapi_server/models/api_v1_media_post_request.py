# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ApiV1MediaPostRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, file: file=None, focus: str=None, thumbnail: file=None):
        """ApiV1MediaPostRequest - a model defined in OpenAPI

        :param description: The description of this ApiV1MediaPostRequest.
        :param file: The file of this ApiV1MediaPostRequest.
        :param focus: The focus of this ApiV1MediaPostRequest.
        :param thumbnail: The thumbnail of this ApiV1MediaPostRequest.
        """
        self.openapi_types = {
            'description': str,
            'file': file,
            'focus': str,
            'thumbnail': file
        }

        self.attribute_map = {
            'description': 'description',
            'file': 'file',
            'focus': 'focus',
            'thumbnail': 'thumbnail'
        }

        self._description = description
        self._file = file
        self._focus = focus
        self._thumbnail = thumbnail

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiV1MediaPostRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _api_v1_media_post_request of this ApiV1MediaPostRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this ApiV1MediaPostRequest.

        A plain-text description of the media, for accessibility purposes.

        :return: The description of this ApiV1MediaPostRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ApiV1MediaPostRequest.

        A plain-text description of the media, for accessibility purposes.

        :param description: The description of this ApiV1MediaPostRequest.
        :type description: str
        """

        self._description = description

    @property
    def file(self):
        """Gets the file of this ApiV1MediaPostRequest.

        The file to be attached, using multipart form data.

        :return: The file of this ApiV1MediaPostRequest.
        :rtype: file
        """
        return self._file

    @file.setter
    def file(self, file):
        """Sets the file of this ApiV1MediaPostRequest.

        The file to be attached, using multipart form data.

        :param file: The file of this ApiV1MediaPostRequest.
        :type file: file
        """
        if file is None:
            raise ValueError("Invalid value for `file`, must not be `None`")

        self._file = file

    @property
    def focus(self):
        """Gets the focus of this ApiV1MediaPostRequest.

        Two floating points (x,y), comma-delimited, ranging from -1.0 to 1.0 (see “Focal points” below)

        :return: The focus of this ApiV1MediaPostRequest.
        :rtype: str
        """
        return self._focus

    @focus.setter
    def focus(self, focus):
        """Sets the focus of this ApiV1MediaPostRequest.

        Two floating points (x,y), comma-delimited, ranging from -1.0 to 1.0 (see “Focal points” below)

        :param focus: The focus of this ApiV1MediaPostRequest.
        :type focus: str
        """

        self._focus = focus

    @property
    def thumbnail(self):
        """Gets the thumbnail of this ApiV1MediaPostRequest.

        The custom thumbnail of the media to be attached, using multipart form data.

        :return: The thumbnail of this ApiV1MediaPostRequest.
        :rtype: file
        """
        return self._thumbnail

    @thumbnail.setter
    def thumbnail(self, thumbnail):
        """Sets the thumbnail of this ApiV1MediaPostRequest.

        The custom thumbnail of the media to be attached, using multipart form data.

        :param thumbnail: The thumbnail of this ApiV1MediaPostRequest.
        :type thumbnail: file
        """

        self._thumbnail = thumbnail
