openapi: 3.0.3
info:
  contact:
    email: sardo@hey.com
    name: Sardorbek Pulatov
  title: Mastodon API Specification (https://github.com/mastodon/mastodon)
  version: "1.0"
  x-apisguru-categories:
  - social
  x-origin:
  - format: openapi
    url: https://raw.githubusercontent.com/oneslash/mastodon/feat/add-open-api-spec/api-specification.yml
    version: "3.0"
  x-providerName: mastodon.local
  x-unofficialSpec: true
servers:
- url: http://mastodon.local
- url: https://mastodon.social
paths:
  /api/oembed:
    get:
      description: OEmbed as JSON
      operationId: api_oembed_get
      parameters:
      - description: URL of a status
        explode: true
        in: query
        name: url
        required: false
        schema:
          type: string
        style: form
      - description: width of the iframe. Defaults to 400
        explode: true
        in: query
        name: maxwidth
        required: false
        schema:
          default: 400
          type: integer
        style: form
      - description: height of the iframe. Defaults to null
        explode: true
        in: query
        name: maxheight
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/proofs:
    get:
      description: View identity proof
      operationId: api_proofs_get
      parameters:
      - description: The identity provider to be looked up. Currently only supports
          keybase (case-sensitive)
        explode: true
        in: query
        name: provider
        required: false
        schema:
          type: string
        style: form
      - description: The username on the selected identity provider
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProof'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/accounts:
    post:
      description: "Creates a user and account records. Returns an account access\
        \ token for the app that initiated the request. The app should save this token\
        \ for later, and should wait for the user to confirm their account by clicking\
        \ a link in their email inbox."
      operationId: api_v1_accounts_post
      requestBody:
        content:
          application/form-data:
            schema:
              $ref: '#/components/schemas/_api_v1_accounts_post_request'
        x-body-name: body
      responses:
        "200":
          description: Success
        "401":
          description: Unauthorized
      security:
      - bearerAuth: []
      tags:
      - TODOSecurity
      - accounts
      x-openapi-router-controller: openapi_server.controllers.todo_security_controller
      x-codegen-request-body-name: body
  /api/v1/accounts/relationships:
    get:
      description: Sets a private note on a user.
      operationId: api_v1_accounts_relationships_get
      parameters:
      - description: Array of account IDs to check
        explode: true
        in: query
        name: id
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Relationship'
                type: array
          description: Success.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      tags:
      - accounts
      x-openapi-router-controller: openapi_server.controllers.accounts_controller
  /api/v1/accounts/search:
    get:
      description: Search for matching accounts by username or display name.
      operationId: api_v1_accounts_search_get
      parameters:
      - description: What to search for
        explode: true
        in: query
        name: q
        required: true
        schema:
          type: string
        style: form
      - description: Maximum number of results. Defaults to 40.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 40
          type: integer
        style: form
      - description: Attempt WebFinger lookup. Defaults to false. Use this when `q`
          is an exact address.
        explode: true
        in: query
        name: resolve
        required: false
        schema:
          type: string
        style: form
      - description: Only who the user is following. Defaults to false.
        explode: true
        in: query
        name: following
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Account'
                type: array
          description: Accounts matching `q` in username or display name
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "resolve=true, but the domain part of the user@domain address\
            \ is not a currently live website"
      security:
      - bearerAuth: []
      tags:
      - accounts
      x-openapi-router-controller: openapi_server.controllers.accounts_controller
  /api/v1/accounts/update_credentials:
    patch:
      description: Update the user's display and preferences.
      operationId: api_v1_accounts_update_credentials_patch
      requestBody:
        content:
          application/form-data:
            schema:
              $ref: '#/components/schemas/_api_v1_accounts_update_credentials_patch_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: "You should use `accounts/verify_credentials` to first obtain\
            \ plaintext representations from within the `source` parameter, then allow\
            \ the user to edit these plaintext representations before submitting them\
            \ through this API. The server will generate the corresponding HTML."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
      security:
      - bearerAuth: []
      tags:
      - accounts
      x-openapi-router-controller: openapi_server.controllers.accounts_controller
      x-codegen-request-body-name: body
  /api/v1/accounts/verify_credentials:
    get:
      description: Test to make sure that the user token works.
      operationId: api_v1_accounts_verify_credentials_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: "Note the extra `source` property, which is not visible on\
            \ accounts other than your own. Also note that plain-text is used within\
            \ `source` and HTML is used for their corresponding properties such as\
            \ `note` and `fields`."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Your credential verification will fail if the token is invalid
            or incorrect.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Your user account is currently disabled, missing a confirmed\
            \ email address, or pending approval."
      security:
      - bearerAuth: []
      tags:
      - accounts
      x-openapi-router-controller: openapi_server.controllers.accounts_controller
  /api/v1/accounts/{id}:
    get:
      operationId: api_v1_accounts_id_get
      parameters:
      - description: The id of the account in the database
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Account record will be returned. Note that `acct` of local
            users does not include the domain name.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: If the instance is in whitelist mode and the Authorization
            header is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Account does not exist
        "410":
          description: Account is suspended
      security:
      - bearerAuth: []
      tags:
      - accounts
      x-openapi-router-controller: openapi_server.controllers.accounts_controller
  /api/v1/accounts/{id}/block:
    post:
      description: Block the given account. Clients should filter statuses from this
        account if received (e.g. due to a boost in the Home timeline).
      operationId: api_v1_accounts_id_block_post
      parameters:
      - description: The id of the account in the database
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Relationship'
          description: "Successfully blocked, or account was already blocked"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
      security:
      - bearerAuth: []
      tags:
      - accounts
      x-openapi-router-controller: openapi_server.controllers.accounts_controller
  /api/v1/accounts/{id}/featured_tags:
    get:
      description: Tags featured by this account.
      operationId: api_v1_accounts_id_featured_tags_get
      parameters:
      - description: The id of the account in the database
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FeaturedTag'
                type: array
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Invalid or missing Authorization header, or instance is in\
            \ whitelist mode and your token is not authorized with a user"
      security:
      - bearerAuth: []
      tags:
      - accounts
      x-openapi-router-controller: openapi_server.controllers.accounts_controller
  /api/v1/accounts/{id}/follow:
    post:
      description: Follow the given account. Can also be used to update whether to
        show reblogs or enable notifications.
      operationId: api_v1_accounts_id_follow_post
      parameters:
      - description: The id of the account in the database
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/form-data:
            schema:
              $ref: '#/components/schemas/_api_v1_accounts__id__follow_post_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Relationship'
          description: "Successfully followed, or account was already followed"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Trying to follow someone that you block or that blocks you
      security:
      - bearerAuth: []
      tags:
      - accounts
      x-openapi-router-controller: openapi_server.controllers.accounts_controller
      x-codegen-request-body-name: body
  /api/v1/accounts/{id}/followers:
    get:
      description: "Accounts which follow the given account, if network is not hidden\
        \ by the account owner."
      operationId: api_v1_accounts_id_followers_get
      parameters:
      - description: The id of the account in the database
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Internal parameter. Use HTTP `Link` header for pagination.
        explode: true
        in: query
        name: max_id
        required: false
        schema:
          type: string
        style: form
      - description: Internal parameter. Use HTTP `Link` header for pagination.
        explode: true
        in: query
        name: since_id
        required: false
        schema:
          type: string
        style: form
      - description: Maximum number of results to return. Defaults to 40.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 40
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Account'
                type: array
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Invalid or missing Authorization header, or instance is in\
            \ whitelist mode and your token is not authorized with a user"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Account is deleted or does not exist
        "410":
          description: Account is suspended
      security:
      - bearerAuth: []
      tags:
      - accounts
      x-openapi-router-controller: openapi_server.controllers.accounts_controller
  /api/v1/accounts/{id}/following:
    get:
      description: "Accounts which the given account is following, if network is not\
        \ hidden by the account owner."
      operationId: api_v1_accounts_id_following_get
      parameters:
      - description: The id of the account in the database
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Internal parameter. Use HTTP `Link` header for pagination.
        explode: true
        in: query
        name: max_id
        required: false
        schema:
          type: string
        style: form
      - description: Internal parameter. Use HTTP `Link` header for pagination.
        explode: true
        in: query
        name: since_id
        required: false
        schema:
          type: string
        style: form
      - description: Maximum number of results to return. Defaults to 40.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 40
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Account'
                type: array
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Invalid or missing Authorization header, or instance is in\
            \ whitelist mode and your token is not authorized with a user"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Account is deleted or does not exist
        "410":
          description: Account is suspended
      security:
      - bearerAuth: []
      tags:
      - accounts
      x-openapi-router-controller: openapi_server.controllers.accounts_controller
  /api/v1/accounts/{id}/identity_proofs:
    get:
      description: Array of IdentityProof
      operationId: api_v1_accounts_id_identity_proofs_get
      parameters:
      - description: The id of the account in the database
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IdentityProof'
                type: array
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Account is deleted or does not exist
        "410":
          description: Account with given id is suspended
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      tags:
      - accounts
      x-openapi-router-controller: openapi_server.controllers.accounts_controller
  /api/v1/accounts/{id}/lists:
    get:
      description: User lists that you have added this account to.
      operationId: api_v1_accounts_id_lists_get
      parameters:
      - description: The id of the account in the database
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/List'
                type: array
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Invalid or missing Authorization header, or instance is in\
            \ whitelist mode and your token is not authorized with a user"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Account is deleted or does not exist
        "410":
          description: Account is suspended
      security:
      - bearerAuth: []
      tags:
      - accounts
      x-openapi-router-controller: openapi_server.controllers.accounts_controller
  /api/v1/accounts/{id}/mute:
    post:
      description: "Mute the given account. Clients should filter statuses and notifications\
        \ from this account, if received (e.g. due to a boost in the Home timeline)."
      operationId: api_v1_accounts_id_mute_post
      parameters:
      - description: The id of the account in the database
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/form-data:
            schema:
              $ref: '#/components/schemas/_api_v1_accounts__id__mute_post_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Relationship'
          description: "Successfully muted, or account was already muted. Note that\
            \ you can call this API method again with notifications=false to update\
            \ the relationship so that only statuses are muted."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
      security:
      - bearerAuth: []
      tags:
      - accounts
      x-openapi-router-controller: openapi_server.controllers.accounts_controller
      x-codegen-request-body-name: body
  /api/v1/accounts/{id}/note:
    post:
      description: Sets a private note on a user.
      operationId: api_v1_accounts_id_note_post
      parameters:
      - description: The id of the account in the database
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/form-data:
            schema:
              $ref: '#/components/schemas/_api_v1_accounts__id__note_post_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Relationship'
          description: "Successfully unmuted, or account was already unmuted."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
        "422":
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      tags:
      - accounts
      x-openapi-router-controller: openapi_server.controllers.accounts_controller
      x-codegen-request-body-name: body
  /api/v1/accounts/{id}/pin:
    post:
      description: Add the given account to the user's featured profiles. (Featured
        profiles are currently shown on the user's own public profile.)
      operationId: api_v1_accounts_id_pin_post
      parameters:
      - description: The id of the account in the database
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Relationship'
          description: "Successfully unmuted, or account was already unmuted."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Token is not authorized with a valid user or is missing a required
            scope
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: You are not following this account
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Account already endorsed
      security:
      - bearerAuth: []
      tags:
      - accounts
      x-openapi-router-controller: openapi_server.controllers.accounts_controller
  /api/v1/accounts/{id}/statuses:
    get:
      description: Statuses posted to the given account.
      operationId: api_v1_accounts_id_statuses_get
      parameters:
      - description: The id of the account in the database
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Status'
                type: array
          description: "Statuses posted to the given account. Public (for public statuses\
            \ only), or user token + read:statuses (for private statuses the user\
            \ is authorized to see)"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Instance is in whitelist mode or running a version of Mastodon\
            \ older than 2.7.0, and the Authorization header is invalid or missing"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Account is deleted or does not exist
        "410":
          description: Account is suspended
      security:
      - bearerAuth: []
      tags:
      - accounts
      x-openapi-router-controller: openapi_server.controllers.accounts_controller
  /api/v1/accounts/{id}/unblock:
    post:
      description: Block the given account. Clients should filter statuses from this
        account if received (e.g. due to a boost in the Home timeline).
      operationId: api_v1_accounts_id_unblock_post
      parameters:
      - description: The id of the account in the database
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Relationship'
          description: "Successfully unblocked, or account was already not blocked"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
      security:
      - bearerAuth: []
      tags:
      - accounts
      x-openapi-router-controller: openapi_server.controllers.accounts_controller
  /api/v1/accounts/{id}/unfollow:
    post:
      description: Unfollow the given account.
      operationId: api_v1_accounts_id_unfollow_post
      parameters:
      - description: The id of the account in the database
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Relationship'
          description: "Successfully unfollowed, or account was already not followed"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
      security:
      - bearerAuth: []
      tags:
      - accounts
      x-openapi-router-controller: openapi_server.controllers.accounts_controller
  /api/v1/accounts/{id}/unmute:
    post:
      description: Unmute the given account.
      operationId: api_v1_accounts_id_unmute_post
      parameters:
      - description: The id of the account in the database
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Relationship'
          description: "Successfully unmuted, or account was already unmuted."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
      security:
      - bearerAuth: []
      tags:
      - accounts
      x-openapi-router-controller: openapi_server.controllers.accounts_controller
  /api/v1/accounts/{id}/unpin:
    post:
      description: Remove the given account from the user's featured profiles.
      operationId: api_v1_accounts_id_unpin_post
      parameters:
      - description: The id of the account in the database
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Relationship'
          description: "Successfully unmuted, or account was already unmuted."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
        "422":
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      tags:
      - accounts
      x-openapi-router-controller: openapi_server.controllers.accounts_controller
  /api/v1/admin/accounts:
    get:
      description: "View accounts matching certain criteria for filtering, up to 100\
        \ at a time. Pagination may be done with the HTTP Link header in the response."
      operationId: api_v1_admin_accounts_get
      parameters:
      - description: Filter for local accounts?
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter for remote accounts?
        explode: true
        in: query
        name: remote
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter by the given domain
        explode: true
        in: query
        name: by_domain
        required: false
        schema:
          type: string
        style: form
      - description: Filter for currently active accounts?
        explode: true
        in: query
        name: active
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter for currently pending accounts?
        explode: true
        in: query
        name: pending
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter for currently disabled accounts?
        explode: true
        in: query
        name: disabled
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter for currently silenced accounts?
        explode: true
        in: query
        name: silenced
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter for currently suspended accounts?
        explode: true
        in: query
        name: suspended
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter for staff accounts?
        explode: true
        in: query
        name: staff
        required: false
        schema:
          type: boolean
        style: form
      - description: Username to search for
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Display name to search for
        explode: true
        in: query
        name: display_name
        required: false
        schema:
          type: string
        style: form
      - description: Lookup a user with this email
        explode: true
        in: query
        name: email
        required: false
        schema:
          type: string
        style: form
      - description: Lookup a user with this IP
        explode: true
        in: query
        name: ip
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AdminAccount'
                type: array
          description: Success
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/admin/accounts/{id}:
    get:
      description: View admin-level information about the given account.
      operationId: api_v1_admin_accounts_id_get
      parameters:
      - description: ID of the account
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminAccount'
          description: Success
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/admin/accounts/{id}/action:
    post:
      description: Perform an action against an account and log this action in the
        moderation history.
      operationId: api_v1_admin_accounts_id_action_post
      parameters:
      - description: ID of the account
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_api_v1_admin_accounts__id__action_post_request'
        x-body-name: body
      responses:
        "200":
          description: Success
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /api/v1/admin/accounts/{id}/approve:
    post:
      description: Approve the given local account if it is currently pending approval.
      operationId: api_v1_admin_accounts_id_approve_post
      parameters:
      - description: ID of the account
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/admin/accounts/{id}/enable:
    post:
      description: Re-enable a local account whose login is currently disabled.
      operationId: api_v1_admin_accounts_id_enable_post
      parameters:
      - description: ID of the account
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/admin/accounts/{id}/reject:
    post:
      description: Reject the given local account if it is currently pending approval.
      operationId: api_v1_admin_accounts_id_reject_post
      parameters:
      - description: ID of the account
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/admin/accounts/{id}/unsilence:
    post:
      description: Unsilence a currently silenced account.
      operationId: api_v1_admin_accounts_id_unsilence_post
      parameters:
      - description: ID of the account
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/admin/accounts/{id}/unsuspend:
    post:
      description: Unsuspend a currently suspended account.
      operationId: api_v1_admin_accounts_id_unsuspend_post
      parameters:
      - description: ID of the account
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/admin/reports:
    get:
      description: View all reports. Pagination may be done with HTTP Link header
        in the response.
      operationId: api_v1_admin_reports_get
      parameters:
      - explode: true
        in: query
        name: resolved
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: account_id
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: target_account_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AdminReport'
                type: array
          description: Success
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/admin/reports/{id}:
    get:
      description: View information about the report with the given ID.
      operationId: api_v1_admin_reports_id_get
      parameters:
      - description: ID of the report
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminReport'
          description: Success
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/admin/reports/{id}/assign_to_self:
    post:
      description: Claim the handling of this report to yourself.
      operationId: api_v1_admin_reports_id_assign_to_self_post
      parameters:
      - description: ID of the report
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminReport'
          description: Success
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/admin/reports/{id}/reopen:
    post:
      description: Mark a report as resolved with no further action taken.
      operationId: api_v1_admin_reports_id_reopen_post
      parameters:
      - description: ID of the report
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminReport'
          description: Success
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/admin/reports/{id}/resolve:
    post:
      description: Mark a report as resolved with no further action taken.
      operationId: api_v1_admin_reports_id_resolve_post
      parameters:
      - description: ID of the report
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminReport'
          description: Success
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/admin/reports/{id}/unassign:
    post:
      description: Unassign a report so that someone else can claim it.
      operationId: api_v1_admin_reports_id_unassign_post
      parameters:
      - description: ID of the report
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminReport'
          description: Success
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/announcements:
    get:
      description: See all currently active announcements set by admins.
      operationId: api_v1_announcements_get
      parameters:
      - description: "If true, response will include announcements dismissed by the\
          \ user. Defaults to false."
        explode: true
        in: query
        name: with_dismissed
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Announcement'
                type: array
          description: Success
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/announcements/{id}/dismiss:
    post:
      description: Allows a user to mark the announcement as read.
      operationId: api_v1_announcements_id_dismiss_post
      parameters:
      - description: Local ID of an announcement in the database.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Success
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/announcements/{id}/reactions/{name}:
    delete:
      description: Undo a react emoji to an announcement.
      operationId: api_v1_announcements_id_reactions_name_delete
      parameters:
      - description: Local ID of an announcement in the database.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Unicode emoji, or shortcode of custom emoji"
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Success
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: Allows a user to mark the announcement as read.
      operationId: api_v1_announcements_id_reactions_name_put
      parameters:
      - description: Local ID of an announcement in the database.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Unicode emoji, or shortcode of custom emoji"
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Success
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/apps:
    post:
      description: Create a new application to obtain OAuth2 credentials.
      operationId: api_v1_apps_post
      requestBody:
        content:
          application/form-data:
            schema:
              $ref: '#/components/schemas/_api_v1_apps_post_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_api_v1_apps_post_200_response'
          description: Success
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "If a required parameter is missing or improperly formatted,\
            \ the request will fail."
      tags:
      - apps
      x-openapi-router-controller: openapi_server.controllers.apps_controller
      x-codegen-request-body-name: body
  /api/v1/apps/verify_credentials:
    get:
      description: Confirm that the app's OAuth2 credentials work.
      operationId: api_v1_apps_verify_credentials_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: "If the Authorization header was provided with a valid token,\
            \ you should see your app returned as an Application entity."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "If the Authorization header contains an invalid token, is\
            \ malformed, or is not present, an error will be returned indicating an\
            \ authorization failure."
      security:
      - bearerAuth: []
      tags:
      - apps
      x-openapi-router-controller: openapi_server.controllers.apps_controller
  /api/v1/blocks:
    get:
      description: Get blocked users.
      operationId: api_v1_blocks_get
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: max_id
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: since_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Account'
                type: array
          description: success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/bookmarks:
    get:
      description: Statuses the user has bookmarked.
      operationId: api_v1_bookmarks_get
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: max_id
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: since_id
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: min_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Status'
                type: array
          description: success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/conversations:
    get:
      description: Show conversation.
      operationId: api_v1_conversations_get
      parameters:
      - description: Max number of results to return. Defaults to 20.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          type: integer
        style: form
      - description: Return results older than ID
        explode: true
        in: query
        name: max_id
        required: false
        schema:
          type: string
        style: form
      - description: Return results newer than ID
        explode: true
        in: query
        name: since_id
        required: false
        schema:
          type: string
        style: form
      - description: Return results immediately newer than ID
        explode: true
        in: query
        name: min_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Conversation'
                type: array
          description: Success.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/conversations/{id}:
    delete:
      description: Remove converstation
      operationId: api_v1_conversations_id_delete
      parameters:
      - description: ID of the conversation in the database
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Success.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/conversations/{id}/read:
    post:
      description: Remove converstation
      operationId: api_v1_conversations_id_read_post
      parameters:
      - description: ID of the conversation in the database
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversation'
          description: The value of unread has been changed to false..
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/custom_emojis:
    get:
      description: Returns custom emojis that are available on the server.
      operationId: api_v1_custom_emojis_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Emoji'
                type: array
          description: List of Emojis
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/directory:
    get:
      description: List accounts visible in the directory.
      operationId: api_v1_directory_get
      parameters:
      - description: How many accounts to load. Default 40.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 40
          type: integer
        style: form
      - description: How many accounts to skip before returning results. Default 0.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: the `active` to sort by most recently posted statuses (default)
          or `new` to sort by most recently created profiles.
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: active
          enum:
          - active
          - new
          type: string
        style: form
      - description: Only return local accounts.
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Account'
                type: array
          description: List of accounts
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/domain_blocks:
    delete:
      description: "Remove a domain block, if it exists in the user's array of blocked\
        \ domains."
      operationId: api_v1_domain_blocks_delete
      parameters:
      - description: Domain to unblock.
        explode: true
        in: query
        name: domain
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "If `domain` is not provided or contains spaces, the request\
            \ will fail."
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: View domains the user has blocked.
      operationId: api_v1_domain_blocks_get
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: max_id
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: since_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: |
        "Block a domain to:
        - hide all public posts from it
        - hide all notifications from it
        - remove all followers from it
        - prevent following new users from it (but does not remove existing follows)"
      operationId: api_v1_domain_blocks_post
      requestBody:
        content:
          application/form-data:
            schema:
              $ref: '#/components/schemas/_api_v1_domain_blocks_post_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "If `domain` is not provided or contains spaces, the request\
            \ will fail."
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /api/v1/endorsements:
    get:
      description: Accounts that the user is currently featuring on their profile.
      operationId: api_v1_endorsements_get
      parameters:
      - description: Maximum number of results to return. Defaults to 40. Paginate
          using the HTTP Link header.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 40
          type: integer
        style: form
      - description: Internal parameter. Use HTTP Link header from response for pagination
        explode: true
        in: query
        name: max_id
        required: false
        schema:
          type: string
        style: form
      - description: Internal parameter. Use HTTP Link header from response for pagination.
        explode: true
        in: query
        name: since_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Account'
                type: array
          description: "Success. Because endorsement ids are private, you must parse\
            \ the HTTP Link header to find next and previous pages."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/favourites:
    get:
      description: Statuses the user has favourited.
      operationId: api_v1_favourites_get
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: max_id
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: min_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Status'
                type: array
          description: success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/featured_tags:
    get:
      description: View your featured tags.
      operationId: api_v1_featured_tags_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FeaturedTag'
                type: array
          description: Success.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Create a feature a tag.
      operationId: api_v1_featured_tags_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_api_v1_featured_tags_post_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeaturedTag'
          description: Success.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "If name is not a valid hashtag, e.g. contains illegal characters\
            \ or only numbers"
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /api/v1/featured_tags/suggestions:
    get:
      description: "Shows your 10 most-used tags, with usage history for the past\
        \ week."
      operationId: api_v1_featured_tags_suggestions_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FeaturedTag'
                type: array
          description: Success.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/featured_tags/{id}:
    delete:
      description: Unfeature a tag
      operationId: api_v1_featured_tags_id_delete
      parameters:
      - description: The id of the FeaturedTag to be unfeatured.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: An empty object will be returned if the featured tag was successfully
            deleted.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: If the ID does not exist or is not owned by you
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/filters:
    get:
      operationId: api_v1_filters_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Filter'
                type: array
          description: Excerpts of various filters in different contexts.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      operationId: api_v1_filters_post
      requestBody:
        content:
          application/form-data:
            schema:
              $ref: '#/components/schemas/_api_v1_filters_post_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Filter'
          description: The newly-created filter will be returned.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: If phrase or context are not provided properly
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /api/v1/filters/{id}:
    delete:
      description: Delete a filter.
      operationId: api_v1_filters_id_delete
      parameters:
      - description: The id of the account in the database
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: "The filter has been deleted successfully, so an empty object\
            \ will be returned."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Filter ID does not exist, or is not owned by you"
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Get one filter.
      operationId: api_v1_filters_id_get
      parameters:
      - description: The id of the account in the database
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Filter'
          description: Filter returned successfully.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Filter ID does not exist, or is not owned by you"
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: Update a filter.
      operationId: api_v1_filters_id_put
      parameters:
      - description: The id of the account in the database
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/form-data:
            schema:
              $ref: '#/components/schemas/_api_v1_filters_post_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Filter'
          description: Filter updated successfully.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Filter ID does not exist, or is not owned by you"
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: If phrase or context are not provided properly
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /api/v1/follow_requests:
    get:
      description: Pending Follows
      operationId: api_v1_follow_requests_get
      parameters:
      - description: Maximum number of results to return. Defaults to 40. Paginate
          using the HTTP Link header.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 40
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Account'
                type: array
          description: Accounts that are requesting a follow.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/follow_requests/{id}/authorize:
    post:
      description: Accept Follow
      operationId: api_v1_follow_requests_id_authorize_post
      parameters:
      - description: The id of the account in the database
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Relationship'
          description: Your Relationship with this account should be updated so that
            you are followed_by this account.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No pending follow request from that user ID
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/follow_requests/{id}/reject:
    post:
      description: Accept Follow
      operationId: api_v1_follow_requests_id_reject_post
      parameters:
      - description: The id of the account in the database
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Relationship'
          description: Your Relationship with this Account should be unchanged.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No pending follow request from that user ID
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/instance:
    get:
      description: Information about the server.
      operationId: api_v1_instance_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instance'
          description: Result
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/instance/activity:
    get:
      description: "Instance activity over the last 3 months, binned weekly."
      operationId: api_v1_instance_activity_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Activity'
                type: array
          description: Domains that this instance is aware of.
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/instance/peers:
    get:
      description: Information about the server.
      operationId: api_v1_instance_peers_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: Domains that this instance is aware of.
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/lists:
    delete:
      description: Delete a list
      operationId: api_v1_lists_delete
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: A list was deleted successfully
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Fetch all lists that the user owns.
      operationId: api_v1_lists_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/List'
                type: array
          description: Use id as a parameter for related API calls.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Create a new list.
      operationId: api_v1_lists_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_api_v1_lists_post_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List'
          description: A list was created successfully
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
    put:
      description: "Change the title of a list, or which replies to show."
      operationId: api_v1_lists_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_api_v1_lists_put_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List'
          description: A list was updated successfully
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /api/v1/lists/{id}:
    get:
      description: Remove converstation
      operationId: api_v1_lists_id_get
      parameters:
      - description: ID of the list in the database
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List'
          description: The value of unread has been changed to false..
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/lists/{id}/accounts:
    delete:
      description: Remove accounts from the given list.
      operationId: api_v1_lists_id_accounts_delete
      parameters:
      - description: ID of the list in the database
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Array of account IDs to add to the list.
        explode: true
        in: query
        name: account_ids
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: "Account was successfully removed from the list, or it was\
            \ already not in the list."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: View accounts in List
      operationId: api_v1_lists_id_accounts_get
      parameters:
      - description: ID of the list in the database
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Maximum number of results. Defaults to 40. Max 40. Set to 0 in
          order to get all accounts without pagination. Pagination is done with the
          HTTP Link header.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 40
          type: integer
        style: form
      - description: Return results older than ID
        explode: true
        in: query
        name: max_id
        required: false
        schema:
          type: string
        style: form
      - description: Return results newer than ID
        explode: true
        in: query
        name: since_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Account'
                type: array
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Add accounts to the given list. Note that the user must be following
        these accounts.
      operationId: api_v1_lists_id_accounts_post
      parameters:
      - description: ID of the list in the database
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_api_v1_lists__id__accounts_post_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /api/v1/markers:
    get:
      description: Get saved timeline position
      operationId: api_v1_markers_get
      parameters:
      - description: "Array of markers to fetch. String enum anyOf home, notifications.\
          \ If not provided, an empty object will be returned."
        explode: true
        in: query
        name: timeline
        required: true
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: "Account was successfully removed from the list, or it was\
            \ already not in the list."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Get saved timeline position
      operationId: api_v1_markers_post
      requestBody:
        content:
          application/json:
            schema:
              type: object
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: "Account was successfully removed from the list, or it was\
            \ already not in the list."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Conflict, If object is stale while being updated, an error\
            \ will occur."
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /api/v1/media:
    post:
      description: Creates an attachment to be used with a new status.
      operationId: api_v1_media_post
      requestBody:
        content:
          application/form-data:
            schema:
              $ref: '#/components/schemas/_api_v1_media_post_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Attachment created successfully. Note that the Attachment will
            be created even if the file is not understood correctly.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: File or file type is unsupported or invalid
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /api/v1/media/{id}:
    get:
      description: Get an attachement.
      operationId: api_v1_media_id_get
      parameters:
      - description: The id of the Attachment entity to be updated.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Attachment created successfully. Note that the Attachment will
            be created even if the file is not understood correctly.
        "206":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Attachment is not yet ready.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Attachment does not exist, is deleted, or was not created\
            \ by you"
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: File or file type is unsupported or invalid
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "Update an Attachment, before it is attached to a status and posted."
      operationId: api_v1_media_id_post
      parameters:
      - description: The id of the Attachment entity to be updated.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/form-data:
            schema:
              $ref: '#/components/schemas/_api_v1_media_post_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Attachment updated successfully.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Attachment does not exist, is deleted, or was not created\
            \ by you"
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: File or file type is unsupported or invalid
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /api/v1/mutes:
    get:
      description: Accounts the user has muted.
      operationId: api_v1_mutes_get
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: max_id
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: since_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Account'
                type: array
          description: success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/notifications:
    get:
      description: "Notifications concerning the user. This API returns Link headers\
        \ containing links to the next/previous page. However, the links can also\
        \ be constructed dynamically using query params and id values."
      operationId: api_v1_notifications_get
      parameters:
      - description: Max number of results to return. Defaults to 20.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          type: integer
        style: form
      - description: Return results older than ID
        explode: true
        in: query
        name: max_id
        required: false
        schema:
          type: string
        style: form
      - description: Return results newer than ID
        explode: true
        in: query
        name: since_id
        required: false
        schema:
          type: string
        style: form
      - description: Return results immediately newer than ID
        explode: true
        in: query
        name: min_id
        required: false
        schema:
          type: string
        style: form
      - description: "Array of types to exclude (follow, favourite, reblog, mention,\
          \ poll, follow_request)"
        explode: true
        in: query
        name: exclude_types
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Return only notifications received from this account
        explode: true
        in: query
        name: account_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Notification'
                type: array
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/notifications/clear:
    post:
      description: Clear all notifications from the server.
      operationId: api_v1_notifications_clear_post
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/notifications/{id}:
    get:
      description: View information about a notification with a given ID.
      operationId: api_v1_notifications_id_get
      parameters:
      - description: ID of the notification in the database.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/notifications/{id}/dismiss:
    post:
      description: Clear a single notification from the server.
      operationId: api_v1_notifications_id_dismiss_post
      parameters:
      - description: ID of the notification in the database.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: Notification with given ID successfully dismissed
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/polls/{id}:
    get:
      description: View a poll.
      operationId: api_v1_polls_id_get
      parameters:
      - description: ID of the poll in the database.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Poll'
          description: Get one poll.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Poll does not exist, or poll's parent status is private"
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Vote on a poll.
      operationId: api_v1_polls_id_post
      parameters:
      - description: ID of the poll in the database.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_api_v1_polls__id__post_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Poll'
          description: Get one poll.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Poll does not exist, or poll's parent status is private."
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Already voted or poll is expired.
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /api/v1/preferences:
    get:
      description: "Shows your 10 most-used tags, with usage history for the past\
        \ week."
      operationId: api_v1_preferences_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Preferences'
          description: Success.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/push/subscription:
    delete:
      description: "Updates the current push subscription. Only the data part can\
        \ be updated. To change fundamentals, a new subscription must be created instead."
      operationId: api_v1_push_subscription_delete
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Updating a PushSubscription to only receive mention alerts
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: View the PushSubscription currently associated with this access
        token.
      operationId: api_v1_push_subscription_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushSubscription'
          description: Get one PushSubscription
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "Add a Web Push API subscription to receive notifications. Each\
        \ access token can have one push subscription. If you create a new subscription,\
        \ the old subscription is deleted."
      operationId: api_v1_push_subscription_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_api_v1_push_subscription_post_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushSubscription'
          description: PushSubscription created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
    put:
      description: "Updates the current push subscription. Only the data part can\
        \ be updated. To change fundamentals, a new subscription must be created instead."
      operationId: api_v1_push_subscription_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_api_v1_push_subscription_put_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushSubscription'
          description: Updating a PushSubscription to only receive mention alerts
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /api/v1/reports:
    post:
      description: File a report.
      operationId: api_v1_reports_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_api_v1_reports_post_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
          description: Successfully reported.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /api/v1/scheduled_statuses:
    get:
      description: View scheduled statuses
      operationId: api_v1_scheduled_statuses_get
      parameters:
      - description: Max number of results to return. Defaults to 20.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          type: integer
        style: form
      - description: Return results older than ID
        explode: true
        in: query
        name: max_id
        required: false
        schema:
          type: string
        style: form
      - description: Return results newer than ID
        explode: true
        in: query
        name: since_id
        required: false
        schema:
          type: string
        style: form
      - description: Return results immediately newer than ID
        explode: true
        in: query
        name: min_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ScheduledStatus'
                type: array
          description: Get scheduled statuses.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/scheduled_statuses/{id}:
    delete:
      description: Cancel a scheduled status
      operationId: api_v1_scheduled_statuses_id_delete
      parameters:
      - description: ID of the scheduled status in the database.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Success.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: View a single scheduled status
      operationId: api_v1_scheduled_statuses_id_get
      parameters:
      - description: ID of the scheduled status in the database.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledStatus'
          description: Success.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: View a single scheduled status
      operationId: api_v1_scheduled_statuses_id_put
      parameters:
      - description: ID of the scheduled status in the database.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_api_v1_scheduled_statuses__id__put_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledStatus'
          description: Success.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /api/v1/statuses:
    post:
      operationId: api_v1_statuses_post
      parameters:
      - description: "Prevent duplicate submissions of the same status. Idempotency\
          \ keys are stored for up to 1 hour, and can be any arbitrary string. Consider\
          \ using a hash or UUID generated client-side."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/_api_v1_statuses_post_request_inner'
              type: array
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_api_v1_statuses_post_200_response'
          description: "Status will be posted with chosen parameters. If scheduled_at\
            \ is provided, then a ScheduledStatus will be returned instead."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /api/v1/statuses/{id}:
    delete:
      operationId: api_v1_statuses_id_delete
      parameters:
      - description: Local ID of a status in the database.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: "Status will be posted with chosen parameters. If scheduled_at\
            \ is provided, then a ScheduledStatus will be returned instead."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Status does not exist, is deleted, or is private."
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      operationId: api_v1_statuses_id_get
      parameters:
      - description: Local ID of a status in the database.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: "Status will be posted with chosen parameters. If scheduled_at\
            \ is provided, then a ScheduledStatus will be returned instead."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Status does not exist, is deleted, or is private."
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/statuses/{id}/bookmark:
    post:
      description: Privately bookmark a status.
      operationId: api_v1_statuses_id_bookmark_post
      parameters:
      - description: Local ID of a status in the database.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Status bookmarked
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Status does not exist, is deleted, or is private"
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/statuses/{id}/context:
    get:
      operationId: api_v1_statuses_id_context_get
      parameters:
      - description: Local ID of a status in the database.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Context'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Status does not exist, is deleted, or is private"
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/statuses/{id}/favourite:
    post:
      description: Add a status to your favourites list.
      operationId: api_v1_statuses_id_favourite_post
      parameters:
      - description: Local ID of a status in the database.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Status does not exist, is deleted, or is private"
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/statuses/{id}/favourited_by:
    get:
      description: View who favourited a given status.
      operationId: api_v1_statuses_id_favourited_by_get
      parameters:
      - description: Local ID of a status in the database.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Status does not exist, is deleted, or is private"
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/statuses/{id}/mute:
    post:
      description: Do not receive notifications for the thread that this status is
        part of. Must be a thread in which you are a participant.
      operationId: api_v1_statuses_id_mute_post
      parameters:
      - description: Local ID of a status in the database.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: "Status's conversation muted, or was already muted"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Status does not exist, is deleted, or is private"
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/statuses/{id}/pin:
    post:
      description: Feature one of your own public statuses at the top of your profile.
      operationId: api_v1_statuses_id_pin_post
      parameters:
      - description: Local ID of a status in the database.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Status pinned. Note the status is not a reblog and its authoring
            account is your own.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Status does not exist, is deleted, or is private"
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Status is not owned by you, or is not public. You cannot pin\
            \ one of your private statuses because private statuses cannot be fetched\
            \ from remote sites, and must be delivered."
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/statuses/{id}/reblog:
    post:
      description: Reshare a status.
      operationId: api_v1_statuses_id_reblog_post
      parameters:
      - description: Local ID of a status in the database.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_api_v1_statuses__id__reblog_post_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Status has been reblogged. Note that the top-level id has changed.
            The id of the boosted status is now inside the reblog property. The top-level
            id is the id of the reblog itself. Also note that reblogs cannot be pinned.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Status does not exist, is deleted, or is private"
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /api/v1/statuses/{id}/reblogged_by:
    get:
      description: View who boosted a given status.
      operationId: api_v1_statuses_id_reblogged_by_get
      parameters:
      - description: Local ID of a status in the database.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Status does not exist, is deleted, or is private"
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/statuses/{id}/unbookmark:
    post:
      description: Remove a status from your private bookmarks.
      operationId: api_v1_statuses_id_unbookmark_post
      parameters:
      - description: Local ID of a status in the database.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Status unbookmarked
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Status does not exist, is deleted, or is private"
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/statuses/{id}/unfavourite:
    post:
      description: Remove a status from your favourites list.
      operationId: api_v1_statuses_id_unfavourite_post
      parameters:
      - description: Local ID of a status in the database.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Status does not exist, is deleted, or is private"
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/statuses/{id}/unmute:
    post:
      description: "Status's conversation unmuted, or was already unmuted"
      operationId: api_v1_statuses_id_unmute_post
      parameters:
      - description: Local ID of a status in the database.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: "Status's conversation muted, or was already muted"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Status does not exist, is deleted, or is private"
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/statuses/{id}/unpin:
    post:
      description: Unfeature a status from the top of your profile.
      operationId: api_v1_statuses_id_unpin_post
      parameters:
      - description: Local ID of a status in the database.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: "Status unpinned, or was already not pinned"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Status does not exist, is deleted, or is private"
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/statuses/{id}/unreblog:
    post:
      description: Undo a reshare of a status.
      operationId: api_v1_statuses_id_unreblog_post
      parameters:
      - description: Local ID of a status in the database.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Status no longer reblogged
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Status does not exist, is deleted, or is private"
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/suggestions:
    get:
      description: "Accounts the user has had past positive interactions with, but\
        \ is not yet following."
      operationId: api_v1_suggestions_get
      parameters:
      - description: Maximum number of results to return. Defaults to 40.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 40
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Success.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/suggestions/{id}:
    delete:
      description: Delete user suggestion
      operationId: api_v1_suggestions_id_delete
      parameters:
      - description: id of the account in the database to be removed from suggestions
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Successfully removed
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/timelines/home:
    get:
      description: View statuses from followed users.
      operationId: api_v1_timelines_home_get
      parameters:
      - description: Show only local statuses? Defaults to false.
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Max number of results to return. Defaults to 20.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          type: integer
        style: form
      - description: Return results older than ID
        explode: true
        in: query
        name: max_id
        required: false
        schema:
          type: string
        style: form
      - description: Return results newer than ID
        explode: true
        in: query
        name: since_id
        required: false
        schema:
          type: string
        style: form
      - description: Return results immediately newer than ID
        explode: true
        in: query
        name: min_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Status'
                type: array
          description: Get statuses for home.
        "206":
          description: Home feed is regenerating
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/timelines/list/{list_id}:
    get:
      description: View statuses in the given list timeline.
      operationId: api_v1_timelines_list_list_id_get
      parameters:
      - description: Local ID of the list in the database.
        explode: false
        in: path
        name: list_id
        required: true
        schema:
          type: string
        style: simple
      - description: Max number of results to return. Defaults to 20.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          type: integer
        style: form
      - description: Return results older than ID
        explode: true
        in: query
        name: max_id
        required: false
        schema:
          type: string
        style: form
      - description: Return results newer than ID
        explode: true
        in: query
        name: since_id
        required: false
        schema:
          type: string
        style: form
      - description: Return results immediately newer than ID
        explode: true
        in: query
        name: min_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Status'
                type: array
          description: Statuses in this list will be returned..
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/timelines/public:
    get:
      description: Public timeline
      operationId: api_v1_timelines_public_get
      parameters:
      - description: Show only local statuses? Defaults to false.
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Show only local statuses? Defaults to false.
        explode: true
        in: query
        name: remote
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Show only statuses with media attached? Defaults to false..
        explode: true
        in: query
        name: only_media
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Max number of results to return. Defaults to 20.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          type: integer
        style: form
      - description: Return results older than ID
        explode: true
        in: query
        name: max_id
        required: false
        schema:
          type: string
        style: form
      - description: Return results newer than ID
        explode: true
        in: query
        name: since_id
        required: false
        schema:
          type: string
        style: form
      - description: Return results immediately newer than ID
        explode: true
        in: query
        name: min_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Status'
                type: array
          description: get statuses.
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/timelines/tag/{hashtag}:
    get:
      description: View public statuses containing the given hashtag.
      operationId: api_v1_timelines_tag_hashtag_get
      parameters:
      - description: "Content of a `#hashtag``, not including `#` symbol.."
        explode: false
        in: path
        name: hashtag
        required: true
        schema:
          type: string
        style: simple
      - description: Show only local statuses? Defaults to false.
        explode: true
        in: query
        name: local
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Show only local statuses? Defaults to false.
        explode: true
        in: query
        name: remote
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Show only statuses with media attached? Defaults to false..
        explode: true
        in: query
        name: only_media
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Max number of results to return. Defaults to 20.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          type: integer
        style: form
      - description: Return results older than ID
        explode: true
        in: query
        name: max_id
        required: false
        schema:
          type: string
        style: form
      - description: Return results newer than ID
        explode: true
        in: query
        name: since_id
        required: false
        schema:
          type: string
        style: form
      - description: Return results immediately newer than ID
        explode: true
        in: query
        name: min_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Status'
                type: array
          description: Get statuses.
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v1/trends:
    get:
      description: Tags that are being used more frequently within the past week.
      operationId: api_v1_trends_get
      parameters:
      - description: Max number of results to return. Defaults to 10.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Tag'
                type: array
          description: Domains that this instance is aware of.
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /api/v2/search:
    get:
      description: Search results
      operationId: api_v2_search_get
      parameters:
      - description: What to search for
        explode: true
        in: query
        name: q
        required: true
        schema:
          type: string
        style: form
      - description: Maximum number of results. Defaults to 40.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          type: integer
        style: form
      - description: Attempt WebFinger lookup.
        explode: true
        in: query
        name: resolve
        required: false
        schema:
          type: string
        style: form
      - description: Only who the user is following. Defaults to false.
        explode: true
        in: query
        name: following
        required: false
        schema:
          type: boolean
        style: form
      - description: "If provided, statuses returned will be authored only by this\
          \ account"
        explode: true
        in: query
        name: account_id
        required: false
        schema:
          type: string
        style: form
      - description: Return results older than this id
        explode: true
        in: query
        name: max_id
        required: false
        schema:
          type: string
        style: form
      - description: Return results immediately newer than this id
        explode: true
        in: query
        name: min_id
        required: false
        schema:
          type: string
        style: form
      - description: "Enum(accounts, hashtags, statuses)"
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - accounts
          - hashtags
          - statuses
          type: string
        style: form
      - description: Filter out unreviewed tags? Defaults to false. Use true when
          trying to find trending tags.
        explode: true
        in: query
        name: exclude_unreviewed
        required: false
        schema:
          type: boolean
        style: form
      - description: Offset in search results. Used for pagination. Defaults to 0.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_api_v2_search_get_200_response'
          description: Result
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or missing Authorization header
      security:
      - bearerAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /oauth/authorize:
    description: Generate and manage OAuth tokens.
    get:
      description: "Displays an authorization form to the user. If approved, it will\
        \ create and return an authorization code, then redirect to the desired redirect_uri,\
        \ or show the authorization code if urn:ietf:wg:oauth:2.0:oob was requested.\
        \ The authorization code can be used while requesting a token to obtain access\
        \ to user-level methods."
      operationId: oauth_authorize_get
      parameters:
      - description: Should be set equal to code.
        explode: true
        in: query
        name: response_type
        required: true
        schema:
          type: string
        style: form
      - description: "Client ID, obtained during app registration."
        explode: true
        in: query
        name: client_id
        required: true
        schema:
          type: string
        style: form
      - description: Set a URI to redirect the user to. If this parameter is set to
          urn:ietf:wg:oauth:2.0:oob then the authorization code will be shown instead.
          Must match one of the redirect URIs declared during app registration.
        explode: true
        in: query
        name: redirect_uri
        required: true
        schema:
          type: string
        style: form
      - description: "List of requested OAuth scopes, separated by spaces (or by pluses,\
          \ if using query parameters). Must be a subset of scopes declared during\
          \ app registration. If not provided, defaults to read."
        explode: true
        in: query
        name: scope
        required: false
        schema:
          type: string
        style: form
      - description: "Added in 2.6.0. Forces the user to re-login, which is necessary\
          \ for authorizing with multiple accounts from the same instance."
        explode: true
        in: query
        name: force_login
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          description: The authorization code will be returned as a query parameter
            named code.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "If the authorization code is incorrect or has been used already,\
            \ the request will fail."
      tags:
      - oauth
      x-openapi-router-controller: openapi_server.controllers.oauth_controller
  /oauth/revoke:
    post:
      description: Revoke an access token to make it no longer valid for use.
      operationId: oauth_revoke_post
      requestBody:
        content:
          application/form-data:
            schema:
              $ref: '#/components/schemas/_oauth_revoke_post_request'
        x-body-name: body
      responses:
        "200":
          description: "If you own the provided token, the API call will provide an\
            \ empty response. This operation is idempotent, so calling this API multiple\
            \ times will still return OK."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "If you provide a token you do not own, or no token at all,\
            \ the API call will return a 403 error."
      tags:
      - oauth
      x-openapi-router-controller: openapi_server.controllers.oauth_controller
      x-codegen-request-body-name: body
  /oauth/token:
    description: Obtain a token
    post:
      description: "Returns an access token, to be used during API calls that are\
        \ not public."
      operationId: oauth_token_post
      requestBody:
        content:
          application/form-data:
            schema:
              $ref: '#/components/schemas/_oauth_token_post_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_oauth_token_post_200_response'
          description: "Store this access_token for later use with auth-required methods.\
            \ The token should be passed as an HTTP Authorization header when making\
            \ API calls, with the value Bearer access_token"
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "If you try to request a scope that was not included when registering\
            \ the app, the request will fail."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "If client_id and client_secret do not match or are invalid,\
            \ the request will fail."
      tags:
      - oauth
      x-openapi-router-controller: openapi_server.controllers.oauth_controller
      x-codegen-request-body-name: body
components:
  schemas:
    Account:
      description: Represents a user of Mastodon and their associated profile.
      example:
        emojis:
        - category: category
          shortcode: shortcode
          visible_in_picker: true
          url: url
          static_url: static_url
        - category: category
          shortcode: shortcode
          visible_in_picker: true
          url: url
          static_url: static_url
        note: note
        bot: true
        moved: null
        created_at: 2000-01-23T04:56:07.000+00:00
        avatar: avatar
        source:
          note: note
          follow_requests_count: 1
          privacy: public
          language: language
          sensitive: true
          fields:
          - verified_at: 2000-01-23T04:56:07.000+00:00
            name: name
            value: value
          - verified_at: 2000-01-23T04:56:07.000+00:00
            name: name
            value: value
        display_name: display_name
        header_static: header_static
        mute_expires_at: 2000-01-23T04:56:07.000+00:00
        suspended: true
        url: url
        following_count: 6
        discoverable: true
        last_status_at: 2000-01-23T04:56:07.000+00:00
        statuses_count: 5
        followers_count: 0
        header: header
        id: id
        avatar_static: avatar_static
        fields:
        - verified_at: 2000-01-23T04:56:07.000+00:00
          name: name
          value: value
        - verified_at: 2000-01-23T04:56:07.000+00:00
          name: name
          value: value
        locked: true
        acct: acct
        username: username
      externalDocs:
        url: https://docs.joinmastodon.org/entities/account/
      properties:
        acct:
          description: "The Webfinger account URI. Equal to `username` for local users,\
            \ or `username@domain` for"
          title: acct
          type: string
        avatar:
          description: An image icon that is shown next to statuses and in the profile.
            The format is URL.
          title: avatar
          type: string
        avatar_static:
          description: A static version of the avatar. Equal to `avatar` if its value
            is a static image; different if `avatar` is an animated GIF. The format
            is URL.
          title: avatar_static
          type: string
        bot:
          description: "A presentational flag. Indicates that the account may perform\
            \ automated actions, may not be monitored, or identifies as a robot."
          title: bot
          type: boolean
        created_at:
          description: When the account was created.
          format: date-time
          title: created_at
          type: string
        discoverable:
          description: Whether the account has opted into discovery features such
            as the profile directory.
          title: discoverable
          type: boolean
        display_name:
          description: The profile's display name.
          title: display_name
          type: string
        emojis:
          description: "Custom emoji entities to be used when rendering the profile.\
            \ If none, an empty array will be returned."
          items:
            $ref: '#/components/schemas/Emoji'
          title: emojis
          type: array
        fields:
          description: Additional metadata attached to a profile as name-value pairs.
          items:
            $ref: '#/components/schemas/Field'
          title: fields
          type: array
        followers_count:
          description: The reported followers of this profile.
          title: followers_count
          type: integer
        following_count:
          description: The reported follows of this profile.
          title: following_count
          type: integer
        header:
          description: An image banner that is shown above the profile and in profile
            cards. The format is URL.
          title: header
          type: string
        header_static:
          description: A static version of the header. Equal to `header` if its value
            is a static image; different if `header` is an animated GIF. The format
            is URL.
          title: header_static
          type: string
        id:
          description: The account id `header`.
          title: id
          type: string
        last_status_at:
          description: When the most recent status was posted.
          format: date-time
          title: last_status_at
          type: string
        locked:
          description: Whether the account manually approves follow requests.
          title: locked
          type: boolean
        moved:
          $ref: '#/components/schemas/Account'
        mute_expires_at:
          description: "When a timed mute will expire, if applicable. ISO 8601 Datetime."
          format: date-time
          title: mute_expires_at
          type: string
        note:
          description: The profile's bio / description.
          title: note
          type: string
        source:
          $ref: '#/components/schemas/Source'
        statuses_count:
          description: How many statuses are attached to this account.
          title: statuses_count
          type: integer
        suspended:
          description: An extra entity returned when an account is suspended.
          title: suspended
          type: boolean
        url:
          description: The location of the user's profile page. (HTTPS URL)
          title: url
          type: string
        username:
          description: "The username of the account, not including domain."
          title: username
          type: string
      title: Account
      type: object
    Activity:
      description: Represents a weekly bucket of instance activity.
      example:
        registrations: registrations
        week: week
        statuses: statuses
        logins: logins
      externalDocs:
        url: https://docs.joinmastodon.org/entities/activity/
      properties:
        logins:
          description: "User logins since the week began, String (cast from an integer)."
          title: logins
          type: string
        registrations:
          description: "User registrations since the week began, String (cast from\
            \ an integer)."
          title: registrations
          type: string
        statuses:
          description: "Statuses created since the week began, String (cast from an\
            \ integer)."
          title: statuses
          type: string
        week:
          description: Midnight at the first day of the week.  (UNIX Timestamp).
          title: week
          type: string
      title: Activity
      type: object
    AdminAccount:
      description: Admin-level information about a given account.
      example:
        invite_request: invite_request
        silenced: true
        role: role
        ip: ip
        created_at: 2000-01-23T04:56:07.000+00:00
        locale: locale
        confirmed: true
        suspended: true
        approved: true
        created_by_application_id: created_by_application_id
        disabled: true
        id: id
        invited_by_account_id: invited_by_account_id
        account:
          emojis:
          - category: category
            shortcode: shortcode
            visible_in_picker: true
            url: url
            static_url: static_url
          - category: category
            shortcode: shortcode
            visible_in_picker: true
            url: url
            static_url: static_url
          note: note
          bot: true
          moved: null
          created_at: 2000-01-23T04:56:07.000+00:00
          avatar: avatar
          source:
            note: note
            follow_requests_count: 1
            privacy: public
            language: language
            sensitive: true
            fields:
            - verified_at: 2000-01-23T04:56:07.000+00:00
              name: name
              value: value
            - verified_at: 2000-01-23T04:56:07.000+00:00
              name: name
              value: value
          display_name: display_name
          header_static: header_static
          mute_expires_at: 2000-01-23T04:56:07.000+00:00
          suspended: true
          url: url
          following_count: 6
          discoverable: true
          last_status_at: 2000-01-23T04:56:07.000+00:00
          statuses_count: 5
          followers_count: 0
          header: header
          id: id
          avatar_static: avatar_static
          fields:
          - verified_at: 2000-01-23T04:56:07.000+00:00
            name: name
            value: value
          - verified_at: 2000-01-23T04:56:07.000+00:00
            name: name
            value: value
          locked: true
          acct: acct
          username: username
        email: email
        username: username
      externalDocs:
        url: https://docs.joinmastodon.org/entities/admin-account/
      properties:
        account:
          $ref: '#/components/schemas/Account'
        approved:
          description: Whether the account is currently approved.
          title: approved
          type: boolean
        confirmed:
          description: Whether the account has confirmed their email address.
          title: confirmed
          type: boolean
        created_at:
          description: When the account was first discovered.
          format: date-time
          title: created_at
          type: string
        created_by_application_id:
          description: "The ID of the application that created this account. Cast\
            \ from an integer, but not guaranteed to be a number."
          title: created_by_application_id
          type: string
        disabled:
          description: Whether the account is currently disabled.
          title: disabled
          type: boolean
        email:
          description: The email address associated with the account.
          title: email
          type: string
        id:
          description: "The ID of the account in the database. Cast from an integer,\
            \ but not guaranteed to be a number."
          title: id
          type: string
        invite_request:
          description: Invite request text ???
          title: invite_request
          type: string
        invited_by_account_id:
          description: "The ID of the account that invited this user. Cast from an\
            \ integer, but not guaranteed to be a number."
          title: invited_by_account_id
          type: string
        ip:
          description: The IP address last used to login to this account.
          title: ip
          type: string
        locale:
          description: The locale of the account. ISO 639 Part 1 two-letter language
            code.
          title: locale
          type: string
        role:
          description: The current role of the account. Enumerable oneOf.
          title: role
          type: string
        silenced:
          description: Whether the account is currently silenced.
          title: silenced
          type: boolean
        suspended:
          description: Whether the account is currently suspended.
          title: suspended
          type: boolean
        username:
          description: The username of the account.
          title: username
          type: string
      title: AdminAccount
      type: object
    AdminReport:
      description: Admin-level information about a filed report.
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        assigned_account:
          emojis:
          - category: category
            shortcode: shortcode
            visible_in_picker: true
            url: url
            static_url: static_url
          - category: category
            shortcode: shortcode
            visible_in_picker: true
            url: url
            static_url: static_url
          note: note
          bot: true
          moved: null
          created_at: 2000-01-23T04:56:07.000+00:00
          avatar: avatar
          source:
            note: note
            follow_requests_count: 1
            privacy: public
            language: language
            sensitive: true
            fields:
            - verified_at: 2000-01-23T04:56:07.000+00:00
              name: name
              value: value
            - verified_at: 2000-01-23T04:56:07.000+00:00
              name: name
              value: value
          display_name: display_name
          header_static: header_static
          mute_expires_at: 2000-01-23T04:56:07.000+00:00
          suspended: true
          url: url
          following_count: 6
          discoverable: true
          last_status_at: 2000-01-23T04:56:07.000+00:00
          statuses_count: 5
          followers_count: 0
          header: header
          id: id
          avatar_static: avatar_static
          fields:
          - verified_at: 2000-01-23T04:56:07.000+00:00
            name: name
            value: value
          - verified_at: 2000-01-23T04:56:07.000+00:00
            name: name
            value: value
          locked: true
          acct: acct
          username: username
        action_taken: action_taken
        created_at: 2000-01-23T04:56:07.000+00:00
        statuses:
        - pinned: true
          in_reply_to_id: in_reply_to_id
          favourites_count: 0
          media_attachments:
          - remote_url: remote_url
            meta: "{}"
            preview_url: preview_url
            blurhash: blurhash
            description: description
            id: id
            type: unknown
            url: url
            text_url: text_url
          - remote_url: remote_url
            meta: "{}"
            preview_url: preview_url
            blurhash: blurhash
            description: description
            id: id
            type: unknown
            url: url
            text_url: text_url
          created_at: 2000-01-23T04:56:07.000+00:00
          replies_count: 2
          language: language
          poll:
            emojis:
            - category: category
              shortcode: shortcode
              visible_in_picker: true
              url: url
              static_url: static_url
            - category: category
              shortcode: shortcode
              visible_in_picker: true
              url: url
              static_url: static_url
            voters_count: 1
            votes_count: 5
            expired: true
            expires_at: 2000-01-23T04:56:07.000+00:00
            own_votes:
            - 6
            - 6
            multiple: true
            options:
            - ""
            - ""
            voted: true
            id: id
          in_reply_to_account_id: in_reply_to_account_id
          content: content
          reblog: null
          spoiler_text: spoiler_text
          id: id
          reblogged: true
          text: text
          muted: true
          emojis:
          - category: category
            shortcode: shortcode
            visible_in_picker: true
            url: url
            static_url: static_url
          - category: category
            shortcode: shortcode
            visible_in_picker: true
            url: url
            static_url: static_url
          reblogs_count: 5
          visibility: public
          bookmarked: true
          sensitive: true
          uri: uri
          url: url
          tags:
          - name: name
            history:
            - uses: uses
              accounts: accounts
              day: day
            - uses: uses
              accounts: accounts
              day: day
            url: url
          - name: name
            history:
            - uses: uses
              accounts: accounts
              day: day
            - uses: uses
              accounts: accounts
              day: day
            url: url
          application:
            vapid_key: vapid_key
            website: website
            name: name
            client_secret: client_secret
            client_id: client_id
          favourited: true
          mentions:
          - id: id
            acct: acct
            url: url
            username: username
          - id: id
            acct: acct
            url: url
            username: username
          account:
            emojis:
            - category: category
              shortcode: shortcode
              visible_in_picker: true
              url: url
              static_url: static_url
            - category: category
              shortcode: shortcode
              visible_in_picker: true
              url: url
              static_url: static_url
            note: note
            bot: true
            moved: null
            created_at: 2000-01-23T04:56:07.000+00:00
            avatar: avatar
            source:
              note: note
              follow_requests_count: 1
              privacy: public
              language: language
              sensitive: true
              fields:
              - verified_at: 2000-01-23T04:56:07.000+00:00
                name: name
                value: value
              - verified_at: 2000-01-23T04:56:07.000+00:00
                name: name
                value: value
            display_name: display_name
            header_static: header_static
            mute_expires_at: 2000-01-23T04:56:07.000+00:00
            suspended: true
            url: url
            following_count: 6
            discoverable: true
            last_status_at: 2000-01-23T04:56:07.000+00:00
            statuses_count: 5
            followers_count: 0
            header: header
            id: id
            avatar_static: avatar_static
            fields:
            - verified_at: 2000-01-23T04:56:07.000+00:00
              name: name
              value: value
            - verified_at: 2000-01-23T04:56:07.000+00:00
              name: name
              value: value
            locked: true
            acct: acct
            username: username
          card:
            author_name: author_name
            image: image
            blurhash: blurhash
            description: description
            provider_url: provider_url
            title: title
            type: link
            url: url
            author_url: author_url
            width: 6
            html: html
            provider_name: provider_name
            height: 0
        - pinned: true
          in_reply_to_id: in_reply_to_id
          favourites_count: 0
          media_attachments:
          - remote_url: remote_url
            meta: "{}"
            preview_url: preview_url
            blurhash: blurhash
            description: description
            id: id
            type: unknown
            url: url
            text_url: text_url
          - remote_url: remote_url
            meta: "{}"
            preview_url: preview_url
            blurhash: blurhash
            description: description
            id: id
            type: unknown
            url: url
            text_url: text_url
          created_at: 2000-01-23T04:56:07.000+00:00
          replies_count: 2
          language: language
          poll:
            emojis:
            - category: category
              shortcode: shortcode
              visible_in_picker: true
              url: url
              static_url: static_url
            - category: category
              shortcode: shortcode
              visible_in_picker: true
              url: url
              static_url: static_url
            voters_count: 1
            votes_count: 5
            expired: true
            expires_at: 2000-01-23T04:56:07.000+00:00
            own_votes:
            - 6
            - 6
            multiple: true
            options:
            - ""
            - ""
            voted: true
            id: id
          in_reply_to_account_id: in_reply_to_account_id
          content: content
          reblog: null
          spoiler_text: spoiler_text
          id: id
          reblogged: true
          text: text
          muted: true
          emojis:
          - category: category
            shortcode: shortcode
            visible_in_picker: true
            url: url
            static_url: static_url
          - category: category
            shortcode: shortcode
            visible_in_picker: true
            url: url
            static_url: static_url
          reblogs_count: 5
          visibility: public
          bookmarked: true
          sensitive: true
          uri: uri
          url: url
          tags:
          - name: name
            history:
            - uses: uses
              accounts: accounts
              day: day
            - uses: uses
              accounts: accounts
              day: day
            url: url
          - name: name
            history:
            - uses: uses
              accounts: accounts
              day: day
            - uses: uses
              accounts: accounts
              day: day
            url: url
          application:
            vapid_key: vapid_key
            website: website
            name: name
            client_secret: client_secret
            client_id: client_id
          favourited: true
          mentions:
          - id: id
            acct: acct
            url: url
            username: username
          - id: id
            acct: acct
            url: url
            username: username
          account:
            emojis:
            - category: category
              shortcode: shortcode
              visible_in_picker: true
              url: url
              static_url: static_url
            - category: category
              shortcode: shortcode
              visible_in_picker: true
              url: url
              static_url: static_url
            note: note
            bot: true
            moved: null
            created_at: 2000-01-23T04:56:07.000+00:00
            avatar: avatar
            source:
              note: note
              follow_requests_count: 1
              privacy: public
              language: language
              sensitive: true
              fields:
              - verified_at: 2000-01-23T04:56:07.000+00:00
                name: name
                value: value
              - verified_at: 2000-01-23T04:56:07.000+00:00
                name: name
                value: value
            display_name: display_name
            header_static: header_static
            mute_expires_at: 2000-01-23T04:56:07.000+00:00
            suspended: true
            url: url
            following_count: 6
            discoverable: true
            last_status_at: 2000-01-23T04:56:07.000+00:00
            statuses_count: 5
            followers_count: 0
            header: header
            id: id
            avatar_static: avatar_static
            fields:
            - verified_at: 2000-01-23T04:56:07.000+00:00
              name: name
              value: value
            - verified_at: 2000-01-23T04:56:07.000+00:00
              name: name
              value: value
            locked: true
            acct: acct
            username: username
          card:
            author_name: author_name
            image: image
            blurhash: blurhash
            description: description
            provider_url: provider_url
            title: title
            type: link
            url: url
            author_url: author_url
            width: 6
            html: html
            provider_name: provider_name
            height: 0
        comment: comment
        id: id
        target_account:
          emojis:
          - category: category
            shortcode: shortcode
            visible_in_picker: true
            url: url
            static_url: static_url
          - category: category
            shortcode: shortcode
            visible_in_picker: true
            url: url
            static_url: static_url
          note: note
          bot: true
          moved: null
          created_at: 2000-01-23T04:56:07.000+00:00
          avatar: avatar
          source:
            note: note
            follow_requests_count: 1
            privacy: public
            language: language
            sensitive: true
            fields:
            - verified_at: 2000-01-23T04:56:07.000+00:00
              name: name
              value: value
            - verified_at: 2000-01-23T04:56:07.000+00:00
              name: name
              value: value
          display_name: display_name
          header_static: header_static
          mute_expires_at: 2000-01-23T04:56:07.000+00:00
          suspended: true
          url: url
          following_count: 6
          discoverable: true
          last_status_at: 2000-01-23T04:56:07.000+00:00
          statuses_count: 5
          followers_count: 0
          header: header
          id: id
          avatar_static: avatar_static
          fields:
          - verified_at: 2000-01-23T04:56:07.000+00:00
            name: name
            value: value
          - verified_at: 2000-01-23T04:56:07.000+00:00
            name: name
            value: value
          locked: true
          acct: acct
          username: username
        account:
          emojis:
          - category: category
            shortcode: shortcode
            visible_in_picker: true
            url: url
            static_url: static_url
          - category: category
            shortcode: shortcode
            visible_in_picker: true
            url: url
            static_url: static_url
          note: note
          bot: true
          moved: null
          created_at: 2000-01-23T04:56:07.000+00:00
          avatar: avatar
          source:
            note: note
            follow_requests_count: 1
            privacy: public
            language: language
            sensitive: true
            fields:
            - verified_at: 2000-01-23T04:56:07.000+00:00
              name: name
              value: value
            - verified_at: 2000-01-23T04:56:07.000+00:00
              name: name
              value: value
          display_name: display_name
          header_static: header_static
          mute_expires_at: 2000-01-23T04:56:07.000+00:00
          suspended: true
          url: url
          following_count: 6
          discoverable: true
          last_status_at: 2000-01-23T04:56:07.000+00:00
          statuses_count: 5
          followers_count: 0
          header: header
          id: id
          avatar_static: avatar_static
          fields:
          - verified_at: 2000-01-23T04:56:07.000+00:00
            name: name
            value: value
          - verified_at: 2000-01-23T04:56:07.000+00:00
            name: name
            value: value
          locked: true
          acct: acct
          username: username
      externalDocs:
        url: https://docs.joinmastodon.org/entities/admin-report/
      properties:
        account:
          $ref: '#/components/schemas/Account'
        action_taken:
          description: The action taken to resolve this report. Enumerable oneOf.
          title: action_taken
          type: string
        assigned_account:
          $ref: '#/components/schemas/Account'
        comment:
          description: An optional reason for reporting.
          title: comment
          type: string
        created_at:
          description: The time the report was filed.
          format: date-time
          title: created_at
          type: string
        id:
          description: "The ID of the report in the database. Cast from an integer,\
            \ but not guaranteed to be a number."
          title: id
          type: string
        statuses:
          description: "Statuses attached to the report, for context."
          items:
            $ref: '#/components/schemas/Status'
          title: statuses
          type: array
        target_account:
          $ref: '#/components/schemas/Account'
        updated_at:
          description: The time of last action on this report.
          format: date-time
          title: updated_at
          type: string
      title: AdminReport
    Announcement:
      description: Represents an announcement set by an administrator.
      example:
        starts_at: starts_at
        read: true
        updated_at: updated_at
        all_day: true
        created_at: created_at
        scheduled_at: scheduled_at
        ends_at: ends_at
        id: id
        published: true
        text: text
      externalDocs:
        url: https://docs.joinmastodon.org/entities/announcement/
      properties:
        all_day:
          description: Whether the announcement has a start/end time.
          title: all_day
          type: boolean
        created_at:
          description: When the announcement was created.
          title: created_at
          type: string
        ends_at:
          description: When the future announcement will end. ISO 8601 Datetime.
          title: ends_at
          type: string
        id:
          description: "The announcement id. Cast from an integer, but not guaranteed\
            \ to be a number."
          title: id
          type: string
        published:
          description: Whether the announcement is currently active.
          title: published
          type: boolean
        read:
          description: Whether the announcement has been read by the user.
          title: read
          type: boolean
        scheduled_at:
          description: When the future announcement was scheduled. ISO 8601 Datetime.
          title: scheduled_at
          type: string
        starts_at:
          description: When the future announcement will start. ISO 8601 Datetime.
          title: starts_at
          type: string
        text:
          description: The content of the announcement.
          title: text
          type: string
        updated_at:
          description: When the announcement was last updated. ISO 8601 Datetime.
          title: updated_at
          type: string
      required:
      - all_day
      - created_at
      - id
      - published
      - read
      - text
      - updated_at
      title: Announcement
    AnnouncementReaction:
      description: Represents an emoji reaction to an Announcement.
      externalDocs:
        url: https://docs.joinmastodon.org/entities/announcementreaction/
      properties:
        count:
          description: The total number of users who have added this reaction.
          type: integer
        me:
          description: Whether the authorized user has added this reaction to the
            announcement.
          type: boolean
        name:
          description: "The emoji used for the reaction. Either a unicode emoji, or\
            \ a custom emoji's shortcode."
          type: string
        static_url:
          description: A link to a non-animated version of the custom emoji (URL).
          type: string
        url:
          description: A link to the custom emoji (URL).
          type: string
    Application:
      description: Represents an application that interfaces with the REST API to
        access accounts or post statuses.
      example:
        vapid_key: vapid_key
        website: website
        name: name
        client_secret: client_secret
        client_id: client_id
      externalDocs:
        url: https://docs.joinmastodon.org/entities/application/
      properties:
        client_id:
          description: "Client ID key, to be used for obtaining OAuth tokens"
          title: client_id
          type: string
        client_secret:
          description: "Client secret key, to be used for obtaining OAuth tokens"
          title: client_secret
          type: string
        name:
          description: The name of your application.
          title: name
          type: string
        vapid_key:
          description: "Used for Push Streaming API. Returned with [POST /api/v1/apps](https://docs.joinmastodon.org/methods/apps/#create-an-application).\
            \ Equivalent to [PushSubscription#server_key](https://docs.joinmastodon.org/entities/pushsubscription/#server_key)"
          title: vapid_key
          type: string
        website:
          description: The website associated with your application. Must be URL.
          title: website
          type: string
      required:
      - name
      title: Application
    Attachment:
      description: Represents a file or media attachment that can be added to a status.
      example:
        remote_url: remote_url
        meta: "{}"
        preview_url: preview_url
        blurhash: blurhash
        description: description
        id: id
        type: unknown
        url: url
        text_url: text_url
      externalDocs:
        url: https://docs.joinmastodon.org/entities/attachment/
      properties:
        blurhash:
          description: "A hash computed by the [BlurHash algorithm](https://github.com/woltapp/blurhash),\
            \ for generating colorful preview thumbnails when media has not been downloaded\
            \ yet."
          title: blurhash
          type: string
        description:
          description: "Alternate text that describes what is in the media attachment,\
            \ to be used for the visually impaired or when media attachments do not\
            \ load."
          title: description
          type: string
        id:
          description: The ID of the attachment in the database. Cast from an integer
            but not guaranteed to be a number
          title: id
          type: string
        meta:
          description: Metadata returned by Paperclip.
          title: meta
          type: object
        preview_url:
          description: The location of a scaled-down preview of the attachment.
          title: preview_url
          type: string
        remote_url:
          description: The location of the full-size original attachment on the remote
            website. String or null if the attachment is local.
          title: remote_url
          type: string
        text_url:
          deprecated: true
          description: A shorter URL for the attachment.
          title: text_url
          type: string
        type:
          description: The type of the attachment.
          enum:
          - unknown
          - image
          - gifv
          - video
          - audio
          title: type
          type: string
        url:
          description: The location of the original full-size attachment.
          title: url
          type: string
      required:
      - id
      - preview_url
      - type
      - url
      title: Attachment
    Card:
      description: Represents a rich preview card that is generated using OpenGraph
        tags from a URL.
      example:
        author_name: author_name
        image: image
        blurhash: blurhash
        description: description
        provider_url: provider_url
        title: title
        type: link
        url: url
        author_url: author_url
        width: 6
        html: html
        provider_name: provider_name
        height: 0
      externalDocs:
        url: https://docs.joinmastodon.org/entities/card/
      properties:
        author_name:
          description: The author of the original resource.
          title: author_name
          type: string
        author_url:
          description: A link to the author of the original resource.
          title: author_url
          type: string
        blurhash:
          description: "A hash computed by the [BlurHash algorithm](https://github.com/woltapp/blurhash),\
            \ for generating colorful preview thumbnails when media has not been downloaded\
            \ yet."
          title: blurhash
          type: string
        description:
          description: Description of preview.
          title: description
          type: string
        height:
          description: "Height of preview, in pixels."
          title: height
          type: integer
        html:
          description: HTML to be used for generating the preview card.
          title: html
          type: string
        image:
          description: Preview thumbnail (URL).
          title: image
          type: string
        provider_name:
          description: The provider of the original resource.
          title: provider_name
          type: string
        provider_url:
          description: A link to the provider of the original resource.
          title: provider_url
          type: string
        title:
          description: Title of linked resource.
          title: title
          type: string
        type:
          description: "The type of the preview card. String (Enumerable, oneOf)."
          enum:
          - link
          - photo
          - video
          - rich
          title: type
          type: string
        url:
          description: Location of linked resource.
          title: url
          type: string
        width:
          description: "Width of preview, in pixels."
          title: width
          type: integer
      required:
      - description
      - title
      - type
      - url
      title: Card
    Context:
      description: Represents the tree around a given status. Used for reconstructing
        threads of statuses.
      example:
        ancestors:
        - pinned: true
          in_reply_to_id: in_reply_to_id
          favourites_count: 0
          media_attachments:
          - remote_url: remote_url
            meta: "{}"
            preview_url: preview_url
            blurhash: blurhash
            description: description
            id: id
            type: unknown
            url: url
            text_url: text_url
          - remote_url: remote_url
            meta: "{}"
            preview_url: preview_url
            blurhash: blurhash
            description: description
            id: id
            type: unknown
            url: url
            text_url: text_url
          created_at: 2000-01-23T04:56:07.000+00:00
          replies_count: 2
          language: language
          poll:
            emojis:
            - category: category
              shortcode: shortcode
              visible_in_picker: true
              url: url
              static_url: static_url
            - category: category
              shortcode: shortcode
              visible_in_picker: true
              url: url
              static_url: static_url
            voters_count: 1
            votes_count: 5
            expired: true
            expires_at: 2000-01-23T04:56:07.000+00:00
            own_votes:
            - 6
            - 6
            multiple: true
            options:
            - ""
            - ""
            voted: true
            id: id
          in_reply_to_account_id: in_reply_to_account_id
          content: content
          reblog: null
          spoiler_text: spoiler_text
          id: id
          reblogged: true
          text: text
          muted: true
          emojis:
          - category: category
            shortcode: shortcode
            visible_in_picker: true
            url: url
            static_url: static_url
          - category: category
            shortcode: shortcode
            visible_in_picker: true
            url: url
            static_url: static_url
          reblogs_count: 5
          visibility: public
          bookmarked: true
          sensitive: true
          uri: uri
          url: url
          tags:
          - name: name
            history:
            - uses: uses
              accounts: accounts
              day: day
            - uses: uses
              accounts: accounts
              day: day
            url: url
          - name: name
            history:
            - uses: uses
              accounts: accounts
              day: day
            - uses: uses
              accounts: accounts
              day: day
            url: url
          application:
            vapid_key: vapid_key
            website: website
            name: name
            client_secret: client_secret
            client_id: client_id
          favourited: true
          mentions:
          - id: id
            acct: acct
            url: url
            username: username
          - id: id
            acct: acct
            url: url
            username: username
          account:
            emojis:
            - category: category
              shortcode: shortcode
              visible_in_picker: true
              url: url
              static_url: static_url
            - category: category
              shortcode: shortcode
              visible_in_picker: true
              url: url
              static_url: static_url
            note: note
            bot: true
            moved: null
            created_at: 2000-01-23T04:56:07.000+00:00
            avatar: avatar
            source:
              note: note
              follow_requests_count: 1
              privacy: public
              language: language
              sensitive: true
              fields:
              - verified_at: 2000-01-23T04:56:07.000+00:00
                name: name
                value: value
              - verified_at: 2000-01-23T04:56:07.000+00:00
                name: name
                value: value
            display_name: display_name
            header_static: header_static
            mute_expires_at: 2000-01-23T04:56:07.000+00:00
            suspended: true
            url: url
            following_count: 6
            discoverable: true
            last_status_at: 2000-01-23T04:56:07.000+00:00
            statuses_count: 5
            followers_count: 0
            header: header
            id: id
            avatar_static: avatar_static
            fields:
            - verified_at: 2000-01-23T04:56:07.000+00:00
              name: name
              value: value
            - verified_at: 2000-01-23T04:56:07.000+00:00
              name: name
              value: value
            locked: true
            acct: acct
            username: username
          card:
            author_name: author_name
            image: image
            blurhash: blurhash
            description: description
            provider_url: provider_url
            title: title
            type: link
            url: url
            author_url: author_url
            width: 6
            html: html
            provider_name: provider_name
            height: 0
        - pinned: true
          in_reply_to_id: in_reply_to_id
          favourites_count: 0
          media_attachments:
          - remote_url: remote_url
            meta: "{}"
            preview_url: preview_url
            blurhash: blurhash
            description: description
            id: id
            type: unknown
            url: url
            text_url: text_url
          - remote_url: remote_url
            meta: "{}"
            preview_url: preview_url
            blurhash: blurhash
            description: description
            id: id
            type: unknown
            url: url
            text_url: text_url
          created_at: 2000-01-23T04:56:07.000+00:00
          replies_count: 2
          language: language
          poll:
            emojis:
            - category: category
              shortcode: shortcode
              visible_in_picker: true
              url: url
              static_url: static_url
            - category: category
              shortcode: shortcode
              visible_in_picker: true
              url: url
              static_url: static_url
            voters_count: 1
            votes_count: 5
            expired: true
            expires_at: 2000-01-23T04:56:07.000+00:00
            own_votes:
            - 6
            - 6
            multiple: true
            options:
            - ""
            - ""
            voted: true
            id: id
          in_reply_to_account_id: in_reply_to_account_id
          content: content
          reblog: null
          spoiler_text: spoiler_text
          id: id
          reblogged: true
          text: text
          muted: true
          emojis:
          - category: category
            shortcode: shortcode
            visible_in_picker: true
            url: url
            static_url: static_url
          - category: category
            shortcode: shortcode
            visible_in_picker: true
            url: url
            static_url: static_url
          reblogs_count: 5
          visibility: public
          bookmarked: true
          sensitive: true
          uri: uri
          url: url
          tags:
          - name: name
            history:
            - uses: uses
              accounts: accounts
              day: day
            - uses: uses
              accounts: accounts
              day: day
            url: url
          - name: name
            history:
            - uses: uses
              accounts: accounts
              day: day
            - uses: uses
              accounts: accounts
              day: day
            url: url
          application:
            vapid_key: vapid_key
            website: website
            name: name
            client_secret: client_secret
            client_id: client_id
          favourited: true
          mentions:
          - id: id
            acct: acct
            url: url
            username: username
          - id: id
            acct: acct
            url: url
            username: username
          account:
            emojis:
            - category: category
              shortcode: shortcode
              visible_in_picker: true
              url: url
              static_url: static_url
            - category: category
              shortcode: shortcode
              visible_in_picker: true
              url: url
              static_url: static_url
            note: note
            bot: true
            moved: null
            created_at: 2000-01-23T04:56:07.000+00:00
            avatar: avatar
            source:
              note: note
              follow_requests_count: 1
              privacy: public
              language: language
              sensitive: true
              fields:
              - verified_at: 2000-01-23T04:56:07.000+00:00
                name: name
                value: value
              - verified_at: 2000-01-23T04:56:07.000+00:00
                name: name
                value: value
            display_name: display_name
            header_static: header_static
            mute_expires_at: 2000-01-23T04:56:07.000+00:00
            suspended: true
            url: url
            following_count: 6
            discoverable: true
            last_status_at: 2000-01-23T04:56:07.000+00:00
            statuses_count: 5
            followers_count: 0
            header: header
            id: id
            avatar_static: avatar_static
            fields:
            - verified_at: 2000-01-23T04:56:07.000+00:00
              name: name
              value: value
            - verified_at: 2000-01-23T04:56:07.000+00:00
              name: name
              value: value
            locked: true
            acct: acct
            username: username
          card:
            author_name: author_name
            image: image
            blurhash: blurhash
            description: description
            provider_url: provider_url
            title: title
            type: link
            url: url
            author_url: author_url
            width: 6
            html: html
            provider_name: provider_name
            height: 0
        descendants:
        - pinned: true
          in_reply_to_id: in_reply_to_id
          favourites_count: 0
          media_attachments:
          - remote_url: remote_url
            meta: "{}"
            preview_url: preview_url
            blurhash: blurhash
            description: description
            id: id
            type: unknown
            url: url
            text_url: text_url
          - remote_url: remote_url
            meta: "{}"
            preview_url: preview_url
            blurhash: blurhash
            description: description
            id: id
            type: unknown
            url: url
            text_url: text_url
          created_at: 2000-01-23T04:56:07.000+00:00
          replies_count: 2
          language: language
          poll:
            emojis:
            - category: category
              shortcode: shortcode
              visible_in_picker: true
              url: url
              static_url: static_url
            - category: category
              shortcode: shortcode
              visible_in_picker: true
              url: url
              static_url: static_url
            voters_count: 1
            votes_count: 5
            expired: true
            expires_at: 2000-01-23T04:56:07.000+00:00
            own_votes:
            - 6
            - 6
            multiple: true
            options:
            - ""
            - ""
            voted: true
            id: id
          in_reply_to_account_id: in_reply_to_account_id
          content: content
          reblog: null
          spoiler_text: spoiler_text
          id: id
          reblogged: true
          text: text
          muted: true
          emojis:
          - category: category
            shortcode: shortcode
            visible_in_picker: true
            url: url
            static_url: static_url
          - category: category
            shortcode: shortcode
            visible_in_picker: true
            url: url
            static_url: static_url
          reblogs_count: 5
          visibility: public
          bookmarked: true
          sensitive: true
          uri: uri
          url: url
          tags:
          - name: name
            history:
            - uses: uses
              accounts: accounts
              day: day
            - uses: uses
              accounts: accounts
              day: day
            url: url
          - name: name
            history:
            - uses: uses
              accounts: accounts
              day: day
            - uses: uses
              accounts: accounts
              day: day
            url: url
          application:
            vapid_key: vapid_key
            website: website
            name: name
            client_secret: client_secret
            client_id: client_id
          favourited: true
          mentions:
          - id: id
            acct: acct
            url: url
            username: username
          - id: id
            acct: acct
            url: url
            username: username
          account:
            emojis:
            - category: category
              shortcode: shortcode
              visible_in_picker: true
              url: url
              static_url: static_url
            - category: category
              shortcode: shortcode
              visible_in_picker: true
              url: url
              static_url: static_url
            note: note
            bot: true
            moved: null
            created_at: 2000-01-23T04:56:07.000+00:00
            avatar: avatar
            source:
              note: note
              follow_requests_count: 1
              privacy: public
              language: language
              sensitive: true
              fields:
              - verified_at: 2000-01-23T04:56:07.000+00:00
                name: name
                value: value
              - verified_at: 2000-01-23T04:56:07.000+00:00
                name: name
                value: value
            display_name: display_name
            header_static: header_static
            mute_expires_at: 2000-01-23T04:56:07.000+00:00
            suspended: true
            url: url
            following_count: 6
            discoverable: true
            last_status_at: 2000-01-23T04:56:07.000+00:00
            statuses_count: 5
            followers_count: 0
            header: header
            id: id
            avatar_static: avatar_static
            fields:
            - verified_at: 2000-01-23T04:56:07.000+00:00
              name: name
              value: value
            - verified_at: 2000-01-23T04:56:07.000+00:00
              name: name
              value: value
            locked: true
            acct: acct
            username: username
          card:
            author_name: author_name
            image: image
            blurhash: blurhash
            description: description
            provider_url: provider_url
            title: title
            type: link
            url: url
            author_url: author_url
            width: 6
            html: html
            provider_name: provider_name
            height: 0
        - pinned: true
          in_reply_to_id: in_reply_to_id
          favourites_count: 0
          media_attachments:
          - remote_url: remote_url
            meta: "{}"
            preview_url: preview_url
            blurhash: blurhash
            description: description
            id: id
            type: unknown
            url: url
            text_url: text_url
          - remote_url: remote_url
            meta: "{}"
            preview_url: preview_url
            blurhash: blurhash
            description: description
            id: id
            type: unknown
            url: url
            text_url: text_url
          created_at: 2000-01-23T04:56:07.000+00:00
          replies_count: 2
          language: language
          poll:
            emojis:
            - category: category
              shortcode: shortcode
              visible_in_picker: true
              url: url
              static_url: static_url
            - category: category
              shortcode: shortcode
              visible_in_picker: true
              url: url
              static_url: static_url
            voters_count: 1
            votes_count: 5
            expired: true
            expires_at: 2000-01-23T04:56:07.000+00:00
            own_votes:
            - 6
            - 6
            multiple: true
            options:
            - ""
            - ""
            voted: true
            id: id
          in_reply_to_account_id: in_reply_to_account_id
          content: content
          reblog: null
          spoiler_text: spoiler_text
          id: id
          reblogged: true
          text: text
          muted: true
          emojis:
          - category: category
            shortcode: shortcode
            visible_in_picker: true
            url: url
            static_url: static_url
          - category: category
            shortcode: shortcode
            visible_in_picker: true
            url: url
            static_url: static_url
          reblogs_count: 5
          visibility: public
          bookmarked: true
          sensitive: true
          uri: uri
          url: url
          tags:
          - name: name
            history:
            - uses: uses
              accounts: accounts
              day: day
            - uses: uses
              accounts: accounts
              day: day
            url: url
          - name: name
            history:
            - uses: uses
              accounts: accounts
              day: day
            - uses: uses
              accounts: accounts
              day: day
            url: url
          application:
            vapid_key: vapid_key
            website: website
            name: name
            client_secret: client_secret
            client_id: client_id
          favourited: true
          mentions:
          - id: id
            acct: acct
            url: url
            username: username
          - id: id
            acct: acct
            url: url
            username: username
          account:
            emojis:
            - category: category
              shortcode: shortcode
              visible_in_picker: true
              url: url
              static_url: static_url
            - category: category
              shortcode: shortcode
              visible_in_picker: true
              url: url
              static_url: static_url
            note: note
            bot: true
            moved: null
            created_at: 2000-01-23T04:56:07.000+00:00
            avatar: avatar
            source:
              note: note
              follow_requests_count: 1
              privacy: public
              language: language
              sensitive: true
              fields:
              - verified_at: 2000-01-23T04:56:07.000+00:00
                name: name
                value: value
              - verified_at: 2000-01-23T04:56:07.000+00:00
                name: name
                value: value
            display_name: display_name
            header_static: header_static
            mute_expires_at: 2000-01-23T04:56:07.000+00:00
            suspended: true
            url: url
            following_count: 6
            discoverable: true
            last_status_at: 2000-01-23T04:56:07.000+00:00
            statuses_count: 5
            followers_count: 0
            header: header
            id: id
            avatar_static: avatar_static
            fields:
            - verified_at: 2000-01-23T04:56:07.000+00:00
              name: name
              value: value
            - verified_at: 2000-01-23T04:56:07.000+00:00
              name: name
              value: value
            locked: true
            acct: acct
            username: username
          card:
            author_name: author_name
            image: image
            blurhash: blurhash
            description: description
            provider_url: provider_url
            title: title
            type: link
            url: url
            author_url: author_url
            width: 6
            html: html
            provider_name: provider_name
            height: 0
      externalDocs:
        url: https://docs.joinmastodon.org/entities/context/
      properties:
        ancestors:
          description: Parents in the thread.
          items:
            $ref: '#/components/schemas/Status'
          title: ancestors
          type: array
        descendants:
          description: Children in the thread.
          items:
            $ref: '#/components/schemas/Status'
          title: descendants
          type: array
      required:
      - ancestors
      - descendants
      title: Context
    Conversation:
      description: Represents a conversation with "direct message" visibility.
      example:
        unread: true
        last_status:
          pinned: true
          in_reply_to_id: in_reply_to_id
          favourites_count: 0
          media_attachments:
          - remote_url: remote_url
            meta: "{}"
            preview_url: preview_url
            blurhash: blurhash
            description: description
            id: id
            type: unknown
            url: url
            text_url: text_url
          - remote_url: remote_url
            meta: "{}"
            preview_url: preview_url
            blurhash: blurhash
            description: description
            id: id
            type: unknown
            url: url
            text_url: text_url
          created_at: 2000-01-23T04:56:07.000+00:00
          replies_count: 2
          language: language
          poll:
            emojis:
            - category: category
              shortcode: shortcode
              visible_in_picker: true
              url: url
              static_url: static_url
            - category: category
              shortcode: shortcode
              visible_in_picker: true
              url: url
              static_url: static_url
            voters_count: 1
            votes_count: 5
            expired: true
            expires_at: 2000-01-23T04:56:07.000+00:00
            own_votes:
            - 6
            - 6
            multiple: true
            options:
            - ""
            - ""
            voted: true
            id: id
          in_reply_to_account_id: in_reply_to_account_id
          content: content
          reblog: null
          spoiler_text: spoiler_text
          id: id
          reblogged: true
          text: text
          muted: true
          emojis:
          - category: category
            shortcode: shortcode
            visible_in_picker: true
            url: url
            static_url: static_url
          - category: category
            shortcode: shortcode
            visible_in_picker: true
            url: url
            static_url: static_url
          reblogs_count: 5
          visibility: public
          bookmarked: true
          sensitive: true
          uri: uri
          url: url
          tags:
          - name: name
            history:
            - uses: uses
              accounts: accounts
              day: day
            - uses: uses
              accounts: accounts
              day: day
            url: url
          - name: name
            history:
            - uses: uses
              accounts: accounts
              day: day
            - uses: uses
              accounts: accounts
              day: day
            url: url
          application:
            vapid_key: vapid_key
            website: website
            name: name
            client_secret: client_secret
            client_id: client_id
          favourited: true
          mentions:
          - id: id
            acct: acct
            url: url
            username: username
          - id: id
            acct: acct
            url: url
            username: username
          account:
            emojis:
            - category: category
              shortcode: shortcode
              visible_in_picker: true
              url: url
              static_url: static_url
            - category: category
              shortcode: shortcode
              visible_in_picker: true
              url: url
              static_url: static_url
            note: note
            bot: true
            moved: null
            created_at: 2000-01-23T04:56:07.000+00:00
            avatar: avatar
            source:
              note: note
              follow_requests_count: 1
              privacy: public
              language: language
              sensitive: true
              fields:
              - verified_at: 2000-01-23T04:56:07.000+00:00
                name: name
                value: value
              - verified_at: 2000-01-23T04:56:07.000+00:00
                name: name
                value: value
            display_name: display_name
            header_static: header_static
            mute_expires_at: 2000-01-23T04:56:07.000+00:00
            suspended: true
            url: url
            following_count: 6
            discoverable: true
            last_status_at: 2000-01-23T04:56:07.000+00:00
            statuses_count: 5
            followers_count: 0
            header: header
            id: id
            avatar_static: avatar_static
            fields:
            - verified_at: 2000-01-23T04:56:07.000+00:00
              name: name
              value: value
            - verified_at: 2000-01-23T04:56:07.000+00:00
              name: name
              value: value
            locked: true
            acct: acct
            username: username
          card:
            author_name: author_name
            image: image
            blurhash: blurhash
            description: description
            provider_url: provider_url
            title: title
            type: link
            url: url
            author_url: author_url
            width: 6
            html: html
            provider_name: provider_name
            height: 0
        accounts:
        - emojis:
          - category: category
            shortcode: shortcode
            visible_in_picker: true
            url: url
            static_url: static_url
          - category: category
            shortcode: shortcode
            visible_in_picker: true
            url: url
            static_url: static_url
          note: note
          bot: true
          moved: null
          created_at: 2000-01-23T04:56:07.000+00:00
          avatar: avatar
          source:
            note: note
            follow_requests_count: 1
            privacy: public
            language: language
            sensitive: true
            fields:
            - verified_at: 2000-01-23T04:56:07.000+00:00
              name: name
              value: value
            - verified_at: 2000-01-23T04:56:07.000+00:00
              name: name
              value: value
          display_name: display_name
          header_static: header_static
          mute_expires_at: 2000-01-23T04:56:07.000+00:00
          suspended: true
          url: url
          following_count: 6
          discoverable: true
          last_status_at: 2000-01-23T04:56:07.000+00:00
          statuses_count: 5
          followers_count: 0
          header: header
          id: id
          avatar_static: avatar_static
          fields:
          - verified_at: 2000-01-23T04:56:07.000+00:00
            name: name
            value: value
          - verified_at: 2000-01-23T04:56:07.000+00:00
            name: name
            value: value
          locked: true
          acct: acct
          username: username
        - emojis:
          - category: category
            shortcode: shortcode
            visible_in_picker: true
            url: url
            static_url: static_url
          - category: category
            shortcode: shortcode
            visible_in_picker: true
            url: url
            static_url: static_url
          note: note
          bot: true
          moved: null
          created_at: 2000-01-23T04:56:07.000+00:00
          avatar: avatar
          source:
            note: note
            follow_requests_count: 1
            privacy: public
            language: language
            sensitive: true
            fields:
            - verified_at: 2000-01-23T04:56:07.000+00:00
              name: name
              value: value
            - verified_at: 2000-01-23T04:56:07.000+00:00
              name: name
              value: value
          display_name: display_name
          header_static: header_static
          mute_expires_at: 2000-01-23T04:56:07.000+00:00
          suspended: true
          url: url
          following_count: 6
          discoverable: true
          last_status_at: 2000-01-23T04:56:07.000+00:00
          statuses_count: 5
          followers_count: 0
          header: header
          id: id
          avatar_static: avatar_static
          fields:
          - verified_at: 2000-01-23T04:56:07.000+00:00
            name: name
            value: value
          - verified_at: 2000-01-23T04:56:07.000+00:00
            name: name
            value: value
          locked: true
          acct: acct
          username: username
        id: id
      externalDocs:
        url: https://docs.joinmastodon.org/entities/conversation/
      properties:
        accounts:
          description: Participants in the conversation.
          items:
            $ref: '#/components/schemas/Account'
          title: accounts
          type: array
        id:
          description: "Local database ID of the conversation. Cast from an integer,\
            \ but not guaranteed to be a number"
          title: id
          type: string
        last_status:
          $ref: '#/components/schemas/Status'
        unread:
          description: Is the conversation currently marked as unread?
          title: unread
          type: boolean
      required:
      - accounts
      - id
      - unread
      title: Conversation
    Emoji:
      description: Represents a custom emoji.
      example:
        category: category
        shortcode: shortcode
        visible_in_picker: true
        url: url
        static_url: static_url
      externalDocs:
        url: https://docs.joinmastodon.org/entities/emoji/
      properties:
        category:
          description: Used for sorting custom emoji in the picker.
          title: category
          type: string
        shortcode:
          description: The name of the custom emoji.
          title: shortcode
          type: string
        static_url:
          description: A link to a static copy of the custom emoji. The format is
            URL.
          title: static_url
          type: string
        url:
          description: A link to the custom emoji. The format is URL.
          title: url
          type: string
        visible_in_picker:
          description: Whether this Emoji should be visible in the picker or unlisted.
          title: visible_in_picker
          type: boolean
      required:
      - shortcode
      - static_url
      - url
      - visible_in_picker
      title: Emoji
      type: object
    Error:
      description: Represents an error message.
      example:
        error_description: error_description
        error: error
      externalDocs:
        url: https://docs.joinmastodon.org/entities/error/
      properties:
        error:
          title: error
          type: string
        error_description:
          title: error_description
          type: string
      required:
      - error
      title: Error
      type: object
    FeaturedTag:
      description: Represents a hashtag that is featured on a profile.
      example:
        last_status_at: 2000-01-23T04:56:07.000+00:00
        statuses_count: 0
        name: name
        id: id
        url: url
      externalDocs:
        url: https://docs.joinmastodon.org/entities/featuredtag/
      properties:
        id:
          description: The internal ID of the featured tag in the database. Cast from
            integer but not guaranteed to be a number
          title: id
          type: string
        last_status_at:
          description: The timestamp of the last authored status containing this hashtag.
            ISO 8601 Datetime.
          format: date-time
          title: last_status_at
          type: string
        name:
          description: The name of the hashtag being featured.
          title: name
          type: string
        statuses_count:
          description: The number of authored statuses containing this hashtag.
          title: statuses_count
          type: integer
        url:
          description: A link to all statuses by a user that contain this hashtag.
          title: url
          type: string
      title: FeaturedTag
    Field:
      description: Represents a profile field as a name-value pair with optional verification.
      example:
        verified_at: 2000-01-23T04:56:07.000+00:00
        name: name
        value: value
      externalDocs:
        url: https://docs.joinmastodon.org/entities/field/
      properties:
        name:
          description: The key of a given field's key-value pair.
          title: name
          type: string
        value:
          description: The value associated with the `name` key.
          title: value
          type: string
        verified_at:
          description: "Timestamp of when the server verified a URL value for a rel=\"\
            me” link. If `value` is a verified URL. Otherwise, null"
          format: date-time
          title: verified_at
          type: string
      title: Field
      type: object
    Filter:
      description: Represents a user-defined filter for determining which statuses
        should not be shown to the user.
      example:
        whole_word: true
        expires_at: expires_at
        phrase: phrase
        context:
        - home
        - home
        irreversible: true
        id: id
      externalDocs:
        url: https://docs.joinmastodon.org/entities/filter/
      properties:
        context:
          description: The contexts in which the filter should be applied.
          items:
            enum:
            - home
            - notifications
            - public
            - thread
            type: string
          title: context
          type: array
        expires_at:
          description: "When the filter should no longer be applied. ISO 8601 Datetime,\
            \ or null if the filter does not expire"
          title: expires_at
          type: string
        id:
          description: "The ID of the filter in the database. Cast from an integer,\
            \ but not guaranteed to be a number."
          title: id
          type: string
        irreversible:
          description: Should matching entities in home and notifications be dropped
            by the server?
          title: irreversible
          type: boolean
        phrase:
          description: The text to be filtered.
          title: phrase
          type: string
        whole_word:
          description: Should the filter consider word boundaries?
          title: whole_word
          type: boolean
      title: Filter
    History:
      description: Represents daily usage history of a hashtag.
      example:
        uses: uses
        accounts: accounts
        day: day
      externalDocs:
        url: https://docs.joinmastodon.org/entities/history/
      properties:
        accounts:
          description: the total of accounts using the tag within that day. Cast from
            an integer.
          title: accounts
          type: string
        day:
          description: UNIX timestamp on midnight of the given day.
          title: day
          type: string
        uses:
          description: the counted usage of the tag within that day. Cast from an
            integer.
          title: uses
          type: string
      required:
      - accounts
      - day
      - uses
      title: History
    IdentityProof:
      description: Represents a proof from an external identity provider.
      example:
        updated_at: updated_at
        profile_url: profile_url
        provider: provider
        provider_username: provider_username
        proof_url: proof_url
      externalDocs:
        url: https://docs.joinmastodon.org/entities/identityproof/
      properties:
        profile_url:
          description: The account owner's profile URL on the identity provider.
          title: profile_url
          type: string
        proof_url:
          description: "A link to a statement of identity proof, hosted by the identity\
            \ provider."
          title: proof_url
          type: string
        provider:
          description: The name of the identity provider.
          title: provider
          type: string
        provider_username:
          description: The account owner's username on the identity provider's service.
          title: provider_username
          type: string
        updated_at:
          description: When the identity proof was last updated. ISO 8601 Datetime.
          title: updated_at
          type: string
      title: IdentityProof
    Instance:
      description: Represents the software instance of Mastodon running on this domain.
      example:
        short_description: short_description
        thumbnail: thumbnail
        registrations: true
        languages:
        - languages
        - languages
        approval_required: true
        invites_enabled: true
        description: description
        contact_account:
          emojis:
          - category: category
            shortcode: shortcode
            visible_in_picker: true
            url: url
            static_url: static_url
          - category: category
            shortcode: shortcode
            visible_in_picker: true
            url: url
            static_url: static_url
          note: note
          bot: true
          moved: null
          created_at: 2000-01-23T04:56:07.000+00:00
          avatar: avatar
          source:
            note: note
            follow_requests_count: 1
            privacy: public
            language: language
            sensitive: true
            fields:
            - verified_at: 2000-01-23T04:56:07.000+00:00
              name: name
              value: value
            - verified_at: 2000-01-23T04:56:07.000+00:00
              name: name
              value: value
          display_name: display_name
          header_static: header_static
          mute_expires_at: 2000-01-23T04:56:07.000+00:00
          suspended: true
          url: url
          following_count: 6
          discoverable: true
          last_status_at: 2000-01-23T04:56:07.000+00:00
          statuses_count: 5
          followers_count: 0
          header: header
          id: id
          avatar_static: avatar_static
          fields:
          - verified_at: 2000-01-23T04:56:07.000+00:00
            name: name
            value: value
          - verified_at: 2000-01-23T04:56:07.000+00:00
            name: name
            value: value
          locked: true
          acct: acct
          username: username
        title: title
        uri: uri
        version: version
        urls: "{}"
        stats: "{}"
        email: email
      externalDocs:
        url: https://docs.joinmastodon.org/entities/instance/
      properties:
        approval_required:
          description: Whether registrations require moderator approval.
          title: approval_required
          type: boolean
        contact_account:
          $ref: '#/components/schemas/Account'
        description:
          description: Admin-defined description of the Mastodon site.
          title: description
          type: string
        email:
          description: An email that may be contacted for any inquiries.
          title: email
          type: string
        invites_enabled:
          description: Whether invites are enabled.
          title: invites_enabled
          type: boolean
        languages:
          description: Primary languages of the website and its staff. ISO 639 Part
            1-5 language codes.
          items:
            type: string
          title: languages
          type: array
        registrations:
          description: Whether registrations are enabled.
          title: registrations
          type: boolean
        short_description:
          description: A shorter description defined by the admin.
          title: short_description
          type: string
        stats:
          description: Statistics about how much information the instance contains.
          title: stats
          type: object
        thumbnail:
          description: Banner image for the website.
          nullable: true
          title: thumbnail
          type: string
        title:
          description: The title of the website.
          title: title
          type: string
        uri:
          description: The domain name of the instance.
          title: uri
          type: string
        urls:
          description: URLs of interest for clients apps.
          title: urls
          type: object
        version:
          description: The version of Mastodon installed on the instance.
          title: version
          type: string
      required:
      - approval_required
      - description
      - domain_count
      - email
      - invites_enabled
      - languages
      - registrations
      - short_description
      - stats
      - status_count
      - title
      - uri
      - urls
      - user_count
      - version
      title: Instance
    List:
      description: Represents a list of some users that the authenticated user follows.
      example:
        replies_policy: followed
        id: id
        title: title
      externalDocs:
        url: https://docs.joinmastodon.org/entities/list/
      properties:
        id:
          description: "The internal database ID of the list. Cast from an integer,\
            \ but not guaranteed to be a number."
          title: id
          type: string
        replies_policy:
          description: The user-defined title of the list.
          enum:
          - followed
          - list
          - none
          title: replies_policy
          type: string
        title:
          description: The user-defined title of the list.
          title: title
          type: string
      required:
      - id
      - replies_policy
      - title
      title: List
    Marker:
      description: Represents the last read position within a user's timelines.
      externalDocs:
        url: https://docs.joinmastodon.org/entities/marker/
      properties:
        home:
          description: Information about the user's position in the home timeline.
          type: object
        last_read_id:
          description: The ID of the most recently viewed entity. Cast from integer
            but not guaranteed to be a number
          type: string
        notifications:
          description: Information about the user's position in their notifications.
          type: object
        updated_at:
          description: The timestamp of when the marker was set. ISO 8601 Datetime.
          format: date-time
          type: string
        version:
          description: Used for locking to prevent write conflicts.
          type: integer
    Mention:
      description: Represents a mention of a user within the content of a status.
      example:
        id: id
        acct: acct
        url: url
        username: username
      externalDocs:
        url: https://docs.joinmastodon.org/entities/mention/
      properties:
        acct:
          description: "The webfinger acct URI of the mentioned user. Equivalent to\
            \ `username` for local users, or `username@domain` for remote users."
          title: acct
          type: string
        id:
          description: "The account id of the mentioned user. Cast from an integer,\
            \ but not guaranteed to be a number"
          title: id
          type: string
        url:
          description: The location of the mentioned user's profile.
          title: url
          type: string
        username:
          description: The username of the mentioned user.
          title: username
          type: string
      required:
      - acct
      - id
      - url
      - username
      title: Mention
    Notification:
      description: Represents a notification of an event relevant to the user.
      example:
        created_at: 2000-01-23T04:56:07.000+00:00
        id: id
        type: follow
        account:
          emojis:
          - category: category
            shortcode: shortcode
            visible_in_picker: true
            url: url
            static_url: static_url
          - category: category
            shortcode: shortcode
            visible_in_picker: true
            url: url
            static_url: static_url
          note: note
          bot: true
          moved: null
          created_at: 2000-01-23T04:56:07.000+00:00
          avatar: avatar
          source:
            note: note
            follow_requests_count: 1
            privacy: public
            language: language
            sensitive: true
            fields:
            - verified_at: 2000-01-23T04:56:07.000+00:00
              name: name
              value: value
            - verified_at: 2000-01-23T04:56:07.000+00:00
              name: name
              value: value
          display_name: display_name
          header_static: header_static
          mute_expires_at: 2000-01-23T04:56:07.000+00:00
          suspended: true
          url: url
          following_count: 6
          discoverable: true
          last_status_at: 2000-01-23T04:56:07.000+00:00
          statuses_count: 5
          followers_count: 0
          header: header
          id: id
          avatar_static: avatar_static
          fields:
          - verified_at: 2000-01-23T04:56:07.000+00:00
            name: name
            value: value
          - verified_at: 2000-01-23T04:56:07.000+00:00
            name: name
            value: value
          locked: true
          acct: acct
          username: username
        status:
          pinned: true
          in_reply_to_id: in_reply_to_id
          favourites_count: 0
          media_attachments:
          - remote_url: remote_url
            meta: "{}"
            preview_url: preview_url
            blurhash: blurhash
            description: description
            id: id
            type: unknown
            url: url
            text_url: text_url
          - remote_url: remote_url
            meta: "{}"
            preview_url: preview_url
            blurhash: blurhash
            description: description
            id: id
            type: unknown
            url: url
            text_url: text_url
          created_at: 2000-01-23T04:56:07.000+00:00
          replies_count: 2
          language: language
          poll:
            emojis:
            - category: category
              shortcode: shortcode
              visible_in_picker: true
              url: url
              static_url: static_url
            - category: category
              shortcode: shortcode
              visible_in_picker: true
              url: url
              static_url: static_url
            voters_count: 1
            votes_count: 5
            expired: true
            expires_at: 2000-01-23T04:56:07.000+00:00
            own_votes:
            - 6
            - 6
            multiple: true
            options:
            - ""
            - ""
            voted: true
            id: id
          in_reply_to_account_id: in_reply_to_account_id
          content: content
          reblog: null
          spoiler_text: spoiler_text
          id: id
          reblogged: true
          text: text
          muted: true
          emojis:
          - category: category
            shortcode: shortcode
            visible_in_picker: true
            url: url
            static_url: static_url
          - category: category
            shortcode: shortcode
            visible_in_picker: true
            url: url
            static_url: static_url
          reblogs_count: 5
          visibility: public
          bookmarked: true
          sensitive: true
          uri: uri
          url: url
          tags:
          - name: name
            history:
            - uses: uses
              accounts: accounts
              day: day
            - uses: uses
              accounts: accounts
              day: day
            url: url
          - name: name
            history:
            - uses: uses
              accounts: accounts
              day: day
            - uses: uses
              accounts: accounts
              day: day
            url: url
          application:
            vapid_key: vapid_key
            website: website
            name: name
            client_secret: client_secret
            client_id: client_id
          favourited: true
          mentions:
          - id: id
            acct: acct
            url: url
            username: username
          - id: id
            acct: acct
            url: url
            username: username
          account:
            emojis:
            - category: category
              shortcode: shortcode
              visible_in_picker: true
              url: url
              static_url: static_url
            - category: category
              shortcode: shortcode
              visible_in_picker: true
              url: url
              static_url: static_url
            note: note
            bot: true
            moved: null
            created_at: 2000-01-23T04:56:07.000+00:00
            avatar: avatar
            source:
              note: note
              follow_requests_count: 1
              privacy: public
              language: language
              sensitive: true
              fields:
              - verified_at: 2000-01-23T04:56:07.000+00:00
                name: name
                value: value
              - verified_at: 2000-01-23T04:56:07.000+00:00
                name: name
                value: value
            display_name: display_name
            header_static: header_static
            mute_expires_at: 2000-01-23T04:56:07.000+00:00
            suspended: true
            url: url
            following_count: 6
            discoverable: true
            last_status_at: 2000-01-23T04:56:07.000+00:00
            statuses_count: 5
            followers_count: 0
            header: header
            id: id
            avatar_static: avatar_static
            fields:
            - verified_at: 2000-01-23T04:56:07.000+00:00
              name: name
              value: value
            - verified_at: 2000-01-23T04:56:07.000+00:00
              name: name
              value: value
            locked: true
            acct: acct
            username: username
          card:
            author_name: author_name
            image: image
            blurhash: blurhash
            description: description
            provider_url: provider_url
            title: title
            type: link
            url: url
            author_url: author_url
            width: 6
            html: html
            provider_name: provider_name
            height: 0
      externalDocs:
        url: https://docs.joinmastodon.org/entities/notification/
      properties:
        account:
          $ref: '#/components/schemas/Account'
        created_at:
          description: The timestamp of the notification. ISO 8601 Datetime.
          format: date-time
          title: created_at
          type: string
        id:
          description: "The id of the notification in the database. Cast from an integer,\
            \ but not guaranteed to be a number."
          title: id
          type: string
        status:
          $ref: '#/components/schemas/Status'
        type:
          description: The type of event that resulted in the notification.
          enum:
          - follow
          - follow_request
          - mention
          - reblog
          - favourite
          - poll
          - status
          title: type
          type: string
      required:
      - account
      - created_at
      - id
      - type
      title: Notification
    Poll:
      description: Represents a poll attached to a status.
      example:
        emojis:
        - category: category
          shortcode: shortcode
          visible_in_picker: true
          url: url
          static_url: static_url
        - category: category
          shortcode: shortcode
          visible_in_picker: true
          url: url
          static_url: static_url
        voters_count: 1
        votes_count: 5
        expired: true
        expires_at: 2000-01-23T04:56:07.000+00:00
        own_votes:
        - 6
        - 6
        multiple: true
        options:
        - ""
        - ""
        voted: true
        id: id
      externalDocs:
        url: https://docs.joinmastodon.org/entities/poll/
      properties:
        emojis:
          description: Custom emoji to be used for rendering poll options.
          items:
            $ref: '#/components/schemas/Emoji'
          title: emojis
          type: array
        expired:
          description: Is the poll currently expired?
          title: expired
          type: boolean
        expires_at:
          description: "When the poll ends. ISO 8601 Datetime, or null if the poll\
            \ does not end."
          format: date-time
          title: expires_at
          type: string
        id:
          description: "The ID of the poll in the database. Cast from an integer,\
            \ but not guaranteed to be a number."
          title: id
          type: string
        multiple:
          description: Does the poll allow multiple-choice answers?
          title: multiple
          type: boolean
        options:
          description: Possible answers for the poll.
          items: {}
          title: options
          type: array
        own_votes:
          description: "When called with a user token, which options has the authorized\
            \ user chosen? Contains an array of index values for `options`. Array\
            \ of Number, or null if no current user"
          items:
            type: integer
          title: own_votes
          type: array
        voted:
          description: "When called with a user token, has the authorized user voted?\
            \ Boolean, or null if no current user"
          title: voted
          type: boolean
        voters_count:
          description: "How many unique accounts have voted on a multiple-choice poll.\
            \ Number, or null if `multiple` is false."
          title: voters_count
          type: integer
        votes_count:
          description: How many votes have been received.
          title: votes_count
          type: integer
      title: Poll
    Preferences:
      description: Represents a user's preferences.
      example:
        reading:expand:spoilers: true
        posting:default:language: posting:default:language
        posting:default:sensitive: true
        reading:expand:media: default
        posting:default:visibility: public
      externalDocs:
        url: https://docs.joinmastodon.org/entities/preferences/
      properties:
        posting:default:language:
          description: "Default language for new posts. Equivalent to [Source#language](https://docs.joinmastodon.org/entities/source/#language).\
            \ ISO 639-1 language two-letter code, or null"
          title: posting:default:language
          type: string
        posting:default:sensitive:
          description: "Default sensitivity flag for new posts. Equivalent to [Source#sensitive](https://docs.joinmastodon.org/entities/source/#sensitive)."
          title: posting:default:sensitive
          type: boolean
        posting:default:visibility:
          description: "Default visibility for new posts. Equivalent to [Source#privacy](https://docs.joinmastodon.org/entities/source/#privacy)."
          enum:
          - public
          - unlisted
          - private
          - direct
          title: posting:default:visibility
          type: string
        reading:expand:media:
          description: Whether media attachments should be automatically displayed
            or blurred/hidden.
          enum:
          - default
          - show_all
          - hide_all
          title: reading:expand:media
          type: string
        reading:expand:spoilers:
          description: Whether CWs should be expanded by default.
          title: reading:expand:spoilers
          type: boolean
      title: Preferences
    PushSubscription:
      description: Represents a subscription to the push streaming server.
      example:
        alerts: "{}"
        endpoint: endpoint
        id: id
        server_key: server_key
      externalDocs:
        url: https://docs.joinmastodon.org/entities/pushsubscription/
      properties:
        alerts:
          description: Which alerts should be delivered to the `endpoint`.
          title: alerts
          type: object
        endpoint:
          description: Where push alerts will be sent to.
          title: endpoint
          type: string
        id:
          description: "The ID of the push subscription in the database. Cast from\
            \ an integer, but not guaranteed to be a number."
          title: id
          type: string
        server_key:
          description: The streaming server's VAPID key.
          title: server_key
          type: string
      required:
      - alerts
      - endpoint
      - id
      - server_key
      title: PushSubscription
    Relationship:
      description: "Represents the relationship between accounts, such as following\
        \ / blocking / muting / etc."
      example:
        note: note
        notifying: true
        domain_blocking: true
        endorsed: true
        followed_by: true
        muting: true
        requested: true
        blocked_by: true
        blocking: true
        following: true
        muting_notifications: true
        id: id
        showing_reblogs: true
      externalDocs:
        url: https://docs.joinmastodon.org/entities/relationship/
      properties:
        blocked_by:
          description: Is this user blocking you?
          title: blocked_by
          type: boolean
        blocking:
          description: Are you blocking this user?
          title: blocking
          type: boolean
        domain_blocking:
          description: Are you blocking this user's domain?
          title: domain_blocking
          type: boolean
        endorsed:
          description: Are you featuring this user on your profile?
          title: endorsed
          type: boolean
        followed_by:
          description: Are you followed by this user?
          title: followed_by
          type: boolean
        following:
          description: Are you following this user?
          title: following
          type: boolean
        id:
          description: "The account id. Cast from an integer, but not guaranteed to\
            \ be a number."
          title: id
          type: string
        muting:
          description: Are you muting this user?
          title: muting
          type: boolean
        muting_notifications:
          description: Are you muting notifications from this user?
          title: muting_notifications
          type: boolean
        note:
          description: This user's profile bio
          title: note
          type: string
        notifying:
          description: Have you enabled notifications for this user?
          title: notifying
          type: boolean
        requested:
          description: Do you have a pending follow request for this user?
          title: requested
          type: boolean
        showing_reblogs:
          description: Are you receiving this user's boosts in your home timeline?
          title: showing_reblogs
          type: boolean
      required:
      - blocked_by
      - blocking
      - domain_blocking
      - endorsed
      - followed_by
      - following
      - id
      - muting
      - muting_notifications
      - note
      - notifying
      - requested
      - showing_reblogs
      title: Relationship
    Report:
      description: "Reports filed against users and/or statuses, to be taken action\
        \ on by moderators."
      example:
        rule_ids:
        - 0
        - 0
        status_ids:
        - 6
        - 6
        action_taken: true
        created_at: 2000-01-23T04:56:07.000+00:00
        comment: comment
        action_taken_at: 2000-01-23T04:56:07.000+00:00
        id: id
        category: other
        target_account:
          emojis:
          - category: category
            shortcode: shortcode
            visible_in_picker: true
            url: url
            static_url: static_url
          - category: category
            shortcode: shortcode
            visible_in_picker: true
            url: url
            static_url: static_url
          note: note
          bot: true
          moved: null
          created_at: 2000-01-23T04:56:07.000+00:00
          avatar: avatar
          source:
            note: note
            follow_requests_count: 1
            privacy: public
            language: language
            sensitive: true
            fields:
            - verified_at: 2000-01-23T04:56:07.000+00:00
              name: name
              value: value
            - verified_at: 2000-01-23T04:56:07.000+00:00
              name: name
              value: value
          display_name: display_name
          header_static: header_static
          mute_expires_at: 2000-01-23T04:56:07.000+00:00
          suspended: true
          url: url
          following_count: 6
          discoverable: true
          last_status_at: 2000-01-23T04:56:07.000+00:00
          statuses_count: 5
          followers_count: 0
          header: header
          id: id
          avatar_static: avatar_static
          fields:
          - verified_at: 2000-01-23T04:56:07.000+00:00
            name: name
            value: value
          - verified_at: 2000-01-23T04:56:07.000+00:00
            name: name
            value: value
          locked: true
          acct: acct
          username: username
        forwarded: true
      externalDocs:
        url: https://docs.joinmastodon.org/entities/report/
      properties:
        action_taken:
          title: action_taken
          type: boolean
        action_taken_at:
          format: date-time
          title: action_taken_at
          type: string
        category:
          enum:
          - other
          - spam
          - violation
          title: category
          type: string
        comment:
          title: comment
          type: string
        created_at:
          format: date-time
          title: created_at
          type: string
        forwarded:
          title: forwarded
          type: boolean
        id:
          title: id
          type: string
        rule_ids:
          items:
            type: integer
          title: rule_ids
          type: array
        status_ids:
          items:
            type: integer
          title: status_ids
          type: array
        target_account:
          $ref: '#/components/schemas/Account'
      title: Report
    Results:
      description: Represents the results of a search.
      externalDocs:
        url: https://docs.joinmastodon.org/entities/results/
      properties:
        accounts:
          description: Accounts which match the given query.
          items:
            $ref: '#/components/schemas/Account'
          type: array
        hashtags:
          description: Hashtags which match the given query.
          items:
            $ref: '#/components/schemas/Tag'
          type: array
        statuses:
          description: Statuses which match the given query.
          items:
            $ref: '#/components/schemas/Status'
          type: array
      required:
      - accounts
      - hashtags
      - statuses
    ScheduledStatus:
      description: Represents a status that will be published at a future scheduled
        date.
      example:
        media_attachments:
        - remote_url: remote_url
          meta: "{}"
          preview_url: preview_url
          blurhash: blurhash
          description: description
          id: id
          type: unknown
          url: url
          text_url: text_url
        - remote_url: remote_url
          meta: "{}"
          preview_url: preview_url
          blurhash: blurhash
          description: description
          id: id
          type: unknown
          url: url
          text_url: text_url
        scheduled_at: 2000-01-23T04:56:07.000+00:00
        id: id
        params:
          media_ids:
          - media_ids
          - media_ids
          visibility: visibility
          in_reply_to_id: in_reply_to_id
          spoiler_text: spoiler_text
          scheduled_at: 2000-01-23T04:56:07.000+00:00
          sensitive: true
          text: text
          application_id: application_id
      externalDocs:
        url: https://docs.joinmastodon.org/entities/scheduledstatus/
      properties:
        id:
          description: "ID of the scheduled status in the database. Cast from an integer,\
            \ but not guaranteed to be a number."
          title: id
          type: string
        media_attachments:
          description: Array of attachements
          items:
            $ref: '#/components/schemas/Attachment'
          title: media_attachments
          type: array
        params:
          $ref: '#/components/schemas/StatusParams'
        scheduled_at:
          description: ID of the status in the database. ISO 8601 Datetime.
          format: date-time
          title: scheduled_at
          type: string
      required:
      - id
      - media_attachments
      - params
      - scheduled_at
      title: ScheduledStatus
    Source:
      description: "Represents display or publishing preferences of user's own account.\
        \ Returned as an additional entity when verifying and updated credentials,\
        \ as an attribute of Account."
      example:
        note: note
        follow_requests_count: 1
        privacy: public
        language: language
        sensitive: true
        fields:
        - verified_at: 2000-01-23T04:56:07.000+00:00
          name: name
          value: value
        - verified_at: 2000-01-23T04:56:07.000+00:00
          name: name
          value: value
      externalDocs:
        url: https://docs.joinmastodon.org/entities/source/
      properties:
        fields:
          description: Metadata about the account.
          items:
            $ref: '#/components/schemas/Field'
          title: fields
          type: array
        follow_requests_count:
          description: The number of pending follow requests
          title: follow_requests_count
          type: integer
        language:
          description: "The default posting language for new statuses, ISO 639-1 language\
            \ two-letter code."
          title: language
          type: string
        note:
          description: Profile bio
          title: note
          type: string
        privacy:
          description: The default post privacy to be used for new statuses.
          enum:
          - public
          - unlisted
          - private
          - direct
          title: privacy
          type: string
        sensitive:
          description: Whether new statuses should be marked sensitive by default.
          title: sensitive
          type: boolean
      title: Source
      type: object
    Status:
      description: Represents a status posted by an account.
      example:
        pinned: true
        in_reply_to_id: in_reply_to_id
        favourites_count: 0
        media_attachments:
        - remote_url: remote_url
          meta: "{}"
          preview_url: preview_url
          blurhash: blurhash
          description: description
          id: id
          type: unknown
          url: url
          text_url: text_url
        - remote_url: remote_url
          meta: "{}"
          preview_url: preview_url
          blurhash: blurhash
          description: description
          id: id
          type: unknown
          url: url
          text_url: text_url
        created_at: 2000-01-23T04:56:07.000+00:00
        replies_count: 2
        language: language
        poll:
          emojis:
          - category: category
            shortcode: shortcode
            visible_in_picker: true
            url: url
            static_url: static_url
          - category: category
            shortcode: shortcode
            visible_in_picker: true
            url: url
            static_url: static_url
          voters_count: 1
          votes_count: 5
          expired: true
          expires_at: 2000-01-23T04:56:07.000+00:00
          own_votes:
          - 6
          - 6
          multiple: true
          options:
          - ""
          - ""
          voted: true
          id: id
        in_reply_to_account_id: in_reply_to_account_id
        content: content
        reblog: null
        spoiler_text: spoiler_text
        id: id
        reblogged: true
        text: text
        muted: true
        emojis:
        - category: category
          shortcode: shortcode
          visible_in_picker: true
          url: url
          static_url: static_url
        - category: category
          shortcode: shortcode
          visible_in_picker: true
          url: url
          static_url: static_url
        reblogs_count: 5
        visibility: public
        bookmarked: true
        sensitive: true
        uri: uri
        url: url
        tags:
        - name: name
          history:
          - uses: uses
            accounts: accounts
            day: day
          - uses: uses
            accounts: accounts
            day: day
          url: url
        - name: name
          history:
          - uses: uses
            accounts: accounts
            day: day
          - uses: uses
            accounts: accounts
            day: day
          url: url
        application:
          vapid_key: vapid_key
          website: website
          name: name
          client_secret: client_secret
          client_id: client_id
        favourited: true
        mentions:
        - id: id
          acct: acct
          url: url
          username: username
        - id: id
          acct: acct
          url: url
          username: username
        account:
          emojis:
          - category: category
            shortcode: shortcode
            visible_in_picker: true
            url: url
            static_url: static_url
          - category: category
            shortcode: shortcode
            visible_in_picker: true
            url: url
            static_url: static_url
          note: note
          bot: true
          moved: null
          created_at: 2000-01-23T04:56:07.000+00:00
          avatar: avatar
          source:
            note: note
            follow_requests_count: 1
            privacy: public
            language: language
            sensitive: true
            fields:
            - verified_at: 2000-01-23T04:56:07.000+00:00
              name: name
              value: value
            - verified_at: 2000-01-23T04:56:07.000+00:00
              name: name
              value: value
          display_name: display_name
          header_static: header_static
          mute_expires_at: 2000-01-23T04:56:07.000+00:00
          suspended: true
          url: url
          following_count: 6
          discoverable: true
          last_status_at: 2000-01-23T04:56:07.000+00:00
          statuses_count: 5
          followers_count: 0
          header: header
          id: id
          avatar_static: avatar_static
          fields:
          - verified_at: 2000-01-23T04:56:07.000+00:00
            name: name
            value: value
          - verified_at: 2000-01-23T04:56:07.000+00:00
            name: name
            value: value
          locked: true
          acct: acct
          username: username
        card:
          author_name: author_name
          image: image
          blurhash: blurhash
          description: description
          provider_url: provider_url
          title: title
          type: link
          url: url
          author_url: author_url
          width: 6
          html: html
          provider_name: provider_name
          height: 0
      externalDocs:
        url: https://docs.joinmastodon.org/entities/status/
      properties:
        account:
          $ref: '#/components/schemas/Account'
        application:
          $ref: '#/components/schemas/Application'
        bookmarked:
          description: Have you bookmarked this status?
          title: bookmarked
          type: boolean
        card:
          $ref: '#/components/schemas/Card'
        content:
          description: HTML-encoded status content.
          title: content
          type: string
        created_at:
          description: The date when this status was created.
          format: date-time
          title: created_at
          type: string
        emojis:
          description: Custom emoji to be used when rendering status content.
          items:
            $ref: '#/components/schemas/Emoji'
          title: emojis
          type: array
        favourited:
          description: Have you favourited this status?
          title: favourited
          type: boolean
        favourites_count:
          description: How many favourites this status has received.
          title: favourites_count
          type: integer
        id:
          description: ID of the status in the database. Cast from an integer but
            not guaranteed to be a number.
          title: id
          type: string
        in_reply_to_account_id:
          description: ID of the account being replied to.
          title: in_reply_to_account_id
          type: string
        in_reply_to_id:
          description: ID of the status being replied. Cast from an integer but not
            guaranteed to be a number.
          title: in_reply_to_id
          type: string
        language:
          description: Primary language of this status. ISO 639 Part 1 two-letter
            language code.
          title: language
          type: string
        media_attachments:
          description: Media that is attached to this status.
          items:
            $ref: '#/components/schemas/Attachment'
          title: media_attachments
          type: array
        mentions:
          description: Mentions of users within the status content.
          items:
            $ref: '#/components/schemas/Mention'
          title: mentions
          type: array
        muted:
          description: Have you muted notifications for this status's conversation?
          title: muted
          type: boolean
        pinned:
          description: Have you pinned this status? Only appears if the status is
            pinnable.
          title: pinned
          type: boolean
        poll:
          $ref: '#/components/schemas/Poll'
        reblog:
          $ref: '#/components/schemas/Status'
        reblogged:
          description: Have you boosted this status?
          title: reblogged
          type: boolean
        reblogs_count:
          description: How many boosts this status has received.
          title: reblogs_count
          type: integer
        replies_count:
          description: How many replies this status has received.
          title: replies_count
          type: integer
        sensitive:
          description: Is this status marked as sensitive content?
          title: sensitive
          type: boolean
        spoiler_text:
          description: "Subject or summary line, below which status content is collapsed\
            \ until expanded."
          title: spoiler_text
          type: string
        tags:
          description: Hashtags used within the status content.
          items:
            $ref: '#/components/schemas/Tag'
          title: tags
          type: array
        text:
          description: "Plain-text source of a status. Returned instead of `content`\
            \ when status is deleted, so the user may redraft from the source text\
            \ without the client having to reverse-engineer the original text from\
            \ the HTML content."
          title: text
          type: string
        uri:
          description: URI of the status used for federation.
          title: uri
          type: string
        url:
          description: A link to the status's HTML representation.
          title: url
          type: string
        visibility:
          description: Visibility of this status.
          enum:
          - public
          - unlisted
          - private
          - direct
          title: visibility
          type: string
      title: Status
      type: object
    StatusParams:
      example:
        media_ids:
        - media_ids
        - media_ids
        visibility: visibility
        in_reply_to_id: in_reply_to_id
        spoiler_text: spoiler_text
        scheduled_at: 2000-01-23T04:56:07.000+00:00
        sensitive: true
        text: text
        application_id: application_id
      properties:
        application_id:
          description: application_id
          title: application_id
          type: string
        in_reply_to_id:
          description: in_reply_to_id
          title: in_reply_to_id
          type: string
        media_ids:
          description: media_ids
          items:
            type: string
          title: media_ids
          type: array
        scheduled_at:
          description: scheduled_at
          format: date-time
          title: scheduled_at
          type: string
        sensitive:
          description: sensitive
          title: sensitive
          type: boolean
        spoiler_text:
          description: spoiler_text
          title: spoiler_text
          type: string
        text:
          description: text
          title: text
          type: string
        visibility:
          description: visibility
          title: visibility
          type: string
      title: StatusParams
    Tag:
      description: Represents a hashtag used within the content of a status.
      example:
        name: name
        history:
        - uses: uses
          accounts: accounts
          day: day
        - uses: uses
          accounts: accounts
          day: day
        url: url
      externalDocs:
        url: https://docs.joinmastodon.org/entities/tag/
      properties:
        history:
          description: Usage statistics for given days.
          items:
            $ref: '#/components/schemas/History'
          title: history
          type: array
        name:
          description: The value of the hashtag after the `#` sign.
          title: name
          type: string
        url:
          description: A link to the hashtag on the instance.
          title: url
          type: string
      required:
      - name
      - url
      title: Tag
    Token:
      description: Represents an OAuth token used for authenticating with the API
        and performing actions.
      externalDocs:
        url: https://docs.joinmastodon.org/entities/token/
      properties:
        access_token:
          description: An OAuth token to be used for authorization.
          type: string
        created_at:
          description: When the token was generated. UNIX Timestamp.
          type: integer
        scope:
          description: "The OAuth scopes granted by this token, space-separated."
          type: string
        token_type:
          description: The OAuth token type. Mastodon uses `Bearer` tokens.
          type: string
    _api_v1_accounts_post_request:
      properties:
        agreement:
          description: "Whether the user agrees to the local rules, terms, and policies.\
            \ These should be presented to the user in order to allow them to consent\
            \ before setting this parameter to TRUE."
          title: agreement
          type: boolean
        email:
          description: The email address to be used for login
          title: email
          type: string
        locale:
          description: The language of the confirmation email that will be sent
          title: locale
          type: string
        password:
          description: The password to be used for login
          format: password
          title: password
          type: string
        reason:
          description: Text that will be reviewed by moderators if registrations require
            manual approval.
          title: reason
          type: string
        username:
          description: The desired username for the account
          title: username
          type: string
      required:
      - agreement
      - email
      - locale
      - password
      - token
      - username
      title: _api_v1_accounts_post_request
      type: object
    _api_v1_accounts_update_credentials_patch_request_source:
      properties:
        language:
          description: Default language to use for authored statuses. (ISO 6391)
          title: language
          type: string
        privacy:
          description: Default post privacy for authored statuses.
          title: privacy
          type: string
        sensitive:
          description: Whether to mark authored statuses as sensitive by default.
          title: sensitive
          type: boolean
      title: _api_v1_accounts_update_credentials_patch_request_source
      type: object
    _api_v1_accounts_update_credentials_patch_request:
      properties:
        avatar:
          description: Avatar image encoded using multipart/form-data
          title: avatar
          type: string
        bot:
          description: Whether the account has a bot flag.
          title: bot
          type: boolean
        discoverable:
          description: Whether the account should be shown in the profile directory.
          title: discoverable
          type: string
        display_name:
          description: The display name to use for the profile.
          title: display_name
          type: string
        fields_attributes:
          description: "Profile metadata `name` and `value`. (By default, max 4 fields\
            \ and 255 characters per property/value)"
          title: fields_attributes
          type: object
        header:
          description: Header image encoded using multipart/form-data
          title: header
          type: string
        locked:
          description: Whether manual approval of follow requests is required.
          title: locked
          type: boolean
        note:
          description: The account bio.
          title: note
          type: string
        source:
          $ref: '#/components/schemas/_api_v1_accounts_update_credentials_patch_request_source'
      title: _api_v1_accounts_update_credentials_patch_request
      type: object
    _api_v1_accounts__id__follow_post_request:
      properties:
        notify:
          default: false
          description: Receive notifications when this account posts a status? Defaults
            to false.
          title: notify
          type: boolean
        reblogs:
          default: true
          description: Receive this account's reblogs in home timeline? Defaults to
            true.
          title: reblogs
          type: boolean
      title: _api_v1_accounts__id__follow_post_request
      type: object
    _api_v1_accounts__id__mute_post_request:
      properties:
        duration:
          default: 0
          description: "How long the mute should last, in seconds. Defaults to 0 (indefinite)."
          title: duration
          type: integer
        notifications:
          default: true
          description: Mute notifications in addition to statuses? Defaults to true.
          title: notifications
          type: boolean
      title: _api_v1_accounts__id__mute_post_request
      type: object
    _api_v1_accounts__id__note_post_request:
      properties:
        comment:
          description: The comment to be set on that user. Provide an empty string
            or leave out this parameter to clear the currently set note.
          title: comment
          type: string
      title: _api_v1_accounts__id__note_post_request
      type: object
    _api_v1_admin_accounts__id__action_post_request:
      properties:
        report_id:
          description: ID of an associated report that caused this action to be taken
          title: report_id
          type: string
        send_email_notification:
          description: Whether an email should be sent to the user with the above
            information.
          title: send_email_notification
          type: boolean
        text:
          description: Additional text for clarification of why this action was taken
          title: text
          type: string
        type:
          description: "Type of action to be taken. Enumerable oneOf: none disable\
            \ silence suspend"
          enum:
          - none
          - disable
          - silence
          - suspend
          title: type
          type: string
        warning_preset_id:
          description: ID of a preset warning
          title: warning_preset_id
          type: string
      title: _api_v1_admin_accounts__id__action_post_request
      type: object
    _api_v1_apps_post_request:
      properties:
        client_name:
          description: A name for your application
          title: client_name
          type: string
        redirect_uris:
          description: "Where the user should be redirected after authorization. To\
            \ display the authorization code to the user instead of redirecting to\
            \ a web page, use urn:ietf:wg:oauth:2.0:oob in this parameter."
          title: redirect_uris
          type: string
        scopes:
          description: "Space separated list of scopes. If none is provided, defaults\
            \ to read."
          title: scopes
          type: string
        website:
          description: A URL to the homepage of your app
          title: website
          type: string
      required:
      - client_name
      - redirect_uris
      title: _api_v1_apps_post_request
      type: object
    _api_v1_apps_post_200_response:
      example:
        vapid_key: vapid_key
        website: website
        name: name
        client_secret: client_secret
        id: id
        redirect_uri: redirect_uri
        client_id: client_id
      properties:
        client_id:
          title: client_id
          type: string
        client_secret:
          title: client_secret
          type: string
        id:
          title: id
          type: string
        name:
          title: name
          type: string
        redirect_uri:
          title: redirect_uri
          type: string
        vapid_key:
          title: vapid_key
          type: string
        website:
          title: website
          type: string
      title: _api_v1_apps_post_200_response
      type: object
    _api_v1_domain_blocks_post_request:
      properties:
        domain:
          description: Domain to block.
          title: domain
          type: string
      required:
      - domain
      title: _api_v1_domain_blocks_post_request
      type: object
    _api_v1_featured_tags_post_request:
      properties:
        name:
          title: name
          type: string
      title: _api_v1_featured_tags_post_request
      type: object
    _api_v1_filters_post_request:
      properties:
        context:
          description: "Array of enumerable strings `home`, `notifications`, `public`,\
            \ `thread`. At least one context must be specified."
          items:
            enum:
            - home
            - notifications
            - public
            - thread
            type: string
          title: context
          type: array
        expires_in:
          description: "Number of seconds from now the filter should expire. Otherwise,\
            \ null for a filter that doesn't expire."
          title: expires_in
          type: integer
        irreversible:
          description: Should the server irreversibly drop matching entities from
            home and notifications?
          title: irreversible
          type: boolean
        phrase:
          description: Text to be filtered.
          title: phrase
          type: string
        whole_word:
          description: Consider word boundaries?
          title: whole_word
          type: boolean
      required:
      - context
      - phrase
      title: _api_v1_filters_post_request
      type: object
    _api_v1_lists_put_request:
      properties:
        replies_policy:
          default: list
          description: Enumerable oneOf followed list none. Defaults to list.
          enum:
          - followed
          - list
          - none
          title: replies_policy
          type: string
        title:
          description: The title of the list to be created.
          title: title
          type: string
      title: _api_v1_lists_put_request
      type: object
    _api_v1_lists_post_request:
      properties:
        replies_policy:
          default: list
          description: Enumerable oneOf followed list none. Defaults to list.
          enum:
          - followed
          - list
          - none
          title: replies_policy
          type: string
        title:
          description: The title of the list to be created.
          title: title
          type: string
      required:
      - title
      title: _api_v1_lists_post_request
      type: object
    _api_v1_lists__id__accounts_post_request:
      properties:
        account_ids:
          description: Array of account IDs to add to the list.
          items:
            type: string
          title: account_ids
          type: array
      required:
      - account_ids
      title: _api_v1_lists__id__accounts_post_request
      type: object
    _api_v1_media_post_request:
      properties:
        description:
          description: "A plain-text description of the media, for accessibility purposes."
          title: description
          type: string
        file:
          description: "The file to be attached, using multipart form data."
          format: binary
          title: file
          type: string
        focus:
          description: "Two floating points (x,y), comma-delimited, ranging from -1.0\
            \ to 1.0 (see “Focal points” below)"
          title: focus
          type: string
        thumbnail:
          description: "The custom thumbnail of the media to be attached, using multipart\
            \ form data."
          format: binary
          title: thumbnail
          type: string
      required:
      - file
      title: _api_v1_media_post_request
      type: object
    _api_v1_polls__id__post_request:
      properties:
        choices:
          items:
            type: string
          title: choices
          type: array
      required:
      - choices
      title: _api_v1_polls__id__post_request
      type: object
    _api_v1_push_subscription_put_request:
      properties:
        data:
          title: data
          type: string
      required:
      - data
      title: _api_v1_push_subscription_put_request
      type: object
    _api_v1_push_subscription_post_request:
      properties:
        data:
          title: data
          type: string
        subscription:
          title: subscription
          type: string
      required:
      - data
      - subscription
      title: _api_v1_push_subscription_post_request
      type: object
    _api_v1_reports_post_request:
      properties:
        account_id:
          description: ID of the account to report
          title: account_id
          type: string
        comment:
          description: Reason for the report (default max 1000 characters)
          title: comment
          type: string
        forward:
          description: "If the account is remote, should the report be forwarded to\
            \ the remote admin?"
          title: forward
          type: boolean
        status_ids:
          description: "Array of Statuses to attach to the report, for context"
          items:
            type: string
          title: status_ids
          type: array
      required:
      - account_id
      title: _api_v1_reports_post_request
      type: object
    _api_v1_scheduled_statuses__id__put_request:
      properties:
        scheduled_at:
          description: ISO 8601 Datetime at which the status will be published. Must
            be at least 5 minutes into the future.
          format: date-time
          title: scheduled_at
          type: string
      title: _api_v1_scheduled_statuses__id__put_request
      type: object
    _api_v1_statuses_post_request_inner:
      properties:
        in_reply_to_id:
          description: "ID of the status being replied to, if status is a reply"
          title: in_reply_to_id
          type: string
        language:
          description: ISO 639 language code for this status.
          title: language
          type: string
        media_ids:
          description: "Array of Attachment ids to be attached as media. If provided,\
            \ `status` becomes optional, and `poll` cannot be used."
          items:
            type: string
          title: media_ids
          type: array
        poll:
          additionalProperties: true
          items:
            type: object
          title: poll
          type: array
        scheduled_at:
          description: ISO 8601 Datetime at which to schedule a status. Providing
            this paramter will cause ScheduledStatus to be returned instead of Status.
            Must be at least 5 minutes in the future.
          title: scheduled_at
          type: string
        sensitive:
          description: Mark status and attached media as sensitive?
          title: sensitive
          type: boolean
        spoiler_text:
          description: Text to be shown as a warning or subject before the actual
            content. Statuses are generally collapsed behind this field.
          title: spoiler_text
          type: string
        status:
          description: "Text content of the status. If `media_ids` is provided, this\
            \ becomes optional. Attaching a `poll` is optional while `status` is provided."
          title: status
          type: string
        visibility:
          description: "Visibility of the posted status. Enumerable oneOf public,\
            \ unlisted, private, direct."
          enum:
          - public
          - unlisted
          - private
          - direct
          title: visibility
          type: string
      title: _api_v1_statuses_post_request_inner
      type: object
    _api_v1_statuses_post_200_response:
      oneOf:
      - $ref: '#/components/schemas/Status'
      - $ref: '#/components/schemas/ScheduledStatus'
      title: _api_v1_statuses_post_200_response
    _api_v1_statuses__id__reblog_post_request:
      properties:
        visibility:
          description: "any visibility except limited or direct (i.e. public, unlisted,\
            \ private). Defaults to public. Currently unused in UI."
          title: visibility
          type: string
      title: _api_v1_statuses__id__reblog_post_request
      type: object
    _api_v2_search_get_200_response:
      example:
        hashtags:
        - pinned: true
          in_reply_to_id: in_reply_to_id
          favourites_count: 0
          media_attachments:
          - remote_url: remote_url
            meta: "{}"
            preview_url: preview_url
            blurhash: blurhash
            description: description
            id: id
            type: unknown
            url: url
            text_url: text_url
          - remote_url: remote_url
            meta: "{}"
            preview_url: preview_url
            blurhash: blurhash
            description: description
            id: id
            type: unknown
            url: url
            text_url: text_url
          created_at: 2000-01-23T04:56:07.000+00:00
          replies_count: 2
          language: language
          poll:
            emojis:
            - category: category
              shortcode: shortcode
              visible_in_picker: true
              url: url
              static_url: static_url
            - category: category
              shortcode: shortcode
              visible_in_picker: true
              url: url
              static_url: static_url
            voters_count: 1
            votes_count: 5
            expired: true
            expires_at: 2000-01-23T04:56:07.000+00:00
            own_votes:
            - 6
            - 6
            multiple: true
            options:
            - ""
            - ""
            voted: true
            id: id
          in_reply_to_account_id: in_reply_to_account_id
          content: content
          reblog: null
          spoiler_text: spoiler_text
          id: id
          reblogged: true
          text: text
          muted: true
          emojis:
          - category: category
            shortcode: shortcode
            visible_in_picker: true
            url: url
            static_url: static_url
          - category: category
            shortcode: shortcode
            visible_in_picker: true
            url: url
            static_url: static_url
          reblogs_count: 5
          visibility: public
          bookmarked: true
          sensitive: true
          uri: uri
          url: url
          tags:
          - name: name
            history:
            - uses: uses
              accounts: accounts
              day: day
            - uses: uses
              accounts: accounts
              day: day
            url: url
          - name: name
            history:
            - uses: uses
              accounts: accounts
              day: day
            - uses: uses
              accounts: accounts
              day: day
            url: url
          application:
            vapid_key: vapid_key
            website: website
            name: name
            client_secret: client_secret
            client_id: client_id
          favourited: true
          mentions:
          - id: id
            acct: acct
            url: url
            username: username
          - id: id
            acct: acct
            url: url
            username: username
          account:
            emojis:
            - category: category
              shortcode: shortcode
              visible_in_picker: true
              url: url
              static_url: static_url
            - category: category
              shortcode: shortcode
              visible_in_picker: true
              url: url
              static_url: static_url
            note: note
            bot: true
            moved: null
            created_at: 2000-01-23T04:56:07.000+00:00
            avatar: avatar
            source:
              note: note
              follow_requests_count: 1
              privacy: public
              language: language
              sensitive: true
              fields:
              - verified_at: 2000-01-23T04:56:07.000+00:00
                name: name
                value: value
              - verified_at: 2000-01-23T04:56:07.000+00:00
                name: name
                value: value
            display_name: display_name
            header_static: header_static
            mute_expires_at: 2000-01-23T04:56:07.000+00:00
            suspended: true
            url: url
            following_count: 6
            discoverable: true
            last_status_at: 2000-01-23T04:56:07.000+00:00
            statuses_count: 5
            followers_count: 0
            header: header
            id: id
            avatar_static: avatar_static
            fields:
            - verified_at: 2000-01-23T04:56:07.000+00:00
              name: name
              value: value
            - verified_at: 2000-01-23T04:56:07.000+00:00
              name: name
              value: value
            locked: true
            acct: acct
            username: username
          card:
            author_name: author_name
            image: image
            blurhash: blurhash
            description: description
            provider_url: provider_url
            title: title
            type: link
            url: url
            author_url: author_url
            width: 6
            html: html
            provider_name: provider_name
            height: 0
        - pinned: true
          in_reply_to_id: in_reply_to_id
          favourites_count: 0
          media_attachments:
          - remote_url: remote_url
            meta: "{}"
            preview_url: preview_url
            blurhash: blurhash
            description: description
            id: id
            type: unknown
            url: url
            text_url: text_url
          - remote_url: remote_url
            meta: "{}"
            preview_url: preview_url
            blurhash: blurhash
            description: description
            id: id
            type: unknown
            url: url
            text_url: text_url
          created_at: 2000-01-23T04:56:07.000+00:00
          replies_count: 2
          language: language
          poll:
            emojis:
            - category: category
              shortcode: shortcode
              visible_in_picker: true
              url: url
              static_url: static_url
            - category: category
              shortcode: shortcode
              visible_in_picker: true
              url: url
              static_url: static_url
            voters_count: 1
            votes_count: 5
            expired: true
            expires_at: 2000-01-23T04:56:07.000+00:00
            own_votes:
            - 6
            - 6
            multiple: true
            options:
            - ""
            - ""
            voted: true
            id: id
          in_reply_to_account_id: in_reply_to_account_id
          content: content
          reblog: null
          spoiler_text: spoiler_text
          id: id
          reblogged: true
          text: text
          muted: true
          emojis:
          - category: category
            shortcode: shortcode
            visible_in_picker: true
            url: url
            static_url: static_url
          - category: category
            shortcode: shortcode
            visible_in_picker: true
            url: url
            static_url: static_url
          reblogs_count: 5
          visibility: public
          bookmarked: true
          sensitive: true
          uri: uri
          url: url
          tags:
          - name: name
            history:
            - uses: uses
              accounts: accounts
              day: day
            - uses: uses
              accounts: accounts
              day: day
            url: url
          - name: name
            history:
            - uses: uses
              accounts: accounts
              day: day
            - uses: uses
              accounts: accounts
              day: day
            url: url
          application:
            vapid_key: vapid_key
            website: website
            name: name
            client_secret: client_secret
            client_id: client_id
          favourited: true
          mentions:
          - id: id
            acct: acct
            url: url
            username: username
          - id: id
            acct: acct
            url: url
            username: username
          account:
            emojis:
            - category: category
              shortcode: shortcode
              visible_in_picker: true
              url: url
              static_url: static_url
            - category: category
              shortcode: shortcode
              visible_in_picker: true
              url: url
              static_url: static_url
            note: note
            bot: true
            moved: null
            created_at: 2000-01-23T04:56:07.000+00:00
            avatar: avatar
            source:
              note: note
              follow_requests_count: 1
              privacy: public
              language: language
              sensitive: true
              fields:
              - verified_at: 2000-01-23T04:56:07.000+00:00
                name: name
                value: value
              - verified_at: 2000-01-23T04:56:07.000+00:00
                name: name
                value: value
            display_name: display_name
            header_static: header_static
            mute_expires_at: 2000-01-23T04:56:07.000+00:00
            suspended: true
            url: url
            following_count: 6
            discoverable: true
            last_status_at: 2000-01-23T04:56:07.000+00:00
            statuses_count: 5
            followers_count: 0
            header: header
            id: id
            avatar_static: avatar_static
            fields:
            - verified_at: 2000-01-23T04:56:07.000+00:00
              name: name
              value: value
            - verified_at: 2000-01-23T04:56:07.000+00:00
              name: name
              value: value
            locked: true
            acct: acct
            username: username
          card:
            author_name: author_name
            image: image
            blurhash: blurhash
            description: description
            provider_url: provider_url
            title: title
            type: link
            url: url
            author_url: author_url
            width: 6
            html: html
            provider_name: provider_name
            height: 0
        statuses:
        - name: name
          history:
          - uses: uses
            accounts: accounts
            day: day
          - uses: uses
            accounts: accounts
            day: day
          url: url
        - name: name
          history:
          - uses: uses
            accounts: accounts
            day: day
          - uses: uses
            accounts: accounts
            day: day
          url: url
        accounts:
        - emojis:
          - category: category
            shortcode: shortcode
            visible_in_picker: true
            url: url
            static_url: static_url
          - category: category
            shortcode: shortcode
            visible_in_picker: true
            url: url
            static_url: static_url
          note: note
          bot: true
          moved: null
          created_at: 2000-01-23T04:56:07.000+00:00
          avatar: avatar
          source:
            note: note
            follow_requests_count: 1
            privacy: public
            language: language
            sensitive: true
            fields:
            - verified_at: 2000-01-23T04:56:07.000+00:00
              name: name
              value: value
            - verified_at: 2000-01-23T04:56:07.000+00:00
              name: name
              value: value
          display_name: display_name
          header_static: header_static
          mute_expires_at: 2000-01-23T04:56:07.000+00:00
          suspended: true
          url: url
          following_count: 6
          discoverable: true
          last_status_at: 2000-01-23T04:56:07.000+00:00
          statuses_count: 5
          followers_count: 0
          header: header
          id: id
          avatar_static: avatar_static
          fields:
          - verified_at: 2000-01-23T04:56:07.000+00:00
            name: name
            value: value
          - verified_at: 2000-01-23T04:56:07.000+00:00
            name: name
            value: value
          locked: true
          acct: acct
          username: username
        - emojis:
          - category: category
            shortcode: shortcode
            visible_in_picker: true
            url: url
            static_url: static_url
          - category: category
            shortcode: shortcode
            visible_in_picker: true
            url: url
            static_url: static_url
          note: note
          bot: true
          moved: null
          created_at: 2000-01-23T04:56:07.000+00:00
          avatar: avatar
          source:
            note: note
            follow_requests_count: 1
            privacy: public
            language: language
            sensitive: true
            fields:
            - verified_at: 2000-01-23T04:56:07.000+00:00
              name: name
              value: value
            - verified_at: 2000-01-23T04:56:07.000+00:00
              name: name
              value: value
          display_name: display_name
          header_static: header_static
          mute_expires_at: 2000-01-23T04:56:07.000+00:00
          suspended: true
          url: url
          following_count: 6
          discoverable: true
          last_status_at: 2000-01-23T04:56:07.000+00:00
          statuses_count: 5
          followers_count: 0
          header: header
          id: id
          avatar_static: avatar_static
          fields:
          - verified_at: 2000-01-23T04:56:07.000+00:00
            name: name
            value: value
          - verified_at: 2000-01-23T04:56:07.000+00:00
            name: name
            value: value
          locked: true
          acct: acct
          username: username
      properties:
        accounts:
          items:
            $ref: '#/components/schemas/Account'
          title: accounts
          type: array
        hashtags:
          items:
            $ref: '#/components/schemas/Status'
          title: hashtags
          type: array
        statuses:
          items:
            $ref: '#/components/schemas/Tag'
          title: statuses
          type: array
      title: _api_v2_search_get_200_response
      type: object
    _oauth_revoke_post_request:
      properties:
        client_id:
          description: "Client ID, obtained during app registration"
          title: client_id
          type: string
        client_secret:
          description: "Client secret, obtained during app registration"
          title: client_secret
          type: string
        token:
          description: "The previously obtained token, to be invalidated"
          title: token
          type: string
      required:
      - client_id
      - client_secret
      - token
      title: _oauth_revoke_post_request
      type: object
    _oauth_token_post_request:
      properties:
        client_id:
          description: "Client ID, obtained during app registration"
          title: client_id
          type: string
        client_secret:
          description: "Client secret, obtained during app registration"
          title: client_secret
          type: string
        code:
          description: "A user authorization code, obtained via /oauth/authorize"
          title: code
          type: string
        grant_type:
          description: "Set equal to authorization_code if code is provided in order\
            \ to gain user-level access. Otherwise, set equal to client_credentials\
            \ to obtain app-level access only."
          title: grant_type
          type: string
        redirect_uri:
          description: Set a URI to redirect the user to. If this parameter is set
            to urn:ietf:wg:oauth:2.0:oob then the token will be shown instead. Must
            match one of the redirect URIs declared during app registration.
          title: redirect_uri
          type: string
        scopes:
          description: "List of requested OAuth scopes, separated by spaces. Must\
            \ be a subset of scopes declared during app registration. If not provided,\
            \ defaults to read."
          title: scopes
          type: string
      required:
      - client_id
      - client_secret
      - grant_type
      - redirect_uri
      title: _oauth_token_post_request
      type: object
    _oauth_token_post_200_response:
      example:
        access_token: ZA-Yj3aBD8U8Cm7lKUp-lm9O9BmDgdhHzDeqsY8tlL0
        scope: read write follow push
        created_at: 1573979017
        token_type: Bearer
      properties:
        access_token:
          example: ZA-Yj3aBD8U8Cm7lKUp-lm9O9BmDgdhHzDeqsY8tlL0
          title: access_token
          type: string
        created_at:
          description: UNIX timestamp
          example: 1573979017
          title: created_at
          type: integer
        scope:
          example: read write follow push
          title: scope
          type: string
        token_type:
          example: Bearer
          title: token_type
          type: string
      title: _oauth_token_post_200_response
      type: object
  securitySchemes:
    bearerAuth:
      scheme: bearer
      type: http
      x-bearerInfoFunc: openapi_server.controllers.security_controller.info_from_bearerAuth
    oauth:
      flows:
        authorizationCode:
          authorizationUrl: /oauth/authorize
          scopes:
            admin:read: admin read
            admin:read:accounts: read accounts
            admin:read:reports: read reports
            admin:write: admin write
            admin:write:accounts: write accounts
            admin:write:reports: write reports
            read:accounts: read accounts
            read:blocks: read blocks
            read:bookmarks: read bookmarks
            read:favourites: read favourites
            read:filters: read filters
            read:follows: read follows
            read:lists: read lists
            read:mutes: read mutes
            read:notifications: read notifications
            read:search: read search
            read:statuses: read statuses
            write:accounts: write accounts
            write:blocks: write blocks
            write:bookmarks: write bookmarks
            write:conversations: write conversations
            write:favourites: write favourites
            write:filters: write filters
            write:follows: write follows
            write:lists: write lists
            write:media: write media
            write:mutes: write mutes
            write:notifications: write notifications
            write:reports: write reports
            write:statuses: write statuses
          tokenUrl: /oauth/token
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_oauth
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_oauth
