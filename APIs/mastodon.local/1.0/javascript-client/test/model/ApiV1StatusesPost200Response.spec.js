/**
 * Mastodon API Specification (https://github.com/mastodon/mastodon)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: sardo@hey.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MastodonApiSpecificationHttpsGithubComMastodonMastodon);
  }
}(this, function(expect, MastodonApiSpecificationHttpsGithubComMastodonMastodon) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MastodonApiSpecificationHttpsGithubComMastodonMastodon.ApiV1StatusesPost200Response();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ApiV1StatusesPost200Response', function() {
    it('should create an instance of ApiV1StatusesPost200Response', function() {
      // uncomment below and update the code to test ApiV1StatusesPost200Response
      //var instance = new MastodonApiSpecificationHttpsGithubComMastodonMastodon.ApiV1StatusesPost200Response();
      //expect(instance).to.be.a(MastodonApiSpecificationHttpsGithubComMastodonMastodon.ApiV1StatusesPost200Response);
    });

    it('should have the property account (base name: "account")', function() {
      // uncomment below and update the code to test the property account
      //var instance = new MastodonApiSpecificationHttpsGithubComMastodonMastodon.ApiV1StatusesPost200Response();
      //expect(instance).to.be();
    });

    it('should have the property application (base name: "application")', function() {
      // uncomment below and update the code to test the property application
      //var instance = new MastodonApiSpecificationHttpsGithubComMastodonMastodon.ApiV1StatusesPost200Response();
      //expect(instance).to.be();
    });

    it('should have the property bookmarked (base name: "bookmarked")', function() {
      // uncomment below and update the code to test the property bookmarked
      //var instance = new MastodonApiSpecificationHttpsGithubComMastodonMastodon.ApiV1StatusesPost200Response();
      //expect(instance).to.be();
    });

    it('should have the property card (base name: "card")', function() {
      // uncomment below and update the code to test the property card
      //var instance = new MastodonApiSpecificationHttpsGithubComMastodonMastodon.ApiV1StatusesPost200Response();
      //expect(instance).to.be();
    });

    it('should have the property content (base name: "content")', function() {
      // uncomment below and update the code to test the property content
      //var instance = new MastodonApiSpecificationHttpsGithubComMastodonMastodon.ApiV1StatusesPost200Response();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "created_at")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new MastodonApiSpecificationHttpsGithubComMastodonMastodon.ApiV1StatusesPost200Response();
      //expect(instance).to.be();
    });

    it('should have the property emojis (base name: "emojis")', function() {
      // uncomment below and update the code to test the property emojis
      //var instance = new MastodonApiSpecificationHttpsGithubComMastodonMastodon.ApiV1StatusesPost200Response();
      //expect(instance).to.be();
    });

    it('should have the property favourited (base name: "favourited")', function() {
      // uncomment below and update the code to test the property favourited
      //var instance = new MastodonApiSpecificationHttpsGithubComMastodonMastodon.ApiV1StatusesPost200Response();
      //expect(instance).to.be();
    });

    it('should have the property favouritesCount (base name: "favourites_count")', function() {
      // uncomment below and update the code to test the property favouritesCount
      //var instance = new MastodonApiSpecificationHttpsGithubComMastodonMastodon.ApiV1StatusesPost200Response();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new MastodonApiSpecificationHttpsGithubComMastodonMastodon.ApiV1StatusesPost200Response();
      //expect(instance).to.be();
    });

    it('should have the property inReplyToAccountId (base name: "in_reply_to_account_id")', function() {
      // uncomment below and update the code to test the property inReplyToAccountId
      //var instance = new MastodonApiSpecificationHttpsGithubComMastodonMastodon.ApiV1StatusesPost200Response();
      //expect(instance).to.be();
    });

    it('should have the property inReplyToId (base name: "in_reply_to_id")', function() {
      // uncomment below and update the code to test the property inReplyToId
      //var instance = new MastodonApiSpecificationHttpsGithubComMastodonMastodon.ApiV1StatusesPost200Response();
      //expect(instance).to.be();
    });

    it('should have the property language (base name: "language")', function() {
      // uncomment below and update the code to test the property language
      //var instance = new MastodonApiSpecificationHttpsGithubComMastodonMastodon.ApiV1StatusesPost200Response();
      //expect(instance).to.be();
    });

    it('should have the property mediaAttachments (base name: "media_attachments")', function() {
      // uncomment below and update the code to test the property mediaAttachments
      //var instance = new MastodonApiSpecificationHttpsGithubComMastodonMastodon.ApiV1StatusesPost200Response();
      //expect(instance).to.be();
    });

    it('should have the property mentions (base name: "mentions")', function() {
      // uncomment below and update the code to test the property mentions
      //var instance = new MastodonApiSpecificationHttpsGithubComMastodonMastodon.ApiV1StatusesPost200Response();
      //expect(instance).to.be();
    });

    it('should have the property muted (base name: "muted")', function() {
      // uncomment below and update the code to test the property muted
      //var instance = new MastodonApiSpecificationHttpsGithubComMastodonMastodon.ApiV1StatusesPost200Response();
      //expect(instance).to.be();
    });

    it('should have the property pinned (base name: "pinned")', function() {
      // uncomment below and update the code to test the property pinned
      //var instance = new MastodonApiSpecificationHttpsGithubComMastodonMastodon.ApiV1StatusesPost200Response();
      //expect(instance).to.be();
    });

    it('should have the property poll (base name: "poll")', function() {
      // uncomment below and update the code to test the property poll
      //var instance = new MastodonApiSpecificationHttpsGithubComMastodonMastodon.ApiV1StatusesPost200Response();
      //expect(instance).to.be();
    });

    it('should have the property reblog (base name: "reblog")', function() {
      // uncomment below and update the code to test the property reblog
      //var instance = new MastodonApiSpecificationHttpsGithubComMastodonMastodon.ApiV1StatusesPost200Response();
      //expect(instance).to.be();
    });

    it('should have the property reblogged (base name: "reblogged")', function() {
      // uncomment below and update the code to test the property reblogged
      //var instance = new MastodonApiSpecificationHttpsGithubComMastodonMastodon.ApiV1StatusesPost200Response();
      //expect(instance).to.be();
    });

    it('should have the property reblogsCount (base name: "reblogs_count")', function() {
      // uncomment below and update the code to test the property reblogsCount
      //var instance = new MastodonApiSpecificationHttpsGithubComMastodonMastodon.ApiV1StatusesPost200Response();
      //expect(instance).to.be();
    });

    it('should have the property repliesCount (base name: "replies_count")', function() {
      // uncomment below and update the code to test the property repliesCount
      //var instance = new MastodonApiSpecificationHttpsGithubComMastodonMastodon.ApiV1StatusesPost200Response();
      //expect(instance).to.be();
    });

    it('should have the property sensitive (base name: "sensitive")', function() {
      // uncomment below and update the code to test the property sensitive
      //var instance = new MastodonApiSpecificationHttpsGithubComMastodonMastodon.ApiV1StatusesPost200Response();
      //expect(instance).to.be();
    });

    it('should have the property spoilerText (base name: "spoiler_text")', function() {
      // uncomment below and update the code to test the property spoilerText
      //var instance = new MastodonApiSpecificationHttpsGithubComMastodonMastodon.ApiV1StatusesPost200Response();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new MastodonApiSpecificationHttpsGithubComMastodonMastodon.ApiV1StatusesPost200Response();
      //expect(instance).to.be();
    });

    it('should have the property text (base name: "text")', function() {
      // uncomment below and update the code to test the property text
      //var instance = new MastodonApiSpecificationHttpsGithubComMastodonMastodon.ApiV1StatusesPost200Response();
      //expect(instance).to.be();
    });

    it('should have the property uri (base name: "uri")', function() {
      // uncomment below and update the code to test the property uri
      //var instance = new MastodonApiSpecificationHttpsGithubComMastodonMastodon.ApiV1StatusesPost200Response();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instance = new MastodonApiSpecificationHttpsGithubComMastodonMastodon.ApiV1StatusesPost200Response();
      //expect(instance).to.be();
    });

    it('should have the property visibility (base name: "visibility")', function() {
      // uncomment below and update the code to test the property visibility
      //var instance = new MastodonApiSpecificationHttpsGithubComMastodonMastodon.ApiV1StatusesPost200Response();
      //expect(instance).to.be();
    });

    it('should have the property params (base name: "params")', function() {
      // uncomment below and update the code to test the property params
      //var instance = new MastodonApiSpecificationHttpsGithubComMastodonMastodon.ApiV1StatusesPost200Response();
      //expect(instance).to.be();
    });

    it('should have the property scheduledAt (base name: "scheduled_at")', function() {
      // uncomment below and update the code to test the property scheduledAt
      //var instance = new MastodonApiSpecificationHttpsGithubComMastodonMastodon.ApiV1StatusesPost200Response();
      //expect(instance).to.be();
    });

  });

}));
