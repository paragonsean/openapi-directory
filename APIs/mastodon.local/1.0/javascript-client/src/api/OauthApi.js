/**
 * Mastodon API Specification (https://github.com/mastodon/mastodon)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: sardo@hey.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Error from '../model/Error';
import OauthRevokePostRequest from '../model/OauthRevokePostRequest';
import OauthTokenPost200Response from '../model/OauthTokenPost200Response';
import OauthTokenPostRequest from '../model/OauthTokenPostRequest';

/**
* Oauth service.
* @module api/OauthApi
* @version 1.0
*/
export default class OauthApi {

    /**
    * Constructs a new OauthApi. 
    * @alias module:api/OauthApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the oauthAuthorizeGet operation.
     * @callback module:api/OauthApi~oauthAuthorizeGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Displays an authorization form to the user. If approved, it will create and return an authorization code, then redirect to the desired redirect_uri, or show the authorization code if urn:ietf:wg:oauth:2.0:oob was requested. The authorization code can be used while requesting a token to obtain access to user-level methods.
     * @param {String} responseType Should be set equal to code.
     * @param {String} clientId Client ID, obtained during app registration.
     * @param {String} redirectUri Set a URI to redirect the user to. If this parameter is set to urn:ietf:wg:oauth:2.0:oob then the authorization code will be shown instead. Must match one of the redirect URIs declared during app registration.
     * @param {Object} opts Optional parameters
     * @param {String} [scope] List of requested OAuth scopes, separated by spaces (or by pluses, if using query parameters). Must be a subset of scopes declared during app registration. If not provided, defaults to read.
     * @param {Boolean} [forceLogin] Added in 2.6.0. Forces the user to re-login, which is necessary for authorizing with multiple accounts from the same instance.
     * @param {module:api/OauthApi~oauthAuthorizeGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    oauthAuthorizeGet(responseType, clientId, redirectUri, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'responseType' is set
      if (responseType === undefined || responseType === null) {
        throw new Error("Missing the required parameter 'responseType' when calling oauthAuthorizeGet");
      }
      // verify the required parameter 'clientId' is set
      if (clientId === undefined || clientId === null) {
        throw new Error("Missing the required parameter 'clientId' when calling oauthAuthorizeGet");
      }
      // verify the required parameter 'redirectUri' is set
      if (redirectUri === undefined || redirectUri === null) {
        throw new Error("Missing the required parameter 'redirectUri' when calling oauthAuthorizeGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'response_type': responseType,
        'client_id': clientId,
        'redirect_uri': redirectUri,
        'scope': opts['scope'],
        'force_login': opts['forceLogin']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/oauth/authorize', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the oauthRevokePost operation.
     * @callback module:api/OauthApi~oauthRevokePostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Revoke an access token to make it no longer valid for use.
     * @param {Object} opts Optional parameters
     * @param {module:model/OauthRevokePostRequest} [oauthRevokePostRequest] 
     * @param {module:api/OauthApi~oauthRevokePostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    oauthRevokePost(opts, callback) {
      opts = opts || {};
      let postBody = opts['oauthRevokePostRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/form-data'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/oauth/revoke', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the oauthTokenPost operation.
     * @callback module:api/OauthApi~oauthTokenPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OauthTokenPost200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns an access token, to be used during API calls that are not public.
     * @param {Object} opts Optional parameters
     * @param {module:model/OauthTokenPostRequest} [oauthTokenPostRequest] 
     * @param {module:api/OauthApi~oauthTokenPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OauthTokenPost200Response}
     */
    oauthTokenPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['oauthTokenPostRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/form-data'];
      let accepts = ['application/json'];
      let returnType = OauthTokenPost200Response;
      return this.apiClient.callApi(
        '/oauth/token', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
