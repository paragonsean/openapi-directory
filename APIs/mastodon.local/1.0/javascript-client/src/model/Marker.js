/**
 * Mastodon API Specification (https://github.com/mastodon/mastodon)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: sardo@hey.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Marker model module.
 * @module model/Marker
 * @version 1.0
 */
class Marker {
    /**
     * Constructs a new <code>Marker</code>.
     * Represents the last read position within a user&#39;s timelines.
     * @alias module:model/Marker
     */
    constructor() { 
        
        Marker.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Marker</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Marker} obj Optional instance to populate.
     * @return {module:model/Marker} The populated <code>Marker</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Marker();

            if (data.hasOwnProperty('home')) {
                obj['home'] = ApiClient.convertToType(data['home'], Object);
            }
            if (data.hasOwnProperty('last_read_id')) {
                obj['last_read_id'] = ApiClient.convertToType(data['last_read_id'], 'String');
            }
            if (data.hasOwnProperty('notifications')) {
                obj['notifications'] = ApiClient.convertToType(data['notifications'], Object);
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Marker</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Marker</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['last_read_id'] && !(typeof data['last_read_id'] === 'string' || data['last_read_id'] instanceof String)) {
            throw new Error("Expected the field `last_read_id` to be a primitive type in the JSON string but got " + data['last_read_id']);
        }

        return true;
    }


}



/**
 * Information about the user's position in the home timeline.
 * @member {Object} home
 */
Marker.prototype['home'] = undefined;

/**
 * The ID of the most recently viewed entity. Cast from integer but not guaranteed to be a number
 * @member {String} last_read_id
 */
Marker.prototype['last_read_id'] = undefined;

/**
 * Information about the user's position in their notifications.
 * @member {Object} notifications
 */
Marker.prototype['notifications'] = undefined;

/**
 * The timestamp of when the marker was set. ISO 8601 Datetime.
 * @member {Date} updated_at
 */
Marker.prototype['updated_at'] = undefined;

/**
 * Used for locking to prevent write conflicts.
 * @member {Number} version
 */
Marker.prototype['version'] = undefined;






export default Marker;

