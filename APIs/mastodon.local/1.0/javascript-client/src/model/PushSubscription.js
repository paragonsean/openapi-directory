/**
 * Mastodon API Specification (https://github.com/mastodon/mastodon)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: sardo@hey.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PushSubscription model module.
 * @module model/PushSubscription
 * @version 1.0
 */
class PushSubscription {
    /**
     * Constructs a new <code>PushSubscription</code>.
     * Represents a subscription to the push streaming server.
     * @alias module:model/PushSubscription
     * @param alerts {Object} Which alerts should be delivered to the `endpoint`.
     * @param endpoint {String} Where push alerts will be sent to.
     * @param id {String} The ID of the push subscription in the database. Cast from an integer, but not guaranteed to be a number.
     * @param serverKey {String} The streaming server's VAPID key.
     */
    constructor(alerts, endpoint, id, serverKey) { 
        
        PushSubscription.initialize(this, alerts, endpoint, id, serverKey);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, alerts, endpoint, id, serverKey) { 
        obj['alerts'] = alerts;
        obj['endpoint'] = endpoint;
        obj['id'] = id;
        obj['server_key'] = serverKey;
    }

    /**
     * Constructs a <code>PushSubscription</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PushSubscription} obj Optional instance to populate.
     * @return {module:model/PushSubscription} The populated <code>PushSubscription</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PushSubscription();

            if (data.hasOwnProperty('alerts')) {
                obj['alerts'] = ApiClient.convertToType(data['alerts'], Object);
            }
            if (data.hasOwnProperty('endpoint')) {
                obj['endpoint'] = ApiClient.convertToType(data['endpoint'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('server_key')) {
                obj['server_key'] = ApiClient.convertToType(data['server_key'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PushSubscription</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PushSubscription</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PushSubscription.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['endpoint'] && !(typeof data['endpoint'] === 'string' || data['endpoint'] instanceof String)) {
            throw new Error("Expected the field `endpoint` to be a primitive type in the JSON string but got " + data['endpoint']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['server_key'] && !(typeof data['server_key'] === 'string' || data['server_key'] instanceof String)) {
            throw new Error("Expected the field `server_key` to be a primitive type in the JSON string but got " + data['server_key']);
        }

        return true;
    }


}

PushSubscription.RequiredProperties = ["alerts", "endpoint", "id", "server_key"];

/**
 * Which alerts should be delivered to the `endpoint`.
 * @member {Object} alerts
 */
PushSubscription.prototype['alerts'] = undefined;

/**
 * Where push alerts will be sent to.
 * @member {String} endpoint
 */
PushSubscription.prototype['endpoint'] = undefined;

/**
 * The ID of the push subscription in the database. Cast from an integer, but not guaranteed to be a number.
 * @member {String} id
 */
PushSubscription.prototype['id'] = undefined;

/**
 * The streaming server's VAPID key.
 * @member {String} server_key
 */
PushSubscription.prototype['server_key'] = undefined;






export default PushSubscription;

