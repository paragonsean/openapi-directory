/**
 * Mastodon API Specification (https://github.com/mastodon/mastodon)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: sardo@hey.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Attachment from './Attachment';
import StatusParams from './StatusParams';

/**
 * The ScheduledStatus model module.
 * @module model/ScheduledStatus
 * @version 1.0
 */
class ScheduledStatus {
    /**
     * Constructs a new <code>ScheduledStatus</code>.
     * Represents a status that will be published at a future scheduled date.
     * @alias module:model/ScheduledStatus
     * @param id {String} ID of the scheduled status in the database. Cast from an integer, but not guaranteed to be a number.
     * @param mediaAttachments {Array.<module:model/Attachment>} Array of attachements
     * @param params {module:model/StatusParams} 
     * @param scheduledAt {Date} ID of the status in the database. ISO 8601 Datetime.
     */
    constructor(id, mediaAttachments, params, scheduledAt) { 
        
        ScheduledStatus.initialize(this, id, mediaAttachments, params, scheduledAt);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, mediaAttachments, params, scheduledAt) { 
        obj['id'] = id;
        obj['media_attachments'] = mediaAttachments;
        obj['params'] = params;
        obj['scheduled_at'] = scheduledAt;
    }

    /**
     * Constructs a <code>ScheduledStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ScheduledStatus} obj Optional instance to populate.
     * @return {module:model/ScheduledStatus} The populated <code>ScheduledStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ScheduledStatus();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('media_attachments')) {
                obj['media_attachments'] = ApiClient.convertToType(data['media_attachments'], [Attachment]);
            }
            if (data.hasOwnProperty('params')) {
                obj['params'] = StatusParams.constructFromObject(data['params']);
            }
            if (data.hasOwnProperty('scheduled_at')) {
                obj['scheduled_at'] = ApiClient.convertToType(data['scheduled_at'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ScheduledStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ScheduledStatus</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ScheduledStatus.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        if (data['media_attachments']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['media_attachments'])) {
                throw new Error("Expected the field `media_attachments` to be an array in the JSON data but got " + data['media_attachments']);
            }
            // validate the optional field `media_attachments` (array)
            for (const item of data['media_attachments']) {
                Attachment.validateJSON(item);
            };
        }
        // validate the optional field `params`
        if (data['params']) { // data not null
          StatusParams.validateJSON(data['params']);
        }

        return true;
    }


}

ScheduledStatus.RequiredProperties = ["id", "media_attachments", "params", "scheduled_at"];

/**
 * ID of the scheduled status in the database. Cast from an integer, but not guaranteed to be a number.
 * @member {String} id
 */
ScheduledStatus.prototype['id'] = undefined;

/**
 * Array of attachements
 * @member {Array.<module:model/Attachment>} media_attachments
 */
ScheduledStatus.prototype['media_attachments'] = undefined;

/**
 * @member {module:model/StatusParams} params
 */
ScheduledStatus.prototype['params'] = undefined;

/**
 * ID of the status in the database. ISO 8601 Datetime.
 * @member {Date} scheduled_at
 */
ScheduledStatus.prototype['scheduled_at'] = undefined;






export default ScheduledStatus;

