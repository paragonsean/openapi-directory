/**
 * Mastodon API Specification (https://github.com/mastodon/mastodon)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: sardo@hey.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ApiV1ReportsPostRequest model module.
 * @module model/ApiV1ReportsPostRequest
 * @version 1.0
 */
class ApiV1ReportsPostRequest {
    /**
     * Constructs a new <code>ApiV1ReportsPostRequest</code>.
     * @alias module:model/ApiV1ReportsPostRequest
     * @param accountId {String} ID of the account to report
     */
    constructor(accountId) { 
        
        ApiV1ReportsPostRequest.initialize(this, accountId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, accountId) { 
        obj['account_id'] = accountId;
    }

    /**
     * Constructs a <code>ApiV1ReportsPostRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiV1ReportsPostRequest} obj Optional instance to populate.
     * @return {module:model/ApiV1ReportsPostRequest} The populated <code>ApiV1ReportsPostRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiV1ReportsPostRequest();

            if (data.hasOwnProperty('account_id')) {
                obj['account_id'] = ApiClient.convertToType(data['account_id'], 'String');
            }
            if (data.hasOwnProperty('comment')) {
                obj['comment'] = ApiClient.convertToType(data['comment'], 'String');
            }
            if (data.hasOwnProperty('forward')) {
                obj['forward'] = ApiClient.convertToType(data['forward'], 'Boolean');
            }
            if (data.hasOwnProperty('status_ids')) {
                obj['status_ids'] = ApiClient.convertToType(data['status_ids'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApiV1ReportsPostRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApiV1ReportsPostRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ApiV1ReportsPostRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['account_id'] && !(typeof data['account_id'] === 'string' || data['account_id'] instanceof String)) {
            throw new Error("Expected the field `account_id` to be a primitive type in the JSON string but got " + data['account_id']);
        }
        // ensure the json data is a string
        if (data['comment'] && !(typeof data['comment'] === 'string' || data['comment'] instanceof String)) {
            throw new Error("Expected the field `comment` to be a primitive type in the JSON string but got " + data['comment']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['status_ids'])) {
            throw new Error("Expected the field `status_ids` to be an array in the JSON data but got " + data['status_ids']);
        }

        return true;
    }


}

ApiV1ReportsPostRequest.RequiredProperties = ["account_id"];

/**
 * ID of the account to report
 * @member {String} account_id
 */
ApiV1ReportsPostRequest.prototype['account_id'] = undefined;

/**
 * Reason for the report (default max 1000 characters)
 * @member {String} comment
 */
ApiV1ReportsPostRequest.prototype['comment'] = undefined;

/**
 * If the account is remote, should the report be forwarded to the remote admin?
 * @member {Boolean} forward
 */
ApiV1ReportsPostRequest.prototype['forward'] = undefined;

/**
 * Array of Statuses to attach to the report, for context
 * @member {Array.<String>} status_ids
 */
ApiV1ReportsPostRequest.prototype['status_ids'] = undefined;






export default ApiV1ReportsPostRequest;

