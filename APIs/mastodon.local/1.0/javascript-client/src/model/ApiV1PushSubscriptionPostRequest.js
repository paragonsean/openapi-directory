/**
 * Mastodon API Specification (https://github.com/mastodon/mastodon)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: sardo@hey.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ApiV1PushSubscriptionPostRequest model module.
 * @module model/ApiV1PushSubscriptionPostRequest
 * @version 1.0
 */
class ApiV1PushSubscriptionPostRequest {
    /**
     * Constructs a new <code>ApiV1PushSubscriptionPostRequest</code>.
     * @alias module:model/ApiV1PushSubscriptionPostRequest
     * @param data {String} 
     * @param subscription {String} 
     */
    constructor(data, subscription) { 
        
        ApiV1PushSubscriptionPostRequest.initialize(this, data, subscription);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, data, subscription) { 
        obj['data'] = data;
        obj['subscription'] = subscription;
    }

    /**
     * Constructs a <code>ApiV1PushSubscriptionPostRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiV1PushSubscriptionPostRequest} obj Optional instance to populate.
     * @return {module:model/ApiV1PushSubscriptionPostRequest} The populated <code>ApiV1PushSubscriptionPostRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiV1PushSubscriptionPostRequest();

            if (data.hasOwnProperty('data')) {
                obj['data'] = ApiClient.convertToType(data['data'], 'String');
            }
            if (data.hasOwnProperty('subscription')) {
                obj['subscription'] = ApiClient.convertToType(data['subscription'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApiV1PushSubscriptionPostRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApiV1PushSubscriptionPostRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ApiV1PushSubscriptionPostRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['data'] && !(typeof data['data'] === 'string' || data['data'] instanceof String)) {
            throw new Error("Expected the field `data` to be a primitive type in the JSON string but got " + data['data']);
        }
        // ensure the json data is a string
        if (data['subscription'] && !(typeof data['subscription'] === 'string' || data['subscription'] instanceof String)) {
            throw new Error("Expected the field `subscription` to be a primitive type in the JSON string but got " + data['subscription']);
        }

        return true;
    }


}

ApiV1PushSubscriptionPostRequest.RequiredProperties = ["data", "subscription"];

/**
 * @member {String} data
 */
ApiV1PushSubscriptionPostRequest.prototype['data'] = undefined;

/**
 * @member {String} subscription
 */
ApiV1PushSubscriptionPostRequest.prototype['subscription'] = undefined;






export default ApiV1PushSubscriptionPostRequest;

