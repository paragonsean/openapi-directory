/**
 * Mastodon API Specification (https://github.com/mastodon/mastodon)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: sardo@hey.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Activity model module.
 * @module model/Activity
 * @version 1.0
 */
class Activity {
    /**
     * Constructs a new <code>Activity</code>.
     * Represents a weekly bucket of instance activity.
     * @alias module:model/Activity
     */
    constructor() { 
        
        Activity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Activity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Activity} obj Optional instance to populate.
     * @return {module:model/Activity} The populated <code>Activity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Activity();

            if (data.hasOwnProperty('logins')) {
                obj['logins'] = ApiClient.convertToType(data['logins'], 'String');
            }
            if (data.hasOwnProperty('registrations')) {
                obj['registrations'] = ApiClient.convertToType(data['registrations'], 'String');
            }
            if (data.hasOwnProperty('statuses')) {
                obj['statuses'] = ApiClient.convertToType(data['statuses'], 'String');
            }
            if (data.hasOwnProperty('week')) {
                obj['week'] = ApiClient.convertToType(data['week'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Activity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Activity</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['logins'] && !(typeof data['logins'] === 'string' || data['logins'] instanceof String)) {
            throw new Error("Expected the field `logins` to be a primitive type in the JSON string but got " + data['logins']);
        }
        // ensure the json data is a string
        if (data['registrations'] && !(typeof data['registrations'] === 'string' || data['registrations'] instanceof String)) {
            throw new Error("Expected the field `registrations` to be a primitive type in the JSON string but got " + data['registrations']);
        }
        // ensure the json data is a string
        if (data['statuses'] && !(typeof data['statuses'] === 'string' || data['statuses'] instanceof String)) {
            throw new Error("Expected the field `statuses` to be a primitive type in the JSON string but got " + data['statuses']);
        }
        // ensure the json data is a string
        if (data['week'] && !(typeof data['week'] === 'string' || data['week'] instanceof String)) {
            throw new Error("Expected the field `week` to be a primitive type in the JSON string but got " + data['week']);
        }

        return true;
    }


}



/**
 * User logins since the week began, String (cast from an integer).
 * @member {String} logins
 */
Activity.prototype['logins'] = undefined;

/**
 * User registrations since the week began, String (cast from an integer).
 * @member {String} registrations
 */
Activity.prototype['registrations'] = undefined;

/**
 * Statuses created since the week began, String (cast from an integer).
 * @member {String} statuses
 */
Activity.prototype['statuses'] = undefined;

/**
 * Midnight at the first day of the week.  (UNIX Timestamp).
 * @member {String} week
 */
Activity.prototype['week'] = undefined;






export default Activity;

