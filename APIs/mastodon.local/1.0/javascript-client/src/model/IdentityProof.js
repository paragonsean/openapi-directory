/**
 * Mastodon API Specification (https://github.com/mastodon/mastodon)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: sardo@hey.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IdentityProof model module.
 * @module model/IdentityProof
 * @version 1.0
 */
class IdentityProof {
    /**
     * Constructs a new <code>IdentityProof</code>.
     * Represents a proof from an external identity provider.
     * @alias module:model/IdentityProof
     */
    constructor() { 
        
        IdentityProof.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IdentityProof</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IdentityProof} obj Optional instance to populate.
     * @return {module:model/IdentityProof} The populated <code>IdentityProof</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IdentityProof();

            if (data.hasOwnProperty('profile_url')) {
                obj['profile_url'] = ApiClient.convertToType(data['profile_url'], 'String');
            }
            if (data.hasOwnProperty('proof_url')) {
                obj['proof_url'] = ApiClient.convertToType(data['proof_url'], 'String');
            }
            if (data.hasOwnProperty('provider')) {
                obj['provider'] = ApiClient.convertToType(data['provider'], 'String');
            }
            if (data.hasOwnProperty('provider_username')) {
                obj['provider_username'] = ApiClient.convertToType(data['provider_username'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IdentityProof</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IdentityProof</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['profile_url'] && !(typeof data['profile_url'] === 'string' || data['profile_url'] instanceof String)) {
            throw new Error("Expected the field `profile_url` to be a primitive type in the JSON string but got " + data['profile_url']);
        }
        // ensure the json data is a string
        if (data['proof_url'] && !(typeof data['proof_url'] === 'string' || data['proof_url'] instanceof String)) {
            throw new Error("Expected the field `proof_url` to be a primitive type in the JSON string but got " + data['proof_url']);
        }
        // ensure the json data is a string
        if (data['provider'] && !(typeof data['provider'] === 'string' || data['provider'] instanceof String)) {
            throw new Error("Expected the field `provider` to be a primitive type in the JSON string but got " + data['provider']);
        }
        // ensure the json data is a string
        if (data['provider_username'] && !(typeof data['provider_username'] === 'string' || data['provider_username'] instanceof String)) {
            throw new Error("Expected the field `provider_username` to be a primitive type in the JSON string but got " + data['provider_username']);
        }
        // ensure the json data is a string
        if (data['updated_at'] && !(typeof data['updated_at'] === 'string' || data['updated_at'] instanceof String)) {
            throw new Error("Expected the field `updated_at` to be a primitive type in the JSON string but got " + data['updated_at']);
        }

        return true;
    }


}



/**
 * The account owner's profile URL on the identity provider.
 * @member {String} profile_url
 */
IdentityProof.prototype['profile_url'] = undefined;

/**
 * A link to a statement of identity proof, hosted by the identity provider.
 * @member {String} proof_url
 */
IdentityProof.prototype['proof_url'] = undefined;

/**
 * The name of the identity provider.
 * @member {String} provider
 */
IdentityProof.prototype['provider'] = undefined;

/**
 * The account owner's username on the identity provider's service.
 * @member {String} provider_username
 */
IdentityProof.prototype['provider_username'] = undefined;

/**
 * When the identity proof was last updated. ISO 8601 Datetime.
 * @member {String} updated_at
 */
IdentityProof.prototype['updated_at'] = undefined;






export default IdentityProof;

