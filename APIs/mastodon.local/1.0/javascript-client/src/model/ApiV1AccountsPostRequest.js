/**
 * Mastodon API Specification (https://github.com/mastodon/mastodon)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: sardo@hey.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ApiV1AccountsPostRequest model module.
 * @module model/ApiV1AccountsPostRequest
 * @version 1.0
 */
class ApiV1AccountsPostRequest {
    /**
     * Constructs a new <code>ApiV1AccountsPostRequest</code>.
     * @alias module:model/ApiV1AccountsPostRequest
     * @param agreement {Boolean} Whether the user agrees to the local rules, terms, and policies. These should be presented to the user in order to allow them to consent before setting this parameter to TRUE.
     * @param email {String} The email address to be used for login
     * @param locale {String} The language of the confirmation email that will be sent
     * @param password {String} The password to be used for login
     * @param username {String} The desired username for the account
     */
    constructor(agreement, email, locale, password, username) { 
        
        ApiV1AccountsPostRequest.initialize(this, agreement, email, locale, password, username);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, agreement, email, locale, password, username) { 
        obj['agreement'] = agreement;
        obj['email'] = email;
        obj['locale'] = locale;
        obj['password'] = password;
        obj['username'] = username;
    }

    /**
     * Constructs a <code>ApiV1AccountsPostRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiV1AccountsPostRequest} obj Optional instance to populate.
     * @return {module:model/ApiV1AccountsPostRequest} The populated <code>ApiV1AccountsPostRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiV1AccountsPostRequest();

            if (data.hasOwnProperty('agreement')) {
                obj['agreement'] = ApiClient.convertToType(data['agreement'], 'Boolean');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('locale')) {
                obj['locale'] = ApiClient.convertToType(data['locale'], 'String');
            }
            if (data.hasOwnProperty('password')) {
                obj['password'] = ApiClient.convertToType(data['password'], 'String');
            }
            if (data.hasOwnProperty('reason')) {
                obj['reason'] = ApiClient.convertToType(data['reason'], 'String');
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApiV1AccountsPostRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApiV1AccountsPostRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ApiV1AccountsPostRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['locale'] && !(typeof data['locale'] === 'string' || data['locale'] instanceof String)) {
            throw new Error("Expected the field `locale` to be a primitive type in the JSON string but got " + data['locale']);
        }
        // ensure the json data is a string
        if (data['password'] && !(typeof data['password'] === 'string' || data['password'] instanceof String)) {
            throw new Error("Expected the field `password` to be a primitive type in the JSON string but got " + data['password']);
        }
        // ensure the json data is a string
        if (data['reason'] && !(typeof data['reason'] === 'string' || data['reason'] instanceof String)) {
            throw new Error("Expected the field `reason` to be a primitive type in the JSON string but got " + data['reason']);
        }
        // ensure the json data is a string
        if (data['username'] && !(typeof data['username'] === 'string' || data['username'] instanceof String)) {
            throw new Error("Expected the field `username` to be a primitive type in the JSON string but got " + data['username']);
        }

        return true;
    }


}

ApiV1AccountsPostRequest.RequiredProperties = ["agreement", "email", "locale", "password", "username"];

/**
 * Whether the user agrees to the local rules, terms, and policies. These should be presented to the user in order to allow them to consent before setting this parameter to TRUE.
 * @member {Boolean} agreement
 */
ApiV1AccountsPostRequest.prototype['agreement'] = undefined;

/**
 * The email address to be used for login
 * @member {String} email
 */
ApiV1AccountsPostRequest.prototype['email'] = undefined;

/**
 * The language of the confirmation email that will be sent
 * @member {String} locale
 */
ApiV1AccountsPostRequest.prototype['locale'] = undefined;

/**
 * The password to be used for login
 * @member {String} password
 */
ApiV1AccountsPostRequest.prototype['password'] = undefined;

/**
 * Text that will be reviewed by moderators if registrations require manual approval.
 * @member {String} reason
 */
ApiV1AccountsPostRequest.prototype['reason'] = undefined;

/**
 * The desired username for the account
 * @member {String} username
 */
ApiV1AccountsPostRequest.prototype['username'] = undefined;






export default ApiV1AccountsPostRequest;

