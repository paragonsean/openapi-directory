/**
 * Mastodon API Specification (https://github.com/mastodon/mastodon)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: sardo@hey.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The List model module.
 * @module model/List
 * @version 1.0
 */
class List {
    /**
     * Constructs a new <code>List</code>.
     * Represents a list of some users that the authenticated user follows.
     * @alias module:model/List
     * @param id {String} The internal database ID of the list. Cast from an integer, but not guaranteed to be a number.
     * @param repliesPolicy {module:model/List.RepliesPolicyEnum} The user-defined title of the list.
     * @param title {String} The user-defined title of the list.
     */
    constructor(id, repliesPolicy, title) { 
        
        List.initialize(this, id, repliesPolicy, title);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, repliesPolicy, title) { 
        obj['id'] = id;
        obj['replies_policy'] = repliesPolicy;
        obj['title'] = title;
    }

    /**
     * Constructs a <code>List</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/List} obj Optional instance to populate.
     * @return {module:model/List} The populated <code>List</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new List();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('replies_policy')) {
                obj['replies_policy'] = ApiClient.convertToType(data['replies_policy'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>List</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>List</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of List.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['replies_policy'] && !(typeof data['replies_policy'] === 'string' || data['replies_policy'] instanceof String)) {
            throw new Error("Expected the field `replies_policy` to be a primitive type in the JSON string but got " + data['replies_policy']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}

List.RequiredProperties = ["id", "replies_policy", "title"];

/**
 * The internal database ID of the list. Cast from an integer, but not guaranteed to be a number.
 * @member {String} id
 */
List.prototype['id'] = undefined;

/**
 * The user-defined title of the list.
 * @member {module:model/List.RepliesPolicyEnum} replies_policy
 */
List.prototype['replies_policy'] = undefined;

/**
 * The user-defined title of the list.
 * @member {String} title
 */
List.prototype['title'] = undefined;





/**
 * Allowed values for the <code>replies_policy</code> property.
 * @enum {String}
 * @readonly
 */
List['RepliesPolicyEnum'] = {

    /**
     * value: "followed"
     * @const
     */
    "followed": "followed",

    /**
     * value: "list"
     * @const
     */
    "list": "list",

    /**
     * value: "none"
     * @const
     */
    "none": "none"
};



export default List;

