/**
 * Mastodon API Specification (https://github.com/mastodon/mastodon)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: sardo@hey.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import History from './History';

/**
 * The Tag model module.
 * @module model/Tag
 * @version 1.0
 */
class Tag {
    /**
     * Constructs a new <code>Tag</code>.
     * Represents a hashtag used within the content of a status.
     * @alias module:model/Tag
     * @param name {String} The value of the hashtag after the `#` sign.
     * @param url {String} A link to the hashtag on the instance.
     */
    constructor(name, url) { 
        
        Tag.initialize(this, name, url);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, url) { 
        obj['name'] = name;
        obj['url'] = url;
    }

    /**
     * Constructs a <code>Tag</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Tag} obj Optional instance to populate.
     * @return {module:model/Tag} The populated <code>Tag</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Tag();

            if (data.hasOwnProperty('history')) {
                obj['history'] = ApiClient.convertToType(data['history'], [History]);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Tag</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Tag</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Tag.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['history']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['history'])) {
                throw new Error("Expected the field `history` to be an array in the JSON data but got " + data['history']);
            }
            // validate the optional field `history` (array)
            for (const item of data['history']) {
                History.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}

Tag.RequiredProperties = ["name", "url"];

/**
 * Usage statistics for given days.
 * @member {Array.<module:model/History>} history
 */
Tag.prototype['history'] = undefined;

/**
 * The value of the hashtag after the `#` sign.
 * @member {String} name
 */
Tag.prototype['name'] = undefined;

/**
 * A link to the hashtag on the instance.
 * @member {String} url
 */
Tag.prototype['url'] = undefined;






export default Tag;

