/**
 * Mastodon API Specification (https://github.com/mastodon/mastodon)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: sardo@hey.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAI_api_v1_accounts_update_credentials_patch_request_source.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAI_api_v1_accounts_update_credentials_patch_request_source::OAI_api_v1_accounts_update_credentials_patch_request_source(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAI_api_v1_accounts_update_credentials_patch_request_source::OAI_api_v1_accounts_update_credentials_patch_request_source() {
    this->initializeModel();
}

OAI_api_v1_accounts_update_credentials_patch_request_source::~OAI_api_v1_accounts_update_credentials_patch_request_source() {}

void OAI_api_v1_accounts_update_credentials_patch_request_source::initializeModel() {

    m_language_isSet = false;
    m_language_isValid = false;

    m_privacy_isSet = false;
    m_privacy_isValid = false;

    m_sensitive_isSet = false;
    m_sensitive_isValid = false;
}

void OAI_api_v1_accounts_update_credentials_patch_request_source::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAI_api_v1_accounts_update_credentials_patch_request_source::fromJsonObject(QJsonObject json) {

    m_language_isValid = ::OpenAPI::fromJsonValue(m_language, json[QString("language")]);
    m_language_isSet = !json[QString("language")].isNull() && m_language_isValid;

    m_privacy_isValid = ::OpenAPI::fromJsonValue(m_privacy, json[QString("privacy")]);
    m_privacy_isSet = !json[QString("privacy")].isNull() && m_privacy_isValid;

    m_sensitive_isValid = ::OpenAPI::fromJsonValue(m_sensitive, json[QString("sensitive")]);
    m_sensitive_isSet = !json[QString("sensitive")].isNull() && m_sensitive_isValid;
}

QString OAI_api_v1_accounts_update_credentials_patch_request_source::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAI_api_v1_accounts_update_credentials_patch_request_source::asJsonObject() const {
    QJsonObject obj;
    if (m_language_isSet) {
        obj.insert(QString("language"), ::OpenAPI::toJsonValue(m_language));
    }
    if (m_privacy_isSet) {
        obj.insert(QString("privacy"), ::OpenAPI::toJsonValue(m_privacy));
    }
    if (m_sensitive_isSet) {
        obj.insert(QString("sensitive"), ::OpenAPI::toJsonValue(m_sensitive));
    }
    return obj;
}

QString OAI_api_v1_accounts_update_credentials_patch_request_source::getLanguage() const {
    return m_language;
}
void OAI_api_v1_accounts_update_credentials_patch_request_source::setLanguage(const QString &language) {
    m_language = language;
    m_language_isSet = true;
}

bool OAI_api_v1_accounts_update_credentials_patch_request_source::is_language_Set() const{
    return m_language_isSet;
}

bool OAI_api_v1_accounts_update_credentials_patch_request_source::is_language_Valid() const{
    return m_language_isValid;
}

QString OAI_api_v1_accounts_update_credentials_patch_request_source::getPrivacy() const {
    return m_privacy;
}
void OAI_api_v1_accounts_update_credentials_patch_request_source::setPrivacy(const QString &privacy) {
    m_privacy = privacy;
    m_privacy_isSet = true;
}

bool OAI_api_v1_accounts_update_credentials_patch_request_source::is_privacy_Set() const{
    return m_privacy_isSet;
}

bool OAI_api_v1_accounts_update_credentials_patch_request_source::is_privacy_Valid() const{
    return m_privacy_isValid;
}

bool OAI_api_v1_accounts_update_credentials_patch_request_source::isSensitive() const {
    return m_sensitive;
}
void OAI_api_v1_accounts_update_credentials_patch_request_source::setSensitive(const bool &sensitive) {
    m_sensitive = sensitive;
    m_sensitive_isSet = true;
}

bool OAI_api_v1_accounts_update_credentials_patch_request_source::is_sensitive_Set() const{
    return m_sensitive_isSet;
}

bool OAI_api_v1_accounts_update_credentials_patch_request_source::is_sensitive_Valid() const{
    return m_sensitive_isValid;
}

bool OAI_api_v1_accounts_update_credentials_patch_request_source::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_language_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_privacy_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sensitive_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAI_api_v1_accounts_update_credentials_patch_request_source::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
