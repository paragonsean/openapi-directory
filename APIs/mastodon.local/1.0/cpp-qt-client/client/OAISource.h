/**
 * Mastodon API Specification (https://github.com/mastodon/mastodon)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: sardo@hey.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISource.h
 *
 * Represents display or publishing preferences of user&#39;s own account. Returned as an additional entity when verifying and updated credentials, as an attribute of Account.
 */

#ifndef OAISource_H
#define OAISource_H

#include <QJsonObject>

#include "OAIField.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIField;

class OAISource : public OAIObject {
public:
    OAISource();
    OAISource(QString json);
    ~OAISource() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIField> getFields() const;
    void setFields(const QList<OAIField> &fields);
    bool is_fields_Set() const;
    bool is_fields_Valid() const;

    qint32 getFollowRequestsCount() const;
    void setFollowRequestsCount(const qint32 &follow_requests_count);
    bool is_follow_requests_count_Set() const;
    bool is_follow_requests_count_Valid() const;

    QString getLanguage() const;
    void setLanguage(const QString &language);
    bool is_language_Set() const;
    bool is_language_Valid() const;

    QString getNote() const;
    void setNote(const QString &note);
    bool is_note_Set() const;
    bool is_note_Valid() const;

    QString getPrivacy() const;
    void setPrivacy(const QString &privacy);
    bool is_privacy_Set() const;
    bool is_privacy_Valid() const;

    bool isSensitive() const;
    void setSensitive(const bool &sensitive);
    bool is_sensitive_Set() const;
    bool is_sensitive_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIField> m_fields;
    bool m_fields_isSet;
    bool m_fields_isValid;

    qint32 m_follow_requests_count;
    bool m_follow_requests_count_isSet;
    bool m_follow_requests_count_isValid;

    QString m_language;
    bool m_language_isSet;
    bool m_language_isValid;

    QString m_note;
    bool m_note_isSet;
    bool m_note_isValid;

    QString m_privacy;
    bool m_privacy_isSet;
    bool m_privacy_isValid;

    bool m_sensitive;
    bool m_sensitive_isSet;
    bool m_sensitive_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISource)

#endif // OAISource_H
