/**
 * Mastodon API Specification (https://github.com/mastodon/mastodon)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: sardo@hey.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMarker.h
 *
 * Represents the last read position within a user&#39;s timelines.
 */

#ifndef OAIMarker_H
#define OAIMarker_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIMarker : public OAIObject {
public:
    OAIMarker();
    OAIMarker(QString json);
    ~OAIMarker() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIObject getHome() const;
    void setHome(const OAIObject &home);
    bool is_home_Set() const;
    bool is_home_Valid() const;

    QString getLastReadId() const;
    void setLastReadId(const QString &last_read_id);
    bool is_last_read_id_Set() const;
    bool is_last_read_id_Valid() const;

    OAIObject getNotifications() const;
    void setNotifications(const OAIObject &notifications);
    bool is_notifications_Set() const;
    bool is_notifications_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    qint32 getVersion() const;
    void setVersion(const qint32 &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIObject m_home;
    bool m_home_isSet;
    bool m_home_isValid;

    QString m_last_read_id;
    bool m_last_read_id_isSet;
    bool m_last_read_id_isValid;

    OAIObject m_notifications;
    bool m_notifications_isSet;
    bool m_notifications_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    qint32 m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMarker)

#endif // OAIMarker_H
