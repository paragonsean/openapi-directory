/**
 * Mastodon API Specification (https://github.com/mastodon/mastodon)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: sardo@hey.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAI_api_v1_accounts_update_credentials_patch_request.h
 *
 * 
 */

#ifndef OAI_api_v1_accounts_update_credentials_patch_request_H
#define OAI_api_v1_accounts_update_credentials_patch_request_H

#include <QJsonObject>

#include "OAIObject.h"
#include "OAI_api_v1_accounts_update_credentials_patch_request_source.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAI_api_v1_accounts_update_credentials_patch_request_source;

class OAI_api_v1_accounts_update_credentials_patch_request : public OAIObject {
public:
    OAI_api_v1_accounts_update_credentials_patch_request();
    OAI_api_v1_accounts_update_credentials_patch_request(QString json);
    ~OAI_api_v1_accounts_update_credentials_patch_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAvatar() const;
    void setAvatar(const QString &avatar);
    bool is_avatar_Set() const;
    bool is_avatar_Valid() const;

    bool isBot() const;
    void setBot(const bool &bot);
    bool is_bot_Set() const;
    bool is_bot_Valid() const;

    QString getDiscoverable() const;
    void setDiscoverable(const QString &discoverable);
    bool is_discoverable_Set() const;
    bool is_discoverable_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    OAIObject getFieldsAttributes() const;
    void setFieldsAttributes(const OAIObject &fields_attributes);
    bool is_fields_attributes_Set() const;
    bool is_fields_attributes_Valid() const;

    QString getHeader() const;
    void setHeader(const QString &header);
    bool is_header_Set() const;
    bool is_header_Valid() const;

    bool isLocked() const;
    void setLocked(const bool &locked);
    bool is_locked_Set() const;
    bool is_locked_Valid() const;

    QString getNote() const;
    void setNote(const QString &note);
    bool is_note_Set() const;
    bool is_note_Valid() const;

    OAI_api_v1_accounts_update_credentials_patch_request_source getSource() const;
    void setSource(const OAI_api_v1_accounts_update_credentials_patch_request_source &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_avatar;
    bool m_avatar_isSet;
    bool m_avatar_isValid;

    bool m_bot;
    bool m_bot_isSet;
    bool m_bot_isValid;

    QString m_discoverable;
    bool m_discoverable_isSet;
    bool m_discoverable_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    OAIObject m_fields_attributes;
    bool m_fields_attributes_isSet;
    bool m_fields_attributes_isValid;

    QString m_header;
    bool m_header_isSet;
    bool m_header_isValid;

    bool m_locked;
    bool m_locked_isSet;
    bool m_locked_isValid;

    QString m_note;
    bool m_note_isSet;
    bool m_note_isValid;

    OAI_api_v1_accounts_update_credentials_patch_request_source m_source;
    bool m_source_isSet;
    bool m_source_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAI_api_v1_accounts_update_credentials_patch_request)

#endif // OAI_api_v1_accounts_update_credentials_patch_request_H
