/**
 * Mastodon API Specification (https://github.com/mastodon/mastodon)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: sardo@hey.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAI_api_v1_accounts_update_credentials_patch_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAI_api_v1_accounts_update_credentials_patch_request::OAI_api_v1_accounts_update_credentials_patch_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAI_api_v1_accounts_update_credentials_patch_request::OAI_api_v1_accounts_update_credentials_patch_request() {
    this->initializeModel();
}

OAI_api_v1_accounts_update_credentials_patch_request::~OAI_api_v1_accounts_update_credentials_patch_request() {}

void OAI_api_v1_accounts_update_credentials_patch_request::initializeModel() {

    m_avatar_isSet = false;
    m_avatar_isValid = false;

    m_bot_isSet = false;
    m_bot_isValid = false;

    m_discoverable_isSet = false;
    m_discoverable_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_fields_attributes_isSet = false;
    m_fields_attributes_isValid = false;

    m_header_isSet = false;
    m_header_isValid = false;

    m_locked_isSet = false;
    m_locked_isValid = false;

    m_note_isSet = false;
    m_note_isValid = false;

    m_source_isSet = false;
    m_source_isValid = false;
}

void OAI_api_v1_accounts_update_credentials_patch_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAI_api_v1_accounts_update_credentials_patch_request::fromJsonObject(QJsonObject json) {

    m_avatar_isValid = ::OpenAPI::fromJsonValue(m_avatar, json[QString("avatar")]);
    m_avatar_isSet = !json[QString("avatar")].isNull() && m_avatar_isValid;

    m_bot_isValid = ::OpenAPI::fromJsonValue(m_bot, json[QString("bot")]);
    m_bot_isSet = !json[QString("bot")].isNull() && m_bot_isValid;

    m_discoverable_isValid = ::OpenAPI::fromJsonValue(m_discoverable, json[QString("discoverable")]);
    m_discoverable_isSet = !json[QString("discoverable")].isNull() && m_discoverable_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("display_name")]);
    m_display_name_isSet = !json[QString("display_name")].isNull() && m_display_name_isValid;

    m_fields_attributes_isValid = ::OpenAPI::fromJsonValue(m_fields_attributes, json[QString("fields_attributes")]);
    m_fields_attributes_isSet = !json[QString("fields_attributes")].isNull() && m_fields_attributes_isValid;

    m_header_isValid = ::OpenAPI::fromJsonValue(m_header, json[QString("header")]);
    m_header_isSet = !json[QString("header")].isNull() && m_header_isValid;

    m_locked_isValid = ::OpenAPI::fromJsonValue(m_locked, json[QString("locked")]);
    m_locked_isSet = !json[QString("locked")].isNull() && m_locked_isValid;

    m_note_isValid = ::OpenAPI::fromJsonValue(m_note, json[QString("note")]);
    m_note_isSet = !json[QString("note")].isNull() && m_note_isValid;

    m_source_isValid = ::OpenAPI::fromJsonValue(m_source, json[QString("source")]);
    m_source_isSet = !json[QString("source")].isNull() && m_source_isValid;
}

QString OAI_api_v1_accounts_update_credentials_patch_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAI_api_v1_accounts_update_credentials_patch_request::asJsonObject() const {
    QJsonObject obj;
    if (m_avatar_isSet) {
        obj.insert(QString("avatar"), ::OpenAPI::toJsonValue(m_avatar));
    }
    if (m_bot_isSet) {
        obj.insert(QString("bot"), ::OpenAPI::toJsonValue(m_bot));
    }
    if (m_discoverable_isSet) {
        obj.insert(QString("discoverable"), ::OpenAPI::toJsonValue(m_discoverable));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("display_name"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_fields_attributes_isSet) {
        obj.insert(QString("fields_attributes"), ::OpenAPI::toJsonValue(m_fields_attributes));
    }
    if (m_header_isSet) {
        obj.insert(QString("header"), ::OpenAPI::toJsonValue(m_header));
    }
    if (m_locked_isSet) {
        obj.insert(QString("locked"), ::OpenAPI::toJsonValue(m_locked));
    }
    if (m_note_isSet) {
        obj.insert(QString("note"), ::OpenAPI::toJsonValue(m_note));
    }
    if (m_source.isSet()) {
        obj.insert(QString("source"), ::OpenAPI::toJsonValue(m_source));
    }
    return obj;
}

QString OAI_api_v1_accounts_update_credentials_patch_request::getAvatar() const {
    return m_avatar;
}
void OAI_api_v1_accounts_update_credentials_patch_request::setAvatar(const QString &avatar) {
    m_avatar = avatar;
    m_avatar_isSet = true;
}

bool OAI_api_v1_accounts_update_credentials_patch_request::is_avatar_Set() const{
    return m_avatar_isSet;
}

bool OAI_api_v1_accounts_update_credentials_patch_request::is_avatar_Valid() const{
    return m_avatar_isValid;
}

bool OAI_api_v1_accounts_update_credentials_patch_request::isBot() const {
    return m_bot;
}
void OAI_api_v1_accounts_update_credentials_patch_request::setBot(const bool &bot) {
    m_bot = bot;
    m_bot_isSet = true;
}

bool OAI_api_v1_accounts_update_credentials_patch_request::is_bot_Set() const{
    return m_bot_isSet;
}

bool OAI_api_v1_accounts_update_credentials_patch_request::is_bot_Valid() const{
    return m_bot_isValid;
}

QString OAI_api_v1_accounts_update_credentials_patch_request::getDiscoverable() const {
    return m_discoverable;
}
void OAI_api_v1_accounts_update_credentials_patch_request::setDiscoverable(const QString &discoverable) {
    m_discoverable = discoverable;
    m_discoverable_isSet = true;
}

bool OAI_api_v1_accounts_update_credentials_patch_request::is_discoverable_Set() const{
    return m_discoverable_isSet;
}

bool OAI_api_v1_accounts_update_credentials_patch_request::is_discoverable_Valid() const{
    return m_discoverable_isValid;
}

QString OAI_api_v1_accounts_update_credentials_patch_request::getDisplayName() const {
    return m_display_name;
}
void OAI_api_v1_accounts_update_credentials_patch_request::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAI_api_v1_accounts_update_credentials_patch_request::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAI_api_v1_accounts_update_credentials_patch_request::is_display_name_Valid() const{
    return m_display_name_isValid;
}

OAIObject OAI_api_v1_accounts_update_credentials_patch_request::getFieldsAttributes() const {
    return m_fields_attributes;
}
void OAI_api_v1_accounts_update_credentials_patch_request::setFieldsAttributes(const OAIObject &fields_attributes) {
    m_fields_attributes = fields_attributes;
    m_fields_attributes_isSet = true;
}

bool OAI_api_v1_accounts_update_credentials_patch_request::is_fields_attributes_Set() const{
    return m_fields_attributes_isSet;
}

bool OAI_api_v1_accounts_update_credentials_patch_request::is_fields_attributes_Valid() const{
    return m_fields_attributes_isValid;
}

QString OAI_api_v1_accounts_update_credentials_patch_request::getHeader() const {
    return m_header;
}
void OAI_api_v1_accounts_update_credentials_patch_request::setHeader(const QString &header) {
    m_header = header;
    m_header_isSet = true;
}

bool OAI_api_v1_accounts_update_credentials_patch_request::is_header_Set() const{
    return m_header_isSet;
}

bool OAI_api_v1_accounts_update_credentials_patch_request::is_header_Valid() const{
    return m_header_isValid;
}

bool OAI_api_v1_accounts_update_credentials_patch_request::isLocked() const {
    return m_locked;
}
void OAI_api_v1_accounts_update_credentials_patch_request::setLocked(const bool &locked) {
    m_locked = locked;
    m_locked_isSet = true;
}

bool OAI_api_v1_accounts_update_credentials_patch_request::is_locked_Set() const{
    return m_locked_isSet;
}

bool OAI_api_v1_accounts_update_credentials_patch_request::is_locked_Valid() const{
    return m_locked_isValid;
}

QString OAI_api_v1_accounts_update_credentials_patch_request::getNote() const {
    return m_note;
}
void OAI_api_v1_accounts_update_credentials_patch_request::setNote(const QString &note) {
    m_note = note;
    m_note_isSet = true;
}

bool OAI_api_v1_accounts_update_credentials_patch_request::is_note_Set() const{
    return m_note_isSet;
}

bool OAI_api_v1_accounts_update_credentials_patch_request::is_note_Valid() const{
    return m_note_isValid;
}

OAI_api_v1_accounts_update_credentials_patch_request_source OAI_api_v1_accounts_update_credentials_patch_request::getSource() const {
    return m_source;
}
void OAI_api_v1_accounts_update_credentials_patch_request::setSource(const OAI_api_v1_accounts_update_credentials_patch_request_source &source) {
    m_source = source;
    m_source_isSet = true;
}

bool OAI_api_v1_accounts_update_credentials_patch_request::is_source_Set() const{
    return m_source_isSet;
}

bool OAI_api_v1_accounts_update_credentials_patch_request::is_source_Valid() const{
    return m_source_isValid;
}

bool OAI_api_v1_accounts_update_credentials_patch_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_avatar_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bot_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_discoverable_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fields_attributes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_header_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_locked_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_note_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAI_api_v1_accounts_update_credentials_patch_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
