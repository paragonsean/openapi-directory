/**
 * Mastodon API Specification (https://github.com/mastodon/mastodon)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: sardo@hey.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInstance.h
 *
 * Represents the software instance of Mastodon running on this domain.
 */

#ifndef OAIInstance_H
#define OAIInstance_H

#include <QJsonObject>

#include "OAIAccount.h"
#include "OAIObject.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAccount;

class OAIInstance : public OAIObject {
public:
    OAIInstance();
    OAIInstance(QString json);
    ~OAIInstance() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isApprovalRequired() const;
    void setApprovalRequired(const bool &approval_required);
    bool is_approval_required_Set() const;
    bool is_approval_required_Valid() const;

    OAIAccount getContactAccount() const;
    void setContactAccount(const OAIAccount &contact_account);
    bool is_contact_account_Set() const;
    bool is_contact_account_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    bool isInvitesEnabled() const;
    void setInvitesEnabled(const bool &invites_enabled);
    bool is_invites_enabled_Set() const;
    bool is_invites_enabled_Valid() const;

    QList<QString> getLanguages() const;
    void setLanguages(const QList<QString> &languages);
    bool is_languages_Set() const;
    bool is_languages_Valid() const;

    bool isRegistrations() const;
    void setRegistrations(const bool &registrations);
    bool is_registrations_Set() const;
    bool is_registrations_Valid() const;

    QString getShortDescription() const;
    void setShortDescription(const QString &short_description);
    bool is_short_description_Set() const;
    bool is_short_description_Valid() const;

    OAIObject getStats() const;
    void setStats(const OAIObject &stats);
    bool is_stats_Set() const;
    bool is_stats_Valid() const;

    QString getThumbnail() const;
    void setThumbnail(const QString &thumbnail);
    bool is_thumbnail_Set() const;
    bool is_thumbnail_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getUri() const;
    void setUri(const QString &uri);
    bool is_uri_Set() const;
    bool is_uri_Valid() const;

    OAIObject getUrls() const;
    void setUrls(const OAIObject &urls);
    bool is_urls_Set() const;
    bool is_urls_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_approval_required;
    bool m_approval_required_isSet;
    bool m_approval_required_isValid;

    OAIAccount m_contact_account;
    bool m_contact_account_isSet;
    bool m_contact_account_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    bool m_invites_enabled;
    bool m_invites_enabled_isSet;
    bool m_invites_enabled_isValid;

    QList<QString> m_languages;
    bool m_languages_isSet;
    bool m_languages_isValid;

    bool m_registrations;
    bool m_registrations_isSet;
    bool m_registrations_isValid;

    QString m_short_description;
    bool m_short_description_isSet;
    bool m_short_description_isValid;

    OAIObject m_stats;
    bool m_stats_isSet;
    bool m_stats_isValid;

    QString m_thumbnail;
    bool m_thumbnail_isSet;
    bool m_thumbnail_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_uri;
    bool m_uri_isSet;
    bool m_uri_isValid;

    OAIObject m_urls;
    bool m_urls_isSet;
    bool m_urls_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInstance)

#endif // OAIInstance_H
