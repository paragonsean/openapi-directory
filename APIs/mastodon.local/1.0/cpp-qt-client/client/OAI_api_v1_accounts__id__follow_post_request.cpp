/**
 * Mastodon API Specification (https://github.com/mastodon/mastodon)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: sardo@hey.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAI_api_v1_accounts__id__follow_post_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAI_api_v1_accounts__id__follow_post_request::OAI_api_v1_accounts__id__follow_post_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAI_api_v1_accounts__id__follow_post_request::OAI_api_v1_accounts__id__follow_post_request() {
    this->initializeModel();
}

OAI_api_v1_accounts__id__follow_post_request::~OAI_api_v1_accounts__id__follow_post_request() {}

void OAI_api_v1_accounts__id__follow_post_request::initializeModel() {

    m_notify_isSet = false;
    m_notify_isValid = false;

    m_reblogs_isSet = false;
    m_reblogs_isValid = false;
}

void OAI_api_v1_accounts__id__follow_post_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAI_api_v1_accounts__id__follow_post_request::fromJsonObject(QJsonObject json) {

    m_notify_isValid = ::OpenAPI::fromJsonValue(m_notify, json[QString("notify")]);
    m_notify_isSet = !json[QString("notify")].isNull() && m_notify_isValid;

    m_reblogs_isValid = ::OpenAPI::fromJsonValue(m_reblogs, json[QString("reblogs")]);
    m_reblogs_isSet = !json[QString("reblogs")].isNull() && m_reblogs_isValid;
}

QString OAI_api_v1_accounts__id__follow_post_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAI_api_v1_accounts__id__follow_post_request::asJsonObject() const {
    QJsonObject obj;
    if (m_notify_isSet) {
        obj.insert(QString("notify"), ::OpenAPI::toJsonValue(m_notify));
    }
    if (m_reblogs_isSet) {
        obj.insert(QString("reblogs"), ::OpenAPI::toJsonValue(m_reblogs));
    }
    return obj;
}

bool OAI_api_v1_accounts__id__follow_post_request::isNotify() const {
    return m_notify;
}
void OAI_api_v1_accounts__id__follow_post_request::setNotify(const bool &notify) {
    m_notify = notify;
    m_notify_isSet = true;
}

bool OAI_api_v1_accounts__id__follow_post_request::is_notify_Set() const{
    return m_notify_isSet;
}

bool OAI_api_v1_accounts__id__follow_post_request::is_notify_Valid() const{
    return m_notify_isValid;
}

bool OAI_api_v1_accounts__id__follow_post_request::isReblogs() const {
    return m_reblogs;
}
void OAI_api_v1_accounts__id__follow_post_request::setReblogs(const bool &reblogs) {
    m_reblogs = reblogs;
    m_reblogs_isSet = true;
}

bool OAI_api_v1_accounts__id__follow_post_request::is_reblogs_Set() const{
    return m_reblogs_isSet;
}

bool OAI_api_v1_accounts__id__follow_post_request::is_reblogs_Valid() const{
    return m_reblogs_isValid;
}

bool OAI_api_v1_accounts__id__follow_post_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_notify_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reblogs_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAI_api_v1_accounts__id__follow_post_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
