/**
 * Mastodon API Specification (https://github.com/mastodon/mastodon)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: sardo@hey.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEmoji.h
 *
 * Represents a custom emoji.
 */

#ifndef OAIEmoji_H
#define OAIEmoji_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEmoji : public OAIObject {
public:
    OAIEmoji();
    OAIEmoji(QString json);
    ~OAIEmoji() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCategory() const;
    void setCategory(const QString &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    QString getShortcode() const;
    void setShortcode(const QString &shortcode);
    bool is_shortcode_Set() const;
    bool is_shortcode_Valid() const;

    QString getStaticUrl() const;
    void setStaticUrl(const QString &static_url);
    bool is_static_url_Set() const;
    bool is_static_url_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    bool isVisibleInPicker() const;
    void setVisibleInPicker(const bool &visible_in_picker);
    bool is_visible_in_picker_Set() const;
    bool is_visible_in_picker_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    QString m_shortcode;
    bool m_shortcode_isSet;
    bool m_shortcode_isValid;

    QString m_static_url;
    bool m_static_url_isSet;
    bool m_static_url_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    bool m_visible_in_picker;
    bool m_visible_in_picker_isSet;
    bool m_visible_in_picker_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEmoji)

#endif // OAIEmoji_H
