/**
 * Mastodon API Specification (https://github.com/mastodon/mastodon)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: sardo@hey.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAI_api_v1_apps_post_200_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAI_api_v1_apps_post_200_response::OAI_api_v1_apps_post_200_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAI_api_v1_apps_post_200_response::OAI_api_v1_apps_post_200_response() {
    this->initializeModel();
}

OAI_api_v1_apps_post_200_response::~OAI_api_v1_apps_post_200_response() {}

void OAI_api_v1_apps_post_200_response::initializeModel() {

    m_client_id_isSet = false;
    m_client_id_isValid = false;

    m_client_secret_isSet = false;
    m_client_secret_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_redirect_uri_isSet = false;
    m_redirect_uri_isValid = false;

    m_vapid_key_isSet = false;
    m_vapid_key_isValid = false;

    m_website_isSet = false;
    m_website_isValid = false;
}

void OAI_api_v1_apps_post_200_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAI_api_v1_apps_post_200_response::fromJsonObject(QJsonObject json) {

    m_client_id_isValid = ::OpenAPI::fromJsonValue(m_client_id, json[QString("client_id")]);
    m_client_id_isSet = !json[QString("client_id")].isNull() && m_client_id_isValid;

    m_client_secret_isValid = ::OpenAPI::fromJsonValue(m_client_secret, json[QString("client_secret")]);
    m_client_secret_isSet = !json[QString("client_secret")].isNull() && m_client_secret_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_redirect_uri_isValid = ::OpenAPI::fromJsonValue(m_redirect_uri, json[QString("redirect_uri")]);
    m_redirect_uri_isSet = !json[QString("redirect_uri")].isNull() && m_redirect_uri_isValid;

    m_vapid_key_isValid = ::OpenAPI::fromJsonValue(m_vapid_key, json[QString("vapid_key")]);
    m_vapid_key_isSet = !json[QString("vapid_key")].isNull() && m_vapid_key_isValid;

    m_website_isValid = ::OpenAPI::fromJsonValue(m_website, json[QString("website")]);
    m_website_isSet = !json[QString("website")].isNull() && m_website_isValid;
}

QString OAI_api_v1_apps_post_200_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAI_api_v1_apps_post_200_response::asJsonObject() const {
    QJsonObject obj;
    if (m_client_id_isSet) {
        obj.insert(QString("client_id"), ::OpenAPI::toJsonValue(m_client_id));
    }
    if (m_client_secret_isSet) {
        obj.insert(QString("client_secret"), ::OpenAPI::toJsonValue(m_client_secret));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_redirect_uri_isSet) {
        obj.insert(QString("redirect_uri"), ::OpenAPI::toJsonValue(m_redirect_uri));
    }
    if (m_vapid_key_isSet) {
        obj.insert(QString("vapid_key"), ::OpenAPI::toJsonValue(m_vapid_key));
    }
    if (m_website_isSet) {
        obj.insert(QString("website"), ::OpenAPI::toJsonValue(m_website));
    }
    return obj;
}

QString OAI_api_v1_apps_post_200_response::getClientId() const {
    return m_client_id;
}
void OAI_api_v1_apps_post_200_response::setClientId(const QString &client_id) {
    m_client_id = client_id;
    m_client_id_isSet = true;
}

bool OAI_api_v1_apps_post_200_response::is_client_id_Set() const{
    return m_client_id_isSet;
}

bool OAI_api_v1_apps_post_200_response::is_client_id_Valid() const{
    return m_client_id_isValid;
}

QString OAI_api_v1_apps_post_200_response::getClientSecret() const {
    return m_client_secret;
}
void OAI_api_v1_apps_post_200_response::setClientSecret(const QString &client_secret) {
    m_client_secret = client_secret;
    m_client_secret_isSet = true;
}

bool OAI_api_v1_apps_post_200_response::is_client_secret_Set() const{
    return m_client_secret_isSet;
}

bool OAI_api_v1_apps_post_200_response::is_client_secret_Valid() const{
    return m_client_secret_isValid;
}

QString OAI_api_v1_apps_post_200_response::getId() const {
    return m_id;
}
void OAI_api_v1_apps_post_200_response::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAI_api_v1_apps_post_200_response::is_id_Set() const{
    return m_id_isSet;
}

bool OAI_api_v1_apps_post_200_response::is_id_Valid() const{
    return m_id_isValid;
}

QString OAI_api_v1_apps_post_200_response::getName() const {
    return m_name;
}
void OAI_api_v1_apps_post_200_response::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAI_api_v1_apps_post_200_response::is_name_Set() const{
    return m_name_isSet;
}

bool OAI_api_v1_apps_post_200_response::is_name_Valid() const{
    return m_name_isValid;
}

QString OAI_api_v1_apps_post_200_response::getRedirectUri() const {
    return m_redirect_uri;
}
void OAI_api_v1_apps_post_200_response::setRedirectUri(const QString &redirect_uri) {
    m_redirect_uri = redirect_uri;
    m_redirect_uri_isSet = true;
}

bool OAI_api_v1_apps_post_200_response::is_redirect_uri_Set() const{
    return m_redirect_uri_isSet;
}

bool OAI_api_v1_apps_post_200_response::is_redirect_uri_Valid() const{
    return m_redirect_uri_isValid;
}

QString OAI_api_v1_apps_post_200_response::getVapidKey() const {
    return m_vapid_key;
}
void OAI_api_v1_apps_post_200_response::setVapidKey(const QString &vapid_key) {
    m_vapid_key = vapid_key;
    m_vapid_key_isSet = true;
}

bool OAI_api_v1_apps_post_200_response::is_vapid_key_Set() const{
    return m_vapid_key_isSet;
}

bool OAI_api_v1_apps_post_200_response::is_vapid_key_Valid() const{
    return m_vapid_key_isValid;
}

QString OAI_api_v1_apps_post_200_response::getWebsite() const {
    return m_website;
}
void OAI_api_v1_apps_post_200_response::setWebsite(const QString &website) {
    m_website = website;
    m_website_isSet = true;
}

bool OAI_api_v1_apps_post_200_response::is_website_Set() const{
    return m_website_isSet;
}

bool OAI_api_v1_apps_post_200_response::is_website_Valid() const{
    return m_website_isValid;
}

bool OAI_api_v1_apps_post_200_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_client_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_secret_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_redirect_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vapid_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_website_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAI_api_v1_apps_post_200_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
