/**
 * Mastodon API Specification (https://github.com/mastodon/mastodon)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: sardo@hey.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAI_api_v1_statuses_post_200_response.h
 *
 * 
 */

#ifndef OAI_api_v1_statuses_post_200_response_H
#define OAI_api_v1_statuses_post_200_response_H

#include <QJsonObject>

#include "OAIAccount.h"
#include "OAIApplication.h"
#include "OAIAttachment.h"
#include "OAICard.h"
#include "OAIEmoji.h"
#include "OAIMention.h"
#include "OAIPoll.h"
#include "OAIScheduledStatus.h"
#include "OAIStatus.h"
#include "OAIStatusParams.h"
#include "OAITag.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAccount;
class OAIApplication;
class OAICard;
class OAIEmoji;
class OAIAttachment;
class OAIMention;
class OAIPoll;
class OAIStatus;
class OAITag;
class OAIStatusParams;

class OAI_api_v1_statuses_post_200_response : public OAIObject {
public:
    OAI_api_v1_statuses_post_200_response();
    OAI_api_v1_statuses_post_200_response(QString json);
    ~OAI_api_v1_statuses_post_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAccount getAccount() const;
    void setAccount(const OAIAccount &account);
    bool is_account_Set() const;
    bool is_account_Valid() const;

    OAIApplication getApplication() const;
    void setApplication(const OAIApplication &application);
    bool is_application_Set() const;
    bool is_application_Valid() const;

    bool isBookmarked() const;
    void setBookmarked(const bool &bookmarked);
    bool is_bookmarked_Set() const;
    bool is_bookmarked_Valid() const;

    OAICard getCard() const;
    void setCard(const OAICard &card);
    bool is_card_Set() const;
    bool is_card_Valid() const;

    QString getContent() const;
    void setContent(const QString &content);
    bool is_content_Set() const;
    bool is_content_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QList<OAIEmoji> getEmojis() const;
    void setEmojis(const QList<OAIEmoji> &emojis);
    bool is_emojis_Set() const;
    bool is_emojis_Valid() const;

    bool isFavourited() const;
    void setFavourited(const bool &favourited);
    bool is_favourited_Set() const;
    bool is_favourited_Valid() const;

    qint32 getFavouritesCount() const;
    void setFavouritesCount(const qint32 &favourites_count);
    bool is_favourites_count_Set() const;
    bool is_favourites_count_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getInReplyToAccountId() const;
    void setInReplyToAccountId(const QString &in_reply_to_account_id);
    bool is_in_reply_to_account_id_Set() const;
    bool is_in_reply_to_account_id_Valid() const;

    QString getInReplyToId() const;
    void setInReplyToId(const QString &in_reply_to_id);
    bool is_in_reply_to_id_Set() const;
    bool is_in_reply_to_id_Valid() const;

    QString getLanguage() const;
    void setLanguage(const QString &language);
    bool is_language_Set() const;
    bool is_language_Valid() const;

    QList<OAIAttachment> getMediaAttachments() const;
    void setMediaAttachments(const QList<OAIAttachment> &media_attachments);
    bool is_media_attachments_Set() const;
    bool is_media_attachments_Valid() const;

    QList<OAIMention> getMentions() const;
    void setMentions(const QList<OAIMention> &mentions);
    bool is_mentions_Set() const;
    bool is_mentions_Valid() const;

    bool isMuted() const;
    void setMuted(const bool &muted);
    bool is_muted_Set() const;
    bool is_muted_Valid() const;

    bool isPinned() const;
    void setPinned(const bool &pinned);
    bool is_pinned_Set() const;
    bool is_pinned_Valid() const;

    OAIPoll getPoll() const;
    void setPoll(const OAIPoll &poll);
    bool is_poll_Set() const;
    bool is_poll_Valid() const;

    OAIStatus getReblog() const;
    void setReblog(const OAIStatus &reblog);
    bool is_reblog_Set() const;
    bool is_reblog_Valid() const;

    bool isReblogged() const;
    void setReblogged(const bool &reblogged);
    bool is_reblogged_Set() const;
    bool is_reblogged_Valid() const;

    qint32 getReblogsCount() const;
    void setReblogsCount(const qint32 &reblogs_count);
    bool is_reblogs_count_Set() const;
    bool is_reblogs_count_Valid() const;

    qint32 getRepliesCount() const;
    void setRepliesCount(const qint32 &replies_count);
    bool is_replies_count_Set() const;
    bool is_replies_count_Valid() const;

    bool isSensitive() const;
    void setSensitive(const bool &sensitive);
    bool is_sensitive_Set() const;
    bool is_sensitive_Valid() const;

    QString getSpoilerText() const;
    void setSpoilerText(const QString &spoiler_text);
    bool is_spoiler_text_Set() const;
    bool is_spoiler_text_Valid() const;

    QList<OAITag> getTags() const;
    void setTags(const QList<OAITag> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    QString getUri() const;
    void setUri(const QString &uri);
    bool is_uri_Set() const;
    bool is_uri_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    QString getVisibility() const;
    void setVisibility(const QString &visibility);
    bool is_visibility_Set() const;
    bool is_visibility_Valid() const;

    OAIStatusParams getParams() const;
    void setParams(const OAIStatusParams &params);
    bool is_params_Set() const;
    bool is_params_Valid() const;

    QDateTime getScheduledAt() const;
    void setScheduledAt(const QDateTime &scheduled_at);
    bool is_scheduled_at_Set() const;
    bool is_scheduled_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAccount m_account;
    bool m_account_isSet;
    bool m_account_isValid;

    OAIApplication m_application;
    bool m_application_isSet;
    bool m_application_isValid;

    bool m_bookmarked;
    bool m_bookmarked_isSet;
    bool m_bookmarked_isValid;

    OAICard m_card;
    bool m_card_isSet;
    bool m_card_isValid;

    QString m_content;
    bool m_content_isSet;
    bool m_content_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QList<OAIEmoji> m_emojis;
    bool m_emojis_isSet;
    bool m_emojis_isValid;

    bool m_favourited;
    bool m_favourited_isSet;
    bool m_favourited_isValid;

    qint32 m_favourites_count;
    bool m_favourites_count_isSet;
    bool m_favourites_count_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_in_reply_to_account_id;
    bool m_in_reply_to_account_id_isSet;
    bool m_in_reply_to_account_id_isValid;

    QString m_in_reply_to_id;
    bool m_in_reply_to_id_isSet;
    bool m_in_reply_to_id_isValid;

    QString m_language;
    bool m_language_isSet;
    bool m_language_isValid;

    QList<OAIAttachment> m_media_attachments;
    bool m_media_attachments_isSet;
    bool m_media_attachments_isValid;

    QList<OAIMention> m_mentions;
    bool m_mentions_isSet;
    bool m_mentions_isValid;

    bool m_muted;
    bool m_muted_isSet;
    bool m_muted_isValid;

    bool m_pinned;
    bool m_pinned_isSet;
    bool m_pinned_isValid;

    OAIPoll m_poll;
    bool m_poll_isSet;
    bool m_poll_isValid;

    OAIStatus m_reblog;
    bool m_reblog_isSet;
    bool m_reblog_isValid;

    bool m_reblogged;
    bool m_reblogged_isSet;
    bool m_reblogged_isValid;

    qint32 m_reblogs_count;
    bool m_reblogs_count_isSet;
    bool m_reblogs_count_isValid;

    qint32 m_replies_count;
    bool m_replies_count_isSet;
    bool m_replies_count_isValid;

    bool m_sensitive;
    bool m_sensitive_isSet;
    bool m_sensitive_isValid;

    QString m_spoiler_text;
    bool m_spoiler_text_isSet;
    bool m_spoiler_text_isValid;

    QList<OAITag> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;

    QString m_uri;
    bool m_uri_isSet;
    bool m_uri_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    QString m_visibility;
    bool m_visibility_isSet;
    bool m_visibility_isValid;

    OAIStatusParams m_params;
    bool m_params_isSet;
    bool m_params_isValid;

    QDateTime m_scheduled_at;
    bool m_scheduled_at_isSet;
    bool m_scheduled_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAI_api_v1_statuses_post_200_response)

#endif // OAI_api_v1_statuses_post_200_response_H
