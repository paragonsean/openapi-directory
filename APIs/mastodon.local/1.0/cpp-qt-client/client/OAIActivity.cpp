/**
 * Mastodon API Specification (https://github.com/mastodon/mastodon)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: sardo@hey.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIActivity.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIActivity::OAIActivity(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIActivity::OAIActivity() {
    this->initializeModel();
}

OAIActivity::~OAIActivity() {}

void OAIActivity::initializeModel() {

    m_logins_isSet = false;
    m_logins_isValid = false;

    m_registrations_isSet = false;
    m_registrations_isValid = false;

    m_statuses_isSet = false;
    m_statuses_isValid = false;

    m_week_isSet = false;
    m_week_isValid = false;
}

void OAIActivity::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIActivity::fromJsonObject(QJsonObject json) {

    m_logins_isValid = ::OpenAPI::fromJsonValue(m_logins, json[QString("logins")]);
    m_logins_isSet = !json[QString("logins")].isNull() && m_logins_isValid;

    m_registrations_isValid = ::OpenAPI::fromJsonValue(m_registrations, json[QString("registrations")]);
    m_registrations_isSet = !json[QString("registrations")].isNull() && m_registrations_isValid;

    m_statuses_isValid = ::OpenAPI::fromJsonValue(m_statuses, json[QString("statuses")]);
    m_statuses_isSet = !json[QString("statuses")].isNull() && m_statuses_isValid;

    m_week_isValid = ::OpenAPI::fromJsonValue(m_week, json[QString("week")]);
    m_week_isSet = !json[QString("week")].isNull() && m_week_isValid;
}

QString OAIActivity::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIActivity::asJsonObject() const {
    QJsonObject obj;
    if (m_logins_isSet) {
        obj.insert(QString("logins"), ::OpenAPI::toJsonValue(m_logins));
    }
    if (m_registrations_isSet) {
        obj.insert(QString("registrations"), ::OpenAPI::toJsonValue(m_registrations));
    }
    if (m_statuses_isSet) {
        obj.insert(QString("statuses"), ::OpenAPI::toJsonValue(m_statuses));
    }
    if (m_week_isSet) {
        obj.insert(QString("week"), ::OpenAPI::toJsonValue(m_week));
    }
    return obj;
}

QString OAIActivity::getLogins() const {
    return m_logins;
}
void OAIActivity::setLogins(const QString &logins) {
    m_logins = logins;
    m_logins_isSet = true;
}

bool OAIActivity::is_logins_Set() const{
    return m_logins_isSet;
}

bool OAIActivity::is_logins_Valid() const{
    return m_logins_isValid;
}

QString OAIActivity::getRegistrations() const {
    return m_registrations;
}
void OAIActivity::setRegistrations(const QString &registrations) {
    m_registrations = registrations;
    m_registrations_isSet = true;
}

bool OAIActivity::is_registrations_Set() const{
    return m_registrations_isSet;
}

bool OAIActivity::is_registrations_Valid() const{
    return m_registrations_isValid;
}

QString OAIActivity::getStatuses() const {
    return m_statuses;
}
void OAIActivity::setStatuses(const QString &statuses) {
    m_statuses = statuses;
    m_statuses_isSet = true;
}

bool OAIActivity::is_statuses_Set() const{
    return m_statuses_isSet;
}

bool OAIActivity::is_statuses_Valid() const{
    return m_statuses_isValid;
}

QString OAIActivity::getWeek() const {
    return m_week;
}
void OAIActivity::setWeek(const QString &week) {
    m_week = week;
    m_week_isSet = true;
}

bool OAIActivity::is_week_Set() const{
    return m_week_isSet;
}

bool OAIActivity::is_week_Valid() const{
    return m_week_isValid;
}

bool OAIActivity::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_logins_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_registrations_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_statuses_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_week_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIActivity::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
