/**
 * Mastodon API Specification (https://github.com/mastodon/mastodon)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: sardo@hey.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIResults.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIResults::OAIResults(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIResults::OAIResults() {
    this->initializeModel();
}

OAIResults::~OAIResults() {}

void OAIResults::initializeModel() {

    m_accounts_isSet = false;
    m_accounts_isValid = false;

    m_hashtags_isSet = false;
    m_hashtags_isValid = false;

    m_statuses_isSet = false;
    m_statuses_isValid = false;
}

void OAIResults::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIResults::fromJsonObject(QJsonObject json) {

    m_accounts_isValid = ::OpenAPI::fromJsonValue(m_accounts, json[QString("accounts")]);
    m_accounts_isSet = !json[QString("accounts")].isNull() && m_accounts_isValid;

    m_hashtags_isValid = ::OpenAPI::fromJsonValue(m_hashtags, json[QString("hashtags")]);
    m_hashtags_isSet = !json[QString("hashtags")].isNull() && m_hashtags_isValid;

    m_statuses_isValid = ::OpenAPI::fromJsonValue(m_statuses, json[QString("statuses")]);
    m_statuses_isSet = !json[QString("statuses")].isNull() && m_statuses_isValid;
}

QString OAIResults::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIResults::asJsonObject() const {
    QJsonObject obj;
    if (m_accounts.size() > 0) {
        obj.insert(QString("accounts"), ::OpenAPI::toJsonValue(m_accounts));
    }
    if (m_hashtags.size() > 0) {
        obj.insert(QString("hashtags"), ::OpenAPI::toJsonValue(m_hashtags));
    }
    if (m_statuses.size() > 0) {
        obj.insert(QString("statuses"), ::OpenAPI::toJsonValue(m_statuses));
    }
    return obj;
}

QList<OAIAccount> OAIResults::getAccounts() const {
    return m_accounts;
}
void OAIResults::setAccounts(const QList<OAIAccount> &accounts) {
    m_accounts = accounts;
    m_accounts_isSet = true;
}

bool OAIResults::is_accounts_Set() const{
    return m_accounts_isSet;
}

bool OAIResults::is_accounts_Valid() const{
    return m_accounts_isValid;
}

QList<OAITag> OAIResults::getHashtags() const {
    return m_hashtags;
}
void OAIResults::setHashtags(const QList<OAITag> &hashtags) {
    m_hashtags = hashtags;
    m_hashtags_isSet = true;
}

bool OAIResults::is_hashtags_Set() const{
    return m_hashtags_isSet;
}

bool OAIResults::is_hashtags_Valid() const{
    return m_hashtags_isValid;
}

QList<OAIStatus> OAIResults::getStatuses() const {
    return m_statuses;
}
void OAIResults::setStatuses(const QList<OAIStatus> &statuses) {
    m_statuses = statuses;
    m_statuses_isSet = true;
}

bool OAIResults::is_statuses_Set() const{
    return m_statuses_isSet;
}

bool OAIResults::is_statuses_Valid() const{
    return m_statuses_isValid;
}

bool OAIResults::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_accounts.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_hashtags.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_statuses.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIResults::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_accounts_isValid && m_hashtags_isValid && m_statuses_isValid && true;
}

} // namespace OpenAPI
