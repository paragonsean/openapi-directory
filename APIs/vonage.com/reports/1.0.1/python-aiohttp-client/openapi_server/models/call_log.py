# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CallLog(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, charge: float=None, destination_device_name: str=None, destination_extension: float=None, destination_sip_id: str=None, destination_user: str=None, destination_user_full_name: str=None, direction: str=None, end: str=None, _from: str=None, id: str=None, in_network: bool=None, international: bool=None, length: float=None, rate: float=None, recorded: bool=None, result: str=None, source_device_name: str=None, source_extension: float=None, source_sip_id: str=None, source_user: str=None, source_user_full_name: str=None, start: str=None, to: str=None):
        """CallLog - a model defined in OpenAPI

        :param charge: The charge of this CallLog.
        :param destination_device_name: The destination_device_name of this CallLog.
        :param destination_extension: The destination_extension of this CallLog.
        :param destination_sip_id: The destination_sip_id of this CallLog.
        :param destination_user: The destination_user of this CallLog.
        :param destination_user_full_name: The destination_user_full_name of this CallLog.
        :param direction: The direction of this CallLog.
        :param end: The end of this CallLog.
        :param _from: The _from of this CallLog.
        :param id: The id of this CallLog.
        :param in_network: The in_network of this CallLog.
        :param international: The international of this CallLog.
        :param length: The length of this CallLog.
        :param rate: The rate of this CallLog.
        :param recorded: The recorded of this CallLog.
        :param result: The result of this CallLog.
        :param source_device_name: The source_device_name of this CallLog.
        :param source_extension: The source_extension of this CallLog.
        :param source_sip_id: The source_sip_id of this CallLog.
        :param source_user: The source_user of this CallLog.
        :param source_user_full_name: The source_user_full_name of this CallLog.
        :param start: The start of this CallLog.
        :param to: The to of this CallLog.
        """
        self.openapi_types = {
            'charge': float,
            'destination_device_name': str,
            'destination_extension': float,
            'destination_sip_id': str,
            'destination_user': str,
            'destination_user_full_name': str,
            'direction': str,
            'end': str,
            '_from': str,
            'id': str,
            'in_network': bool,
            'international': bool,
            'length': float,
            'rate': float,
            'recorded': bool,
            'result': str,
            'source_device_name': str,
            'source_extension': float,
            'source_sip_id': str,
            'source_user': str,
            'source_user_full_name': str,
            'start': str,
            'to': str
        }

        self.attribute_map = {
            'charge': 'charge',
            'destination_device_name': 'destination_device_name',
            'destination_extension': 'destination_extension',
            'destination_sip_id': 'destination_sip_id',
            'destination_user': 'destination_user',
            'destination_user_full_name': 'destination_user_full_name',
            'direction': 'direction',
            'end': 'end',
            '_from': 'from',
            'id': 'id',
            'in_network': 'in_network',
            'international': 'international',
            'length': 'length',
            'rate': 'rate',
            'recorded': 'recorded',
            'result': 'result',
            'source_device_name': 'source_device_name',
            'source_extension': 'source_extension',
            'source_sip_id': 'source_sip_id',
            'source_user': 'source_user',
            'source_user_full_name': 'source_user_full_name',
            'start': 'start',
            'to': 'to'
        }

        self._charge = charge
        self._destination_device_name = destination_device_name
        self._destination_extension = destination_extension
        self._destination_sip_id = destination_sip_id
        self._destination_user = destination_user
        self._destination_user_full_name = destination_user_full_name
        self._direction = direction
        self._end = end
        self.__from = _from
        self._id = id
        self._in_network = in_network
        self._international = international
        self._length = length
        self._rate = rate
        self._recorded = recorded
        self._result = result
        self._source_device_name = source_device_name
        self._source_extension = source_extension
        self._source_sip_id = source_sip_id
        self._source_user = source_user
        self._source_user_full_name = source_user_full_name
        self._start = start
        self._to = to

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CallLog':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CallLog of this CallLog.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def charge(self):
        """Gets the charge of this CallLog.

        Amount charged for the call

        :return: The charge of this CallLog.
        :rtype: float
        """
        return self._charge

    @charge.setter
    def charge(self, charge):
        """Sets the charge of this CallLog.

        Amount charged for the call

        :param charge: The charge of this CallLog.
        :type charge: float
        """

        self._charge = charge

    @property
    def destination_device_name(self):
        """Gets the destination_device_name of this CallLog.

        Name of the destination device of the call

        :return: The destination_device_name of this CallLog.
        :rtype: str
        """
        return self._destination_device_name

    @destination_device_name.setter
    def destination_device_name(self, destination_device_name):
        """Sets the destination_device_name of this CallLog.

        Name of the destination device of the call

        :param destination_device_name: The destination_device_name of this CallLog.
        :type destination_device_name: str
        """

        self._destination_device_name = destination_device_name

    @property
    def destination_extension(self):
        """Gets the destination_extension of this CallLog.

        Destination extension of the call

        :return: The destination_extension of this CallLog.
        :rtype: float
        """
        return self._destination_extension

    @destination_extension.setter
    def destination_extension(self, destination_extension):
        """Sets the destination_extension of this CallLog.

        Destination extension of the call

        :param destination_extension: The destination_extension of this CallLog.
        :type destination_extension: float
        """

        self._destination_extension = destination_extension

    @property
    def destination_sip_id(self):
        """Gets the destination_sip_id of this CallLog.

        SIP ID of the destination device of the call

        :return: The destination_sip_id of this CallLog.
        :rtype: str
        """
        return self._destination_sip_id

    @destination_sip_id.setter
    def destination_sip_id(self, destination_sip_id):
        """Sets the destination_sip_id of this CallLog.

        SIP ID of the destination device of the call

        :param destination_sip_id: The destination_sip_id of this CallLog.
        :type destination_sip_id: str
        """

        self._destination_sip_id = destination_sip_id

    @property
    def destination_user(self):
        """Gets the destination_user of this CallLog.

        Destination user of the call

        :return: The destination_user of this CallLog.
        :rtype: str
        """
        return self._destination_user

    @destination_user.setter
    def destination_user(self, destination_user):
        """Sets the destination_user of this CallLog.

        Destination user of the call

        :param destination_user: The destination_user of this CallLog.
        :type destination_user: str
        """

        self._destination_user = destination_user

    @property
    def destination_user_full_name(self):
        """Gets the destination_user_full_name of this CallLog.

        Full name of the destination user of the call

        :return: The destination_user_full_name of this CallLog.
        :rtype: str
        """
        return self._destination_user_full_name

    @destination_user_full_name.setter
    def destination_user_full_name(self, destination_user_full_name):
        """Sets the destination_user_full_name of this CallLog.

        Full name of the destination user of the call

        :param destination_user_full_name: The destination_user_full_name of this CallLog.
        :type destination_user_full_name: str
        """

        self._destination_user_full_name = destination_user_full_name

    @property
    def direction(self):
        """Gets the direction of this CallLog.

        Direction of the call

        :return: The direction of this CallLog.
        :rtype: str
        """
        return self._direction

    @direction.setter
    def direction(self, direction):
        """Sets the direction of this CallLog.

        Direction of the call

        :param direction: The direction of this CallLog.
        :type direction: str
        """

        self._direction = direction

    @property
    def end(self):
        """Gets the end of this CallLog.

        End time of the call

        :return: The end of this CallLog.
        :rtype: str
        """
        return self._end

    @end.setter
    def end(self, end):
        """Sets the end of this CallLog.

        End time of the call

        :param end: The end of this CallLog.
        :type end: str
        """

        self._end = end

    @property
    def _from(self):
        """Gets the _from of this CallLog.

        Source number of the call

        :return: The _from of this CallLog.
        :rtype: str
        """
        return self.__from

    @_from.setter
    def _from(self, _from):
        """Sets the _from of this CallLog.

        Source number of the call

        :param _from: The _from of this CallLog.
        :type _from: str
        """

        self.__from = _from

    @property
    def id(self):
        """Gets the id of this CallLog.

        Unique identifier of the call

        :return: The id of this CallLog.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CallLog.

        Unique identifier of the call

        :param id: The id of this CallLog.
        :type id: str
        """

        self._id = id

    @property
    def in_network(self):
        """Gets the in_network of this CallLog.

        Indicates if call was on/off network

        :return: The in_network of this CallLog.
        :rtype: bool
        """
        return self._in_network

    @in_network.setter
    def in_network(self, in_network):
        """Sets the in_network of this CallLog.

        Indicates if call was on/off network

        :param in_network: The in_network of this CallLog.
        :type in_network: bool
        """

        self._in_network = in_network

    @property
    def international(self):
        """Gets the international of this CallLog.

        Indicates if call was international

        :return: The international of this CallLog.
        :rtype: bool
        """
        return self._international

    @international.setter
    def international(self, international):
        """Sets the international of this CallLog.

        Indicates if call was international

        :param international: The international of this CallLog.
        :type international: bool
        """

        self._international = international

    @property
    def length(self):
        """Gets the length of this CallLog.

        Duration of the call in seconds

        :return: The length of this CallLog.
        :rtype: float
        """
        return self._length

    @length.setter
    def length(self, length):
        """Sets the length of this CallLog.

        Duration of the call in seconds

        :param length: The length of this CallLog.
        :type length: float
        """

        self._length = length

    @property
    def rate(self):
        """Gets the rate of this CallLog.

        Rate charged for the call

        :return: The rate of this CallLog.
        :rtype: float
        """
        return self._rate

    @rate.setter
    def rate(self, rate):
        """Sets the rate of this CallLog.

        Rate charged for the call

        :param rate: The rate of this CallLog.
        :type rate: float
        """

        self._rate = rate

    @property
    def recorded(self):
        """Gets the recorded of this CallLog.

        Indicates if call was recorded

        :return: The recorded of this CallLog.
        :rtype: bool
        """
        return self._recorded

    @recorded.setter
    def recorded(self, recorded):
        """Sets the recorded of this CallLog.

        Indicates if call was recorded

        :param recorded: The recorded of this CallLog.
        :type recorded: bool
        """

        self._recorded = recorded

    @property
    def result(self):
        """Gets the result of this CallLog.

        Result of the call

        :return: The result of this CallLog.
        :rtype: str
        """
        return self._result

    @result.setter
    def result(self, result):
        """Sets the result of this CallLog.

        Result of the call

        :param result: The result of this CallLog.
        :type result: str
        """

        self._result = result

    @property
    def source_device_name(self):
        """Gets the source_device_name of this CallLog.

        Name of the source device of the call

        :return: The source_device_name of this CallLog.
        :rtype: str
        """
        return self._source_device_name

    @source_device_name.setter
    def source_device_name(self, source_device_name):
        """Sets the source_device_name of this CallLog.

        Name of the source device of the call

        :param source_device_name: The source_device_name of this CallLog.
        :type source_device_name: str
        """

        self._source_device_name = source_device_name

    @property
    def source_extension(self):
        """Gets the source_extension of this CallLog.

        Source extension of the call

        :return: The source_extension of this CallLog.
        :rtype: float
        """
        return self._source_extension

    @source_extension.setter
    def source_extension(self, source_extension):
        """Sets the source_extension of this CallLog.

        Source extension of the call

        :param source_extension: The source_extension of this CallLog.
        :type source_extension: float
        """

        self._source_extension = source_extension

    @property
    def source_sip_id(self):
        """Gets the source_sip_id of this CallLog.

        SIP ID of the source device of the call

        :return: The source_sip_id of this CallLog.
        :rtype: str
        """
        return self._source_sip_id

    @source_sip_id.setter
    def source_sip_id(self, source_sip_id):
        """Sets the source_sip_id of this CallLog.

        SIP ID of the source device of the call

        :param source_sip_id: The source_sip_id of this CallLog.
        :type source_sip_id: str
        """

        self._source_sip_id = source_sip_id

    @property
    def source_user(self):
        """Gets the source_user of this CallLog.

        Source user of the call

        :return: The source_user of this CallLog.
        :rtype: str
        """
        return self._source_user

    @source_user.setter
    def source_user(self, source_user):
        """Sets the source_user of this CallLog.

        Source user of the call

        :param source_user: The source_user of this CallLog.
        :type source_user: str
        """

        self._source_user = source_user

    @property
    def source_user_full_name(self):
        """Gets the source_user_full_name of this CallLog.

        Full name of the source user of the call

        :return: The source_user_full_name of this CallLog.
        :rtype: str
        """
        return self._source_user_full_name

    @source_user_full_name.setter
    def source_user_full_name(self, source_user_full_name):
        """Sets the source_user_full_name of this CallLog.

        Full name of the source user of the call

        :param source_user_full_name: The source_user_full_name of this CallLog.
        :type source_user_full_name: str
        """

        self._source_user_full_name = source_user_full_name

    @property
    def start(self):
        """Gets the start of this CallLog.

        Start time of the call

        :return: The start of this CallLog.
        :rtype: str
        """
        return self._start

    @start.setter
    def start(self, start):
        """Sets the start of this CallLog.

        Start time of the call

        :param start: The start of this CallLog.
        :type start: str
        """

        self._start = start

    @property
    def to(self):
        """Gets the to of this CallLog.

        Destination number of the call

        :return: The to of this CallLog.
        :rtype: str
        """
        return self._to

    @to.setter
    def to(self, to):
        """Sets the to of this CallLog.

        Destination number of the call

        :param to: The to of this CallLog.
        :type to: str
        """

        self._to = to
