# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.call_log import CallLog
from openapi_server import util


class CallLogsEmbeddedObject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, call_logs: List[CallLog]=None):
        """CallLogsEmbeddedObject - a model defined in OpenAPI

        :param call_logs: The call_logs of this CallLogsEmbeddedObject.
        """
        self.openapi_types = {
            'call_logs': List[CallLog]
        }

        self.attribute_map = {
            'call_logs': 'call_logs'
        }

        self._call_logs = call_logs

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CallLogsEmbeddedObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CallLogsEmbeddedObject of this CallLogsEmbeddedObject.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def call_logs(self):
        """Gets the call_logs of this CallLogsEmbeddedObject.


        :return: The call_logs of this CallLogsEmbeddedObject.
        :rtype: List[CallLog]
        """
        return self._call_logs

    @call_logs.setter
    def call_logs(self, call_logs):
        """Sets the call_logs of this CallLogsEmbeddedObject.


        :param call_logs: The call_logs of this CallLogsEmbeddedObject.
        :type call_logs: List[CallLog]
        """

        self._call_logs = call_logs
