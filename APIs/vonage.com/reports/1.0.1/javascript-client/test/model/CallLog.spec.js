/**
 * Reports API
 * The Vonage Business Cloud Reports API enables you to retrieve call logs for your account.  Your application must subscribe to the Reports API suite to use this API. 
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ReportsApi);
  }
}(this, function(expect, ReportsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ReportsApi.CallLog();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CallLog', function() {
    it('should create an instance of CallLog', function() {
      // uncomment below and update the code to test CallLog
      //var instance = new ReportsApi.CallLog();
      //expect(instance).to.be.a(ReportsApi.CallLog);
    });

    it('should have the property charge (base name: "charge")', function() {
      // uncomment below and update the code to test the property charge
      //var instance = new ReportsApi.CallLog();
      //expect(instance).to.be();
    });

    it('should have the property destinationDeviceName (base name: "destination_device_name")', function() {
      // uncomment below and update the code to test the property destinationDeviceName
      //var instance = new ReportsApi.CallLog();
      //expect(instance).to.be();
    });

    it('should have the property destinationExtension (base name: "destination_extension")', function() {
      // uncomment below and update the code to test the property destinationExtension
      //var instance = new ReportsApi.CallLog();
      //expect(instance).to.be();
    });

    it('should have the property destinationSipId (base name: "destination_sip_id")', function() {
      // uncomment below and update the code to test the property destinationSipId
      //var instance = new ReportsApi.CallLog();
      //expect(instance).to.be();
    });

    it('should have the property destinationUser (base name: "destination_user")', function() {
      // uncomment below and update the code to test the property destinationUser
      //var instance = new ReportsApi.CallLog();
      //expect(instance).to.be();
    });

    it('should have the property destinationUserFullName (base name: "destination_user_full_name")', function() {
      // uncomment below and update the code to test the property destinationUserFullName
      //var instance = new ReportsApi.CallLog();
      //expect(instance).to.be();
    });

    it('should have the property direction (base name: "direction")', function() {
      // uncomment below and update the code to test the property direction
      //var instance = new ReportsApi.CallLog();
      //expect(instance).to.be();
    });

    it('should have the property end (base name: "end")', function() {
      // uncomment below and update the code to test the property end
      //var instance = new ReportsApi.CallLog();
      //expect(instance).to.be();
    });

    it('should have the property from (base name: "from")', function() {
      // uncomment below and update the code to test the property from
      //var instance = new ReportsApi.CallLog();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new ReportsApi.CallLog();
      //expect(instance).to.be();
    });

    it('should have the property inNetwork (base name: "in_network")', function() {
      // uncomment below and update the code to test the property inNetwork
      //var instance = new ReportsApi.CallLog();
      //expect(instance).to.be();
    });

    it('should have the property international (base name: "international")', function() {
      // uncomment below and update the code to test the property international
      //var instance = new ReportsApi.CallLog();
      //expect(instance).to.be();
    });

    it('should have the property length (base name: "length")', function() {
      // uncomment below and update the code to test the property length
      //var instance = new ReportsApi.CallLog();
      //expect(instance).to.be();
    });

    it('should have the property rate (base name: "rate")', function() {
      // uncomment below and update the code to test the property rate
      //var instance = new ReportsApi.CallLog();
      //expect(instance).to.be();
    });

    it('should have the property recorded (base name: "recorded")', function() {
      // uncomment below and update the code to test the property recorded
      //var instance = new ReportsApi.CallLog();
      //expect(instance).to.be();
    });

    it('should have the property result (base name: "result")', function() {
      // uncomment below and update the code to test the property result
      //var instance = new ReportsApi.CallLog();
      //expect(instance).to.be();
    });

    it('should have the property sourceDeviceName (base name: "source_device_name")', function() {
      // uncomment below and update the code to test the property sourceDeviceName
      //var instance = new ReportsApi.CallLog();
      //expect(instance).to.be();
    });

    it('should have the property sourceExtension (base name: "source_extension")', function() {
      // uncomment below and update the code to test the property sourceExtension
      //var instance = new ReportsApi.CallLog();
      //expect(instance).to.be();
    });

    it('should have the property sourceSipId (base name: "source_sip_id")', function() {
      // uncomment below and update the code to test the property sourceSipId
      //var instance = new ReportsApi.CallLog();
      //expect(instance).to.be();
    });

    it('should have the property sourceUser (base name: "source_user")', function() {
      // uncomment below and update the code to test the property sourceUser
      //var instance = new ReportsApi.CallLog();
      //expect(instance).to.be();
    });

    it('should have the property sourceUserFullName (base name: "source_user_full_name")', function() {
      // uncomment below and update the code to test the property sourceUserFullName
      //var instance = new ReportsApi.CallLog();
      //expect(instance).to.be();
    });

    it('should have the property start (base name: "start")', function() {
      // uncomment below and update the code to test the property start
      //var instance = new ReportsApi.CallLog();
      //expect(instance).to.be();
    });

    it('should have the property to (base name: "to")', function() {
      // uncomment below and update the code to test the property to
      //var instance = new ReportsApi.CallLog();
      //expect(instance).to.be();
    });

  });

}));
