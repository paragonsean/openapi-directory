/**
 * Reports API
 * The Vonage Business Cloud Reports API enables you to retrieve call logs for your account.  Your application must subscribe to the Reports API suite to use this API. 
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import CallLog from './model/CallLog';
import CallLogsEmbeddedObject from './model/CallLogsEmbeddedObject';
import CallLogsHalResponse from './model/CallLogsHalResponse';
import DetailedInvalidParam from './model/DetailedInvalidParam';
import ErrorResponse from './model/ErrorResponse';
import FirstHref from './model/FirstHref';
import LastHref from './model/LastHref';
import Links from './model/Links';
import NextHref from './model/NextHref';
import PrevHref from './model/PrevHref';
import SelfHref from './model/SelfHref';
import ValidationErrorsResponse from './model/ValidationErrorsResponse';
import DefaultApi from './api/DefaultApi';


/**
* The Vonage Business Cloud Reports API enables you to retrieve call logs for your account.  Your application must subscribe to the Reports API suite to use this API. .<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ReportsApi = require('index'); // See note below*.
* var xxxSvc = new ReportsApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ReportsApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ReportsApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ReportsApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The CallLog model constructor.
     * @property {module:model/CallLog}
     */
    CallLog,

    /**
     * The CallLogsEmbeddedObject model constructor.
     * @property {module:model/CallLogsEmbeddedObject}
     */
    CallLogsEmbeddedObject,

    /**
     * The CallLogsHalResponse model constructor.
     * @property {module:model/CallLogsHalResponse}
     */
    CallLogsHalResponse,

    /**
     * The DetailedInvalidParam model constructor.
     * @property {module:model/DetailedInvalidParam}
     */
    DetailedInvalidParam,

    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse,

    /**
     * The FirstHref model constructor.
     * @property {module:model/FirstHref}
     */
    FirstHref,

    /**
     * The LastHref model constructor.
     * @property {module:model/LastHref}
     */
    LastHref,

    /**
     * The Links model constructor.
     * @property {module:model/Links}
     */
    Links,

    /**
     * The NextHref model constructor.
     * @property {module:model/NextHref}
     */
    NextHref,

    /**
     * The PrevHref model constructor.
     * @property {module:model/PrevHref}
     */
    PrevHref,

    /**
     * The SelfHref model constructor.
     * @property {module:model/SelfHref}
     */
    SelfHref,

    /**
     * The ValidationErrorsResponse model constructor.
     * @property {module:model/ValidationErrorsResponse}
     */
    ValidationErrorsResponse,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
