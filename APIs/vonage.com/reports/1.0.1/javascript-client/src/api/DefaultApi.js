/**
 * Reports API
 * The Vonage Business Cloud Reports API enables you to retrieve call logs for your account.  Your application must subscribe to the Reports API suite to use this API. 
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CallLogsHalResponse from '../model/CallLogsHalResponse';
import ValidationErrorsResponse from '../model/ValidationErrorsResponse';

/**
* Default service.
* @module api/DefaultApi
* @version 1.0.1
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getCallLogs operation.
     * @callback module:api/DefaultApi~getCallLogsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CallLogsHalResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve call logs for your account
     * Retrieve call logs for your account
     * @param {String} accountId The Vonage Business Cloud account ID
     * @param {String} startgte Filter records by start date (greater equal or equal to)
     * @param {String} startlte Filter records by start date (less equal or equal to)
     * @param {Number} pageSize Number of records per page
     * @param {Number} page Current page number
     * @param {Object} opts Optional parameters
     * @param {String} [endgte] Filter records by end date (greater equal or equal to)
     * @param {String} [endlte] Filter records by end date (less equal or equal to)
     * @param {String} [to] Filter by called number
     * @param {String} [from] Filter by source number
     * @param {String} [sourceUser] Filter by source user
     * @param {String} [destinationUser] Filter by destination user
     * @param {module:model/String} [direction] Filter by call direction.
     * @param {module:api/DefaultApi~getCallLogsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CallLogsHalResponse}
     */
    getCallLogs(accountId, startgte, startlte, pageSize, page, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling getCallLogs");
      }
      // verify the required parameter 'startgte' is set
      if (startgte === undefined || startgte === null) {
        throw new Error("Missing the required parameter 'startgte' when calling getCallLogs");
      }
      // verify the required parameter 'startlte' is set
      if (startlte === undefined || startlte === null) {
        throw new Error("Missing the required parameter 'startlte' when calling getCallLogs");
      }
      // verify the required parameter 'pageSize' is set
      if (pageSize === undefined || pageSize === null) {
        throw new Error("Missing the required parameter 'pageSize' when calling getCallLogs");
      }
      // verify the required parameter 'page' is set
      if (page === undefined || page === null) {
        throw new Error("Missing the required parameter 'page' when calling getCallLogs");
      }

      let pathParams = {
        'account_id': accountId
      };
      let queryParams = {
        'start:gte': startgte,
        'start:lte': startlte,
        'end:gte': opts['endgte'],
        'end:lte': opts['endlte'],
        'page_size': pageSize,
        'page': page,
        'to': opts['to'],
        'from': opts['from'],
        'source_user': opts['sourceUser'],
        'destination_user': opts['destinationUser'],
        'direction': opts['direction']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CallLogsHalResponse;
      return this.apiClient.callApi(
        '/accounts/{account_id}/call-logs', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
