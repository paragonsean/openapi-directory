/**
 * Extension API
 * The Vonage Business Cloud Extension API enables you to retrieve information about extensions.  Your application must subscribe to the Provisioning API suite to use this API. 
 *
 * The version of the OpenAPI document: 1.11.8
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEndUserRoute.h
 *
 * 
 */

#ifndef OAIEndUserRoute_H
#define OAIEndUserRoute_H

#include <QJsonObject>

#include "OAIBasicUser.h"
#include "OAIDID.h"
#include "OAILine.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDID;
class OAILine;
class OAIBasicUser;

class OAIEndUserRoute : public OAIObject {
public:
    OAIEndUserRoute();
    OAIEndUserRoute(QString json);
    ~OAIEndUserRoute() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isBlockCallerId() const;
    void setBlockCallerId(const bool &block_caller_id);
    bool is_block_caller_id_Set() const;
    bool is_block_caller_id_Valid() const;

    QString getCallerId() const;
    void setCallerId(const QString &caller_id);
    bool is_caller_id_Set() const;
    bool is_caller_id_Valid() const;

    QList<OAIDID> getDids() const;
    void setDids(const QList<OAIDID> &dids);
    bool is_dids_Set() const;
    bool is_dids_Valid() const;

    bool isDndEnabled() const;
    void setDndEnabled(const bool &dnd_enabled);
    bool is_dnd_enabled_Set() const;
    bool is_dnd_enabled_Valid() const;

    QList<OAILine> getExtensionHandsets() const;
    void setExtensionHandsets(const QList<OAILine> &extension_handsets);
    bool is_extension_handsets_Set() const;
    bool is_extension_handsets_Valid() const;

    QString getExtensionNumber() const;
    void setExtensionNumber(const QString &extension_number);
    bool is_extension_number_Set() const;
    bool is_extension_number_Valid() const;

    double getLocationId() const;
    void setLocationId(const double &location_id);
    bool is_location_id_Set() const;
    bool is_location_id_Valid() const;

    OAIBasicUser getUser() const;
    void setUser(const OAIBasicUser &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    bool isVttEnabled() const;
    void setVttEnabled(const bool &vtt_enabled);
    bool is_vtt_enabled_Set() const;
    bool is_vtt_enabled_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_block_caller_id;
    bool m_block_caller_id_isSet;
    bool m_block_caller_id_isValid;

    QString m_caller_id;
    bool m_caller_id_isSet;
    bool m_caller_id_isValid;

    QList<OAIDID> m_dids;
    bool m_dids_isSet;
    bool m_dids_isValid;

    bool m_dnd_enabled;
    bool m_dnd_enabled_isSet;
    bool m_dnd_enabled_isValid;

    QList<OAILine> m_extension_handsets;
    bool m_extension_handsets_isSet;
    bool m_extension_handsets_isValid;

    QString m_extension_number;
    bool m_extension_number_isSet;
    bool m_extension_number_isValid;

    double m_location_id;
    bool m_location_id_isSet;
    bool m_location_id_isValid;

    OAIBasicUser m_user;
    bool m_user_isSet;
    bool m_user_isValid;

    bool m_vtt_enabled;
    bool m_vtt_enabled_isSet;
    bool m_vtt_enabled_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEndUserRoute)

#endif // OAIEndUserRoute_H
