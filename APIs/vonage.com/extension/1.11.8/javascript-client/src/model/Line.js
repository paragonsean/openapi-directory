/**
 * Extension API
 * The Vonage Business Cloud Extension API enables you to retrieve information about extensions.  Your application must subscribe to the Provisioning API suite to use this API. 
 *
 * The version of the OpenAPI document: 1.11.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Line model module.
 * @module model/Line
 * @version 1.11.8
 */
class Line {
    /**
     * Constructs a new <code>Line</code>.
     * @alias module:model/Line
     */
    constructor() { 
        
        Line.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Line</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Line} obj Optional instance to populate.
     * @return {module:model/Line} The populated <code>Line</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Line();

            if (data.hasOwnProperty('handset_name')) {
                obj['handset_name'] = ApiClient.convertToType(data['handset_name'], 'String');
            }
            if (data.hasOwnProperty('sip_id')) {
                obj['sip_id'] = ApiClient.convertToType(data['sip_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Line</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Line</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['handset_name'] && !(typeof data['handset_name'] === 'string' || data['handset_name'] instanceof String)) {
            throw new Error("Expected the field `handset_name` to be a primitive type in the JSON string but got " + data['handset_name']);
        }
        // ensure the json data is a string
        if (data['sip_id'] && !(typeof data['sip_id'] === 'string' || data['sip_id'] instanceof String)) {
            throw new Error("Expected the field `sip_id` to be a primitive type in the JSON string but got " + data['sip_id']);
        }

        return true;
    }


}



/**
 * Name of the handset
 * @member {String} handset_name
 */
Line.prototype['handset_name'] = undefined;

/**
 * SIP identifier of the handset
 * @member {String} sip_id
 */
Line.prototype['sip_id'] = undefined;






export default Line;

