/**
 * Extension API
 * The Vonage Business Cloud Extension API enables you to retrieve information about extensions.  Your application must subscribe to the Provisioning API suite to use this API. 
 *
 * The version of the OpenAPI document: 1.11.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BasicUser model module.
 * @module model/BasicUser
 * @version 1.11.8
 */
class BasicUser {
    /**
     * Constructs a new <code>BasicUser</code>.
     * @alias module:model/BasicUser
     */
    constructor() { 
        
        BasicUser.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BasicUser</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BasicUser} obj Optional instance to populate.
     * @return {module:model/BasicUser} The populated <code>BasicUser</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BasicUser();

            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('first_name')) {
                obj['first_name'] = ApiClient.convertToType(data['first_name'], 'String');
            }
            if (data.hasOwnProperty('last_name')) {
                obj['last_name'] = ApiClient.convertToType(data['last_name'], 'String');
            }
            if (data.hasOwnProperty('login_name')) {
                obj['login_name'] = ApiClient.convertToType(data['login_name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BasicUser</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BasicUser</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['first_name'] && !(typeof data['first_name'] === 'string' || data['first_name'] instanceof String)) {
            throw new Error("Expected the field `first_name` to be a primitive type in the JSON string but got " + data['first_name']);
        }
        // ensure the json data is a string
        if (data['last_name'] && !(typeof data['last_name'] === 'string' || data['last_name'] instanceof String)) {
            throw new Error("Expected the field `last_name` to be a primitive type in the JSON string but got " + data['last_name']);
        }
        // ensure the json data is a string
        if (data['login_name'] && !(typeof data['login_name'] === 'string' || data['login_name'] instanceof String)) {
            throw new Error("Expected the field `login_name` to be a primitive type in the JSON string but got " + data['login_name']);
        }

        return true;
    }


}



/**
 * Email address of the user
 * @member {String} email
 */
BasicUser.prototype['email'] = undefined;

/**
 * First name of the user
 * @member {String} first_name
 */
BasicUser.prototype['first_name'] = undefined;

/**
 * Last name of the user
 * @member {String} last_name
 */
BasicUser.prototype['last_name'] = undefined;

/**
 * Login name of the user
 * @member {String} login_name
 */
BasicUser.prototype['login_name'] = undefined;






export default BasicUser;

