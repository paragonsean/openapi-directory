/**
 * Extension API
 * The Vonage Business Cloud Extension API enables you to retrieve information about extensions.  Your application must subscribe to the Provisioning API suite to use this API. 
 *
 * The version of the OpenAPI document: 1.11.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BasicUser from './BasicUser';
import DID from './DID';
import Line from './Line';

/**
 * The EndUserRoute model module.
 * @module model/EndUserRoute
 * @version 1.11.8
 */
class EndUserRoute {
    /**
     * Constructs a new <code>EndUserRoute</code>.
     * @alias module:model/EndUserRoute
     */
    constructor() { 
        
        EndUserRoute.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EndUserRoute</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EndUserRoute} obj Optional instance to populate.
     * @return {module:model/EndUserRoute} The populated <code>EndUserRoute</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EndUserRoute();

            if (data.hasOwnProperty('block_caller_id')) {
                obj['block_caller_id'] = ApiClient.convertToType(data['block_caller_id'], 'Boolean');
            }
            if (data.hasOwnProperty('caller_id')) {
                obj['caller_id'] = ApiClient.convertToType(data['caller_id'], 'String');
            }
            if (data.hasOwnProperty('dids')) {
                obj['dids'] = ApiClient.convertToType(data['dids'], [DID]);
            }
            if (data.hasOwnProperty('dnd_enabled')) {
                obj['dnd_enabled'] = ApiClient.convertToType(data['dnd_enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('extension_handsets')) {
                obj['extension_handsets'] = ApiClient.convertToType(data['extension_handsets'], [Line]);
            }
            if (data.hasOwnProperty('extension_number')) {
                obj['extension_number'] = ApiClient.convertToType(data['extension_number'], 'String');
            }
            if (data.hasOwnProperty('location_id')) {
                obj['location_id'] = ApiClient.convertToType(data['location_id'], 'Number');
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = BasicUser.constructFromObject(data['user']);
            }
            if (data.hasOwnProperty('vtt_enabled')) {
                obj['vtt_enabled'] = ApiClient.convertToType(data['vtt_enabled'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EndUserRoute</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EndUserRoute</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['caller_id'] && !(typeof data['caller_id'] === 'string' || data['caller_id'] instanceof String)) {
            throw new Error("Expected the field `caller_id` to be a primitive type in the JSON string but got " + data['caller_id']);
        }
        if (data['dids']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['dids'])) {
                throw new Error("Expected the field `dids` to be an array in the JSON data but got " + data['dids']);
            }
            // validate the optional field `dids` (array)
            for (const item of data['dids']) {
                DID.validateJSON(item);
            };
        }
        if (data['extension_handsets']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['extension_handsets'])) {
                throw new Error("Expected the field `extension_handsets` to be an array in the JSON data but got " + data['extension_handsets']);
            }
            // validate the optional field `extension_handsets` (array)
            for (const item of data['extension_handsets']) {
                Line.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['extension_number'] && !(typeof data['extension_number'] === 'string' || data['extension_number'] instanceof String)) {
            throw new Error("Expected the field `extension_number` to be a primitive type in the JSON string but got " + data['extension_number']);
        }
        // validate the optional field `user`
        if (data['user']) { // data not null
          BasicUser.validateJSON(data['user']);
        }

        return true;
    }


}



/**
 * Block Caller ID status of the extension
 * @member {Boolean} block_caller_id
 */
EndUserRoute.prototype['block_caller_id'] = undefined;

/**
 * Caller ID of the extension
 * @member {String} caller_id
 */
EndUserRoute.prototype['caller_id'] = undefined;

/**
 * Collection of phone numbers assigned to the extension
 * @member {Array.<module:model/DID>} dids
 */
EndUserRoute.prototype['dids'] = undefined;

/**
 * Do Not Disturb status of the extension
 * @member {Boolean} dnd_enabled
 */
EndUserRoute.prototype['dnd_enabled'] = undefined;

/**
 * Collection of handsets assigned to the extension
 * @member {Array.<module:model/Line>} extension_handsets
 */
EndUserRoute.prototype['extension_handsets'] = undefined;

/**
 * Extension number
 * @member {String} extension_number
 */
EndUserRoute.prototype['extension_number'] = undefined;

/**
 * Unique identifier of the assigned location
 * @member {Number} location_id
 */
EndUserRoute.prototype['location_id'] = undefined;

/**
 * @member {module:model/BasicUser} user
 */
EndUserRoute.prototype['user'] = undefined;

/**
 * Voicemail transcription status of the location
 * @member {Boolean} vtt_enabled
 */
EndUserRoute.prototype['vtt_enabled'] = undefined;






export default EndUserRoute;

