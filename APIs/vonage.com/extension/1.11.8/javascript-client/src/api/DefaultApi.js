/**
 * Extension API
 * The Vonage Business Cloud Extension API enables you to retrieve information about extensions.  Your application must subscribe to the Provisioning API suite to use this API. 
 *
 * The version of the OpenAPI document: 1.11.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import EndUserRouteHalResponse from '../model/EndUserRouteHalResponse';
import ErrorResponse from '../model/ErrorResponse';
import ValidationErrorsResponse from '../model/ValidationErrorsResponse';

/**
* Default service.
* @module api/DefaultApi
* @version 1.11.8
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the extensionCtrlGetAccountExtensionByID operation.
     * @callback module:api/DefaultApi~extensionCtrlGetAccountExtensionByIDCallback
     * @param {String} error Error message, if any.
     * @param {module:model/EndUserRouteHalResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get extension data by account ID and extension number
     * @param {String} accountId The Vonage Business Cloud account ID
     * @param {Number} extensionNumber The extension number
     * @param {module:api/DefaultApi~extensionCtrlGetAccountExtensionByIDCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/EndUserRouteHalResponse}
     */
    extensionCtrlGetAccountExtensionByID(accountId, extensionNumber, callback) {
      let postBody = null;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling extensionCtrlGetAccountExtensionByID");
      }
      // verify the required parameter 'extensionNumber' is set
      if (extensionNumber === undefined || extensionNumber === null) {
        throw new Error("Missing the required parameter 'extensionNumber' when calling extensionCtrlGetAccountExtensionByID");
      }

      let pathParams = {
        'account_id': accountId,
        'extension_number': extensionNumber
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = EndUserRouteHalResponse;
      return this.apiClient.callApi(
        '/api/accounts/{account_id}/extensions/{extension_number}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extensionCtrlGetAccountExtensions operation.
     * @callback module:api/DefaultApi~extensionCtrlGetAccountExtensionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/EndUserRouteHalResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get account extensions data by account ID
     * @param {String} accountId The Vonage Business Cloud account ID
     * @param {Object} opts Optional parameters
     * @param {Number} [pageSize] Number of records per page
     * @param {Number} [page] Current page number
     * @param {Number} [locationId] Filter by location id
     * @param {String} [phoneNumber] Filter by phone number
     * @param {String} [loginName] Filter by login name
     * @param {String} [email] Filter by email address
     * @param {module:api/DefaultApi~extensionCtrlGetAccountExtensionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/EndUserRouteHalResponse}
     */
    extensionCtrlGetAccountExtensions(accountId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling extensionCtrlGetAccountExtensions");
      }

      let pathParams = {
        'account_id': accountId
      };
      let queryParams = {
        'page_size': opts['pageSize'],
        'page': opts['page'],
        'location_id': opts['locationId'],
        'phone_number': opts['phoneNumber'],
        'login_name': opts['loginName'],
        'email': opts['email']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = EndUserRouteHalResponse;
      return this.apiClient.callApi(
        '/api/accounts/{account_id}/extensions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
