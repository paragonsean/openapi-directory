/*
 * Vonage Integration Suite
 * The Vonage Integration Suite API enables call control and webhooks for call events.  Your application must subscribe to the VonageIntegrationSuite API suite to use this API. 
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: gunifydevops@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Call;
import org.openapitools.client.model.CallCreate;
import org.openapitools.client.model.CallTransfer;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.EventsCount;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CallsApi
 */
@Disabled
public class CallsApiTest {

    private final CallsApi api = new CallsApi();

    /**
     * Answer call (On supported devices)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void callAnswerTest() throws ApiException {
        String id = null;
        Call response = api.callAnswer(id);
        // TODO: test validations
    }

    /**
     * Put call on hold
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void callHoldTest() throws ApiException {
        String id = null;
        Call response = api.callHold(id);
        // TODO: test validations
    }

    /**
     * Transfer call
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void callTransferTest() throws ApiException {
        String id = null;
        CallTransfer callTransfer = null;
        Call response = api.callTransfer(id, callTransfer);
        // TODO: test validations
    }

    /**
     * Unhold
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void callUnoldTest() throws ApiException {
        String id = null;
        Call response = api.callUnold(id);
        // TODO: test validations
    }

    /**
     * Send call to voicemail
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void callVMTransferTest() throws ApiException {
        String id = null;
        Call response = api.callVMTransfer(id);
        // TODO: test validations
    }

    /**
     * Place a call
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createCallTest() throws ApiException {
        CallCreate callCreate = null;
        List<Call> response = api.createCall(callCreate);
        // TODO: test validations
    }

    /**
     * End a call
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void destroyCallTest() throws ApiException {
        String id = null;
        List<Call> response = api.destroyCall(id);
        // TODO: test validations
    }

    /**
     * Get calls count
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCallsCountTest() throws ApiException {
        Integer fromDate = null;
        Integer toDate = null;
        String direction = null;
        String states = null;
        EventsCount response = api.getCallsCount(fromDate, toDate, direction, states);
        // TODO: test validations
    }

    /**
     * Get a call
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRolesTest() throws ApiException {
        String id = null;
        List<Call> response = api.getRoles(id);
        // TODO: test validations
    }

    /**
     * List active calls
     *
     * Lists currently active calls
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listCallsTest() throws ApiException {
        Integer fromDate = null;
        Integer toDate = null;
        String direction = null;
        String states = null;
        Long offset = null;
        Integer size = null;
        String order = null;
        String sort = null;
        List<Call> response = api.listCalls(fromDate, toDate, direction, states, offset, size, order, sort);
        // TODO: test validations
    }

}
