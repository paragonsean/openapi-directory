/**
 * Vonage Integration Suite
 * The Vonage Integration Suite API enables call control and webhooks for call events.  Your application must subscribe to the VonageIntegrationSuite API suite to use this API. 
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: gunifydevops@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUser.h
 *
 * 
 */

#ifndef OAIUser_H
#define OAIUser_H

#include <QJsonObject>

#include "OAIUser_roles_inner.h"
#include "OAIUser_ucis_inner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUser_roles_inner;
class OAIUser_ucis_inner;

class OAIUser : public OAIObject {
public:
    OAIUser();
    OAIUser(QString json);
    ~OAIUser() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAccountId() const;
    void setAccountId(const qint32 &account_id);
    bool is_account_id_Set() const;
    bool is_account_id_Valid() const;

    QString getAcountLabel() const;
    void setAcountLabel(const QString &acount_label);
    bool is_acount_label_Set() const;
    bool is_acount_label_Valid() const;

    QString getContactNumber() const;
    void setContactNumber(const QString &contact_number);
    bool is_contact_number_Set() const;
    bool is_contact_number_Valid() const;

    QString getEmailAddress() const;
    void setEmailAddress(const QString &email_address);
    bool is_email_address_Set() const;
    bool is_email_address_Valid() const;

    QString getFirstName() const;
    void setFirstName(const QString &first_name);
    bool is_first_name_Set() const;
    bool is_first_name_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getLastName() const;
    void setLastName(const QString &last_name);
    bool is_last_name_Set() const;
    bool is_last_name_Valid() const;

    QList<OAIUser_roles_inner> getRoles() const;
    void setRoles(const QList<OAIUser_roles_inner> &roles);
    bool is_roles_Set() const;
    bool is_roles_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QList<OAIUser_ucis_inner> getUcis() const;
    void setUcis(const QList<OAIUser_ucis_inner> &ucis);
    bool is_ucis_Set() const;
    bool is_ucis_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_account_id;
    bool m_account_id_isSet;
    bool m_account_id_isValid;

    QString m_acount_label;
    bool m_acount_label_isSet;
    bool m_acount_label_isValid;

    QString m_contact_number;
    bool m_contact_number_isSet;
    bool m_contact_number_isValid;

    QString m_email_address;
    bool m_email_address_isSet;
    bool m_email_address_isValid;

    QString m_first_name;
    bool m_first_name_isSet;
    bool m_first_name_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_last_name;
    bool m_last_name_isSet;
    bool m_last_name_isValid;

    QList<OAIUser_roles_inner> m_roles;
    bool m_roles_isSet;
    bool m_roles_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QList<OAIUser_ucis_inner> m_ucis;
    bool m_ucis_isSet;
    bool m_ucis_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUser)

#endif // OAIUser_H
