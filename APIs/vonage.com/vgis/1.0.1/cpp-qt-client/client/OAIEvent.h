/**
 * Vonage Integration Suite
 * The Vonage Integration Suite API enables call control and webhooks for call events.  Your application must subscribe to the VonageIntegrationSuite API suite to use this API. 
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: gunifydevops@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEvent.h
 *
 * 
 */

#ifndef OAIEvent_H
#define OAIEvent_H

#include <QJsonObject>

#include <QDate>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEvent : public OAIObject {
public:
    OAIEvent();
    OAIEvent(QString json);
    ~OAIEvent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getAccountId() const;
    void setAccountId(const qint64 &account_id);
    bool is_account_id_Set() const;
    bool is_account_id_Valid() const;

    QDate getAnswerTime() const;
    void setAnswerTime(const QDate &answer_time);
    bool is_answer_time_Set() const;
    bool is_answer_time_Valid() const;

    QString getCallerId() const;
    void setCallerId(const QString &caller_id);
    bool is_caller_id_Set() const;
    bool is_caller_id_Valid() const;

    QString getDirection() const;
    void setDirection(const QString &direction);
    bool is_direction_Set() const;
    bool is_direction_Valid() const;

    qint64 getDuration() const;
    void setDuration(const qint64 &duration);
    bool is_duration_Set() const;
    bool is_duration_Valid() const;

    QDate getEndTime() const;
    void setEndTime(const QDate &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    QString getExternalId() const;
    void setExternalId(const QString &external_id);
    bool is_external_id_Set() const;
    bool is_external_id_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getPhoneNumber() const;
    void setPhoneNumber(const QString &phone_number);
    bool is_phone_number_Set() const;
    bool is_phone_number_Valid() const;

    QString getSmsData() const;
    void setSmsData(const QString &sms_data);
    bool is_sms_data_Set() const;
    bool is_sms_data_Valid() const;

    QDate getStartTime() const;
    void setStartTime(const QDate &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    qint64 getUciId() const;
    void setUciId(const qint64 &uci_id);
    bool is_uci_id_Set() const;
    bool is_uci_id_Valid() const;

    qint64 getUserId() const;
    void setUserId(const qint64 &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_account_id;
    bool m_account_id_isSet;
    bool m_account_id_isValid;

    QDate m_answer_time;
    bool m_answer_time_isSet;
    bool m_answer_time_isValid;

    QString m_caller_id;
    bool m_caller_id_isSet;
    bool m_caller_id_isValid;

    QString m_direction;
    bool m_direction_isSet;
    bool m_direction_isValid;

    qint64 m_duration;
    bool m_duration_isSet;
    bool m_duration_isValid;

    QDate m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    QString m_external_id;
    bool m_external_id_isSet;
    bool m_external_id_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_phone_number;
    bool m_phone_number_isSet;
    bool m_phone_number_isValid;

    QString m_sms_data;
    bool m_sms_data_isSet;
    bool m_sms_data_isValid;

    QDate m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    qint64 m_uci_id;
    bool m_uci_id_isSet;
    bool m_uci_id_isValid;

    qint64 m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEvent)

#endif // OAIEvent_H
