/**
 * Vonage Integration Suite
 * The Vonage Integration Suite API enables call control and webhooks for call events.  Your application must subscribe to the VonageIntegrationSuite API suite to use this API. 
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: gunifydevops@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWebhookCreate.h
 *
 * 
 */

#ifndef OAIWebhookCreate_H
#define OAIWebhookCreate_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIWebhookCreate : public OAIObject {
public:
    OAIWebhookCreate();
    OAIWebhookCreate(QString json);
    ~OAIWebhookCreate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getEvents() const;
    void setEvents(const QList<QString> &events);
    bool is_events_Set() const;
    bool is_events_Valid() const;

    QString getMetadataPolicy() const;
    void setMetadataPolicy(const QString &metadata_policy);
    bool is_metadata_policy_Set() const;
    bool is_metadata_policy_Valid() const;

    QString getSigningAlgo() const;
    void setSigningAlgo(const QString &signing_algo);
    bool is_signing_algo_Set() const;
    bool is_signing_algo_Valid() const;

    QString getSigningKey() const;
    void setSigningKey(const QString &signing_key);
    bool is_signing_key_Set() const;
    bool is_signing_key_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_events;
    bool m_events_isSet;
    bool m_events_isValid;

    QString m_metadata_policy;
    bool m_metadata_policy_isSet;
    bool m_metadata_policy_isValid;

    QString m_signing_algo;
    bool m_signing_algo_isSet;
    bool m_signing_algo_isValid;

    QString m_signing_key;
    bool m_signing_key_isSet;
    bool m_signing_key_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWebhookCreate)

#endif // OAIWebhookCreate_H
