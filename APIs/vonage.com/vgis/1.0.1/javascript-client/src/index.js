/**
 * Vonage Integration Suite
 * The Vonage Integration Suite API enables call control and webhooks for call events.  Your application must subscribe to the VonageIntegrationSuite API suite to use this API. 
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: gunifydevops@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Account from './model/Account';
import AccountUcisInner from './model/AccountUcisInner';
import AccountUcisInnerHealth from './model/AccountUcisInnerHealth';
import Call from './model/Call';
import CallCreate from './model/CallCreate';
import CallTransfer from './model/CallTransfer';
import Error from './model/Error';
import ErrorResponse from './model/ErrorResponse';
import Event from './model/Event';
import EventsCount from './model/EventsCount';
import User from './model/User';
import UserRolesInner from './model/UserRolesInner';
import UserUcisInner from './model/UserUcisInner';
import Webhook from './model/Webhook';
import WebhookCreate from './model/WebhookCreate';
import WebhookStatistics from './model/WebhookStatistics';
import AccountsApi from './api/AccountsApi';
import CallsApi from './api/CallsApi';
import EventsApi from './api/EventsApi';
import UsersApi from './api/UsersApi';
import WebhooksApi from './api/WebhooksApi';


/**
* The Vonage Integration Suite API enables call control and webhooks for call events.  Your application must subscribe to the VonageIntegrationSuite API suite to use this API. .<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var VonageIntegrationSuite = require('index'); // See note below*.
* var xxxSvc = new VonageIntegrationSuite.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new VonageIntegrationSuite.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new VonageIntegrationSuite.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new VonageIntegrationSuite.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Account model constructor.
     * @property {module:model/Account}
     */
    Account,

    /**
     * The AccountUcisInner model constructor.
     * @property {module:model/AccountUcisInner}
     */
    AccountUcisInner,

    /**
     * The AccountUcisInnerHealth model constructor.
     * @property {module:model/AccountUcisInnerHealth}
     */
    AccountUcisInnerHealth,

    /**
     * The Call model constructor.
     * @property {module:model/Call}
     */
    Call,

    /**
     * The CallCreate model constructor.
     * @property {module:model/CallCreate}
     */
    CallCreate,

    /**
     * The CallTransfer model constructor.
     * @property {module:model/CallTransfer}
     */
    CallTransfer,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse,

    /**
     * The Event model constructor.
     * @property {module:model/Event}
     */
    Event,

    /**
     * The EventsCount model constructor.
     * @property {module:model/EventsCount}
     */
    EventsCount,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
     * The UserRolesInner model constructor.
     * @property {module:model/UserRolesInner}
     */
    UserRolesInner,

    /**
     * The UserUcisInner model constructor.
     * @property {module:model/UserUcisInner}
     */
    UserUcisInner,

    /**
     * The Webhook model constructor.
     * @property {module:model/Webhook}
     */
    Webhook,

    /**
     * The WebhookCreate model constructor.
     * @property {module:model/WebhookCreate}
     */
    WebhookCreate,

    /**
     * The WebhookStatistics model constructor.
     * @property {module:model/WebhookStatistics}
     */
    WebhookStatistics,

    /**
    * The AccountsApi service constructor.
    * @property {module:api/AccountsApi}
    */
    AccountsApi,

    /**
    * The CallsApi service constructor.
    * @property {module:api/CallsApi}
    */
    CallsApi,

    /**
    * The EventsApi service constructor.
    * @property {module:api/EventsApi}
    */
    EventsApi,

    /**
    * The UsersApi service constructor.
    * @property {module:api/UsersApi}
    */
    UsersApi,

    /**
    * The WebhooksApi service constructor.
    * @property {module:api/WebhooksApi}
    */
    WebhooksApi
};
