/**
 * Vonage Integration Suite
 * The Vonage Integration Suite API enables call control and webhooks for call events.  Your application must subscribe to the VonageIntegrationSuite API suite to use this API. 
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: gunifydevops@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The WebhookCreate model module.
 * @module model/WebhookCreate
 * @version 1.0.1
 */
class WebhookCreate {
    /**
     * Constructs a new <code>WebhookCreate</code>.
     * @alias module:model/WebhookCreate
     */
    constructor() { 
        
        WebhookCreate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WebhookCreate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WebhookCreate} obj Optional instance to populate.
     * @return {module:model/WebhookCreate} The populated <code>WebhookCreate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WebhookCreate();

            if (data.hasOwnProperty('events')) {
                obj['events'] = ApiClient.convertToType(data['events'], ['String']);
            }
            if (data.hasOwnProperty('metadataPolicy')) {
                obj['metadataPolicy'] = ApiClient.convertToType(data['metadataPolicy'], 'String');
            }
            if (data.hasOwnProperty('signingAlgo')) {
                obj['signingAlgo'] = ApiClient.convertToType(data['signingAlgo'], 'String');
            }
            if (data.hasOwnProperty('signingKey')) {
                obj['signingKey'] = ApiClient.convertToType(data['signingKey'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WebhookCreate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WebhookCreate</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['events'])) {
            throw new Error("Expected the field `events` to be an array in the JSON data but got " + data['events']);
        }
        // ensure the json data is a string
        if (data['metadataPolicy'] && !(typeof data['metadataPolicy'] === 'string' || data['metadataPolicy'] instanceof String)) {
            throw new Error("Expected the field `metadataPolicy` to be a primitive type in the JSON string but got " + data['metadataPolicy']);
        }
        // ensure the json data is a string
        if (data['signingAlgo'] && !(typeof data['signingAlgo'] === 'string' || data['signingAlgo'] instanceof String)) {
            throw new Error("Expected the field `signingAlgo` to be a primitive type in the JSON string but got " + data['signingAlgo']);
        }
        // ensure the json data is a string
        if (data['signingKey'] && !(typeof data['signingKey'] === 'string' || data['signingKey'] instanceof String)) {
            throw new Error("Expected the field `signingKey` to be a primitive type in the JSON string but got " + data['signingKey']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * Events to subscribe to the webhook
 * @member {Array.<module:model/WebhookCreate.EventsEnum>} events
 */
WebhookCreate.prototype['events'] = undefined;

/**
 * Metadata policy for the webhook
 * @member {module:model/WebhookCreate.MetadataPolicyEnum} metadataPolicy
 */
WebhookCreate.prototype['metadataPolicy'] = undefined;

/**
 * Signing algorithm for the webhook
 * @member {module:model/WebhookCreate.SigningAlgoEnum} signingAlgo
 */
WebhookCreate.prototype['signingAlgo'] = undefined;

/**
 * Signing key for the webhook
 * @member {String} signingKey
 */
WebhookCreate.prototype['signingKey'] = undefined;

/**
 * Destination URL for events
 * @member {String} url
 */
WebhookCreate.prototype['url'] = undefined;





/**
 * Allowed values for the <code>events</code> property.
 * @enum {String}
 * @readonly
 */
WebhookCreate['EventsEnum'] = {

    /**
     * value: "CALL"
     * @const
     */
    "CALL": "CALL"
};


/**
 * Allowed values for the <code>metadataPolicy</code> property.
 * @enum {String}
 * @readonly
 */
WebhookCreate['MetadataPolicyEnum'] = {

    /**
     * value: "NONE"
     * @const
     */
    "NONE": "NONE",

    /**
     * value: "HEADER"
     * @const
     */
    "HEADER": "HEADER",

    /**
     * value: "BODY"
     * @const
     */
    "BODY": "BODY"
};


/**
 * Allowed values for the <code>signingAlgo</code> property.
 * @enum {String}
 * @readonly
 */
WebhookCreate['SigningAlgoEnum'] = {

    /**
     * value: "HMAC_SHA256"
     * @const
     */
    "HMAC_SHA256": "HMAC_SHA256"
};



export default WebhookCreate;

