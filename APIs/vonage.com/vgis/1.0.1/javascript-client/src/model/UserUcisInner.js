/**
 * Vonage Integration Suite
 * The Vonage Integration Suite API enables call control and webhooks for call events.  Your application must subscribe to the VonageIntegrationSuite API suite to use this API. 
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: gunifydevops@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AccountUcisInnerHealth from './AccountUcisInnerHealth';

/**
 * The UserUcisInner model module.
 * @module model/UserUcisInner
 * @version 1.0.1
 */
class UserUcisInner {
    /**
     * Constructs a new <code>UserUcisInner</code>.
     * @alias module:model/UserUcisInner
     */
    constructor() { 
        
        UserUcisInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['type'] = 'USER_UCI';
    }

    /**
     * Constructs a <code>UserUcisInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserUcisInner} obj Optional instance to populate.
     * @return {module:model/UserUcisInner} The populated <code>UserUcisInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserUcisInner();

            if (data.hasOwnProperty('health')) {
                obj['health'] = AccountUcisInnerHealth.constructFromObject(data['health']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('ucpLabel')) {
                obj['ucpLabel'] = ApiClient.convertToType(data['ucpLabel'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserUcisInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserUcisInner</code>.
     */
    static validateJSON(data) {
        // validate the optional field `health`
        if (data['health']) { // data not null
          AccountUcisInnerHealth.validateJSON(data['health']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['ucpLabel'] && !(typeof data['ucpLabel'] === 'string' || data['ucpLabel'] instanceof String)) {
            throw new Error("Expected the field `ucpLabel` to be a primitive type in the JSON string but got " + data['ucpLabel']);
        }

        return true;
    }


}



/**
 * @member {module:model/AccountUcisInnerHealth} health
 */
UserUcisInner.prototype['health'] = undefined;

/**
 * @member {Number} id
 */
UserUcisInner.prototype['id'] = undefined;

/**
 * @member {String} type
 * @default 'USER_UCI'
 */
UserUcisInner.prototype['type'] = 'USER_UCI';

/**
 * @member {String} ucpLabel
 */
UserUcisInner.prototype['ucpLabel'] = undefined;






export default UserUcisInner;

