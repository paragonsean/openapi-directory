/**
 * Vonage Integration Suite
 * The Vonage Integration Suite API enables call control and webhooks for call events.  Your application must subscribe to the VonageIntegrationSuite API suite to use this API. 
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: gunifydevops@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.VonageIntegrationSuite);
  }
}(this, function(expect, VonageIntegrationSuite) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new VonageIntegrationSuite.Call();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Call', function() {
    it('should create an instance of Call', function() {
      // uncomment below and update the code to test Call
      //var instance = new VonageIntegrationSuite.Call();
      //expect(instance).to.be.a(VonageIntegrationSuite.Call);
    });

    it('should have the property accountId (base name: "accountId")', function() {
      // uncomment below and update the code to test the property accountId
      //var instance = new VonageIntegrationSuite.Call();
      //expect(instance).to.be();
    });

    it('should have the property answerTime (base name: "answerTime")', function() {
      // uncomment below and update the code to test the property answerTime
      //var instance = new VonageIntegrationSuite.Call();
      //expect(instance).to.be();
    });

    it('should have the property callerId (base name: "callerId")', function() {
      // uncomment below and update the code to test the property callerId
      //var instance = new VonageIntegrationSuite.Call();
      //expect(instance).to.be();
    });

    it('should have the property direction (base name: "direction")', function() {
      // uncomment below and update the code to test the property direction
      //var instance = new VonageIntegrationSuite.Call();
      //expect(instance).to.be();
    });

    it('should have the property duration (base name: "duration")', function() {
      // uncomment below and update the code to test the property duration
      //var instance = new VonageIntegrationSuite.Call();
      //expect(instance).to.be();
    });

    it('should have the property endTime (base name: "endTime")', function() {
      // uncomment below and update the code to test the property endTime
      //var instance = new VonageIntegrationSuite.Call();
      //expect(instance).to.be();
    });

    it('should have the property externalId (base name: "externalId")', function() {
      // uncomment below and update the code to test the property externalId
      //var instance = new VonageIntegrationSuite.Call();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new VonageIntegrationSuite.Call();
      //expect(instance).to.be();
    });

    it('should have the property phoneNumber (base name: "phoneNumber")', function() {
      // uncomment below and update the code to test the property phoneNumber
      //var instance = new VonageIntegrationSuite.Call();
      //expect(instance).to.be();
    });

    it('should have the property startTime (base name: "startTime")', function() {
      // uncomment below and update the code to test the property startTime
      //var instance = new VonageIntegrationSuite.Call();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new VonageIntegrationSuite.Call();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new VonageIntegrationSuite.Call();
      //expect(instance).to.be();
    });

    it('should have the property uciId (base name: "uciId")', function() {
      // uncomment below and update the code to test the property uciId
      //var instance = new VonageIntegrationSuite.Call();
      //expect(instance).to.be();
    });

    it('should have the property userId (base name: "userId")', function() {
      // uncomment below and update the code to test the property userId
      //var instance = new VonageIntegrationSuite.Call();
      //expect(instance).to.be();
    });

  });

}));
