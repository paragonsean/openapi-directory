/**
 * Account API
 * The Vonage Business Cloud Account API enables you to retrieve information about accounts.  Your application must subscribe to the Provisioning API suite to use this API. 
 *
 * The version of the OpenAPI document: 1.11.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AccountHalResponse from '../model/AccountHalResponse';
import LocationHalResponse from '../model/LocationHalResponse';
import LocationsHalResponse from '../model/LocationsHalResponse';

/**
* Default service.
* @module api/DefaultApi
* @version 1.11.8
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the accountCtrlGetAccountServicesByAccountID operation.
     * @callback module:api/DefaultApi~accountCtrlGetAccountServicesByAccountIDCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AccountHalResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get account data by ID
     * @param {Number} accountId The Vonage Business Cloud account ID
     * @param {module:api/DefaultApi~accountCtrlGetAccountServicesByAccountIDCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AccountHalResponse}
     */
    accountCtrlGetAccountServicesByAccountID(accountId, callback) {
      let postBody = null;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling accountCtrlGetAccountServicesByAccountID");
      }

      let pathParams = {
        'account_id': accountId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AccountHalResponse;
      return this.apiClient.callApi(
        '/api/accounts/{account_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the accountCtrlGetLocationByID operation.
     * @callback module:api/DefaultApi~accountCtrlGetLocationByIDCallback
     * @param {String} error Error message, if any.
     * @param {module:model/LocationHalResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get location data by account ID and location ID
     * @param {Number} accountId The Vonage Business Cloud account ID
     * @param {Number} locationId The Vonage Business Cloud location ID
     * @param {module:api/DefaultApi~accountCtrlGetLocationByIDCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/LocationHalResponse}
     */
    accountCtrlGetLocationByID(accountId, locationId, callback) {
      let postBody = null;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling accountCtrlGetLocationByID");
      }
      // verify the required parameter 'locationId' is set
      if (locationId === undefined || locationId === null) {
        throw new Error("Missing the required parameter 'locationId' when calling accountCtrlGetLocationByID");
      }

      let pathParams = {
        'account_id': accountId,
        'location_id': locationId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = LocationHalResponse;
      return this.apiClient.callApi(
        '/api/accounts/{account_id}/locations/{location_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the accountCtrlGetLocationsByAccountID operation.
     * @callback module:api/DefaultApi~accountCtrlGetLocationsByAccountIDCallback
     * @param {String} error Error message, if any.
     * @param {module:model/LocationsHalResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get account locations data by account ID
     * @param {Number} accountId The Vonage Business Cloud account ID
     * @param {module:api/DefaultApi~accountCtrlGetLocationsByAccountIDCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/LocationsHalResponse}
     */
    accountCtrlGetLocationsByAccountID(accountId, callback) {
      let postBody = null;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling accountCtrlGetLocationsByAccountID");
      }

      let pathParams = {
        'account_id': accountId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = LocationsHalResponse;
      return this.apiClient.callApi(
        '/api/accounts/{account_id}/locations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
