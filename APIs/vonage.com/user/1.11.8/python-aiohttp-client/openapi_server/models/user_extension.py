# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.did import DID
from openapi_server import util


class UserExtension(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dids: List[DID]=None, extension_number: str=None):
        """UserExtension - a model defined in OpenAPI

        :param dids: The dids of this UserExtension.
        :param extension_number: The extension_number of this UserExtension.
        """
        self.openapi_types = {
            'dids': List[DID],
            'extension_number': str
        }

        self.attribute_map = {
            'dids': 'dids',
            'extension_number': 'extension_number'
        }

        self._dids = dids
        self._extension_number = extension_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserExtension':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UserExtension of this UserExtension.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dids(self):
        """Gets the dids of this UserExtension.

        Collection of phone numbers assigned to the extension

        :return: The dids of this UserExtension.
        :rtype: List[DID]
        """
        return self._dids

    @dids.setter
    def dids(self, dids):
        """Sets the dids of this UserExtension.

        Collection of phone numbers assigned to the extension

        :param dids: The dids of this UserExtension.
        :type dids: List[DID]
        """

        self._dids = dids

    @property
    def extension_number(self):
        """Gets the extension_number of this UserExtension.

        Extension number

        :return: The extension_number of this UserExtension.
        :rtype: str
        """
        return self._extension_number

    @extension_number.setter
    def extension_number(self, extension_number):
        """Sets the extension_number of this UserExtension.

        Extension number

        :param extension_number: The extension_number of this UserExtension.
        :type extension_number: str
        """

        self._extension_number = extension_number
