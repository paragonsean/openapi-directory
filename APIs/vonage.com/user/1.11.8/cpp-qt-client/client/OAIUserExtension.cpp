/**
 * User API
 * The Vonage Business Cloud User API enables you to retrieve information about users.  Your application must subscribe to the Provisioning API suite to use this API. 
 *
 * The version of the OpenAPI document: 1.11.8
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUserExtension.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUserExtension::OAIUserExtension(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUserExtension::OAIUserExtension() {
    this->initializeModel();
}

OAIUserExtension::~OAIUserExtension() {}

void OAIUserExtension::initializeModel() {

    m_dids_isSet = false;
    m_dids_isValid = false;

    m_extension_number_isSet = false;
    m_extension_number_isValid = false;
}

void OAIUserExtension::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUserExtension::fromJsonObject(QJsonObject json) {

    m_dids_isValid = ::OpenAPI::fromJsonValue(m_dids, json[QString("dids")]);
    m_dids_isSet = !json[QString("dids")].isNull() && m_dids_isValid;

    m_extension_number_isValid = ::OpenAPI::fromJsonValue(m_extension_number, json[QString("extension_number")]);
    m_extension_number_isSet = !json[QString("extension_number")].isNull() && m_extension_number_isValid;
}

QString OAIUserExtension::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUserExtension::asJsonObject() const {
    QJsonObject obj;
    if (m_dids.size() > 0) {
        obj.insert(QString("dids"), ::OpenAPI::toJsonValue(m_dids));
    }
    if (m_extension_number_isSet) {
        obj.insert(QString("extension_number"), ::OpenAPI::toJsonValue(m_extension_number));
    }
    return obj;
}

QList<OAIDID> OAIUserExtension::getDids() const {
    return m_dids;
}
void OAIUserExtension::setDids(const QList<OAIDID> &dids) {
    m_dids = dids;
    m_dids_isSet = true;
}

bool OAIUserExtension::is_dids_Set() const{
    return m_dids_isSet;
}

bool OAIUserExtension::is_dids_Valid() const{
    return m_dids_isValid;
}

QString OAIUserExtension::getExtensionNumber() const {
    return m_extension_number;
}
void OAIUserExtension::setExtensionNumber(const QString &extension_number) {
    m_extension_number = extension_number;
    m_extension_number_isSet = true;
}

bool OAIUserExtension::is_extension_number_Set() const{
    return m_extension_number_isSet;
}

bool OAIUserExtension::is_extension_number_Valid() const{
    return m_extension_number_isValid;
}

bool OAIUserExtension::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_extension_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUserExtension::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
