/**
 * User API
 * The Vonage Business Cloud User API enables you to retrieve information about users.  Your application must subscribe to the Provisioning API suite to use this API. 
 *
 * The version of the OpenAPI document: 1.11.8
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUser.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUser::OAIUser(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUser::OAIUser() {
    this->initializeModel();
}

OAIUser::~OAIUser() {}

void OAIUser::initializeModel() {

    m_contact_numbers_isSet = false;
    m_contact_numbers_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_extensions_isSet = false;
    m_extensions_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_login_name_isSet = false;
    m_login_name_isValid = false;
}

void OAIUser::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUser::fromJsonObject(QJsonObject json) {

    m_contact_numbers_isValid = ::OpenAPI::fromJsonValue(m_contact_numbers, json[QString("contact_numbers")]);
    m_contact_numbers_isSet = !json[QString("contact_numbers")].isNull() && m_contact_numbers_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_extensions_isValid = ::OpenAPI::fromJsonValue(m_extensions, json[QString("extensions")]);
    m_extensions_isSet = !json[QString("extensions")].isNull() && m_extensions_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("first_name")]);
    m_first_name_isSet = !json[QString("first_name")].isNull() && m_first_name_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("last_name")]);
    m_last_name_isSet = !json[QString("last_name")].isNull() && m_last_name_isValid;

    m_login_name_isValid = ::OpenAPI::fromJsonValue(m_login_name, json[QString("login_name")]);
    m_login_name_isSet = !json[QString("login_name")].isNull() && m_login_name_isValid;
}

QString OAIUser::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUser::asJsonObject() const {
    QJsonObject obj;
    if (m_contact_numbers.size() > 0) {
        obj.insert(QString("contact_numbers"), ::OpenAPI::toJsonValue(m_contact_numbers));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_extensions.size() > 0) {
        obj.insert(QString("extensions"), ::OpenAPI::toJsonValue(m_extensions));
    }
    if (m_first_name_isSet) {
        obj.insert(QString("first_name"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("last_name"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_login_name_isSet) {
        obj.insert(QString("login_name"), ::OpenAPI::toJsonValue(m_login_name));
    }
    return obj;
}

QList<OAIContact> OAIUser::getContactNumbers() const {
    return m_contact_numbers;
}
void OAIUser::setContactNumbers(const QList<OAIContact> &contact_numbers) {
    m_contact_numbers = contact_numbers;
    m_contact_numbers_isSet = true;
}

bool OAIUser::is_contact_numbers_Set() const{
    return m_contact_numbers_isSet;
}

bool OAIUser::is_contact_numbers_Valid() const{
    return m_contact_numbers_isValid;
}

QString OAIUser::getEmail() const {
    return m_email;
}
void OAIUser::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIUser::is_email_Set() const{
    return m_email_isSet;
}

bool OAIUser::is_email_Valid() const{
    return m_email_isValid;
}

QList<OAIUserExtension> OAIUser::getExtensions() const {
    return m_extensions;
}
void OAIUser::setExtensions(const QList<OAIUserExtension> &extensions) {
    m_extensions = extensions;
    m_extensions_isSet = true;
}

bool OAIUser::is_extensions_Set() const{
    return m_extensions_isSet;
}

bool OAIUser::is_extensions_Valid() const{
    return m_extensions_isValid;
}

QString OAIUser::getFirstName() const {
    return m_first_name;
}
void OAIUser::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAIUser::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAIUser::is_first_name_Valid() const{
    return m_first_name_isValid;
}

double OAIUser::getId() const {
    return m_id;
}
void OAIUser::setId(const double &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIUser::is_id_Set() const{
    return m_id_isSet;
}

bool OAIUser::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIUser::getLastName() const {
    return m_last_name;
}
void OAIUser::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAIUser::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAIUser::is_last_name_Valid() const{
    return m_last_name_isValid;
}

QString OAIUser::getLoginName() const {
    return m_login_name;
}
void OAIUser::setLoginName(const QString &login_name) {
    m_login_name = login_name;
    m_login_name_isSet = true;
}

bool OAIUser::is_login_name_Set() const{
    return m_login_name_isSet;
}

bool OAIUser::is_login_name_Valid() const{
    return m_login_name_isValid;
}

bool OAIUser::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_contact_numbers.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_extensions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_login_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUser::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
