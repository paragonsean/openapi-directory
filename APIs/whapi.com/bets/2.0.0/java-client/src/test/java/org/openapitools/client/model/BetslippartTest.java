/*
 * Bets API
 * The Bets API methods are used to place single, multiple and complex bets and to retrieve a customer’s bet history. When retrieving a customer’s bet history you can organize the bets from the betting history in terms of date, bet type and whether the bet is settled or not. You can also specify what fields to be included/excluded or return a list of all default fields the method returns. <br /><br /> The Bets API will also generate a bet delay if you’re placing a single/multiple bet in-Play by creating a time margin to negate the effects of major changes to the market (for example, goals during a football match). Note that in version 2 of our APIs, Bets API contains the functionality of both Bets API v1 and the Betslips API v1.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: platform@williamhill.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Betslippart
 */
public class BetslippartTest {
    private final Betslippart model = new Betslippart();

    /**
     * Model tests for Betslippart
     */
    @Test
    public void testBetslippart() {
        // TODO: test Betslippart
    }

    /**
     * Test the property 'eachWayAvailable'
     */
    @Test
    public void eachWayAvailableTest() {
        // TODO: test eachWayAvailable
    }

    /**
     * Test the property 'includeInMultiple'
     */
    @Test
    public void includeInMultipleTest() {
        // TODO: test includeInMultiple
    }

    /**
     * Test the property 'legGroup'
     */
    @Test
    public void legGroupTest() {
        // TODO: test legGroup
    }

    /**
     * Test the property 'priceChanged'
     */
    @Test
    public void priceChangedTest() {
        // TODO: test priceChanged
    }

    /**
     * Test the property 'priceDen'
     */
    @Test
    public void priceDenTest() {
        // TODO: test priceDen
    }

    /**
     * Test the property 'priceNum'
     */
    @Test
    public void priceNumTest() {
        // TODO: test priceNum
    }

    /**
     * Test the property 'priceType'
     */
    @Test
    public void priceTypeTest() {
        // TODO: test priceType
    }

    /**
     * Test the property 'selectionId'
     */
    @Test
    public void selectionIdTest() {
        // TODO: test selectionId
    }

    /**
     * Test the property 'singleAvailable'
     */
    @Test
    public void singleAvailableTest() {
        // TODO: test singleAvailable
    }

    /**
     * Test the property 'startingPriceAvailable'
     */
    @Test
    public void startingPriceAvailableTest() {
        // TODO: test startingPriceAvailable
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'statusChanged'
     */
    @Test
    public void statusChangedTest() {
        // TODO: test statusChanged
    }

}
