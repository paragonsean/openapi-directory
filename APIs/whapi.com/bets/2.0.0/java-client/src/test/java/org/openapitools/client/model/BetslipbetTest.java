/*
 * Bets API
 * The Bets API methods are used to place single, multiple and complex bets and to retrieve a customer’s bet history. When retrieving a customer’s bet history you can organize the bets from the betting history in terms of date, bet type and whether the bet is settled or not. You can also specify what fields to be included/excluded or return a list of all default fields the method returns. <br /><br /> The Bets API will also generate a bet delay if you’re placing a single/multiple bet in-Play by creating a time margin to negate the effects of major changes to the market (for example, goals during a football match). Note that in version 2 of our APIs, Bets API contains the functionality of both Bets API v1 and the Betslips API v1.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: platform@williamhill.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Betslipleg;
import org.openapitools.client.model.FreeBetDetail;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Betslipbet
 */
public class BetslipbetTest {
    private final Betslipbet model = new Betslipbet();

    /**
     * Model tests for Betslipbet
     */
    @Test
    public void testBetslipbet() {
        // TODO: test Betslipbet
    }

    /**
     * Test the property 'betMultiplier'
     */
    @Test
    public void betMultiplierTest() {
        // TODO: test betMultiplier
    }

    /**
     * Test the property 'freeBets'
     */
    @Test
    public void freeBetsTest() {
        // TODO: test freeBets
    }

    /**
     * Test the property 'legs'
     */
    @Test
    public void legsTest() {
        // TODO: test legs
    }

    /**
     * Test the property 'maxStake'
     */
    @Test
    public void maxStakeTest() {
        // TODO: test maxStake
    }

    /**
     * Test the property 'minStake'
     */
    @Test
    public void minStakeTest() {
        // TODO: test minStake
    }

    /**
     * Test the property 'numLines'
     */
    @Test
    public void numLinesTest() {
        // TODO: test numLines
    }

    /**
     * Test the property 'number'
     */
    @Test
    public void numberTest() {
        // TODO: test number
    }

    /**
     * Test the property 'typeCode'
     */
    @Test
    public void typeCodeTest() {
        // TODO: test typeCode
    }

    /**
     * Test the property 'typeName'
     */
    @Test
    public void typeNameTest() {
        // TODO: test typeName
    }

}
