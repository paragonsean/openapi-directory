/**
 * Bets API
 * The Bets API methods are used to place single, multiple and complex bets and to retrieve a customer’s bet history. When retrieving a customer’s bet history you can organize the bets from the betting history in terms of date, bet type and whether the bet is settled or not. You can also specify what fields to be included/excluded or return a list of all default fields the method returns. <br /><br /> The Bets API will also generate a bet delay if you’re placing a single/multiple bet in-Play by creating a time margin to negate the effects of major changes to the market (for example, goals during a football match). Note that in version 2 of our APIs, Bets API contains the functionality of both Bets API v1 and the Betslips API v1.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: platform@williamhill.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPriceFormatted.h
 *
 * 
 */

#ifndef OAIPriceFormatted_H
#define OAIPriceFormatted_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPriceFormatted : public OAIObject {
public:
    OAIPriceFormatted();
    OAIPriceFormatted(QString json);
    ~OAIPriceFormatted() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAmerican() const;
    void setAmerican(const QString &american);
    bool is_american_Set() const;
    bool is_american_Valid() const;

    double getDecimal() const;
    void setDecimal(const double &decimal);
    bool is_decimal_Set() const;
    bool is_decimal_Valid() const;

    QString getFractional() const;
    void setFractional(const QString &fractional);
    bool is_fractional_Set() const;
    bool is_fractional_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_american;
    bool m_american_isSet;
    bool m_american_isValid;

    double m_decimal;
    bool m_decimal_isSet;
    bool m_decimal_isValid;

    QString m_fractional;
    bool m_fractional_isSet;
    bool m_fractional_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPriceFormatted)

#endif // OAIPriceFormatted_H
