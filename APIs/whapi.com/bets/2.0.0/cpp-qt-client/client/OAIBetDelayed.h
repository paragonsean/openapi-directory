/**
 * Bets API
 * The Bets API methods are used to place single, multiple and complex bets and to retrieve a customer’s bet history. When retrieving a customer’s bet history you can organize the bets from the betting history in terms of date, bet type and whether the bet is settled or not. You can also specify what fields to be included/excluded or return a list of all default fields the method returns. <br /><br /> The Bets API will also generate a bet delay if you’re placing a single/multiple bet in-Play by creating a time margin to negate the effects of major changes to the market (for example, goals during a football match). Note that in version 2 of our APIs, Bets API contains the functionality of both Bets API v1 and the Betslips API v1.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: platform@williamhill.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBetDelayed.h
 *
 * 
 */

#ifndef OAIBetDelayed_H
#define OAIBetDelayed_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBetDelayed : public OAIObject {
public:
    OAIBetDelayed();
    OAIBetDelayed(QString json);
    ~OAIBetDelayed() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getDelayPeriodSeconds() const;
    void setDelayPeriodSeconds(const qint32 &delay_period_seconds);
    bool is_delay_period_seconds_Set() const;
    bool is_delay_period_seconds_Valid() const;

    QString getDelayedBetId() const;
    void setDelayedBetId(const QString &delayed_bet_id);
    bool is_delayed_bet_id_Set() const;
    bool is_delayed_bet_id_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    double getNumber() const;
    void setNumber(const double &number);
    bool is_number_Set() const;
    bool is_number_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_delay_period_seconds;
    bool m_delay_period_seconds_isSet;
    bool m_delay_period_seconds_isValid;

    QString m_delayed_bet_id;
    bool m_delayed_bet_id_isSet;
    bool m_delayed_bet_id_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    double m_number;
    bool m_number_isSet;
    bool m_number_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBetDelayed)

#endif // OAIBetDelayed_H
