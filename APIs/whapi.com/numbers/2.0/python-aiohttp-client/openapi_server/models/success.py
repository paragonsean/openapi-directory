# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Success(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, random_numbers: List[int]=None, session_id: str=None):
        """Success - a model defined in OpenAPI

        :param random_numbers: The random_numbers of this Success.
        :param session_id: The session_id of this Success.
        """
        self.openapi_types = {
            'random_numbers': List[int],
            'session_id': str
        }

        self.attribute_map = {
            'random_numbers': 'randomNumbers',
            'session_id': 'sessionId'
        }

        self._random_numbers = random_numbers
        self._session_id = session_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Success':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The success of this Success.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def random_numbers(self):
        """Gets the random_numbers of this Success.

        An array of random numbers

        :return: The random_numbers of this Success.
        :rtype: List[int]
        """
        return self._random_numbers

    @random_numbers.setter
    def random_numbers(self, random_numbers):
        """Sets the random_numbers of this Success.

        An array of random numbers

        :param random_numbers: The random_numbers of this Success.
        :type random_numbers: List[int]
        """

        self._random_numbers = random_numbers

    @property
    def session_id(self):
        """Gets the session_id of this Success.

        This is either the IP address of the customer if not authenticated, or if used in ‘Live’ mode, when there is a financial outcome, it is the IP address and customerId for the account the ticket was generated for. This is used for audit purposes in case of financial query about a game outcome.

        :return: The session_id of this Success.
        :rtype: str
        """
        return self._session_id

    @session_id.setter
    def session_id(self, session_id):
        """Sets the session_id of this Success.

        This is either the IP address of the customer if not authenticated, or if used in ‘Live’ mode, when there is a financial outcome, it is the IP address and customerId for the account the ticket was generated for. This is used for audit purposes in case of financial query about a game outcome.

        :param session_id: The session_id of this Success.
        :type session_id: str
        """

        self._session_id = session_id
