from typing import List, Dict
from aiohttp import web

from openapi_server.models.numbers_errors import NumbersErrors
from openapi_server.models.success import Success
from openapi_server import util


async def get_random_numbers(request: web.Request, api_key, api_secret, game_code, highest, lowest, count, unique, api_ticket=None) -> web.Response:
    """get_random_numbers

    This method is used to generate random numbers for your app. Within the request, you can specify the lowest number, the highest number and the amount of numbers returned. There is also an option to generate a unique set of numbers with no repetition of the same numbers allowed in the return.

    :param api_key: A unique identifier of your application that is generated by the API portal and presented in the header.
    :type api_key: str
    :param api_secret: Another unique identifier for your application. The secret must never be sent over HTTP.
    :type api_secret: str
    :param game_code: Identifier that indicates the game for which the RNG (Random Number Generator) has been used.
    :type game_code: str
    :param highest: Highest possible value to be returned.
    :type highest: int
    :param lowest: Lowest possible value to be returned.
    :type lowest: int
    :param count: Number of values to be returned.
    :type count: int
    :param unique: Should the numbers returned be unique
    :type unique: bool
    :param api_ticket: The authentication ticket associated with the user session. The getRandomNumbers method operates in two different ways – ‘Demo’ mode and ‘Live’ mode. In Demo mode, where no money is involved, the ticket is not required and can be used without it. In Live mode, when there is a financial outcome, the developer must supply a valid authentication and the ticket must be supplied. Important: The service should not be used in Live mode without a ticket.
    :type api_ticket: str

    """
    return web.Response(status=200)
