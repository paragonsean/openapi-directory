from typing import List, Dict
from aiohttp import web

from openapi_server.models.login_request import LoginRequest
from openapi_server.models.logoutresponse import Logoutresponse
from openapi_server.models.service_ticket import ServiceTicket
from openapi_server.models.session import Session
from openapi_server.models.sessions_errors import SessionsErrors
from openapi_server.models.ticketvalidityresponse import Ticketvalidityresponse
from openapi_server import util


async def get_service_ticket(request: web.Request, api_key, api_secret, tgt, target, territory=None, language_as_per_territory=None, fields=None, include=None, exclude=None) -> web.Response:
    """Obtains a one-time Service Ticket that can be used to access other William Hill services.

    Obtains a one-time Service Ticket that can be used to access other CAS enabled William Hill services that are not available through the standard suite of APIs. You first need to have logged in a customer to obtain an Authentication Ticket.

    :param api_key: A unique identifier of your application that is generated by the API portal.
    :type api_key: str
    :param api_secret: Another unique identifier for your application.
    :type api_secret: str
    :param tgt: Ticket Granting Ticket obtained from a previous request
    :type tgt: str
    :param target: The target URL of the CAS enabled service that you want to use with the service ticket.
    :type target: str
    :param territory: Territory from which request originates
    :type territory: str
    :param language_as_per_territory: Defines response field name language, true (default) returns in language defined by territory, false returns in English
    :type language_as_per_territory: str
    :param fields: Specify an absolute field list to return (Comma Separated List)
    :type fields: List[str]
    :param include: Specify fields in addition to the default to return (Comma Separated List)
    :type include: List[str]
    :param exclude: Specify fields from the default to exclude (Comma Separated List)
    :type exclude: List[str]

    """
    return web.Response(status=200)


async def log_in(request: web.Request, api_key, api_secret, login, fields=None, include=None, exclude=None, territory=None, language_as_per_territory=None) -> web.Response:
    """Logs in a customer and obtains an authentication ticket.

    Logs in a customer by obtaining an authentication ticket. It can then be used directly with the other William Hill APIs to access a customerâ€™s sportsbook account, place a bet, etc. 

    :param api_key: A unique identifier of your application that is generated by the API portal.
    :type api_key: str
    :param api_secret: Another unique identifier for your application.
    :type api_secret: str
    :param login: Login request object
    :type login: dict | bytes
    :param fields: Specify an absolute field list to return (Comma Separated List)
    :type fields: List[str]
    :param include: Specify fields in addition to the default to return (Comma Separated List)
    :type include: List[str]
    :param exclude: Specify fields from the default to exclude (Comma Separated List)
    :type exclude: List[str]
    :param territory: Territory from which request originates
    :type territory: str
    :param language_as_per_territory: Defines response field name language, true (default) returns in language defined by territory, false returns in English
    :type language_as_per_territory: str

    """
    login = LoginRequest.from_dict(login)
    return web.Response(status=200)


async def log_out(request: web.Request, api_key, api_secret, tgt, territory=None, language_as_per_territory=None) -> web.Response:
    """Log out a customer.

    Logs out a customer.

    :param api_key: A unique identifier of your application that is generated by the API portal.
    :type api_key: str
    :param api_secret: Another unique identifier for your application.
    :type api_secret: str
    :param tgt: Ticket Granting Ticket obtained from a previous request
    :type tgt: str
    :param territory: Territory from which request originates
    :type territory: str
    :param language_as_per_territory: Defines response field name language, true (default) returns in language defined by territory, false returns in English
    :type language_as_per_territory: str

    """
    return web.Response(status=200)


async def validate_session(request: web.Request, api_key, api_secret, tgt, territory=None, language_as_per_territory=None) -> web.Response:
    """Checks the validity of a session ticket.

    Checks the validity of a session ticket.

    :param api_key: A unique identifier of your application that is generated by the API portal.
    :type api_key: str
    :param api_secret: Another unique identifier for your application.
    :type api_secret: str
    :param tgt: Ticket Granting Ticket obtained from a previous request
    :type tgt: str
    :param territory: Territory from which request originates
    :type territory: str
    :param language_as_per_territory: Defines response field name language, true (default) returns in language defined by territory, false returns in English
    :type language_as_per_territory: str

    """
    return web.Response(status=200)
