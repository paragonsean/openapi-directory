openapi: 3.0.1
info:
  contact: {}
  description: The Locations API is a collection of methods that support geographical
    information. The first method is an address lookup service for UK addresses. This
    service can be used to provide a new customer with a list of possible addresses
    from which they can populate a registration form.
  title: Locations
  version: "2.0"
  x-apisguru-categories:
  - entertainment
  x-logo:
    url: https://twitter.com/WillHillHelp/profile_image?size=original
  x-origin:
  - format: swagger
    url: https://developer.williamhill.com/wh-docs/docs-sdks/locations/swagger/docs
    version: "2.0"
  x-providerName: whapi.com
  x-serviceName: locations
servers:
- url: https://sandbox.whapi.com/v2/locations
security:
- apiKey: []
paths:
  /address/lookup/:
    get:
      description: |
        Retrieves a list of addresses when supplied with a house number or name and a postcode. It is generally used during customer registration to provide a list of possible addresses from where the customer can select their own address details.
      operationId: addressLookup
      parameters:
      - description: House number or name of the address.
        in: query
        name: houseNum
        required: true
        schema:
          type: string
          x-eg: 4
        x-eg: 4
      - description: "Postcode of the address, no spaces required."
        in: query
        name: postCode
        required: true
        schema:
          type: string
          x-eg: GX11AA
        x-eg: GX11AA
      responses:
        "200":
          content:
            application/json:
              example: "{\n  \"addresses\": \n  [\n    {\n      \"fullAddress\": \"\
                4 Bywater Place, LONDON, SE16 5ND\",\n      \"street\": \"4 Bywater\
                \ Place\",\n      \"postcode\": \"SE16 5ND\",\n      \"city\": \"\
                London\",\n      \"county\": \"London\"\n    }\n  ]\n}        \n"
              schema:
                $ref: '#/components/schemas/addresses'
          description: Success
        "400":
          content:
            application/json:
              example: |
                {
                  "errors":
                  [
                    {
                      "code":"10070",
                      "message":"Missing Parameter",
                      "field":"postCode"
                    },
                    {
                      "code":"10071",
                      "message":"Invalid Parameter",
                      "field":"postCode"
                    }
                  ]
                }
              schema:
                $ref: '#/components/schemas/locationsErrors'
          description: Missing or Invalid Parameter
        "404":
          content:
            application/json:
              example: "{\n  \"errors\" : \n  [\n    {\n      \"code\":\"20301\",\n\
                \      \"message\":\"Could not find any addresses\",\n      \"field\"\
                :\"postCode\"\n    }\n  ]\n}\n"
              schema:
                $ref: '#/components/schemas/locationsErrors'
          description: Address not found
      tags:
      - Locations
      x-canReturnErrors:
      - 20301
      - 20303
      - 10070
      - 10071
      x-accepts:
      - application/json
  /countries/:
    get:
      description: Retrieves a list of countries and its currencies.
      operationId: getCountries
      responses:
        "200":
          content:
            application/json:
              example: "{\n    \"countries\": \n    [\n        {\n            \"code\"\
                : \"GB\",\n            \"name\": \"United Kingdom\", \n          \
                \  \"currencyCode\" : \"GBP\", \n            \"dialCode\" : \"+44\"\
                \n        }\n    ]\n}\n"
              schema:
                $ref: '#/components/schemas/countries'
          description: Successful response
        "400":
          content:
            application/json:
              example: "{\n    \"errors\" : \n    [\n        {\n          \"code\"\
                :\"10070\",\n          \"message\":\"Missing Parameter\",\n      \
                \    \"field\":\"postCode\"\n        },\n        {\n          \"code\"\
                :\"10071\",\n          \"message\":\"Invalid Parameter\",\n      \
                \    \"field\":\"postCode\"\n        }    \n    ]\n}\n"
              schema:
                $ref: '#/components/schemas/locationsErrors'
          description: Missing or Invalid Parameter
        "404":
          content:
            application/json:
              example: "{\n    \"errors\" : \n    [\n        {\n          \"code\"\
                :\"20303\",\n          \"message\":\"Country not Found\"\n       \
                \ }\n    ]\n}\n"
              schema:
                $ref: '#/components/schemas/locationsErrors'
          description: Country/Countries not found
      tags:
      - Locations
      x-canReturnErrors:
      - 20303
      x-accepts:
      - application/json
  /countries/{countryCode}:
    get:
      description: Retrieves the specified country and its currency.
      operationId: getCountry
      parameters:
      - description: Code of the country
        in: path
        name: countryCode
        required: true
        schema:
          type: string
          x-eg: GB
        x-eg: GB
      responses:
        "200":
          content:
            application/json:
              example: |
                {
                  "code":"gb",
                  "name":"Great Britain",
                  "currencyCode":"GBP",
                  "dialCode":"+44"
                }
              schema:
                $ref: '#/components/schemas/country'
          description: Success
        "400":
          content:
            application/json:
              example: "{\n    \"errors\" : \n    [\n        {\n          \"code\"\
                :\"10070\",\n          \"message\":\"Missing Parameter\",\n      \
                \    \"field\":\"postCode\"\n        },\n        {\n          \"code\"\
                :\"10071\",\n          \"message\":\"Invalid Parameter\",\n      \
                \    \"field\":\"postCode\"\n        }    \n    ]\n}\n"
              schema:
                $ref: '#/components/schemas/locationsErrors'
          description: Missing or Invalid Parameter
        "404":
          content:
            application/json:
              example: "{\n    \"errors\" : \n    [\n        {\n          \"code\"\
                :\"20303\",\n          \"message\":\"Country not Found\"\n       \
                \ }\n    ]\n}\n"
              schema:
                $ref: '#/components/schemas/locationsErrors'
          description: Country/Countries not found
      tags:
      - Locations
      x-canReturnErrors:
      - 20303
      - 10070
      - 10071
      x-accepts:
      - application/json
  /currencies/:
    get:
      description: Retreives the list of currencies.
      operationId: getCurrencies
      responses:
        "200":
          content:
            application/json:
              example: "{\n  \"currencies\": \n  [\n    {\n      \"code\":\"GBP\"\
                ,\n      \"name\":\"Pound\",\n      \"minDeposit\":\"5.00\",\n   \
                \   \"maxDeposit\":\"100.00\",\n      \"minWithdrawal\":\"20.00\"\
                ,\n      \"maxWithdrawal\":\"1000.00\",\n      \"exchangeRate\":\"\
                1.00\"\n    }\n  ]\n}\n"
              schema:
                $ref: '#/components/schemas/currencies'
          description: Success
        "404":
          content:
            application/json:
              example: "{\n    \"errors\" : \n    [\n        {\n          \"code\"\
                :\"20304\",\n          \"message\":\"Currency not Found\"\n      \
                \  }\n    ]\n}\n"
              schema:
                $ref: '#/components/schemas/locationsErrors'
          description: Currency not found
      tags:
      - Locations
      x-canReturnErrors:
      - 20304
      x-accepts:
      - application/json
  /currencies/{currencyCode}:
    get:
      description: Retreives the specified currency.
      operationId: getCurrency
      parameters:
      - description: Code of the currency
        in: path
        name: currencyCode
        required: true
        schema:
          type: string
          x-eg: GBP
        x-eg: GBP
      responses:
        "200":
          content:
            application/json:
              example: |
                {
                    "code":"GBP",
                    "name":"Pound",
                    "minDeposit":"5.00",
                    "maxDeposit":"100.00",
                    "minWithdrawal":"20.00",
                    "maxWithdrawal":"1000.00",
                    "exchangeRate":"1.00"
                }
              schema:
                $ref: '#/components/schemas/currency'
          description: Success
        "400":
          content:
            application/json:
              example: "{\n    \"errors\" : \n    [\n        {\n          \"code\"\
                :\"10070\",\n          \"message\":\"Missing Parameter\",\n      \
                \    \"field\":\"postCode\"\n        },\n        {\n          \"code\"\
                :\"10071\",\n          \"message\":\"Invalid Parameter\",\n      \
                \    \"field\":\"postCode\"\n        }    \n    ]\n}\n"
              schema:
                $ref: '#/components/schemas/locationsErrors'
          description: Missing or Invalid Parameter
        "404":
          content:
            application/json:
              example: "{\n    \"errors\" : \n    [\n        {\n          \"code\"\
                :\"20304\",\n          \"message\":\"Currency not Found\"\n      \
                \  }\n    ]\n}\n"
              schema:
                $ref: '#/components/schemas/locationsErrors'
          description: Currency not found
      tags:
      - Locations
      x-canReturnErrors:
      - 20304
      - 10070
      - 10071
      x-accepts:
      - application/json
components:
  parameters:
    apiKey:
      description: A unique identifier of your application that is generated by the
        API portal and presented in the header.
      in: header
      name: apiKey
      required: true
      schema:
        type: string
        x-eg: l7xxa54460c573b5497c9b24b505xxxxxxxx
      x-eg: l7xxa54460c573b5497c9b24b505xxxxxxxx
    countryCode:
      description: Code of the country
      in: path
      name: countryCode
      required: true
      schema:
        type: string
        x-eg: GB
      x-eg: GB
    currencyCode:
      description: Code of the currency
      in: path
      name: currencyCode
      required: true
      schema:
        type: string
        x-eg: GBP
      x-eg: GBP
    houseNum:
      description: House number or name of the address.
      in: query
      name: houseNum
      required: true
      schema:
        type: string
        x-eg: 4
      x-eg: 4
    postCode:
      description: "Postcode of the address, no spaces required."
      in: query
      name: postCode
      required: true
      schema:
        type: string
        x-eg: GX11AA
      x-eg: GX11AA
  schemas:
    address:
      example:
        city: city
        street: street
        county: county
        fullAddress: fullAddress
        postCode: postCode
      properties:
        city:
          description: The name of the postal city/town
          type: string
        county:
          description: The name of the county
          type: string
        fullAddress:
          description: The customer’s complete address including postcode
          type: string
        postCode:
          description: The postcode of the address
          type: string
        street:
          description: The name of the street including the house number/house name
          type: string
      title: address
      type: object
    addresses:
      example:
        addresses:
        - city: city
          street: street
          county: county
          fullAddress: fullAddress
          postCode: postCode
        - city: city
          street: street
          county: county
          fullAddress: fullAddress
          postCode: postCode
      properties:
        addresses:
          items:
            $ref: '#/components/schemas/address'
          type: array
      type: object
    countries:
      example:
        countries:
        - code: code
          dialCode: dialCode
          name: name
          currencyCode: currencyCode
        - code: code
          dialCode: dialCode
          name: name
          currencyCode: currencyCode
      properties:
        countries:
          items:
            $ref: '#/components/schemas/country'
          type: array
      type: object
    country:
      example:
        code: code
        dialCode: dialCode
        name: name
        currencyCode: currencyCode
      properties:
        code:
          description: The code of the country
          type: string
        currencyCode:
          description: The currency code
          type: string
        dialCode:
          description: The dial code of the country
          type: string
        name:
          description: The name of the country
          type: string
      title: country
      type: object
    currencies:
      example:
        currencies:
        - code: code
          maxWithdrawal: 1.4658129805029452
          exchangeRate: 0.8008281904610115
          maxDeposit: 6.027456183070403
          name: name
          minDeposit: 5.962133916683182
          minWithdrawal: 5.637376656633329
        - code: code
          maxWithdrawal: 1.4658129805029452
          exchangeRate: 0.8008281904610115
          maxDeposit: 6.027456183070403
          name: name
          minDeposit: 5.962133916683182
          minWithdrawal: 5.637376656633329
      properties:
        currencies:
          items:
            $ref: '#/components/schemas/currency'
          type: array
      type: object
    currency:
      example:
        code: code
        maxWithdrawal: 1.4658129805029452
        exchangeRate: 0.8008281904610115
        maxDeposit: 6.027456183070403
        name: name
        minDeposit: 5.962133916683182
        minWithdrawal: 5.637376656633329
      properties:
        code:
          description: The code of the currency
          type: string
        exchangeRate:
          description: The exchange rate for the currency
          format: double
          type: number
        maxDeposit:
          description: The maximum deposit for the currency
          format: double
          type: number
        maxWithdrawal:
          description: The maximum withdrawl for the currency
          format: double
          type: number
        minDeposit:
          description: The minimum deposit for the currency
          format: double
          type: number
        minWithdrawal:
          description: The minimum withdrawal for the currency
          format: double
          type: number
        name:
          description: The name of the currency
          type: string
      title: currency
      type: object
    error:
      example:
        code: code
        field: field
        message: message
      properties:
        code:
          description: A unique William Hill identifier for the error
          type: string
        field:
          description: To help pinpoint the exact parameter where a request has failed
          type: string
        message:
          description: A unique William Hill text string to enable you to identify
            the error (in English only)
          type: string
      type: object
    locationsErrors:
      example:
        errors:
        - code: code
          field: field
          message: message
        - code: code
          field: field
          message: message
      properties:
        errors:
          items:
            $ref: '#/components/schemas/error'
          type: array
      type: object
  securitySchemes:
    apiKey:
      description: A unique identifier of your application that is generated by the
        API portal and presented in the header.
      in: header
      name: apiKey
      type: apiKey
x-customerrors:
- code: 20301
  message: Could not find any addresses
  status: 404
- code: 20302
  message: Result limit has been exceeded
  status: 400
- code: 20303
  message: Country not found
  status: 404
- code: 20304
  message: Currency not found
  status: 404
x-docchapters:
- fieldSelection
- apiSummary
- headAndOptions
- docsAndSdks
- errorHandling
- statusCodes
x-original-swagger-version: "2.0"

