# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Country(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code: str=None, currency_code: str=None, dial_code: str=None, name: str=None):
        """Country - a model defined in OpenAPI

        :param code: The code of this Country.
        :param currency_code: The currency_code of this Country.
        :param dial_code: The dial_code of this Country.
        :param name: The name of this Country.
        """
        self.openapi_types = {
            'code': str,
            'currency_code': str,
            'dial_code': str,
            'name': str
        }

        self.attribute_map = {
            'code': 'code',
            'currency_code': 'currencyCode',
            'dial_code': 'dialCode',
            'name': 'name'
        }

        self._code = code
        self._currency_code = currency_code
        self._dial_code = dial_code
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Country':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The country of this Country.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self):
        """Gets the code of this Country.

        The code of the country

        :return: The code of this Country.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this Country.

        The code of the country

        :param code: The code of this Country.
        :type code: str
        """

        self._code = code

    @property
    def currency_code(self):
        """Gets the currency_code of this Country.

        The currency code

        :return: The currency_code of this Country.
        :rtype: str
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this Country.

        The currency code

        :param currency_code: The currency_code of this Country.
        :type currency_code: str
        """

        self._currency_code = currency_code

    @property
    def dial_code(self):
        """Gets the dial_code of this Country.

        The dial code of the country

        :return: The dial_code of this Country.
        :rtype: str
        """
        return self._dial_code

    @dial_code.setter
    def dial_code(self, dial_code):
        """Sets the dial_code of this Country.

        The dial code of the country

        :param dial_code: The dial_code of this Country.
        :type dial_code: str
        """

        self._dial_code = dial_code

    @property
    def name(self):
        """Gets the name of this Country.

        The name of the country

        :return: The name of this Country.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Country.

        The name of the country

        :param name: The name of this Country.
        :type name: str
        """

        self._name = name
