openapi: 3.0.1
info:
  contact:
    email: platform@williamhill.com
    name: William Hill Labs
    url: http://developer.williamhill.com
  description: The Accounts API is a collection of methods used to query a customer
    account. It allows the developer to retrieve account-related data such as the
    user account balance. It should be noted that regional variations may exist -
    so some fields may not be returned for certain territories.
  title: Accounts API
  version: 2.0.0
  x-apisguru-categories:
  - entertainment
  x-logo:
    url: https://twitter.com/WillHillHelp/profile_image?size=original
  x-origin:
  - format: swagger
    url: https://developer.williamhill.com/wh-docs/docs-sdks/accounts/swagger/docs
    version: "2.0"
  x-providerName: whapi.com
  x-serviceName: accounts
servers:
- url: https://sandbox.whapi.com/v2/accounts
paths:
  /account:
    get:
      description: "Retrieves a limited set of customer account details. For security\
        \ purposes, only a subset is supplied, which does not include fields such\
        \ as security questions and answers. argFileDR1.properties argFileDR2.properties\
        \ argFileGIB1.properties argFileGIB2.properties argFileGIB3.properties argFileGIB4.properties\
        \ argFilePP1.properties argFilePP2.properties argFilePP3.properties argFile.properties\
        \ argFilePT1.properties argFilePTE.properties argFileSCC1.properties argFileSCC2.properties\
        \ argFileSCC3.properties argFileSTG.properties argFileSYS.properties CWP GatewayMigrationUtility-1.4.00-85\
        \ GatewayMigrationUtility.jar GatewayMigrationUtility.sh gmu.log inputFile.xml\
        \ lib logs migratePolicy.sh migratev2CWP.sh migratev2Policy.sh retrieveCWP.sh\
        \ retrievePolicy.sh updateCWP.sh updatePolicyById.sh updatePolicy.sh returned\
        \ by default, others need to be selected. argFileDR1.properties argFileDR2.properties\
        \ argFileGIB1.properties argFileGIB2.properties argFileGIB3.properties argFileGIB4.properties\
        \ argFilePP1.properties argFilePP2.properties argFilePP3.properties argFile.properties\
        \ argFilePT1.properties argFilePTE.properties argFileSCC1.properties argFileSCC2.properties\
        \ argFileSCC3.properties argFileSTG.properties argFileSYS.properties CWP GatewayMigrationUtility-1.4.00-85\
        \ GatewayMigrationUtility.jar GatewayMigrationUtility.sh gmu.log inputFile.xml\
        \ lib logs migratePolicy.sh migratev2CWP.sh migratev2Policy.sh retrieveCWP.sh\
        \ retrievePolicy.sh updateCWP.sh updatePolicyById.sh updatePolicy.sh returned\
        \ by default only in italian region."
      operationId: get_details
      parameters:
      - description: A unique identifier of your application that is generated by
          the API portal.
        in: header
        name: apiKey
        required: true
        schema:
          pattern: "^[a-zA-Z0-9]{19,50}$"
          type: string
          x-eg: l7xxa54460c573b5497c9b24b505xxxxxxxx
        x-eg: l7xxa54460c573b5497c9b24b505xxxxxxxx
      - description: Another unique identifier for your application.
        in: header
        name: apiSecret
        required: true
        schema:
          pattern: "^[a-zA-Z0-9]{19,50}$"
          type: string
          x-eg: 355b1e522c544222ab4ff318xxxxxxxx
        x-eg: 355b1e522c544222ab4ff318xxxxxxxx
      - description: Ticket Granting Ticket obtained from a previous request
        in: header
        name: apiTicket
        required: true
        schema:
          pattern: "^[a-zA-Z][a-zA-Z0-9-]{39,100}$"
          type: string
          x-eg: TGT-1920-Cl7l4e0hzFWK9aoKeiggDexuWcmAMf9brh6IFpVdsQxxxxxxxx-brsux349
        x-eg: TGT-1920-Cl7l4e0hzFWK9aoKeiggDexuWcmAMf9brh6IFpVdsQxxxxxxxx-brsux349
      - description: Specify an absolute field list to return (Comma-Separated List)
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-eg: extended
        style: form
        x-eg: extended
      - description: Specify fields in addition to the default to return (Comma-Separated
          List)
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
          x-eg: extended
        style: form
        x-eg: extended
      - description: Specify fields from the default to exclude (Comma-Separated List)
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
          x-eg: expiryDateTime
        style: form
        x-eg: expiryDateTime
      - description: Territory from which request originates
        in: header
        name: territory
        schema:
          pattern: ^(COM|ES|IT)$
          type: string
          x-eg: ES
        x-eg: ES
      - description: "Defines response field name language, true (default) returns\
          \ in language defined by territory, false returns in English"
        in: query
        name: languageAsPerTerritory
        schema:
          default: "true"
          pattern: ^(true|false)$
          type: string
          x-eg: false
        x-eg: false
      responses:
        "200":
          content:
            application/json:
              example: |
                {
                 "status*": "A",
                 "userName": "wallet1",
                 "accountNum*": "78041SJ",
                 "accountId": "1653",
                 "accountType": "DEP",
                 "creationDate": "2016-06-28 10:50:27",
                 "lastLogin": "2019-09-06 15:54:29",
                 "countryCode": "UK",
                 "title": "Prof",
                 "firstName*": "Wha",
                 "lastName*": "Pee",
                 "secondLastName*": "Smith",
                 "ipAddress": "10.211.33.1",
                 "street1": "1",
                 "street2": "Test",
                 "county": "Gloucestershire",
                 "city": "Leeds",
                 "postcode": "LS1 1AA",
                 "country": "United Kingdom",
                 "email": "wallet1@wh2.com",
                 "mobile": "07710100100",
                 "telephone": "01131001000",
                 "language": "en",
                 "timeZone": "Europe/London",
                 "nif**": "HMCQVC89T28M347J",
                 "lastLogin**": "2020-03-10 06:44:09",
                 "termsAndConditions":[
                 {
                 "name": "PlaytechCasIta",
                 "url": "http://williamhill-it.custhelp.com/cgi-bin/williamhill_it.cfg/php/enduser/std_adp.php?p_faqid=7320 http://whdn.williamhill.com/content/content/Contratto.pdf http://williamhill-it.custhelp.com/cgi-bin/williamhill_it.cfg/php/enduser/std_adp.php?p_faqid=7113"
                 },
                 {
                 "name": "PlaytechCasIta",
                 "url": "http://williamhill-it.custhelp.com/cgi-bin/williamhill_it.cfg/php/enduser/std_adp.php?p_faqid=7320 http://whdn.williamhill.com/content/content/Contratto.pdf http://williamhill-it.custhelp.com/cgi-bin/williamhill_it.cfg/php/enduser/std_adp.php?p_faqid=7113"
                 },
                 {
                 "name": "PlaytechCasIta",
                 "url": "http://williamhill-it.custhelp.com/cgi-bin/williamhill_it.cfg/php/enduser/std_adp.php?p_faqid=7320 http://whdn.williamhill.com/content/content/Contratto.pdf http://williamhill-it.custhelp.com/cgi-bin/williamhill_it.cfg/php/enduser/std_adp.php?p_faqid=7113"
                 }
                 ],
                 "birthPlace":{
                 "city": "Roma",
                 "province": "RM",
                 "countryCode": ""
                 },
                 "additionalSystemStatuses":{
                 "system": "cnj",
                 "estado": "OK"
                 },
                 "partnerContactable": true,
                 "contactable": true,
                 "flags": [
                 {
                 "pocf": true
                 }
                 ]
                }
              schema:
                $ref: '#/components/schemas/accounts'
          description: Success
        "401":
          content:
            application/json:
              example: |
                {
                 "errors" : [
                 {
                 "code":"000000",
                 "message":"Error Message Text",
                 "field":"aparam"
                 }
                 ]
                }
              schema:
                $ref: '#/components/schemas/accountErrors'
          description: Not Authorized
      summary: Retrieves details of a customers account
      tags:
      - Accounts
      x-canReturnErrors:
      - 20401
      x-openapi-router-controller: openapi_server.controllers.accounts_controller
  /account/balance:
    get:
      description: This method can be used to retrieve the customerâ€™s account balance
        in UK Sterling.
      operationId: get_balance
      parameters:
      - description: A unique identifier of your application that is generated by
          the API portal.
        in: header
        name: api_key
        required: true
        schema:
          pattern: "^[a-zA-Z0-9]{19,50}$"
          type: string
          x-eg: l7xxa54460c573b5497c9b24b505xxxxxxxx
        x-eg: l7xxa54460c573b5497c9b24b505xxxxxxxx
      - description: Another unique identifier for your application.
        in: header
        name: api_secret
        required: true
        schema:
          pattern: "^[a-zA-Z0-9]{19,50}$"
          type: string
          x-eg: 355b1e522c544222ab4ff318xxxxxxxx
        x-eg: 355b1e522c544222ab4ff318xxxxxxxx
      - description: Ticket Granting Ticket obtained from a previous request
        in: header
        name: api_ticket
        required: true
        schema:
          pattern: "^[a-zA-Z][a-zA-Z0-9-]{39,100}$"
          type: string
          x-eg: TGT-1920-Cl7l4e0hzFWK9aoKeiggDexuWcmAMf9brh6IFpVdsQxxxxxxxx-brsux349
        x-eg: TGT-1920-Cl7l4e0hzFWK9aoKeiggDexuWcmAMf9brh6IFpVdsQxxxxxxxx-brsux349
      - description: Specify an absolute field list to return (Comma-Separated List)
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-eg: extended
        style: form
        x-eg: extended
      - description: Specify fields in addition to the default to return (Comma-Separated
          List)
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
          x-eg: extended
        style: form
        x-eg: extended
      - description: Specify fields from the default to exclude (Comma-Separated List)
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
          x-eg: expiryDateTime
        style: form
        x-eg: expiryDateTime
      - description: Territory from which request originates
        in: header
        name: territory
        schema:
          pattern: ^(COM|ES|IT)$
          type: string
          x-eg: ES
        x-eg: ES
      - description: "Defines response field name language, true (default) returns\
          \ in language defined by territory, false returns in English"
        in: query
        name: language_as_per_territory
        schema:
          default: "true"
          pattern: ^(true|false)$
          type: string
          x-eg: false
        x-eg: false
      responses:
        "200":
          content:
            application/json:
              example: |
                {
                 "currencyCode": "GBP",
                 "balance": 234.23,
                 "availableFunds": 234.23,
                 "withdrawableFunds": 234.23
                }
              schema:
                $ref: '#/components/schemas/accountBalance'
          description: Success
        "401":
          content:
            application/json:
              example: |
                {
                 "errors" : [
                 {
                 "code":"000000",
                 "message":"Error Message Text",
                 "field":"aparam"
                 }
                 ]
                }
              schema:
                $ref: '#/components/schemas/accountErrors'
          description: Not Authorized
      summary: Get a customers account balance
      tags:
      - Accounts
      x-openapi-router-controller: openapi_server.controllers.accounts_controller
  /account/flags:
    post:
      description: Sets a flag based on name to value provided for the user.
      operationId: set_account_flags
      parameters:
      - description: A unique identifier of your application that is generated by
          the API portal.
        in: header
        name: api_key
        required: true
        schema:
          pattern: "^[a-zA-Z0-9]{19,50}$"
          type: string
          x-eg: l7xxa54460c573b5497c9b24b505xxxxxxxx
        x-eg: l7xxa54460c573b5497c9b24b505xxxxxxxx
      - description: Another unique identifier for your application.
        in: header
        name: api_secret
        required: true
        schema:
          pattern: "^[a-zA-Z0-9]{19,50}$"
          type: string
          x-eg: 355b1e522c544222ab4ff318xxxxxxxx
        x-eg: 355b1e522c544222ab4ff318xxxxxxxx
      - description: Ticket Granting Ticket obtained from a previous request
        in: header
        name: api_ticket
        required: true
        schema:
          pattern: "^[a-zA-Z][a-zA-Z0-9-]{39,100}$"
          type: string
          x-eg: TGT-1920-Cl7l4e0hzFWK9aoKeiggDexuWcmAMf9brh6IFpVdsQxxxxxxxx-brsux349
        x-eg: TGT-1920-Cl7l4e0hzFWK9aoKeiggDexuWcmAMf9brh6IFpVdsQxxxxxxxx-brsux349
      - description: A two-character ISO 3166-1-Alpha-2 code representing the country
          API to use.
        in: header
        name: apiCountryCode
        schema:
          default: GB
          pattern: ^(GB|ES|IT)$
          type: string
          x-eg: ES
        x-eg: ES
      - description: Territory from which request originates
        in: header
        name: territory
        schema:
          pattern: ^(COM|ES|IT)$
          type: string
          x-eg: ES
        x-eg: ES
      - description: "Defines response field name language, true (default) returns\
          \ in language defined by territory, false returns in English"
        in: query
        name: language_as_per_territory
        schema:
          default: "true"
          pattern: ^(true|false)$
          type: string
          x-eg: false
        x-eg: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/flags'
        description: Array of KVP for setting flags.
        required: true
        x-body-name: flags
      responses:
        "200":
          content:
            application/json:
              example: |
                {
                 "token": "e0dX/YhYaRax7aI0/SkNS9G1rXlZZWOD64t64JDijaCfEhRe0A=="
                }
              schema:
                $ref: '#/components/schemas/accountFlagsSet'
          description: Success
        "404":
          content:
            application/json:
              example: |
                {
                 "errors" : [
                 {
                 "code":"10003",
                 "message":"Resource Not Found",
                 "field":"token"
                 }
                 ]
                }
              schema:
                $ref: '#/components/schemas/accountErrors'
          description: No such customer
      summary: Sets a flag based on name to value provided for the user.
      tags:
      - flags
      x-canReturnErrors:
      - 0
      x-codegen-request-body-name: flags
      x-openapi-router-controller: openapi_server.controllers.flags_controller
  /account/payments:
    get:
      description: Retrieves the customerâ€™s account payments in UK Sterling.
      operationId: get_payments
      parameters:
      - description: A unique identifier of your application that is generated by
          the API portal.
        in: header
        name: api_key
        required: true
        schema:
          pattern: "^[a-zA-Z0-9]{19,50}$"
          type: string
          x-eg: l7xxa54460c573b5497c9b24b505xxxxxxxx
        x-eg: l7xxa54460c573b5497c9b24b505xxxxxxxx
      - description: Another unique identifier for your application.
        in: header
        name: api_secret
        required: true
        schema:
          pattern: "^[a-zA-Z0-9]{19,50}$"
          type: string
          x-eg: 355b1e522c544222ab4ff318xxxxxxxx
        x-eg: 355b1e522c544222ab4ff318xxxxxxxx
      - description: Ticket Granting Ticket obtained from a previous request
        in: header
        name: api_ticket
        required: true
        schema:
          pattern: "^[a-zA-Z][a-zA-Z0-9-]{39,100}$"
          type: string
          x-eg: TGT-1920-Cl7l4e0hzFWK9aoKeiggDexuWcmAMf9brh6IFpVdsQxxxxxxxx-brsux349
        x-eg: TGT-1920-Cl7l4e0hzFWK9aoKeiggDexuWcmAMf9brh6IFpVdsQxxxxxxxx-brsux349
      - description: The page number to return (Used with pageSize)
        in: query
        name: page
        schema:
          default: 1.0
          pattern: "^[1-9]{1,7}$"
          type: number
          x-eg: 10
        x-eg: 10
      - description: Specify the number of results to return per page.
        in: query
        name: pageSize
        schema:
          default: 100.0
          pattern: "^[1-9]{1,7}$"
          type: number
          x-eg: 15
        x-eg: 15
      - description: The FROM datetime from payments to be returned. (yyyy-MM-ddTHH:mm:ss)
        in: query
        name: dateFrom
        schema:
          pattern: "^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2})\\:(\\d{2})\\:(\\d{2})$"
          type: string
          x-eg: 2013-09-25T13:34:20+01:00
        x-eg: 2013-09-25T13:34:20+01:00
      - description: The TO datetime for payments to be returned. (yyyy-MM-ddTHH:mm:ss)
        in: query
        name: dateTo
        schema:
          pattern: "^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2})\\:(\\d{2})\\:(\\d{2})[+-](\\\
            d{2})\\:(\\d{2})$"
          type: string
          x-eg: 2013-09-25T13:34:20+01:00
        x-eg: 2013-09-25T13:34:20+01:00
      - description: "The order the response will be retuned by. i.e. date,desc"
        in: query
        name: sort
        schema:
          default: "date,asc"
          type: string
          x-eg: "date,desc"
        x-eg: "date,desc"
      - description: Allows the user to select with they want to see withdrawls or
          deposits. If it is omitted from the query both types will be returned
        in: query
        name: transactionType
        schema:
          pattern: ^(W|D)$
          type: string
          x-eg: W
        x-eg: W
      - description: Specify an absolute field list to return (Comma-Separated List)
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-eg: extended
        style: form
        x-eg: extended
      - description: Specify fields in addition to the default to return (Comma-Separated
          List)
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
          x-eg: extended
        style: form
        x-eg: extended
      - description: Specify fields from the default to exclude (Comma-Separated List)
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
          x-eg: expiryDateTime
        style: form
        x-eg: expiryDateTime
      - description: Territory from which request originates
        in: header
        name: territory
        schema:
          pattern: ^(COM|ES|IT)$
          type: string
          x-eg: ES
        x-eg: ES
      - description: "Defines response field name language, true (default) returns\
          \ in language defined by territory, false returns in English"
        in: query
        name: language_as_per_territory
        schema:
          default: "true"
          pattern: ^(true|false)$
          type: string
          x-eg: false
        x-eg: false
      responses:
        "200":
          content:
            application/json:
              example: "{\n \"payments\":\n [\n {\n \"id\": \"277\",\n \"methodId\"\
                : \"111\",\n \"type\": \"CSH\",\n \"action\": \"D\",\n \"paymentDateTime\"\
                : \"2013-09-25T13:34:20\",\n \"amount\": \"20.56\",\n \"commission\"\
                : \"0.00\",\n \"status\": \"Y\",\n \"channel\": \"M\",\n \"ipAddress\"\
                : \"10.0.0.12\"\n } \n ]\n}\n"
              schema:
                $ref: '#/components/schemas/getPayments'
          description: Success - Payments obtained
        "400":
          content:
            application/json:
              example: |
                {
                 "errors" : [
                 {
                 "code":"000000",
                 "message":"Error Message Text",
                 "field":"aparam"
                 }
                 ]
                }
              schema:
                $ref: '#/components/schemas/accountErrors'
          description: Errors
        "404":
          content:
            application/json:
              example: |
                {
                 "errors" : [
                 {
                 "code":"10003",
                 "message":"Resource Not Found",
                 "field":"token"
                 }
                 ]
                }
              schema:
                $ref: '#/components/schemas/accountErrors'
          description: No such customer
      summary: Gets a customer's account payments
      tags:
      - Accounts
      x-canReturnErrors:
      - 20401
      x-openapi-router-controller: openapi_server.controllers.accounts_controller
  /account/plusCard:
    get:
      description: Gets a customer's plus card details if they exist.
      operationId: get_plus_card_details
      parameters:
      - description: A unique identifier of your application that is generated by
          the API portal.
        in: header
        name: api_key
        required: true
        schema:
          pattern: "^[a-zA-Z0-9]{19,50}$"
          type: string
          x-eg: l7xxa54460c573b5497c9b24b505xxxxxxxx
        x-eg: l7xxa54460c573b5497c9b24b505xxxxxxxx
      - description: Another unique identifier for your application.
        in: header
        name: api_secret
        required: true
        schema:
          pattern: "^[a-zA-Z0-9]{19,50}$"
          type: string
          x-eg: 355b1e522c544222ab4ff318xxxxxxxx
        x-eg: 355b1e522c544222ab4ff318xxxxxxxx
      - description: Ticket Granting Ticket obtained from a previous request
        in: header
        name: api_ticket
        required: true
        schema:
          pattern: "^[a-zA-Z][a-zA-Z0-9-]{39,100}$"
          type: string
          x-eg: TGT-1920-Cl7l4e0hzFWK9aoKeiggDexuWcmAMf9brh6IFpVdsQxxxxxxxx-brsux349
        x-eg: TGT-1920-Cl7l4e0hzFWK9aoKeiggDexuWcmAMf9brh6IFpVdsQxxxxxxxx-brsux349
      - description: Specify an absolute field list to return (Comma-Separated List)
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-eg: extended
        style: form
        x-eg: extended
      - description: Specify fields in addition to the default to return (Comma-Separated
          List)
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
          x-eg: extended
        style: form
        x-eg: extended
      - description: Specify fields from the default to exclude (Comma-Separated List)
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
          x-eg: expiryDateTime
        style: form
        x-eg: expiryDateTime
      responses:
        "200":
          content:
            application/json:
              example: "{\n \"card\":\n {\n \"blocked\": false,\n \"cardNumber\":\
                \ \"1234123412341234\"\n },\n \"phone\":\n {\n \"phoneNumber\": \"\
                09876543210\"\n },\n \"pin\":\n {\n \"blocked\": false,\n \"attemptsRemaining\"\
                : 2\n },\n \"onlineAccount\":\n {\n \"onlineAccountNumber\": \"DF412323\"\
                ,\n \"name\": \"George Bernard Shaw\"\n }\n \"retailAccount\": \n\
                \ {\n \"selfExcluded\": true\n }\n}\n"
              schema:
                $ref: '#/components/schemas/plusCardDetails'
          description: Success - Plus Card Details
        "401":
          content:
            application/json:
              example: "{\n \"errors\" : [\n {\n \"code\":\"000000\",\n \"message\"\
                :\"Error Message Text\",\n \"field\":\"aparam\"\n }\n ]\n} \n"
              schema:
                $ref: '#/components/schemas/accountErrors'
          description: Unauthorized
        "403":
          content:
            application/json:
              example: "{\n \"errors\" : [\n {\n \"code\":\"000000\",\n \"message\"\
                :\"Error Message Text\",\n \"field\":\"aparam\"\n }\n ]\n} \n"
              schema:
                $ref: '#/components/schemas/accountErrors'
          description: Forbidden
        "404":
          content:
            application/json:
              example: |
                {
                 "errors" : [
                 {
                 "code":"10003",
                 "message":"Resource Not Found",
                 "field":"token"
                 }
                 ]
                }
              schema:
                $ref: '#/components/schemas/accountErrors'
          description: No such plus card customer
      summary: Gets a customer's plus card details if they exist.
      tags:
      - Plus Card
      - Omni
      - Wallet
      - Card Number
      x-canReturnErrors:
      - 20401
      x-openapi-router-controller: openapi_server.controllers.plus_card_controller
  /account/plusCard/lostStolen:
    post:
      description: Sets a customer's plus card as Lost/Stolen
      operationId: set_lost_stolen
      parameters:
      - description: A unique identifier of your application that is generated by
          the API portal.
        in: header
        name: api_key
        required: true
        schema:
          pattern: "^[a-zA-Z0-9]{19,50}$"
          type: string
          x-eg: l7xxa54460c573b5497c9b24b505xxxxxxxx
        x-eg: l7xxa54460c573b5497c9b24b505xxxxxxxx
      - description: Another unique identifier for your application.
        in: header
        name: api_secret
        required: true
        schema:
          pattern: "^[a-zA-Z0-9]{19,50}$"
          type: string
          x-eg: 355b1e522c544222ab4ff318xxxxxxxx
        x-eg: 355b1e522c544222ab4ff318xxxxxxxx
      - description: Ticket Granting Ticket obtained from a previous request
        in: header
        name: api_ticket
        required: true
        schema:
          pattern: "^[a-zA-Z][a-zA-Z0-9-]{39,100}$"
          type: string
          x-eg: TGT-1920-Cl7l4e0hzFWK9aoKeiggDexuWcmAMf9brh6IFpVdsQxxxxxxxx-brsux349
        x-eg: TGT-1920-Cl7l4e0hzFWK9aoKeiggDexuWcmAMf9brh6IFpVdsQxxxxxxxx-brsux349
      responses:
        "204":
          content: {}
          description: Success - Card Reported Lost / Stolen
        "401":
          content:
            application/json:
              example: "{\n \"errors\" : [\n {\n \"code\":\"000000\",\n \"message\"\
                :\"Unauthorised\"\n }\n ]\n} \n"
              schema:
                $ref: '#/components/schemas/accountErrors'
          description: Errors
        "404":
          content:
            application/json:
              example: |
                {
                 "errors" : [
                 {
                 "code":"10003",
                 "message":"Resource Not Found",
                 "field":"token"
                 }
                 ]
                }
              schema:
                $ref: '#/components/schemas/accountErrors'
          description: No such plus card customer
      summary: Sets a customer's plus card as Lost/Stolen
      tags:
      - Plus Card
      - Omni
      - Wallet
      - Card Number
      - Lost
      - Stolen
      x-canReturnErrors:
      - 20401
      x-openapi-router-controller: openapi_server.controllers.plus_card_controller
  /account/plusCard/phone/{oldPhoneNumber}:
    post:
      description: Sets a customer's plus card phone number
      operationId: set_phone_number
      parameters:
      - description: A unique identifier of your application that is generated by
          the API portal.
        in: header
        name: api_key
        required: true
        schema:
          pattern: "^[a-zA-Z0-9]{19,50}$"
          type: string
          x-eg: l7xxa54460c573b5497c9b24b505xxxxxxxx
        x-eg: l7xxa54460c573b5497c9b24b505xxxxxxxx
      - description: Another unique identifier for your application.
        in: header
        name: api_secret
        required: true
        schema:
          pattern: "^[a-zA-Z0-9]{19,50}$"
          type: string
          x-eg: 355b1e522c544222ab4ff318xxxxxxxx
        x-eg: 355b1e522c544222ab4ff318xxxxxxxx
      - description: Ticket Granting Ticket obtained from a previous request
        in: header
        name: api_ticket
        required: true
        schema:
          pattern: "^[a-zA-Z][a-zA-Z0-9-]{39,100}$"
          type: string
          x-eg: TGT-1920-Cl7l4e0hzFWK9aoKeiggDexuWcmAMf9brh6IFpVdsQxxxxxxxx-brsux349
        x-eg: TGT-1920-Cl7l4e0hzFWK9aoKeiggDexuWcmAMf9brh6IFpVdsQxxxxxxxx-brsux349
      - description: Old phone number to replace
        in: path
        name: oldPhoneNumber
        required: true
        schema:
          type: string
          x-eg: "+447870818838"
        x-eg: "+447870818838"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/phone'
        description: Phone Number to be set.
        required: true
        x-body-name: phoneNumber
      responses:
        "201":
          content: {}
          description: Success - New Phone number Created
        "401":
          content:
            application/json:
              example: "{\n \"errors\" : [\n {\n \"code\":\"000000\",\n \"message\"\
                :\"Error Message Text\",\n \"field\":\"aparam\"\n }\n ]\n} \n"
              schema:
                $ref: '#/components/schemas/accountErrors'
          description: Unauthorized
        "403":
          content:
            application/json:
              example: "{\n \"errors\" : [\n {\n \"code\":\"000000\",\n \"message\"\
                :\"Error Message Text\",\n \"field\":\"aparam\"\n }\n ]\n} \n"
              schema:
                $ref: '#/components/schemas/accountErrors'
          description: Forbidden
        "404":
          content:
            application/json:
              example: |
                {
                 "errors" : [
                 {
                 "code":"10003",
                 "message":"Resource Not Found",
                 "field":"token"
                 }
                 ]
                }
              schema:
                $ref: '#/components/schemas/accountErrors'
          description: No such plus card customer
      summary: Sets a customer's plus card phone number
      tags:
      - Plus Card
      - Omni
      - Wallet
      - Card Number
      - Phone
      x-canReturnErrors:
      - 20401
      x-codegen-request-body-name: phoneNumber
      x-openapi-router-controller: openapi_server.controllers.plus_card_controller
  /account/plusCard/pin:
    post:
      description: Sets a customer's plus card pin
      operationId: set_pin
      parameters:
      - description: A unique identifier of your application that is generated by
          the API portal.
        in: header
        name: api_key
        required: true
        schema:
          pattern: "^[a-zA-Z0-9]{19,50}$"
          type: string
          x-eg: l7xxa54460c573b5497c9b24b505xxxxxxxx
        x-eg: l7xxa54460c573b5497c9b24b505xxxxxxxx
      - description: Another unique identifier for your application.
        in: header
        name: api_secret
        required: true
        schema:
          pattern: "^[a-zA-Z0-9]{19,50}$"
          type: string
          x-eg: 355b1e522c544222ab4ff318xxxxxxxx
        x-eg: 355b1e522c544222ab4ff318xxxxxxxx
      - description: Ticket Granting Ticket obtained from a previous request
        in: header
        name: api_ticket
        required: true
        schema:
          pattern: "^[a-zA-Z][a-zA-Z0-9-]{39,100}$"
          type: string
          x-eg: TGT-1920-Cl7l4e0hzFWK9aoKeiggDexuWcmAMf9brh6IFpVdsQxxxxxxxx-brsux349
        x-eg: TGT-1920-Cl7l4e0hzFWK9aoKeiggDexuWcmAMf9brh6IFpVdsQxxxxxxxx-brsux349
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pin'
        description: PIN to be set.
        required: true
        x-body-name: pin
      responses:
        "201":
          content: {}
          description: Success - PIN Created
        "400":
          content:
            application/json:
              example: "{\n \"errors\" : [\n {\n \"code\":\"000000\",\n \"message\"\
                :\"Error Message Text\",\n \"field\":\"aparam\"\n }\n ]\n} \n"
              schema:
                $ref: '#/components/schemas/accountErrors'
          description: Errors
        "404":
          content:
            application/json:
              example: |
                {
                 "errors" : [
                 {
                 "code":"10003",
                 "message":"Resource Not Found",
                 "field":"token"
                 }
                 ]
                }
              schema:
                $ref: '#/components/schemas/accountErrors'
          description: No such plus card customer
      summary: Sets a customer's plus card pin
      tags:
      - Plus Card
      - Omni
      - Wallet
      - Card Number
      - PIN
      x-canReturnErrors:
      - 20401
      x-codegen-request-body-name: pin
      x-openapi-router-controller: openapi_server.controllers.plus_card_controller
    put:
      description: Updates a customer's plus card pin
      operationId: update_pin
      parameters:
      - description: A unique identifier of your application that is generated by
          the API portal.
        in: header
        name: api_key
        required: true
        schema:
          pattern: "^[a-zA-Z0-9]{19,50}$"
          type: string
          x-eg: l7xxa54460c573b5497c9b24b505xxxxxxxx
        x-eg: l7xxa54460c573b5497c9b24b505xxxxxxxx
      - description: Another unique identifier for your application.
        in: header
        name: api_secret
        required: true
        schema:
          pattern: "^[a-zA-Z0-9]{19,50}$"
          type: string
          x-eg: 355b1e522c544222ab4ff318xxxxxxxx
        x-eg: 355b1e522c544222ab4ff318xxxxxxxx
      - description: Ticket Granting Ticket obtained from a previous request
        in: header
        name: api_ticket
        required: true
        schema:
          pattern: "^[a-zA-Z][a-zA-Z0-9-]{39,100}$"
          type: string
          x-eg: TGT-1920-Cl7l4e0hzFWK9aoKeiggDexuWcmAMf9brh6IFpVdsQxxxxxxxx-brsux349
        x-eg: TGT-1920-Cl7l4e0hzFWK9aoKeiggDexuWcmAMf9brh6IFpVdsQxxxxxxxx-brsux349
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pin'
        description: PIN to be set.
        required: true
        x-body-name: pin
      responses:
        "204":
          content: {}
          description: Success - PIN Updated
        "400":
          content:
            application/json:
              example: "{\n \"errors\" : [\n {\n \"code\":\"000000\",\n \"message\"\
                :\"Error Message Text\",\n \"field\":\"aparam\"\n }\n ]\n} \n"
              schema:
                $ref: '#/components/schemas/accountErrors'
          description: Errors
        "404":
          content:
            application/json:
              example: |
                {
                 "errors" : [
                 {
                 "code":"10003",
                 "message":"Resource Not Found",
                 "field":"token"
                 }
                 ]
                }
              schema:
                $ref: '#/components/schemas/accountErrors'
          description: No such plus card customer
      summary: Updates a customer's plus card pin
      tags:
      - Plus Card
      - Omni
      - Wallet
      - Card Number
      - PIN
      x-canReturnErrors:
      - 20401
      x-codegen-request-body-name: pin
      x-openapi-router-controller: openapi_server.controllers.plus_card_controller
components:
  parameters:
    param_apiCountryCode:
      description: A two-character ISO 3166-1-Alpha-2 code representing the country
        API to use.
      in: header
      name: apiCountryCode
      schema:
        default: GB
        pattern: ^(GB|ES|IT)$
        type: string
        x-eg: ES
      x-eg: ES
    param_apiKey:
      description: A unique identifier of your application that is generated by the
        API portal.
      in: header
      name: apiKey
      required: true
      schema:
        pattern: "^[a-zA-Z0-9]{19,50}$"
        type: string
        x-eg: l7xxa54460c573b5497c9b24b505xxxxxxxx
      x-eg: l7xxa54460c573b5497c9b24b505xxxxxxxx
    param_apiSecret:
      description: Another unique identifier for your application.
      in: header
      name: apiSecret
      required: true
      schema:
        pattern: "^[a-zA-Z0-9]{19,50}$"
        type: string
        x-eg: 355b1e522c544222ab4ff318xxxxxxxx
      x-eg: 355b1e522c544222ab4ff318xxxxxxxx
    param_apiTicket:
      description: Ticket Granting Ticket obtained from a previous request
      in: header
      name: apiTicket
      required: true
      schema:
        pattern: "^[a-zA-Z][a-zA-Z0-9-]{39,100}$"
        type: string
        x-eg: TGT-1920-Cl7l4e0hzFWK9aoKeiggDexuWcmAMf9brh6IFpVdsQxxxxxxxx-brsux349
      x-eg: TGT-1920-Cl7l4e0hzFWK9aoKeiggDexuWcmAMf9brh6IFpVdsQxxxxxxxx-brsux349
    param_exclude:
      description: Specify fields from the default to exclude (Comma-Separated List)
      explode: false
      in: query
      name: exclude
      schema:
        items:
          type: string
        type: array
        x-eg: expiryDateTime
      style: form
      x-eg: expiryDateTime
    param_fields:
      description: Specify an absolute field list to return (Comma-Separated List)
      explode: false
      in: query
      name: fields
      schema:
        items:
          type: string
        type: array
        x-eg: extended
      style: form
      x-eg: extended
    param_fromDateTime:
      description: The FROM datetime from payments to be returned. (yyyy-MM-ddTHH:mm:ss)
      in: query
      name: dateFrom
      schema:
        pattern: "^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2})\\:(\\d{2})\\:(\\d{2})$"
        type: string
        x-eg: 2013-09-25T13:34:20+01:00
      x-eg: 2013-09-25T13:34:20+01:00
    param_include:
      description: Specify fields in addition to the default to return (Comma-Separated
        List)
      explode: false
      in: query
      name: include
      schema:
        items:
          type: string
        type: array
        x-eg: extended
      style: form
      x-eg: extended
    param_languageAsPerTerritory:
      description: "Defines response field name language, true (default) returns in\
        \ language defined by territory, false returns in English"
      in: query
      name: languageAsPerTerritory
      schema:
        default: "true"
        pattern: ^(true|false)$
        type: string
        x-eg: false
      x-eg: false
    param_oldPhoneNumber:
      description: Old phone number to replace
      in: path
      name: oldPhoneNumber
      required: true
      schema:
        type: string
        x-eg: "+447870818838"
      x-eg: "+447870818838"
    param_page:
      description: The page number to return (Used with pageSize)
      in: query
      name: page
      schema:
        default: 1.0
        pattern: "^[1-9]{1,7}$"
        type: number
        x-eg: 10
      x-eg: 10
    param_pageSize:
      description: Specify the number of results to return per page.
      in: query
      name: pageSize
      schema:
        default: 100.0
        pattern: "^[1-9]{1,7}$"
        type: number
        x-eg: 15
      x-eg: 15
    param_sort:
      description: "The order the response will be retuned by. i.e. date,desc"
      in: query
      name: sort
      schema:
        default: "date,asc"
        type: string
        x-eg: "date,desc"
      x-eg: "date,desc"
    param_territory:
      description: Territory from which request originates
      in: header
      name: territory
      schema:
        pattern: ^(COM|ES|IT)$
        type: string
        x-eg: ES
      x-eg: ES
    param_toDateTime:
      description: The TO datetime for payments to be returned. (yyyy-MM-ddTHH:mm:ss)
      in: query
      name: dateTo
      schema:
        pattern: "^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2})\\:(\\d{2})\\:(\\d{2})[+-](\\\
          d{2})\\:(\\d{2})$"
        type: string
        x-eg: 2013-09-25T13:34:20+01:00
      x-eg: 2013-09-25T13:34:20+01:00
    param_transactionFilter:
      description: Allows the user to select with they want to see withdrawls or deposits.
        If it is omitted from the query both types will be returned
      in: query
      name: transactionType
      schema:
        pattern: ^(W|D)$
        type: string
        x-eg: W
      x-eg: W
  schemas:
    accountBalance:
      example:
        availableFunds: 0.8008281904610115
        balance: 6.027456183070403
        withdrawableFunds: 1.4658129805029452
        currencyCode: currencyCode
      properties:
        availableFunds:
          description: Current available funds in this account
          title: availableFunds
          type: number
        balance:
          description: Current balance of account
          title: balance
          type: number
        currencyCode:
          description: A three-character ISO4217 currency code. This will be the currency
            that the user registered in
          title: currencyCode
          type: string
        withdrawableFunds:
          description: Current withdrawable balance of this account
          title: withdrawableFunds
          type: number
      required:
      - balance
      - currencyCode
      title: accountBalance
      type: object
    accountErrors:
      example:
        errors:
        - code: code
          field: field
          message: message
        - code: code
          field: field
          message: message
      properties:
        errors:
          items:
            $ref: '#/components/schemas/error'
          title: errors
          type: array
      title: accountErrors
      type: object
    accountFlagsSet:
      example:
        token: token
      properties:
        token:
          title: token
          type: string
      title: accountFlagsSet
      type: object
    accounts:
      example:
        country: country
        lastLogin: lastLogin
        lastName: lastName
        secondLastName: secondLastName
        accountNum: accountNum
        street3: street3
        city: city
        county: county
        flags:
        - flagReason: flagReason
          flagName: flagName
          flagValue: flagValue
        - flagReason: flagReason
          flagName: flagName
          flagValue: flagValue
        language: language
        nif: nif
        office: office
        title: title
        contactable: true
        birthPlace: birthPlace
        countryCode: countryCode
        customerId: customerId
        partnerContactable: true
        street1: street1
        street2: street2
        fax: fax
        email: email
        additionalSystemStatuses: additionalSystemStatuses
        ipAddress: ipAddress
        mobile: mobile
        postcode: postcode
        timeZone: timeZone
        accountId: accountId
        firstName: firstName
        terms and conditions: terms and conditions
        currencyCode: currencyCode
        status: status
      properties:
        accountId:
          description: Account ID
          title: accountId
          type: string
        accountNum:
          description: Account number
          title: accountNum
          type: string
        additionalSystemStatuses:
          description: Statuses of systems specific to that account - seperate from
            account status
          title: additionalSystemStatuses
          type: string
        birthPlace:
          description: "Birthplace details (city, province country code) for customer\
            \ - primaly used in italy"
          title: birthPlace
          type: string
        city:
          description: The city of the customer's address
          title: city
          type: string
        contactable:
          description: Is it okay for the bookmaker to contact the customer with marketing
            information
          title: contactable
          type: boolean
        country:
          description: The country of the customer's address
          title: country
          type: string
        countryCode:
          description: A two-character ISO 3166-1-Alpha-2 code representing the customer's
            country of registration
          title: countryCode
          type: string
        county:
          description: The county of the customer's address
          title: county
          type: string
        currencyCode:
          description: A three-character ISO4217 currency code. This will be the currency
            that the customer registered in
          title: currencyCode
          type: string
        customerId:
          description: Customer ID
          title: customerId
          type: string
        email:
          description: The primary email address of the customer with that account.
            Must be unique.
          title: email
          type: string
        fax:
          description: The fax number of the customer
          title: fax
          type: string
        firstName:
          description: The first name of the customer with that account
          title: firstName
          type: string
        flags:
          items:
            $ref: '#/components/schemas/flags_inner'
          title: flags
          type: array
        ipAddress:
          description: Registered ip address of user
          title: ipAddress
          type: string
        language:
          description: The registered language of the customer
          title: language
          type: string
        lastLogin:
          description: The last time customer logged in - mandatory in italy - available
            if populated in other territories
          title: lastLogin
          type: string
        lastName:
          description: The last name of the customer with that account
          title: lastName
          type: string
        mobile:
          description: The mobile number of the customer with that account
          title: mobile
          type: string
        nif:
          description: The national identifcation number of the customer (italy only
            - mandatory response field)
          title: nif
          type: string
        office:
          description: Office phone number of customer
          title: office
          type: string
        partnerContactable:
          description: Is it okay for the bookmaker to give the user's contact details
            to companies with which it has partnerships
          title: partnerContactable
          type: boolean
        postcode:
          description: The postCode of the customer's address
          title: postcode
          type: string
        secondLastName:
          description: The second last name of the customer with that account - primarily
            used in Spanish territory
          title: secondLastName
          type: string
        status:
          description: Account status
          title: status
          type: string
        street1:
          description: Line number 1 of the customer's street address written out
            in full
          title: street1
          type: string
        street2:
          description: Line number 2 of the customer's street address written out
            in full
          title: street2
          type: string
        street3:
          description: Line number 3 of the customer's street address written out
            in full
          title: street3
          type: string
        terms and conditions:
          description: name and url location of terms and conditions applicable to
            this account
          title: terms and conditions
          type: string
        timeZone:
          description: The primary time zone for the customer
          title: timeZone
          type: string
        title:
          description: The title of the name of the customer with that account
          title: title
          type: string
      required:
      - accountNum
      - firstName
      - lastName
      - secondLastName
      - status
      title: accounts
      type: object
    error:
      example:
        code: code
        field: field
        message: message
      properties:
        code:
          description: A unique William Hill identifier for the error
          title: code
          type: string
        field:
          description: To help pinpoint the exact parameter where a request has failed
          title: field
          type: string
        message:
          description: A unique William Hill text string to enable you to identify
            the error (in English only)
          title: message
          type: string
      title: error
      type: object
    flags:
      items:
        $ref: '#/components/schemas/flags_inner'
      title: flags
      type: array
    getPayments:
      example:
        payments:
        - amount: 0.8008281904610115
          channel: channel
          ipAddress: ipAddress
          action: action
          methodId: methodId
          id: id
          paymentDateTime: paymentDateTime
          commision: 6.027456183070403
          type: type
          status: status
        - amount: 0.8008281904610115
          channel: channel
          ipAddress: ipAddress
          action: action
          methodId: methodId
          id: id
          paymentDateTime: paymentDateTime
          commision: 6.027456183070403
          type: type
          status: status
      properties:
        payments:
          items:
            $ref: '#/components/schemas/payment'
          title: payments
          type: array
      title: getPayments
      type: object
    onlineAccount:
      description: Online Account
      example:
        name: name
        onlineAccountNumber: onlineAccountNumber
      properties:
        name:
          title: name
          type: string
          x-eg: George Bernard Shaw
        onlineAccountNumber:
          title: onlineAccountNumber
          type: string
          x-eg: DF412323
      title: onlineAccount
      type: object
    payment:
      example:
        amount: 0.8008281904610115
        channel: channel
        ipAddress: ipAddress
        action: action
        methodId: methodId
        id: id
        paymentDateTime: paymentDateTime
        commision: 6.027456183070403
        type: type
        status: status
      properties:
        action:
          description: "Action of the payment (D = Deposit, W = withdrawal)"
          pattern: (D|W)
          title: action
          type: string
        amount:
          description: The amount of the payment
          title: amount
          type: number
        channel:
          description: The channel through which the payment was made
          title: channel
          type: string
        commision:
          description: The commision for the payment
          title: commision
          type: number
        id:
          description: ID of the payment
          title: id
          type: string
        ipAddress:
          description: The IP address from which the payment was made
          title: ipAddress
          type: string
        methodId:
          description: ID of the payment method
          title: methodId
          type: string
        paymentDateTime:
          description: The date and time when the payment was made
          title: paymentDateTime
          type: string
        status:
          description: The status of the payment
          title: status
          type: string
        type:
          description: Type of the payment
          pattern: "([A-Za-z]*)"
          title: type
          type: string
      required:
      - action
      - amount
      - id
      - paymentDateTime
      - status
      title: payment
      type: object
    phone:
      description: Phone Number
      example:
        phoneNumber: phoneNumber
      properties:
        phoneNumber:
          title: phoneNumber
          type: string
          x-eg: "09876543210"
      title: phone
      type: object
    pin:
      pattern: "[0-9]{4}"
      type: number
      x-eg: 1234
    pinStatus:
      description: PIN object - if this object is not returned in plusCardDetails
        object then it has not been set.
      example:
        blocked: true
        attemptsRemaining: 0.8008281904610115
      properties:
        attemptsRemaining:
          title: attemptsRemaining
          type: number
        blocked:
          title: blocked
          type: boolean
      title: pinStatus
      type: object
    plusCard:
      description: Plus Card
      example:
        blocked: true
        cardNumber: cardNumber
      properties:
        blocked:
          title: blocked
          type: boolean
        cardNumber:
          title: cardNumber
          type: string
      title: plusCard
      type: object
    plusCardDetails:
      description: Plus Card Details and linked accounts
      example:
        onlineAccount:
          name: name
          onlineAccountNumber: onlineAccountNumber
        pin:
          blocked: true
          attemptsRemaining: 0.8008281904610115
        phone:
          phoneNumber: phoneNumber
        retailAccount:
          selfExcluded: true
        card:
          blocked: true
          cardNumber: cardNumber
      properties:
        card:
          $ref: '#/components/schemas/plusCard'
        onlineAccount:
          $ref: '#/components/schemas/onlineAccount'
        phone:
          $ref: '#/components/schemas/phone'
        pin:
          $ref: '#/components/schemas/pinStatus'
        retailAccount:
          $ref: '#/components/schemas/retailAccount'
      title: plusCardDetails
      type: object
    retailAccount:
      description: Retail Account
      example:
        selfExcluded: true
      properties:
        selfExcluded:
          title: selfExcluded
          type: boolean
      title: retailAccount
      type: object
    flags_inner:
      example:
        flagReason: flagReason
        flagName: flagName
        flagValue: flagValue
      properties:
        flagName:
          description: Name of the flag to set.
          title: flagName
          type: string
        flagReason:
          description: The reason that the flag has been set.
          title: flagReason
          type: string
        flagValue:
          description: Value to set the flag to.
          title: flagValue
          type: string
      required:
      - flagName
      - flagValue
      title: flags_inner
      type: object
x-customerrors:
- code: 20401
  message: Account details are not available for temporary accounts
  status: 400
- code: 20402
  message: Account status not available
  status: 404
x-docchapters:
- fieldSelection
- apiSummary
- headAndOptions
- docsAndSdks
- errorHandling
- statusCodes
x-original-swagger-version: "2.0"
