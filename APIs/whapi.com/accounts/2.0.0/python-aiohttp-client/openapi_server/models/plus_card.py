# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PlusCard(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, blocked: bool=None, card_number: str=None):
        """PlusCard - a model defined in OpenAPI

        :param blocked: The blocked of this PlusCard.
        :param card_number: The card_number of this PlusCard.
        """
        self.openapi_types = {
            'blocked': bool,
            'card_number': str
        }

        self.attribute_map = {
            'blocked': 'blocked',
            'card_number': 'cardNumber'
        }

        self._blocked = blocked
        self._card_number = card_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PlusCard':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The plusCard of this PlusCard.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def blocked(self):
        """Gets the blocked of this PlusCard.


        :return: The blocked of this PlusCard.
        :rtype: bool
        """
        return self._blocked

    @blocked.setter
    def blocked(self, blocked):
        """Sets the blocked of this PlusCard.


        :param blocked: The blocked of this PlusCard.
        :type blocked: bool
        """

        self._blocked = blocked

    @property
    def card_number(self):
        """Gets the card_number of this PlusCard.


        :return: The card_number of this PlusCard.
        :rtype: str
        """
        return self._card_number

    @card_number.setter
    def card_number(self, card_number):
        """Sets the card_number of this PlusCard.


        :param card_number: The card_number of this PlusCard.
        :type card_number: str
        """

        self._card_number = card_number
