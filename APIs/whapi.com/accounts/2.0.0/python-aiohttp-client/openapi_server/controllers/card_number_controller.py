from typing import List, Dict
from aiohttp import web

from openapi_server.models.account_errors import AccountErrors
from openapi_server.models.phone import Phone
from openapi_server.models.plus_card_details import PlusCardDetails
from openapi_server import util


async def get_plus_card_details_2(request: web.Request, api_key, api_secret, api_ticket, fields=None, include=None, exclude=None) -> web.Response:
    """Gets a customer&#39;s plus card details if they exist.

    Gets a customer&#39;s plus card details if they exist.

    :param api_key: A unique identifier of your application that is generated by the API portal.
    :type api_key: str
    :param api_secret: Another unique identifier for your application.
    :type api_secret: str
    :param api_ticket: Ticket Granting Ticket obtained from a previous request
    :type api_ticket: str
    :param fields: Specify an absolute field list to return (Comma-Separated List)
    :type fields: List[str]
    :param include: Specify fields in addition to the default to return (Comma-Separated List)
    :type include: List[str]
    :param exclude: Specify fields from the default to exclude (Comma-Separated List)
    :type exclude: List[str]

    """
    return web.Response(status=200)


async def set_lost_stolen_2(request: web.Request, api_key, api_secret, api_ticket) -> web.Response:
    """Sets a customer&#39;s plus card as Lost/Stolen

    Sets a customer&#39;s plus card as Lost/Stolen

    :param api_key: A unique identifier of your application that is generated by the API portal.
    :type api_key: str
    :param api_secret: Another unique identifier for your application.
    :type api_secret: str
    :param api_ticket: Ticket Granting Ticket obtained from a previous request
    :type api_ticket: str

    """
    return web.Response(status=200)


async def set_phone_number_2(request: web.Request, api_key, api_secret, api_ticket, old_phone_number, phone_number) -> web.Response:
    """Sets a customer&#39;s plus card phone number

    Sets a customer&#39;s plus card phone number

    :param api_key: A unique identifier of your application that is generated by the API portal.
    :type api_key: str
    :param api_secret: Another unique identifier for your application.
    :type api_secret: str
    :param api_ticket: Ticket Granting Ticket obtained from a previous request
    :type api_ticket: str
    :param old_phone_number: Old phone number to replace
    :type old_phone_number: str
    :param phone_number: Phone Number to be set.
    :type phone_number: dict | bytes

    """
    phone_number = Phone.from_dict(phone_number)
    return web.Response(status=200)


async def set_pin_2(request: web.Request, api_key, api_secret, api_ticket, pin) -> web.Response:
    """Sets a customer&#39;s plus card pin

    Sets a customer&#39;s plus card pin

    :param api_key: A unique identifier of your application that is generated by the API portal.
    :type api_key: str
    :param api_secret: Another unique identifier for your application.
    :type api_secret: str
    :param api_ticket: Ticket Granting Ticket obtained from a previous request
    :type api_ticket: str
    :param pin: PIN to be set.
    :type pin: 

    """
    return web.Response(status=200)


async def update_pin_2(request: web.Request, api_key, api_secret, api_ticket, pin) -> web.Response:
    """Updates a customer&#39;s plus card pin

    Updates a customer&#39;s plus card pin

    :param api_key: A unique identifier of your application that is generated by the API portal.
    :type api_key: str
    :param api_secret: Another unique identifier for your application.
    :type api_secret: str
    :param api_ticket: Ticket Granting Ticket obtained from a previous request
    :type api_ticket: str
    :param pin: PIN to be set.
    :type pin: 

    """
    return web.Response(status=200)
