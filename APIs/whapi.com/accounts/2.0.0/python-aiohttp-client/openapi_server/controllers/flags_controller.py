from typing import List, Dict
from aiohttp import web

from openapi_server.models.account_errors import AccountErrors
from openapi_server.models.account_flags_set import AccountFlagsSet
from openapi_server.models.flags_inner import FlagsInner
from openapi_server import util


async def set_account_flags(request: web.Request, api_key, api_secret, api_ticket, flags, api_country_code=None, territory=None, language_as_per_territory=None) -> web.Response:
    """Sets a flag based on name to value provided for the user.

    Sets a flag based on name to value provided for the user.

    :param api_key: A unique identifier of your application that is generated by the API portal.
    :type api_key: str
    :param api_secret: Another unique identifier for your application.
    :type api_secret: str
    :param api_ticket: Ticket Granting Ticket obtained from a previous request
    :type api_ticket: str
    :param flags: Array of KVP for setting flags.
    :type flags: list | bytes
    :param api_country_code: A two-character ISO 3166-1-Alpha-2 code representing the country API to use.
    :type api_country_code: str
    :param territory: Territory from which request originates
    :type territory: str
    :param language_as_per_territory: Defines response field name language, true (default) returns in language defined by territory, false returns in English
    :type language_as_per_territory: str

    """
    flags = [FlagsInner.from_dict(d) for d in flags]
    return web.Response(status=200)
