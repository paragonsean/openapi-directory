from typing import List, Dict
from aiohttp import web

from openapi_server.models.account_balance import AccountBalance
from openapi_server.models.account_errors import AccountErrors
from openapi_server.models.accounts import Accounts
from openapi_server.models.get_payments import GetPayments
from openapi_server import util


async def get_balance(request: web.Request, api_key, api_secret, api_ticket, fields=None, include=None, exclude=None, territory=None, language_as_per_territory=None) -> web.Response:
    """Get a customers account balance

    This method can be used to retrieve the customer’s account balance in UK Sterling.

    :param api_key: A unique identifier of your application that is generated by the API portal.
    :type api_key: str
    :param api_secret: Another unique identifier for your application.
    :type api_secret: str
    :param api_ticket: Ticket Granting Ticket obtained from a previous request
    :type api_ticket: str
    :param fields: Specify an absolute field list to return (Comma-Separated List)
    :type fields: List[str]
    :param include: Specify fields in addition to the default to return (Comma-Separated List)
    :type include: List[str]
    :param exclude: Specify fields from the default to exclude (Comma-Separated List)
    :type exclude: List[str]
    :param territory: Territory from which request originates
    :type territory: str
    :param language_as_per_territory: Defines response field name language, true (default) returns in language defined by territory, false returns in English
    :type language_as_per_territory: str

    """
    return web.Response(status=200)


async def get_details(request: web.Request, api_key, api_secret, api_ticket, fields=None, include=None, exclude=None, territory=None, language_as_per_territory=None) -> web.Response:
    """Retrieves details of a customers account

    Retrieves a limited set of customer account details. For security purposes, only a subset is supplied, which does not include fields such as security questions and answers. argFileDR1.properties argFileDR2.properties argFileGIB1.properties argFileGIB2.properties argFileGIB3.properties argFileGIB4.properties argFilePP1.properties argFilePP2.properties argFilePP3.properties argFile.properties argFilePT1.properties argFilePTE.properties argFileSCC1.properties argFileSCC2.properties argFileSCC3.properties argFileSTG.properties argFileSYS.properties CWP GatewayMigrationUtility-1.4.00-85 GatewayMigrationUtility.jar GatewayMigrationUtility.sh gmu.log inputFile.xml lib logs migratePolicy.sh migratev2CWP.sh migratev2Policy.sh retrieveCWP.sh retrievePolicy.sh updateCWP.sh updatePolicyById.sh updatePolicy.sh returned by default, others need to be selected. argFileDR1.properties argFileDR2.properties argFileGIB1.properties argFileGIB2.properties argFileGIB3.properties argFileGIB4.properties argFilePP1.properties argFilePP2.properties argFilePP3.properties argFile.properties argFilePT1.properties argFilePTE.properties argFileSCC1.properties argFileSCC2.properties argFileSCC3.properties argFileSTG.properties argFileSYS.properties CWP GatewayMigrationUtility-1.4.00-85 GatewayMigrationUtility.jar GatewayMigrationUtility.sh gmu.log inputFile.xml lib logs migratePolicy.sh migratev2CWP.sh migratev2Policy.sh retrieveCWP.sh retrievePolicy.sh updateCWP.sh updatePolicyById.sh updatePolicy.sh returned by default only in italian region.

    :param api_key: A unique identifier of your application that is generated by the API portal.
    :type api_key: str
    :param api_secret: Another unique identifier for your application.
    :type api_secret: str
    :param api_ticket: Ticket Granting Ticket obtained from a previous request
    :type api_ticket: str
    :param fields: Specify an absolute field list to return (Comma-Separated List)
    :type fields: List[str]
    :param include: Specify fields in addition to the default to return (Comma-Separated List)
    :type include: List[str]
    :param exclude: Specify fields from the default to exclude (Comma-Separated List)
    :type exclude: List[str]
    :param territory: Territory from which request originates
    :type territory: str
    :param language_as_per_territory: Defines response field name language, true (default) returns in language defined by territory, false returns in English
    :type language_as_per_territory: str

    """
    return web.Response(status=200)


async def get_payments(request: web.Request, api_key, api_secret, api_ticket, page=None, page_size=None, date_from=None, date_to=None, sort=None, transaction_type=None, fields=None, include=None, exclude=None, territory=None, language_as_per_territory=None) -> web.Response:
    """Gets a customer&#39;s account payments

    Retrieves the customer’s account payments in UK Sterling.

    :param api_key: A unique identifier of your application that is generated by the API portal.
    :type api_key: str
    :param api_secret: Another unique identifier for your application.
    :type api_secret: str
    :param api_ticket: Ticket Granting Ticket obtained from a previous request
    :type api_ticket: str
    :param page: The page number to return (Used with pageSize)
    :type page: 
    :param page_size: Specify the number of results to return per page.
    :type page_size: 
    :param date_from: The FROM datetime from payments to be returned. (yyyy-MM-ddTHH:mm:ss)
    :type date_from: str
    :param date_to: The TO datetime for payments to be returned. (yyyy-MM-ddTHH:mm:ss)
    :type date_to: str
    :param sort: The order the response will be retuned by. i.e. date,desc
    :type sort: str
    :param transaction_type: Allows the user to select with they want to see withdrawls or deposits. If it is omitted from the query both types will be returned
    :type transaction_type: str
    :param fields: Specify an absolute field list to return (Comma-Separated List)
    :type fields: List[str]
    :param include: Specify fields in addition to the default to return (Comma-Separated List)
    :type include: List[str]
    :param exclude: Specify fields from the default to exclude (Comma-Separated List)
    :type exclude: List[str]
    :param territory: Territory from which request originates
    :type territory: str
    :param language_as_per_territory: Defines response field name language, true (default) returns in language defined by territory, false returns in English
    :type language_as_per_territory: str

    """
    return web.Response(status=200)
