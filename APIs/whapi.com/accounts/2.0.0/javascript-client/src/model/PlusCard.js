/**
 * Accounts API
 * The Accounts API is a collection of methods used to query a customer account. It allows the developer to retrieve account-related data such as the user account balance. It should be noted that regional variations may exist - so some fields may not be returned for certain territories.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: platform@williamhill.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PlusCard model module.
 * @module model/PlusCard
 * @version 2.0.0
 */
class PlusCard {
    /**
     * Constructs a new <code>PlusCard</code>.
     * Plus Card
     * @alias module:model/PlusCard
     */
    constructor() { 
        
        PlusCard.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PlusCard</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PlusCard} obj Optional instance to populate.
     * @return {module:model/PlusCard} The populated <code>PlusCard</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PlusCard();

            if (data.hasOwnProperty('blocked')) {
                obj['blocked'] = ApiClient.convertToType(data['blocked'], 'Boolean');
            }
            if (data.hasOwnProperty('cardNumber')) {
                obj['cardNumber'] = ApiClient.convertToType(data['cardNumber'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PlusCard</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PlusCard</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['cardNumber'] && !(typeof data['cardNumber'] === 'string' || data['cardNumber'] instanceof String)) {
            throw new Error("Expected the field `cardNumber` to be a primitive type in the JSON string but got " + data['cardNumber']);
        }

        return true;
    }


}



/**
 * @member {Boolean} blocked
 */
PlusCard.prototype['blocked'] = undefined;

/**
 * @member {String} cardNumber
 */
PlusCard.prototype['cardNumber'] = undefined;






export default PlusCard;

