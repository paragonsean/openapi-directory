/**
 * Accounts API
 * The Accounts API is a collection of methods used to query a customer account. It allows the developer to retrieve account-related data such as the user account balance. It should be noted that regional variations may exist - so some fields may not be returned for certain territories.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: platform@williamhill.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AccountsApi);
  }
}(this, function(expect, AccountsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AccountsApi.Accounts();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Accounts', function() {
    it('should create an instance of Accounts', function() {
      // uncomment below and update the code to test Accounts
      //var instance = new AccountsApi.Accounts();
      //expect(instance).to.be.a(AccountsApi.Accounts);
    });

    it('should have the property accountId (base name: "accountId")', function() {
      // uncomment below and update the code to test the property accountId
      //var instance = new AccountsApi.Accounts();
      //expect(instance).to.be();
    });

    it('should have the property accountNum (base name: "accountNum")', function() {
      // uncomment below and update the code to test the property accountNum
      //var instance = new AccountsApi.Accounts();
      //expect(instance).to.be();
    });

    it('should have the property additionalSystemStatuses (base name: "additionalSystemStatuses")', function() {
      // uncomment below and update the code to test the property additionalSystemStatuses
      //var instance = new AccountsApi.Accounts();
      //expect(instance).to.be();
    });

    it('should have the property birthPlace (base name: "birthPlace")', function() {
      // uncomment below and update the code to test the property birthPlace
      //var instance = new AccountsApi.Accounts();
      //expect(instance).to.be();
    });

    it('should have the property city (base name: "city")', function() {
      // uncomment below and update the code to test the property city
      //var instance = new AccountsApi.Accounts();
      //expect(instance).to.be();
    });

    it('should have the property contactable (base name: "contactable")', function() {
      // uncomment below and update the code to test the property contactable
      //var instance = new AccountsApi.Accounts();
      //expect(instance).to.be();
    });

    it('should have the property country (base name: "country")', function() {
      // uncomment below and update the code to test the property country
      //var instance = new AccountsApi.Accounts();
      //expect(instance).to.be();
    });

    it('should have the property countryCode (base name: "countryCode")', function() {
      // uncomment below and update the code to test the property countryCode
      //var instance = new AccountsApi.Accounts();
      //expect(instance).to.be();
    });

    it('should have the property county (base name: "county")', function() {
      // uncomment below and update the code to test the property county
      //var instance = new AccountsApi.Accounts();
      //expect(instance).to.be();
    });

    it('should have the property currencyCode (base name: "currencyCode")', function() {
      // uncomment below and update the code to test the property currencyCode
      //var instance = new AccountsApi.Accounts();
      //expect(instance).to.be();
    });

    it('should have the property customerId (base name: "customerId")', function() {
      // uncomment below and update the code to test the property customerId
      //var instance = new AccountsApi.Accounts();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new AccountsApi.Accounts();
      //expect(instance).to.be();
    });

    it('should have the property fax (base name: "fax")', function() {
      // uncomment below and update the code to test the property fax
      //var instance = new AccountsApi.Accounts();
      //expect(instance).to.be();
    });

    it('should have the property firstName (base name: "firstName")', function() {
      // uncomment below and update the code to test the property firstName
      //var instance = new AccountsApi.Accounts();
      //expect(instance).to.be();
    });

    it('should have the property flags (base name: "flags")', function() {
      // uncomment below and update the code to test the property flags
      //var instance = new AccountsApi.Accounts();
      //expect(instance).to.be();
    });

    it('should have the property ipAddress (base name: "ipAddress")', function() {
      // uncomment below and update the code to test the property ipAddress
      //var instance = new AccountsApi.Accounts();
      //expect(instance).to.be();
    });

    it('should have the property language (base name: "language")', function() {
      // uncomment below and update the code to test the property language
      //var instance = new AccountsApi.Accounts();
      //expect(instance).to.be();
    });

    it('should have the property lastLogin (base name: "lastLogin")', function() {
      // uncomment below and update the code to test the property lastLogin
      //var instance = new AccountsApi.Accounts();
      //expect(instance).to.be();
    });

    it('should have the property lastName (base name: "lastName")', function() {
      // uncomment below and update the code to test the property lastName
      //var instance = new AccountsApi.Accounts();
      //expect(instance).to.be();
    });

    it('should have the property mobile (base name: "mobile")', function() {
      // uncomment below and update the code to test the property mobile
      //var instance = new AccountsApi.Accounts();
      //expect(instance).to.be();
    });

    it('should have the property nif (base name: "nif")', function() {
      // uncomment below and update the code to test the property nif
      //var instance = new AccountsApi.Accounts();
      //expect(instance).to.be();
    });

    it('should have the property office (base name: "office")', function() {
      // uncomment below and update the code to test the property office
      //var instance = new AccountsApi.Accounts();
      //expect(instance).to.be();
    });

    it('should have the property partnerContactable (base name: "partnerContactable")', function() {
      // uncomment below and update the code to test the property partnerContactable
      //var instance = new AccountsApi.Accounts();
      //expect(instance).to.be();
    });

    it('should have the property postcode (base name: "postcode")', function() {
      // uncomment below and update the code to test the property postcode
      //var instance = new AccountsApi.Accounts();
      //expect(instance).to.be();
    });

    it('should have the property secondLastName (base name: "secondLastName")', function() {
      // uncomment below and update the code to test the property secondLastName
      //var instance = new AccountsApi.Accounts();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new AccountsApi.Accounts();
      //expect(instance).to.be();
    });

    it('should have the property street1 (base name: "street1")', function() {
      // uncomment below and update the code to test the property street1
      //var instance = new AccountsApi.Accounts();
      //expect(instance).to.be();
    });

    it('should have the property street2 (base name: "street2")', function() {
      // uncomment below and update the code to test the property street2
      //var instance = new AccountsApi.Accounts();
      //expect(instance).to.be();
    });

    it('should have the property street3 (base name: "street3")', function() {
      // uncomment below and update the code to test the property street3
      //var instance = new AccountsApi.Accounts();
      //expect(instance).to.be();
    });

    it('should have the property termsAndConditions (base name: "terms and conditions")', function() {
      // uncomment below and update the code to test the property termsAndConditions
      //var instance = new AccountsApi.Accounts();
      //expect(instance).to.be();
    });

    it('should have the property timeZone (base name: "timeZone")', function() {
      // uncomment below and update the code to test the property timeZone
      //var instance = new AccountsApi.Accounts();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new AccountsApi.Accounts();
      //expect(instance).to.be();
    });

  });

}));
