/**
 * Accounts API
 * The Accounts API is a collection of methods used to query a customer account. It allows the developer to retrieve account-related data such as the user account balance. It should be noted that regional variations may exist - so some fields may not be returned for certain territories.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: platform@williamhill.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPlusCardDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPlusCardDetails::OAIPlusCardDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPlusCardDetails::OAIPlusCardDetails() {
    this->initializeModel();
}

OAIPlusCardDetails::~OAIPlusCardDetails() {}

void OAIPlusCardDetails::initializeModel() {

    m_card_isSet = false;
    m_card_isValid = false;

    m_online_account_isSet = false;
    m_online_account_isValid = false;

    m_phone_isSet = false;
    m_phone_isValid = false;

    m_pin_isSet = false;
    m_pin_isValid = false;

    m_retail_account_isSet = false;
    m_retail_account_isValid = false;
}

void OAIPlusCardDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPlusCardDetails::fromJsonObject(QJsonObject json) {

    m_card_isValid = ::OpenAPI::fromJsonValue(m_card, json[QString("card")]);
    m_card_isSet = !json[QString("card")].isNull() && m_card_isValid;

    m_online_account_isValid = ::OpenAPI::fromJsonValue(m_online_account, json[QString("onlineAccount")]);
    m_online_account_isSet = !json[QString("onlineAccount")].isNull() && m_online_account_isValid;

    m_phone_isValid = ::OpenAPI::fromJsonValue(m_phone, json[QString("phone")]);
    m_phone_isSet = !json[QString("phone")].isNull() && m_phone_isValid;

    m_pin_isValid = ::OpenAPI::fromJsonValue(m_pin, json[QString("pin")]);
    m_pin_isSet = !json[QString("pin")].isNull() && m_pin_isValid;

    m_retail_account_isValid = ::OpenAPI::fromJsonValue(m_retail_account, json[QString("retailAccount")]);
    m_retail_account_isSet = !json[QString("retailAccount")].isNull() && m_retail_account_isValid;
}

QString OAIPlusCardDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPlusCardDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_card.isSet()) {
        obj.insert(QString("card"), ::OpenAPI::toJsonValue(m_card));
    }
    if (m_online_account.isSet()) {
        obj.insert(QString("onlineAccount"), ::OpenAPI::toJsonValue(m_online_account));
    }
    if (m_phone.isSet()) {
        obj.insert(QString("phone"), ::OpenAPI::toJsonValue(m_phone));
    }
    if (m_pin.isSet()) {
        obj.insert(QString("pin"), ::OpenAPI::toJsonValue(m_pin));
    }
    if (m_retail_account.isSet()) {
        obj.insert(QString("retailAccount"), ::OpenAPI::toJsonValue(m_retail_account));
    }
    return obj;
}

OAIPlusCard OAIPlusCardDetails::getCard() const {
    return m_card;
}
void OAIPlusCardDetails::setCard(const OAIPlusCard &card) {
    m_card = card;
    m_card_isSet = true;
}

bool OAIPlusCardDetails::is_card_Set() const{
    return m_card_isSet;
}

bool OAIPlusCardDetails::is_card_Valid() const{
    return m_card_isValid;
}

OAIOnlineAccount OAIPlusCardDetails::getOnlineAccount() const {
    return m_online_account;
}
void OAIPlusCardDetails::setOnlineAccount(const OAIOnlineAccount &online_account) {
    m_online_account = online_account;
    m_online_account_isSet = true;
}

bool OAIPlusCardDetails::is_online_account_Set() const{
    return m_online_account_isSet;
}

bool OAIPlusCardDetails::is_online_account_Valid() const{
    return m_online_account_isValid;
}

OAIPhone OAIPlusCardDetails::getPhone() const {
    return m_phone;
}
void OAIPlusCardDetails::setPhone(const OAIPhone &phone) {
    m_phone = phone;
    m_phone_isSet = true;
}

bool OAIPlusCardDetails::is_phone_Set() const{
    return m_phone_isSet;
}

bool OAIPlusCardDetails::is_phone_Valid() const{
    return m_phone_isValid;
}

OAIPinStatus OAIPlusCardDetails::getPin() const {
    return m_pin;
}
void OAIPlusCardDetails::setPin(const OAIPinStatus &pin) {
    m_pin = pin;
    m_pin_isSet = true;
}

bool OAIPlusCardDetails::is_pin_Set() const{
    return m_pin_isSet;
}

bool OAIPlusCardDetails::is_pin_Valid() const{
    return m_pin_isValid;
}

OAIRetailAccount OAIPlusCardDetails::getRetailAccount() const {
    return m_retail_account;
}
void OAIPlusCardDetails::setRetailAccount(const OAIRetailAccount &retail_account) {
    m_retail_account = retail_account;
    m_retail_account_isSet = true;
}

bool OAIPlusCardDetails::is_retail_account_Set() const{
    return m_retail_account_isSet;
}

bool OAIPlusCardDetails::is_retail_account_Valid() const{
    return m_retail_account_isValid;
}

bool OAIPlusCardDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_card.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_online_account.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_pin.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_retail_account.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPlusCardDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
