# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.model_class import ModelClass
from openapi_server import util


class ClassesWrapper(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, classes: List[ModelClass]=None):
        """ClassesWrapper - a model defined in OpenAPI

        :param classes: The classes of this ClassesWrapper.
        """
        self.openapi_types = {
            'classes': List[ModelClass]
        }

        self.attribute_map = {
            'classes': 'classes'
        }

        self._classes = classes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClassesWrapper':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The classesWrapper of this ClassesWrapper.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def classes(self):
        """Gets the classes of this ClassesWrapper.


        :return: The classes of this ClassesWrapper.
        :rtype: List[ModelClass]
        """
        return self._classes

    @classes.setter
    def classes(self, classes):
        """Sets the classes of this ClassesWrapper.


        :param classes: The classes of this ClassesWrapper.
        :type classes: List[ModelClass]
        """

        self._classes = classes
