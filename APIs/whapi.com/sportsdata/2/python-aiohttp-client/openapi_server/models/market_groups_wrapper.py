# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.marketgroup import Marketgroup
from openapi_server import util


class MarketGroupsWrapper(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, market_groups: List[Marketgroup]=None):
        """MarketGroupsWrapper - a model defined in OpenAPI

        :param market_groups: The market_groups of this MarketGroupsWrapper.
        """
        self.openapi_types = {
            'market_groups': List[Marketgroup]
        }

        self.attribute_map = {
            'market_groups': 'marketGroups'
        }

        self._market_groups = market_groups

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MarketGroupsWrapper':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The marketGroupsWrapper of this MarketGroupsWrapper.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def market_groups(self):
        """Gets the market_groups of this MarketGroupsWrapper.


        :return: The market_groups of this MarketGroupsWrapper.
        :rtype: List[Marketgroup]
        """
        return self._market_groups

    @market_groups.setter
    def market_groups(self, market_groups):
        """Sets the market_groups of this MarketGroupsWrapper.


        :param market_groups: The market_groups of this MarketGroupsWrapper.
        :type market_groups: List[Marketgroup]
        """

        self._market_groups = market_groups
