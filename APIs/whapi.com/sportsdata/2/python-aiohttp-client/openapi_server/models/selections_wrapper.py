# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.selection import Selection
from openapi_server import util


class SelectionsWrapper(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, selections: List[Selection]=None):
        """SelectionsWrapper - a model defined in OpenAPI

        :param selections: The selections of this SelectionsWrapper.
        """
        self.openapi_types = {
            'selections': List[Selection]
        }

        self.attribute_map = {
            'selections': 'selections'
        }

        self._selections = selections

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SelectionsWrapper':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The selectionsWrapper of this SelectionsWrapper.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def selections(self):
        """Gets the selections of this SelectionsWrapper.


        :return: The selections of this SelectionsWrapper.
        :rtype: List[Selection]
        """
        return self._selections

    @selections.setter
    def selections(self, selections):
        """Sets the selections of this SelectionsWrapper.


        :param selections: The selections of this SelectionsWrapper.
        :type selections: List[Selection]
        """

        self._selections = selections
