# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.top_bet import TopBet
from openapi_server import util


class TopBetsWrapper(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bets: List[TopBet]=None):
        """TopBetsWrapper - a model defined in OpenAPI

        :param bets: The bets of this TopBetsWrapper.
        """
        self.openapi_types = {
            'bets': List[TopBet]
        }

        self.attribute_map = {
            'bets': 'bets'
        }

        self._bets = bets

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TopBetsWrapper':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The topBetsWrapper of this TopBetsWrapper.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bets(self):
        """Gets the bets of this TopBetsWrapper.


        :return: The bets of this TopBetsWrapper.
        :rtype: List[TopBet]
        """
        return self._bets

    @bets.setter
    def bets(self, bets):
        """Sets the bets of this TopBetsWrapper.


        :param bets: The bets of this TopBetsWrapper.
        :type bets: List[TopBet]
        """

        self._bets = bets
