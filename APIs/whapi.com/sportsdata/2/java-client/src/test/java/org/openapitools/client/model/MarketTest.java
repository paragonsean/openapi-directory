/*
 * SportsData API
 * The William Hill SportsData REST API is a collection of GET methods to provide William Hill product data such as sport, competition, event, market and selection data (including prices).
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Selection;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Market
 */
public class MarketTest {
    private final Market model = new Market();

    /**
     * Model tests for Market
     */
    @Test
    public void testMarket() {
        // TODO: test Market
    }

    /**
     * Test the property 'antepostMarket'
     */
    @Test
    public void antepostMarketTest() {
        // TODO: test antepostMarket
    }

    /**
     * Test the property 'bestOddsGuaranteed'
     */
    @Test
    public void bestOddsGuaranteedTest() {
        // TODO: test bestOddsGuaranteed
    }

    /**
     * Test the property 'betInRunningDelay'
     */
    @Test
    public void betInRunningDelayTest() {
        // TODO: test betInRunningDelay
    }

    /**
     * Test the property 'channels'
     */
    @Test
    public void channelsTest() {
        // TODO: test channels
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'displayed'
     */
    @Test
    public void displayedTest() {
        // TODO: test displayed
    }

    /**
     * Test the property 'eachWay'
     */
    @Test
    public void eachWayTest() {
        // TODO: test eachWay
    }

    /**
     * Test the property 'eachWayFactorDen'
     */
    @Test
    public void eachWayFactorDenTest() {
        // TODO: test eachWayFactorDen
    }

    /**
     * Test the property 'eachWayFactorNum'
     */
    @Test
    public void eachWayFactorNumTest() {
        // TODO: test eachWayFactorNum
    }

    /**
     * Test the property 'eachWayPlaces'
     */
    @Test
    public void eachWayPlacesTest() {
        // TODO: test eachWayPlaces
    }

    /**
     * Test the property 'earlyPriceAvailable'
     */
    @Test
    public void earlyPriceAvailableTest() {
        // TODO: test earlyPriceAvailable
    }

    /**
     * Test the property 'fcAvailable'
     */
    @Test
    public void fcAvailableTest() {
        // TODO: test fcAvailable
    }

    /**
     * Test the property 'firstFourAvailable'
     */
    @Test
    public void firstFourAvailableTest() {
        // TODO: test firstFourAvailable
    }

    /**
     * Test the property 'firstPriceAvailable'
     */
    @Test
    public void firstPriceAvailableTest() {
        // TODO: test firstPriceAvailable
    }

    /**
     * Test the property 'flags'
     */
    @Test
    public void flagsTest() {
        // TODO: test flags
    }

    /**
     * Test the property 'hcapMakeup'
     */
    @Test
    public void hcapMakeupTest() {
        // TODO: test hcapMakeup
    }

    /**
     * Test the property 'hcapValue'
     */
    @Test
    public void hcapValueTest() {
        // TODO: test hcapValue
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'isInPlayMarket'
     */
    @Test
    public void isInPlayMarketTest() {
        // TODO: test isInPlayMarket
    }

    /**
     * Test the property 'isPublished'
     */
    @Test
    public void isPublishedTest() {
        // TODO: test isPublished
    }

    /**
     * Test the property 'livePriceAvailable'
     */
    @Test
    public void livePriceAvailableTest() {
        // TODO: test livePriceAvailable
    }

    /**
     * Test the property 'marketGroupCollectionId'
     */
    @Test
    public void marketGroupCollectionIdTest() {
        // TODO: test marketGroupCollectionId
    }

    /**
     * Test the property 'marketGroupId'
     */
    @Test
    public void marketGroupIdTest() {
        // TODO: test marketGroupId
    }

    /**
     * Test the property 'marketGroupName'
     */
    @Test
    public void marketGroupNameTest() {
        // TODO: test marketGroupName
    }

    /**
     * Test the property 'marketSort'
     */
    @Test
    public void marketSortTest() {
        // TODO: test marketSort
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'order'
     */
    @Test
    public void orderTest() {
        // TODO: test order
    }

    /**
     * Test the property 'parentIds'
     */
    @Test
    public void parentIdsTest() {
        // TODO: test parentIds
    }

    /**
     * Test the property 'quinellaAvailable'
     */
    @Test
    public void quinellaAvailableTest() {
        // TODO: test quinellaAvailable
    }

    /**
     * Test the property 'selections'
     */
    @Test
    public void selectionsTest() {
        // TODO: test selections
    }

    /**
     * Test the property 'settled'
     */
    @Test
    public void settledTest() {
        // TODO: test settled
    }

    /**
     * Test the property 'startingPriceAvailable'
     */
    @Test
    public void startingPriceAvailableTest() {
        // TODO: test startingPriceAvailable
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'tcAvailable'
     */
    @Test
    public void tcAvailableTest() {
        // TODO: test tcAvailable
    }

}
