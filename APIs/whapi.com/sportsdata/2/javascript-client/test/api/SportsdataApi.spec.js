/**
 * SportsData API
 * The William Hill SportsData REST API is a collection of GET methods to provide William Hill product data such as sport, competition, event, market and selection data (including prices).
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SportsDataApi);
  }
}(this, function(expect, SportsDataApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SportsDataApi.SportsdataApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SportsdataApi', function() {
    describe('getClassesForSport', function() {
      it('should call getClassesForSport successfully', function(done) {
        //uncomment below and update the code to test getClassesForSport
        //instance.getClassesForSport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCompetition', function() {
      it('should call getCompetition successfully', function(done) {
        //uncomment below and update the code to test getCompetition
        //instance.getCompetition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCompetitionsForClass', function() {
      it('should call getCompetitionsForClass successfully', function(done) {
        //uncomment below and update the code to test getCompetitionsForClass
        //instance.getCompetitionsForClass(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCompetitionsForSport', function() {
      it('should call getCompetitionsForSport successfully', function(done) {
        //uncomment below and update the code to test getCompetitionsForSport
        //instance.getCompetitionsForSport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEvent', function() {
      it('should call getEvent successfully', function(done) {
        //uncomment below and update the code to test getEvent
        //instance.getEvent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEvents', function() {
      it('should call getEvents successfully', function(done) {
        //uncomment below and update the code to test getEvents
        //instance.getEvents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEventsForClass', function() {
      it('should call getEventsForClass successfully', function(done) {
        //uncomment below and update the code to test getEventsForClass
        //instance.getEventsForClass(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEventsForCompetition', function() {
      it('should call getEventsForCompetition successfully', function(done) {
        //uncomment below and update the code to test getEventsForCompetition
        //instance.getEventsForCompetition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMarketGroupsForCompetition', function() {
      it('should call getMarketGroupsForCompetition successfully', function(done) {
        //uncomment below and update the code to test getMarketGroupsForCompetition
        //instance.getMarketGroupsForCompetition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMarkets', function() {
      it('should call getMarkets successfully', function(done) {
        //uncomment below and update the code to test getMarkets
        //instance.getMarkets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMarketsByGroupId', function() {
      it('should call getMarketsByGroupId successfully', function(done) {
        //uncomment below and update the code to test getMarketsByGroupId
        //instance.getMarketsByGroupId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSelections', function() {
      it('should call getSelections successfully', function(done) {
        //uncomment below and update the code to test getSelections
        //instance.getSelections(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSports', function() {
      it('should call getSports successfully', function(done) {
        //uncomment below and update the code to test getSports
        //instance.getSports(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTopBets', function() {
      it('should call getTopBets successfully', function(done) {
        //uncomment below and update the code to test getTopBets
        //instance.getTopBets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
