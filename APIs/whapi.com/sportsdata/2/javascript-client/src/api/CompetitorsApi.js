/**
 * SportsData API
 * The William Hill SportsData REST API is a collection of GET methods to provide William Hill product data such as sport, competition, event, market and selection data (including prices).
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorsWrapper from '../model/ErrorsWrapper';
import EventCompetitorsWrapper from '../model/EventCompetitorsWrapper';

/**
* Competitors service.
* @module api/CompetitorsApi
* @version 2
*/
export default class CompetitorsApi {

    /**
    * Constructs a new CompetitorsApi. 
    * @alias module:api/CompetitorsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getEventCompetitors operation.
     * @callback module:api/CompetitorsApi~getEventCompetitorsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/EventCompetitorsWrapper} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves competitors for a single event by ID.
     * Retrieves competitors for a single event by ID.
     * @param {String} apiKey Your API Key available from your developer portal
     * @param {String} eventId The event ID to retrieve information for.
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} [fields] Specify an absolute field list to return (Comma-Separated List)
     * @param {Array.<String>} [include] Specify fields in addition to the default to return (Comma-Separated List)
     * @param {Array.<String>} [exclude] Specify fields from the default to exclude (Comma-Separated List)
     * @param {module:api/CompetitorsApi~getEventCompetitorsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/EventCompetitorsWrapper}
     */
    getEventCompetitors(apiKey, eventId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiKey' is set
      if (apiKey === undefined || apiKey === null) {
        throw new Error("Missing the required parameter 'apiKey' when calling getEventCompetitors");
      }
      // verify the required parameter 'eventId' is set
      if (eventId === undefined || eventId === null) {
        throw new Error("Missing the required parameter 'eventId' when calling getEventCompetitors");
      }

      let pathParams = {
        'eventId': eventId
      };
      let queryParams = {
        'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv'),
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv'),
        'exclude': this.apiClient.buildCollectionParam(opts['exclude'], 'csv')
      };
      let headerParams = {
        'apiKey': apiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = EventCompetitorsWrapper;
      return this.apiClient.callApi(
        '/events/{eventId}/competitors', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
