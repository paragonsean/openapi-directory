/**
 * SportsData API
 * The William Hill SportsData REST API is a collection of GET methods to provide William Hill product data such as sport, competition, event, market and selection data (including prices).
 *
 * The version of the OpenAPI document: 2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICompetition.h
 *
 * 
 */

#ifndef OAICompetition_H
#define OAICompetition_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICompetition : public OAIObject {
public:
    OAICompetition();
    OAICompetition(QString json);
    ~OAICompetition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getBetInRunningDelay() const;
    void setBetInRunningDelay(const double &bet_in_running_delay);
    bool is_bet_in_running_delay_Set() const;
    bool is_bet_in_running_delay_Valid() const;

    bool isCashinAvailable() const;
    void setCashinAvailable(const bool &cashin_available);
    bool is_cashin_available_Set() const;
    bool is_cashin_available_Valid() const;

    QList<QString> getChannels() const;
    void setChannels(const QList<QString> &channels);
    bool is_channels_Set() const;
    bool is_channels_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    bool isDisplayed() const;
    void setDisplayed(const bool &displayed);
    bool is_displayed_Set() const;
    bool is_displayed_Valid() const;

    QList<QString> getFlags() const;
    void setFlags(const QList<QString> &flags);
    bool is_flags_Set() const;
    bool is_flags_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsPublished() const;
    void setIsPublished(const bool &is_published);
    bool is_is_published_Set() const;
    bool is_is_published_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getOrder() const;
    void setOrder(const qint32 &order);
    bool is_order_Set() const;
    bool is_order_Valid() const;

    QList<QString> getParentIds() const;
    void setParentIds(const QList<QString> &parent_ids);
    bool is_parent_ids_Set() const;
    bool is_parent_ids_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_bet_in_running_delay;
    bool m_bet_in_running_delay_isSet;
    bool m_bet_in_running_delay_isValid;

    bool m_cashin_available;
    bool m_cashin_available_isSet;
    bool m_cashin_available_isValid;

    QList<QString> m_channels;
    bool m_channels_isSet;
    bool m_channels_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    bool m_displayed;
    bool m_displayed_isSet;
    bool m_displayed_isValid;

    QList<QString> m_flags;
    bool m_flags_isSet;
    bool m_flags_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_published;
    bool m_is_published_isSet;
    bool m_is_published_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_order;
    bool m_order_isSet;
    bool m_order_isValid;

    QList<QString> m_parent_ids;
    bool m_parent_ids_isSet;
    bool m_parent_ids_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICompetition)

#endif // OAICompetition_H
