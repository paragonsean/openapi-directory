/**
 * SportsData API
 * The William Hill SportsData REST API is a collection of GET methods to provide William Hill product data such as sport, competition, event, market and selection data (including prices).
 *
 * The version of the OpenAPI document: 2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEventCompetitorsWrapper.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEventCompetitorsWrapper::OAIEventCompetitorsWrapper(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEventCompetitorsWrapper::OAIEventCompetitorsWrapper() {
    this->initializeModel();
}

OAIEventCompetitorsWrapper::~OAIEventCompetitorsWrapper() {}

void OAIEventCompetitorsWrapper::initializeModel() {

    m_competitors_isSet = false;
    m_competitors_isValid = false;
}

void OAIEventCompetitorsWrapper::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEventCompetitorsWrapper::fromJsonObject(QJsonObject json) {

    m_competitors_isValid = ::OpenAPI::fromJsonValue(m_competitors, json[QString("competitors")]);
    m_competitors_isSet = !json[QString("competitors")].isNull() && m_competitors_isValid;
}

QString OAIEventCompetitorsWrapper::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEventCompetitorsWrapper::asJsonObject() const {
    QJsonObject obj;
    if (m_competitors.size() > 0) {
        obj.insert(QString("competitors"), ::OpenAPI::toJsonValue(m_competitors));
    }
    return obj;
}

QList<OAICompetitor> OAIEventCompetitorsWrapper::getCompetitors() const {
    return m_competitors;
}
void OAIEventCompetitorsWrapper::setCompetitors(const QList<OAICompetitor> &competitors) {
    m_competitors = competitors;
    m_competitors_isSet = true;
}

bool OAIEventCompetitorsWrapper::is_competitors_Set() const{
    return m_competitors_isSet;
}

bool OAIEventCompetitorsWrapper::is_competitors_Valid() const{
    return m_competitors_isValid;
}

bool OAIEventCompetitorsWrapper::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_competitors.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEventCompetitorsWrapper::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
