/**
 * Application Insights Data Plane
 * This API exposes AI metric & event information and associated metadata
 *
 * The version of the OpenAPI document: 2018-04-20
 * Contact: aiapi@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Column from './model/Column';
import ErrorDetail from './model/ErrorDetail';
import ErrorInfo from './model/ErrorInfo';
import ErrorResponse from './model/ErrorResponse';
import EventType from './model/EventType';
import EventsAiInfo from './model/EventsAiInfo';
import EventsApplicationInfo from './model/EventsApplicationInfo';
import EventsAvailabilityResultInfo from './model/EventsAvailabilityResultInfo';
import EventsAvailabilityResultResult from './model/EventsAvailabilityResultResult';
import EventsBrowserTimingInfo from './model/EventsBrowserTimingInfo';
import EventsBrowserTimingResult from './model/EventsBrowserTimingResult';
import EventsClientInfo from './model/EventsClientInfo';
import EventsClientPerformanceInfo from './model/EventsClientPerformanceInfo';
import EventsCloudInfo from './model/EventsCloudInfo';
import EventsCustomEventInfo from './model/EventsCustomEventInfo';
import EventsCustomEventResult from './model/EventsCustomEventResult';
import EventsCustomMetricInfo from './model/EventsCustomMetricInfo';
import EventsCustomMetricResult from './model/EventsCustomMetricResult';
import EventsDependencyInfo from './model/EventsDependencyInfo';
import EventsDependencyResult from './model/EventsDependencyResult';
import EventsExceptionDetail from './model/EventsExceptionDetail';
import EventsExceptionDetailsParsedStack from './model/EventsExceptionDetailsParsedStack';
import EventsExceptionInfo from './model/EventsExceptionInfo';
import EventsExceptionResult from './model/EventsExceptionResult';
import EventsOperationInfo from './model/EventsOperationInfo';
import EventsPageViewInfo from './model/EventsPageViewInfo';
import EventsPageViewResult from './model/EventsPageViewResult';
import EventsPerformanceCounterInfo from './model/EventsPerformanceCounterInfo';
import EventsPerformanceCounterResult from './model/EventsPerformanceCounterResult';
import EventsRequestInfo from './model/EventsRequestInfo';
import EventsRequestResult from './model/EventsRequestResult';
import EventsResult from './model/EventsResult';
import EventsResultData from './model/EventsResultData';
import EventsResultDataCustomDimensions from './model/EventsResultDataCustomDimensions';
import EventsResultDataCustomMeasurements from './model/EventsResultDataCustomMeasurements';
import EventsResults from './model/EventsResults';
import EventsSessionInfo from './model/EventsSessionInfo';
import EventsTraceInfo from './model/EventsTraceInfo';
import EventsTraceResult from './model/EventsTraceResult';
import EventsUserInfo from './model/EventsUserInfo';
import MetricId from './model/MetricId';
import MetricsPostBodySchema from './model/MetricsPostBodySchema';
import MetricsPostBodySchemaParameters from './model/MetricsPostBodySchemaParameters';
import MetricsResult from './model/MetricsResult';
import MetricsResultInfo from './model/MetricsResultInfo';
import MetricsResultsInner from './model/MetricsResultsInner';
import MetricsSegmentInfo from './model/MetricsSegmentInfo';
import QueryBody from './model/QueryBody';
import QueryResults from './model/QueryResults';
import Table from './model/Table';
import DefaultApi from './api/DefaultApi';


/**
* This API exposes AI metric &amp; event information and associated metadata.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ApplicationInsightsDataPlane = require('index'); // See note below*.
* var xxxSvc = new ApplicationInsightsDataPlane.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ApplicationInsightsDataPlane.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ApplicationInsightsDataPlane.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ApplicationInsightsDataPlane.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2018-04-20
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Column model constructor.
     * @property {module:model/Column}
     */
    Column,

    /**
     * The ErrorDetail model constructor.
     * @property {module:model/ErrorDetail}
     */
    ErrorDetail,

    /**
     * The ErrorInfo model constructor.
     * @property {module:model/ErrorInfo}
     */
    ErrorInfo,

    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse,

    /**
     * The EventType model constructor.
     * @property {module:model/EventType}
     */
    EventType,

    /**
     * The EventsAiInfo model constructor.
     * @property {module:model/EventsAiInfo}
     */
    EventsAiInfo,

    /**
     * The EventsApplicationInfo model constructor.
     * @property {module:model/EventsApplicationInfo}
     */
    EventsApplicationInfo,

    /**
     * The EventsAvailabilityResultInfo model constructor.
     * @property {module:model/EventsAvailabilityResultInfo}
     */
    EventsAvailabilityResultInfo,

    /**
     * The EventsAvailabilityResultResult model constructor.
     * @property {module:model/EventsAvailabilityResultResult}
     */
    EventsAvailabilityResultResult,

    /**
     * The EventsBrowserTimingInfo model constructor.
     * @property {module:model/EventsBrowserTimingInfo}
     */
    EventsBrowserTimingInfo,

    /**
     * The EventsBrowserTimingResult model constructor.
     * @property {module:model/EventsBrowserTimingResult}
     */
    EventsBrowserTimingResult,

    /**
     * The EventsClientInfo model constructor.
     * @property {module:model/EventsClientInfo}
     */
    EventsClientInfo,

    /**
     * The EventsClientPerformanceInfo model constructor.
     * @property {module:model/EventsClientPerformanceInfo}
     */
    EventsClientPerformanceInfo,

    /**
     * The EventsCloudInfo model constructor.
     * @property {module:model/EventsCloudInfo}
     */
    EventsCloudInfo,

    /**
     * The EventsCustomEventInfo model constructor.
     * @property {module:model/EventsCustomEventInfo}
     */
    EventsCustomEventInfo,

    /**
     * The EventsCustomEventResult model constructor.
     * @property {module:model/EventsCustomEventResult}
     */
    EventsCustomEventResult,

    /**
     * The EventsCustomMetricInfo model constructor.
     * @property {module:model/EventsCustomMetricInfo}
     */
    EventsCustomMetricInfo,

    /**
     * The EventsCustomMetricResult model constructor.
     * @property {module:model/EventsCustomMetricResult}
     */
    EventsCustomMetricResult,

    /**
     * The EventsDependencyInfo model constructor.
     * @property {module:model/EventsDependencyInfo}
     */
    EventsDependencyInfo,

    /**
     * The EventsDependencyResult model constructor.
     * @property {module:model/EventsDependencyResult}
     */
    EventsDependencyResult,

    /**
     * The EventsExceptionDetail model constructor.
     * @property {module:model/EventsExceptionDetail}
     */
    EventsExceptionDetail,

    /**
     * The EventsExceptionDetailsParsedStack model constructor.
     * @property {module:model/EventsExceptionDetailsParsedStack}
     */
    EventsExceptionDetailsParsedStack,

    /**
     * The EventsExceptionInfo model constructor.
     * @property {module:model/EventsExceptionInfo}
     */
    EventsExceptionInfo,

    /**
     * The EventsExceptionResult model constructor.
     * @property {module:model/EventsExceptionResult}
     */
    EventsExceptionResult,

    /**
     * The EventsOperationInfo model constructor.
     * @property {module:model/EventsOperationInfo}
     */
    EventsOperationInfo,

    /**
     * The EventsPageViewInfo model constructor.
     * @property {module:model/EventsPageViewInfo}
     */
    EventsPageViewInfo,

    /**
     * The EventsPageViewResult model constructor.
     * @property {module:model/EventsPageViewResult}
     */
    EventsPageViewResult,

    /**
     * The EventsPerformanceCounterInfo model constructor.
     * @property {module:model/EventsPerformanceCounterInfo}
     */
    EventsPerformanceCounterInfo,

    /**
     * The EventsPerformanceCounterResult model constructor.
     * @property {module:model/EventsPerformanceCounterResult}
     */
    EventsPerformanceCounterResult,

    /**
     * The EventsRequestInfo model constructor.
     * @property {module:model/EventsRequestInfo}
     */
    EventsRequestInfo,

    /**
     * The EventsRequestResult model constructor.
     * @property {module:model/EventsRequestResult}
     */
    EventsRequestResult,

    /**
     * The EventsResult model constructor.
     * @property {module:model/EventsResult}
     */
    EventsResult,

    /**
     * The EventsResultData model constructor.
     * @property {module:model/EventsResultData}
     */
    EventsResultData,

    /**
     * The EventsResultDataCustomDimensions model constructor.
     * @property {module:model/EventsResultDataCustomDimensions}
     */
    EventsResultDataCustomDimensions,

    /**
     * The EventsResultDataCustomMeasurements model constructor.
     * @property {module:model/EventsResultDataCustomMeasurements}
     */
    EventsResultDataCustomMeasurements,

    /**
     * The EventsResults model constructor.
     * @property {module:model/EventsResults}
     */
    EventsResults,

    /**
     * The EventsSessionInfo model constructor.
     * @property {module:model/EventsSessionInfo}
     */
    EventsSessionInfo,

    /**
     * The EventsTraceInfo model constructor.
     * @property {module:model/EventsTraceInfo}
     */
    EventsTraceInfo,

    /**
     * The EventsTraceResult model constructor.
     * @property {module:model/EventsTraceResult}
     */
    EventsTraceResult,

    /**
     * The EventsUserInfo model constructor.
     * @property {module:model/EventsUserInfo}
     */
    EventsUserInfo,

    /**
     * The MetricId model constructor.
     * @property {module:model/MetricId}
     */
    MetricId,

    /**
     * The MetricsPostBodySchema model constructor.
     * @property {module:model/MetricsPostBodySchema}
     */
    MetricsPostBodySchema,

    /**
     * The MetricsPostBodySchemaParameters model constructor.
     * @property {module:model/MetricsPostBodySchemaParameters}
     */
    MetricsPostBodySchemaParameters,

    /**
     * The MetricsResult model constructor.
     * @property {module:model/MetricsResult}
     */
    MetricsResult,

    /**
     * The MetricsResultInfo model constructor.
     * @property {module:model/MetricsResultInfo}
     */
    MetricsResultInfo,

    /**
     * The MetricsResultsInner model constructor.
     * @property {module:model/MetricsResultsInner}
     */
    MetricsResultsInner,

    /**
     * The MetricsSegmentInfo model constructor.
     * @property {module:model/MetricsSegmentInfo}
     */
    MetricsSegmentInfo,

    /**
     * The QueryBody model constructor.
     * @property {module:model/QueryBody}
     */
    QueryBody,

    /**
     * The QueryResults model constructor.
     * @property {module:model/QueryResults}
     */
    QueryResults,

    /**
     * The Table model constructor.
     * @property {module:model/Table}
     */
    Table,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
