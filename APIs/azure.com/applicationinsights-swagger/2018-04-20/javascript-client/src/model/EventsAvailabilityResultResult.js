/**
 * Application Insights Data Plane
 * This API exposes AI metric & event information and associated metadata
 *
 * The version of the OpenAPI document: 2018-04-20
 * Contact: aiapi@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EventType from './EventType';
import EventsAiInfo from './EventsAiInfo';
import EventsApplicationInfo from './EventsApplicationInfo';
import EventsAvailabilityResultInfo from './EventsAvailabilityResultInfo';
import EventsClientInfo from './EventsClientInfo';
import EventsCloudInfo from './EventsCloudInfo';
import EventsOperationInfo from './EventsOperationInfo';
import EventsResultData from './EventsResultData';
import EventsResultDataCustomDimensions from './EventsResultDataCustomDimensions';
import EventsResultDataCustomMeasurements from './EventsResultDataCustomMeasurements';
import EventsSessionInfo from './EventsSessionInfo';
import EventsUserInfo from './EventsUserInfo';

/**
 * The EventsAvailabilityResultResult model module.
 * @module model/EventsAvailabilityResultResult
 * @version 2018-04-20
 */
class EventsAvailabilityResultResult {
    /**
     * Constructs a new <code>EventsAvailabilityResultResult</code>.
     * An availability result result
     * @alias module:model/EventsAvailabilityResultResult
     * @extends module:model/EventsResultData
     * @implements module:model/EventsResultData
     */
    constructor() { 
        EventsResultData.initialize(this);
        EventsAvailabilityResultResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EventsAvailabilityResultResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EventsAvailabilityResultResult} obj Optional instance to populate.
     * @return {module:model/EventsAvailabilityResultResult} The populated <code>EventsAvailabilityResultResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EventsAvailabilityResultResult();
            EventsResultData.constructFromObject(data, obj);
            EventsResultData.constructFromObject(data, obj);

            if (data.hasOwnProperty('availabilityResult')) {
                obj['availabilityResult'] = EventsAvailabilityResultInfo.constructFromObject(data['availabilityResult']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EventsAvailabilityResultResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EventsAvailabilityResultResult</code>.
     */
    static validateJSON(data) {
        // validate the optional field `availabilityResult`
        if (data['availabilityResult']) { // data not null
          EventsAvailabilityResultInfo.validateJSON(data['availabilityResult']);
        }

        return true;
    }


}



/**
 * @member {module:model/EventsAvailabilityResultInfo} availabilityResult
 */
EventsAvailabilityResultResult.prototype['availabilityResult'] = undefined;


// Implement EventsResultData interface:
/**
 * @member {module:model/EventsAiInfo} ai
 */
EventsResultData.prototype['ai'] = undefined;
/**
 * @member {module:model/EventsApplicationInfo} application
 */
EventsResultData.prototype['application'] = undefined;
/**
 * @member {module:model/EventsClientInfo} client
 */
EventsResultData.prototype['client'] = undefined;
/**
 * @member {module:model/EventsCloudInfo} cloud
 */
EventsResultData.prototype['cloud'] = undefined;
/**
 * Count of the event
 * @member {Number} count
 */
EventsResultData.prototype['count'] = undefined;
/**
 * @member {module:model/EventsResultDataCustomDimensions} customDimensions
 */
EventsResultData.prototype['customDimensions'] = undefined;
/**
 * @member {module:model/EventsResultDataCustomMeasurements} customMeasurements
 */
EventsResultData.prototype['customMeasurements'] = undefined;
/**
 * The unique ID for this event.
 * @member {String} id
 */
EventsResultData.prototype['id'] = undefined;
/**
 * @member {module:model/EventsOperationInfo} operation
 */
EventsResultData.prototype['operation'] = undefined;
/**
 * @member {module:model/EventsSessionInfo} session
 */
EventsResultData.prototype['session'] = undefined;
/**
 * Timestamp of the event
 * @member {Date} timestamp
 */
EventsResultData.prototype['timestamp'] = undefined;
/**
 * @member {module:model/EventType} type
 */
EventsResultData.prototype['type'] = undefined;
/**
 * @member {module:model/EventsUserInfo} user
 */
EventsResultData.prototype['user'] = undefined;




export default EventsAvailabilityResultResult;

