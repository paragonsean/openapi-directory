/**
 * Application Insights Data Plane
 * This API exposes AI metric & event information and associated metadata
 *
 * The version of the OpenAPI document: 2018-04-20
 * Contact: aiapi@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ErrorInfo from './ErrorInfo';
import EventsResultData from './EventsResultData';

/**
 * The EventsResults model module.
 * @module model/EventsResults
 * @version 2018-04-20
 */
class EventsResults {
    /**
     * Constructs a new <code>EventsResults</code>.
     * An events query result.
     * @alias module:model/EventsResults
     */
    constructor() { 
        
        EventsResults.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EventsResults</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EventsResults} obj Optional instance to populate.
     * @return {module:model/EventsResults} The populated <code>EventsResults</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EventsResults();

            if (data.hasOwnProperty('@ai.messages')) {
                obj['@ai.messages'] = ApiClient.convertToType(data['@ai.messages'], [ErrorInfo]);
            }
            if (data.hasOwnProperty('@odata.context')) {
                obj['@odata.context'] = ApiClient.convertToType(data['@odata.context'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], [EventsResultData]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EventsResults</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EventsResults</code>.
     */
    static validateJSON(data) {
        if (data['@ai.messages']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['@ai.messages'])) {
                throw new Error("Expected the field `@ai.messages` to be an array in the JSON data but got " + data['@ai.messages']);
            }
            // validate the optional field `@ai.messages` (array)
            for (const item of data['@ai.messages']) {
                ErrorInfo.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['@odata.context'] && !(typeof data['@odata.context'] === 'string' || data['@odata.context'] instanceof String)) {
            throw new Error("Expected the field `@odata.context` to be a primitive type in the JSON string but got " + data['@odata.context']);
        }
        if (data['value']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['value'])) {
                throw new Error("Expected the field `value` to be an array in the JSON data but got " + data['value']);
            }
            // validate the optional field `value` (array)
            for (const item of data['value']) {
                EventsResultData.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * OData messages for this response.
 * @member {Array.<module:model/ErrorInfo>} @ai.messages
 */
EventsResults.prototype['@ai.messages'] = undefined;

/**
 * OData context metadata endpoint for this response
 * @member {String} @odata.context
 */
EventsResults.prototype['@odata.context'] = undefined;

/**
 * Contents of the events query result.
 * @member {Array.<module:model/EventsResultData>} value
 */
EventsResults.prototype['value'] = undefined;






export default EventsResults;

