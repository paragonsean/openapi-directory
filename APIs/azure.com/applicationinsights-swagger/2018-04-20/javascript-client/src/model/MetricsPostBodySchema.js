/**
 * Application Insights Data Plane
 * This API exposes AI metric & event information and associated metadata
 *
 * The version of the OpenAPI document: 2018-04-20
 * Contact: aiapi@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MetricsPostBodySchemaParameters from './MetricsPostBodySchemaParameters';

/**
 * The MetricsPostBodySchema model module.
 * @module model/MetricsPostBodySchema
 * @version 2018-04-20
 */
class MetricsPostBodySchema {
    /**
     * Constructs a new <code>MetricsPostBodySchema</code>.
     * A metric request
     * @alias module:model/MetricsPostBodySchema
     * @param id {String} An identifier for this query.  Must be unique within the post body of the request.  This identifier will be the 'id' property of the response object representing this query.
     * @param parameters {module:model/MetricsPostBodySchemaParameters} 
     */
    constructor(id, parameters) { 
        
        MetricsPostBodySchema.initialize(this, id, parameters);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, parameters) { 
        obj['id'] = id;
        obj['parameters'] = parameters;
    }

    /**
     * Constructs a <code>MetricsPostBodySchema</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MetricsPostBodySchema} obj Optional instance to populate.
     * @return {module:model/MetricsPostBodySchema} The populated <code>MetricsPostBodySchema</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MetricsPostBodySchema();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('parameters')) {
                obj['parameters'] = MetricsPostBodySchemaParameters.constructFromObject(data['parameters']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MetricsPostBodySchema</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MetricsPostBodySchema</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of MetricsPostBodySchema.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `parameters`
        if (data['parameters']) { // data not null
          MetricsPostBodySchemaParameters.validateJSON(data['parameters']);
        }

        return true;
    }


}

MetricsPostBodySchema.RequiredProperties = ["id", "parameters"];

/**
 * An identifier for this query.  Must be unique within the post body of the request.  This identifier will be the 'id' property of the response object representing this query.
 * @member {String} id
 */
MetricsPostBodySchema.prototype['id'] = undefined;

/**
 * @member {module:model/MetricsPostBodySchemaParameters} parameters
 */
MetricsPostBodySchema.prototype['parameters'] = undefined;






export default MetricsPostBodySchema;

