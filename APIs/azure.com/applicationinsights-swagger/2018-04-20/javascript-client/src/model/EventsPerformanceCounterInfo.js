/**
 * Application Insights Data Plane
 * This API exposes AI metric & event information and associated metadata
 *
 * The version of the OpenAPI document: 2018-04-20
 * Contact: aiapi@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EventsPerformanceCounterInfo model module.
 * @module model/EventsPerformanceCounterInfo
 * @version 2018-04-20
 */
class EventsPerformanceCounterInfo {
    /**
     * Constructs a new <code>EventsPerformanceCounterInfo</code>.
     * The performance counter info
     * @alias module:model/EventsPerformanceCounterInfo
     */
    constructor() { 
        
        EventsPerformanceCounterInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EventsPerformanceCounterInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EventsPerformanceCounterInfo} obj Optional instance to populate.
     * @return {module:model/EventsPerformanceCounterInfo} The populated <code>EventsPerformanceCounterInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EventsPerformanceCounterInfo();

            if (data.hasOwnProperty('category')) {
                obj['category'] = ApiClient.convertToType(data['category'], 'String');
            }
            if (data.hasOwnProperty('counter')) {
                obj['counter'] = ApiClient.convertToType(data['counter'], 'String');
            }
            if (data.hasOwnProperty('instance')) {
                obj['instance'] = ApiClient.convertToType(data['instance'], 'String');
            }
            if (data.hasOwnProperty('instanceName')) {
                obj['instanceName'] = ApiClient.convertToType(data['instanceName'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EventsPerformanceCounterInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EventsPerformanceCounterInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['category'] && !(typeof data['category'] === 'string' || data['category'] instanceof String)) {
            throw new Error("Expected the field `category` to be a primitive type in the JSON string but got " + data['category']);
        }
        // ensure the json data is a string
        if (data['counter'] && !(typeof data['counter'] === 'string' || data['counter'] instanceof String)) {
            throw new Error("Expected the field `counter` to be a primitive type in the JSON string but got " + data['counter']);
        }
        // ensure the json data is a string
        if (data['instance'] && !(typeof data['instance'] === 'string' || data['instance'] instanceof String)) {
            throw new Error("Expected the field `instance` to be a primitive type in the JSON string but got " + data['instance']);
        }
        // ensure the json data is a string
        if (data['instanceName'] && !(typeof data['instanceName'] === 'string' || data['instanceName'] instanceof String)) {
            throw new Error("Expected the field `instanceName` to be a primitive type in the JSON string but got " + data['instanceName']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * The category of the performance counter
 * @member {String} category
 */
EventsPerformanceCounterInfo.prototype['category'] = undefined;

/**
 * The counter of the performance counter
 * @member {String} counter
 */
EventsPerformanceCounterInfo.prototype['counter'] = undefined;

/**
 * The instance of the performance counter
 * @member {String} instance
 */
EventsPerformanceCounterInfo.prototype['instance'] = undefined;

/**
 * The instance name of the performance counter
 * @member {String} instanceName
 */
EventsPerformanceCounterInfo.prototype['instanceName'] = undefined;

/**
 * The name of the performance counter
 * @member {String} name
 */
EventsPerformanceCounterInfo.prototype['name'] = undefined;

/**
 * The value of the performance counter
 * @member {Number} value
 */
EventsPerformanceCounterInfo.prototype['value'] = undefined;






export default EventsPerformanceCounterInfo;

