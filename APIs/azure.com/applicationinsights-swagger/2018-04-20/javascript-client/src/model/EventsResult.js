/**
 * Application Insights Data Plane
 * This API exposes AI metric & event information and associated metadata
 *
 * The version of the OpenAPI document: 2018-04-20
 * Contact: aiapi@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ErrorInfo from './ErrorInfo';
import EventsResultData from './EventsResultData';

/**
 * The EventsResult model module.
 * @module model/EventsResult
 * @version 2018-04-20
 */
class EventsResult {
    /**
     * Constructs a new <code>EventsResult</code>.
     * An event query result.
     * @alias module:model/EventsResult
     */
    constructor() { 
        
        EventsResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EventsResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EventsResult} obj Optional instance to populate.
     * @return {module:model/EventsResult} The populated <code>EventsResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EventsResult();

            if (data.hasOwnProperty('@ai.messages')) {
                obj['@ai.messages'] = ApiClient.convertToType(data['@ai.messages'], [ErrorInfo]);
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = EventsResultData.constructFromObject(data['value']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EventsResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EventsResult</code>.
     */
    static validateJSON(data) {
        if (data['@ai.messages']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['@ai.messages'])) {
                throw new Error("Expected the field `@ai.messages` to be an array in the JSON data but got " + data['@ai.messages']);
            }
            // validate the optional field `@ai.messages` (array)
            for (const item of data['@ai.messages']) {
                ErrorInfo.validateJSON(item);
            };
        }
        // validate the optional field `value`
        if (data['value']) { // data not null
          EventsResultData.validateJSON(data['value']);
        }

        return true;
    }


}



/**
 * OData messages for this response.
 * @member {Array.<module:model/ErrorInfo>} @ai.messages
 */
EventsResult.prototype['@ai.messages'] = undefined;

/**
 * @member {module:model/EventsResultData} value
 */
EventsResult.prototype['value'] = undefined;






export default EventsResult;

