/**
 * Application Insights Data Plane
 * This API exposes AI metric & event information and associated metadata
 *
 * The version of the OpenAPI document: 2018-04-20
 * Contact: aiapi@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EventsCloudInfo model module.
 * @module model/EventsCloudInfo
 * @version 2018-04-20
 */
class EventsCloudInfo {
    /**
     * Constructs a new <code>EventsCloudInfo</code>.
     * Cloud info for an event result
     * @alias module:model/EventsCloudInfo
     */
    constructor() { 
        
        EventsCloudInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EventsCloudInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EventsCloudInfo} obj Optional instance to populate.
     * @return {module:model/EventsCloudInfo} The populated <code>EventsCloudInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EventsCloudInfo();

            if (data.hasOwnProperty('roleInstance')) {
                obj['roleInstance'] = ApiClient.convertToType(data['roleInstance'], 'String');
            }
            if (data.hasOwnProperty('roleName')) {
                obj['roleName'] = ApiClient.convertToType(data['roleName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EventsCloudInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EventsCloudInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['roleInstance'] && !(typeof data['roleInstance'] === 'string' || data['roleInstance'] instanceof String)) {
            throw new Error("Expected the field `roleInstance` to be a primitive type in the JSON string but got " + data['roleInstance']);
        }
        // ensure the json data is a string
        if (data['roleName'] && !(typeof data['roleName'] === 'string' || data['roleName'] instanceof String)) {
            throw new Error("Expected the field `roleName` to be a primitive type in the JSON string but got " + data['roleName']);
        }

        return true;
    }


}



/**
 * Role instance of the cloud
 * @member {String} roleInstance
 */
EventsCloudInfo.prototype['roleInstance'] = undefined;

/**
 * Role name of the cloud
 * @member {String} roleName
 */
EventsCloudInfo.prototype['roleName'] = undefined;






export default EventsCloudInfo;

