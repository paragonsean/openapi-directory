# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EventsCustomMetricInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, value: float=None, value_count: int=None, value_max: float=None, value_min: float=None, value_std_dev: float=None, value_sum: float=None):
        """EventsCustomMetricInfo - a model defined in OpenAPI

        :param name: The name of this EventsCustomMetricInfo.
        :param value: The value of this EventsCustomMetricInfo.
        :param value_count: The value_count of this EventsCustomMetricInfo.
        :param value_max: The value_max of this EventsCustomMetricInfo.
        :param value_min: The value_min of this EventsCustomMetricInfo.
        :param value_std_dev: The value_std_dev of this EventsCustomMetricInfo.
        :param value_sum: The value_sum of this EventsCustomMetricInfo.
        """
        self.openapi_types = {
            'name': str,
            'value': float,
            'value_count': int,
            'value_max': float,
            'value_min': float,
            'value_std_dev': float,
            'value_sum': float
        }

        self.attribute_map = {
            'name': 'name',
            'value': 'value',
            'value_count': 'valueCount',
            'value_max': 'valueMax',
            'value_min': 'valueMin',
            'value_std_dev': 'valueStdDev',
            'value_sum': 'valueSum'
        }

        self._name = name
        self._value = value
        self._value_count = value_count
        self._value_max = value_max
        self._value_min = value_min
        self._value_std_dev = value_std_dev
        self._value_sum = value_sum

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EventsCustomMetricInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The eventsCustomMetricInfo of this EventsCustomMetricInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this EventsCustomMetricInfo.

        The name of the custom metric

        :return: The name of this EventsCustomMetricInfo.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this EventsCustomMetricInfo.

        The name of the custom metric

        :param name: The name of this EventsCustomMetricInfo.
        :type name: str
        """

        self._name = name

    @property
    def value(self):
        """Gets the value of this EventsCustomMetricInfo.

        The value of the custom metric

        :return: The value of this EventsCustomMetricInfo.
        :rtype: float
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this EventsCustomMetricInfo.

        The value of the custom metric

        :param value: The value of this EventsCustomMetricInfo.
        :type value: float
        """

        self._value = value

    @property
    def value_count(self):
        """Gets the value_count of this EventsCustomMetricInfo.

        The count of the custom metric

        :return: The value_count of this EventsCustomMetricInfo.
        :rtype: int
        """
        return self._value_count

    @value_count.setter
    def value_count(self, value_count):
        """Sets the value_count of this EventsCustomMetricInfo.

        The count of the custom metric

        :param value_count: The value_count of this EventsCustomMetricInfo.
        :type value_count: int
        """

        self._value_count = value_count

    @property
    def value_max(self):
        """Gets the value_max of this EventsCustomMetricInfo.

        The maximum value of the custom metric

        :return: The value_max of this EventsCustomMetricInfo.
        :rtype: float
        """
        return self._value_max

    @value_max.setter
    def value_max(self, value_max):
        """Sets the value_max of this EventsCustomMetricInfo.

        The maximum value of the custom metric

        :param value_max: The value_max of this EventsCustomMetricInfo.
        :type value_max: float
        """

        self._value_max = value_max

    @property
    def value_min(self):
        """Gets the value_min of this EventsCustomMetricInfo.

        The minimum value of the custom metric

        :return: The value_min of this EventsCustomMetricInfo.
        :rtype: float
        """
        return self._value_min

    @value_min.setter
    def value_min(self, value_min):
        """Sets the value_min of this EventsCustomMetricInfo.

        The minimum value of the custom metric

        :param value_min: The value_min of this EventsCustomMetricInfo.
        :type value_min: float
        """

        self._value_min = value_min

    @property
    def value_std_dev(self):
        """Gets the value_std_dev of this EventsCustomMetricInfo.

        The standard deviation of the custom metric

        :return: The value_std_dev of this EventsCustomMetricInfo.
        :rtype: float
        """
        return self._value_std_dev

    @value_std_dev.setter
    def value_std_dev(self, value_std_dev):
        """Sets the value_std_dev of this EventsCustomMetricInfo.

        The standard deviation of the custom metric

        :param value_std_dev: The value_std_dev of this EventsCustomMetricInfo.
        :type value_std_dev: float
        """

        self._value_std_dev = value_std_dev

    @property
    def value_sum(self):
        """Gets the value_sum of this EventsCustomMetricInfo.

        The sum of the custom metric

        :return: The value_sum of this EventsCustomMetricInfo.
        :rtype: float
        """
        return self._value_sum

    @value_sum.setter
    def value_sum(self, value_sum):
        """Sets the value_sum of this EventsCustomMetricInfo.

        The sum of the custom metric

        :param value_sum: The value_sum of this EventsCustomMetricInfo.
        :type value_sum: float
        """

        self._value_sum = value_sum
