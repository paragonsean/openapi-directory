# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.error_info import ErrorInfo
from openapi_server.models.events_result_data import EventsResultData
from openapi_server import util


class EventsResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ai_messages: List[ErrorInfo]=None, value: EventsResultData=None):
        """EventsResult - a model defined in OpenAPI

        :param ai_messages: The ai_messages of this EventsResult.
        :param value: The value of this EventsResult.
        """
        self.openapi_types = {
            'ai_messages': List[ErrorInfo],
            'value': EventsResultData
        }

        self.attribute_map = {
            'ai_messages': '@ai.messages',
            'value': 'value'
        }

        self._ai_messages = ai_messages
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EventsResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The eventsResult of this EventsResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ai_messages(self):
        """Gets the ai_messages of this EventsResult.

        OData messages for this response.

        :return: The ai_messages of this EventsResult.
        :rtype: List[ErrorInfo]
        """
        return self._ai_messages

    @ai_messages.setter
    def ai_messages(self, ai_messages):
        """Sets the ai_messages of this EventsResult.

        OData messages for this response.

        :param ai_messages: The ai_messages of this EventsResult.
        :type ai_messages: List[ErrorInfo]
        """

        self._ai_messages = ai_messages

    @property
    def value(self):
        """Gets the value of this EventsResult.


        :return: The value of this EventsResult.
        :rtype: EventsResultData
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this EventsResult.


        :param value: The value of this EventsResult.
        :type value: EventsResultData
        """

        self._value = value
