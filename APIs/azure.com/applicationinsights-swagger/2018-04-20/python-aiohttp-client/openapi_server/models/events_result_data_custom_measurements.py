# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EventsResultDataCustomMeasurements(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_properties: object=None):
        """EventsResultDataCustomMeasurements - a model defined in OpenAPI

        :param additional_properties: The additional_properties of this EventsResultDataCustomMeasurements.
        """
        self.openapi_types = {
            'additional_properties': object
        }

        self.attribute_map = {
            'additional_properties': 'additionalProperties'
        }

        self._additional_properties = additional_properties

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EventsResultDataCustomMeasurements':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The eventsResultData_customMeasurements of this EventsResultDataCustomMeasurements.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_properties(self):
        """Gets the additional_properties of this EventsResultDataCustomMeasurements.


        :return: The additional_properties of this EventsResultDataCustomMeasurements.
        :rtype: object
        """
        return self._additional_properties

    @additional_properties.setter
    def additional_properties(self, additional_properties):
        """Sets the additional_properties of this EventsResultDataCustomMeasurements.


        :param additional_properties: The additional_properties of this EventsResultDataCustomMeasurements.
        :type additional_properties: object
        """

        self._additional_properties = additional_properties
