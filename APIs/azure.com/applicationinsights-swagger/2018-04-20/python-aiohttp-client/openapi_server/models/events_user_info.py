# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EventsUserInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id: str=None, authenticated_id: str=None, id: str=None):
        """EventsUserInfo - a model defined in OpenAPI

        :param account_id: The account_id of this EventsUserInfo.
        :param authenticated_id: The authenticated_id of this EventsUserInfo.
        :param id: The id of this EventsUserInfo.
        """
        self.openapi_types = {
            'account_id': str,
            'authenticated_id': str,
            'id': str
        }

        self.attribute_map = {
            'account_id': 'accountId',
            'authenticated_id': 'authenticatedId',
            'id': 'id'
        }

        self._account_id = account_id
        self._authenticated_id = authenticated_id
        self._id = id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EventsUserInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The eventsUserInfo of this EventsUserInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self):
        """Gets the account_id of this EventsUserInfo.

        Account ID of the user

        :return: The account_id of this EventsUserInfo.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this EventsUserInfo.

        Account ID of the user

        :param account_id: The account_id of this EventsUserInfo.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def authenticated_id(self):
        """Gets the authenticated_id of this EventsUserInfo.

        Authenticated ID of the user

        :return: The authenticated_id of this EventsUserInfo.
        :rtype: str
        """
        return self._authenticated_id

    @authenticated_id.setter
    def authenticated_id(self, authenticated_id):
        """Sets the authenticated_id of this EventsUserInfo.

        Authenticated ID of the user

        :param authenticated_id: The authenticated_id of this EventsUserInfo.
        :type authenticated_id: str
        """

        self._authenticated_id = authenticated_id

    @property
    def id(self):
        """Gets the id of this EventsUserInfo.

        ID of the user

        :return: The id of this EventsUserInfo.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this EventsUserInfo.

        ID of the user

        :param id: The id of this EventsUserInfo.
        :type id: str
        """

        self._id = id
