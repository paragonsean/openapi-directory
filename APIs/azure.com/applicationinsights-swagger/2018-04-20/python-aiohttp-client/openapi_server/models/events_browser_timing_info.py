# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EventsBrowserTimingInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, network_duration: int=None, performance_bucket: str=None, processing_duration: int=None, receive_duration: int=None, send_duration: int=None, total_duration: int=None, url: str=None, url_host: str=None, url_path: str=None):
        """EventsBrowserTimingInfo - a model defined in OpenAPI

        :param name: The name of this EventsBrowserTimingInfo.
        :param network_duration: The network_duration of this EventsBrowserTimingInfo.
        :param performance_bucket: The performance_bucket of this EventsBrowserTimingInfo.
        :param processing_duration: The processing_duration of this EventsBrowserTimingInfo.
        :param receive_duration: The receive_duration of this EventsBrowserTimingInfo.
        :param send_duration: The send_duration of this EventsBrowserTimingInfo.
        :param total_duration: The total_duration of this EventsBrowserTimingInfo.
        :param url: The url of this EventsBrowserTimingInfo.
        :param url_host: The url_host of this EventsBrowserTimingInfo.
        :param url_path: The url_path of this EventsBrowserTimingInfo.
        """
        self.openapi_types = {
            'name': str,
            'network_duration': int,
            'performance_bucket': str,
            'processing_duration': int,
            'receive_duration': int,
            'send_duration': int,
            'total_duration': int,
            'url': str,
            'url_host': str,
            'url_path': str
        }

        self.attribute_map = {
            'name': 'name',
            'network_duration': 'networkDuration',
            'performance_bucket': 'performanceBucket',
            'processing_duration': 'processingDuration',
            'receive_duration': 'receiveDuration',
            'send_duration': 'sendDuration',
            'total_duration': 'totalDuration',
            'url': 'url',
            'url_host': 'urlHost',
            'url_path': 'urlPath'
        }

        self._name = name
        self._network_duration = network_duration
        self._performance_bucket = performance_bucket
        self._processing_duration = processing_duration
        self._receive_duration = receive_duration
        self._send_duration = send_duration
        self._total_duration = total_duration
        self._url = url
        self._url_host = url_host
        self._url_path = url_path

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EventsBrowserTimingInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The eventsBrowserTimingInfo of this EventsBrowserTimingInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this EventsBrowserTimingInfo.

        The name of the page

        :return: The name of this EventsBrowserTimingInfo.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this EventsBrowserTimingInfo.

        The name of the page

        :param name: The name of this EventsBrowserTimingInfo.
        :type name: str
        """

        self._name = name

    @property
    def network_duration(self):
        """Gets the network_duration of this EventsBrowserTimingInfo.

        The network duration of the load

        :return: The network_duration of this EventsBrowserTimingInfo.
        :rtype: int
        """
        return self._network_duration

    @network_duration.setter
    def network_duration(self, network_duration):
        """Sets the network_duration of this EventsBrowserTimingInfo.

        The network duration of the load

        :param network_duration: The network_duration of this EventsBrowserTimingInfo.
        :type network_duration: int
        """

        self._network_duration = network_duration

    @property
    def performance_bucket(self):
        """Gets the performance_bucket of this EventsBrowserTimingInfo.

        The performance bucket of the load

        :return: The performance_bucket of this EventsBrowserTimingInfo.
        :rtype: str
        """
        return self._performance_bucket

    @performance_bucket.setter
    def performance_bucket(self, performance_bucket):
        """Sets the performance_bucket of this EventsBrowserTimingInfo.

        The performance bucket of the load

        :param performance_bucket: The performance_bucket of this EventsBrowserTimingInfo.
        :type performance_bucket: str
        """

        self._performance_bucket = performance_bucket

    @property
    def processing_duration(self):
        """Gets the processing_duration of this EventsBrowserTimingInfo.

        The processing duration of the load

        :return: The processing_duration of this EventsBrowserTimingInfo.
        :rtype: int
        """
        return self._processing_duration

    @processing_duration.setter
    def processing_duration(self, processing_duration):
        """Sets the processing_duration of this EventsBrowserTimingInfo.

        The processing duration of the load

        :param processing_duration: The processing_duration of this EventsBrowserTimingInfo.
        :type processing_duration: int
        """

        self._processing_duration = processing_duration

    @property
    def receive_duration(self):
        """Gets the receive_duration of this EventsBrowserTimingInfo.

        The receive duration of the load

        :return: The receive_duration of this EventsBrowserTimingInfo.
        :rtype: int
        """
        return self._receive_duration

    @receive_duration.setter
    def receive_duration(self, receive_duration):
        """Sets the receive_duration of this EventsBrowserTimingInfo.

        The receive duration of the load

        :param receive_duration: The receive_duration of this EventsBrowserTimingInfo.
        :type receive_duration: int
        """

        self._receive_duration = receive_duration

    @property
    def send_duration(self):
        """Gets the send_duration of this EventsBrowserTimingInfo.

        The send duration of the load

        :return: The send_duration of this EventsBrowserTimingInfo.
        :rtype: int
        """
        return self._send_duration

    @send_duration.setter
    def send_duration(self, send_duration):
        """Sets the send_duration of this EventsBrowserTimingInfo.

        The send duration of the load

        :param send_duration: The send_duration of this EventsBrowserTimingInfo.
        :type send_duration: int
        """

        self._send_duration = send_duration

    @property
    def total_duration(self):
        """Gets the total_duration of this EventsBrowserTimingInfo.

        The total duration of the load

        :return: The total_duration of this EventsBrowserTimingInfo.
        :rtype: int
        """
        return self._total_duration

    @total_duration.setter
    def total_duration(self, total_duration):
        """Sets the total_duration of this EventsBrowserTimingInfo.

        The total duration of the load

        :param total_duration: The total_duration of this EventsBrowserTimingInfo.
        :type total_duration: int
        """

        self._total_duration = total_duration

    @property
    def url(self):
        """Gets the url of this EventsBrowserTimingInfo.

        The url of the page

        :return: The url of this EventsBrowserTimingInfo.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this EventsBrowserTimingInfo.

        The url of the page

        :param url: The url of this EventsBrowserTimingInfo.
        :type url: str
        """

        self._url = url

    @property
    def url_host(self):
        """Gets the url_host of this EventsBrowserTimingInfo.

        The host of the URL

        :return: The url_host of this EventsBrowserTimingInfo.
        :rtype: str
        """
        return self._url_host

    @url_host.setter
    def url_host(self, url_host):
        """Sets the url_host of this EventsBrowserTimingInfo.

        The host of the URL

        :param url_host: The url_host of this EventsBrowserTimingInfo.
        :type url_host: str
        """

        self._url_host = url_host

    @property
    def url_path(self):
        """Gets the url_path of this EventsBrowserTimingInfo.

        The path of the URL

        :return: The url_path of this EventsBrowserTimingInfo.
        :rtype: str
        """
        return self._url_path

    @url_path.setter
    def url_path(self, url_path):
        """Sets the url_path of this EventsBrowserTimingInfo.

        The path of the URL

        :param url_path: The url_path of this EventsBrowserTimingInfo.
        :type url_path: str
        """

        self._url_path = url_path
