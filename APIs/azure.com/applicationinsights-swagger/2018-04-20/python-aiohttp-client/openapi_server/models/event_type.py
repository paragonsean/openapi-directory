# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EventType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    DOLLAR_ALL = '$all'
    TRACES = 'traces'
    CUSTOMEVENTS = 'customEvents'
    PAGEVIEWS = 'pageViews'
    BROWSERTIMINGS = 'browserTimings'
    REQUESTS = 'requests'
    DEPENDENCIES = 'dependencies'
    EXCEPTIONS = 'exceptions'
    AVAILABILITYRESULTS = 'availabilityResults'
    PERFORMANCECOUNTERS = 'performanceCounters'
    CUSTOMMETRICS = 'customMetrics'

    def __init__(self):
        """EventType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EventType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The eventType of this EventType.
        """
        return util.deserialize_model(dikt, cls)
