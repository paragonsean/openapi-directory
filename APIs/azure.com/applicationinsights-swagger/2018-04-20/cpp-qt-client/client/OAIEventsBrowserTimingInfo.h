/**
 * Application Insights Data Plane
 * This API exposes AI metric & event information and associated metadata
 *
 * The version of the OpenAPI document: 2018-04-20
 * Contact: aiapi@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEventsBrowserTimingInfo.h
 *
 * The browser timing information
 */

#ifndef OAIEventsBrowserTimingInfo_H
#define OAIEventsBrowserTimingInfo_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEventsBrowserTimingInfo : public OAIObject {
public:
    OAIEventsBrowserTimingInfo();
    OAIEventsBrowserTimingInfo(QString json);
    ~OAIEventsBrowserTimingInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint64 getNetworkDuration() const;
    void setNetworkDuration(const qint64 &network_duration);
    bool is_network_duration_Set() const;
    bool is_network_duration_Valid() const;

    QString getPerformanceBucket() const;
    void setPerformanceBucket(const QString &performance_bucket);
    bool is_performance_bucket_Set() const;
    bool is_performance_bucket_Valid() const;

    qint64 getProcessingDuration() const;
    void setProcessingDuration(const qint64 &processing_duration);
    bool is_processing_duration_Set() const;
    bool is_processing_duration_Valid() const;

    qint64 getReceiveDuration() const;
    void setReceiveDuration(const qint64 &receive_duration);
    bool is_receive_duration_Set() const;
    bool is_receive_duration_Valid() const;

    qint64 getSendDuration() const;
    void setSendDuration(const qint64 &send_duration);
    bool is_send_duration_Set() const;
    bool is_send_duration_Valid() const;

    qint64 getTotalDuration() const;
    void setTotalDuration(const qint64 &total_duration);
    bool is_total_duration_Set() const;
    bool is_total_duration_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    QString getUrlHost() const;
    void setUrlHost(const QString &url_host);
    bool is_url_host_Set() const;
    bool is_url_host_Valid() const;

    QString getUrlPath() const;
    void setUrlPath(const QString &url_path);
    bool is_url_path_Set() const;
    bool is_url_path_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint64 m_network_duration;
    bool m_network_duration_isSet;
    bool m_network_duration_isValid;

    QString m_performance_bucket;
    bool m_performance_bucket_isSet;
    bool m_performance_bucket_isValid;

    qint64 m_processing_duration;
    bool m_processing_duration_isSet;
    bool m_processing_duration_isValid;

    qint64 m_receive_duration;
    bool m_receive_duration_isSet;
    bool m_receive_duration_isValid;

    qint64 m_send_duration;
    bool m_send_duration_isSet;
    bool m_send_duration_isValid;

    qint64 m_total_duration;
    bool m_total_duration_isSet;
    bool m_total_duration_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    QString m_url_host;
    bool m_url_host_isSet;
    bool m_url_host_isValid;

    QString m_url_path;
    bool m_url_path_isSet;
    bool m_url_path_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEventsBrowserTimingInfo)

#endif // OAIEventsBrowserTimingInfo_H
