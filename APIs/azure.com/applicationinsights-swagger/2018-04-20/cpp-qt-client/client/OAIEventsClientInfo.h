/**
 * Application Insights Data Plane
 * This API exposes AI metric & event information and associated metadata
 *
 * The version of the OpenAPI document: 2018-04-20
 * Contact: aiapi@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEventsClientInfo.h
 *
 * Client info for an event result
 */

#ifndef OAIEventsClientInfo_H
#define OAIEventsClientInfo_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEventsClientInfo : public OAIObject {
public:
    OAIEventsClientInfo();
    OAIEventsClientInfo(QString json);
    ~OAIEventsClientInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBrowser() const;
    void setBrowser(const QString &browser);
    bool is_browser_Set() const;
    bool is_browser_Valid() const;

    QString getCity() const;
    void setCity(const QString &city);
    bool is_city_Set() const;
    bool is_city_Valid() const;

    QString getCountryOrRegion() const;
    void setCountryOrRegion(const QString &country_or_region);
    bool is_country_or_region_Set() const;
    bool is_country_or_region_Valid() const;

    QString getIp() const;
    void setIp(const QString &ip);
    bool is_ip_Set() const;
    bool is_ip_Valid() const;

    QString getModel() const;
    void setModel(const QString &model);
    bool is_model_Set() const;
    bool is_model_Valid() const;

    QString getOs() const;
    void setOs(const QString &os);
    bool is_os_Set() const;
    bool is_os_Valid() const;

    QString getStateOrProvince() const;
    void setStateOrProvince(const QString &state_or_province);
    bool is_state_or_province_Set() const;
    bool is_state_or_province_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_browser;
    bool m_browser_isSet;
    bool m_browser_isValid;

    QString m_city;
    bool m_city_isSet;
    bool m_city_isValid;

    QString m_country_or_region;
    bool m_country_or_region_isSet;
    bool m_country_or_region_isValid;

    QString m_ip;
    bool m_ip_isSet;
    bool m_ip_isValid;

    QString m_model;
    bool m_model_isSet;
    bool m_model_isValid;

    QString m_os;
    bool m_os_isSet;
    bool m_os_isValid;

    QString m_state_or_province;
    bool m_state_or_province_isSet;
    bool m_state_or_province_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEventsClientInfo)

#endif // OAIEventsClientInfo_H
