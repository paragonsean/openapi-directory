/**
 * Application Insights Data Plane
 * This API exposes AI metric & event information and associated metadata
 *
 * The version of the OpenAPI document: 2018-04-20
 * Contact: aiapi@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEventsExceptionInfo.h
 *
 * The exception info
 */

#ifndef OAIEventsExceptionInfo_H
#define OAIEventsExceptionInfo_H

#include <QJsonObject>

#include "OAIEventsExceptionDetail.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEventsExceptionDetail;

class OAIEventsExceptionInfo : public OAIObject {
public:
    OAIEventsExceptionInfo();
    OAIEventsExceptionInfo(QString json);
    ~OAIEventsExceptionInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAssembly() const;
    void setAssembly(const QString &assembly);
    bool is_assembly_Set() const;
    bool is_assembly_Valid() const;

    QList<OAIEventsExceptionDetail> getDetails() const;
    void setDetails(const QList<OAIEventsExceptionDetail> &details);
    bool is_details_Set() const;
    bool is_details_Valid() const;

    QString getHandledAt() const;
    void setHandledAt(const QString &handled_at);
    bool is_handled_at_Set() const;
    bool is_handled_at_Valid() const;

    QString getInnermostAssembly() const;
    void setInnermostAssembly(const QString &innermost_assembly);
    bool is_innermost_assembly_Set() const;
    bool is_innermost_assembly_Valid() const;

    QString getInnermostMessage() const;
    void setInnermostMessage(const QString &innermost_message);
    bool is_innermost_message_Set() const;
    bool is_innermost_message_Valid() const;

    QString getInnermostMethod() const;
    void setInnermostMethod(const QString &innermost_method);
    bool is_innermost_method_Set() const;
    bool is_innermost_method_Valid() const;

    QString getInnermostType() const;
    void setInnermostType(const QString &innermost_type);
    bool is_innermost_type_Set() const;
    bool is_innermost_type_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QString getMethod() const;
    void setMethod(const QString &method);
    bool is_method_Set() const;
    bool is_method_Valid() const;

    QString getOuterAssembly() const;
    void setOuterAssembly(const QString &outer_assembly);
    bool is_outer_assembly_Set() const;
    bool is_outer_assembly_Valid() const;

    QString getOuterMessage() const;
    void setOuterMessage(const QString &outer_message);
    bool is_outer_message_Set() const;
    bool is_outer_message_Valid() const;

    QString getOuterMethod() const;
    void setOuterMethod(const QString &outer_method);
    bool is_outer_method_Set() const;
    bool is_outer_method_Valid() const;

    QString getOuterType() const;
    void setOuterType(const QString &outer_type);
    bool is_outer_type_Set() const;
    bool is_outer_type_Valid() const;

    QString getProblemId() const;
    void setProblemId(const QString &problem_id);
    bool is_problem_id_Set() const;
    bool is_problem_id_Valid() const;

    qint32 getSeverityLevel() const;
    void setSeverityLevel(const qint32 &severity_level);
    bool is_severity_level_Set() const;
    bool is_severity_level_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_assembly;
    bool m_assembly_isSet;
    bool m_assembly_isValid;

    QList<OAIEventsExceptionDetail> m_details;
    bool m_details_isSet;
    bool m_details_isValid;

    QString m_handled_at;
    bool m_handled_at_isSet;
    bool m_handled_at_isValid;

    QString m_innermost_assembly;
    bool m_innermost_assembly_isSet;
    bool m_innermost_assembly_isValid;

    QString m_innermost_message;
    bool m_innermost_message_isSet;
    bool m_innermost_message_isValid;

    QString m_innermost_method;
    bool m_innermost_method_isSet;
    bool m_innermost_method_isValid;

    QString m_innermost_type;
    bool m_innermost_type_isSet;
    bool m_innermost_type_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QString m_method;
    bool m_method_isSet;
    bool m_method_isValid;

    QString m_outer_assembly;
    bool m_outer_assembly_isSet;
    bool m_outer_assembly_isValid;

    QString m_outer_message;
    bool m_outer_message_isSet;
    bool m_outer_message_isValid;

    QString m_outer_method;
    bool m_outer_method_isSet;
    bool m_outer_method_isValid;

    QString m_outer_type;
    bool m_outer_type_isSet;
    bool m_outer_type_isValid;

    QString m_problem_id;
    bool m_problem_id_isSet;
    bool m_problem_id_isValid;

    qint32 m_severity_level;
    bool m_severity_level_isSet;
    bool m_severity_level_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEventsExceptionInfo)

#endif // OAIEventsExceptionInfo_H
