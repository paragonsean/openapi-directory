/**
 * Application Insights Data Plane
 * This API exposes AI metric & event information and associated metadata
 *
 * The version of the OpenAPI document: 2018-04-20
 * Contact: aiapi@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEventsExceptionResult.h
 *
 * An exception result
 */

#ifndef OAIEventsExceptionResult_H
#define OAIEventsExceptionResult_H

#include <QJsonObject>

#include "OAIEventType.h"
#include "OAIEventsAiInfo.h"
#include "OAIEventsApplicationInfo.h"
#include "OAIEventsClientInfo.h"
#include "OAIEventsCloudInfo.h"
#include "OAIEventsExceptionInfo.h"
#include "OAIEventsOperationInfo.h"
#include "OAIEventsResultData.h"
#include "OAIEventsResultData_customDimensions.h"
#include "OAIEventsResultData_customMeasurements.h"
#include "OAIEventsSessionInfo.h"
#include "OAIEventsUserInfo.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEventsAiInfo;
class OAIEventsApplicationInfo;
class OAIEventsClientInfo;
class OAIEventsCloudInfo;
class OAIEventsResultData_customDimensions;
class OAIEventsResultData_customMeasurements;
class OAIEventsOperationInfo;
class OAIEventsSessionInfo;
class OAIEventsUserInfo;
class OAIEventsExceptionInfo;

class OAIEventsExceptionResult : public OAIObject {
public:
    OAIEventsExceptionResult();
    OAIEventsExceptionResult(QString json);
    ~OAIEventsExceptionResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIEventsAiInfo getAi() const;
    void setAi(const OAIEventsAiInfo &ai);
    bool is_ai_Set() const;
    bool is_ai_Valid() const;

    OAIEventsApplicationInfo getApplication() const;
    void setApplication(const OAIEventsApplicationInfo &application);
    bool is_application_Set() const;
    bool is_application_Valid() const;

    OAIEventsClientInfo getClient() const;
    void setClient(const OAIEventsClientInfo &client);
    bool is_client_Set() const;
    bool is_client_Valid() const;

    OAIEventsCloudInfo getCloud() const;
    void setCloud(const OAIEventsCloudInfo &cloud);
    bool is_cloud_Set() const;
    bool is_cloud_Valid() const;

    qint64 getCount() const;
    void setCount(const qint64 &count);
    bool is_count_Set() const;
    bool is_count_Valid() const;

    OAIEventsResultData_customDimensions getCustomDimensions() const;
    void setCustomDimensions(const OAIEventsResultData_customDimensions &custom_dimensions);
    bool is_custom_dimensions_Set() const;
    bool is_custom_dimensions_Valid() const;

    OAIEventsResultData_customMeasurements getCustomMeasurements() const;
    void setCustomMeasurements(const OAIEventsResultData_customMeasurements &custom_measurements);
    bool is_custom_measurements_Set() const;
    bool is_custom_measurements_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIEventsOperationInfo getOperation() const;
    void setOperation(const OAIEventsOperationInfo &operation);
    bool is_operation_Set() const;
    bool is_operation_Valid() const;

    OAIEventsSessionInfo getSession() const;
    void setSession(const OAIEventsSessionInfo &session);
    bool is_session_Set() const;
    bool is_session_Valid() const;

    QDateTime getTimestamp() const;
    void setTimestamp(const QDateTime &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    OAIEventType getType() const;
    void setType(const OAIEventType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAIEventsUserInfo getUser() const;
    void setUser(const OAIEventsUserInfo &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    OAIEventsExceptionInfo getException() const;
    void setException(const OAIEventsExceptionInfo &exception);
    bool is_exception_Set() const;
    bool is_exception_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIEventsAiInfo m_ai;
    bool m_ai_isSet;
    bool m_ai_isValid;

    OAIEventsApplicationInfo m_application;
    bool m_application_isSet;
    bool m_application_isValid;

    OAIEventsClientInfo m_client;
    bool m_client_isSet;
    bool m_client_isValid;

    OAIEventsCloudInfo m_cloud;
    bool m_cloud_isSet;
    bool m_cloud_isValid;

    qint64 m_count;
    bool m_count_isSet;
    bool m_count_isValid;

    OAIEventsResultData_customDimensions m_custom_dimensions;
    bool m_custom_dimensions_isSet;
    bool m_custom_dimensions_isValid;

    OAIEventsResultData_customMeasurements m_custom_measurements;
    bool m_custom_measurements_isSet;
    bool m_custom_measurements_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIEventsOperationInfo m_operation;
    bool m_operation_isSet;
    bool m_operation_isValid;

    OAIEventsSessionInfo m_session;
    bool m_session_isSet;
    bool m_session_isValid;

    QDateTime m_timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;

    OAIEventType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAIEventsUserInfo m_user;
    bool m_user_isSet;
    bool m_user_isValid;

    OAIEventsExceptionInfo m_exception;
    bool m_exception_isSet;
    bool m_exception_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEventsExceptionResult)

#endif // OAIEventsExceptionResult_H
