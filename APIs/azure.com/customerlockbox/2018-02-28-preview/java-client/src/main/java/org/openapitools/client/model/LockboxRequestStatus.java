/*
 * Customer Lockbox
 * Azure Customer Lockbox API Reference
 *
 * The version of the OpenAPI document: 2018-02-28-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * The status of the request.
 */
@JsonAdapter(LockboxRequestStatus.Adapter.class)
public enum LockboxRequestStatus {
  
  INITIALIZING("Initializing"),
  
  PENDING("Pending"),
  
  APPROVING("Approving"),
  
  DENYING("Denying"),
  
  APPROVED("Approved"),
  
  DENIED("Denied"),
  
  EXPIRED("Expired"),
  
  REVOKING("Revoking"),
  
  REVOKED("Revoked"),
  
  ERROR("Error"),
  
  UNKNOWN("Unknown"),
  
  COMPLETED("Completed"),
  
  COMPLETING("Completing");

  private String value;

  LockboxRequestStatus(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static LockboxRequestStatus fromValue(String value) {
    for (LockboxRequestStatus b : LockboxRequestStatus.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<LockboxRequestStatus> {
    @Override
    public void write(final JsonWriter jsonWriter, final LockboxRequestStatus enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public LockboxRequestStatus read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return LockboxRequestStatus.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    LockboxRequestStatus.fromValue(value);
  }
}

