# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.lockbox_request_status import LockboxRequestStatus
from openapi_server import util


class ErrorAdditionalInfoInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, current_status: LockboxRequestStatus=None):
        """ErrorAdditionalInfoInfo - a model defined in OpenAPI

        :param current_status: The current_status of this ErrorAdditionalInfoInfo.
        """
        self.openapi_types = {
            'current_status': LockboxRequestStatus
        }

        self.attribute_map = {
            'current_status': 'currentStatus'
        }

        self._current_status = current_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ErrorAdditionalInfoInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ErrorAdditionalInfo_info of this ErrorAdditionalInfoInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def current_status(self):
        """Gets the current_status of this ErrorAdditionalInfoInfo.


        :return: The current_status of this ErrorAdditionalInfoInfo.
        :rtype: LockboxRequestStatus
        """
        return self._current_status

    @current_status.setter
    def current_status(self, current_status):
        """Sets the current_status of this ErrorAdditionalInfoInfo.


        :param current_status: The current_status of this ErrorAdditionalInfoInfo.
        :type current_status: LockboxRequestStatus
        """

        self._current_status = current_status
