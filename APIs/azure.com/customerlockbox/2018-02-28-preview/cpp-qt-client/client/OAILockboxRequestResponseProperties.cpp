/**
 * Customer Lockbox
 * Azure Customer Lockbox API Reference
 *
 * The version of the OpenAPI document: 2018-02-28-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILockboxRequestResponseProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILockboxRequestResponseProperties::OAILockboxRequestResponseProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILockboxRequestResponseProperties::OAILockboxRequestResponseProperties() {
    this->initializeModel();
}

OAILockboxRequestResponseProperties::~OAILockboxRequestResponseProperties() {}

void OAILockboxRequestResponseProperties::initializeModel() {

    m_created_date_time_isSet = false;
    m_created_date_time_isValid = false;

    m_duration_isSet = false;
    m_duration_isValid = false;

    m_expiration_date_time_isSet = false;
    m_expiration_date_time_isValid = false;

    m_justification_isSet = false;
    m_justification_isValid = false;

    m_request_id_isSet = false;
    m_request_id_isValid = false;

    m_requested_resource_ids_isSet = false;
    m_requested_resource_ids_isValid = false;

    m_resource_type_isSet = false;
    m_resource_type_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_subscription_id_isSet = false;
    m_subscription_id_isValid = false;

    m_support_case_url_isSet = false;
    m_support_case_url_isValid = false;

    m_support_request_isSet = false;
    m_support_request_isValid = false;
}

void OAILockboxRequestResponseProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILockboxRequestResponseProperties::fromJsonObject(QJsonObject json) {

    m_created_date_time_isValid = ::OpenAPI::fromJsonValue(m_created_date_time, json[QString("createdDateTime")]);
    m_created_date_time_isSet = !json[QString("createdDateTime")].isNull() && m_created_date_time_isValid;

    m_duration_isValid = ::OpenAPI::fromJsonValue(m_duration, json[QString("duration")]);
    m_duration_isSet = !json[QString("duration")].isNull() && m_duration_isValid;

    m_expiration_date_time_isValid = ::OpenAPI::fromJsonValue(m_expiration_date_time, json[QString("expirationDateTime")]);
    m_expiration_date_time_isSet = !json[QString("expirationDateTime")].isNull() && m_expiration_date_time_isValid;

    m_justification_isValid = ::OpenAPI::fromJsonValue(m_justification, json[QString("justification")]);
    m_justification_isSet = !json[QString("justification")].isNull() && m_justification_isValid;

    m_request_id_isValid = ::OpenAPI::fromJsonValue(m_request_id, json[QString("requestId")]);
    m_request_id_isSet = !json[QString("requestId")].isNull() && m_request_id_isValid;

    m_requested_resource_ids_isValid = ::OpenAPI::fromJsonValue(m_requested_resource_ids, json[QString("requestedResourceIds")]);
    m_requested_resource_ids_isSet = !json[QString("requestedResourceIds")].isNull() && m_requested_resource_ids_isValid;

    m_resource_type_isValid = ::OpenAPI::fromJsonValue(m_resource_type, json[QString("resourceType")]);
    m_resource_type_isSet = !json[QString("resourceType")].isNull() && m_resource_type_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_subscription_id_isValid = ::OpenAPI::fromJsonValue(m_subscription_id, json[QString("subscriptionId")]);
    m_subscription_id_isSet = !json[QString("subscriptionId")].isNull() && m_subscription_id_isValid;

    m_support_case_url_isValid = ::OpenAPI::fromJsonValue(m_support_case_url, json[QString("supportCaseUrl")]);
    m_support_case_url_isSet = !json[QString("supportCaseUrl")].isNull() && m_support_case_url_isValid;

    m_support_request_isValid = ::OpenAPI::fromJsonValue(m_support_request, json[QString("supportRequest")]);
    m_support_request_isSet = !json[QString("supportRequest")].isNull() && m_support_request_isValid;
}

QString OAILockboxRequestResponseProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILockboxRequestResponseProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_created_date_time_isSet) {
        obj.insert(QString("createdDateTime"), ::OpenAPI::toJsonValue(m_created_date_time));
    }
    if (m_duration_isSet) {
        obj.insert(QString("duration"), ::OpenAPI::toJsonValue(m_duration));
    }
    if (m_expiration_date_time_isSet) {
        obj.insert(QString("expirationDateTime"), ::OpenAPI::toJsonValue(m_expiration_date_time));
    }
    if (m_justification_isSet) {
        obj.insert(QString("justification"), ::OpenAPI::toJsonValue(m_justification));
    }
    if (m_request_id_isSet) {
        obj.insert(QString("requestId"), ::OpenAPI::toJsonValue(m_request_id));
    }
    if (m_requested_resource_ids.size() > 0) {
        obj.insert(QString("requestedResourceIds"), ::OpenAPI::toJsonValue(m_requested_resource_ids));
    }
    if (m_resource_type_isSet) {
        obj.insert(QString("resourceType"), ::OpenAPI::toJsonValue(m_resource_type));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_subscription_id_isSet) {
        obj.insert(QString("subscriptionId"), ::OpenAPI::toJsonValue(m_subscription_id));
    }
    if (m_support_case_url_isSet) {
        obj.insert(QString("supportCaseUrl"), ::OpenAPI::toJsonValue(m_support_case_url));
    }
    if (m_support_request_isSet) {
        obj.insert(QString("supportRequest"), ::OpenAPI::toJsonValue(m_support_request));
    }
    return obj;
}

QDateTime OAILockboxRequestResponseProperties::getCreatedDateTime() const {
    return m_created_date_time;
}
void OAILockboxRequestResponseProperties::setCreatedDateTime(const QDateTime &created_date_time) {
    m_created_date_time = created_date_time;
    m_created_date_time_isSet = true;
}

bool OAILockboxRequestResponseProperties::is_created_date_time_Set() const{
    return m_created_date_time_isSet;
}

bool OAILockboxRequestResponseProperties::is_created_date_time_Valid() const{
    return m_created_date_time_isValid;
}

qint32 OAILockboxRequestResponseProperties::getDuration() const {
    return m_duration;
}
void OAILockboxRequestResponseProperties::setDuration(const qint32 &duration) {
    m_duration = duration;
    m_duration_isSet = true;
}

bool OAILockboxRequestResponseProperties::is_duration_Set() const{
    return m_duration_isSet;
}

bool OAILockboxRequestResponseProperties::is_duration_Valid() const{
    return m_duration_isValid;
}

QDateTime OAILockboxRequestResponseProperties::getExpirationDateTime() const {
    return m_expiration_date_time;
}
void OAILockboxRequestResponseProperties::setExpirationDateTime(const QDateTime &expiration_date_time) {
    m_expiration_date_time = expiration_date_time;
    m_expiration_date_time_isSet = true;
}

bool OAILockboxRequestResponseProperties::is_expiration_date_time_Set() const{
    return m_expiration_date_time_isSet;
}

bool OAILockboxRequestResponseProperties::is_expiration_date_time_Valid() const{
    return m_expiration_date_time_isValid;
}

QString OAILockboxRequestResponseProperties::getJustification() const {
    return m_justification;
}
void OAILockboxRequestResponseProperties::setJustification(const QString &justification) {
    m_justification = justification;
    m_justification_isSet = true;
}

bool OAILockboxRequestResponseProperties::is_justification_Set() const{
    return m_justification_isSet;
}

bool OAILockboxRequestResponseProperties::is_justification_Valid() const{
    return m_justification_isValid;
}

QString OAILockboxRequestResponseProperties::getRequestId() const {
    return m_request_id;
}
void OAILockboxRequestResponseProperties::setRequestId(const QString &request_id) {
    m_request_id = request_id;
    m_request_id_isSet = true;
}

bool OAILockboxRequestResponseProperties::is_request_id_Set() const{
    return m_request_id_isSet;
}

bool OAILockboxRequestResponseProperties::is_request_id_Valid() const{
    return m_request_id_isValid;
}

QList<QString> OAILockboxRequestResponseProperties::getRequestedResourceIds() const {
    return m_requested_resource_ids;
}
void OAILockboxRequestResponseProperties::setRequestedResourceIds(const QList<QString> &requested_resource_ids) {
    m_requested_resource_ids = requested_resource_ids;
    m_requested_resource_ids_isSet = true;
}

bool OAILockboxRequestResponseProperties::is_requested_resource_ids_Set() const{
    return m_requested_resource_ids_isSet;
}

bool OAILockboxRequestResponseProperties::is_requested_resource_ids_Valid() const{
    return m_requested_resource_ids_isValid;
}

QString OAILockboxRequestResponseProperties::getResourceType() const {
    return m_resource_type;
}
void OAILockboxRequestResponseProperties::setResourceType(const QString &resource_type) {
    m_resource_type = resource_type;
    m_resource_type_isSet = true;
}

bool OAILockboxRequestResponseProperties::is_resource_type_Set() const{
    return m_resource_type_isSet;
}

bool OAILockboxRequestResponseProperties::is_resource_type_Valid() const{
    return m_resource_type_isValid;
}

OAILockboxRequestStatus OAILockboxRequestResponseProperties::getStatus() const {
    return m_status;
}
void OAILockboxRequestResponseProperties::setStatus(const OAILockboxRequestStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAILockboxRequestResponseProperties::is_status_Set() const{
    return m_status_isSet;
}

bool OAILockboxRequestResponseProperties::is_status_Valid() const{
    return m_status_isValid;
}

QString OAILockboxRequestResponseProperties::getSubscriptionId() const {
    return m_subscription_id;
}
void OAILockboxRequestResponseProperties::setSubscriptionId(const QString &subscription_id) {
    m_subscription_id = subscription_id;
    m_subscription_id_isSet = true;
}

bool OAILockboxRequestResponseProperties::is_subscription_id_Set() const{
    return m_subscription_id_isSet;
}

bool OAILockboxRequestResponseProperties::is_subscription_id_Valid() const{
    return m_subscription_id_isValid;
}

QString OAILockboxRequestResponseProperties::getSupportCaseUrl() const {
    return m_support_case_url;
}
void OAILockboxRequestResponseProperties::setSupportCaseUrl(const QString &support_case_url) {
    m_support_case_url = support_case_url;
    m_support_case_url_isSet = true;
}

bool OAILockboxRequestResponseProperties::is_support_case_url_Set() const{
    return m_support_case_url_isSet;
}

bool OAILockboxRequestResponseProperties::is_support_case_url_Valid() const{
    return m_support_case_url_isValid;
}

QString OAILockboxRequestResponseProperties::getSupportRequest() const {
    return m_support_request;
}
void OAILockboxRequestResponseProperties::setSupportRequest(const QString &support_request) {
    m_support_request = support_request;
    m_support_request_isSet = true;
}

bool OAILockboxRequestResponseProperties::is_support_request_Set() const{
    return m_support_request_isSet;
}

bool OAILockboxRequestResponseProperties::is_support_request_Valid() const{
    return m_support_request_isValid;
}

bool OAILockboxRequestResponseProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_duration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expiration_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_justification_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_requested_resource_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_subscription_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_support_case_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_support_request_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILockboxRequestResponseProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
