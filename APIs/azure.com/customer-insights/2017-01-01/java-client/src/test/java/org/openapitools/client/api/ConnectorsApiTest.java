/*
 * CustomerInsightsManagementClient
 * The Azure Customer Insights management API provides a RESTful set of web services that interact with Azure Customer Insights service to manage your resources. The API has entities that capture the relationship between an end user and the Azure Customer Insights service.
 *
 * The version of the OpenAPI document: 2017-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ConnectorListResult;
import org.openapitools.client.model.ConnectorResourceFormat;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ConnectorsApi
 */
@Disabled
public class ConnectorsApiTest {

    private final ConnectorsApi api = new ConnectorsApi();

    /**
     * Creates a connector or updates an existing connector in the hub.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void connectorsCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String hubName = null;
        String connectorName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ConnectorResourceFormat parameters = null;
        ConnectorResourceFormat response = api.connectorsCreateOrUpdate(resourceGroupName, hubName, connectorName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Deletes a connector in the hub.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void connectorsDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String hubName = null;
        String connectorName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.connectorsDelete(resourceGroupName, hubName, connectorName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets a connector in the hub.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void connectorsGetTest() throws ApiException {
        String resourceGroupName = null;
        String hubName = null;
        String connectorName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ConnectorResourceFormat response = api.connectorsGet(resourceGroupName, hubName, connectorName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets all the connectors in the specified hub.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void connectorsListByHubTest() throws ApiException {
        String resourceGroupName = null;
        String hubName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ConnectorListResult response = api.connectorsListByHub(resourceGroupName, hubName, apiVersion, subscriptionId);
        // TODO: test validations
    }

}
