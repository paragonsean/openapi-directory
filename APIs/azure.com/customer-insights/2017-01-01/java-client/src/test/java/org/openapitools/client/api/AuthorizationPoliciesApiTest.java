/*
 * CustomerInsightsManagementClient
 * The Azure Customer Insights management API provides a RESTful set of web services that interact with Azure Customer Insights service to manage your resources. The API has entities that capture the relationship between an end user and the Azure Customer Insights service.
 *
 * The version of the OpenAPI document: 2017-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AuthorizationPolicy;
import org.openapitools.client.model.AuthorizationPolicyListResult;
import org.openapitools.client.model.AuthorizationPolicyResourceFormat;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AuthorizationPoliciesApi
 */
@Disabled
public class AuthorizationPoliciesApiTest {

    private final AuthorizationPoliciesApi api = new AuthorizationPoliciesApi();

    /**
     * Creates an authorization policy or updates an existing authorization policy.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void authorizationPoliciesCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String hubName = null;
        String authorizationPolicyName = null;
        String apiVersion = null;
        String subscriptionId = null;
        AuthorizationPolicyResourceFormat parameters = null;
        AuthorizationPolicyResourceFormat response = api.authorizationPoliciesCreateOrUpdate(resourceGroupName, hubName, authorizationPolicyName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Gets an authorization policy in the hub.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void authorizationPoliciesGetTest() throws ApiException {
        String resourceGroupName = null;
        String hubName = null;
        String authorizationPolicyName = null;
        String apiVersion = null;
        String subscriptionId = null;
        AuthorizationPolicyResourceFormat response = api.authorizationPoliciesGet(resourceGroupName, hubName, authorizationPolicyName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets all the authorization policies in a specified hub.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void authorizationPoliciesListByHubTest() throws ApiException {
        String resourceGroupName = null;
        String hubName = null;
        String apiVersion = null;
        String subscriptionId = null;
        AuthorizationPolicyListResult response = api.authorizationPoliciesListByHub(resourceGroupName, hubName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Regenerates the primary policy key of the specified authorization policy.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void authorizationPoliciesRegeneratePrimaryKeyTest() throws ApiException {
        String resourceGroupName = null;
        String hubName = null;
        String authorizationPolicyName = null;
        String apiVersion = null;
        String subscriptionId = null;
        AuthorizationPolicy response = api.authorizationPoliciesRegeneratePrimaryKey(resourceGroupName, hubName, authorizationPolicyName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Regenerates the secondary policy key of the specified authorization policy.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void authorizationPoliciesRegenerateSecondaryKeyTest() throws ApiException {
        String resourceGroupName = null;
        String hubName = null;
        String authorizationPolicyName = null;
        String apiVersion = null;
        String subscriptionId = null;
        AuthorizationPolicy response = api.authorizationPoliciesRegenerateSecondaryKey(resourceGroupName, hubName, authorizationPolicyName, apiVersion, subscriptionId);
        // TODO: test validations
    }

}
