/*
 * CustomerInsightsManagementClient
 * The Azure Customer Insights management API provides a RESTful set of web services that interact with Azure Customer Insights service to manage your resources. The API has entities that capture the relationship between an end user and the Azure Customer Insights service.
 *
 * The version of the OpenAPI document: 2017-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Hub;
import org.openapitools.client.model.HubListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for HubsApi
 */
@Disabled
public class HubsApiTest {

    private final HubsApi api = new HubsApi();

    /**
     * Creates a hub, or updates an existing hub.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void hubsCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String hubName = null;
        String apiVersion = null;
        String subscriptionId = null;
        Hub parameters = null;
        Hub response = api.hubsCreateOrUpdate(resourceGroupName, hubName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Deletes the specified hub.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void hubsDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String hubName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.hubsDelete(resourceGroupName, hubName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets information about the specified hub.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void hubsGetTest() throws ApiException {
        String resourceGroupName = null;
        String hubName = null;
        String apiVersion = null;
        String subscriptionId = null;
        Hub response = api.hubsGet(resourceGroupName, hubName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets all hubs in the specified subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void hubsListTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        HubListResult response = api.hubsList(apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets all the hubs in a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void hubsListByResourceGroupTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        HubListResult response = api.hubsListByResourceGroup(resourceGroupName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Updates a Hub.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void hubsUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String hubName = null;
        String apiVersion = null;
        String subscriptionId = null;
        Hub parameters = null;
        Hub response = api.hubsUpdate(resourceGroupName, hubName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

}
