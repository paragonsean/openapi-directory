/*
 * CustomerInsightsManagementClient
 * The Azure Customer Insights management API provides a RESTful set of web services that interact with Azure Customer Insights service to manage your resources. The API has entities that capture the relationship between an end user and the Azure Customer Insights service.
 *
 * The version of the OpenAPI document: 2017-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ViewListResult;
import org.openapitools.client.model.ViewResourceFormat;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ViewsApi
 */
@Disabled
public class ViewsApiTest {

    private final ViewsApi api = new ViewsApi();

    /**
     * Creates a view or updates an existing view in the hub.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void viewsCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String hubName = null;
        String viewName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ViewResourceFormat parameters = null;
        ViewResourceFormat response = api.viewsCreateOrUpdate(resourceGroupName, hubName, viewName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Deletes a view in the specified hub.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void viewsDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String hubName = null;
        String viewName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String userId = null;
        api.viewsDelete(resourceGroupName, hubName, viewName, apiVersion, subscriptionId, userId);
        // TODO: test validations
    }

    /**
     * Gets a view in the hub.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void viewsGetTest() throws ApiException {
        String resourceGroupName = null;
        String hubName = null;
        String viewName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String userId = null;
        ViewResourceFormat response = api.viewsGet(resourceGroupName, hubName, viewName, apiVersion, subscriptionId, userId);
        // TODO: test validations
    }

    /**
     * Gets all available views for given user in the specified hub.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void viewsListByHubTest() throws ApiException {
        String resourceGroupName = null;
        String hubName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String userId = null;
        ViewListResult response = api.viewsListByHub(resourceGroupName, hubName, apiVersion, subscriptionId, userId);
        // TODO: test validations
    }

}
