/**
 * CustomerInsightsManagementClient
 * The Azure Customer Insights management API provides a RESTful set of web services that interact with Azure Customer Insights service to manage your resources. The API has entities that capture the relationship between an end user and the Azure Customer Insights service.
 *
 * The version of the OpenAPI document: 2017-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import RelationshipLinkListResult from '../model/RelationshipLinkListResult';
import RelationshipLinkResourceFormat from '../model/RelationshipLinkResourceFormat';

/**
* RelationshipLinks service.
* @module api/RelationshipLinksApi
* @version 2017-01-01
*/
export default class RelationshipLinksApi {

    /**
    * Constructs a new RelationshipLinksApi. 
    * @alias module:api/RelationshipLinksApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the relationshipLinksCreateOrUpdate operation.
     * @callback module:api/RelationshipLinksApi~relationshipLinksCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RelationshipLinkResourceFormat} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a relationship link or updates an existing relationship link within a hub.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} hubName The name of the hub.
     * @param {String} relationshipLinkName The name of the relationship link.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/RelationshipLinkResourceFormat} parameters Parameters supplied to the CreateOrUpdate relationship link operation.
     * @param {module:api/RelationshipLinksApi~relationshipLinksCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RelationshipLinkResourceFormat}
     */
    relationshipLinksCreateOrUpdate(resourceGroupName, hubName, relationshipLinkName, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling relationshipLinksCreateOrUpdate");
      }
      // verify the required parameter 'hubName' is set
      if (hubName === undefined || hubName === null) {
        throw new Error("Missing the required parameter 'hubName' when calling relationshipLinksCreateOrUpdate");
      }
      // verify the required parameter 'relationshipLinkName' is set
      if (relationshipLinkName === undefined || relationshipLinkName === null) {
        throw new Error("Missing the required parameter 'relationshipLinkName' when calling relationshipLinksCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling relationshipLinksCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling relationshipLinksCreateOrUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling relationshipLinksCreateOrUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'hubName': hubName,
        'relationshipLinkName': relationshipLinkName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = RelationshipLinkResourceFormat;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/relationshipLinks/{relationshipLinkName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the relationshipLinksDelete operation.
     * @callback module:api/RelationshipLinksApi~relationshipLinksDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a relationship link within a hub.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} hubName The name of the hub.
     * @param {String} relationshipLinkName The name of the relationship.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/RelationshipLinksApi~relationshipLinksDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    relationshipLinksDelete(resourceGroupName, hubName, relationshipLinkName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling relationshipLinksDelete");
      }
      // verify the required parameter 'hubName' is set
      if (hubName === undefined || hubName === null) {
        throw new Error("Missing the required parameter 'hubName' when calling relationshipLinksDelete");
      }
      // verify the required parameter 'relationshipLinkName' is set
      if (relationshipLinkName === undefined || relationshipLinkName === null) {
        throw new Error("Missing the required parameter 'relationshipLinkName' when calling relationshipLinksDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling relationshipLinksDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling relationshipLinksDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'hubName': hubName,
        'relationshipLinkName': relationshipLinkName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/relationshipLinks/{relationshipLinkName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the relationshipLinksGet operation.
     * @callback module:api/RelationshipLinksApi~relationshipLinksGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RelationshipLinkResourceFormat} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets information about the specified relationship Link.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} hubName The name of the hub.
     * @param {String} relationshipLinkName The name of the relationship link.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/RelationshipLinksApi~relationshipLinksGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RelationshipLinkResourceFormat}
     */
    relationshipLinksGet(resourceGroupName, hubName, relationshipLinkName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling relationshipLinksGet");
      }
      // verify the required parameter 'hubName' is set
      if (hubName === undefined || hubName === null) {
        throw new Error("Missing the required parameter 'hubName' when calling relationshipLinksGet");
      }
      // verify the required parameter 'relationshipLinkName' is set
      if (relationshipLinkName === undefined || relationshipLinkName === null) {
        throw new Error("Missing the required parameter 'relationshipLinkName' when calling relationshipLinksGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling relationshipLinksGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling relationshipLinksGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'hubName': hubName,
        'relationshipLinkName': relationshipLinkName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = RelationshipLinkResourceFormat;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/relationshipLinks/{relationshipLinkName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the relationshipLinksListByHub operation.
     * @callback module:api/RelationshipLinksApi~relationshipLinksListByHubCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RelationshipLinkListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets all relationship links in the hub.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} hubName The name of the hub.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/RelationshipLinksApi~relationshipLinksListByHubCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RelationshipLinkListResult}
     */
    relationshipLinksListByHub(resourceGroupName, hubName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling relationshipLinksListByHub");
      }
      // verify the required parameter 'hubName' is set
      if (hubName === undefined || hubName === null) {
        throw new Error("Missing the required parameter 'hubName' when calling relationshipLinksListByHub");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling relationshipLinksListByHub");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling relationshipLinksListByHub");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'hubName': hubName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = RelationshipLinkListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/relationshipLinks', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
