/**
 * CustomerInsightsManagementClient
 * The Azure Customer Insights management API provides a RESTful set of web services that interact with Azure Customer Insights service to manage your resources. The API has entities that capture the relationship between an end user and the Azure Customer Insights service.
 *
 * The version of the OpenAPI document: 2017-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CustomerInsightsManagementClient);
  }
}(this, function(expect, CustomerInsightsManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CustomerInsightsManagementClient.RoleAssignment();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RoleAssignment', function() {
    it('should create an instance of RoleAssignment', function() {
      // uncomment below and update the code to test RoleAssignment
      //var instance = new CustomerInsightsManagementClient.RoleAssignment();
      //expect(instance).to.be.a(CustomerInsightsManagementClient.RoleAssignment);
    });

    it('should have the property assignmentName (base name: "assignmentName")', function() {
      // uncomment below and update the code to test the property assignmentName
      //var instance = new CustomerInsightsManagementClient.RoleAssignment();
      //expect(instance).to.be();
    });

    it('should have the property conflationPolicies (base name: "conflationPolicies")', function() {
      // uncomment below and update the code to test the property conflationPolicies
      //var instance = new CustomerInsightsManagementClient.RoleAssignment();
      //expect(instance).to.be();
    });

    it('should have the property connectors (base name: "connectors")', function() {
      // uncomment below and update the code to test the property connectors
      //var instance = new CustomerInsightsManagementClient.RoleAssignment();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new CustomerInsightsManagementClient.RoleAssignment();
      //expect(instance).to.be();
    });

    it('should have the property displayName (base name: "displayName")', function() {
      // uncomment below and update the code to test the property displayName
      //var instance = new CustomerInsightsManagementClient.RoleAssignment();
      //expect(instance).to.be();
    });

    it('should have the property interactions (base name: "interactions")', function() {
      // uncomment below and update the code to test the property interactions
      //var instance = new CustomerInsightsManagementClient.RoleAssignment();
      //expect(instance).to.be();
    });

    it('should have the property kpis (base name: "kpis")', function() {
      // uncomment below and update the code to test the property kpis
      //var instance = new CustomerInsightsManagementClient.RoleAssignment();
      //expect(instance).to.be();
    });

    it('should have the property links (base name: "links")', function() {
      // uncomment below and update the code to test the property links
      //var instance = new CustomerInsightsManagementClient.RoleAssignment();
      //expect(instance).to.be();
    });

    it('should have the property principals (base name: "principals")', function() {
      // uncomment below and update the code to test the property principals
      //var instance = new CustomerInsightsManagementClient.RoleAssignment();
      //expect(instance).to.be();
    });

    it('should have the property profiles (base name: "profiles")', function() {
      // uncomment below and update the code to test the property profiles
      //var instance = new CustomerInsightsManagementClient.RoleAssignment();
      //expect(instance).to.be();
    });

    it('should have the property provisioningState (base name: "provisioningState")', function() {
      // uncomment below and update the code to test the property provisioningState
      //var instance = new CustomerInsightsManagementClient.RoleAssignment();
      //expect(instance).to.be();
    });

    it('should have the property relationshipLinks (base name: "relationshipLinks")', function() {
      // uncomment below and update the code to test the property relationshipLinks
      //var instance = new CustomerInsightsManagementClient.RoleAssignment();
      //expect(instance).to.be();
    });

    it('should have the property relationships (base name: "relationships")', function() {
      // uncomment below and update the code to test the property relationships
      //var instance = new CustomerInsightsManagementClient.RoleAssignment();
      //expect(instance).to.be();
    });

    it('should have the property role (base name: "role")', function() {
      // uncomment below and update the code to test the property role
      //var instance = new CustomerInsightsManagementClient.RoleAssignment();
      //expect(instance).to.be();
    });

    it('should have the property roleAssignments (base name: "roleAssignments")', function() {
      // uncomment below and update the code to test the property roleAssignments
      //var instance = new CustomerInsightsManagementClient.RoleAssignment();
      //expect(instance).to.be();
    });

    it('should have the property sasPolicies (base name: "sasPolicies")', function() {
      // uncomment below and update the code to test the property sasPolicies
      //var instance = new CustomerInsightsManagementClient.RoleAssignment();
      //expect(instance).to.be();
    });

    it('should have the property segments (base name: "segments")', function() {
      // uncomment below and update the code to test the property segments
      //var instance = new CustomerInsightsManagementClient.RoleAssignment();
      //expect(instance).to.be();
    });

    it('should have the property tenantId (base name: "tenantId")', function() {
      // uncomment below and update the code to test the property tenantId
      //var instance = new CustomerInsightsManagementClient.RoleAssignment();
      //expect(instance).to.be();
    });

    it('should have the property views (base name: "views")', function() {
      // uncomment below and update the code to test the property views
      //var instance = new CustomerInsightsManagementClient.RoleAssignment();
      //expect(instance).to.be();
    });

    it('should have the property widgetTypes (base name: "widgetTypes")', function() {
      // uncomment below and update the code to test the property widgetTypes
      //var instance = new CustomerInsightsManagementClient.RoleAssignment();
      //expect(instance).to.be();
    });

  });

}));
