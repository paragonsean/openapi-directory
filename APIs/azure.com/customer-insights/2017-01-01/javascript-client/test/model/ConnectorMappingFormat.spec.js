/**
 * CustomerInsightsManagementClient
 * The Azure Customer Insights management API provides a RESTful set of web services that interact with Azure Customer Insights service to manage your resources. The API has entities that capture the relationship between an end user and the Azure Customer Insights service.
 *
 * The version of the OpenAPI document: 2017-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CustomerInsightsManagementClient);
  }
}(this, function(expect, CustomerInsightsManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CustomerInsightsManagementClient.ConnectorMappingFormat();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ConnectorMappingFormat', function() {
    it('should create an instance of ConnectorMappingFormat', function() {
      // uncomment below and update the code to test ConnectorMappingFormat
      //var instance = new CustomerInsightsManagementClient.ConnectorMappingFormat();
      //expect(instance).to.be.a(CustomerInsightsManagementClient.ConnectorMappingFormat);
    });

    it('should have the property acceptLanguage (base name: "acceptLanguage")', function() {
      // uncomment below and update the code to test the property acceptLanguage
      //var instance = new CustomerInsightsManagementClient.ConnectorMappingFormat();
      //expect(instance).to.be();
    });

    it('should have the property arraySeparator (base name: "arraySeparator")', function() {
      // uncomment below and update the code to test the property arraySeparator
      //var instance = new CustomerInsightsManagementClient.ConnectorMappingFormat();
      //expect(instance).to.be();
    });

    it('should have the property columnDelimiter (base name: "columnDelimiter")', function() {
      // uncomment below and update the code to test the property columnDelimiter
      //var instance = new CustomerInsightsManagementClient.ConnectorMappingFormat();
      //expect(instance).to.be();
    });

    it('should have the property formatType (base name: "formatType")', function() {
      // uncomment below and update the code to test the property formatType
      //var instance = new CustomerInsightsManagementClient.ConnectorMappingFormat();
      //expect(instance).to.be();
    });

    it('should have the property quoteCharacter (base name: "quoteCharacter")', function() {
      // uncomment below and update the code to test the property quoteCharacter
      //var instance = new CustomerInsightsManagementClient.ConnectorMappingFormat();
      //expect(instance).to.be();
    });

    it('should have the property quoteEscapeCharacter (base name: "quoteEscapeCharacter")', function() {
      // uncomment below and update the code to test the property quoteEscapeCharacter
      //var instance = new CustomerInsightsManagementClient.ConnectorMappingFormat();
      //expect(instance).to.be();
    });

  });

}));
