# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.participant_property_reference import ParticipantPropertyReference
from openapi_server import util


class RelationshipsLookup(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, existing_relationship_name: str=None, profile_name: str=None, profile_property_references: List[ParticipantPropertyReference]=None, related_profile_name: str=None, related_profile_property_references: List[ParticipantPropertyReference]=None):
        """RelationshipsLookup - a model defined in OpenAPI

        :param existing_relationship_name: The existing_relationship_name of this RelationshipsLookup.
        :param profile_name: The profile_name of this RelationshipsLookup.
        :param profile_property_references: The profile_property_references of this RelationshipsLookup.
        :param related_profile_name: The related_profile_name of this RelationshipsLookup.
        :param related_profile_property_references: The related_profile_property_references of this RelationshipsLookup.
        """
        self.openapi_types = {
            'existing_relationship_name': str,
            'profile_name': str,
            'profile_property_references': List[ParticipantPropertyReference],
            'related_profile_name': str,
            'related_profile_property_references': List[ParticipantPropertyReference]
        }

        self.attribute_map = {
            'existing_relationship_name': 'existingRelationshipName',
            'profile_name': 'profileName',
            'profile_property_references': 'profilePropertyReferences',
            'related_profile_name': 'relatedProfileName',
            'related_profile_property_references': 'relatedProfilePropertyReferences'
        }

        self._existing_relationship_name = existing_relationship_name
        self._profile_name = profile_name
        self._profile_property_references = profile_property_references
        self._related_profile_name = related_profile_name
        self._related_profile_property_references = related_profile_property_references

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RelationshipsLookup':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RelationshipsLookup of this RelationshipsLookup.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def existing_relationship_name(self):
        """Gets the existing_relationship_name of this RelationshipsLookup.

        The name of existing Relationship.

        :return: The existing_relationship_name of this RelationshipsLookup.
        :rtype: str
        """
        return self._existing_relationship_name

    @existing_relationship_name.setter
    def existing_relationship_name(self, existing_relationship_name):
        """Sets the existing_relationship_name of this RelationshipsLookup.

        The name of existing Relationship.

        :param existing_relationship_name: The existing_relationship_name of this RelationshipsLookup.
        :type existing_relationship_name: str
        """

        self._existing_relationship_name = existing_relationship_name

    @property
    def profile_name(self):
        """Gets the profile_name of this RelationshipsLookup.

        The relationship profile.

        :return: The profile_name of this RelationshipsLookup.
        :rtype: str
        """
        return self._profile_name

    @profile_name.setter
    def profile_name(self, profile_name):
        """Sets the profile_name of this RelationshipsLookup.

        The relationship profile.

        :param profile_name: The profile_name of this RelationshipsLookup.
        :type profile_name: str
        """

        self._profile_name = profile_name

    @property
    def profile_property_references(self):
        """Gets the profile_property_references of this RelationshipsLookup.

        The property references for the profile type.

        :return: The profile_property_references of this RelationshipsLookup.
        :rtype: List[ParticipantPropertyReference]
        """
        return self._profile_property_references

    @profile_property_references.setter
    def profile_property_references(self, profile_property_references):
        """Sets the profile_property_references of this RelationshipsLookup.

        The property references for the profile type.

        :param profile_property_references: The profile_property_references of this RelationshipsLookup.
        :type profile_property_references: List[ParticipantPropertyReference]
        """

        self._profile_property_references = profile_property_references

    @property
    def related_profile_name(self):
        """Gets the related_profile_name of this RelationshipsLookup.

        The related profile.

        :return: The related_profile_name of this RelationshipsLookup.
        :rtype: str
        """
        return self._related_profile_name

    @related_profile_name.setter
    def related_profile_name(self, related_profile_name):
        """Sets the related_profile_name of this RelationshipsLookup.

        The related profile.

        :param related_profile_name: The related_profile_name of this RelationshipsLookup.
        :type related_profile_name: str
        """

        self._related_profile_name = related_profile_name

    @property
    def related_profile_property_references(self):
        """Gets the related_profile_property_references of this RelationshipsLookup.

        The property references for the related profile type.

        :return: The related_profile_property_references of this RelationshipsLookup.
        :rtype: List[ParticipantPropertyReference]
        """
        return self._related_profile_property_references

    @related_profile_property_references.setter
    def related_profile_property_references(self, related_profile_property_references):
        """Sets the related_profile_property_references of this RelationshipsLookup.

        The property references for the related profile type.

        :param related_profile_property_references: The related_profile_property_references of this RelationshipsLookup.
        :type related_profile_property_references: List[ParticipantPropertyReference]
        """

        self._related_profile_property_references = related_profile_property_references
