# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.hub_billing_info_format import HubBillingInfoFormat
from openapi_server import util


class HubPropertiesFormat(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_endpoint: str=None, hub_billing_info: HubBillingInfoFormat=None, provisioning_state: str=None, tenant_features: int=None, web_endpoint: str=None):
        """HubPropertiesFormat - a model defined in OpenAPI

        :param api_endpoint: The api_endpoint of this HubPropertiesFormat.
        :param hub_billing_info: The hub_billing_info of this HubPropertiesFormat.
        :param provisioning_state: The provisioning_state of this HubPropertiesFormat.
        :param tenant_features: The tenant_features of this HubPropertiesFormat.
        :param web_endpoint: The web_endpoint of this HubPropertiesFormat.
        """
        self.openapi_types = {
            'api_endpoint': str,
            'hub_billing_info': HubBillingInfoFormat,
            'provisioning_state': str,
            'tenant_features': int,
            'web_endpoint': str
        }

        self.attribute_map = {
            'api_endpoint': 'apiEndpoint',
            'hub_billing_info': 'hubBillingInfo',
            'provisioning_state': 'provisioningState',
            'tenant_features': 'tenantFeatures',
            'web_endpoint': 'webEndpoint'
        }

        self._api_endpoint = api_endpoint
        self._hub_billing_info = hub_billing_info
        self._provisioning_state = provisioning_state
        self._tenant_features = tenant_features
        self._web_endpoint = web_endpoint

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HubPropertiesFormat':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HubPropertiesFormat of this HubPropertiesFormat.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_endpoint(self):
        """Gets the api_endpoint of this HubPropertiesFormat.

        API endpoint URL of the hub.

        :return: The api_endpoint of this HubPropertiesFormat.
        :rtype: str
        """
        return self._api_endpoint

    @api_endpoint.setter
    def api_endpoint(self, api_endpoint):
        """Sets the api_endpoint of this HubPropertiesFormat.

        API endpoint URL of the hub.

        :param api_endpoint: The api_endpoint of this HubPropertiesFormat.
        :type api_endpoint: str
        """

        self._api_endpoint = api_endpoint

    @property
    def hub_billing_info(self):
        """Gets the hub_billing_info of this HubPropertiesFormat.


        :return: The hub_billing_info of this HubPropertiesFormat.
        :rtype: HubBillingInfoFormat
        """
        return self._hub_billing_info

    @hub_billing_info.setter
    def hub_billing_info(self, hub_billing_info):
        """Sets the hub_billing_info of this HubPropertiesFormat.


        :param hub_billing_info: The hub_billing_info of this HubPropertiesFormat.
        :type hub_billing_info: HubBillingInfoFormat
        """

        self._hub_billing_info = hub_billing_info

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this HubPropertiesFormat.

        Provisioning state of the hub.

        :return: The provisioning_state of this HubPropertiesFormat.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this HubPropertiesFormat.

        Provisioning state of the hub.

        :param provisioning_state: The provisioning_state of this HubPropertiesFormat.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state

    @property
    def tenant_features(self):
        """Gets the tenant_features of this HubPropertiesFormat.

        The bit flags for enabled hub features. Bit 0 is set to 1 indicates graph is enabled, or disabled if set to 0. Bit 1 is set to 1 indicates the hub is disabled, or enabled if set to 0.

        :return: The tenant_features of this HubPropertiesFormat.
        :rtype: int
        """
        return self._tenant_features

    @tenant_features.setter
    def tenant_features(self, tenant_features):
        """Sets the tenant_features of this HubPropertiesFormat.

        The bit flags for enabled hub features. Bit 0 is set to 1 indicates graph is enabled, or disabled if set to 0. Bit 1 is set to 1 indicates the hub is disabled, or enabled if set to 0.

        :param tenant_features: The tenant_features of this HubPropertiesFormat.
        :type tenant_features: int
        """

        self._tenant_features = tenant_features

    @property
    def web_endpoint(self):
        """Gets the web_endpoint of this HubPropertiesFormat.

        Web endpoint URL of the hub.

        :return: The web_endpoint of this HubPropertiesFormat.
        :rtype: str
        """
        return self._web_endpoint

    @web_endpoint.setter
    def web_endpoint(self, web_endpoint):
        """Sets the web_endpoint of this HubPropertiesFormat.

        Web endpoint URL of the hub.

        :param web_endpoint: The web_endpoint of this HubPropertiesFormat.
        :type web_endpoint: str
        """

        self._web_endpoint = web_endpoint
