/**
 * CustomerInsightsManagementClient
 * The Azure Customer Insights management API provides a RESTful set of web services that interact with Azure Customer Insights service to manage your resources. The API has entities that capture the relationship between an end user and the Azure Customer Insights service.
 *
 * The version of the OpenAPI document: 2017-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIKpiExtract.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIKpiExtract::OAIKpiExtract(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIKpiExtract::OAIKpiExtract() {
    this->initializeModel();
}

OAIKpiExtract::~OAIKpiExtract() {}

void OAIKpiExtract::initializeModel() {

    m_expression_isSet = false;
    m_expression_isValid = false;

    m_extract_name_isSet = false;
    m_extract_name_isValid = false;
}

void OAIKpiExtract::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIKpiExtract::fromJsonObject(QJsonObject json) {

    m_expression_isValid = ::OpenAPI::fromJsonValue(m_expression, json[QString("expression")]);
    m_expression_isSet = !json[QString("expression")].isNull() && m_expression_isValid;

    m_extract_name_isValid = ::OpenAPI::fromJsonValue(m_extract_name, json[QString("extractName")]);
    m_extract_name_isSet = !json[QString("extractName")].isNull() && m_extract_name_isValid;
}

QString OAIKpiExtract::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIKpiExtract::asJsonObject() const {
    QJsonObject obj;
    if (m_expression_isSet) {
        obj.insert(QString("expression"), ::OpenAPI::toJsonValue(m_expression));
    }
    if (m_extract_name_isSet) {
        obj.insert(QString("extractName"), ::OpenAPI::toJsonValue(m_extract_name));
    }
    return obj;
}

QString OAIKpiExtract::getExpression() const {
    return m_expression;
}
void OAIKpiExtract::setExpression(const QString &expression) {
    m_expression = expression;
    m_expression_isSet = true;
}

bool OAIKpiExtract::is_expression_Set() const{
    return m_expression_isSet;
}

bool OAIKpiExtract::is_expression_Valid() const{
    return m_expression_isValid;
}

QString OAIKpiExtract::getExtractName() const {
    return m_extract_name;
}
void OAIKpiExtract::setExtractName(const QString &extract_name) {
    m_extract_name = extract_name;
    m_extract_name_isSet = true;
}

bool OAIKpiExtract::is_extract_name_Set() const{
    return m_extract_name_isSet;
}

bool OAIKpiExtract::is_extract_name_Valid() const{
    return m_extract_name_isValid;
}

bool OAIKpiExtract::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_expression_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_extract_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIKpiExtract::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_expression_isValid && m_extract_name_isValid && true;
}

} // namespace OpenAPI
