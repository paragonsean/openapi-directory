/**
 * CustomerInsightsManagementClient
 * The Azure Customer Insights management API provides a RESTful set of web services that interact with Azure Customer Insights service to manage your resources. The API has entities that capture the relationship between an end user and the Azure Customer Insights service.
 *
 * The version of the OpenAPI document: 2017-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRoleAssignment.h
 *
 * The Role Assignment definition.
 */

#ifndef OAIRoleAssignment_H
#define OAIRoleAssignment_H

#include <QJsonObject>

#include "OAIAssignmentPrincipal.h"
#include "OAIProvisioningState.h"
#include "OAIResourceSetDescription.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIResourceSetDescription;
class OAIAssignmentPrincipal;

class OAIRoleAssignment : public OAIObject {
public:
    OAIRoleAssignment();
    OAIRoleAssignment(QString json);
    ~OAIRoleAssignment() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAssignmentName() const;
    void setAssignmentName(const QString &assignment_name);
    bool is_assignment_name_Set() const;
    bool is_assignment_name_Valid() const;

    OAIResourceSetDescription getConflationPolicies() const;
    void setConflationPolicies(const OAIResourceSetDescription &conflation_policies);
    bool is_conflation_policies_Set() const;
    bool is_conflation_policies_Valid() const;

    OAIResourceSetDescription getConnectors() const;
    void setConnectors(const OAIResourceSetDescription &connectors);
    bool is_connectors_Set() const;
    bool is_connectors_Valid() const;

    QMap<QString, QString> getDescription() const;
    void setDescription(const QMap<QString, QString> &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QMap<QString, QString> getDisplayName() const;
    void setDisplayName(const QMap<QString, QString> &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    OAIResourceSetDescription getInteractions() const;
    void setInteractions(const OAIResourceSetDescription &interactions);
    bool is_interactions_Set() const;
    bool is_interactions_Valid() const;

    OAIResourceSetDescription getKpis() const;
    void setKpis(const OAIResourceSetDescription &kpis);
    bool is_kpis_Set() const;
    bool is_kpis_Valid() const;

    OAIResourceSetDescription getLinks() const;
    void setLinks(const OAIResourceSetDescription &links);
    bool is_links_Set() const;
    bool is_links_Valid() const;

    QList<OAIAssignmentPrincipal> getPrincipals() const;
    void setPrincipals(const QList<OAIAssignmentPrincipal> &principals);
    bool is_principals_Set() const;
    bool is_principals_Valid() const;

    OAIResourceSetDescription getProfiles() const;
    void setProfiles(const OAIResourceSetDescription &profiles);
    bool is_profiles_Set() const;
    bool is_profiles_Valid() const;

    OAIProvisioningState getProvisioningState() const;
    void setProvisioningState(const OAIProvisioningState &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    OAIResourceSetDescription getRelationshipLinks() const;
    void setRelationshipLinks(const OAIResourceSetDescription &relationship_links);
    bool is_relationship_links_Set() const;
    bool is_relationship_links_Valid() const;

    OAIResourceSetDescription getRelationships() const;
    void setRelationships(const OAIResourceSetDescription &relationships);
    bool is_relationships_Set() const;
    bool is_relationships_Valid() const;

    QString getRole() const;
    void setRole(const QString &role);
    bool is_role_Set() const;
    bool is_role_Valid() const;

    OAIResourceSetDescription getRoleAssignments() const;
    void setRoleAssignments(const OAIResourceSetDescription &role_assignments);
    bool is_role_assignments_Set() const;
    bool is_role_assignments_Valid() const;

    OAIResourceSetDescription getSasPolicies() const;
    void setSasPolicies(const OAIResourceSetDescription &sas_policies);
    bool is_sas_policies_Set() const;
    bool is_sas_policies_Valid() const;

    OAIResourceSetDescription getSegments() const;
    void setSegments(const OAIResourceSetDescription &segments);
    bool is_segments_Set() const;
    bool is_segments_Valid() const;

    QString getTenantId() const;
    void setTenantId(const QString &tenant_id);
    bool is_tenant_id_Set() const;
    bool is_tenant_id_Valid() const;

    OAIResourceSetDescription getViews() const;
    void setViews(const OAIResourceSetDescription &views);
    bool is_views_Set() const;
    bool is_views_Valid() const;

    OAIResourceSetDescription getWidgetTypes() const;
    void setWidgetTypes(const OAIResourceSetDescription &widget_types);
    bool is_widget_types_Set() const;
    bool is_widget_types_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_assignment_name;
    bool m_assignment_name_isSet;
    bool m_assignment_name_isValid;

    OAIResourceSetDescription m_conflation_policies;
    bool m_conflation_policies_isSet;
    bool m_conflation_policies_isValid;

    OAIResourceSetDescription m_connectors;
    bool m_connectors_isSet;
    bool m_connectors_isValid;

    QMap<QString, QString> m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QMap<QString, QString> m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    OAIResourceSetDescription m_interactions;
    bool m_interactions_isSet;
    bool m_interactions_isValid;

    OAIResourceSetDescription m_kpis;
    bool m_kpis_isSet;
    bool m_kpis_isValid;

    OAIResourceSetDescription m_links;
    bool m_links_isSet;
    bool m_links_isValid;

    QList<OAIAssignmentPrincipal> m_principals;
    bool m_principals_isSet;
    bool m_principals_isValid;

    OAIResourceSetDescription m_profiles;
    bool m_profiles_isSet;
    bool m_profiles_isValid;

    OAIProvisioningState m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    OAIResourceSetDescription m_relationship_links;
    bool m_relationship_links_isSet;
    bool m_relationship_links_isValid;

    OAIResourceSetDescription m_relationships;
    bool m_relationships_isSet;
    bool m_relationships_isValid;

    QString m_role;
    bool m_role_isSet;
    bool m_role_isValid;

    OAIResourceSetDescription m_role_assignments;
    bool m_role_assignments_isSet;
    bool m_role_assignments_isValid;

    OAIResourceSetDescription m_sas_policies;
    bool m_sas_policies_isSet;
    bool m_sas_policies_isValid;

    OAIResourceSetDescription m_segments;
    bool m_segments_isSet;
    bool m_segments_isValid;

    QString m_tenant_id;
    bool m_tenant_id_isSet;
    bool m_tenant_id_isValid;

    OAIResourceSetDescription m_views;
    bool m_views_isSet;
    bool m_views_isValid;

    OAIResourceSetDescription m_widget_types;
    bool m_widget_types_isSet;
    bool m_widget_types_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRoleAssignment)

#endif // OAIRoleAssignment_H
