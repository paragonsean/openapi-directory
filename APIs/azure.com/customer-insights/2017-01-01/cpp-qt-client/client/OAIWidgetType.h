/**
 * CustomerInsightsManagementClient
 * The Azure Customer Insights management API provides a RESTful set of web services that interact with Azure Customer Insights service to manage your resources. The API has entities that capture the relationship between an end user and the Azure Customer Insights service.
 *
 * The version of the OpenAPI document: 2017-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWidgetType.h
 *
 * Definition of WidgetType.
 */

#ifndef OAIWidgetType_H
#define OAIWidgetType_H

#include <QJsonObject>

#include <QDateTime>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIWidgetType : public OAIObject {
public:
    OAIWidgetType();
    OAIWidgetType(QString json);
    ~OAIWidgetType() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getChanged() const;
    void setChanged(const QDateTime &changed);
    bool is_changed_Set() const;
    bool is_changed_Valid() const;

    QDateTime getCreated() const;
    void setCreated(const QDateTime &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    QString getDefinition() const;
    void setDefinition(const QString &definition);
    bool is_definition_Set() const;
    bool is_definition_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QMap<QString, QString> getDisplayName() const;
    void setDisplayName(const QMap<QString, QString> &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QString getImageUrl() const;
    void setImageUrl(const QString &image_url);
    bool is_image_url_Set() const;
    bool is_image_url_Valid() const;

    QString getTenantId() const;
    void setTenantId(const QString &tenant_id);
    bool is_tenant_id_Set() const;
    bool is_tenant_id_Valid() const;

    QString getWidgetTypeName() const;
    void setWidgetTypeName(const QString &widget_type_name);
    bool is_widget_type_name_Set() const;
    bool is_widget_type_name_Valid() const;

    QString getWidgetVersion() const;
    void setWidgetVersion(const QString &widget_version);
    bool is_widget_version_Set() const;
    bool is_widget_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_changed;
    bool m_changed_isSet;
    bool m_changed_isValid;

    QDateTime m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    QString m_definition;
    bool m_definition_isSet;
    bool m_definition_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QMap<QString, QString> m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QString m_image_url;
    bool m_image_url_isSet;
    bool m_image_url_isValid;

    QString m_tenant_id;
    bool m_tenant_id_isSet;
    bool m_tenant_id_isValid;

    QString m_widget_type_name;
    bool m_widget_type_name_isSet;
    bool m_widget_type_name_isValid;

    QString m_widget_version;
    bool m_widget_version_isSet;
    bool m_widget_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWidgetType)

#endif // OAIWidgetType_H
