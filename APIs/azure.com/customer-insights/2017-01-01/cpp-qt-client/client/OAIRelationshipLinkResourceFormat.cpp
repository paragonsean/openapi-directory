/**
 * CustomerInsightsManagementClient
 * The Azure Customer Insights management API provides a RESTful set of web services that interact with Azure Customer Insights service to manage your resources. The API has entities that capture the relationship between an end user and the Azure Customer Insights service.
 *
 * The version of the OpenAPI document: 2017-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRelationshipLinkResourceFormat.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRelationshipLinkResourceFormat::OAIRelationshipLinkResourceFormat(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRelationshipLinkResourceFormat::OAIRelationshipLinkResourceFormat() {
    this->initializeModel();
}

OAIRelationshipLinkResourceFormat::~OAIRelationshipLinkResourceFormat() {}

void OAIRelationshipLinkResourceFormat::initializeModel() {

    m_properties_isSet = false;
    m_properties_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIRelationshipLinkResourceFormat::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRelationshipLinkResourceFormat::fromJsonObject(QJsonObject json) {

    m_properties_isValid = ::OpenAPI::fromJsonValue(m_properties, json[QString("properties")]);
    m_properties_isSet = !json[QString("properties")].isNull() && m_properties_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIRelationshipLinkResourceFormat::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRelationshipLinkResourceFormat::asJsonObject() const {
    QJsonObject obj;
    if (m_properties.isSet()) {
        obj.insert(QString("properties"), ::OpenAPI::toJsonValue(m_properties));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

OAIRelationshipLinkDefinition OAIRelationshipLinkResourceFormat::getProperties() const {
    return m_properties;
}
void OAIRelationshipLinkResourceFormat::setProperties(const OAIRelationshipLinkDefinition &properties) {
    m_properties = properties;
    m_properties_isSet = true;
}

bool OAIRelationshipLinkResourceFormat::is_properties_Set() const{
    return m_properties_isSet;
}

bool OAIRelationshipLinkResourceFormat::is_properties_Valid() const{
    return m_properties_isValid;
}

QString OAIRelationshipLinkResourceFormat::getId() const {
    return m_id;
}
void OAIRelationshipLinkResourceFormat::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIRelationshipLinkResourceFormat::is_id_Set() const{
    return m_id_isSet;
}

bool OAIRelationshipLinkResourceFormat::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIRelationshipLinkResourceFormat::getName() const {
    return m_name;
}
void OAIRelationshipLinkResourceFormat::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIRelationshipLinkResourceFormat::is_name_Set() const{
    return m_name_isSet;
}

bool OAIRelationshipLinkResourceFormat::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIRelationshipLinkResourceFormat::getType() const {
    return m_type;
}
void OAIRelationshipLinkResourceFormat::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIRelationshipLinkResourceFormat::is_type_Set() const{
    return m_type_isSet;
}

bool OAIRelationshipLinkResourceFormat::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIRelationshipLinkResourceFormat::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_properties.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRelationshipLinkResourceFormat::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
