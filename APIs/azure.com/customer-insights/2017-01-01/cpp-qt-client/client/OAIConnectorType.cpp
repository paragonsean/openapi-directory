/**
 * CustomerInsightsManagementClient
 * The Azure Customer Insights management API provides a RESTful set of web services that interact with Azure Customer Insights service to manage your resources. The API has entities that capture the relationship between an end user and the Azure Customer Insights service.
 *
 * The version of the OpenAPI document: 2017-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConnectorType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConnectorType::OAIConnectorType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConnectorType::OAIConnectorType() {
    this->initializeModel();
}

OAIConnectorType::~OAIConnectorType() {}

void OAIConnectorType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIConnectorType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIConnectorType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("None", Qt::CaseInsensitive) == 0) {
        m_value = eOAIConnectorType::NONE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CRM", Qt::CaseInsensitive) == 0) {
        m_value = eOAIConnectorType::CRM;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AzureBlob", Qt::CaseInsensitive) == 0) {
        m_value = eOAIConnectorType::AZUREBLOB;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Salesforce", Qt::CaseInsensitive) == 0) {
        m_value = eOAIConnectorType::SALESFORCE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ExchangeOnline", Qt::CaseInsensitive) == 0) {
        m_value = eOAIConnectorType::EXCHANGEONLINE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Outbound", Qt::CaseInsensitive) == 0) {
        m_value = eOAIConnectorType::OUTBOUND;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIConnectorType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIConnectorType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIConnectorType::NONE:
            val = "None";
            break;
        case eOAIConnectorType::CRM:
            val = "CRM";
            break;
        case eOAIConnectorType::AZUREBLOB:
            val = "AzureBlob";
            break;
        case eOAIConnectorType::SALESFORCE:
            val = "Salesforce";
            break;
        case eOAIConnectorType::EXCHANGEONLINE:
            val = "ExchangeOnline";
            break;
        case eOAIConnectorType::OUTBOUND:
            val = "Outbound";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIConnectorType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIConnectorType::eOAIConnectorType OAIConnectorType::getValue() const {
    return m_value;
}

void OAIConnectorType::setValue(const OAIConnectorType::eOAIConnectorType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIConnectorType::isSet() const {
    
    return m_value_isSet;
}

bool OAIConnectorType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
