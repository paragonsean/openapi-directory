/**
 * CustomerInsightsManagementClient
 * The Azure Customer Insights management API provides a RESTful set of web services that interact with Azure Customer Insights service to manage your resources. The API has entities that capture the relationship between an end user and the Azure Customer Insights service.
 *
 * The version of the OpenAPI document: 2017-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProfileEnumValidValuesFormat.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProfileEnumValidValuesFormat::OAIProfileEnumValidValuesFormat(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProfileEnumValidValuesFormat::OAIProfileEnumValidValuesFormat() {
    this->initializeModel();
}

OAIProfileEnumValidValuesFormat::~OAIProfileEnumValidValuesFormat() {}

void OAIProfileEnumValidValuesFormat::initializeModel() {

    m_localized_value_names_isSet = false;
    m_localized_value_names_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIProfileEnumValidValuesFormat::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProfileEnumValidValuesFormat::fromJsonObject(QJsonObject json) {

    m_localized_value_names_isValid = ::OpenAPI::fromJsonValue(m_localized_value_names, json[QString("localizedValueNames")]);
    m_localized_value_names_isSet = !json[QString("localizedValueNames")].isNull() && m_localized_value_names_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAIProfileEnumValidValuesFormat::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProfileEnumValidValuesFormat::asJsonObject() const {
    QJsonObject obj;
    if (m_localized_value_names.size() > 0) {
        obj.insert(QString("localizedValueNames"), ::OpenAPI::toJsonValue(m_localized_value_names));
    }
    if (m_value_isSet) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

QMap<QString, QString> OAIProfileEnumValidValuesFormat::getLocalizedValueNames() const {
    return m_localized_value_names;
}
void OAIProfileEnumValidValuesFormat::setLocalizedValueNames(const QMap<QString, QString> &localized_value_names) {
    m_localized_value_names = localized_value_names;
    m_localized_value_names_isSet = true;
}

bool OAIProfileEnumValidValuesFormat::is_localized_value_names_Set() const{
    return m_localized_value_names_isSet;
}

bool OAIProfileEnumValidValuesFormat::is_localized_value_names_Valid() const{
    return m_localized_value_names_isValid;
}

qint32 OAIProfileEnumValidValuesFormat::getValue() const {
    return m_value;
}
void OAIProfileEnumValidValuesFormat::setValue(const qint32 &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIProfileEnumValidValuesFormat::is_value_Set() const{
    return m_value_isSet;
}

bool OAIProfileEnumValidValuesFormat::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIProfileEnumValidValuesFormat::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_localized_value_names.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProfileEnumValidValuesFormat::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
