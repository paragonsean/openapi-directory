/**
 * CustomerInsightsManagementClient
 * The Azure Customer Insights management API provides a RESTful set of web services that interact with Azure Customer Insights service to manage your resources. The API has entities that capture the relationship between an end user and the Azure Customer Insights service.
 *
 * The version of the OpenAPI document: 2017-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICrmConnectorEntities.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICrmConnectorEntities::OAICrmConnectorEntities(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICrmConnectorEntities::OAICrmConnectorEntities() {
    this->initializeModel();
}

OAICrmConnectorEntities::~OAICrmConnectorEntities() {}

void OAICrmConnectorEntities::initializeModel() {

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_is_profile_isSet = false;
    m_is_profile_isValid = false;

    m_logical_name_isSet = false;
    m_logical_name_isValid = false;
}

void OAICrmConnectorEntities::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICrmConnectorEntities::fromJsonObject(QJsonObject json) {

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_is_profile_isValid = ::OpenAPI::fromJsonValue(m_is_profile, json[QString("isProfile")]);
    m_is_profile_isSet = !json[QString("isProfile")].isNull() && m_is_profile_isValid;

    m_logical_name_isValid = ::OpenAPI::fromJsonValue(m_logical_name, json[QString("logicalName")]);
    m_logical_name_isSet = !json[QString("logicalName")].isNull() && m_logical_name_isValid;
}

QString OAICrmConnectorEntities::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICrmConnectorEntities::asJsonObject() const {
    QJsonObject obj;
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_is_profile_isSet) {
        obj.insert(QString("isProfile"), ::OpenAPI::toJsonValue(m_is_profile));
    }
    if (m_logical_name_isSet) {
        obj.insert(QString("logicalName"), ::OpenAPI::toJsonValue(m_logical_name));
    }
    return obj;
}

QString OAICrmConnectorEntities::getDisplayName() const {
    return m_display_name;
}
void OAICrmConnectorEntities::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAICrmConnectorEntities::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAICrmConnectorEntities::is_display_name_Valid() const{
    return m_display_name_isValid;
}

bool OAICrmConnectorEntities::isIsProfile() const {
    return m_is_profile;
}
void OAICrmConnectorEntities::setIsProfile(const bool &is_profile) {
    m_is_profile = is_profile;
    m_is_profile_isSet = true;
}

bool OAICrmConnectorEntities::is_is_profile_Set() const{
    return m_is_profile_isSet;
}

bool OAICrmConnectorEntities::is_is_profile_Valid() const{
    return m_is_profile_isValid;
}

QString OAICrmConnectorEntities::getLogicalName() const {
    return m_logical_name;
}
void OAICrmConnectorEntities::setLogicalName(const QString &logical_name) {
    m_logical_name = logical_name;
    m_logical_name_isSet = true;
}

bool OAICrmConnectorEntities::is_logical_name_Set() const{
    return m_logical_name_isSet;
}

bool OAICrmConnectorEntities::is_logical_name_Valid() const{
    return m_logical_name_isValid;
}

bool OAICrmConnectorEntities::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_profile_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_logical_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICrmConnectorEntities::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_logical_name_isValid && true;
}

} // namespace OpenAPI
