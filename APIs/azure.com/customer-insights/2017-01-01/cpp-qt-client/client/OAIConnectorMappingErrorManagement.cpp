/**
 * CustomerInsightsManagementClient
 * The Azure Customer Insights management API provides a RESTful set of web services that interact with Azure Customer Insights service to manage your resources. The API has entities that capture the relationship between an end user and the Azure Customer Insights service.
 *
 * The version of the OpenAPI document: 2017-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConnectorMappingErrorManagement.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConnectorMappingErrorManagement::OAIConnectorMappingErrorManagement(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConnectorMappingErrorManagement::OAIConnectorMappingErrorManagement() {
    this->initializeModel();
}

OAIConnectorMappingErrorManagement::~OAIConnectorMappingErrorManagement() {}

void OAIConnectorMappingErrorManagement::initializeModel() {

    m_error_limit_isSet = false;
    m_error_limit_isValid = false;

    m_error_management_type_isSet = false;
    m_error_management_type_isValid = false;
}

void OAIConnectorMappingErrorManagement::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConnectorMappingErrorManagement::fromJsonObject(QJsonObject json) {

    m_error_limit_isValid = ::OpenAPI::fromJsonValue(m_error_limit, json[QString("errorLimit")]);
    m_error_limit_isSet = !json[QString("errorLimit")].isNull() && m_error_limit_isValid;

    m_error_management_type_isValid = ::OpenAPI::fromJsonValue(m_error_management_type, json[QString("errorManagementType")]);
    m_error_management_type_isSet = !json[QString("errorManagementType")].isNull() && m_error_management_type_isValid;
}

QString OAIConnectorMappingErrorManagement::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConnectorMappingErrorManagement::asJsonObject() const {
    QJsonObject obj;
    if (m_error_limit_isSet) {
        obj.insert(QString("errorLimit"), ::OpenAPI::toJsonValue(m_error_limit));
    }
    if (m_error_management_type_isSet) {
        obj.insert(QString("errorManagementType"), ::OpenAPI::toJsonValue(m_error_management_type));
    }
    return obj;
}

qint32 OAIConnectorMappingErrorManagement::getErrorLimit() const {
    return m_error_limit;
}
void OAIConnectorMappingErrorManagement::setErrorLimit(const qint32 &error_limit) {
    m_error_limit = error_limit;
    m_error_limit_isSet = true;
}

bool OAIConnectorMappingErrorManagement::is_error_limit_Set() const{
    return m_error_limit_isSet;
}

bool OAIConnectorMappingErrorManagement::is_error_limit_Valid() const{
    return m_error_limit_isValid;
}

QString OAIConnectorMappingErrorManagement::getErrorManagementType() const {
    return m_error_management_type;
}
void OAIConnectorMappingErrorManagement::setErrorManagementType(const QString &error_management_type) {
    m_error_management_type = error_management_type;
    m_error_management_type_isSet = true;
}

bool OAIConnectorMappingErrorManagement::is_error_management_type_Set() const{
    return m_error_management_type_isSet;
}

bool OAIConnectorMappingErrorManagement::is_error_management_type_Valid() const{
    return m_error_management_type_isValid;
}

bool OAIConnectorMappingErrorManagement::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_error_limit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_management_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConnectorMappingErrorManagement::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_error_management_type_isValid && true;
}

} // namespace OpenAPI
