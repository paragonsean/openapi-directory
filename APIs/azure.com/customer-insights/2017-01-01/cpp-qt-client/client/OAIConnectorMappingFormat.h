/**
 * CustomerInsightsManagementClient
 * The Azure Customer Insights management API provides a RESTful set of web services that interact with Azure Customer Insights service to manage your resources. The API has entities that capture the relationship between an end user and the Azure Customer Insights service.
 *
 * The version of the OpenAPI document: 2017-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConnectorMappingFormat.h
 *
 * Connector mapping property format.
 */

#ifndef OAIConnectorMappingFormat_H
#define OAIConnectorMappingFormat_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIConnectorMappingFormat : public OAIObject {
public:
    OAIConnectorMappingFormat();
    OAIConnectorMappingFormat(QString json);
    ~OAIConnectorMappingFormat() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAcceptLanguage() const;
    void setAcceptLanguage(const QString &accept_language);
    bool is_accept_language_Set() const;
    bool is_accept_language_Valid() const;

    QString getArraySeparator() const;
    void setArraySeparator(const QString &array_separator);
    bool is_array_separator_Set() const;
    bool is_array_separator_Valid() const;

    QString getColumnDelimiter() const;
    void setColumnDelimiter(const QString &column_delimiter);
    bool is_column_delimiter_Set() const;
    bool is_column_delimiter_Valid() const;

    QString getFormatType() const;
    void setFormatType(const QString &format_type);
    bool is_format_type_Set() const;
    bool is_format_type_Valid() const;

    QString getQuoteCharacter() const;
    void setQuoteCharacter(const QString &quote_character);
    bool is_quote_character_Set() const;
    bool is_quote_character_Valid() const;

    QString getQuoteEscapeCharacter() const;
    void setQuoteEscapeCharacter(const QString &quote_escape_character);
    bool is_quote_escape_character_Set() const;
    bool is_quote_escape_character_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_accept_language;
    bool m_accept_language_isSet;
    bool m_accept_language_isValid;

    QString m_array_separator;
    bool m_array_separator_isSet;
    bool m_array_separator_isValid;

    QString m_column_delimiter;
    bool m_column_delimiter_isSet;
    bool m_column_delimiter_isValid;

    QString m_format_type;
    bool m_format_type_isSet;
    bool m_format_type_isValid;

    QString m_quote_character;
    bool m_quote_character_isSet;
    bool m_quote_character_isValid;

    QString m_quote_escape_character;
    bool m_quote_escape_character_isSet;
    bool m_quote_escape_character_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConnectorMappingFormat)

#endif // OAIConnectorMappingFormat_H
