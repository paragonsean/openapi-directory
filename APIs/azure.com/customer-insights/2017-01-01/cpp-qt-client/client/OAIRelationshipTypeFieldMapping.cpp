/**
 * CustomerInsightsManagementClient
 * The Azure Customer Insights management API provides a RESTful set of web services that interact with Azure Customer Insights service to manage your resources. The API has entities that capture the relationship between an end user and the Azure Customer Insights service.
 *
 * The version of the OpenAPI document: 2017-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRelationshipTypeFieldMapping.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRelationshipTypeFieldMapping::OAIRelationshipTypeFieldMapping(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRelationshipTypeFieldMapping::OAIRelationshipTypeFieldMapping() {
    this->initializeModel();
}

OAIRelationshipTypeFieldMapping::~OAIRelationshipTypeFieldMapping() {}

void OAIRelationshipTypeFieldMapping::initializeModel() {

    m_profile_field_name_isSet = false;
    m_profile_field_name_isValid = false;

    m_related_profile_key_property_isSet = false;
    m_related_profile_key_property_isValid = false;
}

void OAIRelationshipTypeFieldMapping::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRelationshipTypeFieldMapping::fromJsonObject(QJsonObject json) {

    m_profile_field_name_isValid = ::OpenAPI::fromJsonValue(m_profile_field_name, json[QString("profileFieldName")]);
    m_profile_field_name_isSet = !json[QString("profileFieldName")].isNull() && m_profile_field_name_isValid;

    m_related_profile_key_property_isValid = ::OpenAPI::fromJsonValue(m_related_profile_key_property, json[QString("relatedProfileKeyProperty")]);
    m_related_profile_key_property_isSet = !json[QString("relatedProfileKeyProperty")].isNull() && m_related_profile_key_property_isValid;
}

QString OAIRelationshipTypeFieldMapping::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRelationshipTypeFieldMapping::asJsonObject() const {
    QJsonObject obj;
    if (m_profile_field_name_isSet) {
        obj.insert(QString("profileFieldName"), ::OpenAPI::toJsonValue(m_profile_field_name));
    }
    if (m_related_profile_key_property_isSet) {
        obj.insert(QString("relatedProfileKeyProperty"), ::OpenAPI::toJsonValue(m_related_profile_key_property));
    }
    return obj;
}

QString OAIRelationshipTypeFieldMapping::getProfileFieldName() const {
    return m_profile_field_name;
}
void OAIRelationshipTypeFieldMapping::setProfileFieldName(const QString &profile_field_name) {
    m_profile_field_name = profile_field_name;
    m_profile_field_name_isSet = true;
}

bool OAIRelationshipTypeFieldMapping::is_profile_field_name_Set() const{
    return m_profile_field_name_isSet;
}

bool OAIRelationshipTypeFieldMapping::is_profile_field_name_Valid() const{
    return m_profile_field_name_isValid;
}

QString OAIRelationshipTypeFieldMapping::getRelatedProfileKeyProperty() const {
    return m_related_profile_key_property;
}
void OAIRelationshipTypeFieldMapping::setRelatedProfileKeyProperty(const QString &related_profile_key_property) {
    m_related_profile_key_property = related_profile_key_property;
    m_related_profile_key_property_isSet = true;
}

bool OAIRelationshipTypeFieldMapping::is_related_profile_key_property_Set() const{
    return m_related_profile_key_property_isSet;
}

bool OAIRelationshipTypeFieldMapping::is_related_profile_key_property_Valid() const{
    return m_related_profile_key_property_isValid;
}

bool OAIRelationshipTypeFieldMapping::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_profile_field_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_related_profile_key_property_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRelationshipTypeFieldMapping::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_profile_field_name_isValid && m_related_profile_key_property_isValid && true;
}

} // namespace OpenAPI
