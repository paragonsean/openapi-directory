/**
 * CustomerInsightsManagementClient
 * The Azure Customer Insights management API provides a RESTful set of web services that interact with Azure Customer Insights service to manage your resources. The API has entities that capture the relationship between an end user and the Azure Customer Insights service.
 *
 * The version of the OpenAPI document: 2017-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIKpiAlias.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIKpiAlias::OAIKpiAlias(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIKpiAlias::OAIKpiAlias() {
    this->initializeModel();
}

OAIKpiAlias::~OAIKpiAlias() {}

void OAIKpiAlias::initializeModel() {

    m_alias_name_isSet = false;
    m_alias_name_isValid = false;

    m_expression_isSet = false;
    m_expression_isValid = false;
}

void OAIKpiAlias::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIKpiAlias::fromJsonObject(QJsonObject json) {

    m_alias_name_isValid = ::OpenAPI::fromJsonValue(m_alias_name, json[QString("aliasName")]);
    m_alias_name_isSet = !json[QString("aliasName")].isNull() && m_alias_name_isValid;

    m_expression_isValid = ::OpenAPI::fromJsonValue(m_expression, json[QString("expression")]);
    m_expression_isSet = !json[QString("expression")].isNull() && m_expression_isValid;
}

QString OAIKpiAlias::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIKpiAlias::asJsonObject() const {
    QJsonObject obj;
    if (m_alias_name_isSet) {
        obj.insert(QString("aliasName"), ::OpenAPI::toJsonValue(m_alias_name));
    }
    if (m_expression_isSet) {
        obj.insert(QString("expression"), ::OpenAPI::toJsonValue(m_expression));
    }
    return obj;
}

QString OAIKpiAlias::getAliasName() const {
    return m_alias_name;
}
void OAIKpiAlias::setAliasName(const QString &alias_name) {
    m_alias_name = alias_name;
    m_alias_name_isSet = true;
}

bool OAIKpiAlias::is_alias_name_Set() const{
    return m_alias_name_isSet;
}

bool OAIKpiAlias::is_alias_name_Valid() const{
    return m_alias_name_isValid;
}

QString OAIKpiAlias::getExpression() const {
    return m_expression;
}
void OAIKpiAlias::setExpression(const QString &expression) {
    m_expression = expression;
    m_expression_isSet = true;
}

bool OAIKpiAlias::is_expression_Set() const{
    return m_expression_isSet;
}

bool OAIKpiAlias::is_expression_Valid() const{
    return m_expression_isValid;
}

bool OAIKpiAlias::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_alias_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expression_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIKpiAlias::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_alias_name_isValid && m_expression_isValid && true;
}

} // namespace OpenAPI
