/*
 * CustomerInsightsManagementClient
 * The Azure Customer Insights management API provides a RESTful set of web services that interact with Azure Customer Insights service to manage your resources. The API has entities that capture the relationship between an end user and the Azure Customer Insights service.
 *
 * The version of the OpenAPI document: 2017-04-26
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Type of connector.
 */
@JsonAdapter(ConnectorType.Adapter.class)
public enum ConnectorType {
  
  NONE("None"),
  
  CRM("CRM"),
  
  AZURE_BLOB("AzureBlob"),
  
  SALESFORCE("Salesforce"),
  
  EXCHANGE_ONLINE("ExchangeOnline"),
  
  OUTBOUND("Outbound");

  private String value;

  ConnectorType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static ConnectorType fromValue(String value) {
    for (ConnectorType b : ConnectorType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<ConnectorType> {
    @Override
    public void write(final JsonWriter jsonWriter, final ConnectorType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public ConnectorType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return ConnectorType.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    ConnectorType.fromValue(value);
  }
}

