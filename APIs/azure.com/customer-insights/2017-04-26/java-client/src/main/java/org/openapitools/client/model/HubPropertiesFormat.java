/*
 * CustomerInsightsManagementClient
 * The Azure Customer Insights management API provides a RESTful set of web services that interact with Azure Customer Insights service to manage your resources. The API has entities that capture the relationship between an end user and the Azure Customer Insights service.
 *
 * The version of the OpenAPI document: 2017-04-26
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.HubBillingInfoFormat;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Properties of hub.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:31:52.400724-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class HubPropertiesFormat {
  public static final String SERIALIZED_NAME_API_ENDPOINT = "apiEndpoint";
  @SerializedName(SERIALIZED_NAME_API_ENDPOINT)
  private String apiEndpoint;

  public static final String SERIALIZED_NAME_HUB_BILLING_INFO = "hubBillingInfo";
  @SerializedName(SERIALIZED_NAME_HUB_BILLING_INFO)
  private HubBillingInfoFormat hubBillingInfo;

  public static final String SERIALIZED_NAME_PROVISIONING_STATE = "provisioningState";
  @SerializedName(SERIALIZED_NAME_PROVISIONING_STATE)
  private String provisioningState;

  public static final String SERIALIZED_NAME_TENANT_FEATURES = "tenantFeatures";
  @SerializedName(SERIALIZED_NAME_TENANT_FEATURES)
  private Integer tenantFeatures;

  public static final String SERIALIZED_NAME_WEB_ENDPOINT = "webEndpoint";
  @SerializedName(SERIALIZED_NAME_WEB_ENDPOINT)
  private String webEndpoint;

  public HubPropertiesFormat() {
  }

  public HubPropertiesFormat(
     String apiEndpoint, 
     String provisioningState, 
     String webEndpoint
  ) {
    this();
    this.apiEndpoint = apiEndpoint;
    this.provisioningState = provisioningState;
    this.webEndpoint = webEndpoint;
  }

  /**
   * API endpoint URL of the hub.
   * @return apiEndpoint
   */
  @javax.annotation.Nullable
  public String getApiEndpoint() {
    return apiEndpoint;
  }



  public HubPropertiesFormat hubBillingInfo(HubBillingInfoFormat hubBillingInfo) {
    this.hubBillingInfo = hubBillingInfo;
    return this;
  }

  /**
   * Get hubBillingInfo
   * @return hubBillingInfo
   */
  @javax.annotation.Nullable
  public HubBillingInfoFormat getHubBillingInfo() {
    return hubBillingInfo;
  }

  public void setHubBillingInfo(HubBillingInfoFormat hubBillingInfo) {
    this.hubBillingInfo = hubBillingInfo;
  }


  /**
   * Provisioning state of the hub.
   * @return provisioningState
   */
  @javax.annotation.Nullable
  public String getProvisioningState() {
    return provisioningState;
  }



  public HubPropertiesFormat tenantFeatures(Integer tenantFeatures) {
    this.tenantFeatures = tenantFeatures;
    return this;
  }

  /**
   * The bit flags for enabled hub features. Bit 0 is set to 1 indicates graph is enabled, or disabled if set to 0. Bit 1 is set to 1 indicates the hub is disabled, or enabled if set to 0.
   * @return tenantFeatures
   */
  @javax.annotation.Nullable
  public Integer getTenantFeatures() {
    return tenantFeatures;
  }

  public void setTenantFeatures(Integer tenantFeatures) {
    this.tenantFeatures = tenantFeatures;
  }


  /**
   * Web endpoint URL of the hub.
   * @return webEndpoint
   */
  @javax.annotation.Nullable
  public String getWebEndpoint() {
    return webEndpoint;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HubPropertiesFormat hubPropertiesFormat = (HubPropertiesFormat) o;
    return Objects.equals(this.apiEndpoint, hubPropertiesFormat.apiEndpoint) &&
        Objects.equals(this.hubBillingInfo, hubPropertiesFormat.hubBillingInfo) &&
        Objects.equals(this.provisioningState, hubPropertiesFormat.provisioningState) &&
        Objects.equals(this.tenantFeatures, hubPropertiesFormat.tenantFeatures) &&
        Objects.equals(this.webEndpoint, hubPropertiesFormat.webEndpoint);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apiEndpoint, hubBillingInfo, provisioningState, tenantFeatures, webEndpoint);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HubPropertiesFormat {\n");
    sb.append("    apiEndpoint: ").append(toIndentedString(apiEndpoint)).append("\n");
    sb.append("    hubBillingInfo: ").append(toIndentedString(hubBillingInfo)).append("\n");
    sb.append("    provisioningState: ").append(toIndentedString(provisioningState)).append("\n");
    sb.append("    tenantFeatures: ").append(toIndentedString(tenantFeatures)).append("\n");
    sb.append("    webEndpoint: ").append(toIndentedString(webEndpoint)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("apiEndpoint");
    openapiFields.add("hubBillingInfo");
    openapiFields.add("provisioningState");
    openapiFields.add("tenantFeatures");
    openapiFields.add("webEndpoint");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to HubPropertiesFormat
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!HubPropertiesFormat.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in HubPropertiesFormat is not found in the empty JSON string", HubPropertiesFormat.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!HubPropertiesFormat.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `HubPropertiesFormat` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("apiEndpoint") != null && !jsonObj.get("apiEndpoint").isJsonNull()) && !jsonObj.get("apiEndpoint").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `apiEndpoint` to be a primitive type in the JSON string but got `%s`", jsonObj.get("apiEndpoint").toString()));
      }
      // validate the optional field `hubBillingInfo`
      if (jsonObj.get("hubBillingInfo") != null && !jsonObj.get("hubBillingInfo").isJsonNull()) {
        HubBillingInfoFormat.validateJsonElement(jsonObj.get("hubBillingInfo"));
      }
      if ((jsonObj.get("provisioningState") != null && !jsonObj.get("provisioningState").isJsonNull()) && !jsonObj.get("provisioningState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `provisioningState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("provisioningState").toString()));
      }
      if ((jsonObj.get("webEndpoint") != null && !jsonObj.get("webEndpoint").isJsonNull()) && !jsonObj.get("webEndpoint").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `webEndpoint` to be a primitive type in the JSON string but got `%s`", jsonObj.get("webEndpoint").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!HubPropertiesFormat.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'HubPropertiesFormat' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<HubPropertiesFormat> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(HubPropertiesFormat.class));

       return (TypeAdapter<T>) new TypeAdapter<HubPropertiesFormat>() {
           @Override
           public void write(JsonWriter out, HubPropertiesFormat value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public HubPropertiesFormat read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of HubPropertiesFormat given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of HubPropertiesFormat
   * @throws IOException if the JSON string is invalid with respect to HubPropertiesFormat
   */
  public static HubPropertiesFormat fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, HubPropertiesFormat.class);
  }

  /**
   * Convert an instance of HubPropertiesFormat to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

