/*
 * CustomerInsightsManagementClient
 * The Azure Customer Insights management API provides a RESTful set of web services that interact with Azure Customer Insights service to manage your resources. The API has entities that capture the relationship between an end user and the Azure Customer Insights service.
 *
 * The version of the OpenAPI document: 2017-04-26
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.KpiListResult;
import org.openapitools.client.model.KpiResourceFormat;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for KpiApi
 */
@Disabled
public class KpiApiTest {

    private final KpiApi api = new KpiApi();

    /**
     * Creates a KPI or updates an existing KPI in the hub.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void kpiCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String hubName = null;
        String kpiName = null;
        String apiVersion = null;
        String subscriptionId = null;
        KpiResourceFormat parameters = null;
        KpiResourceFormat response = api.kpiCreateOrUpdate(resourceGroupName, hubName, kpiName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Deletes a KPI in the hub.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void kpiDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String hubName = null;
        String kpiName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.kpiDelete(resourceGroupName, hubName, kpiName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets a KPI in the hub.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void kpiGetTest() throws ApiException {
        String resourceGroupName = null;
        String hubName = null;
        String kpiName = null;
        String apiVersion = null;
        String subscriptionId = null;
        KpiResourceFormat response = api.kpiGet(resourceGroupName, hubName, kpiName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets all the KPIs in the specified hub.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void kpiListByHubTest() throws ApiException {
        String resourceGroupName = null;
        String hubName = null;
        String apiVersion = null;
        String subscriptionId = null;
        KpiListResult response = api.kpiListByHub(resourceGroupName, hubName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Reprocesses the Kpi values of the specified KPI.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void kpiReprocessTest() throws ApiException {
        String resourceGroupName = null;
        String hubName = null;
        String kpiName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.kpiReprocess(resourceGroupName, hubName, kpiName, apiVersion, subscriptionId);
        // TODO: test validations
    }

}
