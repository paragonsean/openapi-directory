/*
 * CustomerInsightsManagementClient
 * The Azure Customer Insights management API provides a RESTful set of web services that interact with Azure Customer Insights service to manage your resources. The API has entities that capture the relationship between an end user and the Azure Customer Insights service.
 *
 * The version of the OpenAPI document: 2017-04-26
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.RelationshipListResult;
import org.openapitools.client.model.RelationshipResourceFormat;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RelationshipsApi
 */
@Disabled
public class RelationshipsApiTest {

    private final RelationshipsApi api = new RelationshipsApi();

    /**
     * Creates a relationship or updates an existing relationship within a hub.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void relationshipsCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String hubName = null;
        String relationshipName = null;
        String apiVersion = null;
        String subscriptionId = null;
        RelationshipResourceFormat parameters = null;
        RelationshipResourceFormat response = api.relationshipsCreateOrUpdate(resourceGroupName, hubName, relationshipName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Deletes a relationship within a hub.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void relationshipsDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String hubName = null;
        String relationshipName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.relationshipsDelete(resourceGroupName, hubName, relationshipName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets information about the specified relationship.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void relationshipsGetTest() throws ApiException {
        String resourceGroupName = null;
        String hubName = null;
        String relationshipName = null;
        String apiVersion = null;
        String subscriptionId = null;
        RelationshipResourceFormat response = api.relationshipsGet(resourceGroupName, hubName, relationshipName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets all relationships in the hub.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void relationshipsListByHubTest() throws ApiException {
        String resourceGroupName = null;
        String hubName = null;
        String apiVersion = null;
        String subscriptionId = null;
        RelationshipListResult response = api.relationshipsListByHub(resourceGroupName, hubName, apiVersion, subscriptionId);
        // TODO: test validations
    }

}
