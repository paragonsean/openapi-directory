/*
 * CustomerInsightsManagementClient
 * The Azure Customer Insights management API provides a RESTful set of web services that interact with Azure Customer Insights service to manage your resources. The API has entities that capture the relationship between an end user and the Azure Customer Insights service.
 *
 * The version of the OpenAPI document: 2017-04-26
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.LinkListResult;
import org.openapitools.client.model.LinkResourceFormat;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LinksApi
 */
@Disabled
public class LinksApiTest {

    private final LinksApi api = new LinksApi();

    /**
     * Creates a link or updates an existing link in the hub.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void linksCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String hubName = null;
        String linkName = null;
        String apiVersion = null;
        String subscriptionId = null;
        LinkResourceFormat parameters = null;
        LinkResourceFormat response = api.linksCreateOrUpdate(resourceGroupName, hubName, linkName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Deletes a link in the hub.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void linksDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String hubName = null;
        String linkName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.linksDelete(resourceGroupName, hubName, linkName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets a link in the hub.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void linksGetTest() throws ApiException {
        String resourceGroupName = null;
        String hubName = null;
        String linkName = null;
        String apiVersion = null;
        String subscriptionId = null;
        LinkResourceFormat response = api.linksGet(resourceGroupName, hubName, linkName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets all the links in the specified hub.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void linksListByHubTest() throws ApiException {
        String resourceGroupName = null;
        String hubName = null;
        String apiVersion = null;
        String subscriptionId = null;
        LinkListResult response = api.linksListByHub(resourceGroupName, hubName, apiVersion, subscriptionId);
        // TODO: test validations
    }

}
