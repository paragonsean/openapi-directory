/*
 * CustomerInsightsManagementClient
 * The Azure Customer Insights management API provides a RESTful set of web services that interact with Azure Customer Insights service to manage your resources. The API has entities that capture the relationship between an end user and the Azure Customer Insights service.
 *
 * The version of the OpenAPI document: 2017-04-26
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.PredictionListResult;
import org.openapitools.client.model.PredictionModelStatus;
import org.openapitools.client.model.PredictionResourceFormat;
import org.openapitools.client.model.PredictionTrainingResults;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PredictionsApi
 */
@Disabled
public class PredictionsApiTest {

    private final PredictionsApi api = new PredictionsApi();

    /**
     * Creates a Prediction or updates an existing Prediction in the hub.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void predictionsCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String hubName = null;
        String predictionName = null;
        String apiVersion = null;
        String subscriptionId = null;
        PredictionResourceFormat parameters = null;
        PredictionResourceFormat response = api.predictionsCreateOrUpdate(resourceGroupName, hubName, predictionName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Deletes a Prediction in the hub.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void predictionsDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String hubName = null;
        String predictionName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.predictionsDelete(resourceGroupName, hubName, predictionName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets a Prediction in the hub.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void predictionsGetTest() throws ApiException {
        String resourceGroupName = null;
        String hubName = null;
        String predictionName = null;
        String apiVersion = null;
        String subscriptionId = null;
        PredictionResourceFormat response = api.predictionsGet(resourceGroupName, hubName, predictionName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets model status of the prediction.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void predictionsGetModelStatusTest() throws ApiException {
        String resourceGroupName = null;
        String hubName = null;
        String predictionName = null;
        String apiVersion = null;
        String subscriptionId = null;
        PredictionModelStatus response = api.predictionsGetModelStatus(resourceGroupName, hubName, predictionName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets training results.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void predictionsGetTrainingResultsTest() throws ApiException {
        String resourceGroupName = null;
        String hubName = null;
        String predictionName = null;
        String apiVersion = null;
        String subscriptionId = null;
        PredictionTrainingResults response = api.predictionsGetTrainingResults(resourceGroupName, hubName, predictionName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets all the predictions in the specified hub.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void predictionsListByHubTest() throws ApiException {
        String resourceGroupName = null;
        String hubName = null;
        String apiVersion = null;
        String subscriptionId = null;
        PredictionListResult response = api.predictionsListByHub(resourceGroupName, hubName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Creates or updates the model status of prediction.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void predictionsModelStatusTest() throws ApiException {
        String resourceGroupName = null;
        String hubName = null;
        String predictionName = null;
        String apiVersion = null;
        String subscriptionId = null;
        PredictionModelStatus parameters = null;
        api.predictionsModelStatus(resourceGroupName, hubName, predictionName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

}
