# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ParticipantProfilePropertyReference(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, interaction_property_name: str=None, profile_property_name: str=None):
        """ParticipantProfilePropertyReference - a model defined in OpenAPI

        :param interaction_property_name: The interaction_property_name of this ParticipantProfilePropertyReference.
        :param profile_property_name: The profile_property_name of this ParticipantProfilePropertyReference.
        """
        self.openapi_types = {
            'interaction_property_name': str,
            'profile_property_name': str
        }

        self.attribute_map = {
            'interaction_property_name': 'interactionPropertyName',
            'profile_property_name': 'profilePropertyName'
        }

        self._interaction_property_name = interaction_property_name
        self._profile_property_name = profile_property_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ParticipantProfilePropertyReference':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ParticipantProfilePropertyReference of this ParticipantProfilePropertyReference.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def interaction_property_name(self):
        """Gets the interaction_property_name of this ParticipantProfilePropertyReference.

        The source interaction property that maps to the target profile property.

        :return: The interaction_property_name of this ParticipantProfilePropertyReference.
        :rtype: str
        """
        return self._interaction_property_name

    @interaction_property_name.setter
    def interaction_property_name(self, interaction_property_name):
        """Sets the interaction_property_name of this ParticipantProfilePropertyReference.

        The source interaction property that maps to the target profile property.

        :param interaction_property_name: The interaction_property_name of this ParticipantProfilePropertyReference.
        :type interaction_property_name: str
        """
        if interaction_property_name is None:
            raise ValueError("Invalid value for `interaction_property_name`, must not be `None`")

        self._interaction_property_name = interaction_property_name

    @property
    def profile_property_name(self):
        """Gets the profile_property_name of this ParticipantProfilePropertyReference.

        The target profile property that maps to the source interaction property.

        :return: The profile_property_name of this ParticipantProfilePropertyReference.
        :rtype: str
        """
        return self._profile_property_name

    @profile_property_name.setter
    def profile_property_name(self, profile_property_name):
        """Sets the profile_property_name of this ParticipantProfilePropertyReference.

        The target profile property that maps to the source interaction property.

        :param profile_property_name: The profile_property_name of this ParticipantProfilePropertyReference.
        :type profile_property_name: str
        """
        if profile_property_name is None:
            raise ValueError("Invalid value for `profile_property_name`, must not be `None`")

        self._profile_property_name = profile_property_name
