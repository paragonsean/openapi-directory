# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProfileEnumValidValuesFormat(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, localized_value_names: Dict[str, str]=None, value: int=None):
        """ProfileEnumValidValuesFormat - a model defined in OpenAPI

        :param localized_value_names: The localized_value_names of this ProfileEnumValidValuesFormat.
        :param value: The value of this ProfileEnumValidValuesFormat.
        """
        self.openapi_types = {
            'localized_value_names': Dict[str, str],
            'value': int
        }

        self.attribute_map = {
            'localized_value_names': 'localizedValueNames',
            'value': 'value'
        }

        self._localized_value_names = localized_value_names
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProfileEnumValidValuesFormat':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProfileEnumValidValuesFormat of this ProfileEnumValidValuesFormat.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def localized_value_names(self):
        """Gets the localized_value_names of this ProfileEnumValidValuesFormat.

        Localized names of the enum member.

        :return: The localized_value_names of this ProfileEnumValidValuesFormat.
        :rtype: Dict[str, str]
        """
        return self._localized_value_names

    @localized_value_names.setter
    def localized_value_names(self, localized_value_names):
        """Sets the localized_value_names of this ProfileEnumValidValuesFormat.

        Localized names of the enum member.

        :param localized_value_names: The localized_value_names of this ProfileEnumValidValuesFormat.
        :type localized_value_names: Dict[str, str]
        """

        self._localized_value_names = localized_value_names

    @property
    def value(self):
        """Gets the value of this ProfileEnumValidValuesFormat.

        The integer value of the enum member.

        :return: The value of this ProfileEnumValidValuesFormat.
        :rtype: int
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this ProfileEnumValidValuesFormat.

        The integer value of the enum member.

        :param value: The value of this ProfileEnumValidValuesFormat.
        :type value: int
        """

        self._value = value
