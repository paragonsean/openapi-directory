/**
 * CustomerInsightsManagementClient
 * The Azure Customer Insights management API provides a RESTful set of web services that interact with Azure Customer Insights service to manage your resources. The API has entities that capture the relationship between an end user and the Azure Customer Insights service.
 *
 * The version of the OpenAPI document: 2017-04-26
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRelationshipTypeMapping.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRelationshipTypeMapping::OAIRelationshipTypeMapping(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRelationshipTypeMapping::OAIRelationshipTypeMapping() {
    this->initializeModel();
}

OAIRelationshipTypeMapping::~OAIRelationshipTypeMapping() {}

void OAIRelationshipTypeMapping::initializeModel() {

    m_field_mappings_isSet = false;
    m_field_mappings_isValid = false;
}

void OAIRelationshipTypeMapping::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRelationshipTypeMapping::fromJsonObject(QJsonObject json) {

    m_field_mappings_isValid = ::OpenAPI::fromJsonValue(m_field_mappings, json[QString("fieldMappings")]);
    m_field_mappings_isSet = !json[QString("fieldMappings")].isNull() && m_field_mappings_isValid;
}

QString OAIRelationshipTypeMapping::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRelationshipTypeMapping::asJsonObject() const {
    QJsonObject obj;
    if (m_field_mappings.size() > 0) {
        obj.insert(QString("fieldMappings"), ::OpenAPI::toJsonValue(m_field_mappings));
    }
    return obj;
}

QList<OAIRelationshipTypeFieldMapping> OAIRelationshipTypeMapping::getFieldMappings() const {
    return m_field_mappings;
}
void OAIRelationshipTypeMapping::setFieldMappings(const QList<OAIRelationshipTypeFieldMapping> &field_mappings) {
    m_field_mappings = field_mappings;
    m_field_mappings_isSet = true;
}

bool OAIRelationshipTypeMapping::is_field_mappings_Set() const{
    return m_field_mappings_isSet;
}

bool OAIRelationshipTypeMapping::is_field_mappings_Valid() const{
    return m_field_mappings_isValid;
}

bool OAIRelationshipTypeMapping::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_field_mappings.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRelationshipTypeMapping::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_field_mappings_isValid && true;
}

} // namespace OpenAPI
