/**
 * CustomerInsightsManagementClient
 * The Azure Customer Insights management API provides a RESTful set of web services that interact with Azure Customer Insights service to manage your resources. The API has entities that capture the relationship between an end user and the Azure Customer Insights service.
 *
 * The version of the OpenAPI document: 2017-04-26
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICanonicalProfileDefinition_properties_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICanonicalProfileDefinition_properties_inner::OAICanonicalProfileDefinition_properties_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICanonicalProfileDefinition_properties_inner::OAICanonicalProfileDefinition_properties_inner() {
    this->initializeModel();
}

OAICanonicalProfileDefinition_properties_inner::~OAICanonicalProfileDefinition_properties_inner() {}

void OAICanonicalProfileDefinition_properties_inner::initializeModel() {

    m_profile_name_isSet = false;
    m_profile_name_isValid = false;

    m_profile_property_name_isSet = false;
    m_profile_property_name_isValid = false;

    m_rank_isSet = false;
    m_rank_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAICanonicalProfileDefinition_properties_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICanonicalProfileDefinition_properties_inner::fromJsonObject(QJsonObject json) {

    m_profile_name_isValid = ::OpenAPI::fromJsonValue(m_profile_name, json[QString("profileName")]);
    m_profile_name_isSet = !json[QString("profileName")].isNull() && m_profile_name_isValid;

    m_profile_property_name_isValid = ::OpenAPI::fromJsonValue(m_profile_property_name, json[QString("profilePropertyName")]);
    m_profile_property_name_isSet = !json[QString("profilePropertyName")].isNull() && m_profile_property_name_isValid;

    m_rank_isValid = ::OpenAPI::fromJsonValue(m_rank, json[QString("rank")]);
    m_rank_isSet = !json[QString("rank")].isNull() && m_rank_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAICanonicalProfileDefinition_properties_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICanonicalProfileDefinition_properties_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_profile_name_isSet) {
        obj.insert(QString("profileName"), ::OpenAPI::toJsonValue(m_profile_name));
    }
    if (m_profile_property_name_isSet) {
        obj.insert(QString("profilePropertyName"), ::OpenAPI::toJsonValue(m_profile_property_name));
    }
    if (m_rank_isSet) {
        obj.insert(QString("rank"), ::OpenAPI::toJsonValue(m_rank));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_value_isSet) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

QString OAICanonicalProfileDefinition_properties_inner::getProfileName() const {
    return m_profile_name;
}
void OAICanonicalProfileDefinition_properties_inner::setProfileName(const QString &profile_name) {
    m_profile_name = profile_name;
    m_profile_name_isSet = true;
}

bool OAICanonicalProfileDefinition_properties_inner::is_profile_name_Set() const{
    return m_profile_name_isSet;
}

bool OAICanonicalProfileDefinition_properties_inner::is_profile_name_Valid() const{
    return m_profile_name_isValid;
}

QString OAICanonicalProfileDefinition_properties_inner::getProfilePropertyName() const {
    return m_profile_property_name;
}
void OAICanonicalProfileDefinition_properties_inner::setProfilePropertyName(const QString &profile_property_name) {
    m_profile_property_name = profile_property_name;
    m_profile_property_name_isSet = true;
}

bool OAICanonicalProfileDefinition_properties_inner::is_profile_property_name_Set() const{
    return m_profile_property_name_isSet;
}

bool OAICanonicalProfileDefinition_properties_inner::is_profile_property_name_Valid() const{
    return m_profile_property_name_isValid;
}

qint32 OAICanonicalProfileDefinition_properties_inner::getRank() const {
    return m_rank;
}
void OAICanonicalProfileDefinition_properties_inner::setRank(const qint32 &rank) {
    m_rank = rank;
    m_rank_isSet = true;
}

bool OAICanonicalProfileDefinition_properties_inner::is_rank_Set() const{
    return m_rank_isSet;
}

bool OAICanonicalProfileDefinition_properties_inner::is_rank_Valid() const{
    return m_rank_isValid;
}

QString OAICanonicalProfileDefinition_properties_inner::getType() const {
    return m_type;
}
void OAICanonicalProfileDefinition_properties_inner::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAICanonicalProfileDefinition_properties_inner::is_type_Set() const{
    return m_type_isSet;
}

bool OAICanonicalProfileDefinition_properties_inner::is_type_Valid() const{
    return m_type_isValid;
}

QString OAICanonicalProfileDefinition_properties_inner::getValue() const {
    return m_value;
}
void OAICanonicalProfileDefinition_properties_inner::setValue(const QString &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAICanonicalProfileDefinition_properties_inner::is_value_Set() const{
    return m_value_isSet;
}

bool OAICanonicalProfileDefinition_properties_inner::is_value_Valid() const{
    return m_value_isValid;
}

bool OAICanonicalProfileDefinition_properties_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_profile_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile_property_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rank_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICanonicalProfileDefinition_properties_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
