/**
 * CustomerInsightsManagementClient
 * The Azure Customer Insights management API provides a RESTful set of web services that interact with Azure Customer Insights service to manage your resources. The API has entities that capture the relationship between an end user and the Azure Customer Insights service.
 *
 * The version of the OpenAPI document: 2017-04-26
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRelationshipsLookup.h
 *
 * The definition of suggested relationship for the type.
 */

#ifndef OAIRelationshipsLookup_H
#define OAIRelationshipsLookup_H

#include <QJsonObject>

#include "OAIParticipantProfilePropertyReference.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIParticipantProfilePropertyReference;

class OAIRelationshipsLookup : public OAIObject {
public:
    OAIRelationshipsLookup();
    OAIRelationshipsLookup(QString json);
    ~OAIRelationshipsLookup() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getExistingRelationshipName() const;
    void setExistingRelationshipName(const QString &existing_relationship_name);
    bool is_existing_relationship_name_Set() const;
    bool is_existing_relationship_name_Valid() const;

    QString getProfileName() const;
    void setProfileName(const QString &profile_name);
    bool is_profile_name_Set() const;
    bool is_profile_name_Valid() const;

    QList<OAIParticipantProfilePropertyReference> getProfilePropertyReferences() const;
    void setProfilePropertyReferences(const QList<OAIParticipantProfilePropertyReference> &profile_property_references);
    bool is_profile_property_references_Set() const;
    bool is_profile_property_references_Valid() const;

    QString getRelatedProfileName() const;
    void setRelatedProfileName(const QString &related_profile_name);
    bool is_related_profile_name_Set() const;
    bool is_related_profile_name_Valid() const;

    QList<OAIParticipantProfilePropertyReference> getRelatedProfilePropertyReferences() const;
    void setRelatedProfilePropertyReferences(const QList<OAIParticipantProfilePropertyReference> &related_profile_property_references);
    bool is_related_profile_property_references_Set() const;
    bool is_related_profile_property_references_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_existing_relationship_name;
    bool m_existing_relationship_name_isSet;
    bool m_existing_relationship_name_isValid;

    QString m_profile_name;
    bool m_profile_name_isSet;
    bool m_profile_name_isValid;

    QList<OAIParticipantProfilePropertyReference> m_profile_property_references;
    bool m_profile_property_references_isSet;
    bool m_profile_property_references_isValid;

    QString m_related_profile_name;
    bool m_related_profile_name_isSet;
    bool m_related_profile_name_isValid;

    QList<OAIParticipantProfilePropertyReference> m_related_profile_property_references;
    bool m_related_profile_property_references_isSet;
    bool m_related_profile_property_references_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRelationshipsLookup)

#endif // OAIRelationshipsLookup_H
