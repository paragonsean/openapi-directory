/**
 * CustomerInsightsManagementClient
 * The Azure Customer Insights management API provides a RESTful set of web services that interact with Azure Customer Insights service to manage your resources. The API has entities that capture the relationship between an end user and the Azure Customer Insights service.
 *
 * The version of the OpenAPI document: 2017-04-26
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPermissionTypes.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPermissionTypes::OAIPermissionTypes(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPermissionTypes::OAIPermissionTypes() {
    this->initializeModel();
}

OAIPermissionTypes::~OAIPermissionTypes() {}

void OAIPermissionTypes::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIPermissionTypes::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIPermissionTypes::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Read", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPermissionTypes::READ;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Write", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPermissionTypes::WRITE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Manage", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPermissionTypes::MANAGE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIPermissionTypes::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIPermissionTypes::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIPermissionTypes::READ:
            val = "Read";
            break;
        case eOAIPermissionTypes::WRITE:
            val = "Write";
            break;
        case eOAIPermissionTypes::MANAGE:
            val = "Manage";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIPermissionTypes::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIPermissionTypes::eOAIPermissionTypes OAIPermissionTypes::getValue() const {
    return m_value;
}

void OAIPermissionTypes::setValue(const OAIPermissionTypes::eOAIPermissionTypes& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIPermissionTypes::isSet() const {
    
    return m_value_isSet;
}

bool OAIPermissionTypes::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
