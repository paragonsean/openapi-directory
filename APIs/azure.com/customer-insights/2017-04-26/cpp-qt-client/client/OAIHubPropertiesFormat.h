/**
 * CustomerInsightsManagementClient
 * The Azure Customer Insights management API provides a RESTful set of web services that interact with Azure Customer Insights service to manage your resources. The API has entities that capture the relationship between an end user and the Azure Customer Insights service.
 *
 * The version of the OpenAPI document: 2017-04-26
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHubPropertiesFormat.h
 *
 * Properties of hub.
 */

#ifndef OAIHubPropertiesFormat_H
#define OAIHubPropertiesFormat_H

#include <QJsonObject>

#include "OAIHubBillingInfoFormat.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIHubBillingInfoFormat;

class OAIHubPropertiesFormat : public OAIObject {
public:
    OAIHubPropertiesFormat();
    OAIHubPropertiesFormat(QString json);
    ~OAIHubPropertiesFormat() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApiEndpoint() const;
    void setApiEndpoint(const QString &api_endpoint);
    bool is_api_endpoint_Set() const;
    bool is_api_endpoint_Valid() const;

    OAIHubBillingInfoFormat getHubBillingInfo() const;
    void setHubBillingInfo(const OAIHubBillingInfoFormat &hub_billing_info);
    bool is_hub_billing_info_Set() const;
    bool is_hub_billing_info_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    qint32 getTenantFeatures() const;
    void setTenantFeatures(const qint32 &tenant_features);
    bool is_tenant_features_Set() const;
    bool is_tenant_features_Valid() const;

    QString getWebEndpoint() const;
    void setWebEndpoint(const QString &web_endpoint);
    bool is_web_endpoint_Set() const;
    bool is_web_endpoint_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_api_endpoint;
    bool m_api_endpoint_isSet;
    bool m_api_endpoint_isValid;

    OAIHubBillingInfoFormat m_hub_billing_info;
    bool m_hub_billing_info_isSet;
    bool m_hub_billing_info_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    qint32 m_tenant_features;
    bool m_tenant_features_isSet;
    bool m_tenant_features_isValid;

    QString m_web_endpoint;
    bool m_web_endpoint_isSet;
    bool m_web_endpoint_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHubPropertiesFormat)

#endif // OAIHubPropertiesFormat_H
