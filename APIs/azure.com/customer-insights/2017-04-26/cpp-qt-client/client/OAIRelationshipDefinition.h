/**
 * CustomerInsightsManagementClient
 * The Azure Customer Insights management API provides a RESTful set of web services that interact with Azure Customer Insights service to manage your resources. The API has entities that capture the relationship between an end user and the Azure Customer Insights service.
 *
 * The version of the OpenAPI document: 2017-04-26
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRelationshipDefinition.h
 *
 * The definition of Relationship.
 */

#ifndef OAIRelationshipDefinition_H
#define OAIRelationshipDefinition_H

#include <QJsonObject>

#include "OAIPropertyDefinition.h"
#include "OAIProvisioningState.h"
#include "OAIRelationshipTypeMapping.h"
#include <QDateTime>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPropertyDefinition;
class OAIRelationshipTypeMapping;

class OAIRelationshipDefinition : public OAIObject {
public:
    OAIRelationshipDefinition();
    OAIRelationshipDefinition(QString json);
    ~OAIRelationshipDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCardinality() const;
    void setCardinality(const QString &cardinality);
    bool is_cardinality_Set() const;
    bool is_cardinality_Valid() const;

    QMap<QString, QString> getDescription() const;
    void setDescription(const QMap<QString, QString> &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QMap<QString, QString> getDisplayName() const;
    void setDisplayName(const QMap<QString, QString> &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QDateTime getExpiryDateTimeUtc() const;
    void setExpiryDateTimeUtc(const QDateTime &expiry_date_time_utc);
    bool is_expiry_date_time_utc_Set() const;
    bool is_expiry_date_time_utc_Valid() const;

    QList<OAIPropertyDefinition> getFields() const;
    void setFields(const QList<OAIPropertyDefinition> &fields);
    bool is_fields_Set() const;
    bool is_fields_Valid() const;

    QList<OAIRelationshipTypeMapping> getLookupMappings() const;
    void setLookupMappings(const QList<OAIRelationshipTypeMapping> &lookup_mappings);
    bool is_lookup_mappings_Set() const;
    bool is_lookup_mappings_Valid() const;

    QString getProfileType() const;
    void setProfileType(const QString &profile_type);
    bool is_profile_type_Set() const;
    bool is_profile_type_Valid() const;

    OAIProvisioningState getProvisioningState() const;
    void setProvisioningState(const OAIProvisioningState &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    QString getRelatedProfileType() const;
    void setRelatedProfileType(const QString &related_profile_type);
    bool is_related_profile_type_Set() const;
    bool is_related_profile_type_Valid() const;

    QString getRelationshipGuidId() const;
    void setRelationshipGuidId(const QString &relationship_guid_id);
    bool is_relationship_guid_id_Set() const;
    bool is_relationship_guid_id_Valid() const;

    QString getRelationshipName() const;
    void setRelationshipName(const QString &relationship_name);
    bool is_relationship_name_Set() const;
    bool is_relationship_name_Valid() const;

    QString getTenantId() const;
    void setTenantId(const QString &tenant_id);
    bool is_tenant_id_Set() const;
    bool is_tenant_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_cardinality;
    bool m_cardinality_isSet;
    bool m_cardinality_isValid;

    QMap<QString, QString> m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QMap<QString, QString> m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QDateTime m_expiry_date_time_utc;
    bool m_expiry_date_time_utc_isSet;
    bool m_expiry_date_time_utc_isValid;

    QList<OAIPropertyDefinition> m_fields;
    bool m_fields_isSet;
    bool m_fields_isValid;

    QList<OAIRelationshipTypeMapping> m_lookup_mappings;
    bool m_lookup_mappings_isSet;
    bool m_lookup_mappings_isValid;

    QString m_profile_type;
    bool m_profile_type_isSet;
    bool m_profile_type_isValid;

    OAIProvisioningState m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    QString m_related_profile_type;
    bool m_related_profile_type_isSet;
    bool m_related_profile_type_isValid;

    QString m_relationship_guid_id;
    bool m_relationship_guid_id_isSet;
    bool m_relationship_guid_id_isValid;

    QString m_relationship_name;
    bool m_relationship_name_isSet;
    bool m_relationship_name_isValid;

    QString m_tenant_id;
    bool m_tenant_id_isSet;
    bool m_tenant_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRelationshipDefinition)

#endif // OAIRelationshipDefinition_H
