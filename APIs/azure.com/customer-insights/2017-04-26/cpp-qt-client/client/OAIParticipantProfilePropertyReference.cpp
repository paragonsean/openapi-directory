/**
 * CustomerInsightsManagementClient
 * The Azure Customer Insights management API provides a RESTful set of web services that interact with Azure Customer Insights service to manage your resources. The API has entities that capture the relationship between an end user and the Azure Customer Insights service.
 *
 * The version of the OpenAPI document: 2017-04-26
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIParticipantProfilePropertyReference.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIParticipantProfilePropertyReference::OAIParticipantProfilePropertyReference(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIParticipantProfilePropertyReference::OAIParticipantProfilePropertyReference() {
    this->initializeModel();
}

OAIParticipantProfilePropertyReference::~OAIParticipantProfilePropertyReference() {}

void OAIParticipantProfilePropertyReference::initializeModel() {

    m_interaction_property_name_isSet = false;
    m_interaction_property_name_isValid = false;

    m_profile_property_name_isSet = false;
    m_profile_property_name_isValid = false;
}

void OAIParticipantProfilePropertyReference::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIParticipantProfilePropertyReference::fromJsonObject(QJsonObject json) {

    m_interaction_property_name_isValid = ::OpenAPI::fromJsonValue(m_interaction_property_name, json[QString("interactionPropertyName")]);
    m_interaction_property_name_isSet = !json[QString("interactionPropertyName")].isNull() && m_interaction_property_name_isValid;

    m_profile_property_name_isValid = ::OpenAPI::fromJsonValue(m_profile_property_name, json[QString("profilePropertyName")]);
    m_profile_property_name_isSet = !json[QString("profilePropertyName")].isNull() && m_profile_property_name_isValid;
}

QString OAIParticipantProfilePropertyReference::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIParticipantProfilePropertyReference::asJsonObject() const {
    QJsonObject obj;
    if (m_interaction_property_name_isSet) {
        obj.insert(QString("interactionPropertyName"), ::OpenAPI::toJsonValue(m_interaction_property_name));
    }
    if (m_profile_property_name_isSet) {
        obj.insert(QString("profilePropertyName"), ::OpenAPI::toJsonValue(m_profile_property_name));
    }
    return obj;
}

QString OAIParticipantProfilePropertyReference::getInteractionPropertyName() const {
    return m_interaction_property_name;
}
void OAIParticipantProfilePropertyReference::setInteractionPropertyName(const QString &interaction_property_name) {
    m_interaction_property_name = interaction_property_name;
    m_interaction_property_name_isSet = true;
}

bool OAIParticipantProfilePropertyReference::is_interaction_property_name_Set() const{
    return m_interaction_property_name_isSet;
}

bool OAIParticipantProfilePropertyReference::is_interaction_property_name_Valid() const{
    return m_interaction_property_name_isValid;
}

QString OAIParticipantProfilePropertyReference::getProfilePropertyName() const {
    return m_profile_property_name;
}
void OAIParticipantProfilePropertyReference::setProfilePropertyName(const QString &profile_property_name) {
    m_profile_property_name = profile_property_name;
    m_profile_property_name_isSet = true;
}

bool OAIParticipantProfilePropertyReference::is_profile_property_name_Set() const{
    return m_profile_property_name_isSet;
}

bool OAIParticipantProfilePropertyReference::is_profile_property_name_Valid() const{
    return m_profile_property_name_isValid;
}

bool OAIParticipantProfilePropertyReference::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_interaction_property_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile_property_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIParticipantProfilePropertyReference::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_interaction_property_name_isValid && m_profile_property_name_isValid && true;
}

} // namespace OpenAPI
