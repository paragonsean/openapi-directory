/**
 * CustomerInsightsManagementClient
 * The Azure Customer Insights management API provides a RESTful set of web services that interact with Azure Customer Insights service to manage your resources. The API has entities that capture the relationship between an end user and the Azure Customer Insights service.
 *
 * The version of the OpenAPI document: 2017-04-26
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPredictionDistributionDefinition_distributions_inner.h
 *
 * The definition of a prediction distribution.
 */

#ifndef OAIPredictionDistributionDefinition_distributions_inner_H
#define OAIPredictionDistributionDefinition_distributions_inner_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPredictionDistributionDefinition_distributions_inner : public OAIObject {
public:
    OAIPredictionDistributionDefinition_distributions_inner();
    OAIPredictionDistributionDefinition_distributions_inner(QString json);
    ~OAIPredictionDistributionDefinition_distributions_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getNegatives() const;
    void setNegatives(const qint64 &negatives);
    bool is_negatives_Set() const;
    bool is_negatives_Valid() const;

    qint64 getNegativesAboveThreshold() const;
    void setNegativesAboveThreshold(const qint64 &negatives_above_threshold);
    bool is_negatives_above_threshold_Set() const;
    bool is_negatives_above_threshold_Valid() const;

    qint64 getPositives() const;
    void setPositives(const qint64 &positives);
    bool is_positives_Set() const;
    bool is_positives_Valid() const;

    qint64 getPositivesAboveThreshold() const;
    void setPositivesAboveThreshold(const qint64 &positives_above_threshold);
    bool is_positives_above_threshold_Set() const;
    bool is_positives_above_threshold_Valid() const;

    qint32 getScoreThreshold() const;
    void setScoreThreshold(const qint32 &score_threshold);
    bool is_score_threshold_Set() const;
    bool is_score_threshold_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_negatives;
    bool m_negatives_isSet;
    bool m_negatives_isValid;

    qint64 m_negatives_above_threshold;
    bool m_negatives_above_threshold_isSet;
    bool m_negatives_above_threshold_isValid;

    qint64 m_positives;
    bool m_positives_isSet;
    bool m_positives_isValid;

    qint64 m_positives_above_threshold;
    bool m_positives_above_threshold_isSet;
    bool m_positives_above_threshold_isValid;

    qint32 m_score_threshold;
    bool m_score_threshold_isSet;
    bool m_score_threshold_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPredictionDistributionDefinition_distributions_inner)

#endif // OAIPredictionDistributionDefinition_distributions_inner_H
