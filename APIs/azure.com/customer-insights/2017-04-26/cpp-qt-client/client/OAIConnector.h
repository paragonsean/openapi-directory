/**
 * CustomerInsightsManagementClient
 * The Azure Customer Insights management API provides a RESTful set of web services that interact with Azure Customer Insights service to manage your resources. The API has entities that capture the relationship between an end user and the Azure Customer Insights service.
 *
 * The version of the OpenAPI document: 2017-04-26
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConnector.h
 *
 * Properties of connector.
 */

#ifndef OAIConnector_H
#define OAIConnector_H

#include <QJsonObject>

#include "OAIConnectorType.h"
#include "OAIObject.h"
#include <QDateTime>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIConnector : public OAIObject {
public:
    OAIConnector();
    OAIConnector(QString json);
    ~OAIConnector() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getConnectorId() const;
    void setConnectorId(const qint32 &connector_id);
    bool is_connector_id_Set() const;
    bool is_connector_id_Valid() const;

    QString getConnectorName() const;
    void setConnectorName(const QString &connector_name);
    bool is_connector_name_Set() const;
    bool is_connector_name_Valid() const;

    QMap<QString, OAIObject> getConnectorProperties() const;
    void setConnectorProperties(const QMap<QString, OAIObject> &connector_properties);
    bool is_connector_properties_Set() const;
    bool is_connector_properties_Valid() const;

    OAIConnectorType getConnectorType() const;
    void setConnectorType(const OAIConnectorType &connector_type);
    bool is_connector_type_Set() const;
    bool is_connector_type_Valid() const;

    QDateTime getCreated() const;
    void setCreated(const QDateTime &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    bool isIsInternal() const;
    void setIsInternal(const bool &is_internal);
    bool is_is_internal_Set() const;
    bool is_is_internal_Valid() const;

    QDateTime getLastModified() const;
    void setLastModified(const QDateTime &last_modified);
    bool is_last_modified_Set() const;
    bool is_last_modified_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getTenantId() const;
    void setTenantId(const QString &tenant_id);
    bool is_tenant_id_Set() const;
    bool is_tenant_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_connector_id;
    bool m_connector_id_isSet;
    bool m_connector_id_isValid;

    QString m_connector_name;
    bool m_connector_name_isSet;
    bool m_connector_name_isValid;

    QMap<QString, OAIObject> m_connector_properties;
    bool m_connector_properties_isSet;
    bool m_connector_properties_isValid;

    OAIConnectorType m_connector_type;
    bool m_connector_type_isSet;
    bool m_connector_type_isValid;

    QDateTime m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    bool m_is_internal;
    bool m_is_internal_isSet;
    bool m_is_internal_isValid;

    QDateTime m_last_modified;
    bool m_last_modified_isSet;
    bool m_last_modified_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_tenant_id;
    bool m_tenant_id_isSet;
    bool m_tenant_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConnector)

#endif // OAIConnector_H
