/**
 * CustomerInsightsManagementClient
 * The Azure Customer Insights management API provides a RESTful set of web services that interact with Azure Customer Insights service to manage your resources. The API has entities that capture the relationship between an end user and the Azure Customer Insights service.
 *
 * The version of the OpenAPI document: 2017-04-26
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPredictionModelStatus.h
 *
 * The prediction model status.
 */

#ifndef OAIPredictionModelStatus_H
#define OAIPredictionModelStatus_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPredictionModelStatus : public OAIObject {
public:
    OAIPredictionModelStatus();
    OAIPredictionModelStatus(QString json);
    ~OAIPredictionModelStatus() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QString getModelVersion() const;
    void setModelVersion(const QString &model_version);
    bool is_model_version_Set() const;
    bool is_model_version_Valid() const;

    QString getPredictionGuidId() const;
    void setPredictionGuidId(const QString &prediction_guid_id);
    bool is_prediction_guid_id_Set() const;
    bool is_prediction_guid_id_Valid() const;

    QString getPredictionName() const;
    void setPredictionName(const QString &prediction_name);
    bool is_prediction_name_Set() const;
    bool is_prediction_name_Valid() const;

    qint32 getSignalsUsed() const;
    void setSignalsUsed(const qint32 &signals_used);
    bool is_signals_used_Set() const;
    bool is_signals_used_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getTenantId() const;
    void setTenantId(const QString &tenant_id);
    bool is_tenant_id_Set() const;
    bool is_tenant_id_Valid() const;

    qint32 getTestSetCount() const;
    void setTestSetCount(const qint32 &test_set_count);
    bool is_test_set_count_Set() const;
    bool is_test_set_count_Valid() const;

    qint32 getTrainingAccuracy() const;
    void setTrainingAccuracy(const qint32 &training_accuracy);
    bool is_training_accuracy_Set() const;
    bool is_training_accuracy_Valid() const;

    qint32 getTrainingSetCount() const;
    void setTrainingSetCount(const qint32 &training_set_count);
    bool is_training_set_count_Set() const;
    bool is_training_set_count_Valid() const;

    qint32 getValidationSetCount() const;
    void setValidationSetCount(const qint32 &validation_set_count);
    bool is_validation_set_count_Set() const;
    bool is_validation_set_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QString m_model_version;
    bool m_model_version_isSet;
    bool m_model_version_isValid;

    QString m_prediction_guid_id;
    bool m_prediction_guid_id_isSet;
    bool m_prediction_guid_id_isValid;

    QString m_prediction_name;
    bool m_prediction_name_isSet;
    bool m_prediction_name_isValid;

    qint32 m_signals_used;
    bool m_signals_used_isSet;
    bool m_signals_used_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_tenant_id;
    bool m_tenant_id_isSet;
    bool m_tenant_id_isValid;

    qint32 m_test_set_count;
    bool m_test_set_count_isSet;
    bool m_test_set_count_isValid;

    qint32 m_training_accuracy;
    bool m_training_accuracy_isSet;
    bool m_training_accuracy_isValid;

    qint32 m_training_set_count;
    bool m_training_set_count_isSet;
    bool m_training_set_count_isValid;

    qint32 m_validation_set_count;
    bool m_validation_set_count_isSet;
    bool m_validation_set_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPredictionModelStatus)

#endif // OAIPredictionModelStatus_H
