/**
 * CustomerInsightsManagementClient
 * The Azure Customer Insights management API provides a RESTful set of web services that interact with Azure Customer Insights service to manage your resources. The API has entities that capture the relationship between an end user and the Azure Customer Insights service.
 *
 * The version of the OpenAPI document: 2017-04-26
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILinkDefinition.h
 *
 * The definition of Link.
 */

#ifndef OAILinkDefinition_H
#define OAILinkDefinition_H

#include <QJsonObject>

#include "OAIParticipantPropertyReference.h"
#include "OAIProvisioningState.h"
#include "OAITypePropertiesMapping.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITypePropertiesMapping;
class OAIParticipantPropertyReference;

class OAILinkDefinition : public OAIObject {
public:
    OAILinkDefinition();
    OAILinkDefinition(QString json);
    ~OAILinkDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QString> getDescription() const;
    void setDescription(const QMap<QString, QString> &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QMap<QString, QString> getDisplayName() const;
    void setDisplayName(const QMap<QString, QString> &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QString getLinkName() const;
    void setLinkName(const QString &link_name);
    bool is_link_name_Set() const;
    bool is_link_name_Valid() const;

    QList<OAITypePropertiesMapping> getMappings() const;
    void setMappings(const QList<OAITypePropertiesMapping> &mappings);
    bool is_mappings_Set() const;
    bool is_mappings_Valid() const;

    QString getOperationType() const;
    void setOperationType(const QString &operation_type);
    bool is_operation_type_Set() const;
    bool is_operation_type_Valid() const;

    QList<OAIParticipantPropertyReference> getParticipantPropertyReferences() const;
    void setParticipantPropertyReferences(const QList<OAIParticipantPropertyReference> &participant_property_references);
    bool is_participant_property_references_Set() const;
    bool is_participant_property_references_Valid() const;

    OAIProvisioningState getProvisioningState() const;
    void setProvisioningState(const OAIProvisioningState &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    bool isReferenceOnly() const;
    void setReferenceOnly(const bool &reference_only);
    bool is_reference_only_Set() const;
    bool is_reference_only_Valid() const;

    QString getSourceEntityType() const;
    void setSourceEntityType(const QString &source_entity_type);
    bool is_source_entity_type_Set() const;
    bool is_source_entity_type_Valid() const;

    QString getSourceEntityTypeName() const;
    void setSourceEntityTypeName(const QString &source_entity_type_name);
    bool is_source_entity_type_name_Set() const;
    bool is_source_entity_type_name_Valid() const;

    QString getTargetEntityType() const;
    void setTargetEntityType(const QString &target_entity_type);
    bool is_target_entity_type_Set() const;
    bool is_target_entity_type_Valid() const;

    QString getTargetEntityTypeName() const;
    void setTargetEntityTypeName(const QString &target_entity_type_name);
    bool is_target_entity_type_name_Set() const;
    bool is_target_entity_type_name_Valid() const;

    QString getTenantId() const;
    void setTenantId(const QString &tenant_id);
    bool is_tenant_id_Set() const;
    bool is_tenant_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QString> m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QMap<QString, QString> m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QString m_link_name;
    bool m_link_name_isSet;
    bool m_link_name_isValid;

    QList<OAITypePropertiesMapping> m_mappings;
    bool m_mappings_isSet;
    bool m_mappings_isValid;

    QString m_operation_type;
    bool m_operation_type_isSet;
    bool m_operation_type_isValid;

    QList<OAIParticipantPropertyReference> m_participant_property_references;
    bool m_participant_property_references_isSet;
    bool m_participant_property_references_isValid;

    OAIProvisioningState m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    bool m_reference_only;
    bool m_reference_only_isSet;
    bool m_reference_only_isValid;

    QString m_source_entity_type;
    bool m_source_entity_type_isSet;
    bool m_source_entity_type_isValid;

    QString m_source_entity_type_name;
    bool m_source_entity_type_name_isSet;
    bool m_source_entity_type_name_isValid;

    QString m_target_entity_type;
    bool m_target_entity_type_isSet;
    bool m_target_entity_type_isValid;

    QString m_target_entity_type_name;
    bool m_target_entity_type_name_isSet;
    bool m_target_entity_type_name_isValid;

    QString m_tenant_id;
    bool m_tenant_id_isSet;
    bool m_tenant_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILinkDefinition)

#endif // OAILinkDefinition_H
