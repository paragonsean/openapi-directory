/**
 * CustomerInsightsManagementClient
 * The Azure Customer Insights management API provides a RESTful set of web services that interact with Azure Customer Insights service to manage your resources. The API has entities that capture the relationship between an end user and the Azure Customer Insights service.
 *
 * The version of the OpenAPI document: 2017-04-26
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISuggestRelationshipLinksResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISuggestRelationshipLinksResponse::OAISuggestRelationshipLinksResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISuggestRelationshipLinksResponse::OAISuggestRelationshipLinksResponse() {
    this->initializeModel();
}

OAISuggestRelationshipLinksResponse::~OAISuggestRelationshipLinksResponse() {}

void OAISuggestRelationshipLinksResponse::initializeModel() {

    m_interaction_name_isSet = false;
    m_interaction_name_isValid = false;

    m_suggested_relationships_isSet = false;
    m_suggested_relationships_isValid = false;
}

void OAISuggestRelationshipLinksResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISuggestRelationshipLinksResponse::fromJsonObject(QJsonObject json) {

    m_interaction_name_isValid = ::OpenAPI::fromJsonValue(m_interaction_name, json[QString("interactionName")]);
    m_interaction_name_isSet = !json[QString("interactionName")].isNull() && m_interaction_name_isValid;

    m_suggested_relationships_isValid = ::OpenAPI::fromJsonValue(m_suggested_relationships, json[QString("suggestedRelationships")]);
    m_suggested_relationships_isSet = !json[QString("suggestedRelationships")].isNull() && m_suggested_relationships_isValid;
}

QString OAISuggestRelationshipLinksResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISuggestRelationshipLinksResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_interaction_name_isSet) {
        obj.insert(QString("interactionName"), ::OpenAPI::toJsonValue(m_interaction_name));
    }
    if (m_suggested_relationships.size() > 0) {
        obj.insert(QString("suggestedRelationships"), ::OpenAPI::toJsonValue(m_suggested_relationships));
    }
    return obj;
}

QString OAISuggestRelationshipLinksResponse::getInteractionName() const {
    return m_interaction_name;
}
void OAISuggestRelationshipLinksResponse::setInteractionName(const QString &interaction_name) {
    m_interaction_name = interaction_name;
    m_interaction_name_isSet = true;
}

bool OAISuggestRelationshipLinksResponse::is_interaction_name_Set() const{
    return m_interaction_name_isSet;
}

bool OAISuggestRelationshipLinksResponse::is_interaction_name_Valid() const{
    return m_interaction_name_isValid;
}

QList<OAIRelationshipsLookup> OAISuggestRelationshipLinksResponse::getSuggestedRelationships() const {
    return m_suggested_relationships;
}
void OAISuggestRelationshipLinksResponse::setSuggestedRelationships(const QList<OAIRelationshipsLookup> &suggested_relationships) {
    m_suggested_relationships = suggested_relationships;
    m_suggested_relationships_isSet = true;
}

bool OAISuggestRelationshipLinksResponse::is_suggested_relationships_Set() const{
    return m_suggested_relationships_isSet;
}

bool OAISuggestRelationshipLinksResponse::is_suggested_relationships_Valid() const{
    return m_suggested_relationships_isValid;
}

bool OAISuggestRelationshipLinksResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_interaction_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_suggested_relationships.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISuggestRelationshipLinksResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
