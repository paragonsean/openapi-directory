/**
 * CustomerInsightsManagementClient
 * The Azure Customer Insights management API provides a RESTful set of web services that interact with Azure Customer Insights service to manage your resources. The API has entities that capture the relationship between an end user and the Azure Customer Insights service.
 *
 * The version of the OpenAPI document: 2017-04-26
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHubPropertiesFormat.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHubPropertiesFormat::OAIHubPropertiesFormat(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHubPropertiesFormat::OAIHubPropertiesFormat() {
    this->initializeModel();
}

OAIHubPropertiesFormat::~OAIHubPropertiesFormat() {}

void OAIHubPropertiesFormat::initializeModel() {

    m_api_endpoint_isSet = false;
    m_api_endpoint_isValid = false;

    m_hub_billing_info_isSet = false;
    m_hub_billing_info_isValid = false;

    m_provisioning_state_isSet = false;
    m_provisioning_state_isValid = false;

    m_tenant_features_isSet = false;
    m_tenant_features_isValid = false;

    m_web_endpoint_isSet = false;
    m_web_endpoint_isValid = false;
}

void OAIHubPropertiesFormat::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHubPropertiesFormat::fromJsonObject(QJsonObject json) {

    m_api_endpoint_isValid = ::OpenAPI::fromJsonValue(m_api_endpoint, json[QString("apiEndpoint")]);
    m_api_endpoint_isSet = !json[QString("apiEndpoint")].isNull() && m_api_endpoint_isValid;

    m_hub_billing_info_isValid = ::OpenAPI::fromJsonValue(m_hub_billing_info, json[QString("hubBillingInfo")]);
    m_hub_billing_info_isSet = !json[QString("hubBillingInfo")].isNull() && m_hub_billing_info_isValid;

    m_provisioning_state_isValid = ::OpenAPI::fromJsonValue(m_provisioning_state, json[QString("provisioningState")]);
    m_provisioning_state_isSet = !json[QString("provisioningState")].isNull() && m_provisioning_state_isValid;

    m_tenant_features_isValid = ::OpenAPI::fromJsonValue(m_tenant_features, json[QString("tenantFeatures")]);
    m_tenant_features_isSet = !json[QString("tenantFeatures")].isNull() && m_tenant_features_isValid;

    m_web_endpoint_isValid = ::OpenAPI::fromJsonValue(m_web_endpoint, json[QString("webEndpoint")]);
    m_web_endpoint_isSet = !json[QString("webEndpoint")].isNull() && m_web_endpoint_isValid;
}

QString OAIHubPropertiesFormat::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHubPropertiesFormat::asJsonObject() const {
    QJsonObject obj;
    if (m_api_endpoint_isSet) {
        obj.insert(QString("apiEndpoint"), ::OpenAPI::toJsonValue(m_api_endpoint));
    }
    if (m_hub_billing_info.isSet()) {
        obj.insert(QString("hubBillingInfo"), ::OpenAPI::toJsonValue(m_hub_billing_info));
    }
    if (m_provisioning_state_isSet) {
        obj.insert(QString("provisioningState"), ::OpenAPI::toJsonValue(m_provisioning_state));
    }
    if (m_tenant_features_isSet) {
        obj.insert(QString("tenantFeatures"), ::OpenAPI::toJsonValue(m_tenant_features));
    }
    if (m_web_endpoint_isSet) {
        obj.insert(QString("webEndpoint"), ::OpenAPI::toJsonValue(m_web_endpoint));
    }
    return obj;
}

QString OAIHubPropertiesFormat::getApiEndpoint() const {
    return m_api_endpoint;
}
void OAIHubPropertiesFormat::setApiEndpoint(const QString &api_endpoint) {
    m_api_endpoint = api_endpoint;
    m_api_endpoint_isSet = true;
}

bool OAIHubPropertiesFormat::is_api_endpoint_Set() const{
    return m_api_endpoint_isSet;
}

bool OAIHubPropertiesFormat::is_api_endpoint_Valid() const{
    return m_api_endpoint_isValid;
}

OAIHubBillingInfoFormat OAIHubPropertiesFormat::getHubBillingInfo() const {
    return m_hub_billing_info;
}
void OAIHubPropertiesFormat::setHubBillingInfo(const OAIHubBillingInfoFormat &hub_billing_info) {
    m_hub_billing_info = hub_billing_info;
    m_hub_billing_info_isSet = true;
}

bool OAIHubPropertiesFormat::is_hub_billing_info_Set() const{
    return m_hub_billing_info_isSet;
}

bool OAIHubPropertiesFormat::is_hub_billing_info_Valid() const{
    return m_hub_billing_info_isValid;
}

QString OAIHubPropertiesFormat::getProvisioningState() const {
    return m_provisioning_state;
}
void OAIHubPropertiesFormat::setProvisioningState(const QString &provisioning_state) {
    m_provisioning_state = provisioning_state;
    m_provisioning_state_isSet = true;
}

bool OAIHubPropertiesFormat::is_provisioning_state_Set() const{
    return m_provisioning_state_isSet;
}

bool OAIHubPropertiesFormat::is_provisioning_state_Valid() const{
    return m_provisioning_state_isValid;
}

qint32 OAIHubPropertiesFormat::getTenantFeatures() const {
    return m_tenant_features;
}
void OAIHubPropertiesFormat::setTenantFeatures(const qint32 &tenant_features) {
    m_tenant_features = tenant_features;
    m_tenant_features_isSet = true;
}

bool OAIHubPropertiesFormat::is_tenant_features_Set() const{
    return m_tenant_features_isSet;
}

bool OAIHubPropertiesFormat::is_tenant_features_Valid() const{
    return m_tenant_features_isValid;
}

QString OAIHubPropertiesFormat::getWebEndpoint() const {
    return m_web_endpoint;
}
void OAIHubPropertiesFormat::setWebEndpoint(const QString &web_endpoint) {
    m_web_endpoint = web_endpoint;
    m_web_endpoint_isSet = true;
}

bool OAIHubPropertiesFormat::is_web_endpoint_Set() const{
    return m_web_endpoint_isSet;
}

bool OAIHubPropertiesFormat::is_web_endpoint_Valid() const{
    return m_web_endpoint_isValid;
}

bool OAIHubPropertiesFormat::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_api_endpoint_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hub_billing_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_provisioning_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tenant_features_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_web_endpoint_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHubPropertiesFormat::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
