/**
 * CustomerInsightsManagementClient
 * The Azure Customer Insights management API provides a RESTful set of web services that interact with Azure Customer Insights service to manage your resources. The API has entities that capture the relationship between an end user and the Azure Customer Insights service.
 *
 * The version of the OpenAPI document: 2017-04-26
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import KpiListResult from '../model/KpiListResult';
import KpiResourceFormat from '../model/KpiResourceFormat';

/**
* Kpi service.
* @module api/KpiApi
* @version 2017-04-26
*/
export default class KpiApi {

    /**
    * Constructs a new KpiApi. 
    * @alias module:api/KpiApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the kpiCreateOrUpdate operation.
     * @callback module:api/KpiApi~kpiCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/KpiResourceFormat} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a KPI or updates an existing KPI in the hub.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} hubName The name of the hub.
     * @param {String} kpiName The name of the KPI.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/KpiResourceFormat} parameters Parameters supplied to the create/update KPI operation.
     * @param {module:api/KpiApi~kpiCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/KpiResourceFormat}
     */
    kpiCreateOrUpdate(resourceGroupName, hubName, kpiName, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling kpiCreateOrUpdate");
      }
      // verify the required parameter 'hubName' is set
      if (hubName === undefined || hubName === null) {
        throw new Error("Missing the required parameter 'hubName' when calling kpiCreateOrUpdate");
      }
      // verify the required parameter 'kpiName' is set
      if (kpiName === undefined || kpiName === null) {
        throw new Error("Missing the required parameter 'kpiName' when calling kpiCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling kpiCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling kpiCreateOrUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling kpiCreateOrUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'hubName': hubName,
        'kpiName': kpiName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = KpiResourceFormat;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/kpi/{kpiName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the kpiDelete operation.
     * @callback module:api/KpiApi~kpiDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a KPI in the hub.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} hubName The name of the hub.
     * @param {String} kpiName The name of the KPI.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/KpiApi~kpiDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    kpiDelete(resourceGroupName, hubName, kpiName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling kpiDelete");
      }
      // verify the required parameter 'hubName' is set
      if (hubName === undefined || hubName === null) {
        throw new Error("Missing the required parameter 'hubName' when calling kpiDelete");
      }
      // verify the required parameter 'kpiName' is set
      if (kpiName === undefined || kpiName === null) {
        throw new Error("Missing the required parameter 'kpiName' when calling kpiDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling kpiDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling kpiDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'hubName': hubName,
        'kpiName': kpiName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/kpi/{kpiName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the kpiGet operation.
     * @callback module:api/KpiApi~kpiGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/KpiResourceFormat} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a KPI in the hub.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} hubName The name of the hub.
     * @param {String} kpiName The name of the KPI.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/KpiApi~kpiGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/KpiResourceFormat}
     */
    kpiGet(resourceGroupName, hubName, kpiName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling kpiGet");
      }
      // verify the required parameter 'hubName' is set
      if (hubName === undefined || hubName === null) {
        throw new Error("Missing the required parameter 'hubName' when calling kpiGet");
      }
      // verify the required parameter 'kpiName' is set
      if (kpiName === undefined || kpiName === null) {
        throw new Error("Missing the required parameter 'kpiName' when calling kpiGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling kpiGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling kpiGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'hubName': hubName,
        'kpiName': kpiName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = KpiResourceFormat;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/kpi/{kpiName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the kpiListByHub operation.
     * @callback module:api/KpiApi~kpiListByHubCallback
     * @param {String} error Error message, if any.
     * @param {module:model/KpiListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets all the KPIs in the specified hub.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} hubName The name of the hub.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/KpiApi~kpiListByHubCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/KpiListResult}
     */
    kpiListByHub(resourceGroupName, hubName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling kpiListByHub");
      }
      // verify the required parameter 'hubName' is set
      if (hubName === undefined || hubName === null) {
        throw new Error("Missing the required parameter 'hubName' when calling kpiListByHub");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling kpiListByHub");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling kpiListByHub");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'hubName': hubName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = KpiListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/kpi', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the kpiReprocess operation.
     * @callback module:api/KpiApi~kpiReprocessCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Reprocesses the Kpi values of the specified KPI.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} hubName The name of the hub.
     * @param {String} kpiName The name of the KPI.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/KpiApi~kpiReprocessCallback} callback The callback function, accepting three arguments: error, data, response
     */
    kpiReprocess(resourceGroupName, hubName, kpiName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling kpiReprocess");
      }
      // verify the required parameter 'hubName' is set
      if (hubName === undefined || hubName === null) {
        throw new Error("Missing the required parameter 'hubName' when calling kpiReprocess");
      }
      // verify the required parameter 'kpiName' is set
      if (kpiName === undefined || kpiName === null) {
        throw new Error("Missing the required parameter 'kpiName' when calling kpiReprocess");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling kpiReprocess");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling kpiReprocess");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'hubName': hubName,
        'kpiName': kpiName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/kpi/{kpiName}/reprocess', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
