/**
 * CustomerInsightsManagementClient
 * The Azure Customer Insights management API provides a RESTful set of web services that interact with Azure Customer Insights service to manage your resources. The API has entities that capture the relationship between an end user and the Azure Customer Insights service.
 *
 * The version of the OpenAPI document: 2017-04-26
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CustomerInsightsManagementClient);
  }
}(this, function(expect, CustomerInsightsManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CustomerInsightsManagementClient.PredictionModelStatus();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PredictionModelStatus', function() {
    it('should create an instance of PredictionModelStatus', function() {
      // uncomment below and update the code to test PredictionModelStatus
      //var instance = new CustomerInsightsManagementClient.PredictionModelStatus();
      //expect(instance).to.be.a(CustomerInsightsManagementClient.PredictionModelStatus);
    });

    it('should have the property message (base name: "message")', function() {
      // uncomment below and update the code to test the property message
      //var instance = new CustomerInsightsManagementClient.PredictionModelStatus();
      //expect(instance).to.be();
    });

    it('should have the property modelVersion (base name: "modelVersion")', function() {
      // uncomment below and update the code to test the property modelVersion
      //var instance = new CustomerInsightsManagementClient.PredictionModelStatus();
      //expect(instance).to.be();
    });

    it('should have the property predictionGuidId (base name: "predictionGuidId")', function() {
      // uncomment below and update the code to test the property predictionGuidId
      //var instance = new CustomerInsightsManagementClient.PredictionModelStatus();
      //expect(instance).to.be();
    });

    it('should have the property predictionName (base name: "predictionName")', function() {
      // uncomment below and update the code to test the property predictionName
      //var instance = new CustomerInsightsManagementClient.PredictionModelStatus();
      //expect(instance).to.be();
    });

    it('should have the property signalsUsed (base name: "signalsUsed")', function() {
      // uncomment below and update the code to test the property signalsUsed
      //var instance = new CustomerInsightsManagementClient.PredictionModelStatus();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new CustomerInsightsManagementClient.PredictionModelStatus();
      //expect(instance).to.be();
    });

    it('should have the property tenantId (base name: "tenantId")', function() {
      // uncomment below and update the code to test the property tenantId
      //var instance = new CustomerInsightsManagementClient.PredictionModelStatus();
      //expect(instance).to.be();
    });

    it('should have the property testSetCount (base name: "testSetCount")', function() {
      // uncomment below and update the code to test the property testSetCount
      //var instance = new CustomerInsightsManagementClient.PredictionModelStatus();
      //expect(instance).to.be();
    });

    it('should have the property trainingAccuracy (base name: "trainingAccuracy")', function() {
      // uncomment below and update the code to test the property trainingAccuracy
      //var instance = new CustomerInsightsManagementClient.PredictionModelStatus();
      //expect(instance).to.be();
    });

    it('should have the property trainingSetCount (base name: "trainingSetCount")', function() {
      // uncomment below and update the code to test the property trainingSetCount
      //var instance = new CustomerInsightsManagementClient.PredictionModelStatus();
      //expect(instance).to.be();
    });

    it('should have the property validationSetCount (base name: "validationSetCount")', function() {
      // uncomment below and update the code to test the property validationSetCount
      //var instance = new CustomerInsightsManagementClient.PredictionModelStatus();
      //expect(instance).to.be();
    });

  });

}));
