/**
 * CustomerInsightsManagementClient
 * The Azure Customer Insights management API provides a RESTful set of web services that interact with Azure Customer Insights service to manage your resources. The API has entities that capture the relationship between an end user and the Azure Customer Insights service.
 *
 * The version of the OpenAPI document: 2017-04-26
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CustomerInsightsManagementClient);
  }
}(this, function(expect, CustomerInsightsManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CustomerInsightsManagementClient.ConnectorMapping();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ConnectorMapping', function() {
    it('should create an instance of ConnectorMapping', function() {
      // uncomment below and update the code to test ConnectorMapping
      //var instance = new CustomerInsightsManagementClient.ConnectorMapping();
      //expect(instance).to.be.a(CustomerInsightsManagementClient.ConnectorMapping);
    });

    it('should have the property connectorMappingName (base name: "connectorMappingName")', function() {
      // uncomment below and update the code to test the property connectorMappingName
      //var instance = new CustomerInsightsManagementClient.ConnectorMapping();
      //expect(instance).to.be();
    });

    it('should have the property connectorName (base name: "connectorName")', function() {
      // uncomment below and update the code to test the property connectorName
      //var instance = new CustomerInsightsManagementClient.ConnectorMapping();
      //expect(instance).to.be();
    });

    it('should have the property connectorType (base name: "connectorType")', function() {
      // uncomment below and update the code to test the property connectorType
      //var instance = new CustomerInsightsManagementClient.ConnectorMapping();
      //expect(instance).to.be();
    });

    it('should have the property created (base name: "created")', function() {
      // uncomment below and update the code to test the property created
      //var instance = new CustomerInsightsManagementClient.ConnectorMapping();
      //expect(instance).to.be();
    });

    it('should have the property dataFormatId (base name: "dataFormatId")', function() {
      // uncomment below and update the code to test the property dataFormatId
      //var instance = new CustomerInsightsManagementClient.ConnectorMapping();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new CustomerInsightsManagementClient.ConnectorMapping();
      //expect(instance).to.be();
    });

    it('should have the property displayName (base name: "displayName")', function() {
      // uncomment below and update the code to test the property displayName
      //var instance = new CustomerInsightsManagementClient.ConnectorMapping();
      //expect(instance).to.be();
    });

    it('should have the property entityType (base name: "entityType")', function() {
      // uncomment below and update the code to test the property entityType
      //var instance = new CustomerInsightsManagementClient.ConnectorMapping();
      //expect(instance).to.be();
    });

    it('should have the property entityTypeName (base name: "entityTypeName")', function() {
      // uncomment below and update the code to test the property entityTypeName
      //var instance = new CustomerInsightsManagementClient.ConnectorMapping();
      //expect(instance).to.be();
    });

    it('should have the property lastModified (base name: "lastModified")', function() {
      // uncomment below and update the code to test the property lastModified
      //var instance = new CustomerInsightsManagementClient.ConnectorMapping();
      //expect(instance).to.be();
    });

    it('should have the property mappingProperties (base name: "mappingProperties")', function() {
      // uncomment below and update the code to test the property mappingProperties
      //var instance = new CustomerInsightsManagementClient.ConnectorMapping();
      //expect(instance).to.be();
    });

    it('should have the property nextRunTime (base name: "nextRunTime")', function() {
      // uncomment below and update the code to test the property nextRunTime
      //var instance = new CustomerInsightsManagementClient.ConnectorMapping();
      //expect(instance).to.be();
    });

    it('should have the property runId (base name: "runId")', function() {
      // uncomment below and update the code to test the property runId
      //var instance = new CustomerInsightsManagementClient.ConnectorMapping();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new CustomerInsightsManagementClient.ConnectorMapping();
      //expect(instance).to.be();
    });

    it('should have the property tenantId (base name: "tenantId")', function() {
      // uncomment below and update the code to test the property tenantId
      //var instance = new CustomerInsightsManagementClient.ConnectorMapping();
      //expect(instance).to.be();
    });

  });

}));
