/**
 * CustomerInsightsManagementClient
 * The Azure Customer Insights management API provides a RESTful set of web services that interact with Azure Customer Insights service to manage your resources. The API has entities that capture the relationship between an end user and the Azure Customer Insights service.
 *
 * The version of the OpenAPI document: 2017-04-26
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CustomerInsightsManagementClient);
  }
}(this, function(expect, CustomerInsightsManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CustomerInsightsManagementClient.RelationshipsLookup();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RelationshipsLookup', function() {
    it('should create an instance of RelationshipsLookup', function() {
      // uncomment below and update the code to test RelationshipsLookup
      //var instance = new CustomerInsightsManagementClient.RelationshipsLookup();
      //expect(instance).to.be.a(CustomerInsightsManagementClient.RelationshipsLookup);
    });

    it('should have the property existingRelationshipName (base name: "existingRelationshipName")', function() {
      // uncomment below and update the code to test the property existingRelationshipName
      //var instance = new CustomerInsightsManagementClient.RelationshipsLookup();
      //expect(instance).to.be();
    });

    it('should have the property profileName (base name: "profileName")', function() {
      // uncomment below and update the code to test the property profileName
      //var instance = new CustomerInsightsManagementClient.RelationshipsLookup();
      //expect(instance).to.be();
    });

    it('should have the property profilePropertyReferences (base name: "profilePropertyReferences")', function() {
      // uncomment below and update the code to test the property profilePropertyReferences
      //var instance = new CustomerInsightsManagementClient.RelationshipsLookup();
      //expect(instance).to.be();
    });

    it('should have the property relatedProfileName (base name: "relatedProfileName")', function() {
      // uncomment below and update the code to test the property relatedProfileName
      //var instance = new CustomerInsightsManagementClient.RelationshipsLookup();
      //expect(instance).to.be();
    });

    it('should have the property relatedProfilePropertyReferences (base name: "relatedProfilePropertyReferences")', function() {
      // uncomment below and update the code to test the property relatedProfilePropertyReferences
      //var instance = new CustomerInsightsManagementClient.RelationshipsLookup();
      //expect(instance).to.be();
    });

  });

}));
