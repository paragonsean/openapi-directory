# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.subscription_state import SubscriptionState
from openapi_server import util


class Subscription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_name: str=None, id: str=None, offer_id: str=None, state: SubscriptionState=None, subscription_id: str=None, tenant_id: str=None):
        """Subscription - a model defined in OpenAPI

        :param display_name: The display_name of this Subscription.
        :param id: The id of this Subscription.
        :param offer_id: The offer_id of this Subscription.
        :param state: The state of this Subscription.
        :param subscription_id: The subscription_id of this Subscription.
        :param tenant_id: The tenant_id of this Subscription.
        """
        self.openapi_types = {
            'display_name': str,
            'id': str,
            'offer_id': str,
            'state': SubscriptionState,
            'subscription_id': str,
            'tenant_id': str
        }

        self.attribute_map = {
            'display_name': 'displayName',
            'id': 'id',
            'offer_id': 'offerId',
            'state': 'state',
            'subscription_id': 'subscriptionId',
            'tenant_id': 'tenantId'
        }

        self._display_name = display_name
        self._id = id
        self._offer_id = offer_id
        self._state = state
        self._subscription_id = subscription_id
        self._tenant_id = tenant_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Subscription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Subscription of this Subscription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_name(self):
        """Gets the display_name of this Subscription.

        Subscription name.

        :return: The display_name of this Subscription.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this Subscription.

        Subscription name.

        :param display_name: The display_name of this Subscription.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def id(self):
        """Gets the id of this Subscription.

        Fully qualified identifier.

        :return: The id of this Subscription.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Subscription.

        Fully qualified identifier.

        :param id: The id of this Subscription.
        :type id: str
        """

        self._id = id

    @property
    def offer_id(self):
        """Gets the offer_id of this Subscription.

        Identifier of the offer under the scope of a delegated provider.

        :return: The offer_id of this Subscription.
        :rtype: str
        """
        return self._offer_id

    @offer_id.setter
    def offer_id(self, offer_id):
        """Sets the offer_id of this Subscription.

        Identifier of the offer under the scope of a delegated provider.

        :param offer_id: The offer_id of this Subscription.
        :type offer_id: str
        """

        self._offer_id = offer_id

    @property
    def state(self):
        """Gets the state of this Subscription.


        :return: The state of this Subscription.
        :rtype: SubscriptionState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this Subscription.


        :param state: The state of this Subscription.
        :type state: SubscriptionState
        """

        self._state = state

    @property
    def subscription_id(self):
        """Gets the subscription_id of this Subscription.

        Subscription identifier.

        :return: The subscription_id of this Subscription.
        :rtype: str
        """
        return self._subscription_id

    @subscription_id.setter
    def subscription_id(self, subscription_id):
        """Sets the subscription_id of this Subscription.

        Subscription identifier.

        :param subscription_id: The subscription_id of this Subscription.
        :type subscription_id: str
        """

        self._subscription_id = subscription_id

    @property
    def tenant_id(self):
        """Gets the tenant_id of this Subscription.

        Directory tenant identifier.

        :return: The tenant_id of this Subscription.
        :rtype: str
        """
        return self._tenant_id

    @tenant_id.setter
    def tenant_id(self, tenant_id):
        """Sets the tenant_id of this Subscription.

        Directory tenant identifier.

        :param tenant_id: The tenant_id of this Subscription.
        :type tenant_id: str
        """

        self._tenant_id = tenant_id
