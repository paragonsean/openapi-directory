/**
 * SubscriptionClient
 * The User Subscription Management Client.
 *
 * The version of the OpenAPI document: 2015-11-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISubscriptionState.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISubscriptionState::OAISubscriptionState(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISubscriptionState::OAISubscriptionState() {
    this->initializeModel();
}

OAISubscriptionState::~OAISubscriptionState() {}

void OAISubscriptionState::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAISubscriptionState::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAISubscriptionState::fromJson(QString jsonString) {
    
    if ( jsonString.compare("NotDefined", Qt::CaseInsensitive) == 0) {
        m_value = eOAISubscriptionState::NOTDEFINED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Enabled", Qt::CaseInsensitive) == 0) {
        m_value = eOAISubscriptionState::ENABLED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Warned", Qt::CaseInsensitive) == 0) {
        m_value = eOAISubscriptionState::WARNED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PastDue", Qt::CaseInsensitive) == 0) {
        m_value = eOAISubscriptionState::PASTDUE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Disabled", Qt::CaseInsensitive) == 0) {
        m_value = eOAISubscriptionState::DISABLED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Deleted", Qt::CaseInsensitive) == 0) {
        m_value = eOAISubscriptionState::DELETED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAISubscriptionState::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAISubscriptionState::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAISubscriptionState::NOTDEFINED:
            val = "NotDefined";
            break;
        case eOAISubscriptionState::ENABLED:
            val = "Enabled";
            break;
        case eOAISubscriptionState::WARNED:
            val = "Warned";
            break;
        case eOAISubscriptionState::PASTDUE:
            val = "PastDue";
            break;
        case eOAISubscriptionState::DISABLED:
            val = "Disabled";
            break;
        case eOAISubscriptionState::DELETED:
            val = "Deleted";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAISubscriptionState::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAISubscriptionState::eOAISubscriptionState OAISubscriptionState::getValue() const {
    return m_value;
}

void OAISubscriptionState::setValue(const OAISubscriptionState::eOAISubscriptionState& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAISubscriptionState::isSet() const {
    
    return m_value_isSet;
}

bool OAISubscriptionState::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
