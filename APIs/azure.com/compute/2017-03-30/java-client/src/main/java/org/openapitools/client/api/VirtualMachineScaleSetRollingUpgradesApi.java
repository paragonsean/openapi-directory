/*
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2017-03-30
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.OperationStatusResponse;
import org.openapitools.client.model.RollingUpgradeStatusInfo;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class VirtualMachineScaleSetRollingUpgradesApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public VirtualMachineScaleSetRollingUpgradesApi() {
        this(Configuration.getDefaultApiClient());
    }

    public VirtualMachineScaleSetRollingUpgradesApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for virtualMachineScaleSetRollingUpgradesCancel
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetRollingUpgradesCancelCall(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/rollingUpgrades/cancel"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "vmScaleSetName" + "}", localVarApiClient.escapeString(vmScaleSetName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualMachineScaleSetRollingUpgradesCancelValidateBeforeCall(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetRollingUpgradesCancel(Async)");
        }

        // verify the required parameter 'vmScaleSetName' is set
        if (vmScaleSetName == null) {
            throw new ApiException("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetRollingUpgradesCancel(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetRollingUpgradesCancel(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetRollingUpgradesCancel(Async)");
        }

        return virtualMachineScaleSetRollingUpgradesCancelCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Cancels the current virtual machine scale set rolling upgrade.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return OperationStatusResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public OperationStatusResponse virtualMachineScaleSetRollingUpgradesCancel(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId) throws ApiException {
        ApiResponse<OperationStatusResponse> localVarResp = virtualMachineScaleSetRollingUpgradesCancelWithHttpInfo(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId);
        return localVarResp.getData();
    }

    /**
     * 
     * Cancels the current virtual machine scale set rolling upgrade.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ApiResponse&lt;OperationStatusResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<OperationStatusResponse> virtualMachineScaleSetRollingUpgradesCancelWithHttpInfo(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = virtualMachineScaleSetRollingUpgradesCancelValidateBeforeCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, null);
        Type localVarReturnType = new TypeToken<OperationStatusResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Cancels the current virtual machine scale set rolling upgrade.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetRollingUpgradesCancelAsync(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, final ApiCallback<OperationStatusResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualMachineScaleSetRollingUpgradesCancelValidateBeforeCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, _callback);
        Type localVarReturnType = new TypeToken<OperationStatusResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualMachineScaleSetRollingUpgradesGetLatest
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetRollingUpgradesGetLatestCall(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/rollingUpgrades/latest"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "vmScaleSetName" + "}", localVarApiClient.escapeString(vmScaleSetName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualMachineScaleSetRollingUpgradesGetLatestValidateBeforeCall(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetRollingUpgradesGetLatest(Async)");
        }

        // verify the required parameter 'vmScaleSetName' is set
        if (vmScaleSetName == null) {
            throw new ApiException("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetRollingUpgradesGetLatest(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetRollingUpgradesGetLatest(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetRollingUpgradesGetLatest(Async)");
        }

        return virtualMachineScaleSetRollingUpgradesGetLatestCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Gets the status of the latest virtual machine scale set rolling upgrade.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return RollingUpgradeStatusInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public RollingUpgradeStatusInfo virtualMachineScaleSetRollingUpgradesGetLatest(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId) throws ApiException {
        ApiResponse<RollingUpgradeStatusInfo> localVarResp = virtualMachineScaleSetRollingUpgradesGetLatestWithHttpInfo(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets the status of the latest virtual machine scale set rolling upgrade.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ApiResponse&lt;RollingUpgradeStatusInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<RollingUpgradeStatusInfo> virtualMachineScaleSetRollingUpgradesGetLatestWithHttpInfo(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = virtualMachineScaleSetRollingUpgradesGetLatestValidateBeforeCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, null);
        Type localVarReturnType = new TypeToken<RollingUpgradeStatusInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets the status of the latest virtual machine scale set rolling upgrade.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetRollingUpgradesGetLatestAsync(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, final ApiCallback<RollingUpgradeStatusInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualMachineScaleSetRollingUpgradesGetLatestValidateBeforeCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, _callback);
        Type localVarReturnType = new TypeToken<RollingUpgradeStatusInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualMachineScaleSetRollingUpgradesStartOSUpgrade
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetRollingUpgradesStartOSUpgradeCall(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/osRollingUpgrade"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "vmScaleSetName" + "}", localVarApiClient.escapeString(vmScaleSetName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualMachineScaleSetRollingUpgradesStartOSUpgradeValidateBeforeCall(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetRollingUpgradesStartOSUpgrade(Async)");
        }

        // verify the required parameter 'vmScaleSetName' is set
        if (vmScaleSetName == null) {
            throw new ApiException("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetRollingUpgradesStartOSUpgrade(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetRollingUpgradesStartOSUpgrade(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetRollingUpgradesStartOSUpgrade(Async)");
        }

        return virtualMachineScaleSetRollingUpgradesStartOSUpgradeCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Starts a rolling upgrade to move all virtual machine scale set instances to the latest available Platform Image OS version. Instances which are already running the latest available OS version are not affected.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return OperationStatusResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public OperationStatusResponse virtualMachineScaleSetRollingUpgradesStartOSUpgrade(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId) throws ApiException {
        ApiResponse<OperationStatusResponse> localVarResp = virtualMachineScaleSetRollingUpgradesStartOSUpgradeWithHttpInfo(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId);
        return localVarResp.getData();
    }

    /**
     * 
     * Starts a rolling upgrade to move all virtual machine scale set instances to the latest available Platform Image OS version. Instances which are already running the latest available OS version are not affected.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ApiResponse&lt;OperationStatusResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<OperationStatusResponse> virtualMachineScaleSetRollingUpgradesStartOSUpgradeWithHttpInfo(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = virtualMachineScaleSetRollingUpgradesStartOSUpgradeValidateBeforeCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, null);
        Type localVarReturnType = new TypeToken<OperationStatusResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Starts a rolling upgrade to move all virtual machine scale set instances to the latest available Platform Image OS version. Instances which are already running the latest available OS version are not affected.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetRollingUpgradesStartOSUpgradeAsync(String resourceGroupName, String vmScaleSetName, String apiVersion, String subscriptionId, final ApiCallback<OperationStatusResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualMachineScaleSetRollingUpgradesStartOSUpgradeValidateBeforeCall(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, _callback);
        Type localVarReturnType = new TypeToken<OperationStatusResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
