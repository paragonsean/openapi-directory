/*
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2017-03-30
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.OperationStatusResponse;
import org.openapitools.client.model.VirtualMachineScaleSetVM;
import org.openapitools.client.model.VirtualMachineScaleSetVMInstanceView;
import org.openapitools.client.model.VirtualMachineScaleSetVMListResult;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class VirtualMachineScaleSetVmsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public VirtualMachineScaleSetVmsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public VirtualMachineScaleSetVmsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for virtualMachineScaleSetVMsDeallocate
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param instanceId The instance ID of the virtual machine. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetVMsDeallocateCall(String resourceGroupName, String vmScaleSetName, String instanceId, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/deallocate"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "vmScaleSetName" + "}", localVarApiClient.escapeString(vmScaleSetName.toString()))
            .replace("{" + "instanceId" + "}", localVarApiClient.escapeString(instanceId.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualMachineScaleSetVMsDeallocateValidateBeforeCall(String resourceGroupName, String vmScaleSetName, String instanceId, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetVMsDeallocate(Async)");
        }

        // verify the required parameter 'vmScaleSetName' is set
        if (vmScaleSetName == null) {
            throw new ApiException("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetVMsDeallocate(Async)");
        }

        // verify the required parameter 'instanceId' is set
        if (instanceId == null) {
            throw new ApiException("Missing the required parameter 'instanceId' when calling virtualMachineScaleSetVMsDeallocate(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetVMsDeallocate(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetVMsDeallocate(Async)");
        }

        return virtualMachineScaleSetVMsDeallocateCall(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Deallocates a specific virtual machine in a VM scale set. Shuts down the virtual machine and releases the compute resources it uses. You are not billed for the compute resources of this virtual machine once it is deallocated.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param instanceId The instance ID of the virtual machine. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return OperationStatusResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public OperationStatusResponse virtualMachineScaleSetVMsDeallocate(String resourceGroupName, String vmScaleSetName, String instanceId, String apiVersion, String subscriptionId) throws ApiException {
        ApiResponse<OperationStatusResponse> localVarResp = virtualMachineScaleSetVMsDeallocateWithHttpInfo(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId);
        return localVarResp.getData();
    }

    /**
     * 
     * Deallocates a specific virtual machine in a VM scale set. Shuts down the virtual machine and releases the compute resources it uses. You are not billed for the compute resources of this virtual machine once it is deallocated.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param instanceId The instance ID of the virtual machine. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ApiResponse&lt;OperationStatusResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<OperationStatusResponse> virtualMachineScaleSetVMsDeallocateWithHttpInfo(String resourceGroupName, String vmScaleSetName, String instanceId, String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = virtualMachineScaleSetVMsDeallocateValidateBeforeCall(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId, null);
        Type localVarReturnType = new TypeToken<OperationStatusResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Deallocates a specific virtual machine in a VM scale set. Shuts down the virtual machine and releases the compute resources it uses. You are not billed for the compute resources of this virtual machine once it is deallocated.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param instanceId The instance ID of the virtual machine. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetVMsDeallocateAsync(String resourceGroupName, String vmScaleSetName, String instanceId, String apiVersion, String subscriptionId, final ApiCallback<OperationStatusResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualMachineScaleSetVMsDeallocateValidateBeforeCall(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId, _callback);
        Type localVarReturnType = new TypeToken<OperationStatusResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualMachineScaleSetVMsDelete
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param instanceId The instance ID of the virtual machine. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetVMsDeleteCall(String resourceGroupName, String vmScaleSetName, String instanceId, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "vmScaleSetName" + "}", localVarApiClient.escapeString(vmScaleSetName.toString()))
            .replace("{" + "instanceId" + "}", localVarApiClient.escapeString(instanceId.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualMachineScaleSetVMsDeleteValidateBeforeCall(String resourceGroupName, String vmScaleSetName, String instanceId, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetVMsDelete(Async)");
        }

        // verify the required parameter 'vmScaleSetName' is set
        if (vmScaleSetName == null) {
            throw new ApiException("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetVMsDelete(Async)");
        }

        // verify the required parameter 'instanceId' is set
        if (instanceId == null) {
            throw new ApiException("Missing the required parameter 'instanceId' when calling virtualMachineScaleSetVMsDelete(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetVMsDelete(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetVMsDelete(Async)");
        }

        return virtualMachineScaleSetVMsDeleteCall(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Deletes a virtual machine from a VM scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param instanceId The instance ID of the virtual machine. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return OperationStatusResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
     </table>
     */
    public OperationStatusResponse virtualMachineScaleSetVMsDelete(String resourceGroupName, String vmScaleSetName, String instanceId, String apiVersion, String subscriptionId) throws ApiException {
        ApiResponse<OperationStatusResponse> localVarResp = virtualMachineScaleSetVMsDeleteWithHttpInfo(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId);
        return localVarResp.getData();
    }

    /**
     * 
     * Deletes a virtual machine from a VM scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param instanceId The instance ID of the virtual machine. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ApiResponse&lt;OperationStatusResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<OperationStatusResponse> virtualMachineScaleSetVMsDeleteWithHttpInfo(String resourceGroupName, String vmScaleSetName, String instanceId, String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = virtualMachineScaleSetVMsDeleteValidateBeforeCall(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId, null);
        Type localVarReturnType = new TypeToken<OperationStatusResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Deletes a virtual machine from a VM scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param instanceId The instance ID of the virtual machine. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetVMsDeleteAsync(String resourceGroupName, String vmScaleSetName, String instanceId, String apiVersion, String subscriptionId, final ApiCallback<OperationStatusResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualMachineScaleSetVMsDeleteValidateBeforeCall(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId, _callback);
        Type localVarReturnType = new TypeToken<OperationStatusResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualMachineScaleSetVMsGet
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param instanceId The instance ID of the virtual machine. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetVMsGetCall(String resourceGroupName, String vmScaleSetName, String instanceId, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "vmScaleSetName" + "}", localVarApiClient.escapeString(vmScaleSetName.toString()))
            .replace("{" + "instanceId" + "}", localVarApiClient.escapeString(instanceId.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualMachineScaleSetVMsGetValidateBeforeCall(String resourceGroupName, String vmScaleSetName, String instanceId, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetVMsGet(Async)");
        }

        // verify the required parameter 'vmScaleSetName' is set
        if (vmScaleSetName == null) {
            throw new ApiException("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetVMsGet(Async)");
        }

        // verify the required parameter 'instanceId' is set
        if (instanceId == null) {
            throw new ApiException("Missing the required parameter 'instanceId' when calling virtualMachineScaleSetVMsGet(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetVMsGet(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetVMsGet(Async)");
        }

        return virtualMachineScaleSetVMsGetCall(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Gets a virtual machine from a VM scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param instanceId The instance ID of the virtual machine. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return VirtualMachineScaleSetVM
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public VirtualMachineScaleSetVM virtualMachineScaleSetVMsGet(String resourceGroupName, String vmScaleSetName, String instanceId, String apiVersion, String subscriptionId) throws ApiException {
        ApiResponse<VirtualMachineScaleSetVM> localVarResp = virtualMachineScaleSetVMsGetWithHttpInfo(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets a virtual machine from a VM scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param instanceId The instance ID of the virtual machine. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ApiResponse&lt;VirtualMachineScaleSetVM&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<VirtualMachineScaleSetVM> virtualMachineScaleSetVMsGetWithHttpInfo(String resourceGroupName, String vmScaleSetName, String instanceId, String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = virtualMachineScaleSetVMsGetValidateBeforeCall(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId, null);
        Type localVarReturnType = new TypeToken<VirtualMachineScaleSetVM>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets a virtual machine from a VM scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param instanceId The instance ID of the virtual machine. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetVMsGetAsync(String resourceGroupName, String vmScaleSetName, String instanceId, String apiVersion, String subscriptionId, final ApiCallback<VirtualMachineScaleSetVM> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualMachineScaleSetVMsGetValidateBeforeCall(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId, _callback);
        Type localVarReturnType = new TypeToken<VirtualMachineScaleSetVM>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualMachineScaleSetVMsGetInstanceView
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param instanceId The instance ID of the virtual machine. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetVMsGetInstanceViewCall(String resourceGroupName, String vmScaleSetName, String instanceId, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/instanceView"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "vmScaleSetName" + "}", localVarApiClient.escapeString(vmScaleSetName.toString()))
            .replace("{" + "instanceId" + "}", localVarApiClient.escapeString(instanceId.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualMachineScaleSetVMsGetInstanceViewValidateBeforeCall(String resourceGroupName, String vmScaleSetName, String instanceId, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetVMsGetInstanceView(Async)");
        }

        // verify the required parameter 'vmScaleSetName' is set
        if (vmScaleSetName == null) {
            throw new ApiException("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetVMsGetInstanceView(Async)");
        }

        // verify the required parameter 'instanceId' is set
        if (instanceId == null) {
            throw new ApiException("Missing the required parameter 'instanceId' when calling virtualMachineScaleSetVMsGetInstanceView(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetVMsGetInstanceView(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetVMsGetInstanceView(Async)");
        }

        return virtualMachineScaleSetVMsGetInstanceViewCall(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Gets the status of a virtual machine from a VM scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param instanceId The instance ID of the virtual machine. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return VirtualMachineScaleSetVMInstanceView
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public VirtualMachineScaleSetVMInstanceView virtualMachineScaleSetVMsGetInstanceView(String resourceGroupName, String vmScaleSetName, String instanceId, String apiVersion, String subscriptionId) throws ApiException {
        ApiResponse<VirtualMachineScaleSetVMInstanceView> localVarResp = virtualMachineScaleSetVMsGetInstanceViewWithHttpInfo(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets the status of a virtual machine from a VM scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param instanceId The instance ID of the virtual machine. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ApiResponse&lt;VirtualMachineScaleSetVMInstanceView&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<VirtualMachineScaleSetVMInstanceView> virtualMachineScaleSetVMsGetInstanceViewWithHttpInfo(String resourceGroupName, String vmScaleSetName, String instanceId, String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = virtualMachineScaleSetVMsGetInstanceViewValidateBeforeCall(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId, null);
        Type localVarReturnType = new TypeToken<VirtualMachineScaleSetVMInstanceView>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets the status of a virtual machine from a VM scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param instanceId The instance ID of the virtual machine. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetVMsGetInstanceViewAsync(String resourceGroupName, String vmScaleSetName, String instanceId, String apiVersion, String subscriptionId, final ApiCallback<VirtualMachineScaleSetVMInstanceView> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualMachineScaleSetVMsGetInstanceViewValidateBeforeCall(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId, _callback);
        Type localVarReturnType = new TypeToken<VirtualMachineScaleSetVMInstanceView>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualMachineScaleSetVMsList
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualMachineScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param $filter The filter to apply to the operation. (optional)
     * @param $select The list parameters. (optional)
     * @param $expand The expand expression to apply to the operation. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetVMsListCall(String resourceGroupName, String virtualMachineScaleSetName, String apiVersion, String subscriptionId, String $filter, String $select, String $expand, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/virtualMachines"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "virtualMachineScaleSetName" + "}", localVarApiClient.escapeString(virtualMachineScaleSetName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($filter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$filter", $filter));
        }

        if ($select != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$select", $select));
        }

        if ($expand != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$expand", $expand));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualMachineScaleSetVMsListValidateBeforeCall(String resourceGroupName, String virtualMachineScaleSetName, String apiVersion, String subscriptionId, String $filter, String $select, String $expand, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetVMsList(Async)");
        }

        // verify the required parameter 'virtualMachineScaleSetName' is set
        if (virtualMachineScaleSetName == null) {
            throw new ApiException("Missing the required parameter 'virtualMachineScaleSetName' when calling virtualMachineScaleSetVMsList(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetVMsList(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetVMsList(Async)");
        }

        return virtualMachineScaleSetVMsListCall(resourceGroupName, virtualMachineScaleSetName, apiVersion, subscriptionId, $filter, $select, $expand, _callback);

    }

    /**
     * 
     * Gets a list of all virtual machines in a VM scale sets.
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualMachineScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param $filter The filter to apply to the operation. (optional)
     * @param $select The list parameters. (optional)
     * @param $expand The expand expression to apply to the operation. (optional)
     * @return VirtualMachineScaleSetVMListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public VirtualMachineScaleSetVMListResult virtualMachineScaleSetVMsList(String resourceGroupName, String virtualMachineScaleSetName, String apiVersion, String subscriptionId, String $filter, String $select, String $expand) throws ApiException {
        ApiResponse<VirtualMachineScaleSetVMListResult> localVarResp = virtualMachineScaleSetVMsListWithHttpInfo(resourceGroupName, virtualMachineScaleSetName, apiVersion, subscriptionId, $filter, $select, $expand);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets a list of all virtual machines in a VM scale sets.
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualMachineScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param $filter The filter to apply to the operation. (optional)
     * @param $select The list parameters. (optional)
     * @param $expand The expand expression to apply to the operation. (optional)
     * @return ApiResponse&lt;VirtualMachineScaleSetVMListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<VirtualMachineScaleSetVMListResult> virtualMachineScaleSetVMsListWithHttpInfo(String resourceGroupName, String virtualMachineScaleSetName, String apiVersion, String subscriptionId, String $filter, String $select, String $expand) throws ApiException {
        okhttp3.Call localVarCall = virtualMachineScaleSetVMsListValidateBeforeCall(resourceGroupName, virtualMachineScaleSetName, apiVersion, subscriptionId, $filter, $select, $expand, null);
        Type localVarReturnType = new TypeToken<VirtualMachineScaleSetVMListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets a list of all virtual machines in a VM scale sets.
     * @param resourceGroupName The name of the resource group. (required)
     * @param virtualMachineScaleSetName The name of the VM scale set. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param $filter The filter to apply to the operation. (optional)
     * @param $select The list parameters. (optional)
     * @param $expand The expand expression to apply to the operation. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetVMsListAsync(String resourceGroupName, String virtualMachineScaleSetName, String apiVersion, String subscriptionId, String $filter, String $select, String $expand, final ApiCallback<VirtualMachineScaleSetVMListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualMachineScaleSetVMsListValidateBeforeCall(resourceGroupName, virtualMachineScaleSetName, apiVersion, subscriptionId, $filter, $select, $expand, _callback);
        Type localVarReturnType = new TypeToken<VirtualMachineScaleSetVMListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualMachineScaleSetVMsPowerOff
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param instanceId The instance ID of the virtual machine. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetVMsPowerOffCall(String resourceGroupName, String vmScaleSetName, String instanceId, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/poweroff"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "vmScaleSetName" + "}", localVarApiClient.escapeString(vmScaleSetName.toString()))
            .replace("{" + "instanceId" + "}", localVarApiClient.escapeString(instanceId.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualMachineScaleSetVMsPowerOffValidateBeforeCall(String resourceGroupName, String vmScaleSetName, String instanceId, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetVMsPowerOff(Async)");
        }

        // verify the required parameter 'vmScaleSetName' is set
        if (vmScaleSetName == null) {
            throw new ApiException("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetVMsPowerOff(Async)");
        }

        // verify the required parameter 'instanceId' is set
        if (instanceId == null) {
            throw new ApiException("Missing the required parameter 'instanceId' when calling virtualMachineScaleSetVMsPowerOff(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetVMsPowerOff(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetVMsPowerOff(Async)");
        }

        return virtualMachineScaleSetVMsPowerOffCall(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Power off (stop) a virtual machine in a VM scale set. Note that resources are still attached and you are getting charged for the resources. Instead, use deallocate to release resources and avoid charges.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param instanceId The instance ID of the virtual machine. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return OperationStatusResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public OperationStatusResponse virtualMachineScaleSetVMsPowerOff(String resourceGroupName, String vmScaleSetName, String instanceId, String apiVersion, String subscriptionId) throws ApiException {
        ApiResponse<OperationStatusResponse> localVarResp = virtualMachineScaleSetVMsPowerOffWithHttpInfo(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId);
        return localVarResp.getData();
    }

    /**
     * 
     * Power off (stop) a virtual machine in a VM scale set. Note that resources are still attached and you are getting charged for the resources. Instead, use deallocate to release resources and avoid charges.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param instanceId The instance ID of the virtual machine. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ApiResponse&lt;OperationStatusResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<OperationStatusResponse> virtualMachineScaleSetVMsPowerOffWithHttpInfo(String resourceGroupName, String vmScaleSetName, String instanceId, String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = virtualMachineScaleSetVMsPowerOffValidateBeforeCall(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId, null);
        Type localVarReturnType = new TypeToken<OperationStatusResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Power off (stop) a virtual machine in a VM scale set. Note that resources are still attached and you are getting charged for the resources. Instead, use deallocate to release resources and avoid charges.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param instanceId The instance ID of the virtual machine. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetVMsPowerOffAsync(String resourceGroupName, String vmScaleSetName, String instanceId, String apiVersion, String subscriptionId, final ApiCallback<OperationStatusResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualMachineScaleSetVMsPowerOffValidateBeforeCall(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId, _callback);
        Type localVarReturnType = new TypeToken<OperationStatusResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualMachineScaleSetVMsReimage
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param instanceId The instance ID of the virtual machine. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetVMsReimageCall(String resourceGroupName, String vmScaleSetName, String instanceId, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/reimage"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "vmScaleSetName" + "}", localVarApiClient.escapeString(vmScaleSetName.toString()))
            .replace("{" + "instanceId" + "}", localVarApiClient.escapeString(instanceId.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualMachineScaleSetVMsReimageValidateBeforeCall(String resourceGroupName, String vmScaleSetName, String instanceId, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetVMsReimage(Async)");
        }

        // verify the required parameter 'vmScaleSetName' is set
        if (vmScaleSetName == null) {
            throw new ApiException("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetVMsReimage(Async)");
        }

        // verify the required parameter 'instanceId' is set
        if (instanceId == null) {
            throw new ApiException("Missing the required parameter 'instanceId' when calling virtualMachineScaleSetVMsReimage(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetVMsReimage(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetVMsReimage(Async)");
        }

        return virtualMachineScaleSetVMsReimageCall(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Reimages (upgrade the operating system) a specific virtual machine in a VM scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param instanceId The instance ID of the virtual machine. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return OperationStatusResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public OperationStatusResponse virtualMachineScaleSetVMsReimage(String resourceGroupName, String vmScaleSetName, String instanceId, String apiVersion, String subscriptionId) throws ApiException {
        ApiResponse<OperationStatusResponse> localVarResp = virtualMachineScaleSetVMsReimageWithHttpInfo(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId);
        return localVarResp.getData();
    }

    /**
     * 
     * Reimages (upgrade the operating system) a specific virtual machine in a VM scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param instanceId The instance ID of the virtual machine. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ApiResponse&lt;OperationStatusResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<OperationStatusResponse> virtualMachineScaleSetVMsReimageWithHttpInfo(String resourceGroupName, String vmScaleSetName, String instanceId, String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = virtualMachineScaleSetVMsReimageValidateBeforeCall(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId, null);
        Type localVarReturnType = new TypeToken<OperationStatusResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Reimages (upgrade the operating system) a specific virtual machine in a VM scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param instanceId The instance ID of the virtual machine. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetVMsReimageAsync(String resourceGroupName, String vmScaleSetName, String instanceId, String apiVersion, String subscriptionId, final ApiCallback<OperationStatusResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualMachineScaleSetVMsReimageValidateBeforeCall(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId, _callback);
        Type localVarReturnType = new TypeToken<OperationStatusResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualMachineScaleSetVMsReimageAll
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param instanceId The instance ID of the virtual machine. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetVMsReimageAllCall(String resourceGroupName, String vmScaleSetName, String instanceId, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/reimageall"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "vmScaleSetName" + "}", localVarApiClient.escapeString(vmScaleSetName.toString()))
            .replace("{" + "instanceId" + "}", localVarApiClient.escapeString(instanceId.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualMachineScaleSetVMsReimageAllValidateBeforeCall(String resourceGroupName, String vmScaleSetName, String instanceId, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetVMsReimageAll(Async)");
        }

        // verify the required parameter 'vmScaleSetName' is set
        if (vmScaleSetName == null) {
            throw new ApiException("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetVMsReimageAll(Async)");
        }

        // verify the required parameter 'instanceId' is set
        if (instanceId == null) {
            throw new ApiException("Missing the required parameter 'instanceId' when calling virtualMachineScaleSetVMsReimageAll(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetVMsReimageAll(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetVMsReimageAll(Async)");
        }

        return virtualMachineScaleSetVMsReimageAllCall(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Allows you to re-image all the disks ( including data disks ) in the a VM scale set instance. This operation is only supported for managed disks.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param instanceId The instance ID of the virtual machine. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return OperationStatusResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public OperationStatusResponse virtualMachineScaleSetVMsReimageAll(String resourceGroupName, String vmScaleSetName, String instanceId, String apiVersion, String subscriptionId) throws ApiException {
        ApiResponse<OperationStatusResponse> localVarResp = virtualMachineScaleSetVMsReimageAllWithHttpInfo(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId);
        return localVarResp.getData();
    }

    /**
     * 
     * Allows you to re-image all the disks ( including data disks ) in the a VM scale set instance. This operation is only supported for managed disks.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param instanceId The instance ID of the virtual machine. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ApiResponse&lt;OperationStatusResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<OperationStatusResponse> virtualMachineScaleSetVMsReimageAllWithHttpInfo(String resourceGroupName, String vmScaleSetName, String instanceId, String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = virtualMachineScaleSetVMsReimageAllValidateBeforeCall(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId, null);
        Type localVarReturnType = new TypeToken<OperationStatusResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Allows you to re-image all the disks ( including data disks ) in the a VM scale set instance. This operation is only supported for managed disks.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param instanceId The instance ID of the virtual machine. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetVMsReimageAllAsync(String resourceGroupName, String vmScaleSetName, String instanceId, String apiVersion, String subscriptionId, final ApiCallback<OperationStatusResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualMachineScaleSetVMsReimageAllValidateBeforeCall(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId, _callback);
        Type localVarReturnType = new TypeToken<OperationStatusResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualMachineScaleSetVMsRestart
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param instanceId The instance ID of the virtual machine. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetVMsRestartCall(String resourceGroupName, String vmScaleSetName, String instanceId, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/restart"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "vmScaleSetName" + "}", localVarApiClient.escapeString(vmScaleSetName.toString()))
            .replace("{" + "instanceId" + "}", localVarApiClient.escapeString(instanceId.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualMachineScaleSetVMsRestartValidateBeforeCall(String resourceGroupName, String vmScaleSetName, String instanceId, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetVMsRestart(Async)");
        }

        // verify the required parameter 'vmScaleSetName' is set
        if (vmScaleSetName == null) {
            throw new ApiException("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetVMsRestart(Async)");
        }

        // verify the required parameter 'instanceId' is set
        if (instanceId == null) {
            throw new ApiException("Missing the required parameter 'instanceId' when calling virtualMachineScaleSetVMsRestart(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetVMsRestart(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetVMsRestart(Async)");
        }

        return virtualMachineScaleSetVMsRestartCall(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Restarts a virtual machine in a VM scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param instanceId The instance ID of the virtual machine. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return OperationStatusResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public OperationStatusResponse virtualMachineScaleSetVMsRestart(String resourceGroupName, String vmScaleSetName, String instanceId, String apiVersion, String subscriptionId) throws ApiException {
        ApiResponse<OperationStatusResponse> localVarResp = virtualMachineScaleSetVMsRestartWithHttpInfo(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId);
        return localVarResp.getData();
    }

    /**
     * 
     * Restarts a virtual machine in a VM scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param instanceId The instance ID of the virtual machine. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ApiResponse&lt;OperationStatusResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<OperationStatusResponse> virtualMachineScaleSetVMsRestartWithHttpInfo(String resourceGroupName, String vmScaleSetName, String instanceId, String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = virtualMachineScaleSetVMsRestartValidateBeforeCall(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId, null);
        Type localVarReturnType = new TypeToken<OperationStatusResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Restarts a virtual machine in a VM scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param instanceId The instance ID of the virtual machine. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetVMsRestartAsync(String resourceGroupName, String vmScaleSetName, String instanceId, String apiVersion, String subscriptionId, final ApiCallback<OperationStatusResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualMachineScaleSetVMsRestartValidateBeforeCall(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId, _callback);
        Type localVarReturnType = new TypeToken<OperationStatusResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualMachineScaleSetVMsStart
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param instanceId The instance ID of the virtual machine. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetVMsStartCall(String resourceGroupName, String vmScaleSetName, String instanceId, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/start"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "vmScaleSetName" + "}", localVarApiClient.escapeString(vmScaleSetName.toString()))
            .replace("{" + "instanceId" + "}", localVarApiClient.escapeString(instanceId.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualMachineScaleSetVMsStartValidateBeforeCall(String resourceGroupName, String vmScaleSetName, String instanceId, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetVMsStart(Async)");
        }

        // verify the required parameter 'vmScaleSetName' is set
        if (vmScaleSetName == null) {
            throw new ApiException("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetVMsStart(Async)");
        }

        // verify the required parameter 'instanceId' is set
        if (instanceId == null) {
            throw new ApiException("Missing the required parameter 'instanceId' when calling virtualMachineScaleSetVMsStart(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetVMsStart(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetVMsStart(Async)");
        }

        return virtualMachineScaleSetVMsStartCall(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Starts a virtual machine in a VM scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param instanceId The instance ID of the virtual machine. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return OperationStatusResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public OperationStatusResponse virtualMachineScaleSetVMsStart(String resourceGroupName, String vmScaleSetName, String instanceId, String apiVersion, String subscriptionId) throws ApiException {
        ApiResponse<OperationStatusResponse> localVarResp = virtualMachineScaleSetVMsStartWithHttpInfo(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId);
        return localVarResp.getData();
    }

    /**
     * 
     * Starts a virtual machine in a VM scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param instanceId The instance ID of the virtual machine. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ApiResponse&lt;OperationStatusResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<OperationStatusResponse> virtualMachineScaleSetVMsStartWithHttpInfo(String resourceGroupName, String vmScaleSetName, String instanceId, String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = virtualMachineScaleSetVMsStartValidateBeforeCall(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId, null);
        Type localVarReturnType = new TypeToken<OperationStatusResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Starts a virtual machine in a VM scale set.
     * @param resourceGroupName The name of the resource group. (required)
     * @param vmScaleSetName The name of the VM scale set. (required)
     * @param instanceId The instance ID of the virtual machine. (required)
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualMachineScaleSetVMsStartAsync(String resourceGroupName, String vmScaleSetName, String instanceId, String apiVersion, String subscriptionId, final ApiCallback<OperationStatusResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualMachineScaleSetVMsStartValidateBeforeCall(resourceGroupName, vmScaleSetName, instanceId, apiVersion, subscriptionId, _callback);
        Type localVarReturnType = new TypeToken<OperationStatusResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
