# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.boot_diagnostics_instance_view import BootDiagnosticsInstanceView
from openapi_server.models.disk_instance_view import DiskInstanceView
from openapi_server.models.instance_view_status import InstanceViewStatus
from openapi_server.models.virtual_machine_agent_instance_view import VirtualMachineAgentInstanceView
from openapi_server.models.virtual_machine_extension_instance_view import VirtualMachineExtensionInstanceView
from openapi_server.models.virtual_machine_health_status import VirtualMachineHealthStatus
from openapi_server import util


class VirtualMachineScaleSetVMInstanceView(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, boot_diagnostics: BootDiagnosticsInstanceView=None, disks: List[DiskInstanceView]=None, extensions: List[VirtualMachineExtensionInstanceView]=None, placement_group_id: str=None, platform_fault_domain: int=None, platform_update_domain: int=None, rdp_thumb_print: str=None, statuses: List[InstanceViewStatus]=None, vm_agent: VirtualMachineAgentInstanceView=None, vm_health: VirtualMachineHealthStatus=None):
        """VirtualMachineScaleSetVMInstanceView - a model defined in OpenAPI

        :param boot_diagnostics: The boot_diagnostics of this VirtualMachineScaleSetVMInstanceView.
        :param disks: The disks of this VirtualMachineScaleSetVMInstanceView.
        :param extensions: The extensions of this VirtualMachineScaleSetVMInstanceView.
        :param placement_group_id: The placement_group_id of this VirtualMachineScaleSetVMInstanceView.
        :param platform_fault_domain: The platform_fault_domain of this VirtualMachineScaleSetVMInstanceView.
        :param platform_update_domain: The platform_update_domain of this VirtualMachineScaleSetVMInstanceView.
        :param rdp_thumb_print: The rdp_thumb_print of this VirtualMachineScaleSetVMInstanceView.
        :param statuses: The statuses of this VirtualMachineScaleSetVMInstanceView.
        :param vm_agent: The vm_agent of this VirtualMachineScaleSetVMInstanceView.
        :param vm_health: The vm_health of this VirtualMachineScaleSetVMInstanceView.
        """
        self.openapi_types = {
            'boot_diagnostics': BootDiagnosticsInstanceView,
            'disks': List[DiskInstanceView],
            'extensions': List[VirtualMachineExtensionInstanceView],
            'placement_group_id': str,
            'platform_fault_domain': int,
            'platform_update_domain': int,
            'rdp_thumb_print': str,
            'statuses': List[InstanceViewStatus],
            'vm_agent': VirtualMachineAgentInstanceView,
            'vm_health': VirtualMachineHealthStatus
        }

        self.attribute_map = {
            'boot_diagnostics': 'bootDiagnostics',
            'disks': 'disks',
            'extensions': 'extensions',
            'placement_group_id': 'placementGroupId',
            'platform_fault_domain': 'platformFaultDomain',
            'platform_update_domain': 'platformUpdateDomain',
            'rdp_thumb_print': 'rdpThumbPrint',
            'statuses': 'statuses',
            'vm_agent': 'vmAgent',
            'vm_health': 'vmHealth'
        }

        self._boot_diagnostics = boot_diagnostics
        self._disks = disks
        self._extensions = extensions
        self._placement_group_id = placement_group_id
        self._platform_fault_domain = platform_fault_domain
        self._platform_update_domain = platform_update_domain
        self._rdp_thumb_print = rdp_thumb_print
        self._statuses = statuses
        self._vm_agent = vm_agent
        self._vm_health = vm_health

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VirtualMachineScaleSetVMInstanceView':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VirtualMachineScaleSetVMInstanceView of this VirtualMachineScaleSetVMInstanceView.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def boot_diagnostics(self):
        """Gets the boot_diagnostics of this VirtualMachineScaleSetVMInstanceView.


        :return: The boot_diagnostics of this VirtualMachineScaleSetVMInstanceView.
        :rtype: BootDiagnosticsInstanceView
        """
        return self._boot_diagnostics

    @boot_diagnostics.setter
    def boot_diagnostics(self, boot_diagnostics):
        """Sets the boot_diagnostics of this VirtualMachineScaleSetVMInstanceView.


        :param boot_diagnostics: The boot_diagnostics of this VirtualMachineScaleSetVMInstanceView.
        :type boot_diagnostics: BootDiagnosticsInstanceView
        """

        self._boot_diagnostics = boot_diagnostics

    @property
    def disks(self):
        """Gets the disks of this VirtualMachineScaleSetVMInstanceView.

        The disks information.

        :return: The disks of this VirtualMachineScaleSetVMInstanceView.
        :rtype: List[DiskInstanceView]
        """
        return self._disks

    @disks.setter
    def disks(self, disks):
        """Sets the disks of this VirtualMachineScaleSetVMInstanceView.

        The disks information.

        :param disks: The disks of this VirtualMachineScaleSetVMInstanceView.
        :type disks: List[DiskInstanceView]
        """

        self._disks = disks

    @property
    def extensions(self):
        """Gets the extensions of this VirtualMachineScaleSetVMInstanceView.

        The extensions information.

        :return: The extensions of this VirtualMachineScaleSetVMInstanceView.
        :rtype: List[VirtualMachineExtensionInstanceView]
        """
        return self._extensions

    @extensions.setter
    def extensions(self, extensions):
        """Sets the extensions of this VirtualMachineScaleSetVMInstanceView.

        The extensions information.

        :param extensions: The extensions of this VirtualMachineScaleSetVMInstanceView.
        :type extensions: List[VirtualMachineExtensionInstanceView]
        """

        self._extensions = extensions

    @property
    def placement_group_id(self):
        """Gets the placement_group_id of this VirtualMachineScaleSetVMInstanceView.

        The placement group in which the VM is running. If the VM is deallocated it will not have a placementGroupId.

        :return: The placement_group_id of this VirtualMachineScaleSetVMInstanceView.
        :rtype: str
        """
        return self._placement_group_id

    @placement_group_id.setter
    def placement_group_id(self, placement_group_id):
        """Sets the placement_group_id of this VirtualMachineScaleSetVMInstanceView.

        The placement group in which the VM is running. If the VM is deallocated it will not have a placementGroupId.

        :param placement_group_id: The placement_group_id of this VirtualMachineScaleSetVMInstanceView.
        :type placement_group_id: str
        """

        self._placement_group_id = placement_group_id

    @property
    def platform_fault_domain(self):
        """Gets the platform_fault_domain of this VirtualMachineScaleSetVMInstanceView.

        The Fault Domain count.

        :return: The platform_fault_domain of this VirtualMachineScaleSetVMInstanceView.
        :rtype: int
        """
        return self._platform_fault_domain

    @platform_fault_domain.setter
    def platform_fault_domain(self, platform_fault_domain):
        """Sets the platform_fault_domain of this VirtualMachineScaleSetVMInstanceView.

        The Fault Domain count.

        :param platform_fault_domain: The platform_fault_domain of this VirtualMachineScaleSetVMInstanceView.
        :type platform_fault_domain: int
        """

        self._platform_fault_domain = platform_fault_domain

    @property
    def platform_update_domain(self):
        """Gets the platform_update_domain of this VirtualMachineScaleSetVMInstanceView.

        The Update Domain count.

        :return: The platform_update_domain of this VirtualMachineScaleSetVMInstanceView.
        :rtype: int
        """
        return self._platform_update_domain

    @platform_update_domain.setter
    def platform_update_domain(self, platform_update_domain):
        """Sets the platform_update_domain of this VirtualMachineScaleSetVMInstanceView.

        The Update Domain count.

        :param platform_update_domain: The platform_update_domain of this VirtualMachineScaleSetVMInstanceView.
        :type platform_update_domain: int
        """

        self._platform_update_domain = platform_update_domain

    @property
    def rdp_thumb_print(self):
        """Gets the rdp_thumb_print of this VirtualMachineScaleSetVMInstanceView.

        The Remote desktop certificate thumbprint.

        :return: The rdp_thumb_print of this VirtualMachineScaleSetVMInstanceView.
        :rtype: str
        """
        return self._rdp_thumb_print

    @rdp_thumb_print.setter
    def rdp_thumb_print(self, rdp_thumb_print):
        """Sets the rdp_thumb_print of this VirtualMachineScaleSetVMInstanceView.

        The Remote desktop certificate thumbprint.

        :param rdp_thumb_print: The rdp_thumb_print of this VirtualMachineScaleSetVMInstanceView.
        :type rdp_thumb_print: str
        """

        self._rdp_thumb_print = rdp_thumb_print

    @property
    def statuses(self):
        """Gets the statuses of this VirtualMachineScaleSetVMInstanceView.

        The resource status information.

        :return: The statuses of this VirtualMachineScaleSetVMInstanceView.
        :rtype: List[InstanceViewStatus]
        """
        return self._statuses

    @statuses.setter
    def statuses(self, statuses):
        """Sets the statuses of this VirtualMachineScaleSetVMInstanceView.

        The resource status information.

        :param statuses: The statuses of this VirtualMachineScaleSetVMInstanceView.
        :type statuses: List[InstanceViewStatus]
        """

        self._statuses = statuses

    @property
    def vm_agent(self):
        """Gets the vm_agent of this VirtualMachineScaleSetVMInstanceView.


        :return: The vm_agent of this VirtualMachineScaleSetVMInstanceView.
        :rtype: VirtualMachineAgentInstanceView
        """
        return self._vm_agent

    @vm_agent.setter
    def vm_agent(self, vm_agent):
        """Sets the vm_agent of this VirtualMachineScaleSetVMInstanceView.


        :param vm_agent: The vm_agent of this VirtualMachineScaleSetVMInstanceView.
        :type vm_agent: VirtualMachineAgentInstanceView
        """

        self._vm_agent = vm_agent

    @property
    def vm_health(self):
        """Gets the vm_health of this VirtualMachineScaleSetVMInstanceView.


        :return: The vm_health of this VirtualMachineScaleSetVMInstanceView.
        :rtype: VirtualMachineHealthStatus
        """
        return self._vm_health

    @vm_health.setter
    def vm_health(self, vm_health):
        """Sets the vm_health of this VirtualMachineScaleSetVMInstanceView.


        :param vm_health: The vm_health of this VirtualMachineScaleSetVMInstanceView.
        :type vm_health: VirtualMachineHealthStatus
        """

        self._vm_health = vm_health
