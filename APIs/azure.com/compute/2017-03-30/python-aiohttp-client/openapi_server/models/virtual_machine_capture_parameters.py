# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VirtualMachineCaptureParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, destination_container_name: str=None, overwrite_vhds: bool=None, vhd_prefix: str=None):
        """VirtualMachineCaptureParameters - a model defined in OpenAPI

        :param destination_container_name: The destination_container_name of this VirtualMachineCaptureParameters.
        :param overwrite_vhds: The overwrite_vhds of this VirtualMachineCaptureParameters.
        :param vhd_prefix: The vhd_prefix of this VirtualMachineCaptureParameters.
        """
        self.openapi_types = {
            'destination_container_name': str,
            'overwrite_vhds': bool,
            'vhd_prefix': str
        }

        self.attribute_map = {
            'destination_container_name': 'destinationContainerName',
            'overwrite_vhds': 'overwriteVhds',
            'vhd_prefix': 'vhdPrefix'
        }

        self._destination_container_name = destination_container_name
        self._overwrite_vhds = overwrite_vhds
        self._vhd_prefix = vhd_prefix

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VirtualMachineCaptureParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VirtualMachineCaptureParameters of this VirtualMachineCaptureParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def destination_container_name(self):
        """Gets the destination_container_name of this VirtualMachineCaptureParameters.

        The destination container name.

        :return: The destination_container_name of this VirtualMachineCaptureParameters.
        :rtype: str
        """
        return self._destination_container_name

    @destination_container_name.setter
    def destination_container_name(self, destination_container_name):
        """Sets the destination_container_name of this VirtualMachineCaptureParameters.

        The destination container name.

        :param destination_container_name: The destination_container_name of this VirtualMachineCaptureParameters.
        :type destination_container_name: str
        """
        if destination_container_name is None:
            raise ValueError("Invalid value for `destination_container_name`, must not be `None`")

        self._destination_container_name = destination_container_name

    @property
    def overwrite_vhds(self):
        """Gets the overwrite_vhds of this VirtualMachineCaptureParameters.

        Specifies whether to overwrite the destination virtual hard disk, in case of conflict.

        :return: The overwrite_vhds of this VirtualMachineCaptureParameters.
        :rtype: bool
        """
        return self._overwrite_vhds

    @overwrite_vhds.setter
    def overwrite_vhds(self, overwrite_vhds):
        """Sets the overwrite_vhds of this VirtualMachineCaptureParameters.

        Specifies whether to overwrite the destination virtual hard disk, in case of conflict.

        :param overwrite_vhds: The overwrite_vhds of this VirtualMachineCaptureParameters.
        :type overwrite_vhds: bool
        """
        if overwrite_vhds is None:
            raise ValueError("Invalid value for `overwrite_vhds`, must not be `None`")

        self._overwrite_vhds = overwrite_vhds

    @property
    def vhd_prefix(self):
        """Gets the vhd_prefix of this VirtualMachineCaptureParameters.

        The captured virtual hard disk's name prefix.

        :return: The vhd_prefix of this VirtualMachineCaptureParameters.
        :rtype: str
        """
        return self._vhd_prefix

    @vhd_prefix.setter
    def vhd_prefix(self, vhd_prefix):
        """Sets the vhd_prefix of this VirtualMachineCaptureParameters.

        The captured virtual hard disk's name prefix.

        :param vhd_prefix: The vhd_prefix of this VirtualMachineCaptureParameters.
        :type vhd_prefix: str
        """
        if vhd_prefix is None:
            raise ValueError("Invalid value for `vhd_prefix`, must not be `None`")

        self._vhd_prefix = vhd_prefix
