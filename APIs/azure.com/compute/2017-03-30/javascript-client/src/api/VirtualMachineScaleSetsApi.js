/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2017-03-30
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import OperationStatusResponse from '../model/OperationStatusResponse';
import VirtualMachineScaleSet from '../model/VirtualMachineScaleSet';
import VirtualMachineScaleSetInstanceView from '../model/VirtualMachineScaleSetInstanceView';
import VirtualMachineScaleSetListResult from '../model/VirtualMachineScaleSetListResult';
import VirtualMachineScaleSetListSkusResult from '../model/VirtualMachineScaleSetListSkusResult';
import VirtualMachineScaleSetListWithLinkResult from '../model/VirtualMachineScaleSetListWithLinkResult';
import VirtualMachineScaleSetUpdate from '../model/VirtualMachineScaleSetUpdate';
import VirtualMachineScaleSetVMInstanceIDs from '../model/VirtualMachineScaleSetVMInstanceIDs';
import VirtualMachineScaleSetVMInstanceRequiredIDs from '../model/VirtualMachineScaleSetVMInstanceRequiredIDs';

/**
* VirtualMachineScaleSets service.
* @module api/VirtualMachineScaleSetsApi
* @version 2017-03-30
*/
export default class VirtualMachineScaleSetsApi {

    /**
    * Constructs a new VirtualMachineScaleSetsApi. 
    * @alias module:api/VirtualMachineScaleSetsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the virtualMachineScaleSetsCreateOrUpdate operation.
     * @callback module:api/VirtualMachineScaleSetsApi~virtualMachineScaleSetsCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VirtualMachineScaleSet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create or update a VM scale set.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} vmScaleSetName The name of the VM scale set to create or update.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/VirtualMachineScaleSet} parameters The scale set object.
     * @param {module:api/VirtualMachineScaleSetsApi~virtualMachineScaleSetsCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VirtualMachineScaleSet}
     */
    virtualMachineScaleSetsCreateOrUpdate(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetsCreateOrUpdate");
      }
      // verify the required parameter 'vmScaleSetName' is set
      if (vmScaleSetName === undefined || vmScaleSetName === null) {
        throw new Error("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetsCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetsCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetsCreateOrUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling virtualMachineScaleSetsCreateOrUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'vmScaleSetName': vmScaleSetName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = VirtualMachineScaleSet;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachineScaleSetsDeallocate operation.
     * @callback module:api/VirtualMachineScaleSetsApi~virtualMachineScaleSetsDeallocateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OperationStatusResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deallocates specific virtual machines in a VM scale set. Shuts down the virtual machines and releases the compute resources. You are not billed for the compute resources that this virtual machine scale set deallocates.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} vmScaleSetName The name of the VM scale set.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {Object} opts Optional parameters
     * @param {module:model/VirtualMachineScaleSetVMInstanceIDs} [vmInstanceIDs] A list of virtual machine instance IDs from the VM scale set.
     * @param {module:api/VirtualMachineScaleSetsApi~virtualMachineScaleSetsDeallocateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OperationStatusResponse}
     */
    virtualMachineScaleSetsDeallocate(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, opts, callback) {
      opts = opts || {};
      let postBody = opts['vmInstanceIDs'];
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetsDeallocate");
      }
      // verify the required parameter 'vmScaleSetName' is set
      if (vmScaleSetName === undefined || vmScaleSetName === null) {
        throw new Error("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetsDeallocate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetsDeallocate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetsDeallocate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'vmScaleSetName': vmScaleSetName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = OperationStatusResponse;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/deallocate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachineScaleSetsDelete operation.
     * @callback module:api/VirtualMachineScaleSetsApi~virtualMachineScaleSetsDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OperationStatusResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a VM scale set.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} vmScaleSetName The name of the VM scale set.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualMachineScaleSetsApi~virtualMachineScaleSetsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OperationStatusResponse}
     */
    virtualMachineScaleSetsDelete(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetsDelete");
      }
      // verify the required parameter 'vmScaleSetName' is set
      if (vmScaleSetName === undefined || vmScaleSetName === null) {
        throw new Error("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetsDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetsDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetsDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'vmScaleSetName': vmScaleSetName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = OperationStatusResponse;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachineScaleSetsDeleteInstances operation.
     * @callback module:api/VirtualMachineScaleSetsApi~virtualMachineScaleSetsDeleteInstancesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OperationStatusResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes virtual machines in a VM scale set.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} vmScaleSetName The name of the VM scale set.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/VirtualMachineScaleSetVMInstanceRequiredIDs} vmInstanceIDs A list of virtual machine instance IDs from the VM scale set.
     * @param {module:api/VirtualMachineScaleSetsApi~virtualMachineScaleSetsDeleteInstancesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OperationStatusResponse}
     */
    virtualMachineScaleSetsDeleteInstances(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmInstanceIDs, callback) {
      let postBody = vmInstanceIDs;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetsDeleteInstances");
      }
      // verify the required parameter 'vmScaleSetName' is set
      if (vmScaleSetName === undefined || vmScaleSetName === null) {
        throw new Error("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetsDeleteInstances");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetsDeleteInstances");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetsDeleteInstances");
      }
      // verify the required parameter 'vmInstanceIDs' is set
      if (vmInstanceIDs === undefined || vmInstanceIDs === null) {
        throw new Error("Missing the required parameter 'vmInstanceIDs' when calling virtualMachineScaleSetsDeleteInstances");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'vmScaleSetName': vmScaleSetName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = OperationStatusResponse;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/delete', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachineScaleSetsGet operation.
     * @callback module:api/VirtualMachineScaleSetsApi~virtualMachineScaleSetsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VirtualMachineScaleSet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Display information about a virtual machine scale set.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} vmScaleSetName The name of the VM scale set.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualMachineScaleSetsApi~virtualMachineScaleSetsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VirtualMachineScaleSet}
     */
    virtualMachineScaleSetsGet(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetsGet");
      }
      // verify the required parameter 'vmScaleSetName' is set
      if (vmScaleSetName === undefined || vmScaleSetName === null) {
        throw new Error("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetsGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetsGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'vmScaleSetName': vmScaleSetName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VirtualMachineScaleSet;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachineScaleSetsGetInstanceView operation.
     * @callback module:api/VirtualMachineScaleSetsApi~virtualMachineScaleSetsGetInstanceViewCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VirtualMachineScaleSetInstanceView} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the status of a VM scale set instance.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} vmScaleSetName The name of the VM scale set.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualMachineScaleSetsApi~virtualMachineScaleSetsGetInstanceViewCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VirtualMachineScaleSetInstanceView}
     */
    virtualMachineScaleSetsGetInstanceView(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetsGetInstanceView");
      }
      // verify the required parameter 'vmScaleSetName' is set
      if (vmScaleSetName === undefined || vmScaleSetName === null) {
        throw new Error("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetsGetInstanceView");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetsGetInstanceView");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetsGetInstanceView");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'vmScaleSetName': vmScaleSetName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VirtualMachineScaleSetInstanceView;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/instanceView', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachineScaleSetsList operation.
     * @callback module:api/VirtualMachineScaleSetsApi~virtualMachineScaleSetsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VirtualMachineScaleSetListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a list of all VM scale sets under a resource group.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualMachineScaleSetsApi~virtualMachineScaleSetsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VirtualMachineScaleSetListResult}
     */
    virtualMachineScaleSetsList(resourceGroupName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetsList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetsList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetsList");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VirtualMachineScaleSetListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachineScaleSetsListAll operation.
     * @callback module:api/VirtualMachineScaleSetsApi~virtualMachineScaleSetsListAllCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VirtualMachineScaleSetListWithLinkResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a list of all VM Scale Sets in the subscription, regardless of the associated resource group. Use nextLink property in the response to get the next page of VM Scale Sets. Do this till nextLink is null to fetch all the VM Scale Sets.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualMachineScaleSetsApi~virtualMachineScaleSetsListAllCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VirtualMachineScaleSetListWithLinkResult}
     */
    virtualMachineScaleSetsListAll(apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetsListAll");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetsListAll");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VirtualMachineScaleSetListWithLinkResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Compute/virtualMachineScaleSets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachineScaleSetsListSkus operation.
     * @callback module:api/VirtualMachineScaleSetsApi~virtualMachineScaleSetsListSkusCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VirtualMachineScaleSetListSkusResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a list of SKUs available for your VM scale set, including the minimum and maximum VM instances allowed for each SKU.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} vmScaleSetName The name of the VM scale set.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualMachineScaleSetsApi~virtualMachineScaleSetsListSkusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VirtualMachineScaleSetListSkusResult}
     */
    virtualMachineScaleSetsListSkus(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetsListSkus");
      }
      // verify the required parameter 'vmScaleSetName' is set
      if (vmScaleSetName === undefined || vmScaleSetName === null) {
        throw new Error("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetsListSkus");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetsListSkus");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetsListSkus");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'vmScaleSetName': vmScaleSetName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VirtualMachineScaleSetListSkusResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/skus', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachineScaleSetsPowerOff operation.
     * @callback module:api/VirtualMachineScaleSetsApi~virtualMachineScaleSetsPowerOffCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OperationStatusResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Power off (stop) one or more virtual machines in a VM scale set. Note that resources are still attached and you are getting charged for the resources. Instead, use deallocate to release resources and avoid charges.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} vmScaleSetName The name of the VM scale set.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {Object} opts Optional parameters
     * @param {module:model/VirtualMachineScaleSetVMInstanceIDs} [vmInstanceIDs] A list of virtual machine instance IDs from the VM scale set.
     * @param {module:api/VirtualMachineScaleSetsApi~virtualMachineScaleSetsPowerOffCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OperationStatusResponse}
     */
    virtualMachineScaleSetsPowerOff(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, opts, callback) {
      opts = opts || {};
      let postBody = opts['vmInstanceIDs'];
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetsPowerOff");
      }
      // verify the required parameter 'vmScaleSetName' is set
      if (vmScaleSetName === undefined || vmScaleSetName === null) {
        throw new Error("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetsPowerOff");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetsPowerOff");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetsPowerOff");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'vmScaleSetName': vmScaleSetName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = OperationStatusResponse;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/poweroff', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachineScaleSetsReimage operation.
     * @callback module:api/VirtualMachineScaleSetsApi~virtualMachineScaleSetsReimageCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OperationStatusResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Reimages (upgrade the operating system) one or more virtual machines in a VM scale set.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} vmScaleSetName The name of the VM scale set.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {Object} opts Optional parameters
     * @param {module:model/VirtualMachineScaleSetVMInstanceIDs} [vmInstanceIDs] A list of virtual machine instance IDs from the VM scale set.
     * @param {module:api/VirtualMachineScaleSetsApi~virtualMachineScaleSetsReimageCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OperationStatusResponse}
     */
    virtualMachineScaleSetsReimage(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, opts, callback) {
      opts = opts || {};
      let postBody = opts['vmInstanceIDs'];
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetsReimage");
      }
      // verify the required parameter 'vmScaleSetName' is set
      if (vmScaleSetName === undefined || vmScaleSetName === null) {
        throw new Error("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetsReimage");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetsReimage");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetsReimage");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'vmScaleSetName': vmScaleSetName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = OperationStatusResponse;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/reimage', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachineScaleSetsReimageAll operation.
     * @callback module:api/VirtualMachineScaleSetsApi~virtualMachineScaleSetsReimageAllCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OperationStatusResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Reimages all the disks ( including data disks ) in the virtual machines in a VM scale set. This operation is only supported for managed disks.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} vmScaleSetName The name of the VM scale set.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {Object} opts Optional parameters
     * @param {module:model/VirtualMachineScaleSetVMInstanceIDs} [vmInstanceIDs] A list of virtual machine instance IDs from the VM scale set.
     * @param {module:api/VirtualMachineScaleSetsApi~virtualMachineScaleSetsReimageAllCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OperationStatusResponse}
     */
    virtualMachineScaleSetsReimageAll(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, opts, callback) {
      opts = opts || {};
      let postBody = opts['vmInstanceIDs'];
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetsReimageAll");
      }
      // verify the required parameter 'vmScaleSetName' is set
      if (vmScaleSetName === undefined || vmScaleSetName === null) {
        throw new Error("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetsReimageAll");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetsReimageAll");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetsReimageAll");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'vmScaleSetName': vmScaleSetName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = OperationStatusResponse;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/reimageall', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachineScaleSetsRestart operation.
     * @callback module:api/VirtualMachineScaleSetsApi~virtualMachineScaleSetsRestartCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OperationStatusResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Restarts one or more virtual machines in a VM scale set.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} vmScaleSetName The name of the VM scale set.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {Object} opts Optional parameters
     * @param {module:model/VirtualMachineScaleSetVMInstanceIDs} [vmInstanceIDs] A list of virtual machine instance IDs from the VM scale set.
     * @param {module:api/VirtualMachineScaleSetsApi~virtualMachineScaleSetsRestartCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OperationStatusResponse}
     */
    virtualMachineScaleSetsRestart(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, opts, callback) {
      opts = opts || {};
      let postBody = opts['vmInstanceIDs'];
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetsRestart");
      }
      // verify the required parameter 'vmScaleSetName' is set
      if (vmScaleSetName === undefined || vmScaleSetName === null) {
        throw new Error("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetsRestart");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetsRestart");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetsRestart");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'vmScaleSetName': vmScaleSetName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = OperationStatusResponse;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/restart', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachineScaleSetsStart operation.
     * @callback module:api/VirtualMachineScaleSetsApi~virtualMachineScaleSetsStartCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OperationStatusResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Starts one or more virtual machines in a VM scale set.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} vmScaleSetName The name of the VM scale set.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {Object} opts Optional parameters
     * @param {module:model/VirtualMachineScaleSetVMInstanceIDs} [vmInstanceIDs] A list of virtual machine instance IDs from the VM scale set.
     * @param {module:api/VirtualMachineScaleSetsApi~virtualMachineScaleSetsStartCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OperationStatusResponse}
     */
    virtualMachineScaleSetsStart(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, opts, callback) {
      opts = opts || {};
      let postBody = opts['vmInstanceIDs'];
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetsStart");
      }
      // verify the required parameter 'vmScaleSetName' is set
      if (vmScaleSetName === undefined || vmScaleSetName === null) {
        throw new Error("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetsStart");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetsStart");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetsStart");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'vmScaleSetName': vmScaleSetName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = OperationStatusResponse;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/start', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachineScaleSetsUpdate operation.
     * @callback module:api/VirtualMachineScaleSetsApi~virtualMachineScaleSetsUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VirtualMachineScaleSet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a VM scale set.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} vmScaleSetName The name of the VM scale set to create or update.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/VirtualMachineScaleSetUpdate} parameters The scale set object.
     * @param {module:api/VirtualMachineScaleSetsApi~virtualMachineScaleSetsUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VirtualMachineScaleSet}
     */
    virtualMachineScaleSetsUpdate(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetsUpdate");
      }
      // verify the required parameter 'vmScaleSetName' is set
      if (vmScaleSetName === undefined || vmScaleSetName === null) {
        throw new Error("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetsUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetsUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetsUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling virtualMachineScaleSetsUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'vmScaleSetName': vmScaleSetName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = VirtualMachineScaleSet;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachineScaleSetsUpdateInstances operation.
     * @callback module:api/VirtualMachineScaleSetsApi~virtualMachineScaleSetsUpdateInstancesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OperationStatusResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Upgrades one or more virtual machines to the latest SKU set in the VM scale set model.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} vmScaleSetName The name of the VM scale set.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/VirtualMachineScaleSetVMInstanceRequiredIDs} vmInstanceIDs A list of virtual machine instance IDs from the VM scale set.
     * @param {module:api/VirtualMachineScaleSetsApi~virtualMachineScaleSetsUpdateInstancesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OperationStatusResponse}
     */
    virtualMachineScaleSetsUpdateInstances(resourceGroupName, vmScaleSetName, apiVersion, subscriptionId, vmInstanceIDs, callback) {
      let postBody = vmInstanceIDs;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachineScaleSetsUpdateInstances");
      }
      // verify the required parameter 'vmScaleSetName' is set
      if (vmScaleSetName === undefined || vmScaleSetName === null) {
        throw new Error("Missing the required parameter 'vmScaleSetName' when calling virtualMachineScaleSetsUpdateInstances");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachineScaleSetsUpdateInstances");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachineScaleSetsUpdateInstances");
      }
      // verify the required parameter 'vmInstanceIDs' is set
      if (vmInstanceIDs === undefined || vmInstanceIDs === null) {
        throw new Error("Missing the required parameter 'vmInstanceIDs' when calling virtualMachineScaleSetsUpdateInstances");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'vmScaleSetName': vmScaleSetName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = OperationStatusResponse;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/manualupgrade', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
