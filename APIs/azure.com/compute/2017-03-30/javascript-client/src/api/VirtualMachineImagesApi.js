/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2017-03-30
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import VirtualMachineImage from '../model/VirtualMachineImage';
import VirtualMachineImageResource from '../model/VirtualMachineImageResource';

/**
* VirtualMachineImages service.
* @module api/VirtualMachineImagesApi
* @version 2017-03-30
*/
export default class VirtualMachineImagesApi {

    /**
    * Constructs a new VirtualMachineImagesApi. 
    * @alias module:api/VirtualMachineImagesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the virtualMachineImagesGet operation.
     * @callback module:api/VirtualMachineImagesApi~virtualMachineImagesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VirtualMachineImage} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a virtual machine image.
     * @param {String} location The name of a supported Azure region.
     * @param {String} publisherName A valid image publisher.
     * @param {String} offer A valid image publisher offer.
     * @param {String} skus A valid image SKU.
     * @param {String} version A valid image SKU version.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualMachineImagesApi~virtualMachineImagesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VirtualMachineImage}
     */
    virtualMachineImagesGet(location, publisherName, offer, skus, version, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'location' is set
      if (location === undefined || location === null) {
        throw new Error("Missing the required parameter 'location' when calling virtualMachineImagesGet");
      }
      // verify the required parameter 'publisherName' is set
      if (publisherName === undefined || publisherName === null) {
        throw new Error("Missing the required parameter 'publisherName' when calling virtualMachineImagesGet");
      }
      // verify the required parameter 'offer' is set
      if (offer === undefined || offer === null) {
        throw new Error("Missing the required parameter 'offer' when calling virtualMachineImagesGet");
      }
      // verify the required parameter 'skus' is set
      if (skus === undefined || skus === null) {
        throw new Error("Missing the required parameter 'skus' when calling virtualMachineImagesGet");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling virtualMachineImagesGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachineImagesGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachineImagesGet");
      }

      let pathParams = {
        'location': location,
        'publisherName': publisherName,
        'offer': offer,
        'skus': skus,
        'version': version,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VirtualMachineImage;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/publishers/{publisherName}/artifacttypes/vmimage/offers/{offer}/skus/{skus}/versions/{version}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachineImagesList operation.
     * @callback module:api/VirtualMachineImagesApi~virtualMachineImagesListCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/VirtualMachineImageResource>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a list of all virtual machine image versions for the specified location, publisher, offer, and SKU.
     * @param {String} location The name of a supported Azure region.
     * @param {String} publisherName A valid image publisher.
     * @param {String} offer A valid image publisher offer.
     * @param {String} skus A valid image SKU.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {Object} opts Optional parameters
     * @param {String} [filter] The filter to apply on the operation.
     * @param {Number} [top] 
     * @param {String} [orderby] 
     * @param {module:api/VirtualMachineImagesApi~virtualMachineImagesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/VirtualMachineImageResource>}
     */
    virtualMachineImagesList(location, publisherName, offer, skus, apiVersion, subscriptionId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'location' is set
      if (location === undefined || location === null) {
        throw new Error("Missing the required parameter 'location' when calling virtualMachineImagesList");
      }
      // verify the required parameter 'publisherName' is set
      if (publisherName === undefined || publisherName === null) {
        throw new Error("Missing the required parameter 'publisherName' when calling virtualMachineImagesList");
      }
      // verify the required parameter 'offer' is set
      if (offer === undefined || offer === null) {
        throw new Error("Missing the required parameter 'offer' when calling virtualMachineImagesList");
      }
      // verify the required parameter 'skus' is set
      if (skus === undefined || skus === null) {
        throw new Error("Missing the required parameter 'skus' when calling virtualMachineImagesList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachineImagesList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachineImagesList");
      }

      let pathParams = {
        'location': location,
        'publisherName': publisherName,
        'offer': offer,
        'skus': skus,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        '$filter': opts['filter'],
        '$top': opts['top'],
        '$orderby': opts['orderby'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [VirtualMachineImageResource];
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/publishers/{publisherName}/artifacttypes/vmimage/offers/{offer}/skus/{skus}/versions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachineImagesListOffers operation.
     * @callback module:api/VirtualMachineImagesApi~virtualMachineImagesListOffersCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/VirtualMachineImageResource>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a list of virtual machine image offers for the specified location and publisher.
     * @param {String} location The name of a supported Azure region.
     * @param {String} publisherName A valid image publisher.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualMachineImagesApi~virtualMachineImagesListOffersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/VirtualMachineImageResource>}
     */
    virtualMachineImagesListOffers(location, publisherName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'location' is set
      if (location === undefined || location === null) {
        throw new Error("Missing the required parameter 'location' when calling virtualMachineImagesListOffers");
      }
      // verify the required parameter 'publisherName' is set
      if (publisherName === undefined || publisherName === null) {
        throw new Error("Missing the required parameter 'publisherName' when calling virtualMachineImagesListOffers");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachineImagesListOffers");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachineImagesListOffers");
      }

      let pathParams = {
        'location': location,
        'publisherName': publisherName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [VirtualMachineImageResource];
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/publishers/{publisherName}/artifacttypes/vmimage/offers', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachineImagesListPublishers operation.
     * @callback module:api/VirtualMachineImagesApi~virtualMachineImagesListPublishersCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/VirtualMachineImageResource>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a list of virtual machine image publishers for the specified Azure location.
     * @param {String} location The name of a supported Azure region.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualMachineImagesApi~virtualMachineImagesListPublishersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/VirtualMachineImageResource>}
     */
    virtualMachineImagesListPublishers(location, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'location' is set
      if (location === undefined || location === null) {
        throw new Error("Missing the required parameter 'location' when calling virtualMachineImagesListPublishers");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachineImagesListPublishers");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachineImagesListPublishers");
      }

      let pathParams = {
        'location': location,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [VirtualMachineImageResource];
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/publishers', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachineImagesListSkus operation.
     * @callback module:api/VirtualMachineImagesApi~virtualMachineImagesListSkusCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/VirtualMachineImageResource>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a list of virtual machine image SKUs for the specified location, publisher, and offer.
     * @param {String} location The name of a supported Azure region.
     * @param {String} publisherName A valid image publisher.
     * @param {String} offer A valid image publisher offer.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualMachineImagesApi~virtualMachineImagesListSkusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/VirtualMachineImageResource>}
     */
    virtualMachineImagesListSkus(location, publisherName, offer, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'location' is set
      if (location === undefined || location === null) {
        throw new Error("Missing the required parameter 'location' when calling virtualMachineImagesListSkus");
      }
      // verify the required parameter 'publisherName' is set
      if (publisherName === undefined || publisherName === null) {
        throw new Error("Missing the required parameter 'publisherName' when calling virtualMachineImagesListSkus");
      }
      // verify the required parameter 'offer' is set
      if (offer === undefined || offer === null) {
        throw new Error("Missing the required parameter 'offer' when calling virtualMachineImagesListSkus");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachineImagesListSkus");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachineImagesListSkus");
      }

      let pathParams = {
        'location': location,
        'publisherName': publisherName,
        'offer': offer,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [VirtualMachineImageResource];
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/publishers/{publisherName}/artifacttypes/vmimage/offers/{offer}/skus', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
