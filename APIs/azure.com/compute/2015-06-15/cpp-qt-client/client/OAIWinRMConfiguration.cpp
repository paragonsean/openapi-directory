/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2015-06-15
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWinRMConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWinRMConfiguration::OAIWinRMConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWinRMConfiguration::OAIWinRMConfiguration() {
    this->initializeModel();
}

OAIWinRMConfiguration::~OAIWinRMConfiguration() {}

void OAIWinRMConfiguration::initializeModel() {

    m_listeners_isSet = false;
    m_listeners_isValid = false;
}

void OAIWinRMConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWinRMConfiguration::fromJsonObject(QJsonObject json) {

    m_listeners_isValid = ::OpenAPI::fromJsonValue(m_listeners, json[QString("listeners")]);
    m_listeners_isSet = !json[QString("listeners")].isNull() && m_listeners_isValid;
}

QString OAIWinRMConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWinRMConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_listeners.size() > 0) {
        obj.insert(QString("listeners"), ::OpenAPI::toJsonValue(m_listeners));
    }
    return obj;
}

QList<OAIWinRMListener> OAIWinRMConfiguration::getListeners() const {
    return m_listeners;
}
void OAIWinRMConfiguration::setListeners(const QList<OAIWinRMListener> &listeners) {
    m_listeners = listeners;
    m_listeners_isSet = true;
}

bool OAIWinRMConfiguration::is_listeners_Set() const{
    return m_listeners_isSet;
}

bool OAIWinRMConfiguration::is_listeners_Valid() const{
    return m_listeners_isValid;
}

bool OAIWinRMConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_listeners.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWinRMConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
