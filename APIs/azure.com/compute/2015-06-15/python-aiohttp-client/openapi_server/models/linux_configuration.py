# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ssh_configuration import SshConfiguration
from openapi_server import util


class LinuxConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, disable_password_authentication: bool=None, ssh: SshConfiguration=None):
        """LinuxConfiguration - a model defined in OpenAPI

        :param disable_password_authentication: The disable_password_authentication of this LinuxConfiguration.
        :param ssh: The ssh of this LinuxConfiguration.
        """
        self.openapi_types = {
            'disable_password_authentication': bool,
            'ssh': SshConfiguration
        }

        self.attribute_map = {
            'disable_password_authentication': 'disablePasswordAuthentication',
            'ssh': 'ssh'
        }

        self._disable_password_authentication = disable_password_authentication
        self._ssh = ssh

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LinuxConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LinuxConfiguration of this LinuxConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def disable_password_authentication(self):
        """Gets the disable_password_authentication of this LinuxConfiguration.

        Specifies whether password authentication should be disabled.

        :return: The disable_password_authentication of this LinuxConfiguration.
        :rtype: bool
        """
        return self._disable_password_authentication

    @disable_password_authentication.setter
    def disable_password_authentication(self, disable_password_authentication):
        """Sets the disable_password_authentication of this LinuxConfiguration.

        Specifies whether password authentication should be disabled.

        :param disable_password_authentication: The disable_password_authentication of this LinuxConfiguration.
        :type disable_password_authentication: bool
        """

        self._disable_password_authentication = disable_password_authentication

    @property
    def ssh(self):
        """Gets the ssh of this LinuxConfiguration.


        :return: The ssh of this LinuxConfiguration.
        :rtype: SshConfiguration
        """
        return self._ssh

    @ssh.setter
    def ssh(self, ssh):
        """Sets the ssh of this LinuxConfiguration.


        :param ssh: The ssh of this LinuxConfiguration.
        :type ssh: SshConfiguration
        """

        self._ssh = ssh
