/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2015-06-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SubResource from './SubResource';

/**
 * The KeyVaultSecretReference model module.
 * @module model/KeyVaultSecretReference
 * @version 2015-06-15
 */
class KeyVaultSecretReference {
    /**
     * Constructs a new <code>KeyVaultSecretReference</code>.
     * Describes a reference to Key Vault Secret
     * @alias module:model/KeyVaultSecretReference
     * @param secretUrl {String} The URL referencing a secret in a Key Vault.
     * @param sourceVault {module:model/SubResource} 
     */
    constructor(secretUrl, sourceVault) { 
        
        KeyVaultSecretReference.initialize(this, secretUrl, sourceVault);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, secretUrl, sourceVault) { 
        obj['secretUrl'] = secretUrl;
        obj['sourceVault'] = sourceVault;
    }

    /**
     * Constructs a <code>KeyVaultSecretReference</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/KeyVaultSecretReference} obj Optional instance to populate.
     * @return {module:model/KeyVaultSecretReference} The populated <code>KeyVaultSecretReference</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new KeyVaultSecretReference();

            if (data.hasOwnProperty('secretUrl')) {
                obj['secretUrl'] = ApiClient.convertToType(data['secretUrl'], 'String');
            }
            if (data.hasOwnProperty('sourceVault')) {
                obj['sourceVault'] = SubResource.constructFromObject(data['sourceVault']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>KeyVaultSecretReference</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>KeyVaultSecretReference</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of KeyVaultSecretReference.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['secretUrl'] && !(typeof data['secretUrl'] === 'string' || data['secretUrl'] instanceof String)) {
            throw new Error("Expected the field `secretUrl` to be a primitive type in the JSON string but got " + data['secretUrl']);
        }
        // validate the optional field `sourceVault`
        if (data['sourceVault']) { // data not null
          SubResource.validateJSON(data['sourceVault']);
        }

        return true;
    }


}

KeyVaultSecretReference.RequiredProperties = ["secretUrl", "sourceVault"];

/**
 * The URL referencing a secret in a Key Vault.
 * @member {String} secretUrl
 */
KeyVaultSecretReference.prototype['secretUrl'] = undefined;

/**
 * @member {module:model/SubResource} sourceVault
 */
KeyVaultSecretReference.prototype['sourceVault'] = undefined;






export default KeyVaultSecretReference;

