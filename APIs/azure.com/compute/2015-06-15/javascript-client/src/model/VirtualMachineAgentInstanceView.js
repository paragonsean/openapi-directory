/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2015-06-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InstanceViewStatus from './InstanceViewStatus';
import VirtualMachineExtensionHandlerInstanceView from './VirtualMachineExtensionHandlerInstanceView';

/**
 * The VirtualMachineAgentInstanceView model module.
 * @module model/VirtualMachineAgentInstanceView
 * @version 2015-06-15
 */
class VirtualMachineAgentInstanceView {
    /**
     * Constructs a new <code>VirtualMachineAgentInstanceView</code>.
     * The instance view of the VM Agent running on the virtual machine.
     * @alias module:model/VirtualMachineAgentInstanceView
     */
    constructor() { 
        
        VirtualMachineAgentInstanceView.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VirtualMachineAgentInstanceView</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VirtualMachineAgentInstanceView} obj Optional instance to populate.
     * @return {module:model/VirtualMachineAgentInstanceView} The populated <code>VirtualMachineAgentInstanceView</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VirtualMachineAgentInstanceView();

            if (data.hasOwnProperty('extensionHandlers')) {
                obj['extensionHandlers'] = ApiClient.convertToType(data['extensionHandlers'], [VirtualMachineExtensionHandlerInstanceView]);
            }
            if (data.hasOwnProperty('statuses')) {
                obj['statuses'] = ApiClient.convertToType(data['statuses'], [InstanceViewStatus]);
            }
            if (data.hasOwnProperty('vmAgentVersion')) {
                obj['vmAgentVersion'] = ApiClient.convertToType(data['vmAgentVersion'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VirtualMachineAgentInstanceView</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VirtualMachineAgentInstanceView</code>.
     */
    static validateJSON(data) {
        if (data['extensionHandlers']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['extensionHandlers'])) {
                throw new Error("Expected the field `extensionHandlers` to be an array in the JSON data but got " + data['extensionHandlers']);
            }
            // validate the optional field `extensionHandlers` (array)
            for (const item of data['extensionHandlers']) {
                VirtualMachineExtensionHandlerInstanceView.validateJSON(item);
            };
        }
        if (data['statuses']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['statuses'])) {
                throw new Error("Expected the field `statuses` to be an array in the JSON data but got " + data['statuses']);
            }
            // validate the optional field `statuses` (array)
            for (const item of data['statuses']) {
                InstanceViewStatus.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['vmAgentVersion'] && !(typeof data['vmAgentVersion'] === 'string' || data['vmAgentVersion'] instanceof String)) {
            throw new Error("Expected the field `vmAgentVersion` to be a primitive type in the JSON string but got " + data['vmAgentVersion']);
        }

        return true;
    }


}



/**
 * The virtual machine extension handler instance view.
 * @member {Array.<module:model/VirtualMachineExtensionHandlerInstanceView>} extensionHandlers
 */
VirtualMachineAgentInstanceView.prototype['extensionHandlers'] = undefined;

/**
 * The resource status information.
 * @member {Array.<module:model/InstanceViewStatus>} statuses
 */
VirtualMachineAgentInstanceView.prototype['statuses'] = undefined;

/**
 * The VM Agent full version.
 * @member {String} vmAgentVersion
 */
VirtualMachineAgentInstanceView.prototype['vmAgentVersion'] = undefined;






export default VirtualMachineAgentInstanceView;

