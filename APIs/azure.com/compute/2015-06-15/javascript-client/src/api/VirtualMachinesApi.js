/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2015-06-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import OperationStatusResponse from '../model/OperationStatusResponse';
import VirtualMachine from '../model/VirtualMachine';
import VirtualMachineCaptureParameters from '../model/VirtualMachineCaptureParameters';
import VirtualMachineCaptureResult from '../model/VirtualMachineCaptureResult';
import VirtualMachineListResult from '../model/VirtualMachineListResult';
import VirtualMachineSizeListResult from '../model/VirtualMachineSizeListResult';

/**
* VirtualMachines service.
* @module api/VirtualMachinesApi
* @version 2015-06-15
*/
export default class VirtualMachinesApi {

    /**
    * Constructs a new VirtualMachinesApi. 
    * @alias module:api/VirtualMachinesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the virtualMachinesCapture operation.
     * @callback module:api/VirtualMachinesApi~virtualMachinesCaptureCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VirtualMachineCaptureResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Captures the VM by copying virtual hard disks of the VM and outputs a template that can be used to create similar VMs.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} vmName The name of the virtual machine.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/VirtualMachineCaptureParameters} parameters Parameters supplied to the Capture Virtual Machine operation.
     * @param {module:api/VirtualMachinesApi~virtualMachinesCaptureCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VirtualMachineCaptureResult}
     */
    virtualMachinesCapture(resourceGroupName, vmName, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachinesCapture");
      }
      // verify the required parameter 'vmName' is set
      if (vmName === undefined || vmName === null) {
        throw new Error("Missing the required parameter 'vmName' when calling virtualMachinesCapture");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachinesCapture");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachinesCapture");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling virtualMachinesCapture");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'vmName': vmName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = VirtualMachineCaptureResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/capture', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachinesCreateOrUpdate operation.
     * @callback module:api/VirtualMachinesApi~virtualMachinesCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VirtualMachine} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The operation to create or update a virtual machine.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} vmName The name of the virtual machine.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/VirtualMachine} parameters Parameters supplied to the Create Virtual Machine operation.
     * @param {module:api/VirtualMachinesApi~virtualMachinesCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VirtualMachine}
     */
    virtualMachinesCreateOrUpdate(resourceGroupName, vmName, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachinesCreateOrUpdate");
      }
      // verify the required parameter 'vmName' is set
      if (vmName === undefined || vmName === null) {
        throw new Error("Missing the required parameter 'vmName' when calling virtualMachinesCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachinesCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachinesCreateOrUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling virtualMachinesCreateOrUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'vmName': vmName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = VirtualMachine;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachinesDeallocate operation.
     * @callback module:api/VirtualMachinesApi~virtualMachinesDeallocateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OperationStatusResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Shuts down the virtual machine and releases the compute resources. You are not billed for the compute resources that this virtual machine uses.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} vmName The name of the virtual machine.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualMachinesApi~virtualMachinesDeallocateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OperationStatusResponse}
     */
    virtualMachinesDeallocate(resourceGroupName, vmName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachinesDeallocate");
      }
      // verify the required parameter 'vmName' is set
      if (vmName === undefined || vmName === null) {
        throw new Error("Missing the required parameter 'vmName' when calling virtualMachinesDeallocate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachinesDeallocate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachinesDeallocate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'vmName': vmName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = OperationStatusResponse;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/deallocate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachinesDelete operation.
     * @callback module:api/VirtualMachinesApi~virtualMachinesDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OperationStatusResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The operation to delete a virtual machine.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} vmName The name of the virtual machine.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualMachinesApi~virtualMachinesDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OperationStatusResponse}
     */
    virtualMachinesDelete(resourceGroupName, vmName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachinesDelete");
      }
      // verify the required parameter 'vmName' is set
      if (vmName === undefined || vmName === null) {
        throw new Error("Missing the required parameter 'vmName' when calling virtualMachinesDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachinesDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachinesDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'vmName': vmName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = OperationStatusResponse;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachinesGeneralize operation.
     * @callback module:api/VirtualMachinesApi~virtualMachinesGeneralizeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OperationStatusResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Sets the state of the virtual machine to generalized.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} vmName The name of the virtual machine.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualMachinesApi~virtualMachinesGeneralizeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OperationStatusResponse}
     */
    virtualMachinesGeneralize(resourceGroupName, vmName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachinesGeneralize");
      }
      // verify the required parameter 'vmName' is set
      if (vmName === undefined || vmName === null) {
        throw new Error("Missing the required parameter 'vmName' when calling virtualMachinesGeneralize");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachinesGeneralize");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachinesGeneralize");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'vmName': vmName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = OperationStatusResponse;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/generalize', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachinesGet operation.
     * @callback module:api/VirtualMachinesApi~virtualMachinesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VirtualMachine} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves information about the model view or the instance view of a virtual machine.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} vmName The name of the virtual machine.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [expand] The expand expression to apply on the operation.
     * @param {module:api/VirtualMachinesApi~virtualMachinesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VirtualMachine}
     */
    virtualMachinesGet(resourceGroupName, vmName, apiVersion, subscriptionId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachinesGet");
      }
      // verify the required parameter 'vmName' is set
      if (vmName === undefined || vmName === null) {
        throw new Error("Missing the required parameter 'vmName' when calling virtualMachinesGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachinesGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachinesGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'vmName': vmName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        '$expand': opts['expand'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VirtualMachine;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachinesList operation.
     * @callback module:api/VirtualMachinesApi~virtualMachinesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VirtualMachineListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all of the virtual machines in the specified resource group. Use the nextLink property in the response to get the next page of virtual machines.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualMachinesApi~virtualMachinesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VirtualMachineListResult}
     */
    virtualMachinesList(resourceGroupName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachinesList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachinesList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachinesList");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VirtualMachineListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachinesListAll operation.
     * @callback module:api/VirtualMachinesApi~virtualMachinesListAllCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VirtualMachineListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all of the virtual machines in the specified subscription. Use the nextLink property in the response to get the next page of virtual machines.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualMachinesApi~virtualMachinesListAllCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VirtualMachineListResult}
     */
    virtualMachinesListAll(apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachinesListAll");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachinesListAll");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VirtualMachineListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Compute/virtualMachines', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachinesListAvailableSizes operation.
     * @callback module:api/VirtualMachinesApi~virtualMachinesListAvailableSizesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VirtualMachineSizeListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all available virtual machine sizes to which the specified virtual machine can be resized.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} vmName The name of the virtual machine.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualMachinesApi~virtualMachinesListAvailableSizesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VirtualMachineSizeListResult}
     */
    virtualMachinesListAvailableSizes(resourceGroupName, vmName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachinesListAvailableSizes");
      }
      // verify the required parameter 'vmName' is set
      if (vmName === undefined || vmName === null) {
        throw new Error("Missing the required parameter 'vmName' when calling virtualMachinesListAvailableSizes");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachinesListAvailableSizes");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachinesListAvailableSizes");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'vmName': vmName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VirtualMachineSizeListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/vmSizes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachinesPowerOff operation.
     * @callback module:api/VirtualMachinesApi~virtualMachinesPowerOffCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OperationStatusResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The operation to power off (stop) a virtual machine. The virtual machine can be restarted with the same provisioned resources. You are still charged for this virtual machine.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} vmName The name of the virtual machine.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualMachinesApi~virtualMachinesPowerOffCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OperationStatusResponse}
     */
    virtualMachinesPowerOff(resourceGroupName, vmName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachinesPowerOff");
      }
      // verify the required parameter 'vmName' is set
      if (vmName === undefined || vmName === null) {
        throw new Error("Missing the required parameter 'vmName' when calling virtualMachinesPowerOff");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachinesPowerOff");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachinesPowerOff");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'vmName': vmName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = OperationStatusResponse;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/powerOff', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachinesRedeploy operation.
     * @callback module:api/VirtualMachinesApi~virtualMachinesRedeployCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OperationStatusResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Shuts down the virtual machine, moves it to a new node, and powers it back on.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} vmName The name of the virtual machine.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualMachinesApi~virtualMachinesRedeployCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OperationStatusResponse}
     */
    virtualMachinesRedeploy(resourceGroupName, vmName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachinesRedeploy");
      }
      // verify the required parameter 'vmName' is set
      if (vmName === undefined || vmName === null) {
        throw new Error("Missing the required parameter 'vmName' when calling virtualMachinesRedeploy");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachinesRedeploy");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachinesRedeploy");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'vmName': vmName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = OperationStatusResponse;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/redeploy', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachinesRestart operation.
     * @callback module:api/VirtualMachinesApi~virtualMachinesRestartCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OperationStatusResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The operation to restart a virtual machine.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} vmName The name of the virtual machine.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualMachinesApi~virtualMachinesRestartCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OperationStatusResponse}
     */
    virtualMachinesRestart(resourceGroupName, vmName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachinesRestart");
      }
      // verify the required parameter 'vmName' is set
      if (vmName === undefined || vmName === null) {
        throw new Error("Missing the required parameter 'vmName' when calling virtualMachinesRestart");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachinesRestart");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachinesRestart");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'vmName': vmName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = OperationStatusResponse;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/restart', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualMachinesStart operation.
     * @callback module:api/VirtualMachinesApi~virtualMachinesStartCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OperationStatusResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The operation to start a virtual machine.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} vmName The name of the virtual machine.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualMachinesApi~virtualMachinesStartCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OperationStatusResponse}
     */
    virtualMachinesStart(resourceGroupName, vmName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualMachinesStart");
      }
      // verify the required parameter 'vmName' is set
      if (vmName === undefined || vmName === null) {
        throw new Error("Missing the required parameter 'vmName' when calling virtualMachinesStart");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualMachinesStart");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualMachinesStart");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'vmName': vmName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = OperationStatusResponse;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/start', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
