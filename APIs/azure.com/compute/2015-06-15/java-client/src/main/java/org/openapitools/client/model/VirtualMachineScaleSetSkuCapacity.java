/*
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2015-06-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Describes scaling information of a sku.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:49:29.108852-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class VirtualMachineScaleSetSkuCapacity {
  public static final String SERIALIZED_NAME_DEFAULT_CAPACITY = "defaultCapacity";
  @SerializedName(SERIALIZED_NAME_DEFAULT_CAPACITY)
  private Long defaultCapacity;

  public static final String SERIALIZED_NAME_MAXIMUM = "maximum";
  @SerializedName(SERIALIZED_NAME_MAXIMUM)
  private Long maximum;

  public static final String SERIALIZED_NAME_MINIMUM = "minimum";
  @SerializedName(SERIALIZED_NAME_MINIMUM)
  private Long minimum;

  /**
   * The scale type applicable to the sku.
   */
  @JsonAdapter(ScaleTypeEnum.Adapter.class)
  public enum ScaleTypeEnum {
    AUTOMATIC("Automatic"),
    
    NONE("None");

    private String value;

    ScaleTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ScaleTypeEnum fromValue(String value) {
      for (ScaleTypeEnum b : ScaleTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ScaleTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ScaleTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ScaleTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ScaleTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ScaleTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_SCALE_TYPE = "scaleType";
  @SerializedName(SERIALIZED_NAME_SCALE_TYPE)
  private ScaleTypeEnum scaleType;

  public VirtualMachineScaleSetSkuCapacity() {
  }

  public VirtualMachineScaleSetSkuCapacity(
     Long defaultCapacity, 
     Long maximum, 
     Long minimum, 
     ScaleTypeEnum scaleType
  ) {
    this();
    this.defaultCapacity = defaultCapacity;
    this.maximum = maximum;
    this.minimum = minimum;
    this.scaleType = scaleType;
  }

  /**
   * The default capacity.
   * @return defaultCapacity
   */
  @javax.annotation.Nullable
  public Long getDefaultCapacity() {
    return defaultCapacity;
  }



  /**
   * The maximum capacity that can be set.
   * @return maximum
   */
  @javax.annotation.Nullable
  public Long getMaximum() {
    return maximum;
  }



  /**
   * The minimum capacity.
   * @return minimum
   */
  @javax.annotation.Nullable
  public Long getMinimum() {
    return minimum;
  }



  /**
   * The scale type applicable to the sku.
   * @return scaleType
   */
  @javax.annotation.Nullable
  public ScaleTypeEnum getScaleType() {
    return scaleType;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VirtualMachineScaleSetSkuCapacity virtualMachineScaleSetSkuCapacity = (VirtualMachineScaleSetSkuCapacity) o;
    return Objects.equals(this.defaultCapacity, virtualMachineScaleSetSkuCapacity.defaultCapacity) &&
        Objects.equals(this.maximum, virtualMachineScaleSetSkuCapacity.maximum) &&
        Objects.equals(this.minimum, virtualMachineScaleSetSkuCapacity.minimum) &&
        Objects.equals(this.scaleType, virtualMachineScaleSetSkuCapacity.scaleType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(defaultCapacity, maximum, minimum, scaleType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VirtualMachineScaleSetSkuCapacity {\n");
    sb.append("    defaultCapacity: ").append(toIndentedString(defaultCapacity)).append("\n");
    sb.append("    maximum: ").append(toIndentedString(maximum)).append("\n");
    sb.append("    minimum: ").append(toIndentedString(minimum)).append("\n");
    sb.append("    scaleType: ").append(toIndentedString(scaleType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("defaultCapacity");
    openapiFields.add("maximum");
    openapiFields.add("minimum");
    openapiFields.add("scaleType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to VirtualMachineScaleSetSkuCapacity
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!VirtualMachineScaleSetSkuCapacity.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in VirtualMachineScaleSetSkuCapacity is not found in the empty JSON string", VirtualMachineScaleSetSkuCapacity.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!VirtualMachineScaleSetSkuCapacity.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `VirtualMachineScaleSetSkuCapacity` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("scaleType") != null && !jsonObj.get("scaleType").isJsonNull()) && !jsonObj.get("scaleType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `scaleType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("scaleType").toString()));
      }
      // validate the optional field `scaleType`
      if (jsonObj.get("scaleType") != null && !jsonObj.get("scaleType").isJsonNull()) {
        ScaleTypeEnum.validateJsonElement(jsonObj.get("scaleType"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!VirtualMachineScaleSetSkuCapacity.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'VirtualMachineScaleSetSkuCapacity' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<VirtualMachineScaleSetSkuCapacity> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(VirtualMachineScaleSetSkuCapacity.class));

       return (TypeAdapter<T>) new TypeAdapter<VirtualMachineScaleSetSkuCapacity>() {
           @Override
           public void write(JsonWriter out, VirtualMachineScaleSetSkuCapacity value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public VirtualMachineScaleSetSkuCapacity read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of VirtualMachineScaleSetSkuCapacity given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of VirtualMachineScaleSetSkuCapacity
   * @throws IOException if the JSON string is invalid with respect to VirtualMachineScaleSetSkuCapacity
   */
  public static VirtualMachineScaleSetSkuCapacity fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, VirtualMachineScaleSetSkuCapacity.class);
  }

  /**
   * Convert an instance of VirtualMachineScaleSetSkuCapacity to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

