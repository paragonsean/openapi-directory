/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2016-04-30-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ImageDataDisk from './ImageDataDisk';
import ImageOSDisk from './ImageOSDisk';

/**
 * The ImageStorageProfile model module.
 * @module model/ImageStorageProfile
 * @version 2016-04-30-preview
 */
class ImageStorageProfile {
    /**
     * Constructs a new <code>ImageStorageProfile</code>.
     * Describes a storage profile.
     * @alias module:model/ImageStorageProfile
     * @param osDisk {module:model/ImageOSDisk} 
     */
    constructor(osDisk) { 
        
        ImageStorageProfile.initialize(this, osDisk);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, osDisk) { 
        obj['osDisk'] = osDisk;
    }

    /**
     * Constructs a <code>ImageStorageProfile</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ImageStorageProfile} obj Optional instance to populate.
     * @return {module:model/ImageStorageProfile} The populated <code>ImageStorageProfile</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ImageStorageProfile();

            if (data.hasOwnProperty('dataDisks')) {
                obj['dataDisks'] = ApiClient.convertToType(data['dataDisks'], [ImageDataDisk]);
            }
            if (data.hasOwnProperty('osDisk')) {
                obj['osDisk'] = ImageOSDisk.constructFromObject(data['osDisk']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ImageStorageProfile</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ImageStorageProfile</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ImageStorageProfile.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['dataDisks']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['dataDisks'])) {
                throw new Error("Expected the field `dataDisks` to be an array in the JSON data but got " + data['dataDisks']);
            }
            // validate the optional field `dataDisks` (array)
            for (const item of data['dataDisks']) {
                ImageDataDisk.validateJSON(item);
            };
        }
        // validate the optional field `osDisk`
        if (data['osDisk']) { // data not null
          ImageOSDisk.validateJSON(data['osDisk']);
        }

        return true;
    }


}

ImageStorageProfile.RequiredProperties = ["osDisk"];

/**
 * Specifies the parameters that are used to add a data disk to a virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
 * @member {Array.<module:model/ImageDataDisk>} dataDisks
 */
ImageStorageProfile.prototype['dataDisks'] = undefined;

/**
 * @member {module:model/ImageOSDisk} osDisk
 */
ImageStorageProfile.prototype['osDisk'] = undefined;






export default ImageStorageProfile;

