# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.image_storage_profile import ImageStorageProfile
from openapi_server.models.sub_resource import SubResource
from openapi_server import util


class ImageProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, provisioning_state: str=None, source_virtual_machine: SubResource=None, storage_profile: ImageStorageProfile=None):
        """ImageProperties - a model defined in OpenAPI

        :param provisioning_state: The provisioning_state of this ImageProperties.
        :param source_virtual_machine: The source_virtual_machine of this ImageProperties.
        :param storage_profile: The storage_profile of this ImageProperties.
        """
        self.openapi_types = {
            'provisioning_state': str,
            'source_virtual_machine': SubResource,
            'storage_profile': ImageStorageProfile
        }

        self.attribute_map = {
            'provisioning_state': 'provisioningState',
            'source_virtual_machine': 'sourceVirtualMachine',
            'storage_profile': 'storageProfile'
        }

        self._provisioning_state = provisioning_state
        self._source_virtual_machine = source_virtual_machine
        self._storage_profile = storage_profile

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImageProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImageProperties of this ImageProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this ImageProperties.

        The provisioning state.

        :return: The provisioning_state of this ImageProperties.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this ImageProperties.

        The provisioning state.

        :param provisioning_state: The provisioning_state of this ImageProperties.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state

    @property
    def source_virtual_machine(self):
        """Gets the source_virtual_machine of this ImageProperties.


        :return: The source_virtual_machine of this ImageProperties.
        :rtype: SubResource
        """
        return self._source_virtual_machine

    @source_virtual_machine.setter
    def source_virtual_machine(self, source_virtual_machine):
        """Sets the source_virtual_machine of this ImageProperties.


        :param source_virtual_machine: The source_virtual_machine of this ImageProperties.
        :type source_virtual_machine: SubResource
        """

        self._source_virtual_machine = source_virtual_machine

    @property
    def storage_profile(self):
        """Gets the storage_profile of this ImageProperties.


        :return: The storage_profile of this ImageProperties.
        :rtype: ImageStorageProfile
        """
        return self._storage_profile

    @storage_profile.setter
    def storage_profile(self, storage_profile):
        """Sets the storage_profile of this ImageProperties.


        :param storage_profile: The storage_profile of this ImageProperties.
        :type storage_profile: ImageStorageProfile
        """

        self._storage_profile = storage_profile
