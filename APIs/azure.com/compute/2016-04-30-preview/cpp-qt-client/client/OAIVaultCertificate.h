/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2016-04-30-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVaultCertificate.h
 *
 * Describes a single certificate reference in a Key Vault, and where the certificate should reside on the VM.
 */

#ifndef OAIVaultCertificate_H
#define OAIVaultCertificate_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIVaultCertificate : public OAIObject {
public:
    OAIVaultCertificate();
    OAIVaultCertificate(QString json);
    ~OAIVaultCertificate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCertificateStore() const;
    void setCertificateStore(const QString &certificate_store);
    bool is_certificate_store_Set() const;
    bool is_certificate_store_Valid() const;

    QString getCertificateUrl() const;
    void setCertificateUrl(const QString &certificate_url);
    bool is_certificate_url_Set() const;
    bool is_certificate_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_certificate_store;
    bool m_certificate_store_isSet;
    bool m_certificate_store_isValid;

    QString m_certificate_url;
    bool m_certificate_url_isSet;
    bool m_certificate_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVaultCertificate)

#endif // OAIVaultCertificate_H
