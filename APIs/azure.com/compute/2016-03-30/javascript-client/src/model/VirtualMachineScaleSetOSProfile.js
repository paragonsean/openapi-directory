/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2016-03-30
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LinuxConfiguration from './LinuxConfiguration';
import VaultSecretGroup from './VaultSecretGroup';
import WindowsConfiguration from './WindowsConfiguration';

/**
 * The VirtualMachineScaleSetOSProfile model module.
 * @module model/VirtualMachineScaleSetOSProfile
 * @version 2016-03-30
 */
class VirtualMachineScaleSetOSProfile {
    /**
     * Constructs a new <code>VirtualMachineScaleSetOSProfile</code>.
     * Describes a virtual machine scale set OS profile.
     * @alias module:model/VirtualMachineScaleSetOSProfile
     */
    constructor() { 
        
        VirtualMachineScaleSetOSProfile.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VirtualMachineScaleSetOSProfile</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VirtualMachineScaleSetOSProfile} obj Optional instance to populate.
     * @return {module:model/VirtualMachineScaleSetOSProfile} The populated <code>VirtualMachineScaleSetOSProfile</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VirtualMachineScaleSetOSProfile();

            if (data.hasOwnProperty('adminPassword')) {
                obj['adminPassword'] = ApiClient.convertToType(data['adminPassword'], 'String');
            }
            if (data.hasOwnProperty('adminUsername')) {
                obj['adminUsername'] = ApiClient.convertToType(data['adminUsername'], 'String');
            }
            if (data.hasOwnProperty('computerNamePrefix')) {
                obj['computerNamePrefix'] = ApiClient.convertToType(data['computerNamePrefix'], 'String');
            }
            if (data.hasOwnProperty('customData')) {
                obj['customData'] = ApiClient.convertToType(data['customData'], 'String');
            }
            if (data.hasOwnProperty('linuxConfiguration')) {
                obj['linuxConfiguration'] = LinuxConfiguration.constructFromObject(data['linuxConfiguration']);
            }
            if (data.hasOwnProperty('secrets')) {
                obj['secrets'] = ApiClient.convertToType(data['secrets'], [VaultSecretGroup]);
            }
            if (data.hasOwnProperty('windowsConfiguration')) {
                obj['windowsConfiguration'] = WindowsConfiguration.constructFromObject(data['windowsConfiguration']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VirtualMachineScaleSetOSProfile</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VirtualMachineScaleSetOSProfile</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['adminPassword'] && !(typeof data['adminPassword'] === 'string' || data['adminPassword'] instanceof String)) {
            throw new Error("Expected the field `adminPassword` to be a primitive type in the JSON string but got " + data['adminPassword']);
        }
        // ensure the json data is a string
        if (data['adminUsername'] && !(typeof data['adminUsername'] === 'string' || data['adminUsername'] instanceof String)) {
            throw new Error("Expected the field `adminUsername` to be a primitive type in the JSON string but got " + data['adminUsername']);
        }
        // ensure the json data is a string
        if (data['computerNamePrefix'] && !(typeof data['computerNamePrefix'] === 'string' || data['computerNamePrefix'] instanceof String)) {
            throw new Error("Expected the field `computerNamePrefix` to be a primitive type in the JSON string but got " + data['computerNamePrefix']);
        }
        // ensure the json data is a string
        if (data['customData'] && !(typeof data['customData'] === 'string' || data['customData'] instanceof String)) {
            throw new Error("Expected the field `customData` to be a primitive type in the JSON string but got " + data['customData']);
        }
        // validate the optional field `linuxConfiguration`
        if (data['linuxConfiguration']) { // data not null
          LinuxConfiguration.validateJSON(data['linuxConfiguration']);
        }
        if (data['secrets']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['secrets'])) {
                throw new Error("Expected the field `secrets` to be an array in the JSON data but got " + data['secrets']);
            }
            // validate the optional field `secrets` (array)
            for (const item of data['secrets']) {
                VaultSecretGroup.validateJSON(item);
            };
        }
        // validate the optional field `windowsConfiguration`
        if (data['windowsConfiguration']) { // data not null
          WindowsConfiguration.validateJSON(data['windowsConfiguration']);
        }

        return true;
    }


}



/**
 * Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\\W_]) <br><br> **Disallowed values:** \"abc@123\", \"P@$$w0rd\", \"P@ssw0rd\", \"P@ssword123\", \"Pa$$word\", \"pass@word1\", \"Password!\", \"Password1\", \"Password22\", \"iloveyou!\" <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-reset-rdp?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-vmaccess-extension?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#reset-root-password)
 * @member {String} adminPassword
 */
VirtualMachineScaleSetOSProfile.prototype['adminPassword'] = undefined;

/**
 * Specifies the name of the administrator account. <br><br> **Windows-only restriction:** Cannot end in \".\" <br><br> **Disallowed values:** \"administrator\", \"admin\", \"user\", \"user1\", \"test\", \"user2\", \"test1\", \"user3\", \"admin1\", \"1\", \"123\", \"a\", \"actuser\", \"adm\", \"admin2\", \"aspnet\", \"backup\", \"console\", \"david\", \"guest\", \"john\", \"owner\", \"root\", \"server\", \"sql\", \"support\", \"support_388945a0\", \"sys\", \"test2\", \"test3\", \"user4\", \"user5\". <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters  <br><br><li> For root access to the Linux VM, see [Using root privileges on Linux virtual machines in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-use-root-privileges?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)<br><li> For a list of built-in system users on Linux that should not be used in this field, see [Selecting User Names for Linux on Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-usernames?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
 * @member {String} adminUsername
 */
VirtualMachineScaleSetOSProfile.prototype['adminUsername'] = undefined;

/**
 * Specifies the computer name prefix for all of the virtual machines in the scale set. Computer name prefixes must be 1 to 15 characters long.
 * @member {String} computerNamePrefix
 */
VirtualMachineScaleSetOSProfile.prototype['computerNamePrefix'] = undefined;

/**
 * A base-64 encoded string of custom data.
 * @member {String} customData
 */
VirtualMachineScaleSetOSProfile.prototype['customData'] = undefined;

/**
 * @member {module:model/LinuxConfiguration} linuxConfiguration
 */
VirtualMachineScaleSetOSProfile.prototype['linuxConfiguration'] = undefined;

/**
 * The List of certificates for addition to the VM.
 * @member {Array.<module:model/VaultSecretGroup>} secrets
 */
VirtualMachineScaleSetOSProfile.prototype['secrets'] = undefined;

/**
 * @member {module:model/WindowsConfiguration} windowsConfiguration
 */
VirtualMachineScaleSetOSProfile.prototype['windowsConfiguration'] = undefined;






export default VirtualMachineScaleSetOSProfile;

