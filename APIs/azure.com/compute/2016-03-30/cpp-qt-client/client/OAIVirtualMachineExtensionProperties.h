/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2016-03-30
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVirtualMachineExtensionProperties.h
 *
 * Describes the properties of a Virtual Machine Extension.
 */

#ifndef OAIVirtualMachineExtensionProperties_H
#define OAIVirtualMachineExtensionProperties_H

#include <QJsonObject>

#include "OAIObject.h"
#include "OAIVirtualMachineExtensionInstanceView.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIVirtualMachineExtensionInstanceView;

class OAIVirtualMachineExtensionProperties : public OAIObject {
public:
    OAIVirtualMachineExtensionProperties();
    OAIVirtualMachineExtensionProperties(QString json);
    ~OAIVirtualMachineExtensionProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAutoUpgradeMinorVersion() const;
    void setAutoUpgradeMinorVersion(const bool &auto_upgrade_minor_version);
    bool is_auto_upgrade_minor_version_Set() const;
    bool is_auto_upgrade_minor_version_Valid() const;

    QString getForceUpdateTag() const;
    void setForceUpdateTag(const QString &force_update_tag);
    bool is_force_update_tag_Set() const;
    bool is_force_update_tag_Valid() const;

    OAIVirtualMachineExtensionInstanceView getInstanceView() const;
    void setInstanceView(const OAIVirtualMachineExtensionInstanceView &instance_view);
    bool is_instance_view_Set() const;
    bool is_instance_view_Valid() const;

    OAIObject getProtectedSettings() const;
    void setProtectedSettings(const OAIObject &protected_settings);
    bool is_protected_settings_Set() const;
    bool is_protected_settings_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    QString getPublisher() const;
    void setPublisher(const QString &publisher);
    bool is_publisher_Set() const;
    bool is_publisher_Valid() const;

    OAIObject getSettings() const;
    void setSettings(const OAIObject &settings);
    bool is_settings_Set() const;
    bool is_settings_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getTypeHandlerVersion() const;
    void setTypeHandlerVersion(const QString &type_handler_version);
    bool is_type_handler_version_Set() const;
    bool is_type_handler_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_auto_upgrade_minor_version;
    bool m_auto_upgrade_minor_version_isSet;
    bool m_auto_upgrade_minor_version_isValid;

    QString m_force_update_tag;
    bool m_force_update_tag_isSet;
    bool m_force_update_tag_isValid;

    OAIVirtualMachineExtensionInstanceView m_instance_view;
    bool m_instance_view_isSet;
    bool m_instance_view_isValid;

    OAIObject m_protected_settings;
    bool m_protected_settings_isSet;
    bool m_protected_settings_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    QString m_publisher;
    bool m_publisher_isSet;
    bool m_publisher_isValid;

    OAIObject m_settings;
    bool m_settings_isSet;
    bool m_settings_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_type_handler_version;
    bool m_type_handler_version_isSet;
    bool m_type_handler_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVirtualMachineExtensionProperties)

#endif // OAIVirtualMachineExtensionProperties_H
