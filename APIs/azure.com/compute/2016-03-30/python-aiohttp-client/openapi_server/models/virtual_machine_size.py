# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VirtualMachineSize(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_data_disk_count: int=None, memory_in_mb: int=None, name: str=None, number_of_cores: int=None, os_disk_size_in_mb: int=None, resource_disk_size_in_mb: int=None):
        """VirtualMachineSize - a model defined in OpenAPI

        :param max_data_disk_count: The max_data_disk_count of this VirtualMachineSize.
        :param memory_in_mb: The memory_in_mb of this VirtualMachineSize.
        :param name: The name of this VirtualMachineSize.
        :param number_of_cores: The number_of_cores of this VirtualMachineSize.
        :param os_disk_size_in_mb: The os_disk_size_in_mb of this VirtualMachineSize.
        :param resource_disk_size_in_mb: The resource_disk_size_in_mb of this VirtualMachineSize.
        """
        self.openapi_types = {
            'max_data_disk_count': int,
            'memory_in_mb': int,
            'name': str,
            'number_of_cores': int,
            'os_disk_size_in_mb': int,
            'resource_disk_size_in_mb': int
        }

        self.attribute_map = {
            'max_data_disk_count': 'maxDataDiskCount',
            'memory_in_mb': 'memoryInMB',
            'name': 'name',
            'number_of_cores': 'numberOfCores',
            'os_disk_size_in_mb': 'osDiskSizeInMB',
            'resource_disk_size_in_mb': 'resourceDiskSizeInMB'
        }

        self._max_data_disk_count = max_data_disk_count
        self._memory_in_mb = memory_in_mb
        self._name = name
        self._number_of_cores = number_of_cores
        self._os_disk_size_in_mb = os_disk_size_in_mb
        self._resource_disk_size_in_mb = resource_disk_size_in_mb

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VirtualMachineSize':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VirtualMachineSize of this VirtualMachineSize.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_data_disk_count(self):
        """Gets the max_data_disk_count of this VirtualMachineSize.

        The maximum number of data disks that can be attached to the virtual machine size.

        :return: The max_data_disk_count of this VirtualMachineSize.
        :rtype: int
        """
        return self._max_data_disk_count

    @max_data_disk_count.setter
    def max_data_disk_count(self, max_data_disk_count):
        """Sets the max_data_disk_count of this VirtualMachineSize.

        The maximum number of data disks that can be attached to the virtual machine size.

        :param max_data_disk_count: The max_data_disk_count of this VirtualMachineSize.
        :type max_data_disk_count: int
        """

        self._max_data_disk_count = max_data_disk_count

    @property
    def memory_in_mb(self):
        """Gets the memory_in_mb of this VirtualMachineSize.

        The amount of memory, in MB, supported by the virtual machine size.

        :return: The memory_in_mb of this VirtualMachineSize.
        :rtype: int
        """
        return self._memory_in_mb

    @memory_in_mb.setter
    def memory_in_mb(self, memory_in_mb):
        """Sets the memory_in_mb of this VirtualMachineSize.

        The amount of memory, in MB, supported by the virtual machine size.

        :param memory_in_mb: The memory_in_mb of this VirtualMachineSize.
        :type memory_in_mb: int
        """

        self._memory_in_mb = memory_in_mb

    @property
    def name(self):
        """Gets the name of this VirtualMachineSize.

        The name of the virtual machine size.

        :return: The name of this VirtualMachineSize.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this VirtualMachineSize.

        The name of the virtual machine size.

        :param name: The name of this VirtualMachineSize.
        :type name: str
        """

        self._name = name

    @property
    def number_of_cores(self):
        """Gets the number_of_cores of this VirtualMachineSize.

        The number of cores supported by the virtual machine size.

        :return: The number_of_cores of this VirtualMachineSize.
        :rtype: int
        """
        return self._number_of_cores

    @number_of_cores.setter
    def number_of_cores(self, number_of_cores):
        """Sets the number_of_cores of this VirtualMachineSize.

        The number of cores supported by the virtual machine size.

        :param number_of_cores: The number_of_cores of this VirtualMachineSize.
        :type number_of_cores: int
        """

        self._number_of_cores = number_of_cores

    @property
    def os_disk_size_in_mb(self):
        """Gets the os_disk_size_in_mb of this VirtualMachineSize.

        The OS disk size, in MB, allowed by the virtual machine size.

        :return: The os_disk_size_in_mb of this VirtualMachineSize.
        :rtype: int
        """
        return self._os_disk_size_in_mb

    @os_disk_size_in_mb.setter
    def os_disk_size_in_mb(self, os_disk_size_in_mb):
        """Sets the os_disk_size_in_mb of this VirtualMachineSize.

        The OS disk size, in MB, allowed by the virtual machine size.

        :param os_disk_size_in_mb: The os_disk_size_in_mb of this VirtualMachineSize.
        :type os_disk_size_in_mb: int
        """

        self._os_disk_size_in_mb = os_disk_size_in_mb

    @property
    def resource_disk_size_in_mb(self):
        """Gets the resource_disk_size_in_mb of this VirtualMachineSize.

        The resource disk size, in MB, allowed by the virtual machine size.

        :return: The resource_disk_size_in_mb of this VirtualMachineSize.
        :rtype: int
        """
        return self._resource_disk_size_in_mb

    @resource_disk_size_in_mb.setter
    def resource_disk_size_in_mb(self, resource_disk_size_in_mb):
        """Sets the resource_disk_size_in_mb of this VirtualMachineSize.

        The resource disk size, in MB, allowed by the virtual machine size.

        :param resource_disk_size_in_mb: The resource_disk_size_in_mb of this VirtualMachineSize.
        :type resource_disk_size_in_mb: int
        """

        self._resource_disk_size_in_mb = resource_disk_size_in_mb
