# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.instance_view_status import InstanceViewStatus
from openapi_server import util


class VirtualMachineExtensionHandlerInstanceView(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, status: InstanceViewStatus=None, type: str=None, type_handler_version: str=None):
        """VirtualMachineExtensionHandlerInstanceView - a model defined in OpenAPI

        :param status: The status of this VirtualMachineExtensionHandlerInstanceView.
        :param type: The type of this VirtualMachineExtensionHandlerInstanceView.
        :param type_handler_version: The type_handler_version of this VirtualMachineExtensionHandlerInstanceView.
        """
        self.openapi_types = {
            'status': InstanceViewStatus,
            'type': str,
            'type_handler_version': str
        }

        self.attribute_map = {
            'status': 'status',
            'type': 'type',
            'type_handler_version': 'typeHandlerVersion'
        }

        self._status = status
        self._type = type
        self._type_handler_version = type_handler_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VirtualMachineExtensionHandlerInstanceView':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VirtualMachineExtensionHandlerInstanceView of this VirtualMachineExtensionHandlerInstanceView.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self):
        """Gets the status of this VirtualMachineExtensionHandlerInstanceView.


        :return: The status of this VirtualMachineExtensionHandlerInstanceView.
        :rtype: InstanceViewStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this VirtualMachineExtensionHandlerInstanceView.


        :param status: The status of this VirtualMachineExtensionHandlerInstanceView.
        :type status: InstanceViewStatus
        """

        self._status = status

    @property
    def type(self):
        """Gets the type of this VirtualMachineExtensionHandlerInstanceView.

        Specifies the type of the extension; an example is \"CustomScriptExtension\".

        :return: The type of this VirtualMachineExtensionHandlerInstanceView.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this VirtualMachineExtensionHandlerInstanceView.

        Specifies the type of the extension; an example is \"CustomScriptExtension\".

        :param type: The type of this VirtualMachineExtensionHandlerInstanceView.
        :type type: str
        """

        self._type = type

    @property
    def type_handler_version(self):
        """Gets the type_handler_version of this VirtualMachineExtensionHandlerInstanceView.

        Specifies the version of the script handler.

        :return: The type_handler_version of this VirtualMachineExtensionHandlerInstanceView.
        :rtype: str
        """
        return self._type_handler_version

    @type_handler_version.setter
    def type_handler_version(self, type_handler_version):
        """Sets the type_handler_version of this VirtualMachineExtensionHandlerInstanceView.

        Specifies the version of the script handler.

        :param type_handler_version: The type_handler_version of this VirtualMachineExtensionHandlerInstanceView.
        :type type_handler_version: str
        """

        self._type_handler_version = type_handler_version
